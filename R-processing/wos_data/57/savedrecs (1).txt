FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Falcao, F
   Lima, L
   Sampaio, A
   Antonino, P
AF Falcao, Flavia
   Lima, Lucas
   Sampaio, Augusto
   Antonino, Pedro
TI A formal component model for UML based on CSP aiming at compositional
   verification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE CSP; Component; Compositional verification; UML; Deadlock analysis
ID SPECIFICATION
AB Model-based engineering emerged as an approach to tackle the complexity of current system development. In particular, compositional strategies assume that systems can be built from reusable and loosely coupled units. However, it is still a challenge to ensure that desired properties hold for component integration. We present a component-based model for UML, including a metamodel, well-formedness conditions and formal semantics via translation into BRIC; the presentation of the semantics is given by a set of rules that cover all the metamodel elements and map them to their respective BRIC denotations. We use our previous work on BRIC as an underlying (and totally hidden) component development framework so that our approach benefits from all the formal infrastructure developed for BRIC using CSP. Component composition, specified via UML structural diagrams, ensures adherence to classical concurrent properties: our focus is on the preservation of deadlock freedom. Automated support is developed as a plug-in to the Astah modelling tool. Verification is carried out using FDR (a model checker for CSP); we address scalability using compositional reasoning (inherent to the approach) and behavioural patterns. The formal reasoning is transparent to the user: a distinguishing feature of our approach is its support for traceability. For instance, when FDR uncovers a deadlock, a sequence diagram is constructed from the deadlock trace and presented to the user at the modelling level. The overall approach is illustrated with a running example and two additional case studies.
C1 [Falcao, Flavia; Sampaio, Augusto] Univ Fed Pernambuco, Ctr Informat, Recife, Brazil.
   [Lima, Lucas] Univ Fed Rural Pernambuco, Dept Comp, Recife, Brazil.
   [Antonino, Pedro] Blockhouse Technol Ltd, Oxford, England.
C3 Universidade Federal de Pernambuco; Universidade Federal Rural de
   Pernambuco (UFRPE)
RP Falcao, F; Sampaio, A (corresponding author), Univ Fed Pernambuco, Ctr Informat, Recife, Brazil.; Lima, L (corresponding author), Univ Fed Rural Pernambuco, Dept Comp, Recife, Brazil.; Antonino, P (corresponding author), Blockhouse Technol Ltd, Oxford, England.
EM fmcf2@cin.ufpe.br; lucas.albertins@ufrpe.br; acas@cin.ufpe.br;
   prgantonino@gmail.com
OI Lima, Lucas/0000-0003-1859-8437; Ribeiro Goncalves Antonino,
   Pedro/0000-0002-5627-0910
FU We thank Sidney Nogueira, Dalay Almeida and Marcel Oliveira for
   important feedback. This work is partially funded by CNPq, Grant
   432198/2018-0. [432198/2018-0]; CNPq
FX We thank Sidney Nogueira, Dalay Almeida and Marcel Oliveira for
   important feedback. This work is partially funded by CNPq, Grant
   432198/2018-0.
CR [Anonymous], 1997, The Theory and Practice of Concurrency
   Antonino P., 2022, arXiv, DOI [10.48550/ARXIV.2207.08854, DOI 10.48550/ARXIV.2207.08854]
   Antonino P.R., 2014, P 6 INT S NASA FORM, V8430
   Antonino P, 2014, LECT NOTES COMPUT SC, V8442, P62, DOI 10.1007/978-3-319-06410-9_5
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Bonakdarpour B, 2012, DISTRIB COMPUT, V25, P383, DOI 10.1007/s00446-012-0168-6
   Booch G., 2005, The Unified Modeling Language User Guide
   Boulgakov A, 2014, LECT NOTES COMPUT SC, V8829, P11, DOI 10.1007/978-3-319-11737-9_2
   Cavalcanti A, 2018, LECT NOTES COMPUT SC, V11023, P1, DOI 10.1007/978-3-319-98938-9_1
   Chehida S, 2021, LECT NOTES COMPUT SC, V13077, P27, DOI 10.1007/978-3-030-90636-8_2
   Chen ZB, 2010, LECT NOTES COMPUT SC, V5961, P387
   Chen ZB, 2009, SCI COMPUT PROGRAM, V74, P168, DOI 10.1016/j.scico.2008.08.003
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Company B., 2022, B &o softwares
   Conserva MS, 2018, INFORM PROCESS LETT, V133, P21, DOI 10.1016/j.ipl.2017.12.011
   Falcao F., 2018, 21 BRAZ S SBMF 2018, P234
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Gibson C, 2014, PROCEDIA COMPUT SCI, V28, P146, DOI 10.1016/j.procs.2014.03.019
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gorrieri R., 2015, Introduction to Concurrency Theory: Transition Systems and CCS, V1, DOI [10.1007/978-3-319-21491-7, DOI 10.1007/978-3-319-21491-7]
   Graics B, 2020, SOFTW SYST MODEL, V19, P1483, DOI 10.1007/s10270-020-00806-5
   Grüninger M, 2003, AI MAG, V24, P63
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Horvath B., 2020, MODELS 20
   Lau K.-K., 2005, Tech. Rep.
   Lima L, 2017, SOFTW SYST MODEL, V16, P875, DOI 10.1007/s10270-015-0492-y
   ManagementGroup O., 2017, Omg unified modeling language-version 2.5.1
   Martin JeremyMalcom Randolph., 1996, The Design and Construction of Deadlock-Free Concurrent Systems. PhD thesis
   Meyers B, 2014, LECT NOTES COMPUT SC, V8706, P1, DOI 10.1007/978-3-319-11245-9_1
   Molnár V, 2018, PROC IEEE ACM INT C, P113, DOI 10.1145/3183440.3183489
   Object Management Group (OMG), 2017, Semantics of a Foundational Subset for Executable UML Models, Version 1.3. OMG Document Number formal/formal/17-07-02
   Object Management Group (OMG), 2019, OMG Document Number: formal/19-04-01
   Object Management Group (OMG), 2014, OMG document formal/2014-02-03
   Object Management Group (OMG), 2017, OMG Document Number formal/17-05-01
   Oliveira MVM, 2016, FORM ASP COMPUT, V28, P937, DOI 10.1007/s00165-016-0375-1
   Otoni R, 2017, LECT NOTES COMPUT SC, V10623, P107, DOI 10.1007/978-3-319-70848-5_8
   Pereira D.I.A., 2016, Tech. Rep
   Ramos R, 2005, LECT NOTES COMPUT SC, V3535, P99
   Ramos R.T., 2011, Systematic Development of Trustworthy Component-based Systems
   Ramos R, 2009, LECT NOTES COMPUT SC, V5850, P140, DOI 10.1007/978-3-642-05089-3_10
   Sampaio A, 2014, SOFTW TEST VERIF REL, V24, P289, DOI 10.1002/stvr.1498
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Vision C., 2022, Astah-premier diagramming, modeling software & tools
   Woodcock J. etal., 2012, 2012 7 INT C SYST SY, P1
NR 45
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 OCT 4
PY 2023
DI 10.1007/s10270-023-01127-z
EA OCT 2023
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T1DW1
UT WOS:001075471800001
DA 2024-07-18
ER

PT J
AU Neumayr, B
   Schrefl, M
AF Neumayr, Bernd
   Schrefl, Michael
TI Domain object hierarchies inducing multi-level models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Multi-level modeling; Metamodeling; Part-whole;
   Generalization; Abstraction; Concretization
AB Conceptual modeling of domain object hierarchies, such as product hierarchies or organization hierarchies, is difficult due to the intricate nature of nonphysical domain objects organized in such hierarchies. Modeling domain object hierarchies as part-whole hierarchies covers their hierarchical structure, yet to capture their meaning, part-whole hierarchies have to be combined with specialization and multi-level instantiation. To this end we introduce the deep domain object (DDO) multi-level modeling pattern and approach. With the DDO approach, subclasses and metaclasses are induced by and integrated with the part-whole hierarchy. The approach is aligned with the multi-level theory (MLT) and formalized by a metamodel and a set of deductive rules implemented in F-Logic. The proof-of-concept prototype is used for automated application of the pattern and for querying induced multi-level models.
C1 [Neumayr, Bernd; Schrefl, Michael] Johannes Kepler Univ Linz, Linz, Austria.
C3 Johannes Kepler University Linz
RP Neumayr, B (corresponding author), Johannes Kepler Univ Linz, Linz, Austria.
EM bernd.neumayr@jku.at
OI Neumayr, Bernd/0000-0003-1551-172X
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR [Anonymous], 2005, Ontological foundations for structural conceptual models
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, INFORM SOFTWARE TECH, V64, P36, DOI 10.1016/j.infsof.2015.03.010
   Balaban M, 2018, LECT NOTES COMPUT SC, V10816, P391, DOI 10.1007/978-3-319-91563-0_24
   Cardelli L., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P70, DOI 10.1145/73560.73566
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Carvalho VA, 2017, DATA KNOWL ENG, V109, P3, DOI 10.1016/j.datak.2017.03.002
   Carvalho VA, 2015, LECT NOTES COMPUT SC, V9381, P119, DOI 10.1007/978-3-319-25264-3_9
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   Eriksson O, 2013, INFORM SOFTWARE TECH, V55, P2099, DOI 10.1016/j.infsof.2013.07.008
   Fine K, 2010, J PHILOS, V107, P559, DOI 10.5840/jphil20101071139
   Gangemi A, 2003, AI MAG, V24, P13
   Gómez C, 2003, LECT NOTES COMPUT SC, V2817, P33
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Jeusfeld M. A, 2005, COMPLETE LIST O TELO
   Jeusfeld M.A., 2020, COMPANION P
   KAPPEL G, 1992, LECT NOTES COMPUT SC, V645, P41
   Klas W., 1995, METACLASSES THEIR AP
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Macías F, 2019, J LOG ALGEBR METHODS, V106, P167, DOI 10.1016/j.jlamp.2018.12.005
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   Neumayr Bernd., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling, V96, P107
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Partridge C., 2017, MULTI 4 INT WORKSH M, V2019, P226
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Selway M, 2015, LECT NOTES COMPUT SC, V9381, P287, DOI 10.1007/978-3-319-25264-3_21
NR 34
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 587
EP 621
DI 10.1007/s10270-022-00973-7
EA MAR 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000767724400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ye, KF
   Cavalcanti, A
   Foster, S
   Miyazawa, A
   Woodcock, J
AF Ye, Kangfeng
   Cavalcanti, Ana
   Foster, Simon
   Miyazawa, Alvaro
   Woodcock, Jim
TI Probabilistic modelling and verification using RoboChart and PRISM
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE State machines; Formal semantics; Model transformation; PRISM;
   Probabilistic model checking; Domain-specific language for robotics
ID FINITE-STATE MACHINE; TUTORIAL INTRODUCTION; UNIFYING THEORIES; UML
   MODELS; BEHAVIOR
AB RoboChart is a timed domain-specific language for robotics, distinctive in its support for automated verification by model checking and theorem proving. Since uncertainty is an essential part of robotic systems, we present here an extension to RoboChart to model uncertainty using probabilism. The extension enriches RoboChart state machines with probability through a new construct: probabilistic junctions as the source of transitions with a probability value. RoboChart has an accompanying tool, called RoboTool, for modelling and verification of functional and real-time behaviour. We present here also an automatic technique, implemented in RoboTool, to transform a RoboChart model into a PRISM model for verification. We have extended the property language of RoboTool so that probabilistic properties expressed in temporal logic can be written using controlled natural language.
C1 [Ye, Kangfeng; Cavalcanti, Ana; Foster, Simon; Miyazawa, Alvaro; Woodcock, Jim] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Ye, KF (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
EM Kangfeng.Ye@york.ac.uk; Ana.Cavalcanti@york.ac.uk;
   Simon.Foster@york.ac.uk; Alvaro.Miyazawa@york.ac.uk;
   Jim.Woodcock@york.ac.uk
RI Miyazawa, Alvaro/M-7118-2019; Foster, Simon/AAP-7392-2021
OI Miyazawa, Alvaro/0000-0003-2233-9091; Foster, Simon/0000-0002-9889-9514;
   Cavalcanti, Ana Lucia Caneca/0000-0002-0831-1976; Ye,
   Kangfeng/0000-0003-2460-7926; Woodcock, James/0000-0001-7955-2702
FU EPSRC [EP/M025756/1, EP/R025479/1]; Royal Academy of Engineering
   [CiET1718/45]; EPSRC [EP/M025756/1, EP/H017461/1, EP/R025479/1,
   EP/G061947/1, EP/E025366/1] Funding Source: UKRI; SPF [EP/V026801/2,
   EP/V026801/1, EP/V026747/1] Funding Source: UKRI
FX This work is funded by the EPSRC grants EP/M025756/1 and EP/R025479/1,
   and by the Royal Academy of Engineering grant CiET1718/45. The icons
   used in RoboChart have been made by Sarfraz Shoukat, Freepik, Google,
   Icomoon andMadebyoliver from www.flaticon.com, and are licensed under CC
   3.0 BY.
CR Addouche N, 2004, IEEE SYS MAN CYBERN, P5209
   Addouche N, 2005, LECT NOTES COMPUT SC, V3688, P24
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1971, DYNAMIC PROBABILISTI
   [Anonymous], 2011, OMG UN MOD LANG OMG
   [Anonymous], 2010, J. Softw. Eng. Robot
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Baxter J., ACTA INFORM
   Beauquier D, 2003, THEOR COMPUT SCI, V292, P65, DOI 10.1016/S0304-3975(01)00215-8
   Berthomieu B, 2006, INT CONF QUANT EVAL, P123
   Bohnenkamp H, 2006, IEEE T SOFTWARE ENG, V32, P812, DOI 10.1109/TSE.2006.104
   Bruyninckx H., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1758, DOI [10.1145/2480362.2480693, DOI 10.1145/2480362.2480693]
   Cavalcanti A., 2003, Formal Aspects of Computing, V15, P146, DOI 10.1007/s00165-003-0006-5
   Cavalcanti A, 2006, LECT NOTES COMPUT SC, V3167, P220
   Cavalcanti Ana., 2021, SOFTWARE ENG ROBOTIC
   Colvin R, 2007, LECT NOTES COMPUT SC, V4591, P156
   Conserva Filho M.S., 2018, LNCS, V11254, P198, DOI [10.1007/978-3-030-03044-513, DOI 10.1007/978-3-030-03044-513]
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Dromey RG, 2003, I C SOFTW ENG FORM M, P2, DOI 10.1109/SEFM.2003.1236202
   Foster Simon, 2015, Unifying Theories of Programming 5th International Symposium, UTP 2014. Revised Selected Papers: LNCS 8963, P21, DOI 10.1007/978-3-319-14806-9_2
   Foster S, 2018, LECT NOTES COMPUT SC, V11194, P205, DOI 10.1007/978-3-030-02149-8_13
   Foughali M, 2016, LECT NOTES COMPUT SC, V10009, P383, DOI 10.1007/978-3-319-47846-3_24
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Goldsmith M, 2004, CONCUR SYST ENGN SER, V62, P227
   Hahn EM, 2013, FORM METHOD SYST DES, V43, P191, DOI 10.1007/s10703-012-0167-z
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hansson HA, 1991, THESIS UPPSALA U
   He JF, 2004, LECT NOTES COMPUT SC, V3308, P131
   Hoare C. A. R., 1998, Unifying Theories of Programming
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hochgeschwender N, 2013, IEEE INT C INT ROBOT, P3907, DOI 10.1109/IROS.2013.6696915
   Jansen D.N., 2002, FORMAL TECHNIQUES RE, V2469, P355
   Jensen H.E., 1996, PROC 7 NORDIC WORKSH, P247
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kattenbelt M, 2010, FORM METHOD SYST DES, V36, P246, DOI 10.1007/s10703-010-0097-6
   Kemeny J.G., 1983, Undergraduate Texts in Mathematics
   Kemeny John G., 1976, FINITE MARKOV CHAINS
   Konur S, 2012, ROBOT AUTON SYST, V60, P199, DOI 10.1016/j.robot.2011.10.005
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, THEOR COMPUT SCI, V282, P101, DOI 10.1016/S0304-3975(01)00046-9
   Kwiatkowska M, 2006, FORM METHOD SYST DES, V29, P33, DOI 10.1007/s10703-006-0005-2
   LARSEN KG, 1991, INFORM COMPUT, V94, P1, DOI 10.1016/0890-5401(91)90030-6
   Liu W., 2007, AUTON ROBOT SYST, V25-32
   Mallet A, 2010, IEEE INT CONF ROBOT, P4627, DOI 10.1109/ROBOT.2010.5509539
   MIYAZAWA A, 2019, SOFTW SYST MODEL
   Miyazawa A., 2018, Tech. rep.
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A
   Nokovic B., 2014, P 2014 INT C C COMP, P3
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Park HW, 2013, IEEE T ROBOT, V29, P331, DOI 10.1109/TRO.2012.2230992
   PRISM Team, 2008, PRISM LANG SEM
   PRISM Team, PRISM LANG REW BAS P
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Rabbath CA, 2013, J INTELL ROBOT SYST, V70, P233, DOI 10.1007/s10846-012-9692-7
   Ramaswamy A, 2014, IEEE INT C INT ROBOT, P1517, DOI 10.1109/IROS.2014.6942757
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Schlegel C., 1999, Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289), P1610, DOI 10.1109/IROS.1999.811709
   Schlick C.M., 2009, Industrial Engineering and Ergonomics: Visions, Concepts, Methods and Tools, P1, DOI [DOI 10.1007/978-3-642-01293-8, 10.1007/978-3-642-01293-8]
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Stoelinga M., 2002, Bulletin of the European Association for Theoretical Computer Science, P176
   Thrun S, 2002, COMMUN ACM, V45, P52, DOI 10.1145/504729.504754
   Tomic T, 2012, IEEE ROBOT AUTOM MAG, V19, P46, DOI 10.1109/MRA.2012.2206473
   van Glabbeek R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P130, DOI 10.1109/LICS.1990.113740
   Woodcock J, 2004, LECT NOTES COMPUT SC, V2999, P40
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Woodcock J.C.P., 2019, IN PRESS
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
NR 70
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 667
EP 716
DI 10.1007/s10270-021-00916-8
EA OCT 2021
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000702978700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Babikian, AA
   Semeráth, O
   Li, AQ
   Marussy, K
   Varró, D
AF Babikian, Aren A.
   Semerath, Oszkar
   Li, Anqi
   Marussy, Kristof
   Varro, Daniel
TI Automated generation of consistent models using qualitative abstractions
   and exploration strategies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model generation; Partial model; Graph solver; SMT-solver; Numeric
   solver; Exploration strategy; Test scenario synthesis
ID ENVIRONMENT
AB Automatically synthesizing consistent models is a key prerequisite for many testing scenarios in autonomous driving to ensure a designated coverage of critical corner cases. An inconsistent model is irrelevant as a test case (e.g., false positive); thus, each synthetic model needs to simultaneously satisfy various structural and attribute constraints, which includes complex geometric constraints for traffic scenarios. While different logic solvers or dedicated graph solvers have recently been developed, they fail to handle either structural or attribute constraints in a scalable way. In the current paper, we combine a structural graph solver that uses partial models with an SMT-solver and a quadratic solver to automatically derive models which simultaneously fulfill structural and numeric constraints, while key theoretical properties of model generation like completeness or diversity are still ensured. This necessitates a sophisticated bidirectional interaction between different solvers which carry out consistency checks, decision, unit propagation, concretization steps. Additionally, we introduce custom exploration strategies to speed up model generation. We evaluate the scalability and diversity of our approach, as well as the influence of customizations, in the context of four complex case studies.
C1 [Babikian, Aren A.; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, 3480 Rue Univ, Montreal, PQ H3A 0E9, Canada.
   [Semerath, Oszkar; Marussy, Kristof; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Li, Anqi] Swiss Fed Inst Technol, Dept Comp Sci, Ramistr 101, CH-8092 Zurich, Switzerland.
C3 McGill University; Budapest University of Technology & Economics; Swiss
   Federal Institutes of Technology Domain; ETH Zurich
RP Babikian, AA (corresponding author), McGill Univ, Dept Elect & Comp Engn, 3480 Rue Univ, Montreal, PQ H3A 0E9, Canada.
EM aren.babikian@mail.mcgill.ca; semerath@mit.bme.hu;
   anqili@student.ethz.ch; marussy@mit.bme.hu; daniel.varro@mcgill.ca
RI Semeráth, Oszkár/AAD-2125-2022; Marussy, Kristóf/AAE-9008-2022; Varro,
   Daniel/AAC-4234-2022
OI Semeráth, Oszkár/0000-0002-3592-5105; Marussy,
   Kristóf/0000-0002-9135-8256; Varro, Daniel/0000-0002-8790-252X
FU Budapest University of Technology and Economics
FX Open access funding provided by Budapest University of Technology and
   Economics.
CR Al-Sibahi AS, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P207, DOI 10.1145/2997364.2997382
   Anand Saswat, 2009, International Journal on Software Tools for Technology Transfer, V11, P53, DOI 10.1007/s10009-008-0090-1
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2004, THESIS
   Aydal EG, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P131, DOI 10.1109/ICST.2009.20
   Babikian AA, 2020, LECT NOTES COMPUT SC, V12076, P441, DOI 10.1007/978-3-030-45234-6_22
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Baudry Benoit., 2009, MODEL DRIVEN ENG DIS
   Beckert Bernhard, 2002, DIKU TECHNICAL REPOR, P113
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Brain M, 2013, LECT NOTES COMPUT SC, V7737, P455
   Buttner Fabian, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P244, DOI 10.1007/978-3-642-31491-9_19
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Ferrara Pietro, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P63, DOI 10.1007/978-3-642-33826-7_5
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Ganzinger H, 2004, LECT NOTES COMPUT SC, V3114, P175, DOI 10.1007/978-3-540-27813-9_14
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   Geyer S, 2014, IET INTELL TRANSP SY, V8, P183, DOI 10.1049/iet-its.2012.0188
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2018, COMPUT LANG SYST STR, V54, P474, DOI 10.1016/j.cl.2017.10.001
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   Gopan D, 2004, LECT NOTES COMPUT SC, V2988, P512
   Grönniger H, 2009, LECT NOTES COMPUT SC, V5522, P152, DOI 10.1007/978-3-642-02138-1_10
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Herzig SJI, 2017, AEROSP CONF PROC
   Hilken F, 2018, SOFTW SYST MODEL, V17, P885, DOI 10.1007/s10270-016-0568-3
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson E.K., 2006, FORMAL FDN DOMAIN SP, P53
   Jackson E.K., 2013, DIVERSELY ENUMERATIN, P11
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Kang E, 2011, LECT NOTES COMPUT SC, V6662, P33
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Magill S, 2007, LECT NOTES COMPUT SC, V4634, P419
   Majumdar R, 2021, LECT NOTES COMPUT SC, V12649, P172, DOI 10.1007/978-3-030-71500-7_9
   Majzik I, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P89, DOI 10.1109/MODELS.2019.00-12
   Marussy O., 2020, AUTOMATED GENE UNPUB
   McCloskey B, 2010, LECT NOTES COMPUT SC, V6337, P71, DOI 10.1007/978-3-642-15769-1_6
   Meng BL, 2017, LECT NOTES ARTIF INT, V10395, P148, DOI 10.1007/978-3-319-63046-5_10
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Mottu J-M, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P291, DOI 10.1109/ISSRE.2012.7
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Pennemann KH, 2008, LECT NOTES COMPUT SC, V5214, P289, DOI 10.1007/978-3-540-87405-8_20
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Rensink A, 2004, LECT NOTES COMPUT SC, V2986, P401
   Rensink A., 2007, ELECT COMMUNICATIONS, V1
   Rensink A, 2006, ELECTRON NOTES THEOR, V157, P39, DOI 10.1016/j.entcs.2006.01.022
   Reps TW, 2004, LECT NOTES COMPUT SC, V3114, P15
   Reynolds Andrew, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P640, DOI 10.1007/978-3-642-39799-8_42
   Rocklage E., 2018, 2017 ieee 20th international conference on intelligent transportation systems (itsc), P476
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   SALAY R, 2015, J OBJECT TECHNOL, V14, pNIL70
   Salay R, 2015, LECT NOTES COMPUT SC, V9033, P133, DOI 10.1007/978-3-662-46675-9_9
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Schneider S, 2017, LECT NOTES COMPUT SC, V10202, P226, DOI 10.1007/978-3-662-54494-5_13
   Semerath O., 2020, P 23 ACMIEEE INT C M, P187
   Semeráth O, 2020, INT J SOFTW TOOLS TE, V22, P57, DOI 10.1007/s10009-019-00530-6
   Semeráth O, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P43, DOI 10.1109/ICSE-Companion.2019.00034
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2018, LECT NOTES COMPUT SC, V10802, P227, DOI 10.1007/978-3-319-89363-1_13
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Semeráth O, 2016, LECT NOTES COMPUT SC, V9633, P87, DOI 10.1007/978-3-662-49665-7_6
   Sen, 2010, THESIS U RENNES 1 FR
   Sen Sagar, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P328, DOI 10.1109/ICST.2008.62
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Shah SeyyedM. A., 2009, P 6 INT WORKSHOP MOD, P1
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Sicun Gao, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P286, DOI 10.1007/978-3-642-31365-3_23
   Singh G, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158143
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Soltana G, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3381032
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   The Eclipse Project, 2019, ECLIPSE MODELING FRA
   The Object Management Group, 2014, OBJECT CONSTRAINT LA
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Wu H, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P175, DOI 10.1109/TASE.2013.31
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 89
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1763
EP 1787
DI 10.1007/s10270-021-00918-6
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000696426800001
PM 36196213
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhu, F
   Tang, J
AF Zhu, Feng
   Tang, Jun
TI Graphical composite modeling and simulation for multi-aircraft collision
   avoidance
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graphical composite modeling; Multi-aircraft collision avoidance;
   Event-driven modeling and simulation; Simulation-based decision tree
ID ENCOUNTER MODEL; PETRI NETS; SYSTEM
AB Modeling and simulation for multi-aircraft collision avoidance to understand the mechanistic behavior is an important activity. Building models using general programming language typically requires specialist knowledge, and this limits the spread of modeling and simulation approach among multi-aircraft collision avoidance scenario. Thus, a software environment is needed to support convenient development of models by assembling components, when analysis demands changes. In this work, the graphical composite modeling and simulation software (GMAS extended) for multi-aircraft collision avoidance is introduced, with the basic graphical components and a graphical assembly editor. We define the serial and parallel execution semantics of GMASE-based model and then introduce the high-level graphical modeling interface, the low-level runtime engine of GMAS, and the simulation-based decision tree, which transforms a complex decision-making process into a collection of simpler decisions of finding the no collision or optimal sequence from some initial state to the goal state. To validate its efficiency and practicability, a three-aircraft collision avoidance model with TCAS operations is built on GMAS, which shows that using GMAS increases reusability and hiding complexity in graphical programming by splitting complex behavior into data flow and function components. The experimental result proves that GMAS not only provides a better representation for multi-aircraft collision avoidance, but also a useful approach for analyzing the potential collision occurrences.
C1 [Zhu, Feng; Tang, Jun] Natl Univ Def Technol, Coll Syst Engn, Changsha, Peoples R China.
C3 National University of Defense Technology - China
RP Tang, J (corresponding author), Natl Univ Def Technol, Coll Syst Engn, Changsha, Peoples R China.
EM zhufeng@nudt.edu.cn; tangjun06@nudt.edu.cn
FU National Natural Science Foundation of China [61903368]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61903368.
CR Alonso-Ayuso A, 2014, ANN OPER RES, V222, P89, DOI 10.1007/s10479-013-1347-y
   [Anonymous], 2004, AIAA GUID NAV CONTR
   [Anonymous], 2009, ATC359 MIT LINC LAB
   Asmar DM, 2013, J GUID CONTROL DYNAM, V36, P1801, DOI 10.2514/1.58938
   Billingsley TB, 2012, IEEE AERO EL SYS MAG, V27, P4, DOI 10.1109/MAES.2012.6328836
   Buss A, 2007, PROCEEDINGS OF THE 2007 WINTER SIMULATION CONFERENCE, VOLS 1-5, P673
   Cicirelli F, 2011, SIMUL MODEL PRACT TH, V19, P685, DOI 10.1016/j.simpat.2010.10.010
   Cobanoglu B, 2014, INT J SIMUL MODEL, V13, P147, DOI 10.2507/IJSIMM13(2)2.257
   de Lara J, 2005, ELECTRON NOTES THEOR, V127, P145, DOI 10.1016/j.entcs.2004.08.052
   FAA, 2011, INTRO TCAS 2 VERS 7
   Griffith J. D., 2013, ATC397
   Haeusler M, 2019, SOFTW SYST MODEL, V4, P1
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Holland J. E., 2013, Air Traffic Control Quarterly, V21, P275
   Jensen L. M. K. Kurt, 2009, COLOURED PETRI NETS
   Kochenderfer M., 2008, AIAA GUID NAV CONTR
   Kochenderfer Mykel J., 2012, Lincoln Laboratory Journal, V19, P17
   Kochenderfer M.J., 2012, Air Traffic Control Quarterly, V20, P27
   Kochenderfer MJ, 2010, J GUID CONTROL DYNAM, V33, P487, DOI 10.2514/1.44867
   Kuchar J. K., 2000, IEEE Transactions on Intelligent Transportation Systems, V1, P179, DOI 10.1109/6979.898217
   Kummer O, 2004, LECT NOTES COMPUT SC, V3099, P484
   Love WD, 2016, Q INT J ENG OPER, V6, P231
   Mirko W, 2016, FRONT ROBOT AI, V3, P33
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Palaniappan S, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P2077, DOI 10.1109/WSC.2006.322996
   Sarkar S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENT RAIL TRANSPORTATION (ICIRT), P356, DOI 10.1109/ICIRT.2016.7588754
   SCHRUBEN L, 1983, COMMUN ACM, V26, P957, DOI 10.1145/182.358460
   Smith KA, 2015, J THROMB HAEMOST, V13, P1
   Tang J, 2018, IEEE ACCESS, V99, P1
   Tang J, 2018, TRANSPORT RES C-EMER, V96, P347, DOI 10.1016/j.trc.2018.10.006
   Tang J, 2018, IEEE AERO EL SYS MAG, V33, P36, DOI 10.1109/MAES.2018.170044
   Tang J, 2016, TRANSPORT RES C-EMER, V67, P357, DOI 10.1016/j.trc.2016.03.001
   Tang WJ, 2013, CLUSTER COMPUT, V16, P379, DOI 10.1007/s10586-012-0201-3
   Underhill N., 2018, CORRELATED ENCOUNTER
   van der Aalst Wil M. P., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P6, DOI 10.1007/978-3-642-38143-0_2
   Wainer GA, 2004, PROCEEDINGS OF THE 2004 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P49
   Wang B, 2015, MATH COMP MODEL DYN, V21, P153, DOI 10.1080/13873954.2014.911750
   Zeigler BP., 2000, Theory of Modeling and Simulation
NR 38
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 821
EP 835
DI 10.1007/s10270-020-00830-5
EA NOV 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000589565700001
DA 2024-07-18
ER

PT J
AU Bagherzadeh, M
   Jahed, K
   Combemale, B
   Dingel, J
AF Bagherzadeh, Mojtaba
   Jahed, Karim
   Combemale, Benoit
   Dingel, Juergen
TI Live modeling in the context of state machine models and code generation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model execution; Live modeling; Model-level debugging; MDD; UML-RT
ID SOFTWARE; EXECUTION; EVENT
AB Live modeling has been recognized as an important technique to edit behavioral models while being executed and helps in better understanding the impact of a design choice. In the context of model-driven development, models can be executed by interpretation or by the translation of models into existing programming languages, often by code generation. This work is concerned with the support of live modeling in the context of state machine models when they are executed by code generation. To this end, we propose an approach that is completely independent of any live programming support offered by the target language. This independence is achieved with the help of a model transformation which equips the model with support for features which are required for live modeling. A subsequent code generation then produces a self-reflective program that allows changes to the model elements at runtime (through synchronization of design and runtime models). We have applied the approach in the context of UML-RT and created a prototype (Live-UMLRT) that provides a full set of services for live modeling of UML-RT state machines such as re-execution, adding/removing states and transitions, and adding/removing action code. We have evaluated the prototype on several use cases. The evaluation shows that (1) generation of a self-reflective and model instrumentation can be carried out with reasonable performance, and (2) our approach can apply model changes to the running execution faster than the standard approach that depends on the live programming support of the target language.
C1 [Bagherzadeh, Mojtaba; Jahed, Karim; Combemale, Benoit; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Bagherzadeh, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM mojtaba@cs.queensu.ca; jahed@cs.queensu.ca; benoit.combemale@irit.fr;
   dingel@cs.queensu.ca
CR Abrahams D., 2019, BOOST C LIB
   Ahmadi R., 2016, EDUSYMPOSS4MDE MODEL, P37
   [Anonymous], 2013, SUMM SIM MULT
   [Anonymous], 1984, Smalltalk-80: The Interactive Programming Environment
   [Anonymous], 2015, MICROSOFT C EDIT CON
   [Anonymous], 2012, THESIS
   Appavoo J, 2003, IBM SYST J, V42, P60, DOI 10.1147/sj.421.0060
   Asghar Adeel., 2012, IFAC Proceedings Volumes, V45, P1087
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bagherzadeh M., MDEBUGGER REPOSITORY
   Bagherzadeh M., 2020, LIVE UMLRT REPOSITOR
   Bagherzadeh M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P743, DOI 10.1109/MODELS-C.2019.00115
   Bagherzadeh M, 2018, PROC IEEE ACM INT C, P97, DOI 10.1145/3183440.3183473
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   Balasubramanian J, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P118, DOI 10.1109/RTAS.2009.36
   Bousse E, 2019, SOFTW SYST MODEL, V18, P385, DOI 10.1007/s10270-017-0598-5
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Burckhardt S, 2013, ACM SIGPLAN NOTICES, V48, P95, DOI 10.1145/2499370.2462170
   Campusano M, 2019, INFORM SOFTWARE TECH, V108, P99, DOI 10.1016/j.infsof.2018.12.008
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Corley Jonathan, 2016, THESIS
   Corley Jonathan., 2014, Proceedings of the 14th Workshop on Domain-Specific Modeling, P13
   Das N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P36, DOI 10.1145/2976767.2976781
   Dohmen LAJ, 2002, LECT NOTES COMPUT SC, V2559, P475
   Dotan Dolev., 2007, OOPSLA 07 COMPANION, P838, DOI [10.1145/1297846.1297915, DOI 10.1145/1297846.1297915]
   Edwards J, 2005, ACM SIGPLAN NOTICES, V40, P505, DOI 10.1145/1103845.1094851
   Fabry R. S., 1976, 2nd International Conference on Software Engineering, P470
   Franz M, 1997, COMPUTER, V30, P74, DOI 10.1109/2.573670
   FUJIMOTO RM, 1990, COMMUN ACM, V33, P30, DOI 10.1145/84537.84545
   Gery E., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P1
   Graf P, 2006, P IEEE RAP SYST PROT, P3, DOI 10.1109/RSP.2006.15
   Guerraoui R, 1997, COMPUTER, V30, P68, DOI 10.1109/2.585156
   Haberl W., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P1887, DOI 10.1109/CIT.2010.323
   Hancock Christopher Michael, 2003, THESIS CAMBRIDGE
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hicks Michael., 2001, DYNAMIC SOFTWARE UPD
   Hili N, 2020, SOFTW SYST MODEL, V19, P959, DOI 10.1007/s10270-020-00780-y
   Hojaji F., 2019, SOFTW SYST MODEL
   Itemis A.G., YAKINDU STATECHART T
   Iyenghar P., 2010, P 10 ACM INT C EMB S, P69, DOI DOI 10.1145/1879021
   Iyenghar Padma, 2011, MODEL BASED DEBUGGIN
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kahani N, 2017, IEEE ACM INT WORKS M, P12, DOI 10.1109/MiSE.2017.4
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kubelka J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/3180155.3180200
   Magee J., 1999, STATE MODELS JAVA PR
   McDirmid S., 2013, P 2013 ACM INT S NEW, P53, DOI DOI 10.1145/2509578.2509585
   McDirmid S, 2016, P 2 INT WORKSH LIV P, V16
   McDirmid S, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P623
   Object Management Group, ACT LANG FDN UML SPE
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Pérez F, 2007, COMPUT SCI ENG, V9, P21, DOI 10.1109/MCSE.2007.53
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pop Adrian., 2012, Proceedings of the 9th International MODELICA Conference; Munich; Germany, number 076, P443
   Posse E, 2015, WORKSH OP SOURC MOD
   Posse E, 2016, SOFTW SYST MODEL, V15, P179, DOI 10.1007/s10270-014-0399-z
   Posse Ernesto., 2002, European Joint Conference on Theory and Practice of Software (ETAPS), Workshop on Applied Graph Transformation (AGT), P23
   PUCKETTE M, 1991, COMPUT MUSIC J, V15, P68, DOI 10.2307/3680767
   Richard S., DEBUGGING WITH GDB
   Schuster C., 2015, P 2015 REACT EV BAS, V15
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 1994, REAL TIME OBJECT ORI
   Sjolund Martin., 2014, Proceedings of the 10 th International Modelica Conference; Lund; Sweden, number 096, P195, DOI [10.3384/ecp14096195, DOI 10.3384/ECP14096195]
   SWARTOUT W, 1982, COMMUN ACM, V25, P438, DOI 10.1145/358557.358572
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Taeumel Marcel, 2014, P 2014 ACM INT S NEW, P185, DOI [10.1145/2661136.2661150, DOI 10.1145/2661136.2661150]
   Tanimoto S. L., 1990, Journal of Visual Languages and Computing, V1, P127, DOI 10.1016/S1045-926X(05)80012-6
   Thane H., 2003, P INT PARALLEL DISTR, P1
   Tikhonova U, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P108, DOI 10.1145/3276604.3276611
   Van Mierlo S., 2018, THESIS
   Van Mierlo S, 2017, SIMUL-T SOC MOD SIM, V93, P285, DOI 10.1177/0037549716658360
   van Rozen R, 2019, SOFTW SYST MODEL, V18, P195, DOI 10.1007/s10270-017-0608-7
   Van Tendeloo Y, 2019, SOFTW SYST MODEL, V18, P2821, DOI 10.1007/s10270-018-0700-7
   Van Tendeloo Yentl., 2015, Proceedings of the Symposium on Theory of Modeling and Simulation MS Symposium, P91
   Zeng KB, 2010, DES AUT TEST EUROPE, P87
NR 78
TC 3
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 795
EP 819
DI 10.1007/s10270-020-00829-y
EA NOV 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000583635300002
DA 2024-07-18
ER

PT J
AU Bousse, E
   Mayerhofer, T
   Combemale, B
   Baudry, B
AF Bousse, Erwan
   Mayerhofer, Tanja
   Combemale, Benoit
   Baudry, Benoit
TI Advanced and efficient execution trace management for executable
   domain-specific modeling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model execution; Domain-specific languages; Execution trace
ID SEMANTICS
AB Executable Domain-Specific Modeling Languages (xDSMLs) enable the application of early dynamic verification and validation (V&V) techniques for behavioral models. At the core of such techniques, execution traces are used to represent the evolution of models during their execution. In order to construct execution traces for any xDSML, generic trace metamodels can be used. Yet, regarding trace manipulations, generic trace metamodels lack efficiency in time because of their sequential structure, efficiency in memory because they capture superfluous data, and usability because of their conceptual gap with the considered xDSML. Our contribution is a novel generative approach that defines a multidimensional and domain-specific trace metamodel enabling the construction and manipulation of execution traces for models conforming to a given xDSML. Efficiency in time is improved by providing a variety of navigation paths within traces, while usability and memory are improved by narrowing the scope of trace metamodels to fit the considered xDSML. We evaluated our approach by generating a trace metamodel for fUML and using it for semantic differencing, which is an important V&V technique in the realm of model evolution. Results show a significant performance improvement and simplification of the semantic differencing rules as compared to the usage of a generic trace metamodel.
C1 [Bousse, Erwan; Mayerhofer, Tanja] TU Wien, Business Informat Grp, Vienna, Austria.
   [Mayerhofer, Tanja] TU Wien, Vienna, Austria.
   [Combemale, Benoit] Univ Rennes 1, IRISA, Rennes, France.
   [Baudry, Benoit] Inria, Rennes, France.
C3 Technische Universitat Wien; Technische Universitat Wien; Universite de
   Rennes; Inria
RP Bousse, E (corresponding author), TU Wien, Business Informat Grp, Vienna, Austria.
EM bousse@big.tuwien.ac.at; mayerhofer@big.tuwien.ac.at;
   benoit.combemale@irisa.fr; benoit.baudry@inria.fr
OI Mayerhofer, Tanja/0000-0001-6205-0992; Bousse, Erwan/0000-0003-0000-9219
FU TU Wien (TUW); ANR INS Project GEMOC [ANR-12-INSE-0011]; COST Action
   MPM4CPS [IC1404]; Christian Doppler Forschungsgesellschaft CDL-Flex;
   BMWFW; Austrian Science Fund (FWF) [P 28519-N31]; Austrian Agency for
   Cooperation in Education and Research (OeAD) [FR 08/2017]; French
   Ministries of Foreign Affairs and International Development (MAEDI);
   French Ministry of Education, Higher Education and Research (MENESR);
   Agence Nationale de la Recherche (ANR) [ANR-12-INSE-0011] Funding
   Source: Agence Nationale de la Recherche (ANR)
FX Open access funding provided by TU Wien (TUW). This work is supported by
   the ANR INS Project GEMOC (ANR-12-INSE-0011), the COST Action MPM4CPS
   (IC1404), the Christian Doppler Forschungsgesellschaft CDL-Flex, the
   BMWFW, the Austrian Science Fund (FWF): P 28519-N31, the Austrian Agency
   for Cooperation in Education and Research (OeAD) under the grand number
   FR 08/2017 and by the French Ministries of Foreign Affairs and
   International Development (MAEDI) and the French Ministry of Education,
   Higher Education and Research (MENESR).
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Alawneh L, 2011, CONF PROC INT SYMP C, P181, DOI 10.1109/ICPC.2011.15
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], P 4 EUR C EMB REAL T
   [Anonymous], 11 WORKSH MOD DES VE
   Aydt R., 1992, TECHNICAL REPORT
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bandener Nils, 2010, P 3 INT C SOFTW LANG, P357, DOI DOI 10.1007/978-3-642-19440-5_24
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bousse E., 2014, LNCS, V8767, P86, DOI [10.1007/978-3-319-11653-2_18, DOI 10.1007/978-3-319-11653-2_18]
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Combemale B, 2013, LECT NOTES COMPUT SC, V8225, P365, DOI 10.1007/978-3-319-02654-1_20
   Corley Jonathan., 2014, Proceedings of the 14th Workshop on Domain-Specific Modeling, P13
   Crégut X, 2010, LECT NOTES COMPUT SC, V6138, P90, DOI 10.1007/978-3-642-13595-8_9
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   DeAntoni J., 2010, SIGSOFT FSE, P377, DOI DOI 10.1145/1882291
   DESNOYERS M., 2013, Common trace format
   Eichler H., 2009, TECHNICAL REPORT
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Eschweiler D, 2012, ADV PARALLEL COMPUT, V22, P481, DOI 10.3233/978-1-61499-041-3-481
   Esmaeilsabzali S, 2010, LECT NOTES COMPUT SC, V6013, P158, DOI 10.1007/978-3-642-12029-9_12
   Fischer T, 2000, LNCS, V1764, P157
   Geimer M, 2010, CONCURR COMP-PRACT E, V22, P702, DOI 10.1002/cpe.1556
   Gogolla Martin., 2014, Modellierung 2014, 19.-21. M rz 2014, Wien, P273
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   HAERDER T, 1983, COMPUT SURV, V15, P287, DOI 10.1145/289.291
   Hamou-Lhadj A, 2012, SOFTW SYST MODEL, V11, P77, DOI 10.1007/s10270-010-0180-x
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Hartmann T, 2014, LECT NOTES COMPUT SC, V8767, P252, DOI 10.1007/978-3-319-11653-2_16
   Hegedus Abel, 2012, Periodica Polytechnica. Electrical Engineering, V56, P71, DOI 10.3311/PPee.7078
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Hegedus A., 2010, TECHNICAL REPORT
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jeanneret C., 2011, IFI20110002 U ZUR DE
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kolovos D., 2016, THE EPSILON BOOK
   Langer P, 2014, LECT NOTES COMPUT SC, V8767, P116, DOI 10.1007/978-3-319-11653-2_8
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S., 2011, LNCS, V6627, P194
   Mayerhofer T., 2015, TTC 15, V15, P2
   Mayerhofer T, 2013, LECT NOTES COMPUT SC, V8225, P56, DOI 10.1007/978-3-319-02654-1_4
   Meyers B, 2014, LECT NOTES COMPUT SC, V8706, P1, DOI 10.1007/978-3-319-11245-9_1
   Object Management Group, 2015, SEM FDN SUBS EX UML
   Object Management Group, 2013, UML TEST PROF UTP V
   Object Management Group, 2016, Technical Report v2.5.1
   Object Management Group, 2013, OMG UN MOD LANG OMG
   Pagano Generoso, 2013, 2013 IEEE 7th International Symposium on Embedded Multicore/Manycore System-on-Chip (MCSoC), P119, DOI 10.1109/MCSoC.2013.28
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Cuadrado JS, 2014, LECT NOTES COMPUT SC, V8568, P186
   Schnorr L. M., 2013, PAJE TRACE FILE FORM
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Seidewitz E., 2014, P 2014 C SYST PROGR, P39, DOI [10.1145/2660252, DOI 10.1145/2660252]
   Soden M., 2009, BM-MDA'09: Proceedings of the 1st Workshop on Behaviour Modelling in Model-Driven Architecture, P1, DOI [10.1145/1555852.1555856, DOI 10.1145/1555852.1555856]
   STMicroelectronics, 2012, KPTRACE SPEC
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 66
TC 11
Z9 13
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 385
EP 421
DI 10.1007/s10270-017-0598-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300017
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Egea, M
   Dania, C
AF Egea, Marina
   Dania, Carolina
TI SQL-PL<i>4</i>OCL: an automatic code generator from OCL to SQL
   procedural language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE OCL; UML; SQL; Stored procedures; Code generator
ID CONSTRAINTS
AB In this paper, we introduce a SQL-PL code generator for OCL expressions that, in contrast to other proposals, is able to map OCL iterate and iterator expressions thanks to our use of stored procedures. We explain how the mapping presented here introduces key differences to the previous version of our mapping in order to (i) simplify its definition, (ii) improve the evaluation time of the resulting code, and (iii) consider OCL three-valued evaluation semantics. Moreover, we have implemented our mapping to target several relational database management systems, i.e., MySQL, MariaDB, PostgreSQL, and SQL server, which allows us to widen its usability and to benchmark the evaluation time of the SQL-PL code produced.
C1 [Egea, Marina] Minsait Indra, Tiger Team, Cybersecur Operat, Madrid, Spain.
   [Dania, Carolina] IMDEA Software Inst, Madrid, Spain.
C3 IMDEA Software Institute
RP Egea, M (corresponding author), Minsait Indra, Tiger Team, Cybersecur Operat, Madrid, Spain.; Dania, C (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM msegea@minsait.com; carolina.dania@imdea.org
RI Egea, Marina/G-4354-2013
CR [Anonymous], 2016, PL PGSQL SQL PROCEDU
   [Anonymous], 2011, 9075110 ISOIEC
   [Anonymous], 2014, CEUR WORKSHOP PROC
   Armonas A., 2006, INF TECHNOL CONTROL, V35
   Basin David, 2011, Foundations of Security Analysis and Design VI. FOSAD Tutorial Lectures: LNCS 6858, P101, DOI 10.1007/978-3-642-23082-0_4
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Berrabah D, 2007, LECT NOTES COMPUT SC, V4653, P593
   Clavel M., 2008, ECEASST, V15, P27
   Cortazar S. C., 2012, TECHNICAL REPORT
   Cosentino V., 2013, THESIS
   Dania C., 2011, THESIS
   Dania C., 2016, SQLPL4OCL TOOL
   Demuth B, 1999, LECT NOTES COMPUT SC, V1723, P598
   Demuth B., 2001, UNIFIED MODELING LAN, P104, DOI DOI 10.1007/3-540-45441-1
   Egea M., 2010, ECEASST, V36
   Heidenreich F., 2008, ECEASST, V9
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Monperrus M, 2011, SOFTW SYST MODEL, V10, P537, DOI 10.1007/s10270-010-0165-9
   Object Management Group, 2014, TECHNICAL REPORT
   Object Management Group, 2015, TECHNICAL REPORT
   Object Management Group, 2006, OBJ CONSTR LANG SPEC
   Object Management Group, 2003, COMM WAR MET SPEC
   Oriol X., 2014, P 14 INT WORKSH OCL, V2014, P23
   Pinet F., 2004, Metainformatics. International Symposium, MIS 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3511), P160
   Schmidt AR, 1998, THESIS
   Siripornpanit N, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P149, DOI 10.1109/ICIMT.2009.55
   Sobotka P., 2012, THESIS
NR 27
TC 3
Z9 3
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 769
EP 791
DI 10.1007/s10270-017-0597-6
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300030
DA 2024-07-18
ER

PT J
AU Zolotas, A
   Matragkas, N
   Devlin, S
   Kolovos, DS
   Paige, RF
AF Zolotas, Athanasios
   Matragkas, Nicholas
   Devlin, Sam
   Kolovos, Dimitrios S.
   Paige, Richard F.
TI Type inference in flexible model-driven engineering using classification
   algorithms
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Flexible model-driven engineering; Bottom-up
   metamodelling; Type inference; Classification and regression trees;
   Random forests
ID TRANSFORMATION
AB Flexible or bottom-up model-driven engineering (MDE) is an emerging approach to domain and systems modelling. Domain experts, who have detailed domain knowledge, typically lack the technical expertise to transfer this knowledge using traditional MDE tools. Flexible MDE approaches tackle this challenge by promoting the use of simple drawing tools to increase the involvement of domain experts in the language definition process. In such approaches, no metamodel is created upfront, but instead the process starts with the definition of example models that will be used to infer the metamodel. Pre-defined metamodels created by MDE experts may miss important concepts of the domain and thus restrict their expressiveness. However, the lack of a metamodel, that encodes the semantics of conforming models has some drawbacks, among others that of having models with elements that are unintentionally left untyped. In this paper, we propose the use of classification algorithms to help with the inference of such untyped elements. We evaluate the proposed approach in a number of random generated example models from various domains. The correct type prediction varies from 23 to 100% depending on the domain, the proportion of elements that were left untyped and the prediction algorithm used.
C1 [Zolotas, Athanasios; Devlin, Sam; Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Comp Sci Dept, Deramore Lane, York YO10 5GH, N Yorkshire, England.
   [Matragkas, Nicholas] Univ Hull, Comp Sci Dept, Kingston Upon Hull HU6 7RX, N Humberside, England.
C3 University of York - UK; University of Hull
RP Zolotas, A (corresponding author), Univ York, Comp Sci Dept, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM thanos.zolotas@york.ac.uk; n.matragkas@hull.ac.uk;
   sam.devlin@york.ac.uk; dimitris.kolovos@york.ac.uk;
   richard.paige@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; Devlin, Sam/L-4679-2017; Zolotas,
   Athanasios/AAA-4972-2022
OI Zolotas, Athanasios/0000-0001-6020-4468; Kolovos,
   Dimitris/0000-0002-1724-6563
FU EPSRC through the LSCITS initiative; EU, through the MONDO FP7 STREP
   Project [611125]
FX This work was carried out in cooperation with Digital Lightspeed
   Solutions Ltd and was supported by the EPSRC through the LSCITS
   initiative and part supported by the EU, through the MONDO FP7 STREP
   Project (#611125).
CR [Anonymous], 1988, OBJECT ORIENTED SOFT
   [Anonymous], 2015, R PACKAGE VERSION
   [Anonymous], INT C APPL DECL PROG
   [Anonymous], P ICSE 2011 WORKSH F
   [Anonymous], 4 WORKSH AN MOD TRAN
   [Anonymous], YCS2012475 U YORK
   [Anonymous], P ACM WORKSH DOM MOD
   Antkiewicz M., 2013, MODELS 2013 CEUR WOR, V1104, P32
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Canovas Izquierdo Javier Luis, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P29, DOI 10.1109/MISE.2012.6226011
   Dillenbourg P., 1999, Collaborative-learning: Cognitive and computational approaches, P1
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Faunes M, 2013, LECT NOTES COMPUT SC, V8107, P187, DOI 10.1007/978-3-642-41533-3_12
   Friedman J, 2001, SPRINGER SERIES STAT, V1, P587
   Hyun Cho, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P22, DOI 10.1109/MISE.2012.6226010
   Izquierdo Javier Luis Canovas, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P272, DOI 10.1007/978-3-642-38709-8_18
   Javed F, 2008, INFORM SOFTWARE TECH, V50, P948, DOI 10.1016/j.infsof.2007.08.003
   Jiawei H., 2001, Data mining: concepts and techniques, V5
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kolovos D. S, 2013, XM 2013 EXTR MOD WOR
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kuhrmann M, 2011, FLEX TOOLS WORKSH
   Langer P, 2010, LECT NOTES COMPUT SC, V6142, P153, DOI 10.1007/978-3-642-13688-7_11
   Lopes JT, 2013, SIMBIOTICA, P1
   Louppe G., 2013, ADV NEURAL INFORM PR, P431, DOI DOI 10.5555/2999611.2999660
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   Mitchell T.M., 1997, Machine learning, V45
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Strommer M, 2008, LECT NOTES BUS INF, V11, P372
   Therneau T.M., 2015, Technical report
   Varró D, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P978, DOI 10.1145/1244002.1244217
   VOLTER M., 2013, DSL ENG DESIGNING IM
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Wüest D, 2013, IEEE INT CONF AUTOM, P664, DOI 10.1109/ASE.2013.6693130
   Wuest D., 2012, INT C MOB COMP APPL, P225, DOI DOI 10.1007/978-3-642-36632-1_13
   Yohannes Y., 1999, Classification and regression trees, CART: a user manual for identifying indicators of vulnerability to famine and chronic food insecurity, V3
   Zolotas A, 2015, 1 FLEX MOD DRIV ENG
   Zolotas A, 2016, THESIS
   Zolotas A, 2017, COMPUT LANG SYST STR, V49, P216, DOI 10.1016/j.cl.2016.12.002
   Zolotas A, 2015, LECT NOTES COMPUT SC, V9153, P75, DOI 10.1007/978-3-319-21151-0_6
NR 44
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 345
EP 366
DI 10.1007/s10270-018-0658-5
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300015
OA Green Accepted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Szárnyas, G
   Izsó, B
   Ráth, I
   Varró, D
AF Szarnyas, Gabor
   Izso, Benedek
   Rath, Istvan
   Varro, Daniel
TI The Train Benchmark: cross-technology performance evaluation of
   continuous model queries
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Well-formedness validation; Query evaluation; Performance benchmark;
   Graph databases; Semantic databases; Relational databases
ID PATTERN; ALGORITHM
AB In model-driven development of safety-critical systems (like automotive, avionics or railways), well-formedness of models is repeatedly validated in order to detect design flaws as early as possible. In many industrial tools, validation rules are still often implemented by a large amount of imperative model traversal code which makes those rule implementations complicated and hard to maintain. Additionally, as models are rapidly increasing in size and complexity, efficient execution of validation rules is challenging for the currently available tools. Checking well-formedness constraints can be captured by declarative queries over graph models, while model update operations can be specified as model transformations. This paper presents a benchmark for systematically assessing the scalability of validating and revalidating well-formedness constraints over large graph models. The benchmark defines well-formedness validation scenarios in the railway domain: a metamodel, an instance model generator and a set of well-formedness constraints captured by queries, fault injection and repair operations (imitating the work of systems engineers by model transformations). The benchmark focuses on the performance of query evaluation, i.e. its execution time and memory consumption, with a particular emphasis on reevaluation. We demonstrate that the benchmark can be adopted to various technologies and query engines, including modeling tools; relational, graph and semantic databases. The Train Benchmark is available as an open-source project with continuous builds from https://github.com/FTSRG/trainbenchmark.
C1 [Szarnyas, Gabor; Izso, Benedek; Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Szarnyas, Gabor; Varro, Daniel] MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.
   [Szarnyas, Gabor; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Rath, Istvan] IncQuery Labs Ltd, Bocskai Ut 77-79, H-1113 Budapest, Hungary.
C3 Budapest University of Technology & Economics; Budapest University of
   Technology & Economics; McGill University
RP Szárnyas, G (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.; Szárnyas, G (corresponding author), MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.; Szárnyas, G (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM szarnyas@mit.bme.hu; izso@mit.bme.hu; rath@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Rath, Istvan/E-4846-2013
OI Varro, Daniel/0000-0002-8790-252X; Szarnyas, Gabor/0000-0001-8233-4431;
   Rath, Istvan/0000-0002-5516-696X
FU MONDO project [EU ICT-611125]; MTA-BME Lendulet Research Group on
   Cyber-Physical Systems; Red Hat, Inc.; NSERC [RGPIN-04573-16]
FX This work was partially supported by the MONDO (EU ICT-611125) project,
   the MTA-BME Lendulet Research Group on Cyber-Physical Systems, the NSERC
   RGPIN-04573-16 Discovery Grants Program and Red Hat, Inc.
CR Abadi D., 2007, TECHNICAL REPORT
   Aeronautical Radio Incorporated, 2016, A653 AV APPL SOFTW S
   [Anonymous], 2008, SPARQL Query Language for RDF
   [Anonymous], 2011, ECEASST
   [Anonymous], JAVA PERSISTANCE HIB
   [Anonymous], OWL 2 Web Ontology Language - Document Overview, VSecond
   [Anonymous], 2009, SAE RAD TECHN COMM A
   [Anonymous], 2004, Resource Description Framework (RDF)
   [Anonymous], RDF SCHEM 1 1
   [Anonymous], 2009, INT WORKSH GRAPH BAS
   AUTOSAR Consortium, 2016, THE AUTOSAR STAND
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Boyer B., 2008, SIGMETRICS
   Brown Aaron B., 1997, SIG-METRICS, P214, DOI [10.1145/258612.258690, DOI 10.1145/258612.258690]
   Bur M., 2015, INT C GRAPH TRANSF
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Debreceni C., 2014, WORKSH VIEW BAS ASP
   DeWitt David J., 1991, The Benchmark Handbook, P119
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Eifrem E, 2015, GRAPH DATABASES, V2nd
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Geiss R., 2007, TECHNICAL REPORT
   Geiss R., 2008, WORKSH APPL GRAPH TR, V5088
   Gorlitz Olaf, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P116, DOI 10.1007/978-3-642-35176-1_8
   Gray J, 1993, The benchmark handbook for database and transasction systems
   Guo YB, 2005, J WEB SEMANT, V3, P158, DOI 10.1016/j.websem.2005.06.005
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Hegedüs A, 2016, SOFTW SYST MODEL, V15, P733, DOI 10.1007/s10270-014-0436-y
   Horn Tassilo., 2014, TTC at STAF, P93
   Horvath Akos, 2010, International Journal on Software Tools for Technology Transfer, V12, P211, DOI 10.1007/s10009-010-0149-7
   Izso B., 2013, WORKSH SCAL MOD DRIV
   Izso B., 2014, TECHNICAL REPORT
   Izso B., 2014, WORKSH SCAL MOD DRIV
   Izsó B, 2013, IEEE INT CONF AUTOM, P421, DOI 10.1109/ASE.2013.6693100
   Jouault F., 2009, INT WORKSH GRAPH BAS
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Luteberget B, 2016, LECT NOTES COMPUT SC, V9681, P491, DOI 10.1007/978-3-319-33693-0_31
   Ma L, 2006, LECT NOTES COMPUT SC, V4011, P125
   Mazanek S., 2010, CTIT WORKSH P SER WP
   Momjian Bruce., 2000, PostgreSQL: Introduction and Concepts
   Morsey M, 2011, LECT NOTES COMPUT SC, V7031, P454, DOI 10.1007/978-3-642-25073-6_29
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Object Management Group, 2012, OBJ CONSTR LANG SPEC
   OrientDB, GRAPH DOC NOSQL
   Owens Mike., 2010, SQLITE
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Palleri J.-R., 2013, SOFTWARE PRACT EXPER, V43, P621
   Peleska J, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P22, DOI 10.4018/978-1-4666-1643-1.ch002
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink A., 2010, INT J SOFTW TOOLS TE, V12, P171
   Rinne M., 2012, INT SEM WEB C DEM TR
   Rodriguez Marko A., 2010, Bulletin of the American Society for Information Science and Technology, V36, P35, DOI 10.1002/bult.2010.1720360610
   Rose L.M., 2014, CEUR WORKSHOP P, V1305
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Schmidt M, 2009, PROC INT CONF DATA, P222, DOI 10.1109/ICDE.2009.28
   SCHURR A, 2008, LNCS, V5088
   Shah SM, 2014, LECT NOTES COMPUT SC, V8767, P586, DOI 10.1007/978-3-319-11653-2_36
   Silberschatz Abraham., 2005, DATABASE SYSTEM CONC, V5th
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Szarnyas G., 2015, SOFTWARE TECHNOLOGIE
   Szárnyas G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P87, DOI 10.1145/2976767.2976786
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   The MOGENTES project, 2011, MOD BAS GEN TESTS DE
   Ujhelyi Z, 2015, INFORM SOFTWARE TECH, V65, P147, DOI 10.1016/j.infsof.2015.01.003
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Van Gorp P., 2013, EPTCS, V135
   Van Gorp P., 2011, EPTCS, V74
   Van Gorp P, 2013, ELECTRON PROC THEOR, P16, DOI 10.4204/EPTCS.135.3
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró G, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P79, DOI 10.1109/VLHCC.2005.23
   Varró G, 2015, SOFTW SYST MODEL, V14, P597, DOI 10.1007/s10270-013-0372-2
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Zhang X. J., 2001, THESIS
   Zundorf A., 2008, ANTWORLD BENCHM SPEC
NR 84
TC 30
Z9 31
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1365
EP 1393
DI 10.1007/s10270-016-0571-8
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000013
PM 30220905
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Guerra, E
   de Lara, J
AF Sanchez Cuadrado, Jesus
   Guerra, Esther
   de Lara, Juan
TI Quick fixing ATL transformations with speculative analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Model transformation; ATL; Transformation static analysis; Quick fixes;
   Speculative analysis
ID MODEL; LANGUAGE
AB Model transformations are central components of most model-based software projects. While ensuring their correctness is vital to guarantee the quality of the solution, current transformation tools provide limited support to statically detect and fix errors. In this way, the identification of errors and their correction are nowadays mostly manual activities which incur in high costs. The aim of this work is to improve this situation. Recently, we developed a static analyser that combines program analysis and constraint solving to identify errors in ATL model transformations. In this paper, we present a novel method and system that uses our analyser to propose suitable quick fixes for ATL transformation errors, notably some non-trivial, transformation-specific ones. Our approach supports speculative analysis to help developers select the most appropriate fix by creating a dynamic ranking of fixes, reporting on the consequences of applying a quick fix, and providing a pre-visualization of each quick fix application. The approach integrates seamlessly with the ATL editor. Moreover, we provide an evaluation based on existing faulty transformations built by a third party, and on automatically generated transformation mutants, which are then corrected with the quick fixes of our catalogue.
C1 [Sanchez Cuadrado, Jesus; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP Cuadrado, JS (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Jesus.Sanchez.Cuadrado@uam.es; Esther.Guerra@uam.es; Juan.deLara@uam.es
RI de Lara, Juan/B-5422-2014; Sanchez Cuadrado, Jesus/L-2365-2013; Guerra,
   Esther/B-4977-2014
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616; Guerra,
   Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity [TIN2014-52129-R]; R&D
   programme of the Madrid Region [S2013/ICE-3006]; EU commission
   [FP7-ICT-2013-10, 611125]
FX Work supported by the Spanish Ministry of Economy and Competitivity
   (TIN2014-52129-R), the R&D programme of the Madrid Region
   (S2013/ICE-3006), and the EU commission (FP7-ICT-2013-10, #611125).
CR Abraham R, 2007, PROC INT CONF SOFTW, P251
   [Anonymous], 2012, J OBJECT TECHNOL
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Brun Y., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P59, DOI DOI 10.1145/1882362
   Cabot J, 2010, LECT NOTES COMPUT SC, V6142, P45, DOI 10.1007/978-3-642-13688-7_4
   Cibrán MA, 2009, LECT NOTES BUS INF P, V17, P236
   Cohen P., 2003, P KDD WORKSH DAT CLE, V3, P73
   Deckwerth F, 2014, LECT NOTES COMPUT SC, V8571, P81
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kaleeswaran S., ICSE, P266
   Kohler C., 2007, ECEASST, V6
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kusel A., 2009, ICECCS, P329
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Muntean P, 2015, LECT NOTES COMPUT SC, V9337, P441, DOI 10.1007/978-3-319-24255-2_32
   Muslu K, 2012, ACM SIGPLAN NOTICES, V47, P669, DOI 10.1145/2398857.2384665
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Proksch S., 2014, Proceedings of the 4th International Workshop on Recommendation Systems for Software Engineering, P14
   Rahim L. A., SOFTW SYST MODEL, V14, P1003
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wimmer M., 2009, DSM
NR 39
TC 21
Z9 21
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 779
EP 813
DI 10.1007/s10270-016-0541-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000005
DA 2024-07-18
ER

PT J
AU Reijers, HA
   Vanderfeesten, I
   Plomp, MGA
   Van Gorp, P
   Fahland, D
   van der Crommert, WLM
   Garcia, HDD
AF Reijers, Hajo A.
   Vanderfeesten, Irene
   Plomp, Marijn G. A.
   Van Gorp, Pieter
   Fahland, Dirk
   van der Crommert, Wim L. M.
   Diaz Garcia, H. Daniel
TI Evaluating data-centric process approaches: Does the human factor factor
   in?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process modeling; User; Usability; Data-centric; Evaluation; Review
ID PARADIGM
AB The Business Process Management field addresses design, improvement, management, support, and execution of business processes. In doing so, we argue that it focuses more on developing modeling notations and process design approaches than on the needs and preferences of the individual who is modeling (i.e., the user). New data-centric process modeling approaches are taken as a relevant and timely stream of process design approaches to test our argument. First, we provide a review of existing data-centric process approaches, culminating in a theoretical classification framework. Next, we empirically evaluate three specific approaches with regard to the claims they make. We had participants representative of actual users try out these approaches on realistic scenarios via a series of workshops. Participants assessed to what extent quality claims from the literature could be recognized within the workshop sessions. The results of this evaluation substantiate a number of claims behind the approaches, but also identify opportunities to further improve them. Most prominently, we found that the usability aspects of all considered approaches are a source of concern. This leads us to the insight that usability aspects of process design approaches are crucial and, in the perception of groups representative of actual users, leave much to be desired. In that sense, our research can be seen as a wake-up call for process modeling notation designers to consider the usability side-and as such, the interest of the human modeler-more than is currently the case.
C1 [Reijers, Hajo A.] Vrije Univ Amsterdam, Fac Sci Informat Management & Software Engn, Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
   [Vanderfeesten, Irene] Eindhoven Univ Technol, Business Proc Management & Informat Syst, Eindhoven, Netherlands.
   [Van Gorp, Pieter] Eindhoven Univ Technol, Sch Ind Engn, Eindhoven, Netherlands.
   [Fahland, Dirk] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [van der Crommert, Wim L. M.] Precedence, Maastricht, Netherlands.
   [Diaz Garcia, H. Daniel] Ericsson, Mexico City, DF, Mexico.
   [Plomp, Marijn G. A.] Vrije Univ Amsterdam, Fac Econ & Business Adm, Knowledge Informat & Innovat KIN Res Grp, Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam; Eindhoven University of Technology;
   Eindhoven University of Technology; Eindhoven University of Technology;
   Ericsson; Vrije Universiteit Amsterdam
RP Reijers, HA (corresponding author), Vrije Univ Amsterdam, Fac Sci Informat Management & Software Engn, Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM h.a.reijers@vu.nl; m.g.a.plomp@vu.nl
RI Van Gorp, Pieter/L-9144-2013; Vanderfeesten, Irene/B-6181-2019
OI Van Gorp, Pieter/0000-0001-5197-3986; Vanderfeesten,
   Irene/0000-0002-6670-5519; Reijers, Hajo/0000-0001-9634-5852; Fahland,
   Dirk/0000-0002-1993-9363
CR Bandara W, 2007, THESIS
   Bhattacharya K., 2009, DATA CENTRIC DESIGN, P503
   Cooper H.M., 1998, SYNTHESIZING RES GUI, V2
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DiCicco-Bloom B, 2006, MED EDUC, V40, P314, DOI 10.1111/j.1365-2929.2006.02418.x
   Flick, 2014, INTRO QUALITATIVE RE
   Henriques R, 2011, LECT NOTES BUS INF P, V66, P683
   Kappel G., 2000, ACM COMPUT SURV, V32
   Krishnan R, 2002, LECT NOTES COMPUT SC, V2465, P348
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4714, P165
   Marchetti A, 2005, LECT NOTES COMPUT SC, V3806, P290
   Moody D.L., 2003, P 11 EUR C INF SYST, P1327
   Müller D, 2007, LECT NOTES COMPUT SC, V4803, P131
   Müller D, 2008, LECT NOTES COMPUT SC, V5074, P48
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Radatz J., 1990, 610121990 IEEE
   Redding G, 2010, SERV ORIENTED COMPUT, V4, P191, DOI 10.1007/s11761-010-0065-4
   Reijers HA, 2003, J MANAGE INFORM SYST, V20, P229
   Rodriguez-Priego E, 2010, LECT NOTES COMPUT SC, V6395, P361
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Vanderfeesten I, 2011, INFORM SYST, V36, P517, DOI 10.1016/j.is.2010.09.008
   Vossen G, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P587, DOI 10.1145/304181.304586
   Wang JR, 2005, LECT NOTES COMPUT SC, V3649, P285, DOI 10.1007/11538394_19
   Wirtz G, 2001, INFORM SYST FRONT, V3, P357, DOI 10.1023/A:1011417710529
NR 27
TC 9
Z9 9
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 649
EP 662
DI 10.1007/s10270-015-0491-z
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800004
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Burger, E
   Henss, J
   Küster, M
   Kruse, S
   Happe, L
AF Burger, Erik
   Henss, Joerg
   Kuester, Martin
   Kruse, Steffen
   Happe, Lucia
TI View-based model-driven software development with ModelJoin
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE View-based modeling; Model-driven software development; Model
   transformation; Model-based query language
ID SEMANTICS
AB Fragmentation of information across instances of different metamodels poses a significant problem for software developers and leads to a major increase in effort of transformation development. Moreover, compositions of metamodels tend to be incomplete, imprecise, and erroneous, making it impossible to present it to users or use it directly as input for applications. Customized views satisfy information needs by focusing on a particular concern, and filtering out information that is not relevant to this concern. For a broad establishment of view-based approaches, an automated solution to deal with separate metamodels and the high complexity of model transformations is necessary. In this paper, we present the ModelJoin approach for the rapid creation of views. Using a human-readable textual DSL, developers can define custom views declaratively without having to write model transformations or define a bridging metamodel. Instead, a metamodel generator and higher-order transformations create annotated target metamodels and the appropriate transformations on-the-fly. The resulting views, which are based on these metamodels, contain joined instances and can effectively express concerns unforseen during metamodel design. We have applied the ModelJoin approach and validated the textual DSL in a case study using the Palladio Component Model.
C1 [Burger, Erik; Henss, Joerg; Happe, Lucia] Karlsruhe Inst Technol, Inst Program Structures & Data Org IPD, Fasanengarten 5, D-76131 Karlsruhe, Germany.
   [Kuester, Martin] FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
   [Kruse, Steffen] OFFIS Inst Informat Technol, Escherweg 2, D-26121 Oldenburg, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Burger, E (corresponding author), Karlsruhe Inst Technol, Inst Program Structures & Data Org IPD, Fasanengarten 5, D-76131 Karlsruhe, Germany.
EM burger@kit.edu; henss@kit.edu; kuester@fzi.de; steffen.kruse@offis.de;
   lucia.happe@kit.edu
RI Burger, Erik/KVZ-2777-2024
OI Burger, Erik/0000-0003-2832-3349; Happe, Lucia/0000-0003-1117-6880
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   [Anonymous], P 27 IEEE ACM INT C
   [Anonymous], 1990, The relational model for database management: version 2
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   Atkinson C, 2008, LECT NOTES COMPUT SC, V5153, P54
   Atkinson C, 2010, COMM COM INF SC, V69, P206
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Becker, 2011, PALLADIO COMPONENT M
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bendix L, 2009, LECT NOTES COMPUT SC, V5795, P167, DOI 10.1007/978-3-642-04425-0_13
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4066, P346
   Bouzitouna S., 2005, P INT C SOFTW ENG RE
   Brun COdric., 2008, UPGRADE, The European Journal for the Informatics Professional IX, V2, P29
   Burger E., 2014, P MOD 2014, V225
   Burger E., 2010, P MOD 2010, V161
   Burger E., 2014, MODELJOINT TEXTUAL D
   Burger Erik Johannes, 2013, P 18 INT DOCTORAL S, V13, P25, DOI [10.1145/2465498.2465501, DOI 10.1145/2465498.2465501]
   Cicchetti A., 2011, ELECTR COMMUN
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Clasen C, 2011, LECT NOTES COMPUT SC, V6999, P332, DOI 10.1007/978-3-642-24574-9_43
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Fleurey F, 2008, LECT NOTES COMPUT SC, V5002, P7
   Foster JN, 2005, ACM SIGPLAN NOTICES, V40, P233, DOI 10.1145/1047659.1040325
   France R, 2007, SOFTW SYST MODEL, V6, P1, DOI 10.1007/s10270-006-0041-9
   Goldschmidt T., 2012, P MOD 2012 BAMB
   Goldschmidt T., 2010, P 15 IEEE INT C ENG
   Happe L., 2014, PROGR IN IS, DOI [10.1007/978-3-319-04144-5, DOI 10.1007/978-3-319-04144-5]
   Hegedus Abel, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P134, DOI 10.1007/978-3-642-33666-9_10
   Hein C., 2009, WORKSH FUT TRENDS MO
   Herrmann C, 2007, LECT NOTES COMPUT SC, V4530, P99
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   IEEE Computer Society, 2007, 42010 ISOIEC, pc1, DOI DOI 10.1109/IEEESTD.2007.386501
   Johnson R., 1995, DESIGN PATTERNS ELEM
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   KIENZLE J, 2009, P 8 INT C ASP OR SOF, P87, DOI DOI 10.1145/1509239.1509252
   KNOPFEL A, 2006, FUNDAMENTAL MODELING
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kramer MaxE., 2013, P 1 WORKSHOP VIEW BA, DOI DOI 10.1145/2489861.2489864
   Kruchten P., 2007, ADDISON WESLEY OBJEC
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Lechtenborger J., 2003, P 22 ACM SIGMOD SIGA, P49, DOI DOI 10.1145/773153.773159
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Mendenhall William., 2005, Introduction to Probability and Statistics, V12th
   REDDY MP, 1994, IEEE T KNOWL DATA EN, V6, P920, DOI 10.1109/69.334882
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHETH AP, 1990, COMPUT SURV, V22, P183, DOI 10.1145/96602.96604
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   Yang Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P61
NR 52
TC 21
Z9 21
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 473
EP 496
DI 10.1007/s10270-014-0413-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800010
DA 2024-07-18
ER

PT J
AU Ma, Q
   Kelsen, P
   Glodt, C
AF Ma, Qin
   Kelsen, Pierre
   Glodt, Christian
TI A generic model decomposition technique and its application to the
   Eclipse modeling framework
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; EMF; Model decomposition; Model comprehension; Linear-time
   algorithm; Sub-model lattice; OCL; EssentialOCL; BPMN; fUML
ID OCL
AB Model-driven software development aims at easing the process of software development by using models as primary artifacts. Although less complex than the real systems, they are based on models tend to be complex nevertheless, thus making the task of handling them non-trivial in many cases. In this paper, we propose a generic model decomposition technique to facilitate model management by decomposing complex models into smaller sub-models that conform to the same metamodel as the original model. The technique is based upon a formal foundation that consists of a formal capturing of the concepts of models, metamodels, and model conformance; a formal constraint language based on EssentialOCL; and a set of formally proved properties of the technique. We organize the decomposed sub-models in a mathematical structure as a lattice, and design a linear-time algorithm for constructing this decomposition. The generic model decomposition technique is applied to the Eclipse modeling framework, and the result is used to build a solution to a specific model comprehension problem of Ecore models based upon model pruning. We report two case studies of the model comprehension method: one in BPMN and the other in fUML.
C1 [Ma, Qin; Kelsen, Pierre; Glodt, Christian] Univ Luxembourg, FSTC, Richard Coudenhove Kaler, Luxembourg.
   [Ma, Qin; Kelsen, Pierre] Univ Luxembourg, SnT, Richard Coudenhove Kaler, Luxembourg.
C3 University of Luxembourg; University of Luxembourg
RP Ma, Q (corresponding author), Univ Luxembourg, FSTC, Richard Coudenhove Kaler, Luxembourg.
EM qin.ma@uni.lu
RI Ma, Qin/AAI-3810-2021
OI Ma, Qin/0000-0001-8520-8190
CR Alanen M, 2008, SOFTW SYST MODEL, V7, P103, DOI 10.1007/s10270-007-0049-9
   Amrani M., 2012, FORMAL PRACTICAL ASP
   Androutsopoulos Kelly, 2012, IEEE T SOFTWARE ENG, V99, P1
   [Anonymous], BUS PROC MOD NOT BPM
   [Anonymous], 2018, Graduate Texts in Mathematics
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Blouin A, 2011, LECT NOTES COMPUT SC, V6981, P62, DOI 10.1007/978-3-642-24485-8_6
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Bottoni P, 2000, LECT NOTES COMPUT SC, V1939, P294
   Cengarle M. V., 2001, LECT NOTES COMPUTER, P118
   Clark T., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P17
   Distefano D, 2000, INT FED INFO PROC, V49, P305
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Flake S, 2004, P 27 AUSTR C COMP SC, P73
   Flake S., 2004, ELECT NOTES THEOR CO, V102, P77
   Flake Stephan., 2003, Software and System Modeling, V2, P164, DOI [10.1007/s10270-003-0026-x, DOI 10.1007/S10270-003-0026-X]
   Frantz FK, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P1413
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kelsen P, 2010, LECT NOTES COMPUT SC, V6013, P173, DOI 10.1007/978-3-642-12029-9_13
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Object Management Group (OMG), 2012, OBJ CONSTR LANG VERS
   OMG, 2011, SEM FDN SUBS EX UML
   OMG Object Management Group, 2011, MET FAC MOF COR SPEC
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Richters M., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P449
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 33
TC 7
Z9 7
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 921
EP 952
DI 10.1007/s10270-013-0348-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400024
DA 2024-07-18
ER

PT J
AU Smith, E
AF Smith, Einar
TI Petri and how he saw the world
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Petri Nets; Concurrency; Asynchronous systems; Discrete density;
   Measuring theory
AB This article is a short summary and explanation of the scientific work of Carl Adam Petri. The very basics of net theory are sufficient to understand it.
C1 Fraunhofer Inst Algorithms & Sci Comp SCAI, Schloss Birlinghoven, D-53754 St Augustin, Germany.
C3 Fraunhofer Gesellschaft
RP Smith, E (corresponding author), Fraunhofer Inst Algorithms & Sci Comp SCAI, Schloss Birlinghoven, D-53754 St Augustin, Germany.
EM einar.smith@scai.fraunhofer.de
CR Petri A, 1965, 3 C AUT HANN 1965, V3, P121
   Petri A, 1963, P IFIP C, V62, P386
   Petri C. A., 1977, Measuring, Modelling and Evaluating Computer Systems, P435
   Petri C.A., 1976, ISF766 GES MATH DAT
   Petri C.A, 1962, SCHRITEN IIM NR
   Petri C. A., 1977, P 1976 JOINT IBM U N, P131
   Petri C. A., 1973, P S SUMM SCH MATH FD, P137
   Petri C.A., 1979, BERICHTE GMD, P63
   Petri C.A., 1977, ISF7806 GES MATH DAT
   PETRI CA, 1982, INT J THEOR PHYS, V21, P979, DOI 10.1007/BF02084163
   PETRI CA, 1987, LECT NOTES COMPUT SC, V266, P273
   PETRI CA, 1976, ISF7507 GES MATH DAT
NR 12
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 727
EP 733
DI 10.1007/s10270-014-0427-z
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400015
DA 2024-07-18
ER

PT J
AU Tairas, R
   Cabot, J
AF Tairas, Robert
   Cabot, Jordi
TI Corpus-based analysis of domain-specific languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; DSL; Corpus; Analysis; ATL; Puppet
ID CODE; USER
AB As more domain-specific languages (DSLs) are designed and developed, the need to evaluate these languages becomes an essential part of the overall DSL life cycle. Corpus-based analysis can serve as an evaluation mechanism to identify characteristics of the language after it has been deployed by looking at how end-users employ it in practice. This analysis that is based on actual usage of the language brings a new perspective which can be considered by a language engineer when working toward improving the language. In this paper, we describe our utilization of corpus-based analysis techniques and exemplify them on the evaluation of the Puppet and ATL DSLs. We also outline an Eclipse plug-in, which is a generic corpus-based DSL analysis tool that can accommodate the evaluation of different DSLs.
C1 [Tairas, Robert; Cabot, Jordi] Ecole Mines Nantes INRIA LINA, AtlanMod, Nantes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique
RP Tairas, R (corresponding author), Ecole Mines Nantes INRIA LINA, AtlanMod, Nantes, France.
EM ratairas@gmail.com
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489
CR Abrahao S, 2008, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84628-941-5_1
   [Anonymous], 1997, ACM SIGACT NEWS
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Berenbach B, 2004, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2004.1317445
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Gabriel P., 2011, P 13 C IB SOFTW ENG, P149, DOI [10.48550/ARXIV.1109.6794, DOI 10.48550/ARXIV.1109.6794]
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Hage J, 2009, LECT NOTES COMPUT SC, V5452, P35, DOI 10.1007/978-3-642-00434-6_4
   Han J., 2005, DATA MINING CONCEPTS
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hubaux A, 2011, LECT NOTES COMPUT SC, V6563, P337, DOI 10.1007/978-3-642-19440-5_23
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim H., 2002, WORKSH QUANT APPR OB
   Lammel Ralf, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P104, DOI 10.1109/ICPC.2010.45
   Lange CFJ, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P327
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Monperrus M, 2011, SOFTW SYST MODEL, V10, P537, DOI 10.1007/s10270-010-0165-9
   Recker J., 2009, AM C INF SYST MEAS M
   Storrle H, 2012, SOFTW SYST MODEL, P1
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Tairas R., 2011, LECT NOTES COMPUTER, P60
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   van Amstel M., 2010, P JOINT ERCIM WORKSH, P48
   Xtext, 2012, XTEXT DOC
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 32
TC 5
Z9 6
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 889
EP 904
DI 10.1007/s10270-013-0352-6
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400022
DA 2024-07-18
ER

PT J
AU Izquierdo, JLC
   Molina, JG
AF Canovas Izquierdo, Javier Luis
   Garcia Molina, Jesus
TI Extracting models from source code in software modernization
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model-driven software development;
   Domain-specific languages; Software modernization; Model-driven software
   modernization
AB Model-driven software modernization is a discipline in which model-driven development (MDD) techniques are used in the modernization of legacy systems. When existing software artifacts are evolved, they must be transformed into models to apply MDD techniques such as model transformations. Since most modernization scenarios (e.g., application migration) involve dealing with code in general-purpose programming languages (GPL), the extraction of models from GPL code is an essential task in a model-based modernization process. This activity could be performed by tools to bridge grammarware and MDD technical spaces, which is normally carried out by dedicated parsers. Grammar-to-Model Transformation Language (Gra2MoL) is a domain-specific language (DSL) tailored to the extraction of models from GPL code. This DSL is actually a text-to-model transformation language which can be applied to any code conforming to a grammar. Gra2MoL aims to reduce the effort needed to implement grammarware-MDD bridges, since building dedicated parsers is a complex and time-consuming task. Like ATL and RubyTL languages, Gra2MoL incorporates the binding concept needed to write mappings between grammar elements and metamodel elements in a simple declarative style. The language also provides a powerful query language which eases the retrieval of scattered information in syntax trees. Moreover, it incorporates extensibility and grammar reuse mechanisms. This paper describes Gra2MoL in detail and includes a case study based on the application of the language in the extraction of models from Delphi code.
C1 [Canovas Izquierdo, Javier Luis; Garcia Molina, Jesus] Univ Murcia, Murcia, Spain.
   [Garcia Molina, Jesus] Univ Murcia, Fac Informat, Dept Informat & Sistemas, E-30071 Murcia, Spain.
   [Canovas Izquierdo, Javier Luis] EMN, LINA, INRIA, AtlanMod, Nantes, France.
C3 University of Murcia; University of Murcia; Inria; IMT - Institut
   Mines-Telecom; IMT Atlantique
RP Izquierdo, JLC (corresponding author), Ecole Mines Nantes, La Chantrerie 4,Rue Alfred Kastler,BP 20722, F-44307 Nantes, France.
EM jlcanovas@um.es; jmolina@um.es
RI Izquierdo, Javier Luis Canovas/E-8940-2016; Izquierdo, Javier Luis
   Canovas/JAO-0822-2023; GARCIA-MOLINA, JESUS J/X-7078-2019
OI Izquierdo, Javier Luis Canovas/0000-0002-2326-1700; 
FU Spanish government [TIN2009-11555]; Fundacion Seneca of the Regional
   Government of Murcia [15389/PI/10]
FX This work has been supported by the Spanish government (TIN2009-11555
   project) and the Fundacion Seneca of the Regional Government of Murcia
   (15389/PI/10 grant).
CR ADM Task Force, 2006, ARCH DRIV MOD SCEN
   Andrade L, 2006, LECT NOTES COMPUT SC, V4143, P261
   [Anonymous], 2006, OCL CONSTR LANG
   Canovas Izquierdo J.L., 2008, WORKSH MOD DRIV SOFT
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Izquierdo JLC, 2009, LECT NOTES COMPUT SC, V5562, P82, DOI 10.1007/978-3-642-02674-4_7
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   CZARNECKI K, 2003, P 2 OOPSLA WORKSH GE
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Fowler M., 2011, DOMAIN SPECIFIC LANG
   Heaton L., 2005, METAOBJECT FACILITY
   Heckel R., 2008, SOFTWARE EVOLUTION, P170
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kunert A, 2008, ELECTRON NOTES THEOR, V211, P111, DOI 10.1016/j.entcs.2008.04.034
   Kurtev I., 2002, COOP INF SYST DOA 20
   Prinz A, 2007, LECT NOTES COMPUT SC, V4745, P1
   Reus T, 2006, LECT NOTES COMPUT SC, V4066, P213
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Scheidgen M, 2008, LECT NOTES COMPUT SC, V5095, P153, DOI 10.1007/978-3-540-69100-6_11
   Wijngaarden J., 2003, THESIS
   Wijngaarden J., 2003, UUCS2003048 DEP INF
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
NR 23
TC 19
Z9 22
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 713
EP 734
DI 10.1007/s10270-012-0270-z
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Garcés, K
   Vara, JM
   Jouault, F
   Marcos, E
AF Garces, Kelly
   Vara, Juan M.
   Jouault, Frederic
   Marcos, Esperanza
TI Adapting transformations to metamodel changes via external
   transformation composition
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Metamodel evolution; Transformation adaptation
ID MODEL TRANSFORMATIONS
AB Evolution is inherent to software systemsbecause of the rapid improvement of technologies and business logic. As a software development paradigm, model driven engineering (MDE) is also affected by this problem. More concretely, being metamodels the cornerstone of MDE, their evolution impacts the rest of software artefacts involved in a development process, i.e., models and transformations. The influence over models has been tackled and partially solved in previous works. This paper focuses on the impact over transformations. We propose an approach to adapt transformations by means of external transformation composition. That is, we chain impacted transformations to particular adaptation transformations which deal with either refactoring/destruction changes or construction changes. Our approach semi-automatically generates such transformations by using the AtlanMod matching language, a DSL to define model matching strategies. To provide with a proof of concept for our proposal, we adapt transformations written in terms of object-relational database metamodels when such metamodels evolve in time.
C1 [Garces, Kelly] INRIA EMN, ASCOLA, AtlanMod, Nantes, France.
   [Vara, Juan M.; Marcos, Esperanza] Rey Juan Carlos Univ, Kybele Res Grp, Madrid, Spain.
   [Jouault, Frederic] INRIA EMN, AtlanMod, Nantes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Universidad Rey Juan
   Carlos; IMT - Institut Mines-Telecom; IMT Atlantique
RP Garcés, K (corresponding author), INRIA EMN, ASCOLA, AtlanMod, Nantes, France.
EM kelly.garces.pernett@gmail.com; juanmanuel.vara@urjc.es;
   frederic.jouault@inria.fr; esperanza.marcos@urjc.es
RI Martinez, Esperanza Marcos/JCE-5935-2023; Martinez, Esperanza
   Marcos/AAS-8564-2021; Vara, Juan Manuel/K-6774-2014
OI Vara, Juan Manuel/0000-0002-8637-6580; Marcos,
   Esperanza/0000-0003-2666-9995
CR [Anonymous], 2003, 907522003 ISOIEC
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Cicchetti A., 2010, P 3 INT C SOFTW LANG
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Didonet del Fabro M., 2007, THESIS U NANTES
   Etien A., 2010, P 2010 ACM S APPL CO, P2237
   Feuerlicht G, 2009, INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND EDUCATION, VOLS 1AND 2, P975, DOI 10.1007/978-0-387-78578-3_30
   Garces K., 2010, THESIS U NANTES
   Garces K., 2008, TECHNICAL REPORT
   Garces K., 2009, P 5 EUR C MOD DRIV A
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6142, P108, DOI 10.1007/978-3-642-13688-7_8
   Herrmannsdoerfer M., 2010, 3 INT C SOFTW LANG E
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Hussey K., TUTORIAL ADV FEATURE
   Jouault F., 2006, THESIS U NANTES
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kleppe A., 2006, TECHNICAL REPORT
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Levendovszky Tihamer, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P23
   Garcia JM, 2010, LECT NOTES COMPUT SC, V6089, P1, DOI [10.1007/978-3-642-13489-0_1, 10.1109/SENSORDEVICES.2010.8]
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Oracle Corporation, 2008, OR DAT 10G REL 2 10
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Rose L., 2010, MODEL MIGRATION EPSI
   Rose L., 2010, MOD 2010 IN PRESS
   Ruscio D.D., 2010, Software Language Engineering, P143
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Vara J.M., 2009, THESIS U RJ CARLOS M
   Vignaga A, 2009, LECT NOTES COMPUT SC, V5563, P197, DOI 10.1007/978-3-642-02408-5_14
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Xiong YF, 2009, LECT NOTES COMPUT SC, V5563, P213, DOI 10.1007/978-3-642-02408-5_15
NR 38
TC 15
Z9 15
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 789
EP 806
DI 10.1007/s10270-012-0297-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300016
DA 2024-07-18
ER

PT J
AU Zheng, YJ
   Taylor, RN
AF Zheng, Yongjie
   Taylor, Richard N.
TI A classification and rationalization of model-based software development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based software development; Model-driven development;
   Architecture-centric development
ID DESIGN; COMPONENTS
AB The use of model-based software development is increasingly popular due to recent advancements in modeling technology. Numerous approaches exist; this paper seeks to organize and characterize them. In particular, important terminological confusion, challenges, and recurring techniques of model-based software development are identified and rationalized. New perspectives are provided on some fundamental issues, such as the distinctions between model-driven development and architecture-centric development, code generation, and metamodeling. On the basis of this discussion, we opine that architecture-centric development and domain-specific model-driven development are the two most promising branches of model-based software development. Achieving a positive future will require, however, specific advances in software modeling, code generation, and model-code consistency management.
C1 [Zheng, Yongjie] Univ Missouri, Dept Comp Sci & Elect Engn, Sch Comp & Engn, Kansas City, MO 64110 USA.
   [Taylor, Richard N.] Univ Calif Irvine, Inst Software Res, Irvine, CA 92697 USA.
C3 University of Missouri System; University of Missouri Kansas City;
   University of California System; University of California Irvine
RP Zheng, YJ (corresponding author), Univ Missouri, Dept Comp Sci & Elect Engn, Sch Comp & Engn, Kansas City, MO 64110 USA.
EM yzheng@umkc.edu; taylor@ics.uci.edu
FU National Science Foundation [CCF-0917129, CCF-0820222]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [0917129] Funding Source: National Science Foundation
FX This work is supported in part by the National Science Foundation under
   grants CCF-0917129 and CCF-0820222.
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2004, Software Factories
   BALZER R, 1985, IEEE T SOFTWARE ENG, V11, P1257, DOI 10.1109/TSE.1985.231877
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CLEAVELAND C, 2001, PROGRAM GENERATORS X
   Clements P., 2002, DOCUMENTING SOFTWARE
   Czarnecki K, 1999, LECT NOTES COMPUT SC, V1687, P2, DOI 10.1145/318774.318779
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   Fowler M., UMLMODE
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Herrington J., 2003, Code Generation in Action
   Kelly S., 2008, Domain-Specific Modeling
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Matinlassi M., 2002, QUALITY DRIVEN ARCHI
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 1997, PROC INT CONF SOFTW, P692, DOI [10.1145/253228.253838, 10.1145/258368.258421]
   MORICONI M, 1995, IEEE T SOFTWARE ENG, V21, P356, DOI 10.1109/32.385972
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S., 2003, IEEE SOFTW, V20
   SENDALL S, 2004, P WORKSH BEST PRACT
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sztipanovits J, 1997, COMPUTER, V30, P110, DOI 10.1109/2.585163
   Tarr P., 1999, P 21 INT C SOFTW ENG
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
   YAN H, 2004, P 26 INT C SOFTW ENG
   Zheng YJ, 2012, PROC INT CONF SOFTW, P628, DOI 10.1109/ICSE.2012.6227154
NR 32
TC 9
Z9 12
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 669
EP 678
DI 10.1007/s10270-013-0355-3
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600002
DA 2024-07-18
ER

PT J
AU Hamou-Lhadj, A
   Lethbridge, TC
AF Hamou-Lhadj, Abdelwahab
   Lethbridge, Timothy C.
TI A metamodel for the compact but lossless exchange of execution traces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodelling; Exchange format; Execution traces; Dynamic analysis
AB Understanding the behavioural aspects of a software system can be made easier if efficient tool support is provided. Lately, there has been an increase in the number of tools for analysing execution traces. These tools, however, have different formats for representing execution traces, which hinders interoperability and limits reuse and sharing of data. To allow for better synergies among trace analysis tools, it would be beneficial to develop a standard format for exchanging traces. In this paper, we present a graph-based format, called compact trace format (CTF), which we hope will lead the way towards such a standard. CTF can model traces generated from a variety of programming languages, including both object-oriented and procedural ones. CTF is built with scalability in mind to overcome the vast size of most interesting traces. Indeed, the design of CTF is based on the idea that call trees can be transformed into more compact ordered acyclic directed graphs by representing similar subtrees only once. CTF is also supported by our trace analysis tool SEAT (Software Exploration and Analysis Tool).
C1 [Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Lethbridge, Timothy C.] Univ Ottawa, SITE, Ottawa, ON, Canada.
C3 Concordia University - Canada; University of Ottawa
RP Hamou-Lhadj, A (corresponding author), Concordia Univ, Dept Elect & Comp Engn, 1455 Maisonneuve W, Montreal, PQ, Canada.
EM abdelw@ece.concordia.ca; tcl@site.uottawa.ca
RI Lethbridge, Timothy/I-3199-2014
OI Lethbridge, Timothy/0000-0001-9410-2056; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
CR Bowman T., 1999, P 1 INT S CONSTR SOF, P43
   Brown R., 2002, WORKSH PROGR ANAL SO, V28, P27
   Chan A, 2003, PROG COMPREHEN, P237
   Chilimbi Trishul., 2000, ISMM 00, P35
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   DOWNEY PJ, 1980, J ACM, V27, P758, DOI 10.1145/322217.322228
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Dugerdil P, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P38
   Ebert J., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P89, DOI 10.1109/WCRE.1999.806950
   Eisenbarth T, 2001, PROG COMPREHEN, P300, DOI 10.1109/WPC.2001.921740
   FLAJOLET P, 1990, LECT NOTES COMPUT SC, V443, P220, DOI 10.1007/BFb0032034
   Hamou-Lhadj A, 2005, PROG COMPREHEN, P157, DOI 10.1109/WPC.2005.30
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hamou-Lhadj A., 2005, P 10 IEEE INT C ENG
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Holt R.C., 1998, TUPLE ATTRIBUTE LANG
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   Jerding D., 1997, P 4 WORK C REV ENG A
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Johnson B., 1991, Proceedings Visualization '91 (Cat. No.91CH3046-0), P284, DOI 10.1109/VISUAL.1991.175815
   Johnson EE, 2001, IEEE T COMPUT, V50, P158, DOI 10.1109/12.908991
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   Larus JR, 1999, ACM SIGPLAN NOTICES, V34, P259, DOI 10.1145/301631.301678
   Leduc Johanne., 2004, REVERSE ENG UML SEQU
   LETHBRIDGE T, 1997, TR9707 U OTT
   Lethbridge T.C., 2003, P 1 INT WORKSH MET M
   McQuillan J.A., 2006, 4 INT C PRINCIPLES P, P194
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   Pollet D, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P137
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Richner T, 2002, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2002.1167745
   Scheuerl S.J.G., 1995, CS954 U ST ANDR SCH
   STDENIS G, 2000, P 33 ANN HAW INT C S
   Systa T., 1999, P ECOOP WORKSH OBJ O, P174
   TAI KC, 1979, J ACM, V26, P422, DOI 10.1145/322139.322143
   Valiente G., 2000, E08034 TU CAT
   Woods S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P391, DOI 10.1109/ICSM.1999.792637
   UML 2 0 SUPERSTRUCTU
   KNOWLEDGE DISCOVERY
NR 41
TC 9
Z9 11
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 77
EP 98
DI 10.1007/s10270-010-0180-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500007
DA 2024-07-18
ER

PT J
AU Maoz, S
   Harel, D
AF Maoz, Shahar
   Harel, David
TI On tracing reactive systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software visualization; UML interactions; Sequence diagrams; Live
   sequence charts; Model-based traces; Dynamic analysis
ID SEQUENCE; SEMANTICS; LSCS
AB We present a rich and highly dynamic technique for analyzing, visualizing, and exploring the execution traces of reactive systems. The two inputs are a designer's inter-object scenario-based behavioral model, visually described using a UML2-compliant dialect of live sequence charts (LSC), and an execution trace of the system. Our method allows one to visualize, navigate through, and explore, the activation and progress of the scenarios as they "come to life" during execution. Thus, a concrete system's runtime is recorded and viewed through abstractions provided by behavioral models used for its design, tying the visualization and exploration of system execution traces to model-driven engineering. We support both event-based and real-time-based tracing, and use details-on-demand mechanisms, multi-scaling grids, and gradient coloring methods. Novel model exploration techniques include semantics-based navigation, filtering, and trace comparison. The ideas are implemented and tested in a prototype tool called the Tracer.
C1 [Maoz, Shahar; Harel, David] Weizmann Inst Sci, IL-76100 Rehovot, Israel.
C3 Weizmann Institute of Science
RP Maoz, S (corresponding author), Weizmann Inst Sci, IL-76100 Rehovot, Israel.
EM shahar.maoz@weizmann.ac.il; dharel@weizmann.ac.il
OI Maoz, Shahar/0000-0002-4022-5349
FU John von Neumann Minerva Center for the Development of Reactive Systems
   at the Weizmann Institute of Science; European Research Council (ERC)
   under the European Community
FX Preliminary version appeared in VL/HCC '07: Proc. IEEE Symp. on Visual
   Languages and Human-Centric Computing (September 2007) [46]. This
   research was supported in part by the John von Neumann Minerva Center
   for the Development of Reactive Systems at the Weizmann Institute of
   Science, and by an Advanced Research Grant from the European Research
   Council (ERC) under the European Community's Seventh Framework Programme
   (FP7/2007-2013).
CR Aigner W, 2007, COMPUT GRAPH-UK, V31, P401, DOI 10.1016/j.cag.2007.01.030
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   [Anonymous], P ASE 2008
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   ASARIN E, 1995, THEOR COMPUT SCI, V138, P35, DOI 10.1016/0304-3975(94)00228-B
   Atir Y, 2008, LECT NOTES COMPUT SC, V4961, P301, DOI 10.1007/978-3-540-78743-3_23
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Gallagher M, 2003, IEEE C EVOL COMPUTAT, P2462
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2002, MASCOTS 2002: 10TH IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS, PROCEEDINGS, P193, DOI 10.1109/MASCOT.2002.1167077
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   HAREL D, 1985, NATO ASI SERIES F, V13, P477
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Harel D, 2007, LECT NOTES COMPUT SC, V4422, P121
   Harel D, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P145
   Hochheiser H., 2004, Information Visualization, V3, P1, DOI 10.1057/palgrave.ivs.9500061
   Hosking JG, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P190, DOI 10.1109/VL.1996.545286
   *ITU, 1996, INT TEL UN REC Z 120
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Kam N, 2003, LECT NOTES COMPUT SC, V2602, P4
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Klose J, 2006, LECT NOTES COMPUT SC, V4144, P219, DOI 10.1007/11817963_22
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   LETTRARI M, 2001, LNCS, V2185, P317
   Lin J., 2005, Information Visualization, V4, P61, DOI 10.1057/palgrave.ivs.9500089
   MAOZ S, 2007, P IEEE S VIS LANG HU, P153
   Maoz S, 2009, LECT NOTES COMPUT SC, V5795, P301, DOI 10.1007/978-3-642-04425-0_22
   Maoz S, 2009, LECT NOTES COMPUT SC, V5795, P499, DOI 10.1007/978-3-642-04425-0_38
   Maoz S, 2009, LECT NOTES COMPUT SC, V5421, P109, DOI 10.1007/978-3-642-01648-6_12
   MARELLY R, 2002, P 17 ANN ACM C OBJ O, P83
   McGavin M., 2006, Proc. of the Australasian user interface conference, P153
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   ORSO A, 2003, P ACM 2003 S SOFTW V, P67
   Perlin K., 1993, P 20 ANN C COMPUTER, P57
   Reiss S.P., 2006, Proceedings of the 2006 ACM Symposium on Software Visualization, P125, DOI DOI 10.1145/1148493.1148512
   Reiss S.P., 2005, Proceedings of the 2005 ACM Symposium on Software Visualization, P115, DOI DOI 10.1145/1056018.1056034
   Reiss SP, 2007, J VISUAL LANG COMPUT, V18, P126, DOI 10.1016/j.jvlc.2007.01.003
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   Van Wijk J. J., 1999, Proceedings 1999 IEEE Symposium on Information Visualization (InfoVis'99), P4, DOI 10.1109/INFVIS.1999.801851
NR 52
TC 11
Z9 13
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 447
EP 468
DI 10.1007/s10270-010-0151-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200003
DA 2024-07-18
ER

PT J
AU Albert, M
   Cabot, J
   Gómez, C
   Pelechano, V
AF Albert, Manoli
   Cabot, Jordi
   Gomez, Cristina
   Pelechano, Vicente
TI Automatic generation of basic behavior schemas from UML class diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th MODELS Conference 2007
CY SEP 30-OCT 05, 2007
CL Nashville, TN
DE Behavior schema; Operation; Structural event; Class diagram; UML; OCL
ID SPECIFICATION; INFORMATION
AB The specification of a software system must include all relevant static and dynamic aspects of the domain. Dynamic aspects are usually specified by means of a behavioral schema consisting of a set of system operations that the user may execute to update the system state. To be useful, such a set must be complete (i.e. through these operations, users should be able to modify the population of all elements in the class diagram) and executable (i.e. for each operation, there must exist a system state over which the operation can be successfully applied). A manual specification of these operations is an error-prone and time-consuming activity. Therefore, the aim of this paper is to present a strategy for the automatic generation of a basic behavior schema. Operations in the schema are drawn from the static aspects of the domain as defined in the UML class diagram and take into account possible dependencies among them to ensure the completeness and executability of the operations. We believe our approach is especially useful in a Model-Driven Development setting, where the full implementation of the system is derived from its specification. In this context, our approach facilitates the definition of the behavioral specification and ensures its quality obtaining, as a result, an improved code generation phase.
C1 [Gomez, Cristina] Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, ES-08034 Barcelona, Spain.
   [Albert, Manoli; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software ProS, Valencia 46022, Spain.
   [Cabot, Jordi] Univ Oberta Catalunya, Barcelona 08018, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Valencia; UOC Universitat Oberta de Catalunya
RP Gómez, C (corresponding author), Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Campus Nord,Edif Omega,Jordi Girona 1-3, ES-08034 Barcelona, Spain.
EM malbert@dsic.upv.es; jcabot@uoc.edu; cristina@lsi.upc.edu;
   pele@dsic.upv.es
RI Albert, Manoli maa/F-7937-2016; Pelechano, Vicente/S-4344-2016; Cabot,
   Jordi/P-7723-2015
OI Pelechano, Vicente/0000-0003-1090-230X; Cabot,
   Jordi/0000-0003-2418-2489; Gomez Seoane, Cristina/0000-0002-3872-0439;
   Albert Albiol, Manuela/0000-0003-3747-400X
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Albert M, 2003, LECT NOTES COMPUT SC, V2681, P143
   Booch G., 2005, The Unified Modeling Language User Guide
   *BORL, TOG
   Cabot J, 2004, LECT NOTES COMPUT SC, V3273, P320
   Cabot J, 2003, LECT NOTES COMPUT SC, V2863, P44
   CABOT J, 2008, MODEVVA 08
   Cabot J, 2007, LECT NOTES COMPUT SC, V4801, P198
   Cabot J, 2007, LECT NOTES COMPUT SC, V4735, P196
   *CINCOMSMALLTALK, VISUALWORKS
   *COMP, OPTIMAL J
   Costal D, 1996, LECT NOTES COMPUT SC, V1080, P255
   COSTAL D, 2002, LNCS, V2348, P659
   COSTAL D, 1997, DATABASE EXPERT SYST, V1308, P673
   Engels G., 1992, Data & Knowledge Engineering, V9, P157, DOI 10.1016/0169-023X(92)90008-Y
   FONS J, 2008, EMPTRAINING EMPLOYEE
   *GENTL, POS UML
   *IBM SOFTW, RAT ROS
   *INT OB, 2007, ARCSTYLER OPENARCHIT
   *KENN CART, IUML
   Laleau R, 2001, INFORM SOFTWARE TECH, V43, P693, DOI 10.1016/S0950-5849(01)00178-1
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Link S, 2003, LECT NOTES COMPUT SC, V2582, P139
   Mcallister AJ, 1998, SOFTWARE PRACT EXPER, V28, P125, DOI 10.1002/(SICI)1097-024X(199802)28:2<125::AID-SPE146>3.0.CO;2-6
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   *MICR, VIS STUD 2008
   *MOSK, MOSK CONS INFR TRANS
   *OB MAN GROUP, 2006, FORMAL20060501 OMG
   *OB MAN GROUP, PTC060402 OB MAN GRO
   *OB SOFTW, OB UML
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   PASTOR JA, 1995, ADV INFORM SYST ENG, V932, P40
   Pastor O, 1997, LECT NOTES COMPUT SC, V1250, P145
   RAVENTOS R, 2005, CONC SCHEM C MAN APP
   Schewe KD, 1999, ACTA INFORM, V36, P97, DOI 10.1007/s002360050155
   Sendall S, 2002, LECT NOTES COMPUT SC, V2263, P250
   Sendall S, 2000, LECT NOTES COMPUT SC, V1939, P1
   *SOURCEFORGE, OCL TOOL PREC UML SP
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   TORT A, 2007, OSCOMMERCE CONCEPTUA
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
NR 41
TC 8
Z9 12
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 47
EP 67
DI 10.1007/s10270-008-0108-x
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 526UZ
UT WOS:000272321500004
DA 2024-07-18
ER

PT J
AU Mammar, A
AF Mammar, Amel
TI A systematic approach to generate B preconditions: application to the
   database domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Integrity constraints; Formal specification; B operations; Invariant;
   Precondition
AB Maintaining integrity constraints in information systems is a real issue. In our previous work, we have defined a formal approach that derives B formal specifications from a UML description of the system. Basically, the generated B specification is composed of a set of variables modeling data and a set of operations representing transactions. The integrity constraints are directly specified as B invariant properties. So far, the operations we generate establish only a reduced class of constraints. In this paper, we describe a systematic approach to identify preconditions that take a larger class of invariants into account. The key idea is the definition of rewriting and simplification rules that we apply to the B invariants.
C1 Inst Telecom SudParis, CNRS, SAMOVAR, F-91011 Evry, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   SudParis; Centre National de la Recherche Scientifique (CNRS)
RP Mammar, A (corresponding author), Inst Telecom SudParis, CNRS, SAMOVAR, 9 Rue Charles Fourier, F-91011 Evry, France.
EM amel.mammar@it-sudparis.eu
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   [Anonymous], 1992, The Z Notation
   CHAILLOUX E, 2000, DEV APPL AVEC OBJECT
   *CLEARSY AT B, 2004, MAN REF
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   Laleau R, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/ASE.2000.873675
   Lano K, 2004, LECT NOTES COMPUT SC, V2999, P187
   Ledang H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P289, DOI 10.1109/ASE.2001.989815
   LEDRU Y, 2003, P 13 INT C AUT SOFTW
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Mammar A, 2006, INFORM SOFTWARE TECH, V48, P253, DOI 10.1016/j.infsof.2005.05.002
   MAMMAR A, 2006, ASE J IN PRESS
   MAMMAR A, 2005, UB2SQL ATOOL BUILDIN
   MAMMAR A, 2002, THESIS CEDRIC LAB
   MARCANO R, 2002, CRITICAL SYSTEMS DEV, P155
   SAALTINK M, 1997, LECT NOTES COMPUTER, V1212, P72, DOI DOI 10.1007/BFB0027284]
   2004, CLEARSY
NR 17
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 385
EP 401
DI 10.1007/s10270-008-0098-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 466UE
UT WOS:000267687600006
DA 2024-07-18
ER

PT J
AU Zoor, M
   Apvrille, L
   Pacalet, R
   Coudert, S
AF Zoor, Maysam
   Apvrille, Ludovic
   Pacalet, Renaud
   Coudert, Sophie
TI Execution trace analysis for a precise understanding of latency
   violations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Embedded systems; Execution trace analysis; Dependency graph;
   Model-based systems engineering (MBSE); Timing analysis; Simulation
ID SYMBOLIC EXECUTION; SYSTEMS; LOGIC
AB Despite the amount of proposed works for the verification of embedded systems, understanding the root cause of violations of requirements in simulation or execution traces is still an open issue, especially when dealing with temporal properties such as latencies. Is the violation due to an unfavorable real-time scheduling, to contentions on buses, to the characteristics of functional algorithms or hardware components? The paper introduces the Precise Latency ANalysis approach (PLAN), a new trace analysis technique whose objective is to classify execution transactions according to their impact on latency. To do so, we rely first on a model transformation that builds up a dependency graph from an allocation model, thus including hardware and software aspects of a system model. Then, from this graph and an execution trace, our analysis can highlight how software or hardware elements contributed to the latency violation. The paper first formalizes the problem before applying our approach to simulation traces of SysML models. A case study defined in the AQUAS European project illustrates the relevance of our approach. Last, a performance evaluation gives computation times for several models and requirements.
C1 [Zoor, Maysam; Apvrille, Ludovic; Pacalet, Renaud; Coudert, Sophie] Inst Polytech Paris, LTCI, Telecom Paris, Sophia Antipolis, Biot, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   Paris
RP Apvrille, L (corresponding author), Inst Polytech Paris, LTCI, Telecom Paris, Sophia Antipolis, Biot, France.
EM maysam.zoor@telecom-paris.fr; ludovic.apvrille@telecom-paris.fr;
   renaud.pacalet@telecom-paris.fr; sophie.coudert@telecom-paris.fr
OI Zoor, Maysam/0009-0008-0740-6288
FU ECSEL JU [737475]
FX The AQUAS project was funded by ECSEL JU under Grant agreement no.
   737475.
CR Aboussoror El-Arbi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P107, DOI 10.1007/978-3-642-38911-5_7
   Alhirabi N, 2021, ACM T INTERNET THING, V2, DOI 10.1145/3437537
   [Anonymous], 2013, AGGREGATED QUALITY A
   [Anonymous], 2013, TTOOL
   [Anonymous], 2013, RETRO INGENERIE TRAC
   Apvrille, 2013, SYSML SEC SYSML ENV, P8, DOI DOI 10.1007/3-540-49255-0_169
   Apvrille L, 2019, DES AUT TEST EUROPE, P1631, DOI [10.23919/DATE.2019.8715124, 10.23919/date.2019.8715124]
   Barbehenn M, 1998, IEEE T COMPUT, V47, P263, DOI 10.1109/12.663776
   Baumeister J, 2020, LECT NOTES COMPUT SC, V12225, P28, DOI 10.1007/978-3-030-53291-8_3
   Blein Y., 2019, THESIS U GRENOBLE AL
   Brandenburg J, 2017, J SYST ARCHITECT, V77, P26, DOI 10.1016/j.sysarc.2016.12.009
   Buchmann R, 2004, ICEEC'04: 2004 INTERNATIONAL CONFERENCE ON ELECTRICAL, ELECTRONIC AND COMPUTER ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/ICEEC.2004.1374374
   Chen X, 2006, INT J PARALLEL PROG, V34, P3, DOI 10.1007/s10766-005-0002-x
   Chen X, 2004, IEEE T COMPUT AID D, V23, P1243, DOI 10.1109/TCAD.2004.831575
   Chen X, 2003, DES AUT CON, P460, DOI 10.1109/DAC.2003.1219045
   Coen-Porisini A., 2001, Software Engineering Notes, V26, P142, DOI 10.1145/503271.503230
   Convent L., 2018, LNCS, V11254, P144, DOI [DOI 10.1007/978-3-030-03044-5_10, 10.1007/978-3-030-03044, DOI 10.1007/978-3-030-03044]
   Currie D, 2006, INT J PARALLEL PROG, V34, P61, DOI 10.1007/s10766-005-0004-8
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Dawes J H., 2021, THESIS MANCHESTER U
   DeAntoni J., 2010, SIGSOFT FSE, P377, DOI DOI 10.1145/1882291
   Deantoni J., 2019, THESIS CNRS FRANCE
   DeAntoni J, 2012, LECT NOTES COMPUT SC, V7304, P34, DOI 10.1007/978-3-642-30561-0_4
   Enrici A., 2018, DIPLODOCUS OPEN SOUR
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2021, INT J SOFTW TOOLS TE, V23, P255, DOI 10.1007/s10009-021-00609-z
   Fisher M, 2021, AUTON AGENT MULTI-AG, V35, DOI 10.1007/s10458-020-09487-2
   Fujdiak R, 2018, 2018 41ST INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS AND SIGNAL PROCESSING (TSP), P288, DOI 10.1109/TSP.2018.8441496
   Gordon DM., 2007, P 8 INT WORKSH PERF
   Gruber T, 2018, LECT NOTES COMPUT SC, V11094, P151, DOI 10.1007/978-3-319-99229-7_14
   Hedde D, 2011, P IEEE RAP SYST PROT, P106, DOI 10.1109/RSP.2011.5929983
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Iegorov O, 2015, 2015 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), P167, DOI 10.1109/EMSOFT.2015.7318272
   Kangas T., 2006, ACM T EMBED COMPUT S, V5, P281
   Kemper P, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P427, DOI 10.1109/WSC.2005.1574278
   Kemper P, 2007, INT CONF QUANT EVAL, P101, DOI 10.1109/QEST.2007.41
   Kemper P, 2006, INT CONF QUANT EVAL, P135
   Kemper V., 2006, 559 SFB
   Kienhuis B, 2002, LECT NOTES COMPUT SC, V2268, P18
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Knorreck D, 2009, LECT NOTES BUS INF P, V33, P308
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Malan R., 2001, Defining non functional requirements
   Marwedel P., 2021, EVALUATION VALIDATIO
   Matovic A., 2019, THESIS MALARDALEN U
   Pagano Generoso, 2013, 2013 IEEE 7th International Symposium on Embedded Multicore/Manycore System-on-Chip (MCSoC), P119, DOI 10.1109/MCSoC.2013.28
   Pagano G., 2012, SOC TRACE INFRASTRUC
   Perez I., 2020, Technical report NASA/TM 2020-220587
   Pomante L, 2019, MICROPROCESS MICROSY, V69, P54, DOI 10.1016/j.micpro.2019.05.013
   Rozier KY, 2019, 2019 SPRING SIMULATION CONFERENCE (SPRINGSIM), DOI 10.23919/springsim.2019.8732915
   Yue DA, 2020, FRONT COMPUT SCI-CHI, V14, DOI 10.1007/s11704-018-7217-7
   Zheng BW, 2016, IEEE T COMPUT AID D, V35, P699, DOI 10.1109/TCAD.2016.2523937
   Zoor M, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P123, DOI 10.1109/MODELS50736.2021.00021
NR 53
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1519
EP 1541
DI 10.1007/s10270-022-01076-z
EA JAN 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000909032900001
DA 2024-07-18
ER

PT J
AU Barriga, A
   Rutle, A
   Heldal, R
AF Barriga, Angela
   Rutle, Adrian
   Heldal, Rogardt
TI AI-powered model repair: an experience report-lessons learned,
   challenges, and opportunities
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Artificial intelligence; Model repair; Challenges; Opportunities
ID AUTOMATED SUPPORT; INCONSISTENCIES; TRANSFORMATION; DIAGNOSIS
AB Artificial intelligence has already proven to be a powerful tool to automate and improve how we deal with software development processes. The application of artificial intelligence to model-driven engineering projects is becoming more and more popular; however, within the model repair field, the use of this technique remains mostly an open challenge. In this paper, we explore some existing approaches in the field of AI-powered model repair. From the existing approaches in this field, we identify a series of challenges which the community needs to overcome. In addition, we present a number of research opportunities by taking inspiration from other fields which have successfully used artificial intelligence, such as code repair. Moreover, we discuss the connection between the existing approaches and the opportunities with the identified challenges. Finally, we present the outcomes of our experience of applying artificial intelligence to model repair.
C1 [Barriga, Angela; Rutle, Adrian] Western Norway Univ Appl Sci, Bergen, Norway.
   [Heldal, Rogardt] Western Norway Univ Appl Sci, Software Engn, Bergen, Norway.
C3 Western Norway University of Applied Sciences; Western Norway University
   of Applied Sciences
RP Barriga, A (corresponding author), Western Norway Univ Appl Sci, Bergen, Norway.
EM abar@hvl.no; rohe@hvl.no; aru@hvl.no
FU Western Norway University Of Applied Sciences
FX Open access funding provided byWestern Norway University Of Applied
   Sciences
CR Alenezi M., 2020, TELKOMNIKA, V18, P154
   Allilaire F., ATL TRANSFORMATIONS
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   Alrajeh D, 2015, COMMUN ACM, V58, P65, DOI 10.1145/2658986
   Altmanninger Kerstin., 2008, 1 INT WORKSHOP MODEL, V8, P4
   Amelunxen C, 2008, LECT NOTES COMPUT SC, V5088, P313
   Amershi S, 2014, AI MAG, V35, P105, DOI 10.1609/aimag.v35i4.2513
   Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2019, AMMORE MODELS 18
   [Anonymous], 2020, WINTER MODELLING M
   Armas Cervantes Abel, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P53, DOI 10.1007/978-3-319-69462-7_5
   Barriga A., 2020, P 23 ACM IEEE INT C, P1
   Barriga A., 2020, J OBJECT TECHNOL, V19
   Barriga A., 2020, ACM IEEE INT C MOD D, P24
   Barriga A, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a1
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Bartocci E, 2011, LECT NOTES COMPUT SC, V6605, P326, DOI 10.1007/978-3-642-19835-9_30
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bertoa MF, 2020, SOFTW SYST MODEL, V19, P1163, DOI 10.1007/s10270-019-00741-0
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P189, DOI 10.1109/MODELS-C.2019.00032
   Burgueno L., 2020, NLP BASED ARCHITECTU
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Cady F., 2017, DATA SCI HDB, P97
   Chandra K, 2016, 2016 1ST INTERNATIONAL CONFERENCE ON INNOVATION AND CHALLENGES IN CYBER SECURITY (ICICCS 2016), P115, DOI 10.1109/ICICCS.2016.7542340
   Chang R., 2014, Patent No. [8,924,938, 8924938]
   Christiano Paul F, 2017, ADV NEURAL INFORM PR
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Deeptimahanti DK, 2009, IEEE INT CONF AUTOM, P680, DOI 10.1109/ASE.2009.48
   Dirix M., 2013, GenMyModel: An Online UML Case Tool
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Elallaoui M, 2018, PROCEDIA COMPUT SCI, V130, P42, DOI 10.1016/j.procs.2018.04.010
   Feldmann S, 2019, J SYST SOFTWARE, V153, P105, DOI 10.1016/j.jss.2019.03.060
   Finkelstein A., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P1
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   France RB, 2012, PROC INT CONF SOFTW, P1471, DOI 10.1109/ICSE.2012.6227059
   Friedrichs O., 2015, US Patent, Patent No. [9,088,601, 9088601]
   Fumagalli M, 2021, LECT NOTES BUS INF P, V432, P64, DOI 10.1007/978-3-030-91279-6_5
   Fumagalli M, 2020, LECT NOTES COMPUT SC, V12584, P15, DOI 10.1007/978-3-030-65847-2_2
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Gogolla Martin, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P115, DOI 10.1007/978-3-642-38916-0_7
   Gogolla M, 2016, LECT NOTES COMPUT SC, V9946, P289, DOI 10.1007/978-3-319-50230-4_22
   Gunning D., 2017, Explainable artificial intelligence (xai)
   Harer J.A., 2018, Automated software vulnerability detection with machine learning
   Hoermann S, 2018, IEEE INT VEH SYM, P826, DOI 10.1109/IVS.2018.8500677
   IOVINO L, 2020, J OBJECT TECHNOL, V19
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Joshi S., 2012, International journal of computer applications, V50, P42
   Kaplan A, 2020, BUS HORIZONS, V63, P37, DOI 10.1016/j.bushor.2019.09.003
   Karasneh Bilal, 2013, EESSMOD MODELS, P61
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Kretschmer R, 2018, PROC IEEE ACM INT C, P298, DOI 10.1145/3183440.3194979
   Lano K., 2020, P 23 ACM IEEE INT C, P1
   Leonetti M, 2016, ARTIF INTELL, V241, P103, DOI 10.1016/j.artint.2016.07.004
   Li Jiwei, 2017, P 2017 C EMP METH NA, P2157, DOI DOI 10.18653/V1/D17-1230
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2013, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2013.6693135
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   Martínez S, 2020, COMPUT SCI EDUC, V30, P187, DOI 10.1080/08993408.2020.1711495
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Monperrus M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P12, DOI 10.1109/BotSE.2019.00010
   Moriarty DE, 1999, J ARTIF INTELL RES, V11, P241, DOI 10.1613/jair.613
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Mumtaz F, 2018, BIOMED PHARMACOTHER, V105, P1205, DOI 10.1016/j.biopha.2018.05.086
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Narain S, 2005, USENIX Association Proceedings of the 19th Large Installation System Administration Conference, P155
   Nassar N, 2017, LECT NOTES COMPUT SC, V10374, P171, DOI 10.1007/978-3-319-61473-1_12
   Nguyen PT, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110860
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Pautasso C, 2021, IEEE SOFTWARE, V38, P119, DOI 10.1109/MS.2020.3041522
   Perez-Soler Sara, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P257, DOI 10.1007/978-3-030-49418-6_17
   Pérez-Soler S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P478, DOI 10.1109/MODELS-C.2019.00076
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Puissant, 2012, SEM ADV TOOLS TECHN
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Ren Ranci, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P260, DOI 10.1145/3383219.3383246
   Sajjad R, 2016, 2016 SIXTH INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING TECHNOLOGY (INTECH), P30, DOI 10.1109/INTECH.2016.7845070
   Selman B., 2006, Encyclopedia of cognitive science, DOI DOI 10.1002/0470018860.S00015
   Shafiq S., 2020, ARXIV PREPRINT ARXIV
   Shalev-Shwartz S., 2014, UNDERSTANDING MACHIN, DOI 10.1017/CBO9781107298019
   Sheneamer AM, 2020, IEEE ACCESS, V8, P124978, DOI 10.1109/ACCESS.2020.3006178
   Sidhu Brahmaleen Kaur, 2022, International Journal of Computers and Applications, V44, P166, DOI 10.1080/1206212X.2020.1711616
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Strittmatter M., 2016, C 10 INT WORKSH MOD
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Taentzer G, 2017, LECT NOTES COMPUT SC, V10202, P283, DOI 10.1007/978-3-662-54494-5_16
   Torre D, 2018, J SYST SOFTWARE, V144, P121, DOI 10.1016/j.jss.2018.06.029
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Torrey Lisa, 2010, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, P242
   Weyssow M., 2021, ARXIV PREPRINT ARXIV
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wust J., 2005, Sdmetrics: The software design metrics tool for uml
   Zanini RA, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20092605
   2019, SPRING SER CHALLENGE, P1
NR 106
TC 1
Z9 1
U1 2
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1135
EP 1157
DI 10.1007/s10270-022-00983-5
EA FEB 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000759406100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Fakih, M
   Klemp, O
   Puch, S
   Gruttner, K
AF Fakih, Maher
   Klemp, Oliver
   Puch, Stefan
   Gruttner, Kim
TI A modeling methodology for collaborative evaluation of future automotive
   innovations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Innovation Modeling Grid (IMoG); Automotive innovations; Model-based
   design; SysML
AB The rapid introduction of innovations plays a major role in automotive industries. Today, once a member of the automotive value chain devises an innovation, the time-to-market could be years due to traditional forms of collaboration. It is thus indispensable for companies to collaborate on reducing the time to find and design innovations in order to remain competitive. One idea is to streamline the innovation process outside current product development cycles (7 + years) within the automotive value chain. In our work, we propose a modeling methodology offering a better collaboration in this innovation design phase. Beginning with the innovation idea, our approach allows capturing requirements, functional, and structural aspects of the innovation under design in an innovation model with defined semantics. This innovation model can then be exchanged between automotive partners, who in their turn can refine and exchange the refined model within an iterative process toward an initial innovation evaluation. Additionally, we propose a generic description of how such innovation models can be captured in SysML, a system modeling standard. Our approach is illustrated by a "wireless car charging" innovation case-study showing how a possible collaboration at different modeling abstraction levels could take place and how consistency of the models exchanged can be verified. The consistency check is exemplified by timing specifications.
C1 [Fakih, Maher; Klemp, Oliver; Puch, Stefan; Gruttner, Kim] OFFIS eV, Escherweg 2, D-26121 Oldenburg, Germany.
RP Fakih, M (corresponding author), OFFIS eV, Escherweg 2, D-26121 Oldenburg, Germany.
EM maher_fakih@hotmail.com; klemp@offis.de; puch@offis.de;
   gruettner@offis.de
FU German Federal Ministry of Education and Research (BMBF)
   [16ES0865-16ES0876]
FX This work has been supported by the GENIAL! project which is funded by
   the German Federal Ministry of Education and Research (BMBF) under the
   funding code 16ES0865-16ES0876 in the ICT 2020 funding programme.
CR Andrianarison E., EMBEDDED REAL TIME S
   [Anonymous], 2018, ROAD VEHICLES FUNC 1, VInternational Organization for Standardization
   [Anonymous], TIMMO TIMING MODEL
   [Anonymous], AUTOSAR PLATTF STAND
   [Anonymous], 2018, DS 92, V01, P2855
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Benveniste A, 2018, FOUND TRENDS ELECTRO, V12, pI, DOI 10.1561/1000000053
   Broy M, 2009, COMPUTER, V42, P98, DOI 10.1109/MC.2009.413
   Debruyne V, 2004, INT FED INFO PROC, V176, P181
   Eigner M., 2017, MODELLBASIERTER ENTW, DOI [10.1007/978-3-662-55124-0, DOI 10.1007/978-3-662-55124-0]
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Furst S., 2009, P 14 INT VDI C EL SY, V62, P5
   Gleirscher M, 2014, 2014 IEEE IWSPM 8TH INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT (IWSPM), P1, DOI 10.1109/IWSPM.2014.6891062
   Hansch W, AME 2017 AUT MEETS E, P1
   Honninger H., 2020, MODEL BASED ENG EMBE, V01
   Koopmann B, 2017, FAT SCHRIFTENREIHE F, V302
   Kress A., 2017, AME 2017 AUT MEETS E, P1
   Meyer J., 2014, THESIS U PADERBORN J
   Mhenni F, 2014, ADV ENG INFORM, V28, P218, DOI 10.1016/j.aei.2014.03.006
   Novacek J, 2018, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2018.00011
   Sadovykh A, 2019, MICROPROCESS MICROSY, V71, DOI 10.1016/j.micpro.2019.102848
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Thudt R, 2019, WHITEPAPER AUTOMATIV
NR 23
TC 3
Z9 4
U1 4
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1587
EP 1608
DI 10.1007/s10270-021-00864-3
EA APR 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000642838800001
DA 2024-07-18
ER

PT J
AU Jahed, K
   Bagherzadeh, M
   Dingel, J
AF Jahed, Karim
   Bagherzadeh, Mojtaba
   Dingel, Juergen
TI On the benefits of file-level modularity for EMF models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model management; Model versioning; Model comparison; Incremental code
   generation; Build automation; UML-RT
AB Model-driven development (MDD) tools based on the Eclipse Modeling Framework (EMF) typically store all elements in a model in a single file which arguably is one of the main reasons why these tools do not scale well and cannot take advantage of existing code versioning systems and other related facilities such as Git and Make. In this work, we describe an approach for storing models in multiple files. We argue that EMF-based MDD tools can benefit significantly from this file-level modularity not only by improving the performance and scalability of basic model operations, but also by simplifying many model management activities through the use of existing code versioning systems and build automation tools. We introduce a domain-specific language that allows defining, at the metamodel level: (1) the mapping between models' elements and the file structure for model storage and (2) the dependencies between model elements that affect the code generation and compilation (if the integration with code-based tools is required). Our suite then generates an API and scripts to provide support for file-level modularity and facilitate using code-based versioning and build tools. We have used our DSL in the context of Papyrus-RT, an MDD tool for real-time and embedded software, and show how file-level modularity can (1) substantially improve performance and scalability of load and save operations, (2) enable collaborative model development, and (3) facilitate MDD-specific activities such as model comparison and incremental code generation. Our implementation and the models used for evaluation are publicly available.
C1 [Jahed, Karim; Bagherzadeh, Mojtaba] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Dingel, Juergen] Queens Univ, Sch Comp, Modeling & Anal Software Engn Grp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Bagherzadeh, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM jahed@cs.queensu.ca; mojtaba@cs.queensu.ca; dingel@cs.queensu.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Ericsson; Zeligsoft Ltd; Malina Software Corp.; Cmind Inc.
FX We acknowledge the support of the Natural Sciences and Engineering
   Research Council of Canada (NSERC), Ericsson, Zeligsoft Ltd, Malina
   Software Corp., and Cmind Inc. We thank our industrial partners, in
   particular, Simon Redding, Bran Selic, Francis Bordeleau, and Ernesto
   Posse for the close collaboration and their feedback, insights, and
   expertise.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2018, GITHUB HELP
   [Anonymous], 2018, XML LINK LANG XLINK
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   [Anonymous], 2018, GNU MAK
   [Anonymous], 2006, GAMMA 06, DOI DOI 10.1145/1138304.1138307
   Apache Foundation, 2018, SUBV
   Badreddin O, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P254
   Barmpis K, 2014, LECT NOTES COMPUT SC, V8569, P35
   Barmpis Konstantinos., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering, page, P6, DOI [10.1145/2487766.2487771, DOI 10.1145/2487766.2487771]
   Bendix L., 2008, Proceedings of the 2008 International Workshop on Comparison and Versioning of Software Models, P31, DOI DOI 10.1145/1370152.1370161
   Benelallam A, 2018, J SYST SOFTWARE, V142, P1, DOI 10.1016/j.jss.2018.04.014
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Clasen C., 2012, 1 INT WORKSH MOD ENG
   Daniel G, 2016, LECT NOTES COMPUT SC, V9974, P430, DOI 10.1007/978-3-319-46397-1_33
   Eclipse Foundation, 2018, EMFSTORE
   Eclipse Foundation, 2016, ECL PAP REAL TIM PAP
   Fahrenberg U, 2014, LECT NOTES COMPUT SC, V8411, P63
   Fleck M., 2017, PAPYRUS INFORM MODEL
   Garcia-Dominguez A, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P340, DOI 10.1145/2976767.2976809
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Garmendia A, 2019, INFORM SOFTWARE TECH, V115, P97, DOI 10.1016/j.infsof.2019.05.010
   Gómez A, 2015, LECT NOTES COMPUT SC, V9033, P19, DOI 10.1007/978-3-662-46675-9_2
   Jahed K., 2018, PAPER EVALUATION REP
   Jahed K., 2018, MODULAR PAPYRUS RT
   Jahed K., 2018, MODEL MODULARITY SUI
   Jiménez-Pastor A, 2017, J SYST SOFTWARE, V132, P204, DOI 10.1016/j.jss.2017.07.011
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Keple J, 2018, MODELCVS
   Kepler Johannes., 2018, AMOR
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos D.S., 2015, STAF2015 Project Showcase
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5421, P48, DOI 10.1007/978-3-642-01648-6_5
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Ochsner M, 2016, RESEARCH ASSESSMENT IN THE HUMANITIES: TOWARDS CRITERIA AND PROCEDURES, P1, DOI 10.1007/978-3-319-29016-4_1
   Ogunyomi B, 2019, SOFTW SYST MODEL, V18, P367, DOI 10.1007/s10270-018-0666-5
   Ohst D., 2003, Software Engineering Notes, V28, P227, DOI 10.1145/949952.940102
   Pagan Javier Espinazo., 2011, Model Driven Engineering Languages and Systems
   Aracil JMP, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P209
   Pohjonen Risto., 2002, Proc. of PLEES, V2, P49
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Schmidt M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P13, DOI 10.1109/CVSM.2009.5071716
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Steel J, 2012, SOFTW SYST MODEL, V11, P99, DOI 10.1007/s10270-010-0178-4
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Torvalds L, 2018, GIT
   Treude C., 2007, P EUR SOFTW ENG C FD, P295
   Wenzel S, 2014, SOFTW SYST MODEL, V13, P679, DOI 10.1007/s10270-012-0311-7
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
NR 58
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 267
EP 286
DI 10.1007/s10270-020-00804-7
EA JUN 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000539961500002
DA 2024-07-18
ER

PT J
AU Routis, I
   Nikolaidou, M
   Anagnostopoulos, D
AF Routis, Ioannis
   Nikolaidou, Mara
   Anagnostopoulos, Dimosthenis
TI Empirical evaluation of CMMN models: a collaborative process case study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process modeling; Collaborative processes; Modeling perspectives; Case
   Management Model and Notation; Evaluation metrics; Empirical evaluation
AB Case Management Model and Notation (CMMN) was introduced by the Object Management Group as an alternative modeling language, targeting human-centric processes characterized by lack of structure and agility. However, although it is adequately supported by well-known process management tools, CMMN applicability as a modeling language is being questioned in practice. In this work, an empirical evaluation of CMMN models is presented, through a real-world case study where CMMN has been used for the analysis and implementation of a collaborative process by independent groups of process engineers. Their experience is being discussed, based on their modeling perspective. The produced models in the analysis and implementation phase are evaluated, using pre-existing metrics customized for CMMN. Based on the experience of engineers, CMMN applicability is evaluated, highlighting aspects in which its application might be limited, that should be addressed.
C1 [Routis, Ioannis] Harokopio Univ Athens, Athens, Greece.
   [Nikolaidou, Mara] Harokopio Univ Athens, Dept Informat & Telemat, Athens, Greece.
   [Anagnostopoulos, Dimosthenis] Harokopio Univ Athens, Dept Informat & Telemat, Informat Syst & Simulat, Athens, Greece.
   [Anagnostopoulos, Dimosthenis] Harokopio Univ Athens, Fac Digital Technol, Athens, Greece.
C3 Harokopio University Athens; Harokopio University Athens; Harokopio
   University Athens; Harokopio University Athens
RP Routis, I (corresponding author), Harokopio Univ Athens, Athens, Greece.
EM i.routis@hua.gr; mara@hua.gr; dimosthe@hua.gr
RI Nikolaidou, Mara/AAN-3061-2021; Routis, Ioannis/AAC-1972-2019
OI Routis, Ioannis/0000-0002-1967-2064
FU European Commission through the LIFE+ Funding program [LIF14
   ENV/GR/000858]
FX This work is partly co-funded by the European Commission through the
   LIFE+ Funding program, LIF14 ENV/GR/000858: LIFE REWEEE Development and
   demonstration of Waste Electric and Electronic Equipment (WEEE)
   prevention and reuse paradigm.
CR Alexopoulou Nancy, 2010, International Journal of Business Information Systems, V6, P58
   [Anonymous], 2009, MODERN BUSINESS PROC
   [Anonymous], 2018, REWEEE PROJ BAS INF
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   Antunes P, 2013, INT C COMP SUPP COOP, P184, DOI 10.1109/CSCWD.2013.6580960
   Azadegan A, 2013, COMPUT IND, V64, P798, DOI 10.1016/j.compind.2013.05.001
   Birger Lantow JW, 2019, COMPLEX SYST INFORM, V13, P36, DOI [10.7250/csimq.2019-21.03, DOI 10.7250/CSIMQ.2019-21.03]
   Bögel S, 2014, BUS PROCESS MANAG J, V20, P598, DOI 10.1108/BPMJ-07-2013-0094
   Cai J, 2005, BUS PROCESS MANAG J, V11, P255, DOI 10.1108/14637150510600443
   de Carvalho BR, 2016, J BRAS REPROD ASSIST, V20, P1, DOI 10.5935/1518-0557.20160001
   Ding T, 2016, 2016 12TH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (ICNC-FSKD), P1808, DOI 10.1109/FSKD.2016.7603453
   Dustdar S, 2004, DISTRIB PARALLEL DAT, V15, P45, DOI 10.1023/B:DAPD.0000009431.20250.56
   Grudzinska-Kuna A., 2013, INFORM SYST MANAGE, V2, P3
   Gruhn V, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P236, DOI 10.1109/COGINF.2006.365702
   Herzberg N., 2014, INT C BUS PROC MAN, P3
   Hewelt M, 2018, LECT NOTES BUS INF P, V318, P181, DOI 10.1007/978-3-319-91704-7_12
   Kluza K, 2015, LECT NOTES COMPUT SC, V9120, P649, DOI 10.1007/978-3-319-19369-4_57
   Koutsopoulos G, 2017, ENTERPRISE BUSINESS, P171
   Kurz M., 2015, P 7 INT C SUBJECT OR, DOI [10.1145/2723839.2723843, DOI 10.1145/2723839.2723843]
   Lazarte I, 2009, INT C BUS PROC MAN, P318
   Marin M.A., 2015, P 2015 ANN RES C S A, P28
   Marin Mike A, 2015, INT C BUS PROC MAN, P5
   Motahari-Nezhad Hamid R., 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P264, DOI 10.1109/CBI.2013.44
   Object Management Group, 2015, DEC MOD NOT
   Object Management Group, 2016, CAS MAN MOD NOT V1 1
   Plebani P, 2017, LECT NOTES COMPUT SC, V10253, P110, DOI 10.1007/978-3-319-59536-8_8
   Prilla M, 2013, INT J E-COLLAB, V9, P1, DOI 10.4018/ijec.2013100101
   Rajsiri V, 2008, INT FED INFO PROC, V283, P205
   Renger Michiel, 2008, International Journal of Simulation & Process Modelling, V4, P248, DOI 10.1504/IJSPM.2008.023686
   Rolon E, 2008, ENASE 2008 P 3 INT C
   Rolón E, 2015, PROCEDIA MANUF, V3, P5603, DOI 10.1016/j.promfg.2015.07.748
   Routis I., 2017, INT C BUS PROC MAN, P335
   Routis I., 2016, P 8 INT C SUBJECT OR, P5
   Routis I, 2018, LECT NOTES BUS INF P, V318, P199, DOI 10.1007/978-3-319-91704-7_13
   Rozman T, 2004, IIS 2004
   Russell ML, 2004, CREATING THE NEW EGYPTIAN WOMAN, P127
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Schonig Stefan, 2013, 9th IEEE International Conference on Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom 2013), P60, DOI 10.4108/icst.collaboratecom.2013.254071
   Stuit Marco, 2010, 2010 International Symposium on Collaborative Technologies and Systems (CTS 2010), P302, DOI 10.1109/CTS.2010.5478497
   Wiemuth M, 2017, INT J COMPUT ASS RAD, V12, P1439, DOI 10.1007/s11548-017-1608-3
   Yan ZQ, 2010, LECT NOTES BUS INF, V67, P121
   Zensen A, 2018, IEEE INT ENTERP DIST, P105, DOI 10.1109/EDOC.2018.00023
NR 43
TC 4
Z9 4
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1395
EP 1413
DI 10.1007/s10270-020-00802-9
EA JUN 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000538974800001
DA 2024-07-18
ER

PT J
AU Westfechtel, B
   Greiner, S
AF Westfechtel, Bernhard
   Greiner, Sandra
TI Extending single- to multi-variant model transformations by trace-based
   propagation of variability annotations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Software product line; Annotative variability
AB Model-driven engineering involves the construction of models on different levels of abstraction. Software engineers are supported by model transformations, which automate the transition from high- to low-level models. Product line engineering denotes a systematic process that aims at developing different product variants from a set of reusable assets. When model-driven engineering is combined with product line engineering, engineers have to deal with multi-variant models. In annotative approaches to product line engineering, model elements are decorated with annotations, i.e., Boolean expressions that define the product variants in which model elements are to be included. In model-driven product line engineering, domain engineers require multi-variant transformations, which create multi-variant target models from multi-variant source models. We propose a reuse-based gray-box approach to realizing multi-variant model transformations. We assume that single-variant transformations already exist, which have been developed for model-driven engineering, without considering product lines. Furthermore, we assume that single-variant transformations create traces, which comprise the steps executed in order to derive target models from source models. Single-variant transformations are extended into multi-variant transformations by trace-based propagation: after executing a single-variant transformation, the resulting single-variant target model is enriched with annotations that are calculated with the help of the transformation's trace. This approach may be applied to single-variant transformations written in different languages and requires only access to the trace, not to the respective transformation definition. We also provide a correctness criterion for trace-based propagation, and a proof that this criterion is satisfied under the prerequisites of a formal computational model.
C1 [Westfechtel, Bernhard; Greiner, Sandra] Univ Bayreuth, Appl Comp Sci 1, Univ Str 30, D-95447 Bayreuth, Germany.
C3 University of Bayreuth
RP Westfechtel, B (corresponding author), Univ Bayreuth, Appl Comp Sci 1, Univ Str 30, D-95447 Bayreuth, Germany.
EM Bernhard.Westfechtel@uni-bayreuth.de; Sandra1.Greiner@uni-bayreuth.de
OI Greiner, Sandra/0000-0001-8950-0092
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL. The authors greatly
   appreciate the constructive comments of the unknown reviewers.
CR Anjorin Anthony., 2019, Software and Systems Modeling, P1
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Beuche Danilo., 2013, SYSTEMS SOFTWARE VAR, P173, DOI DOI 10.1007/978-3-642-36583-6_12
   Buchmann T, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P336, DOI 10.5220/0006563503360345
   Buchmann Thomas., 2012, 4th International Workshop on Feature-Oriented Software Development, FOSD'12, Dresden, Germany - September 24 - 25, 2012, P37
   Buchmann Thomas., 2012, JOINT P COLOCATED EV, P59
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Famelis M, 2015, LECT NOTES COMPUT SC, V9152, P82, DOI 10.1007/978-3-319-21155-8_7
   Greiner S, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P36, DOI 10.5220/0006536700360047
   Greiner S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302341
   Greiner S, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P362, DOI 10.5220/0006137803620373
   Greiner Sandra, 2019, P 7 INT C MODEL DRIV, V1, P157, DOI [10.5220/0007585701570168, DOI 10.5220/0007585701570168]
   Halmos Paul, 1974, Naive Set Theory
   Heidenreich F., 2009, P 1 INT WORKSHOP FEA, P69
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2010, THESIS
   Kerzner H., 2017, PROJECT MANAGEMENT S
   Krueger C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P1, DOI 10.1145/3236405.3236409
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Mezini Mira, 2009, P 1 INT WORKSH MOD D
   Object Management Group, 2016, OBJ MAN GROUP MET FA
   Object Management Group, 2015, OBJ MAN GROUP MET FA
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Salay R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P117, DOI 10.1145/2568225.2568267
   Samimi-Dehkordi L, 2018, INFORM SOFTWARE TECH, V100, P47, DOI 10.1016/j.infsof.2018.03.011
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Schwägerl F, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P203, DOI 10.5220/0005878702030209
   Sijtema Marten., 2010, PROC MTATL, V10, P39
   Steinberg D., 2009, ECLIPSE SERIES
   Strüber D, 2018, LECT NOTES COMPUT SC, V10802, P337, DOI 10.1007/978-3-319-89363-1_19
   Strüber D, 2016, LECT NOTES COMPUT SC, V9761, P89, DOI 10.1007/978-3-319-40530-8_6
   Taentzer G, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P101, DOI 10.1109/MODELS.2017.22
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Westfechtel B, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P46, DOI 10.1145/3239372.3239414
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
NR 45
TC 3
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 853
EP 888
DI 10.1007/s10270-020-00791-9
EA MAR 2020
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000521660300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Stevens, P
AF Stevens, Perdita
TI Connecting software build with maintaining consistency between models:
   towards sound, optimal, and flexible building from megamodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Megamodel; Build system; Model transformation; Bidirectionality;
   Orientation model
AB Software build systems tackle the problem of building software from sources in a way which is sound (when a build completes successfully, the relations between the generated and source files are as specified) and optimal (only genuinely required rebuilding steps are done). In this paper, we explain and exploit the connection between software build and the megamodel consistency problem. The model-driven development of systems involves multiple models, metamodels and transformations. Transformations-which may be bidirectional-specify, and provide means to enforce, desired "consistency" relationships between models. We can describe the whole configuration using a megamodel. As development proceeds, and various models are modified, we need to be able to restore consistency in the megamodel, so that the consequences of decisions first recorded in one model are appropriately reflected in the others. At the same time, we need to minimise the amount of recomputation needed; in particular, we would like to avoid reapplying a transformation when no relevant changes have occurred in the models it relates. The megamodel consistency problem requires flexibility beyond what is found in conventional software build, because different results are obtained depending on which models are allowed to be modified and on the order and direction of transformation application. In this paper, we propose using an orientation model to make important choices explicit. We show how to extend the formalised build system pluto to provide a means of restoring consistency in a megamodel, that is, in appropriate senses, flexible, sound and optimal.
C1 [Stevens, Perdita] Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
C3 University of Edinburgh
RP Stevens, P (corresponding author), Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
EM perdita@inf.ed.ac.uk
FU UKNCSC/RIVeTSS grant [RFA20601-4214171]
FX I thank the reviewers of this paper and of [10] for their constructive
   suggestions. I also thank the Bx'18 audience (for a related talk
   https://youtu.be/Pp1BsQyHoMs with no accompanying paper), especially
   Sebastian Erdweg, Jeremy Gibbons, and JamesMcKinna, for helpful
   discussion. Further, discussions at Dagstuhl no. 18491 on
   Multidirectional Transformations and Synchronisations [11] were also
   very helpful. I amgrateful for support from theUKNCSC/RIVeTSS grant
   RFA20601-4214171, Mechanising the theory of build systems.
CR [Anonymous], MOD DRIV TOOL PROC I
   Basciani F., 2014, CEUR WORKSHOP P
   Bezivin J., 2004, P OOPLSA GPCE WORKSH
   Cleve Anthony, 2019, Dagst. Rep., V8, P1, DOI [10.4230/DagRep.8.12.1, DOI 10.4230/DAGREP.8.12.1]
   Di Rocco J., 2019, SOFTW SYST MODEL
   Di Rocco J., 2017, EXE AT MODELS
   Diskin Z, 2019, FORM ASP COMPUT, V31, P611, DOI 10.1007/s00165-019-00493-0
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2013, LECT NOTES COMPUT SC, V8225, P322, DOI 10.1007/978-3-319-02654-1_18
   Epperly T., 2002, UCRLID147343 LAWR LI
   Erdweg S, 2015, ACM SIGPLAN NOTICES, V50, P89, DOI [10.1145/2814270.2814316, 10.1145/2858965.2814316]
   Erdweg Sebastian, 2017, PROGRAMMING J, V1, P9, DOI [10.22152/programming-journal.org/2017/1/9, DOI 10.22152/programming-journal.org/2017/1/9]
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Garcia J, 2018, CONTINUOUS MODEL DRI
   Gray J, 2017, SOFTW SYST MODEL, V16, P927, DOI 10.1007/s10270-017-0621-x
   Hebig R., 2015, DEV AUTOSAR STANDARD
   Hofmann M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P495
   Kling Wolfgang, 2011, P 4 INT C SOFTW LANG, V6940, P180
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Lammel R, 2017, PROGRAM J, V1, DOI [10.22152/programming-journal.org/2017/1/4, DOI 10.22152/programming-journal.org/2017/1/4]
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   McKinna J., 2016, CEUR WORKSHOP P, P32
   Mokhov A, 2018, PACMPL, V2, P79
   Mokhov A, 2016, ACM SIGPLAN NOTICES, V51, P170, DOI [10.1145/3241625.2976011, 10.1145/2976002.2976011]
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   Object Management Group, 2014, MOD DRIV ARCH MDA MD
   Stevens P, 2018, ACM IEEE 21 INT C MO
   Stevens P, 2012, ENCOUNTERS PEOPLE, P49
   Stevens P, 2020, SOFTW SYST MODEL, V19, P935, DOI 10.1007/s10270-020-00788-4
   Stevens P, 2018, LECT NOTES COMPUT SC, V10890, P1, DOI 10.1007/978-3-319-92997-2_1
   Stevens P, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P1, DOI 10.1109/MODELS.2017.8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Trollmann F, 2016, LECT NOTES COMPUT SC, V9765, P91, DOI 10.1007/978-3-319-42064-6_7
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 35
TC 8
Z9 8
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 935
EP 958
DI 10.1007/s10270-020-00788-4
EA MAR 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000521020400002
OA Green Accepted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hili, N
   Bagherzadeh, M
   Jahed, K
   Dingel, J
AF Hili, Nicolas
   Bagherzadeh, Mojtaba
   Jahed, Karim
   Dingel, Juergen
TI A model-based architecture for interactive run-time monitoring
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Run-time monitoring; Observation; Model
   instrumentation; UML-RT
AB We present a model-based architecture for monitoring executions of models of real-time and embedded systems. This architecture is highly configurable and allows for the combination of various run-time monitoring tools, not only for observing the system execution, but also for interacting with it. Using a variety of case studies, we illustrate the use of the architecture for connecting the code generated from a model with a range of external tools for different purposes, including execution animation and run-time verification. However, the external tool can not only consume information from the execution, but also generate input for it and thus influence and steer it.
C1 [Hili, Nicolas; Bagherzadeh, Mojtaba; Jahed, Karim; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Hili, N (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM hili@cs.queensu.ca; mojtaba@cs.queensu.ca; jahed@cs.queensu.ca;
   dingel@cs.queensu.ca
RI Bagherzadeh, Mojtaba/AAE-6814-2020
OI Hili, Nicolas/0000-0003-3044-3745
FU Ericsson Canada, EfficiOS; Natural Sciences and Engineering Research
   Council of Canada (NSERC)
FX This work is supported by Ericsson Canada, EfficiOS, and the Natural
   Sciences and Engineering Research Council of Canada (NSERC).
CR Agha G., 1991, REX WORKSH, V489, P1
   Ahmadi Reza, 2016, WORKSH OP SOURC MOD
   [Anonymous], 2017, PREC SEM UML STAT MA
   [Anonymous], 2015, SIGSOFT SOFTW ENG NO
   Bagherzadeh M, 2018, PROC IEEE ACM INT C, P97, DOI 10.1145/3183440.3183473
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   Balasubramanian J, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P118, DOI 10.1109/RTAS.2009.36
   Besnard V., 2019, MODEL DRIVEN ENG LAN
   Cassar I, 2017, ELECTRON P THEOR COM, P15, DOI 10.4204/EPTCS.254.2
   Chen Feng, 2005, JAVA MOP MONITORING, P546, DOI [10.1007/978-3-540-31980-1_36, DOI 10.1007/978-3-540-31980-1_36]
   Ciccozzi Federico, 2016, STUD COMPUT INTELL, P67
   Combemale B., 2008, 4 EUR C EMB REAL TIM
   Costa B, 2016, 2016 IEEE 14TH INTL CONF ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, 14TH INTL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING, 2ND INTL CONF ON BIG DATA INTELLIGENCE AND COMPUTING AND CYBER SCIENCE AND TECHNOLOGY CONGRESS (DASC/PICOM/DATACOM/CYBERSC, P392, DOI 10.1109/DASC-PICom-DataCom-CyberSciTec.2016.81
   Desnoyers Mathieu, 2006, OLS OTT LIN S CIT, V2006, P209
   Eclipse Foundation, 2016, PAP MOK OV
   Graf S., 2006, International Journal on Software Tools for Technology Transfer, V8, P113, DOI 10.1007/s10009-005-0213-x
   Guerraoui R, 1997, COMPUTER, V30, P68, DOI 10.1109/2.585156
   Hili Nicolas, 2018, 9 EUR C EMB REAL TIM
   Hu B, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2890503
   IBM, 2016, RAT SOFTW ARCH REALT
   IBM, IBM RAT RHAPS
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kahani N, 2017, IEEE ACM INT WORKS M, P12, DOI 10.1109/MiSE.2017.4
   Kim M, 1999, PROCEEDINGS OF THE 11TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P114, DOI 10.1109/EMRTS.1999.777457
   Kim Moonjoo., 2002, Electronic Notes in Theoretical Computer Science, V70, P95, DOI 10.1016/S1571-0661(04)80579-6
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Levy J., 2002, ELECT NOTES THEOR CO, V70, P112, DOI [10.1016/S1571-0661(04)80580-2, DOI 10.1016/S1571-0661(04)80580-2]
   Magee J., 1999, STATE MODELS JAVA PR
   Mayerhofer T., 2012, INT MASTER CLASS MOD
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Nguyen XT, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P387, DOI 10.1109/WF-IoT.2015.7389085
   Ober I, 2008, LECT NOTES COMPUT SC, V5301, P219, DOI 10.1007/978-3-540-87875-9_16
   OMG, 2017, UML251 OMG
   OMG, 2016, SEM FDN SUBS EX UML
   Persson P, 2015, PROCEDIA COMPUT SCI, V52, P210, DOI 10.1016/j.procs.2015.05.059
   Posse E, 2015, WORKSH OP SOURC MOD
   Raspberry Pi Foundation, 2016, Raspberry Pi 3 Model B+ Product Description
   Rosu G, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(1:09)2012
   Selic B, 2008, IBM SYST J, V47, P309, DOI 10.1147/sj.472.0309
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   SWARTOUT W, 1982, COMMUN ACM, V25, P438, DOI 10.1145/358557.358572
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
NR 42
TC 12
Z9 12
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 959
EP 981
DI 10.1007/s10270-020-00780-y
EA JAN 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000508708600002
DA 2024-07-18
ER

PT J
AU HoseinDoost, S
   Adamzadeh, T
   Zamani, B
   Fatemi, A
AF HoseinDoost, Samaneh
   Adamzadeh, Tahereh
   Zamani, Bahman
   Fatemi, Afsaneh
TI A model-driven framework for developing multi-agent systems in emergency
   response environments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling language; Emergency response environment;
   Multi-agent system; Model-driven development; ERE-ML; Model to code
   transformation
ID AGENTS; UML
AB In emergency response environments, variant entities with specific behaviors and interaction between them form a complex system that can be well modeled by multi-agent systems. To build such complex systems, instead of writing the code from scratch, one can follow the model-driven development approach, which aims to generate software from design models automatically. To achieve this goal, two important prerequisites are: a domain-specific modeling language for designing an emergency response environment model, and transformation programs for automatic code generation from a model. In addition, for modeling with the language, a modeling tool is required, and for executing the generated code there is a need to a platform. In this paper, a model-driven framework for developing multi-agent systems in emergency response environments is provided which includes several items. A domain-specific modeling language as well as a modeling tool is developed for this domain. The language and the tool are called ERE-ML and ERE-ML Tool, respectively. Using the ERE-ML Tool, a designer can model an emergency response situation and then validate the model against the predefined constraints. Furthermore, several model to code transformations are defined for automatic multi-agent system code generation from an emergency response environment model. For executing the generated code, an extension of JAMDER platform is also provided. To evaluate our framework, several case studies including the Victorian bushfire disaster are modeled to show the ability of the framework in modeling real-world situations and automatic transformation of the model into the code.
C1 [HoseinDoost, Samaneh; Adamzadeh, Tahereh; Zamani, Bahman; Fatemi, Afsaneh] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
C3 University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM s.hoseindoost@eng.ui.ac.ir; t.adamzadeh@eng.ui.ac.ir;
   zamani@eng.ui.ac.ir; a_fatemi@eng.ui.ac.ir
RI Hoseindoost, Samaneh/U-1354-2019; Zamani, Bahman/X-6918-2019
OI Hoseindoost, Samaneh/0000-0002-3367-5368; Zamani,
   Bahman/0000-0001-6424-1442
CR Adamzadeh T, 2014, 2014 4TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P302, DOI 10.1109/ICCKE.2014.6993431
   Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], 2012, 13 INT WORKSH AG OR
   [Anonymous], MOFM2T 1 0
   [Anonymous], 2007, P 40 ANN HAWAII INT
   [Anonymous], 12 INT C INF SYST CR
   [Anonymous], ACC
   [Anonymous], THESIS
   [Anonymous], 8 IB WORKSH MULT SYS
   [Anonymous], 2009 VICTORIAN BUSHF
   [Anonymous], 9 EUR WORKSH MULT SY
   [Anonymous], 1 WORKSH AUT SOFTW S
   [Anonymous], AUT WORKSH
   [Anonymous], GRAPH MOD FRAM GMF T
   Ayed R.B., 2014, AUTON AGENT MULTI-AG, V8477, P124
   Bauer B, 2005, ENG APPL ARTIF INTEL, V18, P141, DOI 10.1016/j.engappai.2004.11.016
   Bauer B, 2001, INT J SOFTW ENG KNOW, V11, P207, DOI 10.1142/S0218194001000517
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Campbell A, 2011, AUTON AGENT MULTI-AG, V22, P317, DOI 10.1007/s10458-010-9127-4
   da Silva Viviane Torres, 2008, International Journal of Agent-Oriented Software Engineering, V2, P382, DOI 10.1504/IJAOSE.2008.020138
   Fatemi A, 2013, TURK J ELECTR ENG CO, V21, P1166, DOI 10.3906/elk-1105-49
   Freire ESS, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1, P451, DOI 10.5220/0004438604510458
   García-Magariño I, 2013, EXPERT SYST APPL, V40, P6580, DOI 10.1016/j.eswa.2013.06.012
   Gascueña JM, 2012, ENG APPL ARTIF INTEL, V25, P159, DOI 10.1016/j.engappai.2011.08.008
   Gómez-Sanz JJ, 2010, SIMUL MODEL PRACT TH, V18, P1468, DOI 10.1016/j.simpat.2010.05.012
   Hahn C., 2008, Proceedings of the 7th international joint conference on Autonomous agents and multiagent systems-Volume, V1, P233
   Hawe GI, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379784
   Jain S, 2003, PROCEEDINGS OF THE 2003 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1068, DOI 10.1109/WSC.2003.1261532
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Mustapha K, 2013, PROCEDIA COMPUT SCI, V21, P148, DOI 10.1016/j.procs.2013.09.021
   OMG, 2014, OBJ CONTR LANG
   Othman SH, 2016, EXPERT SYST APPL, V63, P49, DOI 10.1016/j.eswa.2016.06.018
   Othman SH, 2014, INFORM PROCESS MANAG, V50, P235, DOI 10.1016/j.ipm.2013.11.001
   Pavón J, 2003, LECT NOTES ARTIF INT, V2691, P394
   Pavon J., 2005, Agent-oriented Methodologies, P236
   Silva V, 2003, LECT NOTES COMPUT SC, V2603, P1
   Song J., 2015, Am. J. Eng. Technol. Res., V15, P19
   Gonçalves EJT, 2011, ICEIS 2011: PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 2, P192
   Gonçalves EJT, 2015, J SYST SOFTWARE, V108, P77, DOI 10.1016/j.jss.2015.06.008
   Thabet I, 2014, LECT NOTES BUS INF P, V196, P143
   Winikoff M, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P401
NR 43
TC 9
Z9 9
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1985
EP 2012
DI 10.1007/s10270-017-0627-4
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100022
DA 2024-07-18
ER

PT J
AU Kalnins, A
   Barzdins, J
AF Kalnins, Audris
   Barzdins, Janis
TI Metamodel specialization for graphical language support
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodeling; Metamodel specialization; Graphical syntax definition;
   Graphical DSL; Graphical editors
ID TOOL; FRAMEWORK
AB Most of current modeling languages are based on graphical diagrams. The concrete graphical syntax of these languages typically is defined informallyby text and diagram examples. Only recently, starting from UML 2.5, a formalism is offered for defining the graphical syntax of UML. This formalism is based on Diagram Definition standard by OMG, where the main emphasis is on enabling diagram interchange between different tools implementing the given language. While this is crucial for standardized languages such as UML, this aspect is not so important for domain-specific languages. In this paper, an approach is offered for a simple direct definition of concrete graphical syntax by means of metamodels. Metamodels are typically used for a language definition, but mainly the MOF-inspired approach via meta-metamodel instantiation is used. We offer an alternative approach based on core metamodel specialization which leads to a more direct and understandable definition staying at the same meta-layer. In addition, our approach permits a natural extensionfacility for a graphical editor definition for the given language, which is vital in the world of DSLs. In contrast to most DSL development platforms, which are based on the abstract syntax metamodel of the language and a mapping to graphics, our facility is based directly on the graphical syntax. But we show that in those cases where the relation to the DSL abstract syntax is really required, a mapping from the graphical syntax to abstract syntax can be relatively easily defined by the specialization approach.
C1 [Kalnins, Audris; Barzdins, Janis] Univ Latvia, Inst Math & Comp Sci, Raina Bulvaris 29, Riga, Latvia.
C3 University of Latvia
RP Kalnins, A (corresponding author), Univ Latvia, Inst Math & Comp Sci, Raina Bulvaris 29, Riga, Latvia.
EM audris.kalnins@lumii.lv; Janis.barzdins@lumii.lv
OI Kalnins, Audris/0000-0003-0907-7496
FU Latvian National research program SOPHIS [10-4/VPP-4/11]
FX This work is supported by the Latvian National research program SOPHIS
   under grant agreement Nr. 10-4/VPP-4/11.
CR [Anonymous], P DSM 07 WORKSH OOPS
   [Anonymous], EVALUATION MODELING
   [Anonymous], P GRABATS 06
   [Anonymous], TOOL
   [Anonymous], 2015, UN MOD LANG UML VERS
   Atkinson C, 2005, LECT NOTES COMPUT SC, V3713, P398, DOI 10.1007/11557432_30
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   Atkinson C, 1998, LNCS, V1618, P21
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Atkinson C, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P216, DOI 10.1109/MODELS.2015.7338252
   Bardohl R, 2003, LECT NOTES COMPUT SC, V3062, P413
   Barzdin J., 2010, CEUR WORKSHOP P, V596, P5
   Barzdins J., 2008, P DSM 08 WORKSH OOPS, P60
   Barzdins J., 2007, P MDDAUI 2007 WORKSH, V297
   Barzdins J., 2009, P DSM, V9, P34
   Barzdins J, 2010, LECT NOTES BUS INF, V64, P102
   Brambilla M., 2015, INTERACTION FLOW MOD
   Bruck J., 2008, CREATING ROBUST SCAL
   *BUD U TECHN EC, VIS AUT MOD TRANSF V
   Izquierdo JLC, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.84
   Cerans K, 2013, FRONT ARTIF INTEL AP, V249, P41, DOI 10.3233/978-1-61499-161-8-41
   Clark T., 2014, P MULTI2014 COLOCATE, V1286, P43
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Eisenberg J, 2011, SVG ESSENTIALS
   Elaasar M, 2011, LECT NOTES COMPUT SC, V6981, P364, DOI 10.1007/978-3-642-24485-8_26
   Fouché A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P348, DOI 10.1109/MODELS.2015.7338266
   Juliot E., VIEWPOINTS CREATION
   Kalnins A, 2005, LECT NOTES COMPUT SC, V3599, P62
   Kalnins A, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P103, DOI 10.1145/2976767.2976779
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos D., 2017, EPSILON BOOK
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Liepins R, 2012, P 2012 WORKSH OCL TE, P6
   Liepins Renars., 2014, CEUR Workshop Proceedings, V1268, P37
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Object Management Group, 2015, DIAGR DEF DD VERS 1
   Object Management Group, 2015, INT FLOW MOD LANG IF
   Object Management Group, 2015, MET OBJ FAC MOF COR
   Object Management Group, 2015, MET FAC MOF 2 0 QUER
   Pierre S, 2014, LECT NOTES COMPUT SC, V8569, P164
   Rath I., 2006, P WORKSH DOM SPEC PR, P4
   Reid J, 2013, JAVASCRIPT PROGRAMME
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   Rencis E., 2011, P BIR 2011, P80
   Rose L.M., 2012, Proceedings of the 2012 Extreme Modeling Workshop, P15
   Sprogis A., 2010, Scientific Papers, University of Latvia, V756, P173
   Sprogis A., 2013, THESIS
   Sprogis A, 2016, FRONT ARTIF INTEL AP, V291, P115, DOI 10.3233/978-1-61499-714-6-115
   Sprogis A, 2016, COMM COM INF SC, V615, P99, DOI 10.1007/978-3-319-40180-5_7
   Sprogis A, 2013, FRONT ARTIF INTEL AP, V249, P330, DOI 10.3233/978-1-61499-161-8-330
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G., 2007, APPL GRAPH TRANSFORM, P98
   Vangheluwe H., 2004, P DSM 04, P8
   Vilitis O, 2015, GLOBEEDIT
   Wazlawick RS, 2013, OBJECT-ORIENTED ANALYSIS AND DESIGN FOR INFORMATION SYSTEMS: MODELING WITH UML, OCL, AND IFML, P1
   Wienands C, 2009, LECT NOTES COMPUT SC, V5795, P453, DOI 10.1007/978-3-642-04425-0_35
NR 58
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1699
EP 1735
DI 10.1007/s10270-018-0668-3
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100009
DA 2024-07-18
ER

PT J
AU Rehse, JR
   Fettke, P
   Loos, P
AF Rehse, Jana-Rebecca
   Fettke, Peter
   Loos, Peter
TI A graph-theoretic method for the inductive development of reference
   process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reference modeling; Frequent subgraphs; Order matrices; Inductive
   development of reference models
ID BUSINESS PROCESS MODELS; DESIGN SCIENCE RESEARCH; LANGUAGE
AB Business process management is one of the most widely discussed topics in information systems research. As process models advance in both complexity and maturity, reference models, serving as reusable blueprints for the development of individual models, gain more and more importance. Only a few business domains have access to commonly accepted reference models, so there is a widespread need for the development of new ones. This article describes a new inductive approach for the development of reference models, based on existing individual models from the respective domain. It employs a graph-based paradigm, exploiting the underlying graph structures of process models by identifying frequent common subgraphs of the individual models, analyzing their order relations, and merging them into a new model. This newly developed approach is outlined and evaluated in this contribution. It is applied in three different case studies and compared to other approaches to the inductive development of reference models in order to highlight its characteristics as well as assets and drawbacks.
C1 [Rehse, Jana-Rebecca; Fettke, Peter; Loos, Peter] German Res Ctr Artificial Intelligence DFKI, Inst Informat Syst IWi, Campus D3-2, D-66123 Saarbrucken, Germany.
C3 German Research Center for Artificial Intelligence (DFKI)
RP Rehse, JR (corresponding author), German Res Ctr Artificial Intelligence DFKI, Inst Informat Syst IWi, Campus D3-2, D-66123 Saarbrucken, Germany.
EM Jana-Rebecca.Rehse@iwi.dfki.de; Peter.Fettke@iwi.dfki.de;
   Peter.Loos@iwi.dfki.de
OI Rehse, Jana-Rebecca/0000-0001-5707-6944
FU German Research Foundation (DFG) [GZ LO 752/5-1]
FX The research described in this paper was partly supported by a grant
   from the German Research Foundation (DFG), project name: Konzeptionelle,
   methodische und technische Grundlagen zur induktiven Erstellung von
   Referenzmodellen (Reference Model Mining), support code GZ LO 752/5-1.
   The authors would like to thank the three anonymous reviewers and the
   editor-in-chief for their valuable comments and insights, which helped
   to improve this contribution.
CR Ahlemann F., 2007, REFERENCE MODELING B
   [Anonymous], 2001, Proceedings of the 3rd IAPR TC-15 Workshop on Graph-based Representations in Pattern Recognition
   [Anonymous], P 21 EUR C INF SYST
   [Anonymous], 2011, BUS INFORM SYST ENG+
   [Anonymous], 1990, COMPUT INTRACTABILIT
   [Anonymous], P MULT WIRTSCH 2008
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Becker J., 1997, Wirtschaftsinformatik '97. Internationale Geschaftstatigkeit auf der Basis flexibler Organisationsstrukturen und leistungsfahiger Informationssysteme (Business Informatics '96. International Business Activities Based on Flexible Organizational Structures and Competitive Information Systems), P427
   BECKER J, 2002, WISSENSMANAGEMENT RE, P25
   Becker J., 2007, REFERENCE MODELING B
   Becker J, 2011, PROCESS MANAGEMENT: A GUIDE FOR THE DESIGN OF BUSINESS PROCESSES, SECOND EDITION, P91, DOI 10.1007/978-3-642-15190-3_4
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   Castano S, 1998, ACM T DATABASE SYST, V23, P286, DOI 10.1145/293910.293150
   Cayoglu U, 2013, 4 INT WORKSH PROC MO
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   Dorn F, 2010, LEIBNIZ INT PR INFOR, V5, P263, DOI 10.4230/LIPIcs.STACS.2010.2460
   EPPSTEIN D, 1995, PROCEEDINGS OF THE SIXTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P632
   Fettke P.e., 2007, Reference Modeling for Business Systems Analysis, P1
   Fill HG, 2011, LECT NOTES BUS INF P, V83, P134
   Gottschalk F, 2008, LECT NOTES COMPUT SC, V5333, P263
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Groger  S., 2014, P 20 AM C INF SYST S
   Groger S., 2013, TECH REP
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Houy C., 2014, P 22 EUR C INF SYST
   Klinkmuller Christopher, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P211, DOI 10.1007/978-3-642-40176-3_17
   Kuramochi M, 2005, DATA MIN KNOWL DISC, V11, P243, DOI 10.1007/s10618-005-0003-9
   La Rosa M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430547
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li C, 2010, INT J COOP INF SYST, V19, P159, DOI 10.1142/S0218843010002139
   Li C, 2009, LECT NOTES COMPUT SC, V5701, P344
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Lu RP, 2006, LECT NOTES COMPUT SC, V4102, P426
   Martens A., 2014, TAG MULT WIRTSCH
   MELCHER J., 2014, Process measurement in business process management: Theoretical framework and analysis of several aspects
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Polyvyanyy A., 2015, Handbook on Business Process Management, V1, P147, DOI DOI 10.1007/978-3-642-45100-37
   Rehse J.R., 2013, P 11 INT C WIRTSCH L
   Skiena S., 2008, ALGORITHM DESIGN MAN, P523
   Song W, 2008, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE FOR YOUNG COMPUTER SCIENTISTS, VOLS 1-5, P725, DOI 10.1109/ICYCS.2008.279
   Thaler T., 2014, TAG MULT WIRTSCH
   Thaler T., 2014, P 24 INT C INF MOD K
   Uba Reina, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P248, DOI 10.1007/978-3-642-23059-2_20
   van der Aalst W., 2013, ISRN SOFTWARE ENG, P1
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   Vogelaar JJCL, 2012, LECT NOTES BUS INF P, V100, P50
   Walter J., 2013, PROMOTING BUSINESS P, V15, P89
   Weidlich M, 2013, LECT NOTES COMPUT SC, V8217, P130, DOI 10.1007/978-3-642-41924-9_12
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   Yahya BN, 2012, INT J INNOV COMPUT I, V8, P1463
   Yan X., 2003, Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining, KDD '03, P286
NR 54
TC 19
Z9 19
U1 4
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 833
EP 873
DI 10.1007/s10270-015-0490-0
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800012
DA 2024-07-18
ER

PT J
AU Dragomir, I
   Ober, I
   Percebois, C
AF Dragomir, Iulia
   Ober, Iulian
   Percebois, Christian
TI Contract-based modeling and verification of timed safety requirements
   within SysML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Contract-based reasoning; Safety requirement; Component-based design;
   UML/SysML; Compositional verification; Timed input/output automata
ID CHECKING; SYSTEM
AB In order to cope with the growing complexity of critical real-time embedded systems, systems engineering has adopted a component-based design technique driven by requirements. Yet, such an approach raises several issues since it does not explicitly prescribe how system requirements can be decomposed on components nor how components contribute to the satisfaction of requirements. The envisioned solution is to design, with respect to each requirement and for each involved component, an abstract specification, tractable at each design step, that models how the component is concerned by the satisfaction of the requirement and that can be further refined toward a correct implementation. In this paper, we consider such specifications in the form of contracts. A contract for a component consists in a pair (assumption, guarantee) where the assumption models an abstract behavior of the component's environment and the guarantee models an abstract behavior of the component given that the environment behaves according to the assumption. Therefore, contracts are a valuable asset for the correct design of systems, but also for mapping and tracing requirements to components, for tracing the evolution of requirements during design and, most importantly, for compositional verification of requirements. The aim of this paper is to introduce contract-based reasoning for the design of critical real-time systems made of reactive components modeled with UML and/or SysML. We propose an extension of UML and SysML languages with a syntax and semantics for contracts and the refinement relations that they must satisfy. The semantics of components and contracts is formalized by a variant of timed input/output automata on top of which we build a formal contract-based theory. We prove that the contract-based theory is sound and can be applied for a relatively large class of SysML system models. Finally, we show on a case study extracted from the automated transfer vehicle that our contract-based theory allows to verify requirement satisfaction for previously intractable models.
C1 [Dragomir, Iulia] Aalto Univ, Dept Comp Sci, Sch Sci, Espoo, Finland.
   [Ober, Iulian; Percebois, Christian] Univ Toulouse, IRIT, Toulouse, France.
C3 Aalto University; Universite Federale Toulouse Midi-Pyrenees (ComUE);
   Universite de Toulouse; Institut National Polytechnique de Toulouse;
   Universite Toulouse III - Paul Sabatier
RP Dragomir, I (corresponding author), Aalto Univ, Dept Comp Sci, Sch Sci, Espoo, Finland.
EM iulia.dragomir@aalto.fi; iulian.ober@irit.fr;
   christian.percebois@irit.fr
OI Dragomir, Iulia/0000-0002-5529-6094; Ober, Iulian/0000-0001-9057-1883
CR ABADI M, 1993, THEOR COMPUT SCI, V114, P3, DOI 10.1016/0304-3975(93)90151-I
   Aboussoror El-Arbi, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P480, DOI 10.1007/978-3-642-33666-9_31
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Andre P., 2011, 7EM JOURN ING DIR MO
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], 2008, SPEEDS D 2 5 4 CONTR
   [Anonymous], THEORY TIMED I O AUT
   Arnold A, 2013, ELECTRON P THEOR COM, P47, DOI 10.4204/EPTCS.133.6
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Bauer SS, 2012, LECT NOTES COMPUT SC, V7212, P43, DOI 10.1007/978-3-642-28872-2_3
   Ben-Hafaiedh I, 2010, LECT NOTES COMPUT SC, V6447, P436, DOI 10.1007/978-3-642-16901-4_29
   Benvenuti Luca, 2008, 2008 Forum on Specification, Verification & Design Languages (FDL), P142, DOI 10.1109/FDL.2008.4641436
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bobaru MG, 2008, LECT NOTES COMPUT SC, V5123, P135
   Bornot S, 2000, INFORM COMPUT, V163, P172, DOI 10.1006/inco.2000.2999
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   Chen TL, 2012, LECT NOTES COMPUT SC, V7211, P148, DOI 10.1007/978-3-642-28869-2_8
   Cheung SC, 1999, ACM T SOFTW ENG METH, V8, P49, DOI 10.1145/295558.295570
   Chilton Chris, 2012, Formal Modeling and Analysis of Timed Systems. Proceedings of the 10th International Conference, FORMATS 2012, P75, DOI 10.1007/978-3-642-33365-1_7
   Cimatti A, 2015, SCI COMPUT PROGRAM, V97, P333, DOI 10.1016/j.scico.2014.06.011
   Cimatti A, 2013, IEEE INT CONF AUTOM, P702, DOI 10.1109/ASE.2013.6693137
   Cimatti A, 2012, EUROMICRO CONF PROC, P21, DOI 10.1109/SEAA.2012.68
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Combemale B, 2011, LECT NOTES COMPUT SC, V6698, P35, DOI 10.1007/978-3-642-21470-7_4
   Conquet E., 2012, P EMB REAL TIM SOFTW
   Damm W, 2011, DES AUT TEST EUROPE, P1023
   David Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P703, DOI 10.1007/s10009-012-0237-y
   David A, 2010, LECT NOTES COMPUT SC, V6286, P290
   David A, 2010, LECT NOTES COMPUT SC, V6252, P365
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   De Alfaro L, 2002, LECT NOTES COMPUT SC, V2491, P108
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Dragomir I., 2013, TECH REP
   Dragomir I, 2012, IEEE INT C ENG COMP, P189, DOI 10.1109/ICECCS.2012.1
   Gacek A., 2014, 20141 U MINN SOFTW E
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Graf S, 2007, LECT NOTES COMPUT SC, V4574, P1
   GRUMBERG O, 1991, LECT NOTES COMPUT SC, V527, P250
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Larsen KG, 2006, LECT NOTES COMPUT SC, V4085, P82
   Messabihi M, 2010, ELECTRON PROC THEOR, P71, DOI 10.4204/EPTCS.37.6
   Mikk E., 1997, Advances in Computing Science - ASIAN '97. Third Asian Computing Science Conference. Proceedings, P181
   Murugesan Anitha., 2013, Proceedings of the 2013 ACM SIGAda Annual Conference on High Integrity Language Technology, P51
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   Ober I, 2011, INNOV SYST SOFTW ENG, V7, P257, DOI 10.1007/s11334-011-0163-2
   Ober I, 2011, LECT NOTES COMPUT SC, V6543, P418, DOI 10.1007/978-3-642-18381-2_35
   Ober I, 2010, IEEE INT C ENG COMP, P373, DOI [10.1109/ICECCS.2010.41, 10.1109/ICECCS.2010.59]
   Object Management Group, 2008, SYST MOD LANG SYSML
   Object Management Group, 2013, SEM FDN SUB EX UML M
   Object Management Group, 2010, OBJ CONSTR LANG OCL
   Object Management Group, 2009, UN MOD LANG UML V2 2
   Object Management Group, 2011, UML PROF MARTE MOD A
   Ouaknine J, 2004, IEEE S LOG, P54, DOI 10.1109/LICS.2004.1319600
   Parnas D., 1985, ICSE 85
   Payne R., 2011, TECH REP
   Peled D. A., 2001, Texts in Computer Science
   Quinton S., 2011, THESIS
   Quinton S, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P377, DOI 10.1109/SEFM.2008.28
   SAEMobilus, 2004, Architecture Analysis and Design Language (AADL)
   Wang F, 2007, LECT NOTES COMPUT SC, V4763, P352
   Wang Ting, 2014, NOTES COMPUT SCI, V8413, P310, DOI 10.1007/978-3-642-54862-8_21
   Whalen MW, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2012.173
NR 67
TC 9
Z9 10
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 587
EP 624
DI 10.1007/s10270-015-0481-1
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400013
DA 2024-07-18
ER

PT J
AU Szvetits, M
   Zdun, U
AF Szvetits, Michael
   Zdun, Uwe
TI Systematic literature review of the objectives, techniques, kinds, and
   architectures of models at runtime
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Models; Runtime; Literature review
ID RUN-TIME; SOFTWARE EVOLUTION; DYNAMIC ADAPTATION; AT-RUN.TIME;
   VERIFICATION; MANAGEMENT; COMPONENTS; FRAMEWORK; SUPPORT
AB In the context of software development, models provide an abstract representation of a software system or a part of it. In the software development process, they are primarily used for documentation and communication purposes in analysis, design, and implementation activities. Model-Driven Engineering (MDE) further increases the importance of models, as in MDE models are not only used for documentation and communication, but as central artefacts of the software development process. Various recent research approaches take the idea of using models as central artefacts one step further by using models at runtime to cope with dynamic aspects of ever-changing software and its environment. In this article, we analyze the usage of models at runtime in the existing research literature using the Systematic Literature Review (SLR) research method. The main goals of our SLR are building a common classification and surveying the existing approaches in terms of objectives, techniques, architectures, and kinds of models used in these approaches. The contribution of this article is to provide an overview and classification of current research approaches using models at runtime and to identify research areas not covered by models at runtime so far.
C1 [Szvetits, Michael] Univ Appl Sci Wiener Neustadt, Software Engn Grp, Inst Informat Technol, Wiener Neustadt, Austria.
   [Zdun, Uwe] Univ Vienna, Fac Comp Sci, Software Architecture Grp, Vienna, Austria.
C3 University of Vienna
RP Szvetits, M (corresponding author), Univ Appl Sci Wiener Neustadt, Software Engn Grp, Inst Informat Technol, Wiener Neustadt, Austria.
EM michael.szvetits@fhwn.ac.at; uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
CR Ahmad M., 2010, 2010 10th Annual International Conference on New Technologies of Distributed Systems (NOTERE), P285, DOI 10.1109/NOTERE.2010.5536629
   Ahn Y, 2009, PR IEEE COMP DESIGN, P41, DOI 10.1109/ICCD.2009.5413179
   Alferez German H., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P70, DOI 10.1007/978-3-642-33666-9_6
   Alferez German H., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P100, DOI 10.1109/SPLC.2011.21
   Alia M., 2006, P 2006 INT WORKSH SE, P96
   Alia M, 2006, LECT NOTES COMPUT SC, V4276, P1686
   Almorsy M., 2012, Proceedings, V4, P279
   Amoui M, 2012, J SYST SOFTWARE, V85, P2720, DOI 10.1016/j.jss.2012.05.033
   Amoui M, 2011, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2011.14
   Andersen A., 2001, DESIGN IMPLEMENTATIO
   [Anonymous], P 8 INT ACM SIGSOFT
   [Anonymous], 2012, P 16 INT SOFTW PROD
   [Anonymous], P 3 INT WORKSH MOD R
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], 2012, P 7 WORKSHOP MODELS
   [Anonymous], 2011, SEAMS 11 P INT S SOF
   [Anonymous], 2008, MISE 08 P 2008 INT W
   [Anonymous], DAGSTUHL REPORTS
   [Anonymous], 2013, SELF ADAPTIVE SYSTEM
   Arcaini P., 2012, LNCS, V7186, P223, DOI [10.1007/978-3-642-29860-817, DOI 10.1007/978-3-642-29860-817]
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Avouac P.A., 2012, EICS 2012, P35
   Bai XY, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P789, DOI 10.1109/SERVICES-I.2009.103
   Duc BL, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON ADAPTIVE AND SELF-ADAPTIVE SYSTEMS AND APPLICATIONS (ADAPTIVE 2010), P133
   Barbier F., 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P114, DOI 10.1109/HASE.2010.12
   Barbier F, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P163, DOI 10.1109/COGINF.2006.365692
   Bauer A, 2011, COMPUT J, V54, P58, DOI 10.1093/comjnl/bxq042
   Beltrame G, 2006, DES AUT TEST EUROPE, P98
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bencomo N, 2013, COMPUTING, V95, P167, DOI 10.1007/s00607-012-0224-x
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Bencomo N., 2010, P 2009 INT C MOD SOF, P119
   Bencomo N., MODELS RUN TIME WORK
   Bencomo N., 2009, 3 INT WORKSH MOD, P90
   Bencomo N., 2006, P 2006 INT C MOD SOF, P227
   Bencomo N., 2008, 2 INT WORKSH MOD RUN, P206
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bencomo N, 2009, 2009 ICSE WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P62, DOI 10.1109/MISE.2009.5069899
   Bencomo Nelly, 2013, SIGSOFT SOFTW ENG NO, V38, P27
   Bertolino Antonia, 2011, Software Engineering for Resilient Systems. Proceedings Third International Workshop (SERENE 2011), P130, DOI 10.1007/978-3-642-24124-6_13
   Betermieux S, 2007, LECT NOTES COMPUT SC, V4607, P137
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blumendorf M., 2008, AVI'08 Proceedings of the working conference on Advanced visual interfaces, P478
   Blumendorf M., 2008, EXECUTABLE MODELS HU, P238
   Bodenstaff L, 2010, SERV ORIENTED COMPUT, V4, P203, DOI 10.1007/s11761-010-0062-7
   Bomsdorf B, 2011, LECT NOTES COMPUT SC, V6761, P155, DOI 10.1007/978-3-642-21602-2_18
   Bromberg YD, 2011, INT CON DISTR COMP S, P446, DOI 10.1109/ICDCS.2011.65
   Bruno G, 2006, LECT NOTES COMPUT SC, V3812, P75
   Buchheit M., 1995, TECHNICAL REPORT
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Buschmann F., 2008, Pattern-Oriented Software Architecture: A System of Patterns, V1
   Calinescu R, 2013, COMPUTING, V95, P165, DOI 10.1007/s00607-012-0238-4
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Callow G., 2010, SYSTEM SYSTEMS ENG S, P1
   Caporuscio M., 2005, P 5 INT WORKSH SOFTW, P65
   Caporuscio M, 2007, J SYST SOFTWARE, V80, P455, DOI 10.1016/j.jss.2006.07.039
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Cariou E., 2012, P 7 WORKSH MOD RUN T, P60, DOI [10.1145/2422518.2422528, DOI 10.1145/2422518.2422528]
   Casale Giuliano, 2012, P 3 ACM SPEC INT C P, P63
   Casanova P, 2011, LECT NOTES COMPUT SC, V6903, P261, DOI 10.1007/978-3-642-23798-0_29
   Cavallaro Luca., 2012, Workshop on Models at run. time, P17
   Cazzola W, 2004, LECT NOTES COMPUT SC, V2975, P67
   Cetina C., MODEL DRIVEN APPROAC
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   Cetina C, 2009, ICAS: 2009 FIFTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS, P179, DOI 10.1109/ICAS.2009.50
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Chaari T, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS INTELLIGENCE & COMPUTING AND 9TH INTERNATIONAL CONFERENCE ON AUTONOMIC & TRUSTED COMPUTING (UIC/ATC), P415, DOI 10.1109/UIC-ATC.2012.82
   Chang Herve, 2007, Journal of Software, V2, P52, DOI 10.4304/jsw.2.2.52-63
   Chen D., 2010, P 2007 INT DAGST C M, P345
   Cheng SW, 2002, LECT NOTES COMPUT SC, V2299, P67
   Costa F., 2006, WORKSH MOD RUNT
   Costa FM, 2000, DOA'00: INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS AND APPL ICATIONS, PROCEEDINGS, P133, DOI 10.1109/DOA.2000.874185
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Coutaz J, 2007, LECT NOTES COMPUT SC, V4555, P63
   Criado J, 2012, EUROMICRO CONF PROC, P150, DOI 10.1109/SEAA.2012.27
   Dalpiaz Fabiano, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P439, DOI 10.1007/978-3-642-34002-4_34
   Daubert E., 2012, 2012 Proceedings of the First International Workshop on "European Software Services and Systems Research - Results and Challenges" (S-Cube 2012), P10, DOI 10.1109/S-Cube.2012.6225498
   de Roo A., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P41, DOI 10.1109/SSIRI.2011.14
   Derakhshanmanesh M, 2012, P 16 INT SOFTW PROD, V2, P2
   Derakhshanmanesh Mahdi, 2011, P 6 INT S SOFTW ENG, P128, DOI DOI 10.1145/1988008.1988026
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Dubus J., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P242
   Easterbrook S., SELECTING EMPIRICAL
   Elkorobarrutia X, 2008, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL WORKSHOP ON ENGINEERING OF AUTONOMIC & AUTONOMOUS SYSTEMS (EASE 2008), P37, DOI 10.1109/EASe.2008.11
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Feuerstack S., 2012, P 18 BRAZ S MULT WEB, P29, DOI [10.1145/2382636.2382646, DOI 10.1145/2382636.2382646]
   Feuerstack S., 2008, P WORK C ADV VIS INT, P217, DOI [10.1145/1385569.1385605, DOI 10.1145/1385569.1385605]
   Feuerstack Sebastian, 2011, P 10 BRAZ S HUM FACT, P227
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5421, P97, DOI 10.1007/978-3-642-01648-6_11
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Fouquet Francois, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P87, DOI 10.1007/978-3-642-33666-9_7
   Fouquet F., 2012, DISTRIBUTED APPL INT, V2012, P16
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Frece A, 2012, J VISUAL LANG COMPUT, V23, P223, DOI 10.1016/j.jvlc.2012.02.003
   Frey A. G., 2012, P 26 ANN BCS INT SPE, P79
   FREY AG, 2010, P 2 ACM SIGCHI S ENG, P341
   Frey Alfonso Garcia, 2012, P 4 ACM SIGCHI S ENG, P263
   Fuentes L., 2009, DYNAMIC WEAVING ASPE, P1
   Gamez N, 2011, LECT NOTES COMPUT SC, V6903, P164, DOI 10.1007/978-3-642-23798-0_16
   Garlan D, 2004, LECT NOTES COMPUT SC, V3047, P200
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   GARLAN D, 2001, P WORK C COMPL DYN S
   Garlan David, 2002, P 1 WORKSH SELFH HEA, P27, DOI [10.1145/582128.582134, DOI 10.1145/582128.582134]
   Garzon SR, 2010, THIRD INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER-HUMAN INTERACTIONS: ACHI 2010, P191, DOI 10.1109/ACHI.2010.12
   Geihs Kurt., 2006, SEAMS 06 P 2006 INT, P95
   Georgas JC, 2009, COMPUTER, V42, P52, DOI 10.1109/MC.2009.335
   Ghezzi C., 2011, 2011 IEEE 9th European Conference on Web Services, DOI 10.1109/ECOWS.2011.33
   Ghezzi C., 2012, P 2011 INT C MOD SOF, P152
   Ghezzi C, 2009, LECT NOTES COMPUT SC, V5581, P70, DOI 10.1007/978-3-642-02351-4_5
   Giese Holger, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P137, DOI 10.1007/978-3-642-30982-3_5
   Giese H., 2008, P 3 INT WORKSH GRAPH, P1, DOI 10.1145/1402947.1402949
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gjerlufsen T, 2009, COMPUTER, V42, P61, DOI 10.1109/MC.2009.325
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Goldsby HJ, 2008, LECT NOTES COMPUT SC, V5301, P568, DOI 10.1007/978-3-540-87875-9_40
   Goldsby HeatherJ., 2008, Models in Software Engineering, chapter AMOEBA-RT: Run-Time Verification of Adaptive Software, P212
   Goldsby HeatherJ., 2008, P 5 IEEE INT C AUTON, P87
   Gotz S., 2012, PROC SUST ICTS MAN S
   Gotz S., 2010, P 1 ANN INT C GREEN, P122
   Grace Paul, 2012, Middleware 2012. ACM/IFIP/USENIX 13th International Middleware Conference. Proceedings, P229, DOI 10.1007/978-3-642-35170-9_12
   Grace P., 2007, P 6 INT WORKSH AD RE, P2
   Grace P., 2008, P 2 INT C AUT COMP C, P27
   Grace P., 2003, REMMOC REFLECTIVE MI, P1170
   Grace P., 2005, SIGMOBILE MOBILE COM, V9, P2, DOI DOI 10.1145/1055959.1055962
   Graf P, 2006, P IEEE RAP SYST PROT, P3, DOI 10.1109/RSP.2006.15
   Graf P, 2007, I C FIELD PROG LOGIC, P722, DOI 10.1109/FPL.2007.4380754
   Gu ZH, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P32
   Haberl W., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P1887, DOI 10.1109/CIT.2010.323
   Hallsteinsen S, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Hamann Lars, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P384, DOI 10.1007/978-3-642-31491-9_29
   Hamann L., 2012, P 7 WORKSH MOD RUN T, P46, DOI [10.1145/2422518.2422526, DOI 10.1145/2422518.2422526]
   Hamann L., 2011, ELECT COMMUN EASST, P44
   Hao R., 2012, P 7 WORKSH MOD RUN T, P67
   Hoehndorf R, 2009, FRONT ARTIF INTEL AP, V199, P399, DOI 10.3233/978-1-60750-049-0-399
   Holmes TI, 2012, IEEE INT ENTERP DIST, P143, DOI 10.1109/EDOC.2012.25
   Holmes TI, 2012, IEEE INT ENTERP DIST, P211, DOI 10.1109/EDOC.2012.32
   Holmes T, 2010, LECT NOTES COMPUT SC, V6051, P98, DOI 10.1007/978-3-642-13094-6_9
   Hooman J, 2008, LECT NOTES COMPUT SC, V5002, P225
   Huang G., 2009, P 1 AS PAC S INT INT, P9
   Hui Song, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P303, DOI 10.1145/1810295.1810362
   Hui Song, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P140
   Hummer W., 2011, PROC 16 ACM S ACCESS, P21
   Ingstrup M, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P149
   Inverardi P., 2011, 2011 2nd International Workshop on Requirements@Run.Time (RE@RunTime), P1, DOI 10.1109/ReRunTime.2011.6046241
   Inverardi P., 2011, P 8 WORKSH ASS SELF, P5
   Inverardi P, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P106, DOI 10.1109/SEAMS.2009.5069079
   Inverardi Paola, 2010, P JOINT ERCIM WORKSH, P93
   Jiang M., 2007, WORKSH MOD RUN TIM 1
   Kappel G., 2011, LEVERAGING MODEL BAS, P254
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khan Mohammad Ullah, 2008, IEEE Distributed Systems Online, V9, DOI 10.1109/MDSO.2008.19
   Kindler E., 2011, P 3 WORKSH BEHAV MOD, P41
   Kitchenham B., 2007, Joint Report
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   Kordon F., 2007, IEEE DISTRIBUTED SYS, V8, P7
   Krasnogolowy A, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P331, DOI 10.1109/ICIT.2012.6209959
   Krikava F., 2011, SEKE, P553
   Krüger IH, 2010, J LOGIC COMPUT, V20, P725, DOI 10.1093/logcom/exn079
   Lehmann Grzegorz, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P209, DOI 10.1007/978-3-642-21210-9_21
   Lehmann Grzegorz, 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P636, DOI 10.1109/PERCOMW.2010.5470513
   Lehmann G., 2008, UTILIZING DYNAMIC EX, P306
   Litoiu M., 2005, SIGSOFT Software Engineering Notes, V30, P1
   Liu CS, 2007, PROCEEDINGS OF 2007 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1444
   Ma Y, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P103, DOI 10.1109/SOSE.2013.21
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Maoz S, 2009, COMPUTER, V42, P28, DOI 10.1109/MC.2009.336
   Maoz S, 2009, LECT NOTES COMPUT SC, V5421, P109, DOI 10.1007/978-3-642-01648-6_12
   Matevska J., 2009, P WARM WORKSH ACM IE, P33
   Mathis M. M., 2006, P 20 INT C PAR DISTR, P367
   Mayerhofer Tanja., 2012, P 2012 WORKSHOP DOMA, P1
   McQuiggan SW, 2006, LECT NOTES COMPUT SC, V4053, P565
   Menasce D. A., 2004, Software Engineering Notes, V29, P186, DOI 10.1145/974043.974075
   Miksa Krzysztof, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P329
   Min-Young Nam, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P13
   Mocci A, 2013, COMPUTING, V95, P191, DOI 10.1007/s00607-012-0214-z
   Morin B., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering - ASE, V10, P205, DOI [10.1145/1858996.1859040, DOI 10.1145/1858996.1859040]
   Morin B., 2012, P 15 ACM SIGSOFT S C, P135, DOI [DOI 10.1145/2304736, 10.1145/2304736.2304759, DOI 10.1145/2304736.2304759]
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   Morris K. A., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P82, DOI 10.1109/HASE.2012.25
   Mos A, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P227, DOI 10.1109/EDOC.2002.1137712
   Moser O, 2012, IEEE T SOFTWARE ENG, V38, P828, DOI 10.1109/TSE.2011.43
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Murthy PVR, 2011, P INT COMP SOFTW APP, P360, DOI 10.1109/COMPSAC.2011.54
   Muskens J, 2004, EUROMICRO CONF PROC, P611, DOI 10.1109/EURMIC.2004.1333429
   Nakajima S, 2011, ASIA PAC SOFWR ENG, P203, DOI [10.1109/APSC.2011.14, 10.1109/APSEC.2011.14]
   Nguyen Tuan, 2010, 2010 IEEE International Conference on Web Services (ICWS), P393, DOI 10.1109/ICWS.2010.64
   Nguyen V. H., 2012, P MRT ACM, P32
   Nierstrasz O., 2009, MODEL CENTRIC CONTEX, P128
   Nilsson EG, 2007, LECT NOTES COMPUT SC, V4323, P234
   Nordstrom S, 2007, FOURTH IEEE INTERNATIONAL WORKSHOP ON ENGINEERING OF AUTONOMIC & AUTONOMOUS SYSTEMS, PROCEEDINGS, P37, DOI 10.1109/EASE.2007.18
   OCCELLO A, 2008, MODELS RUNTIME, V8, P67
   Olivier-Nathanael B. D., 2012, P WORKSH MOD DRIV SE, P6
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Parra Carlos., 2009, Proceedings of the 13th International Software Product Line Conference, SPLC'09, P131
   Perrouin G, 2012, PROC INT CONF SOFTW, P1353, DOI 10.1109/ICSE.2012.6227081
   Pienaar JacquesA., 2011, Proceedings of the international conference on Supercomputing, P225, DOI DOI 10.1145/1995896.1995933
   Pleumann J, 2003, LECT NOTES COMPUT SC, V2863, P190
   Porcarelli S., 2004, DISTRIBUTED SYSTEMS
   Rammig FJ, 2009, LECT NOTES COMPUT SC, V5860, P131, DOI 10.1007/978-3-642-10265-3_13
   Redlich D, 2012, LECT NOTES BUS INF P, V99, P473
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Rodriguez-Gracia Diego, 2012, Model and Data Engineering. Proceedings of the 2nd International Conference, MEDI 2012, P16, DOI 10.1007/978-3-642-33609-6_4
   Röttger S, 2007, SOFTW SYST MODEL, V6, P185, DOI 10.1007/s10270-006-0024-x
   Rohr M., ACM IEEE MODELS WORK
   Rosenmüller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   Rui Yang, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P17, DOI 10.1109/HASE.2011.12
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Sawyer Pete., 2007, Proceedings of the 2nd International Workshop on Requirements Engineering Visualization (REV'07), P3, DOI [10.1109/REV.2007.10, DOI 10.1109/REV.2007.10]
   Schlegel T., 2011, P 3 ACM SIGCHI S ENG, P337
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schneider D, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491467
   Schneider D, 2009, EIGHTH IEEE INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P455, DOI 10.1109/DASC.2009.111
   Schönböck J, 2012, ASIA PAC SOFWR ENG, P164, DOI 10.1109/APSEC.2012.56
   Schwartze Veit, 2010, P INT C ADV VISUAL I, P321
   Serral E, 2013, COMPUT J, V56, P87, DOI 10.1093/comjnl/bxs019
   Serral E, 2010, LECT NOTES COMPUT SC, V6439, P1, DOI 10.1007/978-3-642-16917-5_1
   Serral E, 2010, LECT NOTES COMPUT SC, V6051, P378, DOI 10.1007/978-3-642-13094-6_30
   Shroff G, 2009, ISEC 2009 - PROCEEDINGS OF THE 2ND INDIA SOFTWARE ENGINEERING CONFERENCE, P3
   Simmonds J., 2010, MONITORING RECOVERY, P250
   Sindhgatta R., 2009, P 24 ACM SIGPLAN C C, P647, DOI DOI 10.1145/1639950.1639960
   Song H, 2011, LECT NOTES COMPUT SC, V6981, P273, DOI 10.1007/978-3-642-24485-8_20
   Song H, 2010, LECT NOTES COMPUT SC, V6395, P168
   Song H, 2011, J SYST SOFTWARE, V84, P711, DOI 10.1016/j.jss.2010.12.009
   Song Hui, 2012, P 7 WORKSH MOD RUN T, P25, DOI 10.1145/2422518.2422523
   Sottet J.-S., 2007, P 19 INT C ASS FRANC, P253
   Sottet JS, 2007, LECT NOTES COMPUT SC, V4662, P397
   Sousa G. C. M., 2012, MRT 12, P10
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Spieker M., 2012, P 2012 IEEE 17 INT C, P1
   Steck A., 2011, 2011 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS 2011), P2064, DOI 10.1109/IROS.2011.6048337
   Steck A, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P73
   Stein Steffen, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing Workshops (ISORCW Workshops 2010). Volume II: Workshops, P39, DOI 10.1109/ISORCW.2010.17
   Steinbauer G., 2005, Proceedings of the 2005 Robot Soccer World Cup, P13
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   SUKAVIRIYA PN, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P375
   Taconet C, 2009, LECT NOTES COMPUT SC, V5870, P513, DOI 10.1007/978-3-642-05148-7_39
   Tan L, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P487
   Thonhauser M, 2011, EUROMICRO WORKSHOP P, P285, DOI 10.1109/PDP.2011.89
   Thonhauser M, 2010, IEEE INT C ENG COMP, P249, DOI [10.1109/ICECCS.2010.3, 10.1109/ICECCS.2010.35]
   Thonhauser M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P254, DOI 10.1109/ECBS.2009.35
   Tombelle C, 2006, LECT NOTES COMPUT SC, V4199, P395
   Truyen E., 2008, Proceedings of the 7th International Conference on Aspect-Oriented Software Development, P120, DOI DOI 10.1145/1353482.1353497
   Uttamchandani S., 2005, THESIS CHAMPAIGN IL
   Vanderdonckt J, 2009, LA-WEB: 2009 LATIN AMERICAN WEB CONGRESS, P52, DOI 10.1109/LA-WEB.2009.24
   Vogel T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P129, DOI 10.1109/SEAMS.2012.6224399
   Vogel Thomas, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P224, DOI 10.1007/978-3-642-21210-9_22
   Vogel Thomas, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P124
   Vogel T., 2009, PROC 6 INT C AUTONOM, P67
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Vrbaski Mira., 2012, P 7 WORKSHOP MODELS, P3, DOI DOI 10.1145/2422518.2422520
   Waignier G., 2009, P 5 INT C QUAL SOFTW
   Wang B, 2010, PROCEEDINGS OF 2010 CROSS-STRAIT CONFERENCE ON INFORMATION SCIENCE AND TECHNOLOGY, P230, DOI 10.1109/IPTC.2010.141
   Wang L., 2007, Proceedings of the Third International Workshop on Software Engi- neering for Secure Systems, SESS '07, P10
   Weiss G, 2011, EUROMICRO CONF PROC, P477, DOI 10.1109/SEAA.2011.78
   Welsh K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P560, DOI 10.1109/ASE.2011.6100125
   Welsh Kristopher, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P290, DOI 10.1109/ICSTW.2010.57
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Wimmer M, 2009, LECT NOTES COMPUT SC, V5795, P727, DOI 10.1007/978-3-642-04425-0_59
   Witt H., 2007, P 27 INT C DISTR COM, P43, DOI [10.1109/ICDCSW.2007.80, DOI 10.1109/ICDCSW.2007.80]
   Wolfe C, 2009, LECT NOTES COMPUT SC, V5795, P357, DOI 10.1007/978-3-642-04425-0_27
   Xiao L, 2009, INFORM SOFTWARE TECH, V51, P933, DOI 10.1016/j.infsof.2008.05.005
   Yu Eric., 1998, P 4 INT WORKSHOP REQ, P15
   Yu Gao, 2012, Proceedings of the 2012 Fifth International Conference on Intelligent Computation Technology and Automation (ICICTA 2012), P478, DOI 10.1109/ICICTA.2012.126
   Zeng KB, 2010, DES AUT TEST EUROPE, P87
   Zeng LZ, 2005, INT CONF E BUS ENG, P295
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zhang L., 2012, P 4 AS PAC S INT INT, P21
   Zhao Y, 2006, ELECTRON NOTES THEOR, V144, P125, DOI 10.1016/j.entcs.2006.02.008
   Zhao YH, 2006, LECT NOTES COMPUT SC, V3911, P1034
   Zhao Y, 2009, ELECTRON NOTES THEOR, V253, P179, DOI 10.1016/j.entcs.2009.09.035
   Zimmermann O, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2011.3
   Zinky J, 2002, LECT NOTES COMPUT SC, V2519, P755
NR 283
TC 64
Z9 66
U1 1
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 31
EP 69
DI 10.1007/s10270-013-0394-9
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200004
DA 2024-07-18
ER

PT J
AU Baresi, L
   Blohm, G
   Kolovos, DS
   Matragkas, N
   Motta, A
   Paige, RF
   Radjenovic, A
   Rossi, M
AF Baresi, Luciano
   Blohm, Gundula
   Kolovos, Dimitrios S.
   Matragkas, Nicholas
   Motta, Alfredo
   Paige, Richard F.
   Radjenovic, Alek
   Rossi, Matteo
TI Formal verification and validation of embedded systems: the UML-based
   MADES approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Verification; Closed-loop simulation; MARTE;
   Embedded systems
ID MODEL; TOOL
AB Formal verification and validation activities from the early development phases can foster system consistency, correctness, and integrity, but they are often hard to carry out as most designers do not have the necessary background. To address this difficulty, a possible approach is to allow engineers to continue using familiar notations and tools, while verification and validation are performed on demand, automatically, and transparently. In this paper we describe how the problem of making formal verification and validation tasks more designer-friendly is tackled by the MADES approach. Our solution is based on a tool chain that is built atop mature, popular, and widespread technologies. The paper focuses on the verification and closed-loop simulation (validation) aspects of the approach and shows how it can be applied to significant embedded software systems.
C1 [Baresi, Luciano; Motta, Alfredo; Rossi, Matteo] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
   [Blohm, Gundula] Cassidian, D-89077 Ulm, Germany.
   [Kolovos, Dimitrios S.; Matragkas, Nicholas; Paige, Richard F.; Radjenovic, Alek] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 Polytechnic University of Milan; University of York - UK
RP Rossi, M (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Piazza L da Vinci 32, I-20133 Milan, Italy.
EM Luciano.Baresi@polimi.it; Gundula.M.Blohm@cassidian.com;
   Dimitrios.Kolovos@york.ac.uk; Nicholas.Matragkas@york.ac.uk;
   Alfredo.Motta@polimi.it; Richard.Paige@york.ac.uk;
   Alek.Radjenovic@york.ac.uk; Matteo.Rossi@polimi.it
RI Kolovos, Dimitrios/L-9830-2014; Baresi, Luciano/N-4208-2018
OI Kolovos, Dimitris/0000-0002-1724-6563; Baresi,
   Luciano/0000-0001-6467-837X
FU European Community [248864]; Programme IDEAS-ERC, project SMScom
   [227977]
FX This research was supported by the Seventh Framework Program
   (FP7/2007-2013) of the European Community, project MADES (248864), and
   by the Programme IDEAS-ERC, project SMScom (227977).
CR Andersson P., 2006, P WORK PROGR SESS EU
   André C, 2007, LECT NOTES COMPUT SC, V4735, P559
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], TECHNICAL REPORT
   Bagnato A., 2010, 1 WORKSH HANDS ON PL, P5
   Bagnato A., 2012, TECHNICAL REPORT
   Baresi Luciano, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P90, DOI 10.1007/978-3-642-21210-9_9
   Baresi L, 1997, PROC INT CONF SOFTW, P56, DOI 10.1145/253228.253241
   Baresi L, 2012, IEEE INTL CONF IND I, P635, DOI 10.1109/INDIN.2012.6301223
   Baresi Luciano., 2012, Formal Methods for Components and Objects, P267, DOI [10.1007/978-3-642-25271-6, DOI 10.1007/978-3-642-25271-6]
   Bersani M. M., 2010, Proceedings of the 2010 17th International Symposium on Temporal Representation and Reasoning (TIME 2010), P43, DOI 10.1109/TIME.2010.21
   Blohm G., 2012, D53 FINAL EVALUATION
   Blohm G., 2010, REQUIREMENTS SPECIFI
   Burmester S, 2005, PROC INT CONF SOFTW, P670
   Choppy Christine, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI [10.1145/1921532.1921561, DOI 10.1145/1921532.1921561]
   Ciapessoni E, 1999, ACM T SOFTW ENG METH, V8, P79, DOI 10.1145/295558.295566
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Diethers K, 2004, LECT NOTES COMPUT SC, V2988, P139
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   Eric P., 2008, P DATE 08 WORKSH MOD
   Eshuis R, 2009, SCI COMPUT PROGRAM, V74, P65, DOI 10.1016/j.scico.2008.09.001
   Evans A., 1999, FORMAL REASONING UML
   Falleri J.R., 2006, ECMDA TRAC WORKSH EC
   Fritzson P., 2004, PRINCIPLES OBJECT OR
   Gray I., 2009, P 2009 INT C COMP AR, P147
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Hammal Y, 2005, LECT NOTES COMPUT SC, V3731, P38
   Jackson Donald C., 2001, FAO Fisheries Technical Paper, P1
   Kolovos D.S., 2010, TECHNICAL REPORT
   Lima V, 2009, ELECTRON NOTES THEOR, V254, P143, DOI 10.1016/j.entcs.2009.09.064
   MADES, 2012, MOD BAS METH TOOLS A
   Nielsen B., 2007, QUASIMODO QUANTITATI
   OMG, 2009, TECHNICAL REPORT
   OMG: Business process model and notation (BPMN) version 2. 0, 2011, TECHNICAL REPORT
   Pradella M., 2012, ACM T SOFTW IN PRESS
   Radjenovic Alek, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P340, DOI 10.1007/978-3-642-31491-9_26
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Saldhana J A., 2000, Int. Conf. on Software Engineering and Knowledge Engineering (SEKE 2000), P103
   Schamai W., 2009, P 7 INT MODELICA C C, P612
   Staines TS, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P191, DOI 10.1109/ECBS.2008.12
   Storrle H., 2005, FORMAL SEMANTICS UML
   Williams JR, 2010, ELECTRON NOTES THEOR, V263, P211, DOI 10.1016/j.entcs.2010.05.013
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zhan XD, 2004, FOURTH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P1116
NR 44
TC 14
Z9 17
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 343
EP 363
DI 10.1007/s10270-013-0330-z
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eggers, A
   Ramdani, N
   Nedialkov, NS
   Fränzle, M
AF Eggers, Andreas
   Ramdani, Nacim
   Nedialkov, Nedialko S.
   Fraenzle, Martin
TI Improving the SAT modulo ODE approach to hybrid systems analysis by
   combining different enclosure methods
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Analysis of hybrid discrete-continuous systems; Satisfiability modulo
   theories; Enclosure methods for ODEs; Bracketing systems
ID THEOREM
AB Aiming at automatic verification and analysis techniques for hybrid discrete-continuous systems, we present a novel combination of enclosure methods for ordinary differential equations (ODEs) with the iSAT solver for large Boolean combinations of arithmetic constraints. Improving on our previous work, the contribution of this paper lies in combining iSAT with VNODE-LP, as a state-of-the-art interval solver for ODEs, and with bracketing systems, which exploit monotonicity properties allowing to find enclosures for problems that VNODE-LP alone cannot enclose tightly. We apply the combined iSAT-ODE solver to the analysis of a variety of non-linear hybrid systems by solving predicative encodings of reachability properties and of an inductive stability argument, and evaluate the impact of the different enclosure methods, decision heuristics and their combination. Our experiments include classic benchmarks from the literature, as well as a newly-designed conveyor belt system that combines hybrid behavior of parallel components, a slip-stick friction model with non-linear dynamics and flow invariants and several dimensions of parameterization. In the paper, we also present and evaluate an extension of VNODE-LP tailored to its use as a deduction mechanism within iSAT-ODE, to allow fast re-evaluations of enclosures over arbitrary subranges of the analyzed time span.
C1 [Eggers, Andreas; Fraenzle, Martin] Carl von Ossietzky Univ Oldenburg, Dept Comp Sci, D-26111 Oldenburg, Germany.
   [Ramdani, Nacim] Univ Orleans, PRISME, F-18020 Bourges, France.
   [Nedialkov, Nedialko S.] McMaster Univ, Hamilton, ON, Canada.
C3 Carl von Ossietzky Universitat Oldenburg; Universite de Orleans;
   McMaster University
RP Eggers, A (corresponding author), Carl von Ossietzky Univ Oldenburg, Dept Comp Sci, D-26111 Oldenburg, Germany.
EM andreas.eggers@informatik.uni-oldenburg.de;
   nacim.ramdani@univ-orleans.fr; nedialk@mcmaster.ca;
   fraenzle@informatik.uni-oldenburg.de
RI Fränzle, Martin/AHB-0004-2022
OI Franzle, Martin/0000-0002-9138-8340; Ramdani, Nacim/0000-0003-1491-3751
FU transregional research center AVACS [H1/2]
FX We would like to thank Stefan Ratschan, Christian Herde, Tino Teige,
   Jens Oehlerking, and Corina Mitrohin for discussions on the
   region-stability-related proof scheme utilized for the experiments in
   this paper and all colleagues from the transregional research center
   AVACS, project H1/2 "Constraint-based Verification for Hybrid Systems"
   for the joint development of the iSAT core. Additionally, we are
   grateful to the reviewers of [6] for their detailed comments. Especially
   by insisting on a more thorough experimental evaluation and by pointing
   out shortcomings in our presentation, the SoSyM reviewers have helped
   tremendously to improve the quality of this paper. Thank you!
CR [Anonymous], 1999, THESIS U TORONTO TOR
   [Anonymous], MSUCL1088 MICH STAT
   [Anonymous], THESIS TU DENMARK LY
   Clarke E, 2003, LECT NOTES COMPUT SC, V2619, P192
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Eggers A, 2011, LECT NOTES COMPUT SC, V7041, P172, DOI 10.1007/978-3-642-24690-6_13
   Eggers A, 2008, LECT NOTES COMPUT SC, V5311, P171, DOI 10.1007/978-3-540-88387-6_14
   Fousse L, 2007, ACM T MATH SOFTWARE, V33, DOI 10.1145/1236463.1236468
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   Goldsztejn A, 2010, LECT NOTES COMPUT SC, V6308, P221, DOI 10.1007/978-3-642-15396-9_20
   Henzinger TA, 2000, LECT NOTES COMPUT SC, V1790, P130
   Ishii D., 2011, INT J SOFTWARE T MAR, P1, DOI [10.1007/s10009-011-0193-y, DOI 10.1007/S10009-011-0193-Y]
   Kieffer M., 2006, PROC 14 IFAC S SYSTE, P843
   Lerch M, 2006, ACM T MATH SOFTWARE, V32, P299, DOI 10.1145/1141885.1141893
   Lygeros J, 2003, IEEE T AUTOMAT CONTR, V48, P2, DOI 10.1109/TAC.2002.806650
   Müller M, 1927, MATH Z, V26, P619, DOI 10.1007/BF01475477
   Nedialkov N.S., 2006, CAS0606NN MCMASTER U
   Nedialkov NS, 2011, MATH ENG-SER, P3
   Podelski A, 2007, LECT NOTES COMPUT SC, V4763, P320
   Ramdani N, 2010, NONLINEAR ANAL-HYBRI, V4, P263, DOI 10.1016/j.nahs.2009.10.002
   Ramdani N, 2009, IEEE T AUTOMAT CONTR, V54, P2352, DOI 10.1109/TAC.2009.2028974
   Ratschan S, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1210268.1210276
   Shtrichman O., 2000, Proceedings of the The International Conference on Computer Aided Verification (CAV), P480
   Stursberg O., 1997, Hybrid Systems IV, P361, DOI 10.1007/BFb0031569
NR 25
TC 19
Z9 20
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 121
EP 148
DI 10.1007/s10270-012-0295-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100009
DA 2024-07-18
ER

PT J
AU Nguyen, H
   Apon, A
AF Hai Nguyen
   Apon, Amy
TI A component-based end-to-end simulation of the Linux file system
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Colored Petri Net; File system modeling; File system simulation; Petri
   Net; Linux file system; L2 cache model
AB The Linux file system is designed with components utilizing a layered architecture. The upper components hide details of the lower components, and each layer presents unified and simple interfaces to the layers above and below. This design helps Linux to be flexible as well as to provide support for multiple types of storage devices. In this paper, this component architecture is used to develop a realistic simulation without having to model lower level details of the hardware layer or particular storage devices. A detailed simulation-based performance model of the Linux ext3 file system has been developed using Colored Petri Nets. The extensive validation study using the model obtains results that are close to the expected behavior of the real file system. The model demonstrates that file system parameters have a significant impact on the I/O performance.
C1 [Hai Nguyen] Univ Arkansas, Fayetteville, AR 72701 USA.
   [Apon, Amy] Clemson Univ, Sch Comp, Div Comp Sci, Clemson, SC USA.
C3 University of Arkansas System; University of Arkansas Fayetteville;
   Clemson University
RP Nguyen, H (corresponding author), Univ Arkansas, Fayetteville, AR 72701 USA.
EM hai.q.nguyen74@gmail.com; aapon@clemson.edu
FU National Science Foundation [0722625]; Arkansas Science and Technology
   Authority; Division Of Computer and Network Systems; Direct For Computer
   & Info Scie & Enginr [0722625] Funding Source: National Science
   Foundation
FX This research is supported in part by the National Science Foundation
   under Grant No. 0722625 and by a grant from the Arkansas Science and
   Technology Authority. The authors would like to thank Larry Dowdy and
   Doug Hoffman for their feedback and sharing their invaluable knowledge
   and insights into file system behavior and performance modeling.
CR Aizikowitz N, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P2417, DOI 10.1109/WSC.2005.1574534
   Ali Ahad, 2007, 2007 Winter Simulation Conference, P1641
   [Anonymous], ATEC 05
   BRYANT RE, 2007, CMUCS07128
   Bucy J.S., 2003, DISKSIM SIMULATION E
   DeRosa P., 2006, SIGCSE Bulletin, V38, P308, DOI 10.1145/1124706.1121436
   Gorton I, 2008, COMPUTER, V41, P30, DOI 10.1109/MC.2008.122
   GRIFFIN, 2004, THESIS CARNEGIE MELL
   Griffin JohnLinwood., 2002, FAST, V2, P6
   Hsieh HY, 2002, 10TH IEEE INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, PROCEEDINGS, P24, DOI 10.1109/ICNP.2002.1181383
   Jensen K., 1996, Coloured Petri nets: basic concepts, analysis methods and practical use, V1
   Johnson M.K., 2001, Whitepaper: Red Hat's New Journaling File System
   Jones M. T., 2007, ANATOMY LINUX FILE S
   Kristensen L. M., 1998, International Journal on Software Tools for Technology Transfer, V2, P98, DOI 10.1007/s100090050021
   Levon J., 2009, OPROFILE SYSTEM PROF
   Linux Kernel Organization, 2011, LIN KERN SOURC COD
   Liu Y., 2011, P 7 IEEE INT WORKSH
   Liu ZB, 2007, IFIP INT C NETW PARA, P624, DOI 10.1109/NPC.2007.93
   Lu B., 2006, 18 IASTED INT C PAR
   Maghraoui K.E., 2010, Proceedings of the first joint WOSP/SIPEW international conference on Performance engineering, P15
   Molero X, 2000, 8TH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P307, DOI 10.1109/MASCOT.2000.876553
   Murray N., 2004, Understanding virtual memory
   Nguyen H. Q., 2011, ICPE, P73
   Norcott W.D., 2011, IOzone Filesystem Benchmark
   Pommnitz J., 2010, Kernel level exception handing in linux 2.1.8
   Ratzer AV, 2003, LECT NOTES COMPUT SC, V2679, P450
   Routray R, 2007, INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, PROCEEDINGS, P199
   Staley Joshua, 2007, 2007 32nd IEEE Conference on Local Computer Networks, P234
   Stansberry M., 2010, DATA CTR DECISIONS 2
   THEKKATH CA, 1994, SOFTWARE PRACT EXPER, V24, P981, DOI 10.1002/spe.4380241102
   Wang YJ, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P604
NR 31
TC 0
Z9 0
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 745
EP 764
DI 10.1007/s10270-012-0253-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600007
DA 2024-07-18
ER

PT J
AU Kosiuczenko, P
AF Kosiuczenko, Piotr
TI Specification of invariability in OCL Specifying invariable system parts
   and views
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE OCL; UML; Invariability; Frame problem; Views
AB The Object Constraint Language (OCL) is a high-level, object-oriented language for contractual system specifications. Despite its expressivity, OCL does not provide primitives for a compact specification of invariability. In this paper, problems with invariability specification are listed and some weaknesses of existing solutions are pointed out. The question of invariability specification is addressed and a simple but expressive extension of OCL is proposed. It allows a view-oriented specification of invariability constraints, whereby we restrict the notion of view to reducts based on order-sorted algebras. The semantics of this extension is defined in terms of standard OCL.
C1 WAT, Inst Informat Syst, Warsaw, Poland.
C3 Military University of Technology in Warsaw
RP Kosiuczenko, P (corresponding author), WAT, Inst Informat Syst, Warsaw, Poland.
CR Abrial JR, 2005, LECT NOTES COMPUT SC, V3455, P222
   Abrial JR, 2003, LECT NOTES COMPUT SC, V2651, P168
   Ackermann J, 2006, LECT NOTES COMPUT SC, V4001, P255, DOI 10.1007/11767138_18
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2004, J. Obj. Technol., DOI [10.5381/jot.2004.3.6.a2, DOI 10.5381/JOT.2004.3.6.A2]
   [Anonymous], 2009, UN MOD LANG SPEC VER
   [Anonymous], 2001, DESIGN CONTRACT EXAM
   Baar T., 2005, P MODELS 05 SAT WORK, P83
   Baar T., 2006, LNCS, V3844
   BERGSTRA JA, 1987, THEOR COMPUT SCI, V50, P137, DOI 10.1016/0304-3975(87)90123-X
   Bidoit M, 1999, LECT NOTES COMPUT SC, V1723, P399
   Borgida A., 1993, 15 INT C SOFTW ENG B
   Brucker A., 2009, LNCS, V6002, P261
   Brucker Achim D., 2007, THESIS ETH ZURICH
   Cabot J, 2007, LECT NOTES COMPUT SC, V4801, P198
   CENGARLE MV, 2004, SOFTW SYST MODEL, V3, P9
   Chang C. C., 1990, Model Theory, V73
   CHEESMAN J, 2000, UML COMPONENTS
   Darvas A., 2005, P 7 WORKSH FORM TECH
   DOT, DRESD OCL TOOLK
   DSOUZA D, 1998, OBJECT COMPONENTS FR
   Dunne S., 2004, LNCS, V2999
   EVANS AS, 1999, BEHAV SPECIFICATIONS, pCH4
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Fitzgerald J.S., 2005, VALIDATED DESIGN OBJ
   Gogolla M., USE - A UML-Based Specification Environment
   Goguen J., 1992, THEORETICAL COMPUTER, V105, P167
   GOGUEN JA, 1992, J ACM, V39, P95, DOI 10.1145/147508.147524
   HENNICKER R, 2004, ELECT NOTES THEORETI, V102, P111
   Hitz M., 1999, UML WORK
   Hoare T., 1969, CACM, V12, P576, DOI [10.1145/363235.363259, DOI 10.1145/363235.363259]
   Kassios IT, 2006, LECT NOTES COMPUT SC, V4085, P268
   Kosiuczenko P, 2006, LECT NOTES COMPUT SC, V4199, P676
   Kozankiewicz H, 2006, LECT NOTES COMPUT SC, V4243, P129
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B., 1998, Object-oriented software construction (Second Edi)
   Milner R., 1990, The Definition of Standard ML
   Minsky M, 1974, 306 MIT ART INT LAB
   Müller P, 2006, SCI COMPUT PROGRAM, V62, P253, DOI 10.1016/j.scico.2006.03.001
   O'Hearn PW, 2004, ACM SIGPLAN NOTICES, V39, P268, DOI [10.1145/982962.964024, 10.1145/1498926.1498929]
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2003, UN MOD LANG SPEC VER
   OMG, 2010, OCL SPEC VERS 2 2 FO
   Parnas D., 1972, COMMUN ACM, V5, P1053
   RICHTERS M, 2002, THESIS U BREMEN
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Schoeller B., 2006, 542 ETH ZUR
   Schubert L., 1990, KNOWLEDGE REPRESENTA, P23
   SZYPERSKI C, 2002, COMPONENT SOFTWARE
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wirsing M., 1991, HDB THEORETICAL COMP, VB, P675
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
NR 52
TC 14
Z9 14
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 415
EP 434
DI 10.1007/s10270-011-0215-y
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300012
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Syriani, E
   Vangheluwe, H
AF Syriani, Eugene
   Vangheluwe, Hans
TI A modular timed graph transformation language for simulation-based
   design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Simulation; DEVS; Graph transformation
ID EVENT-DRIVEN GRAMMARS; MODEL TRANSFORMATION; TOOL; FORMALISM; FRAMEWORK;
   DEVS
AB We introduce the MoTif (Modular Timed graph transformation) language, which allows one to elegantly model complex control structures for programmed graph transformation. These include modular construction, parallel composition, and a temporal dimension in addition to the usual transformation control structures. The first part of this contribution formally introduces MoTif and its semantics is based on the Discrete EVent system Specification (DEVS) formalism which allows for highly modular, hierarchical modelling of timed, reactive systems. In MoTif, graphs are embedded in events and individual transformation rules are embedded in atomic DEVS models. Aside effect of the use of DEVS is the introduction of an explicit notion of time. This allows one to model a time-advance for every rule as well as to interrupt (pre-empt) rule execution. In the second part, we design a case study to show how the explicit notion of time allows for the simulation-based design of reactive systems such as modern computer games. We use the well-known game of PacMan as an example and model its dynamics in MoTif. This also allows the modelling of player behaviour, incorporating data about human players' behaviour, and reaction times. Thus, a model of both player and game is obtained which can be used to evaluate, through simulation, the playability of a game design. We propose a playability performance measure and change the value of some parameters of the PacMan game. For each variant of the game thus obtained, simulation yields a value for the quality of the game. This allows us to choose an "optimal" (from a playability point of view) game configuration. The user model is subsequently replaced by a visual interface to a real player, and the game model is executed using a real-time DEVS simulator.
C1 [Syriani, Eugene; Vangheluwe, Hans] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
   [Vangheluwe, Hans] Univ Antwerp, Dept Math & Comp Sci, B-2020 Antwerp, Belgium.
C3 McGill University; University of Antwerp
RP Syriani, E (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM esyria@cs.mcgill.ca; hv@cs.mcgill.ca
RI Syriani, Eugene/AAI-5036-2020; Vangheluwe, Hans/H-9884-2016
OI Syriani, Eugene/0000-0001-6527-1651; Vangheluwe,
   Hans/0000-0003-2079-6643
CR AGRAWAL A, 2003, OOPSLA 03, P386
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], 2008, 4 INT WORKSH GRAPH B
   [Anonymous], 1984, Multifacetted Modelling and Discrete Event Simulation
   Blostein D., 1996, Graph Grammars and Their Application to Computer Science. 5th International Workshop. Selected Papers, P38, DOI 10.1007/3-540-61228-9_78
   Blostein Dorothea., 1999, SOFTWARE PRACTICE EX, V9, P1
   Burmester S, 2005, PROC INT CONF SOFTW, P670
   Chow ACH, 1996, T SOC COMPUT SIMUL, V13, P55
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Devroye L., 1986, Non-Uniform Random Variate Generation
   Dormoy F.X., 2007, SCADE6 MODEL BASED S
   Ehrig H., 1997, FOUNDATIONS, V1
   Feng T.H., 2009, THESIS U CALIFORNIA
   Filippi JB, 2004, ENVIRON MODELL SOFTW, V19, P261, DOI 10.1016/j.envsoft.2003.08.016
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Guerra E, 2004, LECT NOTES COMPUT SC, V3256, P54
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Gyapay S, 2002, LECT NOTES COMPUT SC, V2505, P120
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   HECKEL R, 2004, ELECT NOTES THEORETI, V148, P187
   Heckel Reiko., 2004, ICGT 04 VOLUME 3256, V3256, P243
   Henkler S, 2009, PROC INT CONF SOFTW, P615, DOI 10.1109/ICSE.2009.5070569
   Hunicke Robin, 2005, P ACE 2005, P429, DOI DOI 10.1145/1178477.1178573
   Lee JK, 2004, SIMUL-T SOC MOD SIM, V80, P61, DOI 10.1177/0037549704042860
   Lengyel L, 2005, Eurocon 2005: The International Conference on Computer as a Tool, Vol 1 and 2 , Proceedings, P595
   Lengyel Laszlo., 2006, International Journal of Computer Science, V1, P45
   MathWorks, 2010, SIM US GUID
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Muliawan Olaf., 2005, MODEL DRIVEN TEMPLAT
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Schurr A., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P219
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Syriani E., 2011, THESIS MCGILL U
   Syriani E., 2007, LNCS, V5088, P136
   Syriani E, 2008, LECT NOTES COMPUT SC, V5063, P91, DOI 10.1007/978-3-540-69927-9_7
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Vangheluwe, 2001, MSDLTR200101 MCGILL
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Vizhanyo A, 2004, LECT NOTES COMPUT SC, V3286, P298
   Xie HH, 2008, IEEE ACM DIS SIM, P285, DOI 10.1109/DS-RT.2008.40
   Zaitsev AlekseyV., 2002, HUM PHYSIOL+, V28, P494, DOI 10.1023/A:1016550503294
   ZUNDORF A, 1996, LECT NOTES COMPUTER, V1073, P454
   Zundorf A., 1992, 9238 AACH U TECHN DE, P92
NR 46
TC 16
Z9 17
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 387
EP 414
DI 10.1007/s10270-011-0205-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300011
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
   Orejas, F
AF Guerra, Esther
   de lara, Juan
   Orejas, Fernando
TI Inter-modelling with patterns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Inter-modelling; Model-to-model transformation; Model matching;
   Traceability; Graph transformation; Graph constraints
ID TRIPLE GRAPH-GRAMMARS; TRANSFORMATION; COMPLETENESS; CORRECTNESS; QVT
AB Inter-modelling is the activity of modelling relations between two or more modelling languages. The result of this activity is a model that describes the way in which model instances of these languages can be related. Many tasks in model-driven development can be classified as inter-modelling, for example designing model-to-model transformations, defining model matching and traceability relations, specifying model merging and model weaving, as well as describing mechanisms for inter-model consistency management and model synchronization. This paper presents our approach to inter-modelling in a declarative, relational, visual, and formal style. The approach relies on declarative patterns describing allowed or forbidden relations between two modelling languages. Such specification is then compiled into different operational mechanisms that are tailor-made for concrete inter-modelling scenarios. Up to now, we have used the approach to generate forward and backward transformations from a pattern specification. In this paper we demonstrate that the same specification can be used to derive mechanisms for other inter-modelling tasks, such as model matching and model traceability. In these scenarios the goals are generating the traces between two existing models, checking whether two models are correctly traced, and modifying the traces between two models if they are incorrect.
C1 [Guerra, Esther; de lara, Juan] Univ Autonoma Madrid, Escuela Politecn Super, E-28049 Madrid, Spain.
   [Orejas, Fernando] Univ Politecn Cataluna, Barcelona, Spain.
C3 Autonomous University of Madrid; Universitat Politecnica de Catalunya
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Ciudad Univ Cantoblanco,C Francisco Tomas & Valie, E-28049 Madrid, Spain.
EM Esther.Guerra@uam.es; Juan.deLara@uam.es; orejas@lsi.upc.edu
RI Orejas, Fernando/K-8630-2017; Guerra, Esther/B-4977-2014; de Lara,
   Juan/B-5422-2014
OI Orejas, Fernando/0000-0002-3023-4006; Guerra,
   Esther/0000-0002-2818-2278; de Lara, Juan/0000-0001-9425-6362
FU Spanish Ministry of Science and Innovation [TIN2008-02081,
   TIN2007-66523, JC2009-00015, PR2009-0019, PR2008-0185]; R&D program of
   the Community of Madrid [S2009/TIC-1650]
FX This work has been sponsored by the Spanish Ministry of Science and
   Innovation with projects METEORIC (TIN2008-02081) and FORMALISM
   (TIN2007-66523), and by the R&D program of the Community of Madrid
   (S2009/TIC-1650, project "e-Madrid"). This work was done during the
   research stays of the first two authors at the University of York, with
   financial support from the Spanish Ministry of Science and Innovation
   (grant refs. JC2009-00015, PR2009-0019 and PR2008-0185). We would like
   to thank the referees for their useful and detailed comments, as well as
   the SOSYM group at the University of York for the discussions on this
   topic.
CR Akehurst D., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P243
   Aleksy M., 2008, CEUR, V328
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], 2006, GAMMA 06, DOI DOI 10.1145/1138304.1138307
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Boronat A., 2006, SETRA 06, V3
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cleland-Huang J., 2009, TEFSE 09
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   de Lara J, 2009, LECT NOTES COMPUT SC, V5795, P256, DOI 10.1007/978-3-642-04425-0_19
   de Lara J, 2008, LECT NOTES COMPUT SC, V5214, P426, DOI 10.1007/978-3-540-87405-8_29
   Dehayni M, 2003, LECT NOTES COMPUT SC, V2817, P412
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2009, GT VMT 09, V18
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Ehrig H, 2009, LECT NOTES COMPUT SC, V5795, P241, DOI 10.1007/978-3-642-04425-0_18
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Goedicke M., 1999, LNCS, V1779, P369
   Guerra Esther, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P119, DOI 10.1109/VLHCC.2010.25
   Guerra E., 2010, LNCS, V5765, P178
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Guerra E, 2009, LECT NOTES COMPUT SC, V5563, P83, DOI 10.1007/978-3-642-02408-5_7
   Ivkovic I, 2004, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2004.1357809
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   Mu S.-C., 2006, COMPUTER SOFTWARE, V23, P129, DOI DOI 10.11309/JSSST.23.2_129
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Orejas F, 2009, LECT NOTES COMPUT SC, V5700, P140
   Orejas F, 2009, LECT NOTES COMPUT SC, V5728, P383, DOI 10.1007/978-3-642-03741-2_26
   Rebout M, 2008, LECT NOTES COMPUT SC, V5010, P398, DOI 10.1007/978-3-540-79709-8_39
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stevens P, 2007, LECT NOTES COMPUT SC, V4735, P1
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
NR 45
TC 7
Z9 7
U1 0
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 145
EP 174
DI 10.1007/s10270-011-0192-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800011
DA 2024-07-18
ER

PT J
AU Selic, B
AF Selic, Bran
TI What will it take? A view on adoption of model-based methods in practice
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering
AB Model-based engineering (MBE) has been touted as a new and substantively different approach to software development, characterized by higher levels of abstraction and automation compared to traditional methods. Despite the availability of published verifiable evidence that it can significantly boost both developer productivity and product quality in industrial projects, adoption of this approach has been surprisingly slow. In this article, we review the causes behind this, both technical and non-technical, and outline what needs to happen for MBE to become a reliable mainstream approach to software development.
C1 [Selic, Bran] Malina Software Corp, Nepean, ON, Canada.
EM selic@acm.org
RI Selic, Bran/AAV-7565-2021
OI Selic, Bran/0000-0002-3703-8593
CR [Anonymous], OCC OUTL HDB 2010 20
   [Anonymous], P MOD TRANSF PRACT W
   [Anonymous], SCIENCE
   [Anonymous], 2010, BLOOMBERG
   [Anonymous], 1994, UNDERSTANDING MEDIA
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   BABER RL, 1982, SOFTWARE REFLECTED
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bone M, 2010, P 8 C SYST ENG RES C
   Constantine L, 1995, WHAT DO USERS WANT E
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Erlande-Brandenburg A, 2007, CATHEDRAL BUILDERS M
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Glass RL, 2006, COMMUN ACM, V49, P15, DOI 10.1145/1145287.1145301
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   International Standards Organization, 2007, 247072007 ISOIEC
   Lin C., 2011, FRONTIERS MODEL BASE
   Milner Robin., 1989, INT SERIES COMPUTER
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Neumann PeterG., 1995, COMPUTER RELATED RIS
   Object Management Group, 2011, MET FAC MOF 2 0 QUER
   Oster C, 2011, FRONT MOD BAS SYST E
   Petriu D, 2012, POSTPR MDD4DRES SCH
   Selic B, 2008, PROGRAM CULT MODEL B, V14
   Sokolsky O., 2006, P 20 INT PAR DISTR P
   *STAND GROUP INT, 2009, CHAOS SUMM
   Syriani E., 2010, ELECT COMMUNICATIONS
   The Object Management Group, 2009, COMP SYSML RFI FIN R
   V ITRUVIUS, 1960, The Ten Books on Architecture, trad
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Weigert T, 2006, IEEE INTERNATIONAL CONFERENCE ON SENSOR NETWORKS, UBIQUITOUS, AND TRUSTWORTHY COMPUTING, VOL 1, PROCEEDINGS, P208
NR 35
TC 51
Z9 60
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 513
EP 526
DI 10.1007/s10270-012-0261-0
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500006
DA 2024-07-18
ER

PT J
AU Lucrédio, D
   Fortes, RPD
   Whittle, J
AF Lucredio, Daniel
   Fortes, Renata P. de M.
   Whittle, Jon
TI MOOGLE: a metamodel-based model search engine
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Model search; Model reuse
AB Models are becoming increasingly important in the software development process. As a consequence, the number of models being used is increasing, and so is the need for efficient mechanisms to search them. Various existing search engines could be used for this purpose, but they lack features to properly search models, mainly because they are strongly focused on text-based search. This paper presents Moogle, a model search engine that uses metamodeling information to create richer search indexes and to allow more complex queries to be performed. The paper also presents the results of an evaluation of Moogle, which showed that the metamodel information improves the accuracy of the search.
C1 [Lucredio, Daniel] Univ Fed Sao Carlos, Dept Comp, BR-13565905 Sao Carlos, SP, Brazil.
   [Fortes, Renata P. de M.] Univ Sao Paulo, Inst Math & Comp Sci, BR-13560970 Sao Carlos, SP, Brazil.
   [Whittle, Jon] Univ Lancaster, InfoLab21, Dept Comp, Lancaster LA1 4WA, England.
C3 Universidade Federal de Sao Carlos; Universidade de Sao Paulo; Lancaster
   University
RP Lucrédio, D (corresponding author), Univ Fed Sao Carlos, Dept Comp, Rod Washington Luis,Km 235,Caixa Postal 676, BR-13565905 Sao Carlos, SP, Brazil.
EM daniel@dc.ufscar.br
RI Lucredio, Daniel/AAN-3070-2021; FORTES, RENATA PONTIN DE
   MATTOS/A-3211-2010; Lucredio, Daniel/I-1793-2012
OI Lucredio, Daniel/0000-0002-1360-4036; FORTES, RENATA PONTIN DE
   MATTOS/0000-0001-9994-8923; Lucredio, Daniel/0000-0002-1360-4036
FU Microsoft Research; CAPES [0657/07-7]; CNPq [141975/2008-3]; FAPESP
   [2008/11476-8]; National Institute of Science and Technology for
   Software Engineering (INES); FACEPE [573964/2008-4, APQ-1037-1.03/08];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [08/11476-8] Funding Source: FAPESP
FX This work was developed at the ISE Department of George Mason
   University, USA, University of Sao Paulo, Brazil and Federal University
   of Sao Carlos, Brazil, with partial support from Microsoft Research and
   Brazilian institutions CAPES (process 0657/07-7), CNPq (process
   141975/2008-3), FAPESP (process 2008/11476-8) and the National Institute
   of Science and Technology for Software Engineering (INES,
   http://www.ines.org.br), funded by CNPq and FACEPE, Grants 573964/2008-4
   and APQ-1037-1.03/08.
CR [Anonymous], 100312008 IEEE
   [Anonymous], 2004, Software Factories
   Baeza-Yates R., 1994, LNCS, V807/1994, P198
   De Lucia A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P32, DOI 10.1109/CSMR.2005.7
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P839, DOI 10.1145/1368088.1368216
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Denys P., 2005, 21st IEEE International Conference on Software Maintenance (ICSM), P69
   Eclipse, EMF ECL MOD FRAM
   Eclipse, 2009, ECL MOD PROJ
   Eclipse, GMF GRAPH MOD FRAM
   Eclipse, UML2 ECL
   Frakes W. B., 1994, IEEE T SOFTW ENG, V20
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Garcia V.C., 2006, P INT S COMP BAS SOF
   Gaspari M., 2003, ONTOLOGY GUIDED SEAR
   Gomes P, 2004, AI COMMUN, V17, P13
   Graphviz, GRAPH VIS SOFTW
   Grossman D.A., 2004, INFORM RETRIEVEL ALG
   Gulla JA, 1997, DATA KNOWL ENG, V23, P17, DOI 10.1016/S0169-023X(97)00008-6
   Hellan L., 1994, LECT SERIES INT SUMM
   Henninger S., 1997, ACM Transactions on Software Engineering and Methodology, V6, P111, DOI 10.1145/248233.248242
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Isakowitz T., 1996, IEEE T SOFTW ENG, V22
   Kozlenkov A., 2006, SOSE 2006, P67
   Lucrédio D, 2004, EUROMICRO CONF PROC, P152, DOI 10.1109/EURMIC.2004.1333367
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mascena J.C.C.P., 2006, 5 ACM INT C GEN PROG
   Matheson D., 2004, OOPSLA GPCE WORKSH V
   OMG, 2006, XML MET INT XMI SPEC
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P334
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2006.32
   PRIETODIAZ R, 1991, COMMUN ACM, V34, P88, DOI 10.1145/103167.103176
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Robin J., 2003, SBBD 2003, P157
   Shafi S.M., 2005, WEBOLOGY, V2
   UMLGraph, AUT DRAW UML DIAGR
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vanderbilt University, GME GEN MOD ENV
   Vanderlei T.A., 2006, 20 BRAZ S SOFTW ENG
   W3C, 2007, XQUERY 1 0 XML QUERY
   Whittle J, 2000, INT J HUM-COMPUT ST, V52, P847, DOI 10.1006/ijhc.1999.0356
   Whittle J., 2002, Formal Aspects of Computing, V13, P403, DOI 10.1007/s001650200019
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
NR 46
TC 24
Z9 28
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 183
EP 208
DI 10.1007/s10270-010-0167-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300005
DA 2024-07-18
ER

PT J
AU Sprinkle, J
   Eklund, JM
   Gonzalez, H
   Grotli, EI
   Upcroft, B
   Makarenko, A
   Uther, W
   Moser, M
   Fitch, R
   Durrant-Whyte, H
   Sastry, SS
AF Sprinkle, Jonathan
   Eklund, J. Mikael
   Gonzalez, Humberto
   Grotli, Esten Ingar
   Upcroft, Ben
   Makarenko, Alex
   Uther, Will
   Moser, Michael
   Fitch, Robert
   Durrant-Whyte, Hugh
   Sastry, S. Shankar
TI Model-based design: a report from the trenches of the DARPA Urban
   Challenge
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID SYSTEM-IDENTIFICATION; TIME
AB The impact of model-based design on the software engineering community is impressive, and recent research in model transformations, and elegant behavioral specifications of systems has the potential to revolutionize the way in which systems are designed. Such techniques aim to raise the level of abstraction at which systems are specified, to remove the burden of producing application-specific programs with general-purpose programming. For complex real-time systems, however, the impact of model-driven approaches is not nearly so widespread. In this paper, we present a perspective of model-based design researchers who joined with software experts in robotics to enter the DARPA Urban Challenge, and to what extent model-based design techniques were used. Further, we speculate on why, according to our experience and the testimonies of many teams, the full promises of model-based design were not widely realized for the competition. Finally, we present some thoughts for the future of model-based design in complex systems such as these, and what advancements in modeling are needed to motivate small-scale projects to use model-based design in these domains.
C1 [Sprinkle, Jonathan] Univ Arizona, Tucson, AZ 85721 USA.
   [Eklund, J. Mikael] Univ Ontario, Inst Technol, Fac Engn & Appl Sci, Toronto, ON, Canada.
   [Gonzalez, Humberto] Univ Calif Berkeley, Dept Elect Engn & Comp Sci, Berkeley, CA 94720 USA.
   [Grotli, Esten Ingar] Norwegian Univ Sci & Technol, Dept Engn Cybernet, N-7034 Trondheim, Norway.
   [Upcroft, Ben] Univ Queensland, Brisbane, Qld, Australia.
   [Makarenko, Alex; Fitch, Robert] Univ Sydney, Australian Ctr Field Robot, Sydney, NSW 2006, Australia.
   [Uther, Will] Natl ICT Australia, Sydney, NSW, Australia.
C3 University of Arizona; Ontario Tech University; University of California
   System; University of California Berkeley; Norwegian University of
   Science & Technology (NTNU); University of Queensland; University of
   Sydney; NICTA
RP Sprinkle, J (corresponding author), Univ Arizona, Tucson, AZ 85721 USA.
EM sprinkle@ECE.Arizona.Edu; Mikael.Eklund@uoit.ca;
   hgonzale@EECS.Berkeley.Edu; grotli@itk.ntnu.no; ben.upcroft@uq.edu.au;
   a.makarenko@cas.edu.au; William.Uther@nicta.com.au; m.moser@cas.edu.au;
   r.fitch@cas.edu.au; h.durrant-whyte@cas.edu.au; sastry@EECS.Berkeley.Edu
RI Fitch, Robert/S-1438-2019; Grøtli, Esten Ingar/H-3981-2016
OI Fitch, Robert/0000-0003-2215-5188; Grøtli, Esten
   Ingar/0000-0002-3270-8455; Sprinkle, Jonathan/0000-0003-4176-1212
FU Australian Government; Australian Research Council
FX This work was due to the tremendous effort of the Sydney-Berkeley
   Driving Team, which entered the DARPA Urban Challenge in 2006. Team
   members who performed work tangential to that described in this paper
   include Alen Alempijevic, Ashod Donikian, Todd Templeton, Eric Chang,
   Pannag R. Sanketi, David Johnson, Jan Biermeyer, Vason P. Srini,
   Christopher Brooks, Mark Godwin, and many others who donated their time
   and efforts. The Sydney-Berkeley Driving Team was supported in part by
   Rio Tinto, Komatsu, Chess at UC Berkeley, Toyota, ZeroC, and Advantech.
   Additional in-kind support was provided in the form of discounts on
   equipment from the following manufacturers: SICK, NovAtel, and
   Honeywell. NICTA is funded by the Australian Government as represented
   by the Department of Broadband, Communications and the Digital Economy
   and the Australian Research Council through the ICT Centre of Excellence
   program.
CR [Anonymous], 2000, Progress in Systems and Control Theory
   Basarke C., 2007, Journal of Aerospace Computing, Information, and Communication, V4, P1158, DOI DOI 10.2514/1.33453
   BROOKS C, 2008, UCBEECS200828, V1
   Dubey A, 2007, INNOV SYST SOFTW ENG, V3, P33, DOI 10.1007/s11334-006-0015-7
   Eklund JM, 2007, J PROCESS CONTR, V17, P742, DOI 10.1016/j.jprocont.2007.02.001
   GERKEY B, P 11 INT C ADV ROB I, P317
   HERPIN J, 2007, CAJUNBOT J AEROSP CO, V4, P1134
   Keviczky T, 2006, AUTOMATICA, V42, P2105, DOI 10.1016/j.automatica.2006.07.008
   KORENBERG MJ, 1989, BIOL CYBERN, V60, P267, DOI 10.1007/BF00204124
   Lee EA, 2005, LECT NOTES COMPUT SC, V3414, P25
   Long E, 1998, COMPUTER, V31, P35, DOI 10.1109/2.707615
   NEBOT E, 2005, LECTURE NOTES    MAY
   NEEMA S, 2004, ISIS04505 VAND U I S
   Seetharaman G, 2006, COMPUTER, V39, P26, DOI 10.1109/MC.2006.447
   SHARP D, 1999, P 18 DIG AV SYST C, V2
   SHARP D, 2002, HSCC 02, P1
   SPRINKLE J, 2004, C DEC CONTR
   Sprinkle J, 2005, INNOV SYST SOFTW ENG, V1, P157, DOI 10.1007/s11334-005-0017-x
   Upcroft B., 2007, J AEROSPACE COMPUTIN, V4, P1086
   Waydo S, 2007, IEEE T CONTR SYST T, V15, P680, DOI 10.1109/TCST.2007.899172
NR 20
TC 9
Z9 12
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 551
EP 566
DI 10.1007/s10270-009-0116-5
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Combes, P
   Harel, D
   Kugler, H
AF Combes, Pierre
   Harel, David
   Kugler, Hillel
TI Modeling and verification of a telecommunication application using live
   sequence charts and the Play-Engine tool
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE live sequence charts (LSCs); requirements engineering; verification;
   telecommunication
ID SCENARIO; LSCS
AB We apply the scenario-based approach to modeling, via the language of live sequence charts (LSCs) and the Play-Engine tool to a real-world complex telecommunication service, Depannage. It allows a user to call for help from a doctor, the fire brigade, a car maintenance service, etc. These kinds of services are built on top of an embedded platform, using both new and existing service components, and their complexity stems from their distributed architecture, the various time constraints they entail, and their rapidly evolving underlying systems. A well known problem in this class of telecommunication applications is that of feature interaction, whereby a new feature might cause problems in the execution of existing features. Our approach provides a methodology for high-level modeling of telecommunication applications that can help in detecting feature interaction at early development stages. We exhibit the results of applying the methodology to the specification, animation and formal verification of the Depannage service.
C1 [Combes, Pierre] France Telecom, Res & Dev, Paris, France.
   [Harel, David] Weizmann Inst Sci, IL-76100 Rehovot, Israel.
   [Kugler, Hillel] Microsoft Res, Cambridge, England.
C3 Orange SA; Weizmann Institute of Science; Microsoft
RP Combes, P (corresponding author), France Telecom, Res & Dev, Paris, France.
EM Pierre.Combes@francetelecom.com; dharel@weizmann.ac.il;
   hkugler@microsoft.com
RI Kugler, Hillel/Z-4379-2019
OI Kugler, Hillel/0000-0001-7924-5665
CR AGGOUN I, 1997, OBSERVERS SCE SEE DE
   Alur R, 1996, SOFTWARE-CONC TOOL, V17, P70
   Amyot D, 2003, TELECOMMUN SYST, V24, P61, DOI 10.1023/A:1025890110119
   [Anonymous], 2006, Macromedia Flash
   Bunker A., 2002, P 6 BIENNIAL WORLD C, P1
   Bunker A., 2003, PROPERTY GENERATION
   CASTANET R, 2004, LECT NOTES COMP SCI, V2978, P17
   Clarke EM, 1999, MODEL CHECKING, P1
   Combes P, 2005, LECT NOTES COMPUT SC, V3707, P414
   COMBES P, SUPPLEMENTARY MAT DE
   COMBES P, 2003, LECT NOTES COMP SCI, V2708, P1
   Damm W, 2005, SCI COMPUT PROGRAM, V55, P117, DOI 10.1016/j.scico.2004.05.013
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Damm W, 2007, LECT NOTES COMPUT SC, V4444, P225
   Harel D, 2005, LECT NOTES COMPUT SC, V3466, P26
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D, 2002, LECT NOTES COMPUT SC, V2517, P378
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   HAREL D, 2007, IN PRESS 5 INT WORKS
   Harel D, 2003, LETS PLAY SCENARIO B
   HAREL D, 2002, P 10 IEEE ACM INT S
   HAREL D, 2004, INT C QUAL SOFTW QSI, P2
   HAREL D, 2003, UML REAL DESIGN EMBE
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   KOSKIMIES KM, 1996, A19964 U TAMP
   Kruger I., 1999, Distributed and Parallel Embedded Systems. IFIP WG10.3/WG10.5 International Workshop on Distributed and Parallel Embedded Systems (DIPES'98), P61
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   LEUE S, 1998, 9806 U WAT
   LOGRIPPO L, 2003, FEATURE INTERACTIONS, V7
   MARELLY R, 2002, P 17 ANN ACM C OBJ O, P83
   *OMEGA, CORR DEV REAL TIM EM
   Reiff-Marganiec S., 2005, FEATURE INTERACTIONS, VVIII
   SCHINZ I, 2004, 2 INT C SOFTW ENG FO
   SENGUPTA B, 2002, P 10 ACM SIGSOFT S F, P167
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   *UML, 2007, DOC UN MOD LANG UML
   Wang T, 2004, LECT NOTES COMPUT SC, V3057, P178
   Whittle J, 2003, PROC INT CONF SOFTW, P490, DOI 10.1109/ICSE.2003.1201227
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
NR 40
TC 12
Z9 13
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 157
EP 175
DI 10.1007/s10270-007-0069-5
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298IE
UT WOS:000255680600004
DA 2024-07-18
ER

PT J
AU Elboher, YY
   Cohen, E
   Katz, G
AF Elboher, Yizhak Yisrael
   Cohen, Elazar
   Katz, Guy
TI On applying residual reasoning within neural network verification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Neural networks; Verification; Abstraction refinement; Residual
   reasoning; Incremental reasoning
AB As neural networks are increasingly being integrated into mission-critical systems, it is becoming crucial to ensure that they meet various safety and liveness requirements. Toward, that end, numerous complete and sound verification techniques have been proposed in recent years, but these often suffer from severe scalability issues. One recently proposed approach for improving the scalability of verification techniques is to enhance them with abstraction/refinement capabilities: instead of verifying a complex and large network, abstraction allows the verifier to construct and then verify a much smaller network, and the correctness of the smaller network immediately implies the correctness of the original, larger network. One shortcoming of this scheme is that whenever the smaller network cannot be verified, the verifier must perform a refinement step, in which the size of the network being verified is increased. The verifier then starts verifying the new network from scratch-effectively "forgetting" its earlier work, in which the smaller network was verified. Here, we present an enhancement to abstraction-based neural network verification, which uses residual reasoning: a process where information acquired when verifying an abstract network is utilized in order to facilitate the verification of refined networks. At its core, the method enables the verifier to retain information about parts of the search space in which it was determined that the refined network behaves correctly, allowing the verifier to focus on areas of the search space where bugs might yet be discovered. For evaluation, we implemented our approach as an extension to the Marabou verifier and obtained highly promising results.
C1 [Elboher, Yizhak Yisrael; Cohen, Elazar; Katz, Guy] Hebrew Univ Jerusalem, Jerusalem, Israel.
C3 Hebrew University of Jerusalem
RP Elboher, YY (corresponding author), Hebrew Univ Jerusalem, Jerusalem, Israel.
EM yizhak.elboher@mail.huji.ac.il; elazar.cohen1@mail.huji.ac.il;
   g.katz@mail.huji.ac.il
OI Cohen, Elazar/0000-0002-2788-3574
FU This work was supported by ISF Grant 683/18. We thank Jiaxiang Liu and
   Yunhan Xing for their insightful comments about this work. [683/18]; ISF
   Grant
FX This work was supported by ISF Grant 683/18. We thank Jiaxiang Liu and
   Yunhan Xing for their insightful comments about this work.
CR Amir Guy, 2023, Tools and Algorithms for the Construction and Analysis of Systems: 29th International Conference, TACAS 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2022, Proceedings. Lecture Notes in Computer Science (13993), P607, DOI 10.1007/978-3-031-30823-9_31
   Amir Guy, 2021, 2021 Formal Methods in Computer Aided Design (FMCAD), P193, DOI 10.34727/2021/isbn.978-3-85448-046-4_28
   Amir Guy, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P203, DOI 10.1007/978-3-030-72013-1_11
   Amir G, 2022, Form Comp Aid Design, V3, P27, DOI 10.34727/2022/isbn.978-3-85448-053-2_8
   Angelov P, 2020, NEURAL NETWORKS, V130, P185, DOI 10.1016/j.neunet.2020.07.010
   Ashok P, 2020, LECT NOTES COMPUT SC, V12302, P92, DOI 10.1007/978-3-030-59152-6_5
   Azzopardi S, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P237, DOI 10.5220/0008981902370248
   Bak S, 2021, Arxiv, DOI arXiv:2109.00498
   Bassan Shahaf, 2023, Tools and Algorithms for the Construction and Analysis of Systems: 29th International Conference, TACAS 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2022, Proceedings. Lecture Notes in Computer Science (13993), P187, DOI 10.1007/978-3-031-30823-9_10
   Biere A., 2009, Handbook of Satisfiability
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Bunel R, 2018, Arxiv, DOI arXiv:1711.00455
   Chau C., 2023, Technical Report.
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Cohen E., 2023, P 24 INT C LOG PROGR, P124
   Dantzig G. B, 1963, LINEAR PROGRAMMING E
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dutta S, 2018, LECT NOTES COMPUT SC, V10811, P121, DOI 10.1007/978-3-319-77935-5_9
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   Elboher YY, 2022, LECT NOTES COMPUT SC, V13550, P173, DOI 10.1007/978-3-031-17108-6_11
   Elboher YY, 2020, LECT NOTES COMPUT SC, V12224, P43, DOI 10.1007/978-3-030-53288-8_3
   Eliyahu T, 2021, SIGCOMM '21: PROCEEDINGS OF THE 2021 ACM SIGCOMM 2021 CONFERENCE, P305, DOI 10.1145/3452296.3472936
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Gokulanathan S, 2020, LECT NOTES COMPUT SC, V12229, P85, DOI 10.1007/978-3-030-55754-6_5
   Goldberger B., 2020, EPIC SERIES COMPUTIN, P260
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Haoze Wu, 2020, 2020 Formal Methods in Computer Aided Design (FMCAD), P128, DOI 10.34727/2020/isbn.978-3-85448-042-6_20
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Isac O., 2023, P 34 INT C CONC THER
   Isac O, 2022, Form Comp Aid Design, V3, P38, DOI 10.34727/2022/isbn.978-3-85448-053-2_9
   Jacoby Y, 2020, LECT NOTES COMPUT SC, V12302, P57, DOI 10.1007/978-3-030-59152-6_3
   Julian K. D., 2016, 2016 IEEE AIAA 35 DI, P1, DOI DOI 10.1109/DASC.2016.7778091
   Katz G, 2022, FORM METHOD SYST DES, V60, P87, DOI 10.1007/s10703-021-00363-7
   Katz G, 2019, LECT NOTES COMPUT SC, V11561, P443, DOI 10.1007/978-3-030-25540-4_26
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kazak Y, 2019, NETAI'19: PROCEEDINGS OF THE 2019 ACM SIGCOMM WORKSHOP ON NETWORK MEETS AI & ML, P83, DOI 10.1145/3341216.3342218
   Kim B, 2019, PROC CVPR IEEE, P9004, DOI 10.1109/CVPR.2019.00922
   Lahav Ori, 2021, 2021 Formal Methods in Computer Aided Design (FMCAD), P183, DOI 10.34727/2021/isbn.978-3-85448-046-4_27
   Liu CL, 2020, Arxiv, DOI arXiv:1903.06758
   Müller MN, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3498704
   Narodytska N, 2018, Arxiv, DOI arXiv:1709.06662
   Ostrovsky Matan, 2022, Automated Technology for Verification and Analysis: 20th International Symposium, ATVA 2022, Proceedings. Lecture Notes in Computer Science (13505), P391, DOI 10.1007/978-3-031-19992-9_25
   Prabhakar P, 2020, Arxiv, DOI arXiv:2007.09527
   Refaeli I., 2022, P 5 WORKSH FORM METH
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Song H, 2022, Arxiv, DOI arXiv:2007.08199
   Strong CA, 2023, MACH LEARN, V112, P3685, DOI 10.1007/s10994-021-06050-2
   Tjeng V, 2019, Arxiv, DOI arXiv:1711.07356
   Wang S., 2021, P 35 C NEUR INF PROC
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wu HZ, 2022, LECT NOTES COMPUT SC, V13243, P143, DOI 10.1007/978-3-030-99524-9_8
   Ying X, 2019, J PHYS CONF SER, V1168, DOI 10.1088/1742-6596/1168/2/022022
   Zelazny T., 2022, P 22 INT C FORM METH, P17
   Zhang H, 2018, ADV NEUR IN, V31
   Zhao Z., 2022, P 29 STAT AN S SAS
NR 56
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 NOV 16
PY 2023
DI 10.1007/s10270-023-01138-w
EA NOV 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y0QI2
UT WOS:001102396800001
DA 2024-07-18
ER

PT J
AU Di Lavore, E
   Gianola, A
   Roman, M
   Sabadini, N
   Sobocinski, P
AF Di Lavore, Elena
   Gianola, Alessandro
   Roman, Mario
   Sabadini, Nicoletta
   Sobocinski, Pawel
TI Span(Graph): a canonical feedback algebra of open transition systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID COMPOSITIONAL CONSTRUCTION; TRACES
AB We show that Span(Graph)*, an algebra for open transition systems introduced by Katis, Sabadini and Walters, satisfies a universal property. By itself, this is a justification of the canonicity of this model of concurrency. However, the universal property is itself of interest, being a formal demonstration of the relationship between feedback and state. Indeed, feedback categories, also originally proposed by Katis, Sabadini and Walters, are a weakening of traced monoidal categories, with various applications in computer science. A state bootstrapping technique, which has appeared in several different contexts, yields free such categories. We show that Span(Graph)(*) arises in this way, being the free feedback category over Span(Set). Given that the latter can be seen as an algebra of predicates, the algebra of open transition systems thus arises-roughly speaking-as the result of bootstrapping state to that algebra. Finally, we generalize feedback categories endowing state spaces with extra structure: this extends the framework from mere transition systems to automata with initial and final states.
C1 [Di Lavore, Elena; Roman, Mario; Sobocinski, Pawel] Tallinn Univ Technol, Ehitajate tee 5, EE-12616 Tallinn, Estonia.
   [Gianola, Alessandro] Free Univ Bozen Bolzano, Piazza Domenicani, 3, BZ, I-39100 Bolzano, Bolzano, Italy.
   [Sabadini, Nicoletta] Univ Insubria, Via Ravasi, 2, VA, I-21100 Varese, Italy.
C3 Tallinn University of Technology; Free University of Bozen-Bolzano;
   University of Insubria
RP Di Lavore, E (corresponding author), Tallinn Univ Technol, Ehitajate tee 5, EE-12616 Tallinn, Estonia.
EM elenatalita@gmail.com
OI Gianola, Alessandro/0000-0003-4216-5199; Di Lavore,
   Elena/0000-0002-7783-5079
FU European Union through the ESF [2014-2020.4.05.19-0001]; Estonian
   Research Council [PRG1210]
FX Di Lavore, Roman and Sobocinski were supported by the European Union
   through the ESF funded Estonian IT Academy research measure
   (2014-2020.4.05.19-0001). This work was also supported by the Estonian
   Research Council grant PRG1210.
CR Abramsky S., 2014, ARXIV
   Adámek J, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:4)2006
   Albasini LD, 2011, RAIRO-THEOR INF APPL, V45, P117, DOI 10.1051/ita/2011015
   Albasini LD, 2011, APPL CATEGOR STRUCT, V19, P425, DOI 10.1007/s10485-010-9233-0
   Baez J.C., 2019, ARXIV
   Benabou Ben67 Jean, 1967, Lecture Notes in Mathematics, P1, DOI [10.1007/BFb0074299, DOI 10.1007/BFB0074299]
   Benton N, 2003, RAIRO-THEOR INF APPL, V37, P273, DOI 10.1051/ita:2003020
   Bloom S. L., 1993, Iteration Theories, P159, DOI [DOI 10.1007/978-3-642-78034-9, 10.1007/978-3-642-78034-9_7, DOI 10.1007/978-3-642-78034-9_7]
   Bonchi F, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290338
   Bonchi F, 2017, INFORM COMPUT, V252, P2, DOI 10.1016/j.ic.2016.03.002
   Bruni R, 2011, LECT NOTES COMPUT SC, V6901, P312, DOI 10.1007/978-3-642-23217-6_21
   CARBONI A, 1987, J PURE APPL ALGEBRA, V49, P11, DOI 10.1016/0022-4049(87)90121-6
   Cherubini A., 2004, ELECT NOTES THEOR CO, V104, P81, DOI DOI 10.1016/J.ENTCS.2004.08.020
   Claude ES., 1942, THEORY DESIGN LINEAR
   Clouston R., 2015, LECT NOTES COMPUT SC, V9034
   Dezani-Ciancaglini M, 2010, LECT NOTES COMPUT SC, V6194, P1, DOI 10.1007/978-3-642-14458-5_1
   Di Lavore E, 2021, LECT NOTES COMPUT SC, V13077, P63, DOI 10.1007/978-3-030-90636-8_4
   Di Lavore Elena, 2022, P 37 ANN ACM IEEE S, P14, DOI [10.1145/3531130.3533365, DOI 10.1145/3531130.3533365]
   Eccles W.H., 1918, British Patent, Patent No. 148582
   Elgot C.C., 1975, LOGIC C, V80, P175, DOI [DOI 10.1016/S0049-237X(08)71949-9, DOI 10.1007/978-1-4613-8177-86]
   Fong B., 2019, An invitation to applied category theory-seven sketches in compositionality, P348, DOI DOI 10.1017/9781108668804
   Fong B, 2015, THEOR APPL CATEG, V30, P1096
   Gianola A., 2017, LIPICS, V72
   Gianola A., 2020, IN PRESS
   Gianola A, 2020, FUND INFORM, V171, P221, DOI 10.3233/FI-2020-1880
   Girard Jean-Yves, 1989, Contemporary Mathematics, V92, P69, DOI [DOI 10.1090/CONM/092/1003197, 10.1090/conm/092/1003197]
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Goncharov S, 2018, LECT NOTES COMPUT SC, V10803, P313, DOI 10.1007/978-3-319-89366-2_17
   Hasegawa M, 1997, LECT NOTES COMPUT SC, V1210, P196
   Hasegawa M., 2002, ELECT NOTES THEOR CO, V69, P137, DOI [10.1016/S1571-0661(04)80563-2, DOI 10.1016/S1571-0661(04)80563-2]
   Hoshino N, 2014, IEEE S LOG, DOI 10.1145/2603088.2603124
   Joyal A, 1996, MATH PROC CAMBRIDGE, V119, P447, DOI 10.1017/S0305004100074338
   Kalman RE., 1969, TOPICS MATH SYSTEM T
   Katis P., 1997, Algebraic Methodology and Software Technology. 6th International Conference, AMAST '97. Proceedings, P307, DOI 10.1007/BFb0000479
   Katis P, 2000, LECT NOTES COMPUT SC, V1906, P267
   Katis P, 2002, RAIRO-THEOR INF APPL, V36, P181, DOI 10.1051/ita:2002009
   Katis P, 1997, J PURE APPL ALGEBRA, V115, P141, DOI 10.1016/S0022-4049(96)00012-6
   Katis P., 1999, RENDICONTI SEMINARIO
   Katis P., 2009, ARXIV
   Lack S., 2004, Theory Appl. Categ., V13, P147
   Mac Lane S, 1998, GRAD TEXT M, V5
   MASON SJ, 1953, P IRE, V41, P1144, DOI 10.1109/JRPROC.1953.274449
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Milius S, 2017, FUND INFORM, V150, P407, DOI 10.3233/FI-2017-1475
   PAVLOVIC D, 1995, J PURE APPL ALGEBRA, V99, P9, DOI 10.1016/0022-4049(94)00054-M
   Ponto K, 2014, EXPO MATH, V32, P248, DOI 10.1016/j.exmath.2013.12.003
   Rathke Julian, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P230, DOI 10.1007/978-3-319-11439-2_18
   Roman M., 2022, SPAN GRAPH VIA STATE
   Rosebrugh R., 2005, Theory Appl. Categ., V15, P164
   Sabadini N, 2017, THEOR COMPUT SCI, V664, P144, DOI 10.1016/j.tcs.2016.01.028
   Selinger P, 2011, LECT NOTES PHYS, V813, P289, DOI 10.1007/978-3-642-12821-9_4
   Sobocinski P, 2009, ELECTRON PROC THEOR, P87, DOI 10.4204/EPTCS.12.6
   Sobocinski P, 2010, LECT NOTES COMPUT SC, V6269, P554, DOI 10.1007/978-3-642-15375-4_38
NR 53
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 495
EP 520
DI 10.1007/s10270-023-01092-7
EA MAR 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4J3
UT WOS:000957065300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Snoeck, M
   Verbruggen, C
   De Smedt, J
   De Weerdt, J
AF Snoeck, Monique
   Verbruggen, Charlotte
   De Smedt, Johannes
   De Weerdt, Jochen
TI Supporting data-aware processes with MERODE
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modelling; Process modelling; Data-aware processes;
   Model-driven engineering
AB Most data-aware process modelling approaches have been developed from a process perspective and lack a full-fledged data modelling approach. In addition, the evaluation of data-centric process approaches reveals that, even though their value is acknowledged, their usability is a point of concern. This paper presents a data-aware process modelling approach combining full-fledged domain modelling based on UML class diagrams and state charts with BPMN and DMN. The approach is illustrated by means of an elaborated example with multiple business processes on top of a joint domain model. A proof-of-concept has been implemented using the MERODE code generator, linking the resulting prototype application to a Camunda BPM engine, making use of RESTful web services. The proposed approach is evaluated against 20 requirements for data-aware processes and demonstrates that the majority of these are already satisfied by the out-of-the-box combination of the Camunda BPM engine with the prototype generated from a MERODE domain model.
C1 [Snoeck, Monique] Katholieke Univ Leuven, Res Ctr Management Informat LIRIS, Leuven, Belgium.
   [Verbruggen, Charlotte] Katholieke Univ Leuven, Res Ctr Informat Syst Engn LIRIS, Leuven, Belgium.
   [De Smedt, Johannes] Katholieke Univ Leuven, Fac Econ & Business, Dept Decis Sci & Informat Management, Leuven, Belgium.
   [De Weerdt, Jochen] Katholieke Univ Leuven, Dept Decis Sci & Informat Management, Leuven, Belgium.
C3 KU Leuven; KU Leuven; KU Leuven; KU Leuven
RP Snoeck, M (corresponding author), Katholieke Univ Leuven, Res Ctr Management Informat LIRIS, Leuven, Belgium.
EM monique.snoeck@kuleuven.be; charlotte.verbruggen@kuleuven.be;
   johannes.desmedt@kuleuven.be; jochen.deweerdt@kuleuven.be
RI Snoeck, Monique/H-7771-2018; De Weerdt, Jochen/K-4663-2016; Verbruggen,
   Charlotte/IRZ-3665-2023
OI Snoeck, Monique/0000-0002-3824-3214; De Weerdt,
   Jochen/0000-0001-6151-0504; Verbruggen, Charlotte/0000-0003-0418-2633;
   De Smedt, Johannes/0000-0003-0389-0275
FU Onderzoeksraad, KU Leuven [C14/21/017]
FX The project was funded by Onderzoeksraad, KU Leuven(C14/21/017)
CR [Anonymous], 2005, Ontological foundations for structural conceptual models
   [Anonymous], 2010, The Unified Modeling Language(UML)
   Artale A, 2019, FRONT ARTIF INTEL AP, V316, P257, DOI 10.3233/978-1-61499-955-3-257
   Bernaert M, 2016, INFORM SYST FRONT, V18, P781, DOI 10.1007/s10796-015-9559-0
   Calvanese D, 2020, MATH STRUCT COMP SCI, V30, P271, DOI 10.1017/S0960129520000067
   Calvanese D, 2019, LECT NOTES COMPUT SC, V11483, P328, DOI 10.1007/978-3-030-21290-2_21
   Calvanese Diego., 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management (CIKM'14), p1289s1298, DOI [DOI 10.1145/2661829.2662050, 10.1145/2661829. 2662050]
   Chiao C.M., 2013, CPSM ICSM, P1, DOI [10.1109/BIBE.2013.6701699, DOI 10.1109/BIBE.2013.6701699]
   Chiao CM, 2014, IEEE INT ENTERP, P410, DOI 10.1109/EDOCW.2014.69
   De Backer M, 2009, DATA KNOWL ENG, V68, P531, DOI 10.1016/j.datak.2008.12.002
   De Giacomo G, 2017, LECT NOTES COMPUT SC, V10253, P612, DOI 10.1007/978-3-319-59536-8_38
   de Sousa VA, 2020, LECT NOTES COMPUT SC, V12127, P117, DOI 10.1007/978-3-030-49435-3_8
   Dedene G., 1994, SIGSOFT Software Engineering Notes, V19, P51, DOI 10.1145/182824.182838
   DEDENE G, 1995, DATA KNOWL ENG, V15, P1, DOI 10.1016/0169-023X(94)00031-9
   Dedene G., 1996, TECHNOLOGY OBJECT OR, P1
   Deutsch A, 2014, SIGMOD REC, V43, P5
   Estañol M, 2019, SOFTW SYST MODEL, V18, P2531, DOI 10.1007/s10270-018-0681-6
   Estañol M, 2018, INFORM SOFTWARE TECH, V93, P147, DOI 10.1016/j.infsof.2017.09.003
   Evans E., 2003, Domain-Driven Design
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Giachetti G., 2020, TESCAV APPROACH LEAR
   Giraldo FD, 2018, INFORM SYST, V77, P48, DOI 10.1016/j.is.2018.06.002
   Haarmann S, 2021, J DATA SEMANT, V10, P143, DOI 10.1007/s13740-021-00120-3
   Haddar Nahla, 2017, 2017 18th International Conference on Parallel and Distributed Computing, Applications and Technologies (PDCAT). Proceedings, P429, DOI 10.1109/PDCAT.2017.00075
   Hasic Faruk, 2020, SAC '20: Proceedings of the 35th Annual ACM Symposium on Applied Computing, P53, DOI 10.1145/3341105.3373881
   Hasic F, 2022, IEEE T SERV COMPUT, V15, P904, DOI 10.1109/TSC.2020.2965516
   Hasic F, 2018, DECIS SUPPORT SYST, V107, P1, DOI 10.1016/j.dss.2017.12.008
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoare C.A. R., 2004, COMMUNICATING SEQUEN, Velectronic
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   ISO, ISO/IEC/IEEE 42010:2011
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Kiss PJ, 2019, LECT NOTES COMPUT SC, V11709, P85, DOI 10.1007/978-3-030-27523-5_7
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kunzle V., 2012, PHILHARMONICFLOWS RE
   Kunzle V., 2013, FRAMEWORKS DEVELOPIN, P1, DOI [10.4018/978-1-4666-4161-7.ch001, DOI 10.4018/978-1-4666-4161-7.CH001]
   Mertens S, 2019, LECT NOTES BUS INF P, V349, P201, DOI 10.1007/978-3-030-20948-3_18
   Mohout I., 2020, ENRICHING BUSINESS P
   Moody DL, 2003, METHOD EVALUATION MO, P9
   Neumann CP, 2010, LECT NOTES BUS INF P, V43, P569
   Pastor O., 2007, MODEL DRIVEN ARCHITE, DOI [10.1007/978-3-540-71868-0, DOI 10.1007/978-3-540-71868-0]
   Reijers HA, 2017, SOFTW SYST MODEL, V16, P649, DOI 10.1007/s10270-015-0491-z
   Richards Mark., Software Architecture Patterns by Mark Richards
   Rietzke E., 2019, CEUR WORKSHOP PROC, V2454, P409, DOI [10.1007/978-3-319-77525-8_107, DOI 10.1007/978-3-319-77525-8_107]
   Ruiz J, 2019, SOFTW SYST MODEL, V18, P2753, DOI 10.1007/s10270-018-0698-x
   Ruiz-Cruz Jorge A., 2015, 2015 Asia-Pacific Microwave Conference (APMC). Proceedings, P1, DOI 10.1109/APMC.2015.7413067
   Sánchez-González L, 2017, SOFTW SYST MODEL, V16, P759, DOI 10.1007/s10270-015-0482-0
   Sandkuhl K., 2014, Enterprise Modeling: Tackling Business Challenges within the 4EM Method, DOI [10.1007/978-3-662-43725-4, DOI 10.1007/978-3-662-43725-4]
   Scheynen N., 2016, CONSTRUCTION WEB SER
   Sedrakyan G, 2017, INFORM SOFTWARE TECH, V82, P159, DOI 10.1016/j.infsof.2016.11.001
   Sedrakyan G, 2016, COMPUT HUM BEHAV, V57, P352, DOI 10.1016/j.chb.2015.12.040
   Sedrakyan G, 2015, LECT NOTES COMPUT SC, V9382, P327, DOI 10.1007/978-3-319-25747-1_32
   Sedrakyan G, 2014, COMPUT HUM BEHAV, V41, P486, DOI 10.1016/j.chb.2014.09.054
   Sedrakyan G, 2013, LECT NOTES BUS INF P, V147, P411
   Sedrakyan G, 2014, COMPUT EDUC, V78, P367, DOI 10.1016/j.compedu.2014.06.014
   Snoeck Monique, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P131, DOI 10.1007/978-3-030-79186-5_9
   Snoeck M, 2003, LECT NOTES COMPUT SC, V2814, P105
   Snoeck M, 2004, DATA KNOWL ENG, V51, P81, DOI 10.1016/j.datak.2004.03.007
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Snoeck M, 1998, IEEE T SOFTWARE ENG, V24, P233, DOI 10.1109/32.677182
   Snoeck M, 2007, INFORM EDUC, V6, P231
   Steinau S., 2017, MODELING TOOL PHILHA
   Steinau S, 2019, SOFTW SYST MODEL, V18, P2679, DOI 10.1007/s10270-018-0695-0
   Sun SX, 2006, INFORM SYST RES, V17, P374, DOI 10.1287/isre.1060.0105
   Tamilmani K, 2021, INT J INFORM MANAGE, V57, DOI 10.1016/j.ijinfomgt.2020.102269
   The Open Group, The TOGAF Standard
   The Open Group, ARCH
   Tsoury A, 2020, BUS INFORM SYST ENG+, V62, P41, DOI 10.1007/s12599-019-00611-5
   uni-ulm, PHILHARMONIC FLOWS P
   van der Aalst Wil M. P., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P6, DOI 10.1007/978-3-642-38143-0_2
   van der Linden D, 2019, SOFTW SYST MODEL, V18, P1813, DOI 10.1007/s10270-018-0667-4
   van der Werf Jan Martijn E. M., 2020, Application and Theory of Petri Nets and Concurrency. 41st International Conference, PETRI NETS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12152), P414, DOI 10.1007/978-3-030-51831-8_22
   Verbruggen C, 2023, SOFTW SYST MODEL, V22, P111, DOI 10.1007/s10270-022-01020-1
   Verbruggen C, 2022, LECT NOTES BUS INF P, V450, P321, DOI 10.1007/978-3-031-07475-2_22
   Zachman J., 2003, ZACHMAN FRAMEWORK PR
NR 75
TC 2
Z9 2
U1 2
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1779
EP 1802
DI 10.1007/s10270-023-01095-4
EA MAR 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:000948756900002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Shilov, N
   Othman, W
   Fellmann, M
   Sandkuhl, K
AF Shilov, Nikolay
   Othman, Walaa
   Fellmann, Michael
   Sandkuhl, Kurt
TI Machine learning for enterprise modeling assistance: an investigation of
   the potential and proof of concept
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise modeling; Assisted modeling; Machine learning; Graph neural
   networks
ID AUTOCOMPLETION
AB Though modeling tools are developing fast, today, enterprise modeling is still a highly manual task that requires substantial human effort. Today, human modelers are not only assigned the creative component of the process, but they also need to perform routine work related to comparing the being developed model with existing ones. Larger amount of information available today makes it possible for a modeler to analyze more information and existing models when developing own models. However, it also complicates the process since the modeler is often not able to analyze all of them. In this work, we discuss the potential of the novel idea of using machine learning methods for enterprise modeling assistance that would benefit from their ability to discover tacit knowledge/regularities in the available data. Graph neural networks have been chosen as the main technique. The contribution lies in the proposed modeling assistance scenarios as well as carried out evaluation of the potential benefits for the modeler. The presented illustrative case study scenario is aimed to demonstrate the feasibility of the proposed approach. The viability and potential of the idea are proved via experiments.
C1 [Shilov, Nikolay] RAS, SPC, St Petersbuerg, Russia.
   [Othman, Walaa] ITMO Univ, St Petersbuerg, Russia.
   [Fellmann, Michael; Sandkuhl, Kurt] Univ Rostock, Rostock, Germany.
C3 Russian Academy of Sciences; ITMO University; University of Rostock
RP Shilov, N (corresponding author), RAS, SPC, St Petersbuerg, Russia.
EM nick@iias.spb.su
RI OTHMAN, WALAA/ABG-2366-2021; Shilov, Nikolay/A-7559-2012
OI OTHMAN, WALAA/0000-0002-8581-1333; Fellmann,
   Michael/0000-0003-0593-4956; Shilov, Nikolay/0000-0002-9264-9127
FU Russian Science Foundation;  [22-21-00790]
FX AcknowledgementsThe research is funded by the Russian Science Foundation
   (Project # 22-21-00790).
CR Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Almonte Lissette., 2021, Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering. SLE 2021, P22, DOI DOI 10.1145/3486608.3486905
   [Anonymous], PYTORCH CONTRIBUTORS
   [Anonymous], 2017, Encyclopedia of Machine Learning and Data Mining, DOI DOI 10.1007/978-1-4899-7687-1964
   [Anonymous], 2012, Model-based development and evolution of information systems a quality approach
   Awadid A., 2018, ECIS 2018 P, P146
   Balazevic I, 2019, LECT NOTES COMPUT SC, V11731, P553, DOI 10.1007/978-3-030-30493-5_52
   Berzisa S, 2015, BUS INFORM SYST ENG+, V57, P15, DOI 10.1007/s12599-014-0362-0
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bordes A., 2013, P 26 INT C NEURAL IN, P2787
   Born M, 2009, LECT NOTES BUS INF P, V17, P510
   Borozanov V, 2019, LECT NOTES COMPUT SC, V11483, P563, DOI 10.1007/978-3-030-21290-2_35
   Chen C, 2019, CHEM MATER, V31, P3564, DOI 10.1021/acs.chemmater.9b01294
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Clever N., 2013, ENTERP MODELLING INF, P133
   Defferrard M, 2016, ADV NEUR IN, V29
   Dettmers T, 2018, AAAI CONF ARTIF INTE, P1811
   Dietrich H.-A., 2014, EUR C INF SYST ECIS
   Elkindy A.I.A., 2019, SURVEY BUSINESS PROC
   Fan M., 2014, P 28 PACIFIC ASIA C, P328
   Fayoumi A, 2018, LECT NOTES BUS INF P, V335, P362, DOI 10.1007/978-3-030-02302-7_23
   Fellmann M., 2017, LECT NOTES BUS INF P, V295, P79, DOI [10.1007/978-3-319-64930-6_6, DOI 10.1007/978-3-319-64930-6_6]
   Fellmann M., 2020, EMISA 2019 BONN, P67
   Fellmann M, 2019, BUS PROCESS MANAG J, V25, P972, DOI 10.1108/BPMJ-01-2018-0021
   Fellmann M, 2018, BUS INFORM SYST ENG+, V60, P21, DOI 10.1007/s12599-018-0517-5
   Goldstein M, 2021, LECT NOTES BUS INF P, V427, P20, DOI 10.1007/978-3-030-85440-9_2
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hildebrandt M, 2019, LECT NOTES ARTIF INT, V11053, P271, DOI 10.1007/978-3-030-10997-4_17
   Huber S., 2015, P INT C SUBJECT ORIE, P1
   Jagvaral B, 2020, EXPERT SYST APPL, V142, DOI 10.1016/j.eswa.2019.112960
   Jangda A, 2021, PROCEEDINGS OF THE SIXTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS '21), P311, DOI 10.1145/3447786.3456244
   Khider H, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P65, DOI 10.5220/0009155600650075
   Kingma D. P., 2014, arXiv
   Kipf T. N., 2016, ARXIV161107308, V1050, P21
   Kipf TN, 2017, INT C LEARN REPR
   Kögel S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1026, DOI 10.1145/3106237.3119874
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Krogstie J., 2017, CONCEPTUAL MODELING, P185
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   Li Y, 2014, IEEE T IND INFORM, V10, P502, DOI 10.1109/TII.2013.2258677
   Lin YK, 2015, AAAI CONF ARTIF INTE, P2181
   Martens A., 2015, INT C WIRTSCHAFTSINF
   Mazanek S, 2009, LECT NOTES COMPUT SC, V5795, P322, DOI 10.1007/978-3-642-04425-0_24
   Mehdiyev Nijat, 2020, Business & Information Systems Engineering, V62, P143, DOI 10.1007/s12599-018-0551-3
   Na GS, 2020, PHYS CHEM CHEM PHYS, V22, P18526, DOI 10.1039/d0cp02709j
   Nair A, 2021, SOFTW SYST MODEL, V20, P1159, DOI 10.1007/s10270-020-00841-2
   Nielsen RF, 2020, COMPUT CHEM ENG, V140, DOI 10.1016/j.compchemeng.2020.106916
   Pereira JA, 2017, ACM INT CONF PR SER, P97, DOI 10.1145/3168365.3168373
   Peters N, 2011, ENTERP MODELLING INF, V6, P30
   PyTorch Contributors, 2022, NLLLOSS
   Rasmussen JB, 2020, J UNIVERS COMPUT SCI, V26, P374
   Riss Uwe V., 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P25, DOI 10.1007/978-3-030-63479-7_3
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Sandkuhl K., 2008, IFAC P, V41, P58, DOI [10.3182/20081205-2-CL-4009.00012, DOI 10.3182/20081205-2-CL-4009.00012]
   Sandkuhl K, 2019, SOFTW SYST MODEL, V18, P1833, DOI 10.1007/s10270-018-0692-3
   Sandkuhl K, 2018, BUS INFORM SYST ENG+, V60, P69, DOI 10.1007/s12599-017-0516-y
   Scholta H, 2019, INFORM SYST, V84, P63, DOI 10.1016/j.is.2019.03.001
   Shilov N, 2021, LECT NOTES BUS INF P, V432, P19, DOI 10.1007/978-3-030-91279-6_2
   Smirnov A, 2018, PROC CONF OPEN INNOV, P362, DOI 10.23919/FRUCT.2018.8588080
   Snoeck M., 2019, 12 IFIP WORKING C PR
   Sola D, 2021, LECT NOTES COMPUT SC, V12751, P328, DOI 10.1007/978-3-030-79382-1_20
   Sonntag A., 2016, EUR C INF SYST ECIS
   Tarasov V, 2019, LECT NOTES BUS INF P, V339, P156, DOI 10.1007/978-3-030-04849-5_14
   Ternes B., 2021, EUR C INF SYST ECIS
   Thekumparampil K. K., 2018, Attention-Based Graph Neural Network for SemiSupervised Learning
   Timm F., 2018, 39 INT C INF SYST, P17
   Trouillon T, 2016, PR MACH LEARN RES, V48
   Valera M, 2018, COMPUTAT GEOSCI, V22, P695, DOI 10.1007/s10596-018-9720-1
   van Gils B, 2018, LECT NOTES BUS INF P, V335, P257, DOI 10.1007/978-3-030-02302-7_16
   Vashishth S., 2019, Composition-based multirelational graph convolutional networks
   Velickovic Petar, 2017, ARXIV171010903, DOI DOI 10.48550/ARXIV.1710.10903
   Vernadat F, 2020, COMPUT IND, V122, DOI 10.1016/j.compind.2020.103265
   Wang J., 2019, INT J INTELL INF TEC, V1, P32, DOI [10.1504/IJIITC.2019.104734, DOI 10.1504/IJIITC.2019.10025256]
   Wang MH, 2021, SYMMETRY-BASEL, V13, DOI 10.3390/sym13030485
   Wang Y, 2019, ACM T GRAPHIC, V38, DOI 10.1145/3326362
   Wang Z, 2014, AAAI CONF ARTIF INTE, P1112
   Weske M., 2020, MODEL COLLECTION BUS
   Wieloch K, 2011, LECT NOTES BUS INF P, V97, P30
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu K, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8350934
   Xu KYL, 2018, PR MACH LEARN RES, V80
   Yang B, 2014, P INT C LEARNING REP
   Ying R, 2018, ADV NEUR IN, V31
   Zhang MH, 2018, ADV NEUR IN, V31
   Zhang M, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P575, DOI 10.1145/3097983.3097996
   Zhou J, 2020, AI OPEN, V1, P57, DOI 10.1016/j.aiopen.2021.01.001
NR 86
TC 2
Z9 2
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 619
EP 646
DI 10.1007/s10270-022-01077-y
EA JAN 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4H7
UT WOS:000909032900002
DA 2024-07-18
ER

PT J
AU Grosser, K
   Riediger, V
   Jürjens, J
AF Grosser, Katharina
   Riediger, Volker
   Jurjens, Jan
TI Requirements document relations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirement document relations; Requirement reuse; Standards; Space
   engineering requirements; ECSS; Traceability
ID SECURITY REQUIREMENTS
AB Relations between requirements are part of nearly every requirements engineering approach. Yet, relations of views, such as requirements documents, are scarcely considered. This is remarkable as requirements documents and their structure are a key factor in requirements reuse, which is still challenging. Explicit formalized relations between documents can help to ensure consistency, improve completeness, and facilitate review activities in general. For example, this is relevant in space engineering, where many challenges related to complex document dependencies occur: 1. Several contractors contribute to a project. 2. Requirements from standards have to be applied in several projects. 3. Requirements from previous phases have to be reused. We exploit the concept of "layered traceability", explicitly considering documents as views on sets of individual requirements and specific traceability relations on and between all of these representation layers. Different types of relations and their dependencies are investigated with a special focus on requirement reuse through standards and formalized in an Object-Role Modelling (ORM) conceptual model. Automated analyses of requirement graphs based on this model are able to reveal document inconsistencies. We show examples of such queries in Neo4J/Cypher for the EagleEye case study. This work aims to be a step toward a better support to handle highly complex requirement document dependencies in large projects with a special focus on requirements reuse and to enable automated quality checks on dependent documents to facilitate requirements reviews.
C1 [Grosser, Katharina; Riediger, Volker; Jurjens, Jan] Univ Koblenz Landau, Inst Software Technol IST, Univ Str 1, D-56070 Koblenz, Germany.
   [Jurjens, Jan] Fraunhofer Inst Software & Syst Engn ISST, Dortmund, Germany.
C3 University of Koblenz & Landau; Fraunhofer Gesellschaft
RP Grosser, K (corresponding author), Univ Koblenz Landau, Inst Software Technol IST, Univ Str 1, D-56070 Koblenz, Germany.
EM grosser@uni-koblenz.de; riediger@uni-koblenz.de; juerjens@uni-koblenz.de
OI Riediger, Volker/0000-0003-1461-7442; Grosser,
   Katharina/0000-0003-4532-0270
FU European Space Agency's (ESA) NPI program [4000118174/16/NL/MH/GM]
FX We gratefully acknowledge financial support by European Space Agency's
   (ESA) NPI program under NPI No. 4000118174/16/NL/MH/GM. Furthermore, we
   are thankful for the fruitful collaboration with ECSS and ESA's ESTEC,
   Noordwijk. In particular, the contributions of Serge Valera, Andreas
   Jung, and the whole TEC/SW team. Our best thanks for constructive
   discussions and feedback also to Marsha Chechik, Daniel Struber,
   Veronika Vasileva, and Jakob Gro ss er, as well as the anonymous
   reviewers, who helped to improve the quality of the paper. Modeling of
   ORM performed with NORMA [122] and UML with Astah [123].
CR Abbas M, 2020, PROC INT CONF SOFTW, P190, DOI 10.1145/3377812.3381399
   Ahmadian AS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P989, DOI 10.1145/3106237.3122823
   Alvarez JL, 2016, PROC SPIE, V9911, DOI 10.1117/12.2231373
   [Anonymous], AST PROF
   [Anonymous], 2014, GLOSSARY REQUIREMENT
   [Anonymous], NAT ORM ARCH VIS STU
   [Anonymous], 2017, OMG Unified Modeling Language (OMG UML), Version 2.5.1
   [Anonymous], 2010, 24765 ISOIECIEEE
   [Anonymous], 1996, ARIANE 5, Flight 501 Failure
   [Anonymous], 2018, 291482018E ISOIECIEE
   [Anonymous], 2002, 1 INT WORKSHOP TRACE
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   [Anonymous], 2014, 98348 ISOIEC
   [Anonymous], 2013, Business Process Model and Notation (BPMN), Version 2.0.2
   [Anonymous], 2003, Software requirements
   [Anonymous], 2011, ORM 2 GRAPHICAL NOTA
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Ayuso A, 2004, TOSEMSVSRFSPC0001 SE
   Bartodziej C.J., 2017, CONCEPT IND 40, P27, DOI [DOI 10.1007/978-3-658-16502-43, DOI 10.1007/978-3-658-16502-4_3]
   Bos V., 2013, DATA SYSTEMS AEROSPA, V720, P22
   Bos V, 2016, IEEE INT SYMP SOFTW, P17, DOI 10.1109/ISSREW.2016.49
   Braimniotis M, 2017, THESIS RADBOUD U NIJ
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Castaneda V., 2010, Global Journal of Researches in Engineering, V10, P2
   da Silva L.F., 2006, ELECTR COMMUN, DOI [10.14279/tuj.eceasst.3.39.21, DOI 10.14279/TUJ.ECEASST.3.39.21]
   Darimont R, 1997, PROC INT CONF SOFTW, P612, DOI 10.1145/253228.253499
   Dick J., 2002, P 1 INT WORKSH TRAC, P18
   Ebert J., 1995, GRAPH THEORETIC CONC, P380
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSEST40C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSSST00C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSEST1006C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2007, ECSSE5004A
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2004, ECSSE60AECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSMST0C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST5013CECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2014, ECSSD0001C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST6020C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST6010C
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2012, ECSSSST0001C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2003, ECSSEST40PART1B
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2003, ECSSE7041A
   ECSS Secretariat and ESA-ESTEC Requirements & StandardsDivision, 2005, ECSSEST40PART2B
   Edwards PR, 2019, PROCEEDINGS OF 2019 ESA WORKSHOP ON AEROSPACE EMC (AEROSPACE EMC), DOI 10.23919/aeroemc.2019.8788967
   ESATEC-QR, 2014, ESSBD000, V1st
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   EspinozaLimon A., 2005, ECMDA TRACEABILITYWO
   Favaro J., 2012, 22 ANN INCOSE INT S
   Gärtner S, 2014, INT REQUIR ENG CONF, P103, DOI 10.1109/RE.2014.6912252
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gaspard-Boulinc H, 2017, INT REQUIR ENG CONF, P223, DOI 10.1109/RE.2017.20
   Gervasi V, 2019, 2 WORKSHOP NATURAL L
   Goknil A, 2011, SOFTW SYST MODEL, V10, P31, DOI 10.1007/s10270-009-0142-3
   Goknil Arda, 2008, ECMDA TRAC WORKSH EC, P59
   Goldin L., 2010, Proceedings of the IEEE International Conference on Software, Science, Technology and Engineering (SWSTE 2010), P55, DOI 10.1109/SwSTE.2010.17
   Goodrum M, 2017, INT REQUIR ENG CONF, P90, DOI 10.1109/RE.2017.65
   Gotel O., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P100, DOI 10.1109/ISRE.1995.512550
   Gotel O, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P169, DOI 10.1109/ISRE.1997.566866
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grosser K., REQUIREMENTS DOCUMEN
   Guo J, 2017, EMPIR SOFTW ENG, V22, P1103, DOI 10.1007/s10664-016-9479-8
   Haidrar S, 2017, 2017 INTERNATIONAL CONFERENCE ON WIRELESS TECHNOLOGIES, EMBEDDED AND INTELLIGENT SYSTEMS (WITS)
   Halpin T., 2015, Object-Role Modeling Fundamentals: A Practical Guide to Data Modeling with ORM
   Halpin T.Morgan., 2010, INFORM MODELING RELA, VSecond
   Halpin Terry, 2009, Encyclopedia of Database Systems, P1941
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Joppich R., 2014, REQUIREMENTS ENG MAN, V6th, P215
   Kadhim AI, 2019, ARTIF INTELL REV, V52, P273, DOI 10.1007/s10462-018-09677-1
   Kallio H, 2016, J ADV NURS, V72, P2954, DOI 10.1111/jan.13031
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Leite J. C. S. P., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P108, DOI 10.1109/ISRE.1995.512551
   Leite JCSD, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P44, DOI 10.1007/BF02745371
   Lexico, MEAN DOC ENGL
   Li FL, 2015, LECT NOTES COMPUT SC, V9013, P164, DOI 10.1007/978-3-319-16101-3_11
   Maletic J.I., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'03), P47
   Mavin A, 2017, INT REQUIR ENG CONF, P174, DOI 10.1109/RE.2017.40
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   Naish J., 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P42, DOI 10.1109/RePa.2011.6046721
   Opdenakker R., 2006, FORUM QUAL SOZIALFOR, V7, P11, DOI [10.17169/fqs-7.4.175, DOI 10.17169/FQS-7.4.175]
   Owen A., 2017, THESIS U KOBLENZ LAN
   Pace F., 2010, ATBRACD8D ESAESTEC
   Pace F., 2010, ATBRACD8 ESAESTEC
   Pace F., 2009, ATBRACD5 ESAESTEC
   Palm S.U, 2013, TERATBCTSICD004
   Palm S.U, 2014, TERATBCTSREQ001
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Pinheiro FAC, 2004, SPRING INT SER ENG C, V753, P91
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rath Michael., 2017, REFSQ Workshops
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Renault S., 2009, INT J COMPUT SCI APP, V6, P175
   RequirementsWorking Group, 2019, INCOSETP201000603 RE
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rupp C., 2014, REQUIREMENTS ENG MAN, V6th, P123
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Samer R, 2019, PROC INT C TOOLS ART, P1265, DOI 10.1109/ICTAI.2019.00-91
   SAVOIR, 2016, SAVOIRTN000 ESA ESTE
   Schneider K, 2012, REQUIR ENG, V17, P35, DOI 10.1007/s00766-011-0141-0
   Schwarz H, 2010, IEEE INT C ENG COMP, P183, DOI [10.1109/ICECCS.2010.27, 10.1109/ICECCS.2010.66]
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Siegemund K., 2011, WORKSHOP SEMANTICWEB
   Siena Alberto, 2008, 2008 Requirements Engineering and Law. RELAW'08, P6, DOI 10.1109/RELAW.2008.6
   Siena A., 2009, 2009 2 INT WORKSHOP, P45
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Srungavruksham D.T., 2017, EERTBSSFSRS005
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tekinerdogan B., 2017, Proceedings of the Symposium on Applied Computing, P1799
   Valera S, 2018, ESATECSWMSOW009970 E
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang WT, 2022, IEEE T SOFTWARE ENG, V48, P1665, DOI 10.1109/TSE.2020.3030745
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Zeni N, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P65, DOI 10.1109/RELAW.2013.6671349
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 123
TC 3
Z9 3
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2133
EP 2169
DI 10.1007/s10270-021-00958-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000882008300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mohammed, MA
   Alshayeb, M
   Hassine, J
AF Mohammed, Mawal A.
   Alshayeb, Mohammad
   Hassine, Jameleddine
TI A search-based approach for detecting circular dependency bad smell in
   goal-oriented models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Circular dependency; Model-driven engineering; Requirements; Simulated
   annealing; GRL
ID CODE-SMELLS; REQUIREMENTS; SOFTWARE; OPTIMIZATION; IMPACT
AB Goal-oriented models are gaining significant attention from researchers and practitioners in various domains, especially in software requirements engineering. Similar to other software engineering models, goal models are subject to bad practices (i.e., bad smells). Detecting and rectifying these bad smells would improve the quality of these models. In this paper, we formally define the circular dependency bad smell and then develop an approach based on the simulated annealing (SA) search-based algorithm to detect its instances. Furthermore, we propose two mechanisms (namely, pruning and pairing) to improve the effectiveness of the proposed approach. We empirically evaluate three algorithm combinations, i.e., (1) the base SA search algorithm, (2) the base SA search algorithm augmented with pruning mechanism, and (3) the base SA search algorithm augmented with pruning and pairing mechanisms, using several case studies. Results show that simulated annealing augmented with pruning and pairing is the most effective approach, while the simulated annealing augmented with pruning mechanism is more effective than the base SA search algorithm. We also found that the proposed pruning and pairing mechanisms provide a significant improvement in the detection of circular dependency bad smell, in terms of computation time and accuracy.
C1 [Mohammed, Mawal A.; Alshayeb, Mohammad; Hassine, Jameleddine] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM g201102570@kfupm.edu.sa; alshayeb@kfupm.edu.sa; jhassine@kfupm.edu.sa
RI Mohammed, Mawal/IAO-6654-2023; Hassine, Jameleddine/E-5940-2015;
   Alshayeb, Mohammad/B-5941-2015
OI Moahmmed, Mawal/0000-0003-4419-1454; Alshayeb,
   Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum and Minerals
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals in the development of this work.
CR Abdel-Basset M., 2018, Computational Intelligence for Multimedia Big Data on the Cloud with Engineering Applications, P185, DOI [10.1016/b978-0-12-813314-9.00010-4, 10.1016/B978-0-12-813314-9.00010-4, DOI 10.1016/B978-0-12-813314]
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Almhana R, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-020-00279-2
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Amyot D., 2011, iStar, V766, P160
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arendt Thorsten., 2010, UML MODEL SMELLS MOD
   Asano K, 2017, LECT NOTES COMPUT SC, V10651, P122, DOI 10.1007/978-3-319-70625-2_12
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Bitonti T.F., 2009, GOOGLE PATENTS
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Chen ZF, 2018, INFORM SOFTWARE TECH, V94, P14, DOI 10.1016/j.infsof.2017.09.011
   Chung L., 2012, MYLOPOULOS NONFUNCTI
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Czibula G, 2015, KNOWL INF SYST, V42, P545, DOI 10.1007/s10115-013-0721-z
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Di-Jorio L, 2009, LECT NOTES COMPUT SC, V5772, P297, DOI 10.1007/978-3-642-03915-7_26
   Duran MB, 2016, INFORM SYST FRONT, V18, P855, DOI 10.1007/s10796-016-9657-7
   Duran MB, 2015, LECT NOTES COMPUT SC, V9369, P141, DOI 10.1007/978-3-319-24912-4_11
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hassine J., 2014, CEUR WORKSHOP PROC, V1157
   Horkoff J., 2009, CAISE FORUM
   Horkoff J, 2016, INT REQUIR ENG CONF, P106, DOI 10.1109/RE.2016.41
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   ITU-T, 2018, 151 USER REQUIREMENT
   Jiang DX, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P299, DOI 10.1109/IMCCC.2012.74
   Johnson D. B., 1975, SIAM Journal on Computing, V4, P77, DOI 10.1137/0204007
   Jureta, 2007, P ER 2007, V28, P139
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Kessentini M, 2011, EUR CON SFTWR MTNCE, P241, DOI 10.1109/CSMR.2011.30
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Knauss E, 2009, LECT NOTES BUS INF P, V32, P28
   Lapouchnian A., 2005, GOAL ORIENTED REQUIR, V32
   Lee KS, 2005, COMPUT METHOD APPL M, V194, P3902, DOI 10.1016/j.cma.2004.09.007
   Lee SJ, 2016, EXPERT SYST APPL, V45, P185, DOI 10.1016/j.eswa.2015.09.023
   Lima Paulo, 2016, CLEIej, V19, P7
   Luke S., 2013, Essentials of Metaheuristics
   Maddeh M, 2015, IFIP ADV INF COMM TE, V456, P574, DOI 10.1007/978-3-319-19578-0_47
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mussbacher G., 2011, Proceedings of 5th International i* Workshop (iStar 2011), V766, P2
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   Omer A. M., 2011, Proceedings of the 2011 IEEE 14th International Conference on Computational Science and Engineering (CSE 2011). 11th International Symposium on Pervasive Systems, Algorithms, Networks (I-SPAN 2011). 10th IEEE International Conference on Ubiquitous Computing and Communications (IUCC 2011), P44, DOI 10.1109/CSE.2011.22
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Rayasam, 2016, TRANSFORMATIONAL CRE
   Santander VFA, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P32, DOI 10.1109/ICRE.2002.1048503
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   SINGH S, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020994
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tinnes C, 2019, 2019 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SOFTWARE AND SYSTEMS TRACEABILITY (SST 2019), P13, DOI 10.1109/SST.2019.00013
   van Lamsweerde A, 2004, LECT NOTES COMPUT SC, V2941, P325
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Velioglu S, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P271, DOI 10.1109/SERA.2017.7965737
   Yan J. B., 2008, Static Semantics Checking Tool for jUCMNav
   Yu, 2011, STRENGTHS WEAKNESSES
   Yu, 2011, MODELLING STRATEGIC, V2011
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhong E., 2007, GOOGLE PATENTS
NR 77
TC 4
Z9 4
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 2007
EP 2037
DI 10.1007/s10270-021-00965-z
EA JAN 2022
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000741253000004
DA 2024-07-18
ER

PT J
AU López, JAH
   Cuadrado, JS
AF Hernandez Lopez, Jose Antonio
   Sanchez Cuadrado, Jesus
TI An efficient and scalable search engine for models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model repositories; Search engines; Model-driven engineering
ID CLONE DETECTION; ACCURATE; MOOGLE
AB Search engines extract data from relevant sources and make them available to users via queries. A search engine typically crawls the web to gather data, analyses and indexes it and provides some query mechanism to obtain ranked results. There exist search engines for websites, images, code, etc., but the specific properties required to build a search engine for models have not been explored much. In the previous work, we presented MAR, a search engine for models which has been designed to support a query-by-example mechanism with fast response times and improved precision over simple text search engines. The goal of MAR is to assist developers in the task of finding relevant models. In this paper, we report new developments of MAR which are aimed at making it a useful and stable resource for the community. We present the crawling and analysis architecture with which we have processed about 600,000 models. The indexing process is now incremental and a new index for keyword-based search has been added. We have also added a web user interface intended to facilitate writing queries and exploring the results. Finally, we have evaluated the indexing times, the response time and search precision using different configurations. MAR has currently indexed over 500,000 valid models of different kinds, including Ecore meta-models, BPMN diagrams, UML models and Petri nets. MAR is available at http://mar-search.org.
C1 [Hernandez Lopez, Jose Antonio; Sanchez Cuadrado, Jesus] Univ Murcia, Fac Informat, Murcia, Spain.
C3 University of Murcia
RP López, JAH (corresponding author), Univ Murcia, Fac Informat, Murcia, Spain.
EM joseantonio.hernandez6@um.es; jesusc@um.es
RI Hernández López, José Antonio/AGQ-7597-2022
OI Hernandez Lopez, Jose Antonio/0000-0003-2439-2136
FU CRUE-CSIC agreement; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature.
CR Alalfi MH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P295, DOI 10.1109/ICSM.2012.6405285
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   ARASU A., 2001, ACM Trans. Internet Technol, V1, P2, DOI DOI 10.1145/383034.383035
   Babur O., 2018, P MODELS 2018 WORKSH, P787
   Babur Ö, 2019, J COMPUT LANG, V51, P57, DOI 10.1016/j.cola.2018.12.002
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Barmpis Konstantinos., 2013, P 1 WORKSHOP SCALABI, P1
   Basciani F., 2018, MODELS WORKSHOPS CEU, V2245, P793
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bislimovska B, 2014, ACM T WEB, V8, DOI 10.1145/2579991
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burges Chris, 2005, P 22 INT C MACH LEAR, P89, DOI DOI 10.1145/1102351.1102363
   Cao B, 2017, IEEE T SERV COMPUT, V10, P121, DOI 10.1109/TSC.2016.2597143
   Chang F, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1365815.1365816
   Chowdhury SA, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P45, DOI 10.1145/3196478.3196484
   Clarete RL, 2018, PHILIPPINE ECONOMY: NO LONGER THE EAST ASIAN EXCEPTION?, P1
   Deissenboeck F., 2010, P 4 INT WORKSH SOFTW, P57, DOI [10.1145/1808901.1808909, DOI 10.1145/1808901.1808909]
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Di Rocco J, 2020, SOFTW SYST MODEL, V19, P401, DOI 10.1007/s10270-019-00748-7
   Di Rocco J, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P54, DOI 10.1109/MiSE.2015.17
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   George L., 2011, HBASE DEFINITIVE GUI
   Gomes P, 2004, AI COMMUN, V17, P13
   He C, 2008, PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1734, DOI 10.1109/ICMLC.2008.4620685
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Kalnina E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P236, DOI 10.1109/MODELS-C.2019.00038
   Karasneh B, 2015, ASIA PAC SOFWR ENG, P261, DOI 10.1109/APSEC.2015.59
   Karasneh Bilal, 2013, EESSMOD MODELS, P61
   Kessentini M, 2014, J SYST SOFTWARE, V97, P1, DOI 10.1016/j.jss.2014.06.040
   Kling Wolfgang, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P180, DOI 10.1007/978-3-642-28830-2_10
   Kolovos D., 2020, P 23 INT C MOD DRIV, P12, DOI [10.1145/3365438.3410943, DOI 10.1145/3365438.3410943]
   L??pez-Fern?ndez JJ., 2014, MODEVVA MODELS, P3
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   Nguyen PT, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110860
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Nikolentzos G., 2019, ARXIV PREPRINT ARXIV
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Rezaei S., 2020, P 23 INT C MOD DRIV, P1, DOI DOI 10.1145/3417990.3422006
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Sanchez BA, 2018, IEEE WORK CONF MIN S, P537, DOI 10.1145/3196398.3196405
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Storrle Harald, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P440
   Störrle H, 2013, SOFTW SYST MODEL, V12, P307, DOI 10.1007/s10270-011-0217-9
   Strüber D, 2019, SOFTW SYST MODEL, V18, P995, DOI 10.1007/s10270-017-0625-6
   Yan ZQ, 2012, DISTRIB PARALLEL DAT, V30, P105, DOI 10.1007/s10619-012-7089-z
   Zaharia M, 2016, COMMUN ACM, V59, P56, DOI 10.1145/2934664
   Zhai C., 2016, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining
NR 54
TC 5
Z9 6
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1715
EP 1737
DI 10.1007/s10270-021-00960-4
EA DEC 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000734700900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Rooein, D
   Bianchini, D
   Leotta, F
   Mecella, M
   Paolini, P
   Pernici, B
AF Rooein, Donya
   Bianchini, Devis
   Leotta, Francesco
   Mecella, Massimo
   Paolini, Paolo
   Pernici, Barbara
TI aCHAT-WF: Generating conversational agents for teaching business process
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Chatbot; Business process; BPMN; Digital transformation; Configuration
   driven; Educational conversational agent
AB This paper proposes a general approach for using conversational interfaces such as chatbots to offer adaptive learning of business processes in an environment involving different actors. Adaptivity concerns both the content being proposed, the sequence of learning items, and the way the conversation is conducted. The original approach allows the development of sustainable chatbots and empowers various non-technical actors (authors, teachers, publishers, and learners) to control the chatbot features directly. The aCHAT-WF framework (adaptive CHATbot for WorkFlows), proposed in this paper for managing conversational interfaces, conceptually represents all the aspects related to a conversation about business processes, with different facets for the user, the conversation flow, and the conversation contents, combining them to obtain a flexible interaction with the user. The paper focuses on the different preparation phases for instructional material based on Business Process Modeling Notation (BPMN) models, separating the different roles involved in the construction of a chatbot for teaching business processes and with the possibility of defining different styles for the interaction with the users. The proposed method is configuration-driven, to facilitate the separation of the different aspects of the control of the interaction and the delivery of contents.
C1 [Rooein, Donya] Politecn Milan, Informat Technol Engn, Milan, Italy.
   [Paolini, Paolo] Politecn Milan, HOCLAB, Milan, Italy.
   [Pernici, Barbara] Politecn Milan, Comp Engn, Milan, Italy.
   [Bianchini, Devis] Univ Brescia, Dept Informat Engn, Brescia, Italy.
   [Leotta, Francesco] Sapienza Univ Roma, Dept Comp Control & Management Engn, Rome, Italy.
   [Mecella, Massimo] Sapienza Univ Roma, Rome, Italy.
C3 Polytechnic University of Milan; Polytechnic University of Milan;
   Polytechnic University of Milan; University of Brescia; Sapienza
   University Rome; Sapienza University Rome
RP Rooein, D (corresponding author), Politecn Milan, Informat Technol Engn, Milan, Italy.
EM donya.rooein@polimi.it; devis.bianchini@unibs.it;
   leotta@diag.uniroma1.it; Mecella@diag.uniroma1.it;
   paolo.paolini@polimi.it; barbara.pernici@polimi.it
RI Mecella, Massimo/N-8699-2019; Leotta, Francesco/AAT-2480-2020; Pernici,
   Barbara/C-1035-2016
OI Mecella, Massimo/0000-0002-9730-8882; Leotta,
   Francesco/0000-0001-9216-8502; Pernici, Barbara/0000-0002-2034-9774;
   Rooein, Donya/0000-0002-0368-3084
FU EIT Digital; EU H2020-RISE project FIRST; Smart4CPPS Lombardy Region
   project; EU H2020-WIDESPREAD project DESTINI; IBM
FX The work of Donya Rooein has been supported by EIT Digital and IBM. The
   work of Francesco Leotta and Massimo Mecella has been supported by the
   EU H2020-RISE project FIRST and the EU H2020-WIDESPREAD project DESTINI.
   The work of Devis Bianchini has been supported by Smart4CPPS Lombardy
   Region project. This work expresses the opinions of the authors and not
   necessarily those of the funding agencies and companies.
CR Al-Zubaide H., 2011, 2011 Fourth International Symposium on Innovation in Information & Communication Technology (ISIICT), P7, DOI 10.1109/ISIICT.2011.6149594
   Bicocchi N, 2019, J IND INF INTEGR, V15, P111, DOI 10.1016/j.jii.2019.02.001
   Burattin A :., 2019, 17 INT C BUSINESS PR, P144
   Casola S., 2018, SOC INF TECHN TEACH, P110
   Catarci, 2017, INT C WEB ENG, P156
   Catarci T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P229, DOI 10.1109/ICWS.2019.00047
   Chandar P, 2017, LECT NOTES COMPUT SC, V10514, P381, DOI 10.1007/978-3-319-67684-5_23
   Dabbous A, 2019, IADIS INT J WWW INTE, V17
   Di Blas N, 2012, INT J ARTS TECHNOL, V5, P271
   Doan A, 2018, HILDA'18: PROCEEDINGS OF THE WORKSHOP ON HUMAN-IN-THE-LOOP DATA ANALYTICS, DOI 10.1145/3209900.3209913
   Frank AG, 2019, TECHNOL FORECAST SOC, V141, P341, DOI 10.1016/j.techfore.2019.01.014
   Heilman M., 2009, Question generation via overgenerating transformations and ranking
   Hermann M, 2016, P ANN HICSS, P3928, DOI 10.1109/HICSS.2016.488
   Holotescu C., 2016, RoCHI, V8, P91
   Ilievski V., 2018, IJCAI 18
   Kalia A. K., 2017, INT C SERVICE ORIENT, P53
   Lohse M, 2020, UK ROB AUT SYST C UK
   López A, 2019, LECT NOTES COMPUT SC, V11483, P383, DOI 10.1007/978-3-030-21290-2_24
   Mantravadi S, 2020, LECT NOTES ARTIF INT, V12034, P189, DOI 10.1007/978-3-030-42058-1_16
   McTear Michael, 2018, Studientexte zur Sprachkommunikation: Elektronische Sprachsignalverarbeitung 2018, P175
   Moore RJ, 2018, HUM-COMPUT INT-SPRIN, P181, DOI 10.1007/978-3-319-95579-7_9
   Moormann J, 2012, KNOWL MANAG E-LEARN, V4, P390
   Paek T, 2008, SPEECH COMMUN, V50, P716, DOI 10.1016/j.specom.2008.03.010
   Pichponreay L, 2016, INT CONF UBIQ FUTUR, P1002, DOI 10.1109/ICUFN.2016.7536948
   Polyvyanyy A., 2015, Handbook on Business Process Management, V1, P147, DOI DOI 10.1007/978-3-642-45100-37
   Rabelo RJ, 2018, IFIP ADV INF COMM TE, V536, P456, DOI 10.1007/978-3-319-99707-0_57
   Rahman AM, 2017, IEEE REG 10 HUMANIT, P75, DOI 10.1109/R10-HTC.2017.8288910
   Romero D., 2016, CO 2016 46 INT C COM, P1
   Rooein Donya, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P70, DOI 10.1007/978-3-030-49418-6_5
   Tegos S., 2019, INT WORKSH CHATB RES, P245
   Visnjic I, 2019, J PROD INNOVAT MANAG, V36, P381, DOI 10.1111/jpim.12483
NR 31
TC 9
Z9 9
U1 7
U2 24
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 891
EP 914
DI 10.1007/s10270-021-00925-7
EA OCT 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000704965600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Somogyi, FA
   Mezei, G
   Theisz, Z
   Bácsi, S
   Palatinszky, D
AF Somogyi, Ferenc A.
   Mezei, Gergely
   Theisz, Zoltan
   Bacsi, Sandor
   Palatinszky, Daniel
TI Playground for multi-level modeling constructs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level modeling; Potency notion; Clabject; Level-blind; Scientific
   experimentation; Modular playground
ID LANGUAGE
AB In recent years, multi-level modeling has become more and more popular. It is mainly due to the fact that multi-level modeling aims to reduce or even totally eliminate any accidental complexity inadvertently created as by-product in traditional model design. Moreover, besides reducing model complexity, multi-level modeling also improves on general comprehension of models. The key enablers of multi-level modeling are the concepts of clabjects and deep instantiation. The latter is often governed by the potency notion, of which many different interpretations and variations emerged over the years. However, there exist also some approaches that disregard the potency notion. Thus, multi-level modeling approaches tend to take advantage of different theoretical and practical backgrounds. In this paper, we propose a unifying framework, the Multi-Level Modeling Playground (MLMP), which is a validating modeling environment for multi-level modeling research. The MLMP environment is based on our multi-layer modeling framework (the Dynamic Multi-Layer Algebra), which provides useful mechanisms to validate different multi-level modeling constructs. Since beyond the structure also the well-formedness rules of the modeling constructs can be specified, our proposed MLMP environment delivers several practical benefits: i) well-formedness is always verified, ii) multi-level constructs can be experimented with independently of any concrete tool chains, and iii) relationships (i.e., correlations or exclusions) between different multi-level constructs can be easily investigated in practice. Also, the capability of the environment is demonstrated via complete examples inspired by state-of-the-art research literature.
C1 [Somogyi, Ferenc A.; Mezei, Gergely; Theisz, Zoltan; Bacsi, Sandor; Palatinszky, Daniel] Budapest Univ Technol & Econ, Muegyet Rkp 3, H-1111 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Mezei, G (corresponding author), Budapest Univ Technol & Econ, Muegyet Rkp 3, H-1111 Budapest, Hungary.
EM somogyi.ferenc@aut.bme.hu; gergely.mezei@aut.bme.hu;
   zoltan.theisz@aut.bme.hu; sandor.bacsi@aut.bme.hu;
   daniel.palatinszky@aut.bme.hu
OI Mezei, Gergely/0000-0001-9464-7128; Somogyi, Ferenc
   A./0000-0001-5491-4412
FU Budapest University of Technology and Economics
FX Open access funding provided by Budapest University of Technology and
   Economics.
CR [Anonymous], 2016, P 3 INT WORKSH MULTI
   [Anonymous], 2018, BICYCLECHALLENGE
   [Anonymous], 2017, P MOD 2017 SAT RV WO
   [Anonymous], 2015, P 2 INT WORKSH MULT
   [Anonymous], 2019, PROCESSCHALLENGE
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P216, DOI 10.1109/MODELS.2015.7338252
   Atkinson C, 2012, PROC INT CONF SOFTW, P1269, DOI 10.1109/ICSE.2012.6227102
   Atkinson Colin, 2014, CEUR Workshop Proceedings, V1286
   Atkinson Colin, 2016, MODELLIERUNG 2016 WO, V255, P117
   Barr M., 1990, Category Theory for Computing Science
   Borger E., 2003, ABSTRACT STATE MACHI, DOI [10.1007/978-3-642-18216-7, DOI 10.1007/978-3-642-18216-7]
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Clark T., 2015, APPL METAMODELLING F
   Clark T., 2018, CEUR WORKSHOP P, V2245, P103
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Ellison AM, 2010, ECOLOGY, V91, P2536, DOI 10.1890/09-0032.1
   Fonseca CM, 2018, LECT NOTES COMPUT SC, V11157, P409, DOI 10.1007/978-3-030-00847-5_29
   Frank U., 2018, P 5 INT WORKSH MULT, P718
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Gay Gregory., 2009, PROMISE 09, P1, DOI DOI 10.1145/1540438.1540460
   Gerbig Ralph, 2011, Master's thesis
   Gutheil M, 2008, LECT NOTES COMPUT SC, V5301, P843, DOI 10.1007/978-3-540-87875-9_58
   Igamberdiev M, 2018, SOFTW SYST MODEL, V17, P269, DOI 10.1007/s10270-016-0520-6
   Jácome-Guerrero SP, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103390
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Kuhne T., 2000, INT WORKSH MOD ENG 1, P1
   Kühne T, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P2, DOI 10.1145/3239372.3239411
   Lamo Y, 2013, P EST ACAD SCI, V62, P3, DOI 10.3176/proc.2013.1.02
   Lange A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P113, DOI 10.1109/MODELS-C.2019.00021
   Langer P, 2012, ECLIPSECON 2012 MOD
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.1.a8
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   Mezei G., 2018, MODELS WORKSH, P643
   Mezei G, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P481, DOI 10.5220/0007580404810488
   Mezei G, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P455, DOI 10.1109/MODELS-C.2019.00073
   Mezei Gergely, 2019, P AUT APPL COMP SCI, P28
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   OMG, 2005, METAOBJECT FACI
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Prinz A, 2019, REVISED SELECTED PAP, V2019, P182, DOI DOI 10.1007/978-3-030-37873-8_8
   Rivieres, 1991, ART METAOBJECT PROTO, DOI [10.7551/mitpress/1405.001.0001, DOI 10.7551/MITPRESS/1405.001.0001]
   Rossini Alessandro, 2012, Applications of Graph Transformations with Industrial Relevance. 4th International Symposium, AGTIVE 2011. Revised Selected and Invited Papers, P19, DOI 10.1007/978-3-642-34176-2_4
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Cuadrado JS, 2018, J SYST SOFTWARE, V145, P1, DOI 10.1016/j.jss.2018.07.023
   Selway M, 2017, DATA KNOWL ENG, V109, P85, DOI 10.1016/j.datak.2017.03.006
   Simons DJ, 2014, PERSPECT PSYCHOL SCI, V9, P76, DOI 10.1177/1745691613514755
   Somogyi FA, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P393, DOI 10.5220/0008973503930400
   Somogyi FA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P119, DOI 10.1109/MODELS-C.2019.00022
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Theisz Z, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P134, DOI 10.1109/MODELS-C.2019.00024
   Theisz Z, 2017, COMM COM INF SC, V756, P292, DOI 10.1007/978-3-319-67642-5_24
   Urban D., 2017, Periodica Polytechnica Electrical Engineering and Computer Science, V61, P34
   Urbán D, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P519, DOI 10.5220/0006656105190527
   Van Mierlo S., 2014, International Conference on Model Driven Engineering Languages and Systems, P83
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 65
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 481
EP 516
DI 10.1007/s10270-021-00900-2
EA AUG 2021
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000683257900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Bork, D
   Roelens, B
AF Bork, Dominik
   Roelens, Ben
TI A technique for evaluating and improving the semantic transparency of
   modeling language notations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling language; Notation; Concrete syntax; Semantic transparency;
   Empirical evaluation
ID COGNITIVE EFFECTIVENESS; BUSINESS ARCHITECTURE; DESIGN; QUALITY; STATE
AB The notation of a modeling language is of paramount importance for its efficient use and the correct comprehension of created models. A graphical notation, especially for domain-specific modeling languages, should therefore be aligned to the knowledge, beliefs, and expectations of the targeted model users. One quality attributed to notations is their semantic transparency, indicating the extent to which a notation intuitively suggests its meaning to untrained users. Method engineers should thus aim at semantic transparency for realizing intuitively understandable notations. However, notation design is often treated poorly-if at all-in method engineering methodologies. This paper proposes a technique that, based on iterative evaluation and improvement tasks, steers the notation toward semantic transparency. The approach can be efficiently applied to arbitrary modeling languages and allows easy integration into existing modeling language engineering methodologies. We show the feasibility of the technique by reporting on two cycles of Action Design Research including the evaluation and improvement of the semantic transparency of the Process-Goal Alignment modeling language notation. An empirical evaluation comparing the new notation against the initial one shows the effectiveness of the technique.
C1 [Bork, Dominik] TU Wien, Business Informat Grp, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Roelens, Ben] Open Univ, Fac Sci, Postbus 2960, NL-6401 DL Heerlen, Netherlands.
C3 Technische Universitat Wien; Open University Netherlands
RP Bork, D (corresponding author), TU Wien, Business Informat Grp, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM dominik.bork@tuwien.ac.at; ben.roelens@ou.nl
OI Bork, Dominik/0000-0001-8259-2297
FU Federal Ministry of Education, Science and Research (BMBWF) [FR 01/2019]
FX This research has been partly funded through the Federal Ministry of
   Education, Science and Research (BMBWF) funded France / Austria Joint
   Scientific and Technological Cooperation program with the project number
   FR 01/2019.
CR ADOxx.org, 2020, ADOXX MET PLATF
   [Anonymous], 1988, STAT POWER ANAL BEHA
   [Anonymous], 2017, AUSTRALASIAN COMPUTE
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   Bork D., 2018, P 12 INT C RES CHALL, P1
   Bork D., 2015, THESIS U BAMBERG
   Bork D, 2019, LECT NOTES COMPUT SC, V11788, P311, DOI 10.1007/978-3-030-33223-5_26
   Bork D, 2019, COMMUN ASSOC INF SYS, V44, P673, DOI 10.17705/1CAIS.04432
   Brambilla M, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P129, DOI 10.1145/3136014.3136033
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Izquierdo JLC, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.84
   Cook C, 2001, EDUC PSYCHOL MEAS, V61, P697, DOI 10.1177/00131640121971356
   de Kinderen S, 2015, APPL ONTOL, V10, P7, DOI 10.3233/AO-150139
   El Kouhen A, 2015, LECT NOTES COMPUT SC, V9369, P122, DOI 10.1007/978-3-319-24912-4_10
   Figl K, 2016, REQUIR ENG, V21, P63, DOI 10.1007/s00766-014-0210-2
   Fitts P.M., 1959, RC109 IBM
   Frank U., 2013, Domain Engineering, P133
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Genon Nicolas, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P140, DOI 10.1007/978-3-642-28714-5_12
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Goodhue D, 2007, INFORM SYST RES, V18, P211, DOI 10.1287/isre.1070.0123
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Gulden J, 2018, LECT NOTES BUS INF P, V335, P21, DOI 10.1007/978-3-030-02302-7_2
   Gulden J, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P234, DOI 10.5220/0005898702340240
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HOWELL WC, 1968, ORGAN BEHAV HUM PERF, V3, P310, DOI 10.1016/0030-5073(68)90012-3
   Jannaber S, 2017, LECT NOTES COMPUT SC, V10243, P39, DOI 10.1007/978-3-319-59144-5_3
   Jost G, 2016, COMPUT STAND INTER, V48, P90, DOI 10.1016/j.csi.2016.04.006
   Karagiannis D., 2015, P 19 PANH C INF ATH, P5, DOI DOI 10.1145/2801948.2802040
   Karagiannis D., 2016, Domain-Specific Conceptual Modeling
   Karsai G, 2009, P 9 OOPSLA WORKSH DO
   KIRAKOWSKI J, 1993, BRIT J EDUC TECHNOL, V24, P210, DOI 10.1111/j.1467-8535.1993.tb00076.x
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Krogstie J., 2017, CONCEPTUAL MODELING, P185
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Laue R, 2018, MODELLIERUNG
   Liaskos S., 2020, P 2020 ER WORKSH
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mayr H. C., 2016, Domain-Specific Conceptual Modeling: Concepts, Methods and Tools, P527, DOI [10.1007/978-3-319-39417-6_24/COVER, DOI 10.1007/978-3-319-39417-6_24/COVER]
   Mendling J., 2016, 2016 IEEE 20 INT ENT, P1
   Michael J, 2015, 2015 FIFTEENTH INTERNATIONAL CONFERENCE ON ADVANCES IN ICT FOR EMERGING REGIONS (ICTER), P119, DOI 10.1109/ICTER.2015.7377676
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Moody DL, 1994, LECT NOTES COMPUT SC, V881, P94
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Peffers Ken, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P398, DOI 10.1007/978-3-642-29863-9_29
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Ralyte J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P267
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Roelens Ben, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P395, DOI 10.1007/978-3-030-49418-6_27
   Roelens B, 2019, SOFTW SYST MODEL, V18, P631, DOI 10.1007/s10270-016-0574-5
   Roelens B, 2014, PROC EUR CONF INFO, P388
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saunders M. N. K., 2016, Business Students, V7th
   Sein MK, 2011, MIS QUART, V35, P37
   Siau K, 2009, REQUIR ENG, V14, P15, DOI 10.1007/s00766-008-0071-7
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Thode Henry C., 2002, STAT TEXTB MONOG, V164, DOI 10.1201/9780203910894
   Utz W., 2020, AM C INF SYST AMCIS
   van der Linden D, 2016, LECT NOTES BUS INF P, V248, P448, DOI 10.1007/978-3-319-39429-9_28
   ZWAGA HJ, 1983, APPL ERGON, V14, P43, DOI 10.1016/0003-6870(83)90220-X
NR 65
TC 9
Z9 10
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 939
EP 963
DI 10.1007/s10270-021-00895-w
EA JUN 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UL2LY
UT WOS:000661785400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Rodriguez-Echeverria, R
   Macías, F
   Rutle, A
   Conejero, JM
AF Rodriguez-Echeverria, Roberto
   Macias, Fernando
   Rutle, Adrian
   Conejero, Jose M.
TI Suggesting model transformation repairs for rule-based languages using a
   contract-based testing approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model Transformation; Evolution; Testing; Repairing; Testing Oracle;
   Adaptations; Verification; Fault Localisation
ID VERIFICATION; ATL
AB Model transformations play an essential role in most model-driven software projects. As the size and complexity of model transformations increase, their reuse, evolution and maintenance become a challenge. This work further details the Model Transformation TEst Specification (MoTES) approach, which leverages contract-based model testing techniques to assist engineers in model transformation evolution and repairing. The main novelty of our approach is to use contract-based model transformation testing as a foundation to derive suggestions of concrete adaptation actions. MoTES uses contracts to specify the expected behaviour of the model transformation under test. These contracts are transformed into model transformations which act as oracles on input-output model pairs, previously generated by executing the transformation under test on provided input models. By further processing, the oracles' output model, precision and recall metrics are calculated for every output pattern (testing results). These metrics are then categorised to increase the user's ability to interpret and act on them. The MoTES approach defines 8 cases for precision and recall values classification (test result cases). As traceability information is retained from transformation rules to each output pattern, it is possible to classify each transformation rule involved according to its impact on the metrics, e.g. the number of true positives generated. The MoTES approach defines 37 cases for these classifications, with each one linked to a particular (abstract) action suggested on a rule, such as relaxation of the rules. A comprehensive evaluation of this approach is also presented, consisting of three case studies. Two previous case studies performed over two model transformations (UML2ER and E2M) are replicated to contrast MoTES with an existing model transformation fault localisation approach. An additional case study presents how MoTES helps with the evolution of an existing model transformation in the context of a reverse engineering project. Main evaluation results show that our approach can not only detect the errors introduced in the transformations but also localise the faulty rule and suggest the proper repair actions, which significantly reduce testers' effort. From a quantitative perspective, in the third case study, MoTES was able to indicate one faulty rule from 19 possibilities for each result case and suggest one or two repair actions from 6 possibilities for each faulty rule.
C1 [Rodriguez-Echeverria, Roberto; Conejero, Jose M.] Univ Extremadura, Quercus Software Engn Grp, Caceres, Spain.
   [Macias, Fernando] IMDEA Software Inst, Madrid, Spain.
   [Rutle, Adrian] Western Norway Univ Appl Sci, Bergen, Norway.
C3 Universidad de Extremadura; IMDEA Software Institute; Western Norway
   University of Applied Sciences
RP Rodriguez-Echeverria, R (corresponding author), Univ Extremadura, Quercus Software Engn Grp, Caceres, Spain.
EM rre@unex.es; fernando.macias@imdea.org; aru@hvl.no; chemacm@unex.es
RI Conejero, Jose M./L-9776-2014; Macias, Fernando/B-6051-2014;
   Rodriguez-Echeverria, Roberto/B-4964-2014
OI Macias, Fernando/0000-0002-6442-6997; Rodriguez-Echeverria,
   Roberto/0000-0002-6545-0913
FU Consejeria de Economia e Infraestructuras, Junta de Extremadura
   (Spain)-European Regional Development Fund (ERDF) [GR18112, IB18034];
   Comunidad de Madrid [49/520608.9/18]; ERDF Funds of the European Union; 
   [RTI2018-098652-B-I00]
FX The authors wish to acknowledge the collaborative funding support from
   (i) Spanish Contract RTI2018-098652-B-I00, and (ii) Consejeria de
   Economia e Infraestructuras, Junta de Extremadura (Spain)-European
   Regional Development Fund (ERDF)- GR18112 Project, and IB18034 project.
   This work has also been partially supported by Comunidad de Madrid as
   part of the Project 49/520608.9/18 (MADRIDFLIGHTONCHIP) co-funded by
   ERDF Funds of the European Union.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Alkhazi B, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P295, DOI 10.1145/2976767.2976782
   [Anonymous], 2011, THE EPSILON BOOK
   Aranega V, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P66
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bergmayr Alexander, 2014, P 29 ACM IEEE INT C, P647, DOI DOI 10.1145/2642937.2642946
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Cerioli M, 2007, THEOR COMPUT SCI, V376, P137, DOI 10.1016/j.tcs.2007.02.002
   Cheng Z, 2018, INT J SOFTW TOOLS TE, V20, P645, DOI 10.1007/s10009-018-0491-8
   Cheng Z, 2017, IEEE INT CONF SOFTW, P379, DOI 10.1109/ICST.2017.41
   Cheng Z, 2017, LECT NOTES COMPUT SC, V10202, P300, DOI 10.1007/978-3-662-54494-5_17
   Conejero JM, 2013, J SYST SOFTWARE, V86, P2981, DOI 10.1016/j.jss.2013.04.053
   Di Rocco J., 2014, ME WORKSH MODELS, P22
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Guerra E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P78, DOI 10.1109/MODELS.2019.00-13
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hibberd M, 2007, LECT NOTES COMPUT SC, V4735, P589
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang M., 2014, SEKE, P94
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Khelladi DE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P404, DOI 10.1145/3239372.3239380
   Kretschmer R, 2017, ASIA PAC SOFWR ENG, P456, DOI 10.1109/APSEC.2017.52
   Kusel A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P116, DOI 10.1109/MODELS.2015.7338242
   Le Traon, 2006, P IMDT WORK CONJ ECM
   Li PF, 2020, IEEE ACCESS, V8, P14054, DOI 10.1109/ACCESS.2020.2966540
   Mottu Jean-Marie, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P105, DOI 10.1109/ICSTW.2008.27
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Muslu K, 2012, ACM SIGPLAN NOTICES, V47, P669, DOI 10.1145/2398857.2384665
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Perdita S., 2018, BIDIRECTIONAL TRANSF, P29
   Rodriguez-Echeverria Roberto, 2012, Current Trends in Web Engineering. Workshops, Doctoral Symposium, and Tutorials Held at ICWE 2011. Revised Selected Papers, P236, DOI 10.1007/978-3-642-27997-3_24
   Rodriguez-Echeverria R., 2016, P PAME VOLT, P58
   Rodriguez-Echeverria R, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P226, DOI 10.1109/MODELS.2015.7338253
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Schneider, 2014, 24 INT SYST DEV TRAN, P226
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Selim GMK, 2013, LECT NOTES COMPUT SC, V8107, P690, DOI 10.1007/978-3-642-41533-3_42
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Troya J, 2015, IEEE ICST WORKSHOP
   Vallecillo, 2014, 2 U MAL
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   WIMMER M, 2012, J OBJECT TECHNOL, V11
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 57
TC 3
Z9 3
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 81
EP 112
DI 10.1007/s10270-021-00891-0
EA MAY 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000654815200002
DA 2024-07-18
ER

PT J
AU Bergmann, G
AF Bergmann, Gabor
TI Controllable and decomposable multidirectional synchronizations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bidirectional transformation; Very well behaved; Collaborative
   engineering
AB Studying large-scale collaborative systems engineering projects across teams with differing intellectual property clearances, or healthcare solutions where sensitive patient data needs to be partially shared, or similar multi-user information systems over databases, all boils down to a common mathematical framework. Updateable views (lenses) and more generally bidirectional transformations are abstractions to study the challenge of exchanging information between participants with different read access privileges. The view provided to each participant must be different due to access control or other limitations, yet also consistent in a certain sense, to enable collaboration towards common goals. A collaboration system must apply bidirectional synchronization to ensure that after a participant modifies their view, the views of other participants are updated so that they are consistent again. While bidirectional transformations (synchronizations) have been extensively studied, there are new challenges that are unique to the multidirectional case. If complex consistency constraints have to be maintained, synchronizations that work fine in isolation may not compose well. We demonstrate and characterize a failure mode of the emergent behaviour, where a consistency restoration mechanism undoes the work of other participants. On the other end of the spectrum, we study the case where synchronizations work especially well together: we characterize very well-behaved multidirectional transformations, a non-trivial generalization from the bidirectional case. For the former challenge, we introduce a novel concept of controllability, while for the latter one, we propose a novel formal notion of faithful decomposition. Additionally, the paper proposes several novel properties of multidirectional transformations.
C1 [Bergmann, Gabor] Budapest Univ Technol & Econ, MTA BME Lendulet Cyber Phys Syst Res Grp, Dept Measurement & Informat Syst, Budapest, Hungary.
   [Bergmann, Gabor] IncQuery Labs, Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Bergmann, G (corresponding author), Budapest Univ Technol & Econ, MTA BME Lendulet Cyber Phys Syst Res Grp, Dept Measurement & Informat Syst, Budapest, Hungary.; Bergmann, G (corresponding author), IncQuery Labs, Budapest, Hungary.
EM bergmann@mit.bme.hu
RI Bergmann, Gabor/G-8610-2012
OI Bergmann, Gabor/0000-0002-2556-2582
FU Budapest University of Technology and Economics; Janos Bolyai Research
   Scholarship of the Hungarian Academy of Sciences; New National
   Excellence Program of the Ministry of Human Capacities [UNKP-18-4]; New
   National Excellence Program of the Ministry For Innovation and
   Technology [UNKP-19-4]; NRDI Office under the Ministry for Innovation
   and Technology
FX Open access funding provided by Budapest University of Technology and
   Economics. The author was partially supported by the Janos Bolyai
   Research Scholarship of the Hungarian Academy of Sciences as well as the
   UNKP-18-4 New National Excellence Program of the Ministry of Human
   Capacities and the UNKP-19-4 New National Excellence Program of the
   Ministry For Innovation and Technology. The research reported in this
   paper and carried out at the BME has been partially supported by the
   NRDI Fund based on the charter of bolster issued by the NRDI Office
   under the auspices of the Ministry for Innovation and Technology.
CR [Anonymous], 2020, SYSTEMS ENG RES CTR
   [Anonymous], 2008, OBJECT MANAGEMENT GR
   [Anonymous], 2018, APACHE SUBVERSION
   Bergmann G, NONDIFUNCTIONAL NONL
   Bergmann G., NONMINIMALLY INTERFE
   Bergmann G., WATER TANK EXAMPLE V
   Bohannon A, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P407, DOI 10.1145/1328438.1328487
   Cleve Anthony, 2019, Dagst. Rep., V8, P1, DOI [10.4230/DagRep.8.12.1, DOI 10.4230/DAGREP.8.12.1]
   Debreceni C, 2019, SOFTW SYST MODEL, V18, P1737, DOI 10.1007/s10270-017-0631-8
   Diskin Z, 2018, LECT NOTES COMPUT SC, V10802, P21, DOI 10.1007/978-3-319-89363-1_2
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Ehrig H., 2006, AN EATCS SERIES
   Foster JN, 2009, PROCEEDINGS OF THE 22ND IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, P60, DOI 10.1109/CSF.2009.25
   Foster JN, 2005, ACM SIGPLAN NOTICES, V40, P233, DOI 10.1145/1047659.1040325
   Foster S, 2016, LECT NOTES COMPUT SC, V9965, P295, DOI 10.1007/978-3-319-46750-4_17
   He X, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P434, DOI 10.1145/3236024.3236070
   Hill F.J., 1981, Introduction to switching theory and logical design, V3rd
   Huntington EV, 1933, T AM MATH SOC, V35, P274, DOI 10.2307/1989325
   Huntington EV, 1932, P NATL ACAD SCI USA, V18, P179, DOI 10.1073/pnas.18.2.179
   Inc N.M., TEAMWORK CLOUD
   Johnson M., 2019, CEUR P, V2355, P30
   Johnson M., 2018, C COMP 2 INT C ART S, P21, DOI [DOI 10.1145/3191697.3191717, 10.1145/3191697.3191717]
   Klare H, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a4
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   Rocco J.D., 2019, CEUR WORKSHOP P, V2017
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stevens P, 2012, ECEASST, V49
   Stevens P, 2007, LECT NOTES COMPUT SC, V4735, P1
   Stevens P, 2020, SOFTW SYST MODEL, V19, P39, DOI 10.1007/s10270-019-00736-x
   Vaughan J.A., 2006, P PRINC DAT SYST, P338, DOI [10.1145/1142351.1142399, DOI 10.1145/1142351.1142399]
   Xiong YF, 2013, SOFTW SYST MODEL, V12, P89, DOI 10.1007/s10270-010-0187-3
NR 33
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1735
EP 1774
DI 10.1007/s10270-021-00879-w
EA APR 2021
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000640150000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bertoa, MF
   Burgueno, L
   Moreno, N
   Vallecillo, A
AF Bertoa, Manuel F.
   Burgueno, Loli
   Moreno, Nathalie
   Vallecillo, Antonio
TI Incorporating measurement uncertainty into OCL/UML primitive datatypes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Measurement uncertainty; OCL; UML; Primitive datatypes
ID MODELS; SOFTWARE; SYSTEM; UML
AB The correct representation of the relevant properties of a system is an essential requirement for the effective use and wide adoption of model-based practices in industry. Uncertainty is one of the inherent properties of any measurement or estimation that is obtained in any physical setting; as such, it must be considered when modeling software systems deal with real data. Although a few modeling languages enable the representation of measurement uncertainty, these aspects are not normally incorporated into their type systems. Therefore, operating with uncertain values and propagating their uncertainty become cumbersome processes, which hinder their realization in real environments. This paper proposes an extension of OCL/UML primitive datatypes that enables the representation of the uncertainty that comes from physical measurements or user estimates into the models, together with an algebra of operations that are defined for the values of these types.
C1 [Bertoa, Manuel F.] Univ Malaga, Malaga, Spain.
   [Moreno, Nathalie] Univ Malaga, Dept Comp Sci, Malaga, Spain.
   [Vallecillo, Antonio] Univ Malaga, Software Engn, Malaga, Spain.
   [Burgueno, Loli] Open Univ Catalonia, IN3, Barcelona, Spain.
   [Burgueno, Loli] Univ Paris Saclay, CEA, Inst LIST, Paris, France.
C3 Universidad de Malaga; Universidad de Malaga; Universidad de Malaga; UOC
   Universitat Oberta de Catalunya; CEA; Universite Paris Saclay;
   Universite Paris Cite
RP Burgueno, L (corresponding author), Open Univ Catalonia, IN3, Barcelona, Spain.; Burgueno, L (corresponding author), Univ Paris Saclay, CEA, Inst LIST, Paris, France.
EM bertoa@lcc.uma.es; lburguenoc@uoc.edu; moreno@lcc.uma.es; av@lcc.uma.es
RI Bertoa, Manuel F./O-8707-2019; Vallecillo, Antonio/B-1884-2014;
   Burgueno, Lola/L-3817-2014; Bertoa, Manuel F./K-6855-2012
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueno,
   Lola/0000-0002-7779-8810; Bertoa, Manuel F./0000-0002-0950-5019; MORENO
   VERGARA, NATHALIE/0000-0001-9470-0283
CR Adzic G, 2012, REDEFINING SOFTWARE
   AMERICA P, 1987, LECT NOTES COMPUT SC, V276, P234
   America P, 1991, BEHAV APPROACH SUBTY, P173
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2015, UN MOD LANG UML SPEC
   [Anonymous], 2002012 JCGM
   [Anonymous], 1999, ENTCS
   [Anonymous], 2008, 1002008 JCGM, V100
   [Anonymous], 2016, 10031 IEEE
   Baudin Michael., 2015, OpenTURNS: An industrial software for uncertainty quantification in simulation
   Bertoa M.F., 2018, UNCERTAIN OCL DATATY
   Bertoa MF, 2018, LECT NOTES COMPUT SC, V10890, P46, DOI 10.1007/978-3-319-92997-2_4
   BOUTE RT, 1990, SIGPLAN NOTICES, V25, P25, DOI 10.1145/74105.74108
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Broy M, 2013, 2013 ACM/IEEE INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN), P5, DOI 10.1109/IPSN.2013.6917552
   Büttner F, 2014, SCI COMPUT PROGRAM, V92, P162, DOI 10.1016/j.scico.2013.10.003
   Burgueño L, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P23, DOI 10.1145/3196558.3196562
   Burgueño L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P57, DOI 10.1145/3239372.3239394
   Cabot J, 2010, LECT NOTES COMPUT SC, V6412, P419, DOI 10.1007/978-3-642-16373-9_30
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6528, DOI 10.1109/ACCESS.2016.2604018
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6451, DOI 10.1109/ACCESS.2016.2613642
   CLERICI S, 1988, LECT NOTES COMPUT SC, V322, P78
   De Finetti Bruno, 2017, Theory of probability: A critical introductory treatment, V6, DOI [DOI 10.1002/9781119286387, 10.1002/9781119286387]
   Dhouib Saadia, 2016, PROC IEEE 21 INT C E, P1
   Dou W, 2014, LECT NOTES COMPUT SC, V8569, P51
   DUBOIS D, 1993, SECOND IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1 AND 2, P1059, DOI 10.1109/FUZZY.1993.327367
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Ernst E., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P303
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Famelis M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P93, DOI 10.1109/MODELS.2017.3
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Garlan David, 2010, P FSE SDP WORKSH FUT, P125, DOI [10.1145/1882362.1882389, DOI 10.1145/1882362.1882389]
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Greengard S., 2015, MIT PRESS ESSENTIAL, DOI DOI 10.7551/MITPRESS/10277.001.0001
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hall BD, 2006, COMPUT STAND INTER, V28, P306, DOI 10.1016/j.csi.2005.07.009
   JCGM, 2008, 1012008 JCGM
   Jiménez-Ramírez A, 2015, INFORM SOFTWARE TECH, V57, P571, DOI 10.1016/j.infsof.2014.06.006
   Khan MU, 2015, LECT NOTES COMPUT SC, V9153, P92, DOI 10.1007/978-3-319-21151-0_7
   KOSKO B, 1990, INT J GEN SYST, V17, P211, DOI 10.1080/03081079008935108
   Kyas M, 2005, LECT NOTES COMPUT SC, V3535, P83
   Lebigot E.O., 2017, Uncertainties: a Python package for calculations with uncertainties
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   LITTLEWOOD B, 1995, RELIAB ENG SYST SAFE, V50, P87, DOI 10.1016/0951-8320(95)00073-B
   Liu B, 2018, UNCERTAINTY THEORY
   Man Zhang, 2019, Software & Systems Modeling, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P17, DOI 10.1007/s10270-015-0493-x
   Oberkampf WL, 2002, RELIAB ENG SYST SAFE, V75, P333, DOI 10.1016/S0951-8320(01)00120-X
   Object Management Group, 2011, UML PROF MARTE MOD A
   Object Management Group, 2018, STRUCT METR MET SMM
   Object Management Group, 2010, OBJ CONSTR LANG OCL
   Object Management Group, 2015, OMG SYST MOD LANG SY
   Pardillo J, 2010, INFORM SCIENCES, V180, P584, DOI 10.1016/j.ins.2009.11.006
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic B, 2015, P MODELSWARD 2015 PE, pIS
   Shafer G., 1976, MATH THEORY EVIDENCE, DOI DOI 10.1515/9780691214696
   Vallecillo A, 2017, P MODELS 2017 SAT EV, P324
   Vallecillo A, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P15, DOI [10.1109/QUATIC.2016.013, 10.1109/QUATIC.2016.11]
   Wolf M., 2009, THESIS
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
   Zimmermann HJ, 2001, FUZZY SET THEORY ITS
NR 66
TC 19
Z9 20
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1163
EP 1189
DI 10.1007/s10270-019-00741-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000569120800007
DA 2024-07-18
ER

PT J
AU Anjorin, A
   Buchmann, T
   Westfechtel, B
   Diskin, Z
   Ko, HS
   Eramo, R
   Hinkel, G
   Samimi-Dehkordi, L
   Zuendorf, A
AF Anjorin, Anthony
   Buchmann, Thomas
   Westfechtel, Bernhard
   Diskin, Zinovy
   Ko, Hsiang-Shang
   Eramo, Romina
   Hinkel, Georg
   Samimi-Dehkordi, Leila
   Zuendorf, Albert
TI Benchmarking bidirectional transformations: theory, implementation,
   application, and assessment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bidirectional transformation; Benchmark; Model synchronization;
   Framework
AB Bidirectional transformations (bx) are relevant for a wide range of application domains. While bx problems may be solved with unidirectional languages and tools, maintaining separate implementations of forward and backward synchronizers with mutually consistent behavior can be difficult, laborious, and error-prone. To address the challenges involved in handling bx problems, dedicated languages and tools for bx have been developed. Due to their heterogeneity, however, the numerous and diverse approaches to bx are difficult to compare, with the consequence that fundamental differences and similarities are not yet well understood. This motivates the need for suitable benchmarks that facilitate the comparison of bx approaches. This paper provides a comprehensive treatment of benchmarking bx, covering theory, implementation, application, and assessment. At the level of theory, we introduce a conceptual framework that defines and classifies architectures of bx tools. At the level of implementation, we describe Benchmarx, an infrastructure for benchmarking bx tools which is based on the conceptual framework. At the level of application, we report on a wide variety of solutions to the well-known Families-to-Persons benchmark, which were developed and compared with the help of Benchmarx. At the level of assessment, we reflect on the usefulness of the Benchmarx approach to benchmarking bx, based on the experiences gained from the Families-to-Persons benchmark.
C1 [Anjorin, Anthony] Paderborn Univ, Paderborn, Germany.
   [Buchmann, Thomas; Westfechtel, Bernhard] Univ Bayreuth, Bayreuth, Germany.
   [Diskin, Zinovy] McMaster Univ, Hamilton, ON, Canada.
   [Ko, Hsiang-Shang] Natl Inst Informat, Tokyo, Japan.
   [Eramo, Romina] Univ Aquila, Laquila, Italy.
   [Samimi-Dehkordi, Leila] Univ Isfahan, MDSE Res Grp, Esfahan, Iran.
   [Zuendorf, Albert] Univ Kassel, Kassel, Germany.
C3 University of Paderborn; University of Bayreuth; McMaster University;
   Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan; University of L'Aquila;
   University of Isfahan; Universitat Kassel
RP Anjorin, A (corresponding author), Paderborn Univ, Paderborn, Germany.
EM anthony.anjorin@upb.de; thomas.buchmann@uni-bayreuth.de;
   bernhard.westfechtel@uni-bayreuth.de; diskinz@mcmaster.ca;
   hsiang-shang@nii.ac.jp; romina.eramo@univaq.it; georg.hinkel@gmail.com;
   samimi@eng.ui.ac.ir; zuendorf@uni-kassel.de
RI Samimi-Dehkordi, Leila/ABA-2472-2021; Ko, Hsiang-Shang/ABA-7755-2020
OI Ko, Hsiang-Shang/0000-0002-2439-1048; Eramo, Romina/0000-0002-3572-5875;
   Buchmann, Thomas/0000-0002-5675-6339
CR Anjorin A., 2016, TUTORIAL LECT LECT N, V9715, P29, DOI [DOI 10.1007/978-3-319-79108-1, 10.1007/978-3-319-79108-1_2, DOI 10.1007/978-3-319-79108-1_2]
   Anjorin A, 2017, CEUR WORKSHOP P, P15
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], 2009, GTTSE 2009, DOI DOI 10.1007/978-3-642-18023-1_3
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], 2014, CEUR WORKSHOP P
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Buchmann T, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P336, DOI 10.5220/0006563503360345
   Buchmann T, 2016, ICSOFT-PT: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 2, P27, DOI 10.5220/0005957100270038
   Candan K.S., 2014, CEUR WORKSHOP P, V1133
   Cheney J, 2015, CEUR WORKSHOP P, V1396, P66
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Eramo R., 2018, C COMP PROGR, P36
   Eramo Romina, 2013, Electronic Communications of the EASST, V57, P1
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Foster N., 2010, LECT NOTES COMPUTER, V7470, P1, DOI DOI 10.1007/978-3-642-32202-0_1
   Garcia-Dominguez A., 2017, P 10 TRANSF TOOL CON, V2026
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P3151, DOI 10.1007/s10270-019-00719-y
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Izso B., 2014, BIGMDE 2014 2 WORKSH, P40
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Ko HS, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158129
   Ko HS, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P61, DOI 10.1145/2847538.2847544
   Kolovos Dimitrios S., 2018, The Epsilon book
   Lämmel R, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P239, DOI 10.1145/2997364.2997366
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   NORBISRATH U, 2013, STORY DRIVEN MODELIN
   Norell U, 2009, LECT NOTES COMPUT SC, V5832, P230, DOI 10.1007/978-3-642-04652-0_5
   Object Management Group, 2016, OMG MET FAC MOF COR
   Object Management Group, 2016, MET FAC MOF 2 0 QUER
   Prange U., 2005, LECT NOTES COMPUTER, V3844, P71
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Samimi-Dehkordi L, 2018, INFORM SOFTWARE TECH, V100, P47, DOI 10.1016/j.infsof.2018.03.011
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Struber Daniel, 2016, BIGMDE STAF, P21
   Van Gorp P, 2011, PROCEDIA COMPUT SCI, V4, P589, DOI 10.1016/j.procs.2011.04.062
   Varró G, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P79, DOI 10.1109/VLHCC.2005.23
   Westfechtel B, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P39, DOI 10.5220/0006679700390053
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Wohlin C., 2012, Experimentation in Software Engineering
NR 50
TC 21
Z9 22
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 647
EP 691
DI 10.1007/s10270-019-00752-x
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800009
DA 2024-07-18
ER

PT J
AU Agner, LTW
   Lethbridge, TC
   Soares, IW
AF Agner, Luciane T. W.
   Lethbridge, Timothy C.
   Soares, Inali W.
TI Student experience with software modeling tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software modeling tools; Software engineering education; Survey
ID UML
AB Modeling is a key concept in software engineering education, since students need to learn it in order to be able to produce large-scale and reliable software. Quality tools are needed to support modeling in education, but existing tools vary considerably both in their features and in their strengths and weaknesses. The objective of the research presented in this paper was to help professors and students choose tools by determining which strengths and weaknesses matter most to students, which tools exhibit which of these strengths and weaknesses, and how difficult to use are various tools for students. To achieve this objective, we conducted a survey of the use of modeling tools among students in software engineering courses from Brazil, Canada, USA, Spain, Denmark, UK and China. We report the results regarding the 31 UML tools that 117 participants have used, focusing on the nine tools that the students have used most heavily. Common benefits quoted by students in choosing a tool include simplicity of installing and learning, being free, supporting the most important notations and providing code generation. The most cited complaints about tools include lack of feedback, being slow to use, difficulty drawing the diagrams, not interacting well with other tools and being complex to use. This research also compares the results with the findings of another survey conducted among professors who taught modeling. The results should benefit tool developers by suggesting ways they could improve their tools. The results should also help inform the selection of tools by educators and students.
C1 [Agner, Luciane T. W.; Soares, Inali W.] Midwest State Univ UNICENTRO, Dept Comp Sci, Guarapuava, Brazil.
   [Lethbridge, Timothy C.] Univ Ottawa, Elect Engn & Comp Sci, Ottawa, ON, Canada.
C3 Universidade Estadual do Centro Oeste; University of Ottawa
RP Lethbridge, TC (corresponding author), Univ Ottawa, Elect Engn & Comp Sci, Ottawa, ON, Canada.
EM lagner@unicentro.br; tcl@eecs.uottawa.ca; inali@unicentro.br
RI Lethbridge, Timothy/I-3199-2014
OI Lethbridge, Timothy/0000-0001-9410-2056
FU NSERC
FX We would like to thank all the participants in this survey and the
   professors who forwarded the survey to their students. Dr. Lethbridge's
   research is funded in part by NSERC.
CR Agner LTW, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P303, DOI 10.1109/MODELS.2017.1
   Akayama S., 2013, CEUR WORKSHOP PROC, V1134
   [Anonymous], ACM IEEE 17 INT C MO
   [Anonymous], 2009, ENG STAT
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Duran MB, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P6, DOI 10.1109/REW.2017.66
   Forward A., 2010, P 5 WORKSH COD CENTR
   Gérard S, 2010, LECT NOTES COMPUT SC, V6100, P361, DOI 10.1007/978-3-642-16277-0_19
   Giraldo FD, 2015, INT CONF RES CHAL, P64, DOI 10.1109/RCIS.2015.7128864
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Kuzniarz Ludwik, 2016, P 2016 ITICSE WORKIN, P45, DOI [10.1145/3024906.3024909, DOI 10.1145/3024906.3024909]
   Lanusse Agnes., 2009, Proc. of the Fifth BIBLIOGRAPHY 84 European Conference on Model-Driven Architecture Foundations and Applications ECMDA-FA 2009, P1
   Lethbridge TC, 2016, LECT NOTES COMPUT SC, V9953, P187, DOI 10.1007/978-3-319-47169-3_14
   Lethbridge TC, 2014, CONF SOFTW ENG EDUC, P23, DOI 10.1109/CSEET.2014.6816777
   Liebel G, 2016, CONF SOFTW ENG EDUC, P18, DOI 10.1109/CSEET.2016.18
   LYNCH A, 2004, J COMPUTING SCI COLL, V19, P353
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Mussbacher G, 2009, PROC INT CONF SOFTW, P431, DOI 10.1109/ICSE-COMPANION.2009.5071047
   Paige R. F, 2014, P ACM IEEE 17 INT C
   Reggio G, 2014, WHO KNOWS USES WHAT, P140
   Sallam RitaL., 2011, Magic quadrant for business intelligence platforms
   Tekinerdogan B, 2011, COMPUT SCI EDUC, V21, P363, DOI 10.1080/08993408.2011.630129
   Tomassetti Federico, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P91, DOI 10.1049/ic.2012.0012
   Weisstein E.W., BONFERRONI CORRECTIO
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 25
TC 17
Z9 18
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3025
EP 3047
DI 10.1007/s10270-018-00709-6
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500010
DA 2024-07-18
ER

PT J
AU Blache, G
AF Blache, Gunter
TI Handling index-out-of-bounds in safety-critical embedded C code using
   model-based development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; Functional safety; Software adaptation;
   Embedded software; Automotive engineering
AB Embedded C code for safety critical systems faces some substantial challenges: like every other embedded SW code it must be efficient in terms of code size, data size and execution time, but it must also behave safely under all circumstances, without a user or operator who could handle the errors. One kind of problem is array accesses where the index is outside the specified value range. The C language does not specify the behaviour in such cases, which clearly violates the requirements for safe code. In this paper, the approach of the model-based development tool ASCET is explained, and the experiences of three case studies that describe the adoption of index protection by the users are presented.
C1 [Blache, Gunter] ETAS GmbH, Stuttgart, Germany.
RP Blache, G (corresponding author), ETAS GmbH, Stuttgart, Germany.
EM gunter.blache@etas.com
CR [Anonymous], 2014, MOD DRIV ARCH GUID R
   Blache G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P143, DOI 10.1145/2976767.2976803
   Boulanger J-L., 2012, IND USE FORMAL METHO, DOI 10.1002/9781118561829
   Esterel Technologies SA, 2017, SCADE
   Esterel Technologies SA, 2017, EST
   ETAS GmbH, 2016, ASCET
   Ferdinand C., 2001, Reliable and Precise WCET Determination for a Real-Life Processor, P469
   Hocking AB, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P226, DOI 10.1109/ISSREW.2014.88
   International Organization for Standardization, 2010, 61508 ISOIEC
   International Organization for Standardization , 2011, 262622011 ISO, P2011
   International Organization for Standardization, 1999, 98991999 ISO
   KOLTE P, 1995, SIGPLAN NOTICES, V30, P270, DOI 10.1145/223428.207160
   MISRA, 2013, MISRA C 2012: Guidelines for the Use of the C Language in Critical Systems
   Morel L, 2007, EURASIP J EMBED SYST, V2007, DOI 10.1186/1687-3963-2007-059130
   Palin Rob., 2011, Physical Therapy for Children, P1
   Poledna S, 1996, REAL TIM SYST SYMP P, P311
   Rocheteau F., 1992, THESIS
   Rugina R, 2000, ACM SIGPLAN NOTICES, V35, P182, DOI 10.1145/358438.349325
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   The Mathworks Inc, 2017, SIM
   Wagner David., 2000, NETWORK DISTRIBUTED, P3
NR 21
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1795
EP 1807
DI 10.1007/s10270-018-0697-y
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100013
OA hybrid
DA 2024-07-18
ER

PT J
AU Aysolmaz, B
   Schunselaar, DMM
   Reijers, HA
   Yaldiz, A
AF Aysolmaz, Banu
   Schunselaar, Dennis M. M.
   Reijers, Hajo A.
   Yaldiz, Ali
TI Selecting a process variant modeling approach: guidelines and
   application
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Business process modeling; Process variant modeling; Decomposition
   driven method; Provop
ID BUSINESS PROCESS MODELS; VARIABILITY
AB Various modeling approaches have been introduced to manage process diversity in a business context. For practitioners, it is difficult to select an approach suitable for the needs and limitations of their organization due to the limited number of examples and guidelines. In this paper, we report on an action research study to perform a comparative process variant modeling application in a process management consultancy company. This company experienced difficulties in maintaining and reusing process definitions of their customers. We describe how the requirements were determined and led to the selection of two specific approaches, the Decomposition Driven Method and the Provop approach. We comparatively evaluated the suitability of these approaches to develop variant models for six software project management processes of five customers. This study contributes to the field by presenting an industrial case for process variant modeling, reporting in-depth, real-life applications of two approaches, applying the approaches for hierarchical processes, and presenting guidelines for choosing an approach under comparable conditions.
C1 [Aysolmaz, Banu] Maastricht Univ, Sch Business & Econ, POB 616, NL-6200 MD Maastricht, Netherlands.
   [Schunselaar, Dennis M. M.; Reijers, Hajo A.] Vrije Univ Amsterdam, Fac Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
   [Yaldiz, Ali] 4S Informat Technol, Ankara, Turkey.
C3 Maastricht University; Vrije Universiteit Amsterdam
RP Aysolmaz, B (corresponding author), Maastricht Univ, Sch Business & Econ, POB 616, NL-6200 MD Maastricht, Netherlands.
EM b.aysolmaz@maastrichtuniversity.nl; d.m.m.schunselaar@vu.nl;
   h.a.reijers@vu.nl; ali.yaldiz@4s.com.tr
RI Aysolmaz, Banu/D-1318-2010
OI Aysolmaz, Banu/0000-0002-6540-5100; Schunselaar,
   Dionysius/0000-0003-4993-7681; Reijers, Hajo/0000-0001-9634-5852
FU European Unions Horizon 2020 research and innovation programme under the
   Marie SklodowskaCurie Grant [660646]; Marie Curie Actions (MSCA)
   [660646] Funding Source: Marie Curie Actions (MSCA)
FX This study has been conducted in 4S Information Systems in
   collaborationwith the processmanagement team of the company. This study
   received funding from the European Unions Horizon 2020 research and
   innovation programme under the Marie SklodowskaCurie Grant Agreement No.
   660646. We would like to thank to the anonymous reviewers for their
   constructive suggestions.
CR ARGYRIS C, 1989, AM BEHAV SCI, V32, P612, DOI 10.1177/0002764289032005008
   Armas-Cervantes A, 2016, INFORM SYST, V56, P304, DOI 10.1016/j.is.2015.09.009
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Aysolmaz B., 2016, PROCESS VARIANT MODE, P285
   Baskerville R, 2004, MIS QUART, V28, P329
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Derguech W., 2010, INDEXING STRUCTURE M, P157
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Döhring M, 2014, INFORM SYST, V39, P108, DOI 10.1016/j.is.2013.06.002
   Dohring M., 2011, VBPMN EVENT AWARE WO, P332
   Dumas M., 2010, UNRAVELING UNSTRUCTU, P1
   H. P. Enterprise, 2016, PROJ PORTF MAN PPM
   Hallerbach Alena, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P98, DOI 10.1109/CEC.2009.62
   Hallerbach A., 2007, ICEIS 2008 P 10 INT, V2, P154
   Hallerbach A., 2009, ISSUES MODELING PROC, P56
   Hallerbach A., HDB BUSINESS PROCESS, V11, P237
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Kunze M, 2015, SOFTW SYST MODEL, V14, P1105, DOI 10.1007/s10270-013-0389-6
   La Rosa M., 2009, HDB RES BUSINESS PRO, P204, DOI DOI 10.4018/978-1-60566-288-6.CH009
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Lu RP, 2009, DATA KNOWL ENG, V68, P642, DOI 10.1016/j.datak.2009.02.009
   Mechrez I., 2014, MODELING DESIGN TIME, P378
   Milani Fredrik, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P193, DOI 10.1007/978-3-642-38709-8_13
   Milani F., THESIS
   Milani F., 2012, IDENTIFYING CLASSIFY, P136
   Milani F, 2016, INFORM SYST, V56, P55, DOI 10.1016/j.is.2015.09.003
   *PROJ MAN I INC, 2000, GUID PROJ MAN BOD KN
   Puhlmann F., 2005, TECHNICAL REPORT
   Raduescu Corina., 2006, ECIS, V2006, P1594
   Recker J., 2013, SCI RES INFORM SYSTE, DOI DOI 10.1007/978-3-642-30048-6
   Recker J, 2016, BUS INFORM SYST ENG+, V58, P55, DOI 10.1007/s12599-015-0411-3
   Recker J, 2011, COMMUN ASSOC INF SYS, V28, P65
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Reinhartz-Berger Iris, 2009, International Journal of Business Process Integration and Management, V4, P134, DOI 10.1504/IJBPIM.2009.027781
   Rosa M. L., 2016, ACM COMPUT SURV, V50, P2
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schnieders A., 2006, P INT S WORKSH ENG C, P287
   Schunselaar D. M. M., 2016, THESIS
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Torres V, 2013, LECT NOTES BUS INF P, V132, P560
   Valenca George, 2013, International Journal of Computer Science & Information Technology, V5, P1, DOI 10.5121/ijcsit.2013.5101
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   WHYTE WF, 1989, SOCIOL FORUM, V4, P367, DOI 10.1007/BF01115015
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2011, Qualitative research from start to finish
NR 49
TC 7
Z9 7
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1155
EP 1178
DI 10.1007/s10270-017-0648-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400020
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rodrigues, T
   Delicato, FC
   Batista, T
   Pires, PF
   Pirmez, L
AF Rodrigues, Taniro
   Delicato, Flavia C.
   Batista, Thais
   Pires, Paulo F.
   Pirmez, Luci
TI An approach based on the domain perspective to develop WSAN applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE WSAN applications; Model-driven architecture; Domain-specific language;
   UML profile; Architecture; Code generation; Abstraction
ID WIRELESS; MIDDLEWARE; SOFTWARE
AB As wireless sensor and actuator networks (WSANs) can be used in many different domains, WSAN applications have to be built from two viewpoints: domain and network. These different viewpoints create a gap between the abstractions handled by the application developers, namely the domain and network experts. Furthermore, there is a coupling between the application logic and the underlying sensor platform, which results in platform-dependent projects and source codes difficult to maintain, modify, and reuse. Consequently, the process of developing an application becomes cumbersome. In this paper, we propose a model-driven architecture (MDA) approach for WSAN application development. Our approach aims to facilitate the task of the developers by: (1) enabling application design through high abstraction level models; (2) providing a specific methodology for developing WSAN applications; and (3) offering an MDA infrastructure composed of PIM, PSM, and transformation programs to support this process. Our approach allows the direct contribution of domain experts in the development of WSAN applications, without requiring specific knowledge of programming WSAN platforms. In addition, it allows network experts to focus on the specific characteristics of their area of expertise without the need of knowing each specific application domain.
C1 [Rodrigues, Taniro; Batista, Thais] Univ Fed Rio Grande do Norte, Campus Univ, BR-59078970 Natal, RN, Brazil.
   [Delicato, Flavia C.; Pires, Paulo F.; Pirmez, Luci] Univ Fed Rio de Janeiro, Cidade Univ, BR-21941901 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Rio Grande do Norte; Universidade Federal do Rio
   de Janeiro
RP Rodrigues, T (corresponding author), Univ Fed Rio Grande do Norte, Campus Univ, BR-59078970 Natal, RN, Brazil.
EM tanirocr@gmail.com; fdelicato@gmail.com; thaisbatista@gmail.com;
   paulo.f.pires@gmail.com; luci.pirmez@gmail.com
RI Pires, Paulo F/C-2239-2013; Pires, Paulo/P-4516-2019; Delicato,
   Flavia/M-6644-2013; Batista, Thais/L-3935-2013
OI Pires, Paulo/0000-0001-5064-4793; Delicato, Flavia/0000-0001-5334-8279;
   Batista, Thais/0000-0003-3558-1450; Rodrigues,
   Taniro/0000-0001-8833-7967
FU CAPES; CNPq; FAPERJ
FX This work was partly supported by the Brazilian funding agencies CAPES,
   CNPq, and FAPERJ. Flavia Delicato, Paulo Pires, Thais Batista and Luci
   Pirmez are CNPq Fellows.
CR Akbal-Delibas B., 2009, INFORM SYSTEMS MODEL
   [Anonymous], P C FUT SOFTW ENG IC
   Basaran C., 2009, GUIDE WIRELESS SENSO
   Basili VR., 2002, ENCY SOFTWARE ENG
   Berardinelli L, 2011, P 2 WORKSH SOFTW ENG, P13
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Czarnecki K., 2005, UNCONVENTIONAL PROGR
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Delicato FC, 2009, LECT NOTES COMPUT SC, V5518, P851, DOI 10.1007/978-3-642-02481-8_129
   dos Santos IL, 2014, INFORM FUSION, V15, P114, DOI 10.1016/j.inffus.2012.02.002
   Fowler Martin., LANGUAGE WORKBENCHES
   Fuchs G., 2010, P 2010 ICSE WORKSHOP, P8
   Fuentes L, 2010, J UNIVERS COMPUT SCI, V16, P1592
   Gay D, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/780822.781133
   Gliem J. A., 2003, MIDW RES TO PRACT C, V1, P82, DOI DOI 10.1109/PROC.1975.9792
   Harris P., 2008, Designing and reporting experiments in psychology, V3rd
   Jedlitschka  M.CAndreas, 2008, GUIDE ADV EMPIRICAL
   Jingyong L., 2009, Proceedings of the 2009 International Conference on Hybrid Information Technology, P345, DOI DOI 10.1145/1644993.1645058
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Losilla F, 2007, LECT NOTES COMPUT SC, V4758, P179
   Miller I., 2003, MDA GUIDE VERSION 1
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Object Management Group, MOD DRIV ARCH GUID R
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Rodrigues T., 2011, 2011 Proceedings of IEEE/IFIP 9th International Conference on Embedded and Ubiquitous Computing (EUC 2011), P11, DOI 10.1109/EUC.2011.50
   Rodrigues T, 2013, INT WORK SOFTW ENG, P43, DOI 10.1109/SESENA.2013.6612265
   Schmidt D C, 2002, P OOPSLA 2002 WORKSH
   Shimizu R., 2011, Proceeding of the 2nd workshop on Software engineering for sensor network applications - SESENA'11, P31, DOI [DOI 10.1145/1988051, 10.1145/1988051.1988058, DOI 10.1145/1988051.1988058]
   Wada H., MODELING EXECUTING A, P216
   Yick J, 2008, COMPUT NETW, V52, P2292, DOI 10.1016/j.comnet.2008.04.002
NR 32
TC 14
Z9 16
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 949
EP 977
DI 10.1007/s10270-015-0498-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800003
DA 2024-07-18
ER

PT J
AU Whittle, J
   Hutchinson, J
   Rouncefield, M
   Burden, H
   Heldal, R
AF Whittle, Jon
   Hutchinson, John
   Rouncefield, Mark
   Burden, Hakan
   Heldal, Rogardt
TI A taxonomy of tool-related issues affecting the adoption of model-driven
   engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Modeling tools; Organizational change
AB Although poor tool support is often blamed for the low uptake of model-driven engineering (MDE), recent studies have shown that adoption problems are as likely to be down to social and organizational factors as with tooling issues. This article discusses the impact of tools on MDE adoption and practice and does so while placing tooling within a broader organizational context. The article revisits previous data on MDE use in industry (19 in-depth interviews with MDE practitioners) and reanalyzes that data through the specific lens of MDE tools in an attempt to identify and categorize the issues that users had with the tools they adopted. In addition, the article presents new data: 20 new interviews in two specific companies-and analyzes it through the same lens. A key contribution of the paper is a loose taxonomy of tool-related considerations, based on empirical industry data, which can be used to reflect on the tooling landscape as well as inform future research on MDE tools.
C1 [Whittle, Jon; Hutchinson, John; Rouncefield, Mark] Univ Lancaster, Sch Comp & Commun, InfoLab21, Lancaster, England.
   [Burden, Hakan; Heldal, Rogardt] Chalmers Univ Technol, Comp Sci & Engn, Gothenburg, Sweden.
   [Burden, Hakan; Heldal, Rogardt] Univ Gothenburg, Gothenburg, Sweden.
C3 Lancaster University; Chalmers University of Technology; University of
   Gothenburg
RP Whittle, J (corresponding author), Univ Lancaster, Sch Comp & Commun, InfoLab21, Lancaster, England.
EM j.n.whittle@lancaster.ac.uk
FU EPSRC [EP/H006249/1] Funding Source: UKRI
CR [Anonymous], 1969, CONTENT ANAL SOCIAL
   Aranda Jorge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P692, DOI 10.1007/978-3-642-33666-9_44
   Brooks Frederick P., 1995, The mythical man-month
   Brown B, 2000, BEHAV INFORM TECHNOL, V19, P263, DOI 10.1080/01449290050086372
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   Cabot J., 2006, CONSTRAINT SUPPORT M
   Chalmers M., 2004, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V13, P223, DOI 10.1007/s10606-004-2802-8
   Clark T, 2012, SOFTW SYST MODEL, V11, P481, DOI 10.1007/s10270-012-0260-1
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Den Haan Johan., 2008, 8 Reasons Why Model-Driven Approaches (will) Fail
   France R., 2012, LECT NOTES COMPUTER, V7590
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   France RB, 2012, PROC INT CONF SOFTW, P1471, DOI 10.1109/ICSE.2012.6227059
   Grudin J., 1988, Proceedings of the 1988 ACM Conference on Computer-Supported Cooperative Work, CSCW '88, P65
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Lehman M. M., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P14
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Paige RF, 2012, SOFTW SYST MODEL, V11, P527, DOI 10.1007/s10270-012-0257-9
   Perez-Medina J.L., 2007, LECT NOTES COMPUTER, V4849
   Robinson H, 2005, LECT NOTES COMPUT SC, V3556, P100
   Saraiva Joao de Sousa., 2010, Principal Advancements in Database Management Technologies, P105, DOI DOI 10.4018/978-1-60566-904-5.CH005
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Taylor R.N., 2011, P 33 INT C SOFTW ENG
   Tomassetti Federico, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P91, DOI 10.1049/ic.2012.0012
NR 29
TC 44
Z9 44
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 313
EP 331
DI 10.1007/s10270-015-0487-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sen, T
   Mall, R
AF Sen, Tamal
   Mall, Rajib
TI Extracting finite state representation of Java programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Software reverse engineering; FSM; System modeling
AB We present a static analysis-based technique for reverse engineering finite state machine models from a large subset of sequential Java programs. Our approach enumerates all feasible program paths in a class using symbolic execution and records execution summary for each path. Subsequently, it creates states and transitions by analyzing symbolic execution summaries. Our approach also detects any unhandled exceptions.
C1 [Sen, Tamal; Mall, Rajib] Indian Inst Technol, Dept CSE, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Sen, T (corresponding author), Indian Inst Technol, Dept CSE, Kharagpur 721302, W Bengal, India.
EM tamal.sen@cse.iitkgp.ernet.in; rajib@cse.iitkgp.ernet.in
CR Beydeda S., 2004, INT C SOFTW ENG KNOW, P104
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Gallagher L, 2006, SOFTW TEST VERIF REL, V16, P215, DOI 10.1002/stvr.340
   Gueheneuc Y.-G., 2005, P 6 ECOOP WORKSH OBJ
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Koskimies K, 1998, IEEE SOFTWARE, V15, P87, DOI 10.1109/52.646888
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   KUNG D, 1994, P INT COMP SOFTW APP, P222, DOI 10.1109/CMPSAC.1994.342801
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LOGOZZO F, 2008, LNCS
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Sen Mall, 2012, INT SCHOLARLY RES NE, P1
   Somé SS, 2002, PROG COMPREHEN, P85, DOI 10.1109/WPC.2002.1021325
   Suman RR, 2010, J OBJECT TECHNOL, V9, P79, DOI 10.5381/jot.2010.9.3.a3
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Tonella Paolo., 2005, REVERSE ENG OBJECT O
   Wagner S, 2005, LECT NOTES COMPUT SC, V3463, P435
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Walkinshaw N, 2008, SOFTW TEST VERIF REL, V18, P99, DOI 10.1002/stvr.380
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xie T, 2004, LECT NOTES COMPUT SC, V3308, P290
NR 24
TC 19
Z9 20
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 497
EP 511
DI 10.1007/s10270-014-0415-3
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800011
DA 2024-07-18
ER

PT J
AU Guerra, E
   Soeken, M
AF Guerra, Esther
   Soeken, Mathias
TI Specification-driven model transformation testing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Model transformation specification; Model
   transformation testing; Model finding; Test oracle
AB Testing model transformations poses several challenges, among them the automatic generation of appropriate input test models and the specification of oracle functions. Most approaches for the generation of input models ensure a certain coverage of the source meta-model or the transformation implementation code, whereas oracle functions are frequently defined using query or graph languages. However, these two tasks are usually performed independently regardless of their common purpose, and sometimes, there is a gap between the properties exhibited by the generated input models and those considered by the transformations. Recently, we proposed a formal specification language for the declarative formulation of transformation properties (by means of invariants, pre-, and postconditions) from which we generated partial oracle functions used for transformation testing. Here, we extend the usage of our specification language for the automated generation of input test models by SAT solving. The testing process becomes more intentional because the generated models ensure a certain coverage of the transformation requirements. Moreover, we use the same specification to consistently derive both the input test models and the oracle functions. A set of experiments is presented, aimed at measuring the efficacy of our technique.
C1 [Soeken, Mathias] Univ Bremen, Grp Comp Architecture, D-28359 Bremen, Germany.
C3 University of Bremen
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Esther.Guerra@uam.es; msoeken@informatik.uni-bremen.de
RI Soeken, Mathias/M-2666-2013; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Science and Innovation; project "Go-Lite"
   [TIN2011-24139]; R&D program of the Community of Madrid; project
   "e-Madrid" [S2009/TIC-1650]; German Research Foundation (DFG) [DR
   287/23-1]
FX We thank the referees for their useful comments. This work has been
   sponsored by the Spanish Ministry of Science and Innovation with project
   "Go-Lite" (TIN2011-24139), by the R&D program of the Community of Madrid
   with project "e-Madrid" (S2009/TIC-1650), and by the German Research
   Foundation (DFG) within the Reinhart Koselleck project (DR 287/23-1).
CR Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Budd T. A., 1981, Computer Program Testing. Proceedings of the Summer School on Computer Program Testing, P129
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cariou Eric., 2004, Workshop of OCL and Model Driven Engineering, V12, P69
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P178, DOI 10.1007/978-3-540-87405-8_13
   Fiorentini C, 2010, LECT NOTES COMPUT SC, V6142, P77, DOI 10.1007/978-3-642-13688-7_6
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Ghamarian Amir Hossein, 2012, International Journal on Software Tools for Technology Transfer, V14, P15, DOI 10.1007/s10009-011-0186-x
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Godefroid P, 2008, IEEE SOFTWARE, V25, P30, DOI 10.1109/MS.2008.109
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra Esther, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P40, DOI 10.1007/978-3-642-30476-7_3
   Guerra Esther, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P119, DOI 10.1109/VLHCC.2010.25
   Guerra E, 2014, SOFTW SYST MODEL, V13, P1447, DOI 10.1007/s10270-012-0292-6
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Harm J., 2000, Informatica, V24, P355
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Le Traon Y, 2006, IEEE T SOFTWARE ENG, V32, P571, DOI 10.1109/TSE.2006.79
   Lin Y., 2005, MODEL DRIVEN SOFTWAR
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4199, P589
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Offutt AJ, 1999, J SYST SOFTWARE, V49, P49, DOI 10.1016/S0164-1212(99)00066-7
   Oster Sebastian., 2011, P 5 WORKSHOP VARIABI, DOI [DOI 10.1145/1944892.1944901, 10.1145/1944892.1944901]
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Quillan J.A.M., 2009, 1 INT WORKSH MOD TRA
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Sherwood GB, 2006, J COMB DES, V14, P202, DOI 10.1002/jcd.20067
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   SPIVEY JM, 1989, SOFTWARE ENG J, V4, P40, DOI 10.1049/sej.1989.0006
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
NR 48
TC 26
Z9 27
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 623
EP 644
DI 10.1007/s10270-013-0369-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400006
DA 2024-07-18
ER

PT J
AU Cunha, A
   Garis, A
   Riesco, D
AF Cunha, Alcino
   Garis, Ana
   Riesco, Daniel
TI Translating between Alloy specifications and UML class diagrams
   annotated with OCL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Alloy; UML; OCL
ID DYNALLOY
AB Model-driven engineering (MDE) is a software engineering approach based on model transformations at different abstraction levels. It prescribes the development of software by successively transforming the models from abstract (specifications) to more concrete ones (code). Alloy is an increasingly popular lightweight formal specification language that supports automatic verification. Unfortunately, its widespread industrial adoption is hampered by the lack of an ecosystem of MDE tools, namely code generators. This paper presents a model transformation from Alloy to UML class diagrams annotated with OCL (UML+OCL) and shows how an existing transformation from UML+OCL to Alloy can be improved to handle dynamic issues. The proposed bidirectional transformation enables a smooth integration of Alloy in the current MDE contexts, by allowing UML+OCL specifications to be transformed to Alloy for validation and verification, to correct and possibly refine them inside Alloy, and to translate them back to UML+OCL for sharing with stakeholders or to reuse current model-driven architecture tools to refine them toward code.
C1 [Cunha, Alcino] INESC TEC, HASLab, Braga, Portugal.
   [Cunha, Alcino] Univ Minho, Braga, Portugal.
   [Garis, Ana; Riesco, Daniel] Univ Nacl San Luis, San Luis, Argentina.
C3 INESC TEC; Universidade do Minho; Universidad Nacional de San Luis
RP Cunha, A (corresponding author), INESC TEC, HASLab, Braga, Portugal.
EM alcino@di.uminho.pt; agaris@unsl.edu.ar; driesco@unsl.edu.ar
RI Cunha, Alcino/I-4104-2015
OI Cunha, Alcino/0000-0002-2714-8027
FU European Regional Development Fund (ERDF) through the COMPETE Programme
   (operational program for competitiveness); national funds through the
   FCT (Fundaaco para a Ciencia e a Tecnologia-portuguese Foundation for
   Science and Technology) [FCOMP-01-0124-FEDER-020532]; FCT
   [SFRH/BSAB/1187/2011]; QREN (the portuguese National Strategy Reference
   Chart) [121]; Fundação para a Ciência e a Tecnologia
   [SFRH/BSAB/1187/2011] Funding Source: FCT
FX This work was funded by European Regional Development Fund (ERDF)
   through the COMPETE Programme (operational program for competitiveness)
   and by national funds through the FCT (Fundaaco para a Ciencia e a
   Tecnologia-portuguese Foundation for Science and Technology) within
   project FCOMP-01-0124-FEDER-020532. Part of the work was done while the
   first author was visiting the Software Design Group at CSAIL, MIT, USA,
   funded by FCT sabbatical grant SFRH/BSAB/1187/2011. The second author
   was also partially supported by QREN (the portuguese National Strategy
   Reference Chart) project 1621, while visiting the High-Assurance
   Software Laboratory at Universidade do Minho, Portugal. Finally, we
   would also like to thank all anonymous reviewers for the valuable
   comments and suggestions.
CR Anastasakis K., 2009, THESIS U BIRMINGHAM
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2003, MDA GUIDE VERSION 1
   Bordbar B., 2005, IADIS AC, P209
   Braga BFB, 2010, INNOV SYST SOFTW ENG, V6, P55, DOI 10.1007/s11334-009-0120-5
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Cunha A., 2012, CORR
   Demuth B., 2001, UNIFIED MODELING LAN, P104, DOI DOI 10.1007/3-540-45441-1
   Edwards J., 2004, Software Engineering Notes, V29, P189, DOI 10.1145/1041685.1029921
   El Ghazi Aboubakr Achraf, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P133, DOI 10.1007/978-3-642-21437-0_12
   Frias MF, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314497
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Galeotti JP, 2006, INT FED INFO PROC, V227, P249
   Galeotti Juan P., 2010, Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010, P25, DOI [DOI 10.1145/1831708.1831712, 10.1145/1831708.1831712]
   Garis Ana, 2012, Integrated Formal Methods. Proceedings 9th International Conference, IFM 2012, P312, DOI 10.1007/978-3-642-30729-4_22
   Garis A, 2011, LECT NOTES COMPUT SC, V7041, P221, DOI 10.1007/978-3-642-24690-6_16
   Georg G, 2010, IEEE T SOFTWARE ENG, V36, P338, DOI 10.1109/TSE.2010.36
   Gheyi Rohit., 2007, Proceedings of the Brazilian Symposium on Formal Methods, P22
   Giannakopoulos T, 2009, LECT NOTES COMPUT SC, V5850, P483, DOI 10.1007/978-3-642-05089-3_31
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Hamie Ali, 2004, P 2004 ACM S APPL CO, P1531
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Kim J.S., 2006, ROSATEA '06, P70
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Massoni T., 2005, 19 BRAZILIAN S SOFTW, P152
   Milicevic Aleksandar, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P108, DOI 10.1007/978-3-642-30885-7_8
   Mostefaoui Farida., 2007, AOM 07, P41
   Near JP, 2010, LECT NOTES COMPUT SC, V5977, P118, DOI 10.1007/978-3-642-11811-1_10
   OMG, 2012, OBJ CONSTR LANG VER
   OMG, 2011, QUER VIEW TRANSF VER
   OMG, 2011, UMP SUP VERS 2 4 1
   Shah S.M.A., 2009, P 6 INT WORKSH MOD D
   Vakili Amirhossein, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P150, DOI 10.1007/978-3-642-30885-7_11
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
NR 35
TC 26
Z9 30
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 5
EP 25
DI 10.1007/s10270-013-0353-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100003
DA 2024-07-18
ER

PT J
AU Assmann, U
   Bartho, A
   Bürger, C
   Cech, S
   Demuth, B
   Heidenreich, F
   Johannes, J
   Karol, S
   Polowinski, J
   Reimann, J
   Schroeter, J
   Seifert, M
   Thiele, M
   Wende, C
   Wilke, C
AF Assmann, Uwe
   Bartho, Andreas
   Buerger, Christoff
   Cech, Sebastian
   Demuth, Birgit
   Heidenreich, Florian
   Johannes, Jendrik
   Karol, Sven
   Polowinski, Jan
   Reimann, Jan
   Schroeter, Julia
   Seifert, Mirko
   Thiele, Michael
   Wende, Christian
   Wilke, Claas
TI DropsBox: the Dresden Open Software Toolbox Domain-specific modelling
   tools beyond metamodels and transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modelling environment; Domain-specific language;
   Language life cycle; Modelling tool; MDSD; EMF
ID LANGUAGE; UML; VARIABILITY; LIBRARY; DESIGN
AB The Dresden Open Software Toolbox (DropsBox) is a software modelling toolbox consisting of a set of open source tools developed by the Software Technology Group at TU Dresden. The DropsBox is built on top of the Eclipse Platform and the Eclipse Modeling Framework. The DropsBox contributes to the development and application of domain-specific language changes (DSLs) in model-driven software development. It can be customised by tool and language developers to support various activities of a DSL's life cycle ranging from language design to language application and evolution. In this paper, we provide an overview of the DSL life cycle, the DropsBox tools, and their interaction on a common example. Furthermore, we discuss our experiences in developing and integrating tools for DropsBox in an academic environment.
C1 [Assmann, Uwe; Bartho, Andreas; Buerger, Christoff; Cech, Sebastian; Demuth, Birgit; Heidenreich, Florian; Johannes, Jendrik; Karol, Sven; Polowinski, Jan; Reimann, Jan; Schroeter, Julia; Seifert, Mirko; Thiele, Michael; Wende, Christian; Wilke, Claas] Tech Univ Dresden, Inst Software & Multimediatech, Dresden, Germany.
   [Assmann, Uwe; Bartho, Andreas; Buerger, Christoff; Cech, Sebastian; Demuth, Birgit; Heidenreich, Florian; Johannes, Jendrik; Karol, Sven; Polowinski, Jan; Reimann, Jan; Schroeter, Julia; Seifert, Mirko; Thiele, Michael; Wende, Christian; Wilke, Claas] DevBoost GmbH, Berlin, Germany.
C3 Technische Universitat Dresden
RP Johannes, J (corresponding author), Tech Univ Dresden, Inst Software & Multimediatech, Dresden, Germany.
EM jendrik.johannes@gmail.com
RI Reimann, Jan/Q-1984-2019; Polowinski, Jan/E-7990-2017
OI Reimann, Jan/0000-0002-2363-5856; Polowinski, Jan/0000-0003-4703-6847;
   Assmann, Uwe/0000-0002-3513-6448
FU European Commission [034081, 506779, 216691]; German Ministry of
   Education and Research (BMBF); German Research Foundation (DFG);
   European Social Fund; Federal State of Saxony; SAP AG [080949335];
   Federal State of Saxony [080951806, 80937064, 080937065]
FX This research is co-funded by the European Commission within the 6th and
   7th Framework Programme projects MODELPLEX #034081, REWERSE #506779, and
   MOST #216691; the German Ministry of Education and Research (BMBF)
   within the Projects feasiPLe and SuReal; the German Research Foundation
   (DFG) within the Project HyperAdapt; the European Social Fund, Federal
   State of Saxony and SAP AG within the Project #080949335 and the
   European Social Fund and Federal State of Saxony within the Projects
   #080951806 (ZESSY), #80937064 and #080937065. Also, we would like to
   thank all our students, the research community, and our industrial
   project partners for their valuable feedback on all the tools we have
   built over the last years. Without their constructive comments and their
   encouraging words, building DropsBox would have not been possible. Last
   but not least, we thank the anonymous reviewers for their constructive
   and helpful feedback. Their large effort in reviewing the paper helped
   us in enhancing the presentation of our work and to provide a more
   readable paper.
CR Amelunxen C., 2008, 30 INT C SOFTW ENG
   Andersen E.P., 1997, THESIS U OSLO OSLO
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2012, ATL MOD WEAV
   [Anonymous], 1971, Math. Syst. Theory, DOI DOI 10.1007/BF01702865
   [Anonymous], 2012, ATLAS TRANSF LANG
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M, 2009, IEEE T SOFTWARE ENG, V35, P795, DOI 10.1109/TSE.2009.30
   ASSmann Uwe., 2003, INVASIVE SOFTWARE CO
   Bartho A, 2009, INT C PROGRAM COMPRE, P309, DOI 10.1109/ICPC.2009.5090072
   Biermann E., 2006, ECEASST
   Book M., 2003, Proceedings of the Seventh IASTED International Conference on Software Engineering and Applications, P100
   Boyland JT, 2005, J ACM, V52, P627, DOI 10.1145/1082036.1082042
   Bräuer M, 2008, LECT NOTES COMPUT SC, V5002, P182
   Brosch P., 2009, OOPSLA COMPANION, P791
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Burger C., 2010, TECHNICAL REPORT
   Burger C., 2010, LNCS
   Cazzola W, 2009, DSAL09: DOMAIN-SPECIFIC ASPECT LANGUAGES, P11
   Chen K, 2005, LECT NOTES COMPUT SC, V3748, P115
   Chimiak-Opoka J., 2011, ELECT COMMUNICATIONS, V44
   Chimiak-Opoka J, 2009, LECT NOTES COMPUT SC, V5795, P665, DOI 10.1007/978-3-642-04425-0_53
   Clements P., 2002, Software product lines
   Cortellessa V., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1218, DOI 10.1145/1141277.1141565
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Demuth B., 2001, UNIFIED MODELING LAN, P104, DOI DOI 10.1007/3-540-45441-1
   Demuth B., 2009, P RUSS GERM WORKSH I, P81
   Demuth B., 2010, ELECTR COMMUN, V36
   Dmitriev S., 2005, JETBRAINS ONBOARD, V1
   Efftinge S., 2006, WORKSH MOD S ECL SUM
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   FARROW R, 1986, SIGPLAN NOTICES, V21, P85, DOI 10.1145/13310.13320
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Fleurey F, 2008, LECT NOTES COMPUT SC, V5002, P7
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frenzel L., 2006, ECLIPSE LANGUAGE TOO
   Fritzsche M., 2008, LNCS, V5002
   Fritzsche M., 2008, P 4 ECMDA TRAC WORKS, P111
   Fritzsche M., 2009, LNCS
   Geige L., 2007, ELECT COMMUNICATIONS
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Goldschmidt T., 2008, LNCS, V5095
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hedin G., 2000, Informatica, V24, P301
   Heidenreich F., 2011, CEUR WORKSHOP P, P8
   Heidenreich F., 2009, P INT WORKSH REV ENG
   Heidenreich F., 2009, TUDFI0910
   Heidenreich F., 2008, P 2 INT WORKSH VIS S
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V5969, P374
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5560, P39, DOI 10.1007/978-3-642-03764-1_2
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Heidenreich Florian, 2009, P 8 INT C GENERATIVE, P99, DOI DOI 10.1145/1621607.1621624
   Heimann J, 2010, LECT NOTES COMPUT SC, V6395, P78
   Henriksson J., 2009, THESIS TU DRESDEN
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V5969, P3
   Hessellund A, 2007, LECT NOTES COMPUT SC, V4735, P46
   Hussmann H, 2000, LECT NOTES COMPUT SC, V1939, P278
   Jakobsen A.B., 1999, P 10 EUR C SOFTW COS
   Johannes J., 2009, P 7 INT FUJ DAYS TU
   Johannes J., 2011, THESIS TU DRESDEN
   Johannes J., 2010, LNCS, V6395
   Johannes J., 2010, THESIS TU DRESDEN
   Johannes J., 2010, LNCS, V6138
   Jouault F., 2006, P GPCE 06 OCT
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kang K., 1990, CMUSEI90TR0211990
   Kastner Christian, 2010, THESIS U MAGDEBURG
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Kolovos D.S., 2008, THESIS U YORK
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Krahn H., 2007, P DSM 07 MONTR QUEB
   Langworthy D., 2008, MICROSOFT NET DEV SE
   Marconato B., 2010, TOPCASED 2 3 TUTORIA
   Matula M., 2003, Netbeans metadata repository
   Mens T., 2007, P 1 WORKSH REF TOOLS
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Mohamed M, 2009, J OBJECT TECHNOL, V8, P143, DOI 10.5381/jot.2009.8.6.a3
   Morin Brice., 2008, EA '08, P11, DOI DOI 10.1145/1370828.1370832
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Muller P.A., 2006, P MODELS 2006 GEN IT
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Normark K., 2000, 8 INT WORKSH PROGR C
   *OBJ MAN GROUP, 2006, MOF 2 0 COR SPEC
   *OBJ MAN GROUP, 2010, OBJ CONSTR LANG 2 2
   Object Management Group, 2004, HUM US TEXT NOT HUTN
   Odersky M., 2004, Tech. Rep. IC/2004/64
   OMG-Object Management Group, 2007, UML PROF MOD AN REAL
   OMG - Object Management Group, 2010, UN MOD LANG UML VERS
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pawlak R., 2006, RR5901 INRIA
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Polowinski J, 2009, LECT NOTES COMPUT SC, V5617, P601, DOI 10.1007/978-3-642-02556-3_68
   Priss U., 2000, ELECT T ARTIFICIAL I, V4, P21
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Reimann J, 2013, SOFTW SYST MODEL, V12, P579, DOI 10.1007/s10270-012-0243-2
   Riehle D, 1998, ACM SIGPLAN NOTICES, V33, P117, DOI 10.1145/286942.286951
   Roychoudhury S., 2008, THESIS U ALABAMA BIR
   Sacco GM, 2009, INFORM RETRIEVAL SER, V25, P1, DOI 10.1007/978-3-642-02359-0
   Scheidgen M., 2009, TEXTUAL MODELLING FR
   Schmidt M, 2010, LECT NOTES COMPUT SC, V6138, P261, DOI 10.1007/978-3-642-13595-8_21
   Seifert M., 2010, P 1 WORKSH MOD DRIV
   Seifert M., 2011, THESIS TU DRESDEN
   Sloane AM, 2011, LECT NOTES COMPUT SC, V6491, P408, DOI 10.1007/978-3-642-18023-1_12
   Steinberg D., 2009, ECLIPSE MODELING FRA
   Technologies XJ, 2009, ANYLOGIC MULT SIM SO
   Triskell Project Team Kermeta, 2012, TRISK MET KERN
   Van Wyk E, 2008, ELECTRON NOTES THEOR, V203, P103, DOI 10.1016/j.entcs.2008.03.047
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
   Wende C., 2009, P 1 INT WORKSH MOD D
   Wende C., 2010, 2 INT C SOFTW LANG E
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Wilke C., 2012, LNCS, V7304, P321
   Wilke C, 2010, LECT NOTES COMPUT SC, V6394, P361
   WIRTH N, 1977, COMMUN ACM, V20, P822, DOI 10.1145/359863.359883
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Zelkowitz M.V., 2003, Lecture Notes on Empirical Software Engineering, P229
   Zschaler S., 2008, TECHNICAL REPORT
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 128
TC 5
Z9 5
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 133
EP 169
DI 10.1007/s10270-012-0284-6
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000008
DA 2024-07-18
ER

PT J
AU Maoz, S
AF Maoz, Shahar
TI Polymorphic scenario-based specification models: semantics and
   applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Live sequence charts; UML interactions; Sequence diagrams; Polymorphism;
   Scenario-based modeling; Behavioral subtyping
ID UML SEQUENCE DIAGRAMS; CHARTS
AB We present polymorphic scenarios, a generalization of a UML2-compliant variant of Damm and Harel's live sequence charts (LSC) in the context of object-orientation. Polymorphic scenarios are visualized using (modal) sequence diagrams where lifelines may represent classes and interfaces rather than concrete objects. Their semantics takes advantage of inheritance and interface realization to allow the specification of most expressive, succinct, and reusable universal and existential inter-object scenarios for object-oriented system models. We motivate the use of polymorphic scenarios, formally define their trace-based semantics, and present their application for scenario-based testing and execution, as implemented in the S2A compiler developed at the Weizmann Institute of Science. We further discuss advanced semantic issues arising from the use of scenarios in a polymorphic setting, suggest possible extensions, present a UML profile to support polymorphic scenarios, consider the application of the polymorphic semantics to other variants of scenario-based specification languages, and position our work in the broader context of behavioral subtyping.
C1 Weizmann Inst Sci, IL-76100 Rehovot, Israel.
C3 Weizmann Institute of Science
RP Maoz, S (corresponding author), Weizmann Inst Sci, IL-76100 Rehovot, Israel.
EM shahar.maoz@weizmann.ac.il
OI Maoz, Shahar/0000-0002-4022-5349
FU John von Neumann Minerva Center for the Development of Reactive Systems
   at Weizmann Institute of Science; Weizmann Institute from European
   Research Council (ERC) under the European Community
FX This research was supported by The John von Neumann Minerva Center for
   the Development of Reactive Systems at the Weizmann Institute of
   Science. In addition, part of this research was funded by an Advanced
   Research Grant awarded to David Harel of the Weizmann Institute from the
   European Research Council (ERC) under the European Community's 7th
   Framework Programme (FP7/2007-2013). Part of this work was done while
   the author was a post-doctoral researcher at RWTH Aachen University,
   Germany.
CR [Anonymous], 2001, An Automata Theoretic Approach to Branching
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   Atir Y, 2008, LECT NOTES COMPUT SC, V4961, P301, DOI 10.1007/978-3-540-78743-3_23
   Baker P., 2008, Model-Driven Testing Using the UML Testing Profile
   Cengarle M.V., 2009, UML 2 Semantics and Applications, P205, DOI [10.1002/9780470522622, DOI 10.1002/9780470522622]
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   EBERT J, 1994, OBSERVABLE INVOCABLE
   Ebert J, 1997, SPECIALIZATION OBJEC
   EBERT J, 1994, LECT NOTES COMPUTER, V858, P142
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2002, IEEE T SOFTWARE ENG, V28, P889, DOI 10.1109/TSE.2002.1033228
   Harel D, 2001, COMPUTER, V34, P53, DOI 10.1109/2.895118
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Harel D, 2007, LECT NOTES COMPUT SC, V4422, P121
   Haugen O., 2005, SOFTW SYST MODEL, V4, P355
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   KLOSE J, 2001, LNCS, V2031, P512
   Klose J, 2006, LECT NOTES COMPUT SC, V4144, P219, DOI 10.1007/11817963_22
   Knapp A, 1999, LECT NOTES COMPUT SC, V1723, P116
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   KRUGER I, 1998, IFIP C P, V155, P61
   Krüger IH, 2003, LECT NOTES COMPUT SC, V2621, P387
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Lund MS, 2006, LECT NOTES COMPUT SC, V4085, P380
   Maoz S., 2009, ACM T SOFTW IN PRESS
   MAOZ S, 2007, P IEEE S VIS LANG HU, P153
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Maoz S, 2009, LECT NOTES COMPUT SC, V5795, P499, DOI 10.1007/978-3-642-04425-0_38
   Maoz S, 2009, LECT NOTES COMPUT SC, V5421, P109, DOI 10.1007/978-3-642-01648-6_12
   MARELLY R, 2002, P 17 ANN ACM C OBJ O, P83
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   OMG, 2005, UML TEST PROF
   Roychoudhury Abhik., 2007, ESEC FSE 07, P275
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Westphal B, 2006, LECT NOTES COMPUT SC, V3922, P230
   Whittle J., 2005, Software and Systems Modeling, P71, DOI DOI 10.1007/S10270-004-0067-9
NR 39
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 327
EP 345
DI 10.1007/s10270-010-0168-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600005
DA 2024-07-18
ER

PT J
AU Wagelaar, D
   Van der Straeten, R
   Deridder, D
AF Wagelaar, Dennis
   Van der Straeten, Ragnhild
   Deridder, Dirk
TI Module superimposition: a composition technique for rule-based model
   transformation languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Software engineering; Model driven engineering; Model transformation
AB As the application of model transformation becomes increasingly commonplace, the focus is shifting from model transformation languages to the model transformations themselves. The properties of model transformations, such as scalability, maintainability and reusability, have become important. Composition of model transformations allows for the creation of smaller, maintainable and reusable transformation definitions that together perform a larger transformation. This paper focuses on composition for two rule-based model transformation languages: the ATLAS Transformation Language (ATL) and the QVT Relations language. We propose a composition technique called module superimposition that allows for extending and overriding rules in transformation modules. We provide executable semantics as well as a concise and scalable implementation of module superimposition based on ATL.
C1 [Wagelaar, Dennis; Van der Straeten, Ragnhild; Deridder, Dirk] Vrije Univ Brussel, Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Wagelaar, D (corresponding author), Vrije Univ Brussel, Brussels, Belgium.
EM dennis.wagelaar@vub.ac.be; rvdstrae@vub.ac.be; dirk.deridder@vub.ac.be
CR *ATLAS GROUP LINA, 2005, SPEC ATL VIRT MACH
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   BUDINSKY F, 2003, ECLIPSE SERIES
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   JOUAULT F, 2006, P 21 ANN ACM S APPL
   JOUAULT F, 2005, MOD TRANSF PRACT WOR
   Kleppe A., 2006, 1 EUR WORKSH COMP MO
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   KURTEV I, 2006, SAC 06
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   *OBJ MAN GROUP INC, 2004, AD20020410 OBJ MAN G
   Object Management Group Inc, 2008, MET FAC MOF 2 0 QUER
   Vallecillo A, 2008, LECT NOTES COMPUTER, V5063
   WAGELAAR D, 2008, LECT NOTES COMPUTER, V5063
   Wagelaar D, 2007, EUR J INFORM SYST, V16, P362, DOI 10.1057/palgrave.ejis.3000686
NR 19
TC 39
Z9 40
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 285
EP 309
DI 10.1007/s10270-009-0134-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700002
DA 2024-07-18
ER

PT J
AU Garousi, V
AF Garousi, Vahid
TI Incorporating message weights in UML-based analysis of behavioral
   dependencies in distributed systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Behavioral dependency analysis; Message weights; Distributed systems;
   Metrics; UML; Model-driven development; Dependability
ID FLOW-ANALYSIS
AB Behavioral dependency analysis (BDA) and the visualization of dependency information have been identified as a high priority in industrial software systems (in specific, distributed systems). BDA determines the extent to which the functionality of one system entity (e.g., an object or a node) depends on other entities. Among many uses, a BDA is used to perform risk analysis and assessment, load planning, fault tolerance and redundancy provisions in distributed systems. Traditionally, most BDA techniques are based on source code or execution traces of a system. However, as model-driven development is gaining more popularity, there is a need for model-based BDA techniques. To address this need, we proposed in a previous work a metric, referred to as dependency index (DI), for the BDA of distributed objects and nodes based on UML behavioral models (sequence diagrams). However, in our previous BDA work, for simplicity, it was assumed that all messages are equivalent in terms of the dependencies they entail. However, to perform a more realistic BDA on real-world systems, messages must be weighted, e.g., certain messages may be more critical (or important) than others, and thus entail more intensive dependency. To address the above need, we define in this article a family of new BDA metrics, as extensions to our basic DI metric, based on different weighting mechanisms. Through an example application of the proposed metrics, we show that they can be used to predict more realistic dependency information. Furthermore, we derive interesting observations from our dependency analysis that would influence, in practice, practical decisions, which could not have been easily derived without it, e.g., we come up with a suggestion to install more reliable data-transmission network links between two nodes to ensure a reliable communication on links with intensive dependencies.
C1 Univ Calgary, Dept Elect & Comp Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Garousi, V (corresponding author), Univ Calgary, Dept Elect & Comp Engn, Software Qual Engn Res Grp SoftQual, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca
OI Garousi, Vahid/0000-0001-6590-7576
FU Alberta Ingenuity New Faculty Award [200600673]; Natural Sciences and
   Engineering Research Council of Canada (NSERC) [341511-07]
FX This work was supported in part by the Alberta Ingenuity New Faculty
   Award no. 200600673 and also by the Discovery Grant no. 341511-07 from
   the Natural Sciences and Engineering Research Council of Canada (NSERC).
   The author would like to thank the anonymous reviewers for their
   insightful comments and suggestions.
CR [Anonymous], UML 2 0 SUP SPEC
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Brown A., 2001, P 7 IFIPIEEE INT S I, P377, DOI DOI 10.1109/INM.2001.918054
   Card DavidN., 1990, MEASURING SOFTWARE D
   Chen ZQ, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P39, DOI 10.1109/APAQ.2000.883776
   Cheng J., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P223, DOI 10.1007/BFb0019411
   Cortellessa V., 2002, P 3 INT WORKSHOP SOF, P302
   Cox Lisa., 2001, Proceedingsofthe9thinternationalconferenceonconceptualstructures,ICCS, P117
   DANEELS A, 1999, P INT C ACC LARG EXP, P39
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Eisenbarth T, 2001, PROG COMPREHEN, P300, DOI 10.1109/WPC.2001.921740
   FOSDICK LD, 1976, COMPUT SURV, V8, P305, DOI 10.1145/356674.356676
   Garousi V, 2005, LECT NOTES COMPUT SC, V3748, P160
   GAROUSI V, 2005, SCE0513 CARL U
   GAROUSI V, 2006, P INT C MOD DRIV ENG, P365
   GAROUSI V, 2006, P INT C SOFTW ENG, P391
   GAROUSI V, 2008, J SOFTW SYS IN PRESS
   GAROUSI V, 2006, BDANALYZER
   GAROUSI V, 2008, P IEEE INT C SOFTW T, P92
   GAROUSI V, 2006, SCE0603 CARL U
   GITTENS MS, 2004, THESIS U W ONTARIO C
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   *GRAPHV, AT T LABS
   Gu ZH, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P78, DOI 10.1109/REAL.2003.1253256
   Hatcliff J, 2003, PROC INT CONF SOFTW, P160, DOI 10.1109/ICSE.2003.1201197
   HOROWITZ S, 1992, P 14 INT C SOFTW ENG, P392
   ISHIDA T, 1999, P EUR C ADV ART LIF, P555
   Jones C, 1996, COMPUTER, V29, P80, DOI 10.1109/2.485858
   Keller A, 2000, IEEE SYMP COMP COMMU, P78, DOI 10.1109/ISCC.2000.860604
   LI B, 2003, P NET OBJECTDAYS C, P22
   *OMG, 2007, UML 2 1 2 SUP SPEC
   OMG, 2003, UML PROF SCHED PERF
   Pradhan D.K., 1996, Fault-tolerant computer system design
   Systa Tarja., 1999, P WORKSHOP OBJECT OR, P304
   Tsai J., 1996, DISTRIBUTED REAL TIM
   Vaurio JK, 2002, IEEE T RELIAB, V51, P278, DOI 10.1109/TR.2002.801848
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
   [No title captured]
NR 38
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 113
EP 137
DI 10.1007/s10270-008-0111-2
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 526UZ
UT WOS:000272321500007
DA 2024-07-18
ER

PT J
AU Immonen, A
   Niemelä, E
AF Immonen, Anne
   Niemela, Eila
TI Survey of reliability and availability prediction methods from the
   viewpoint of software architecture
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE reliability and availability analysis; software architecture; software
   components
ID MODEL
AB Many future software systems will be distributed across a network, extensively providing different kinds of services for their users. These systems must be highly reliable and provide services when required. Reliability and availability must be engineered into software from the onset of its development, and potential problems must be detected in the early stages, when it is easier and less expensive to implement modifications. The software architecture design phase is the first stage of software development in which it is possible to evaluate how well the quality requirements are being met. For this reason, a method is needed for analyzing software architecture with respect to reliability and availability. In this paper, we define a framework for comparing reliability and availability analysis methods from the viewpoint of software architecture. Our contribution is the comparison of the existing analysis methods and techniques that can be used for reliability and availability prediction at the architectural level. The objective is to discover which methods are suitable for the reliability and availability prediction of today's complex systems, what are the shortcomings of the methods, and which research activities need to be conducted in order to overcome these identified shortcomings. The comparison reveals that none of the existing methods entirely fulfill the requirements that are defined in the framework. The comparison framework also defines the characteristics required of new reliability and availability analysis methods. Additionally, the framework is a valuable tool for selecting the best suitable method for architecture analysis. Furthermore, the framework can be extended and used for other evaluation methods as well.
C1 [Immonen, Anne; Niemela, Eila] VTT Tech Res Ctr Finland, Oulu 90571, Finland.
C3 VTT Technical Research Center Finland
RP Immonen, A (corresponding author), VTT Tech Res Ctr Finland, POB 1100, Oulu 90571, Finland.
EM Anne.Immonen@vtt.fi; Eila.Niemela@vtt.fi
OI Ovaska, Eila/0000-0003-2114-3257
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2003, Web services and service-oriented architecture
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1999, APPL SOFTWARE ARCHIT
   [Anonymous], 1999, DOING HARD TIME DEV
   [Anonymous], SOFTWARE ARCHITECTUR
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   [Anonymous], P 12 INT S SOFTW REL
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], UML PROF MOD QUAL SE
   [Anonymous], P 10 INT S SOFTW REL
   AVIZIENIS A, 2001, LAAS CNRS, P21
   Bachmann F., 2003, 2 INT SOFTW REQ ARCH
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BROWN A, 2004, INTRO MODEL DRIVEN A
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clements P., 2002, Software product lines
   CORTELLESSA V, 2002, 3 INT WORKSH SOFTW R
   CORTELLESSA V, 2004, P 4 INT WORKSH SOFTW
   DOBRICA L, 2003, ICSE
   ELBAUM S, 2001, P ANN REL MAINT S
   EVERETT W, 1999, IEEE S APPL SPEC SYS
   FUGUA NB, 2003, CTR START SHEET, V10, P8
   Garlan D., 1993, ADV SOFTWARE ENG KNO
   GITTENS M, 2004, 15 INT S SOFTW REL E
   GOKHALE S, 2002, P 3 INT S SOFTW REL
   GOKHALE SS, 1998, P IEEE WORKSH APPL S
   GOKHALE SS, 1998, P 9 INT SOFTW REL EN
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   GRASSI V, 2004, P TWIN WORKSH ARCH D
   GREENFIELD J, 2001, UML PROFILE EJB
   IN H, 2001, P 23 INT C SOFTW ENG
   ISO/IEC, 2001, Software engineering-Product quality-Part 1: Quality model
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kazman R., 1998, 4 IEEE INT C ENG COM
   KLEIN M, 1999, WICSA1 1 WORK IFIP C
   Krishnamurthy S., 1997, P 8 INT S SOFTW REL
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LAPRIE JC, 1992, IEEE T SOFTWARE ENG, V18, P130, DOI 10.1109/32.121755
   Lassing N., 1999, P 2 NORD SOFTW ARCH
   LEANGSUKSUN C, 2003, IEEE INT C CLUST COM
   LEANGSUKSUN C, 2003, P 2003 INT C SOFTW E
   Ledoux J, 1999, IEEE T RELIAB, V48, P159, DOI 10.1109/24.784274
   LITTLEWOOD B, 1979, IEEE T RELIAB, V28, P241, DOI 10.1109/TR.1979.5220576
   MATINLASSI M, 2003, P 29 EUR C ANT TURK
   MCCALL J, 1987, RADCTR87171, V1
   MCGREGOR JD, 2003, P 6 ICSE WORKSH COMP
   MOLTER G, 1999, P 2 NORD WORKSH SOFT
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   *OMG, 2003, UN MOD LANG UML 2 0
   *OMG, 2003, UML PROF SCH PERF TI
   *OMG, 2002, UN MOD LANG UML VERS
   Özekici S, 2003, EUR J OPER RES, V149, P459, DOI 10.1016/S0377-2217(02)00461-7
   Purhonen A, 2004, J SYST SOFTWARE, V69, P57, DOI 10.1016/S0164-1212(03)00050-5
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Rodrigues G. N, 2004, 26 INT C SOFTW ENG I
   RODRIGUES GN, 2005, SPRINGER LECT NOTES
   RODRIGUES GN, 2003, P ICSE WORKSH SOFTW
   Roshandel R., 2004, P TWIN WORKSH ARCH D
   RUNESON P, 1998, P 9 INT S SOFTW REL
   SHOOMAN M, 1976, P 2 INT C SOFTW ENG
   Smidts C., 2000, SOFTWARE ENG MEASURE
   Thomason M. G., 1999, P 10 INT S SOFTW REL
   Voas JM, 1998, COMPUTER, V31, P53, DOI 10.1109/2.683008
   WANG WL, 1999, PAC RIM INT S DEP CO
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   ZARRAS A, 2000, P 4 ACM SIGSOFT INT
NR 69
TC 91
Z9 107
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 49
EP 65
DI 10.1007/s10270-006-0040-x
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100004
DA 2024-07-18
ER

PT J
AU Masi, M
   Sellitto, GP
   Aranha, H
   Pavleska, T
AF Masi, Massimiliano
   Sellitto, Giovanni Paolo
   Aranha, Helder
   Pavleska, Tanja
TI Securing critical infrastructures with a cybersecurity digital twin
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture; Reference architecture; Cybersecurity view;
   Digital twin; Threat modeling; Critical infrastructure; Transportation
AB With the diffusion of integrated design environments and tools for visual threat modeling for critical infrastructures, the concept of Digital Twin (DT) is gaining momentum in the field of cybersecurity. Its main use is for enabling attack simulations and evaluation of countermeasures, without causing outage of the physical system. However, the use of a DT is considered foremost as a facilitator of system operation rather than an integral part of its architecture design. In this work, we introduce a specific architecture view in the system representation, called Cybersecurity View. From it, we derive a cybersecurity Digital Twin as part of the security-by-design practice for Industrial Automation and Control Systems used in Critical Infrastructures. Not only this digital twin serves the purpose of simulating cyber-attacks and devising countermeasures, but its design and function are also directly tied to the architecture model of the system for which the cybersecurity requirements are posed. Moreover, this holds regardless of whether the model is generated as part of the development cycle or through an empirical observation of the system as-is. With this, we enable the identification of adequate cybersecurity measures for the system, while improving the overall system design. To demonstrate the practical usefulness of the proposed methodology, its application is illustrated through two real-world use cases: the Cooperative Intelligent Transport System (C-ITS) and the Road tunnel scenario.
C1 [Masi, Massimiliano] Autostrade Per LItalia SpA, IT & Digital Transformat, Via Bergamini, I-00159 Rome, Italy.
   [Pavleska, Tanja] Jozef Stefan Inst, Lab Open Syst & Networks, Jamova cesta 39, Ljubljana 1000, Slovenia.
C3 Slovenian Academy of Sciences & Arts (SASA); Jozef Stefan Institute
RP Masi, M (corresponding author), Autostrade Per LItalia SpA, IT & Digital Transformat, Via Bergamini, I-00159 Rome, Italy.
EM mmasi@autostrade.it; gogiampaolo@gmail.com; hmspider@gmail.com;
   atanja@e5.ijs.si
OI Aranha, Helder/0000-0002-9502-1597; Pavleska, Tanja/0009-0007-3967-2911;
   Masi, Massimiliano/0000-0003-4737-7107
CR Agence Nationale de la Securite des Systemes d'Information, 2014, PRACT CAS ROAD TUN 1
   Andersen C.A., 2003, COST EFFECTIVENESS P, V134, P341
   Anderson K., 2007, P 12 AUSTR WORKSHOP, V86, P3
   [Anonymous], 2016, ISO/IEC 20922:2016
   [Anonymous], 2010, 6244321 IEC
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2021, INTELLIGENT TRANSPOR
   [Anonymous], 2016, 91345 EV DIFN DIN SP
   [Anonymous], 2014, SGCGM490 CEN CENELEC
   [Anonymous], 2014, HLTH INF IHE GLOB 1
   Aranha H, 2021, 2021 IEEE INTERNATIONAL WORKSHOP ON METROLOGY FOR INDUSTRY 4.0 & IOT (IEEE METROIND4.0 & IOT), P704, DOI [10.1109/METROIND4.0IOT51437.2021.9488526, 10.1109/MetroInd4.0IoT51437.2021.9488526]
   Becue A., 2018, P 14 IEEE INT WORKSH, P1
   Bergmeister K., 2004, CAUSES FREQUENCY INC
   Borghetti F., 2019, SPRINGERBRIEGS APPL
   Damjanovic-Behrendt V, 2018, 2018 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P272, DOI 10.1109/IS.2018.8710526
   Dietz Marietheres., 2020, ACM International Conference Proceeding Series, P1, DOI DOI 10.1145/3407023.3407039
   Dix A., 2004, COMP ANAL MONT BLANC
   Eckhart M, 2018, CPSS'18: PROCEEDINGS OF THE 4TH ACM WORKSHOP ON CYBER-PHYSICAL SYSTEM SECURITY, P61, DOI 10.1145/3198458.3198464
   Eckhart Matthias, 2019, Security and quality in cyber-physical systems engineering, P383, DOI [10.1007/978-3-030-25312-7_, 10.1007/978-3-030-25312-7]
   Energy Shield, 2021, DEV CYB TOOLK PROT Y
   ETSI, 2014, ETSI EN 302 637-3 (V1.2. 1)
   ETSI, 2017, 1021651V523 ETSI TS
   ETSI, 2015, 102792V121 ETSI TS
   Franke U, 2018, SOFTW SYST MODEL, V17, P695, DOI 10.1007/s10270-016-0535-z
   Fuller A, 2020, IEEE ACCESS, V8, P108952, DOI 10.1109/ACCESS.2020.2998358
   GDPR (General Data Protection Regulation), 2016, General Data Protection Regulation (GDPR)-Final Text Neatly Arranged
   Grieves M., 2014, White paper
   Hanka T., 2021, IMPACT ACTIVE SCANNI, P557
   Iacob ME, 2014, SOFTW SYST MODEL, V13, P1059, DOI 10.1007/s10270-012-0304-6
   ICT4CART, 2021, CONN FUT AUT DRIV
   Industrial Internet Consortium, 2019, IND INTERNET THINGS, VG1
   Industrial Internet Consortium, 2016, IICPUBG4V10PB2016091, VG4
   Integrating the Healthcare Enterprise, 2019, IHE IT INFRASTRUCTUR
   Johnson P, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3232799
   Jones D, 2020, CIRP J MANUF SCI TEC, V29, P36, DOI 10.1016/j.cirpj.2020.02.002
   Korman M., 2017, P 2 WORKSH CYB PHYS, P73, DOI DOI 10.1145/3055386
   Lim KYH, 2020, J INTELL MANUF, V31, P1313, DOI 10.1007/s10845-019-01512-w
   Mao XY, 2019, LECT NOTES COMPUT SC, V11720, P186, DOI [10.1007/978-3-030-36537-0_9, 10.1007/978-3-030-36537-0]
   MITRE, 2022, ATT&CK for ICS
   NIST, 2021, CYB FRAM
   Njå Å, 2022, FIRE SAFETY J, V127, DOI 10.1016/j.firesaf.2021.103508
   OASIS, 2012, ADV MESS QUEUING PRO
   Pavleska T., 2022, ARCHITECTING EVALUAT, P21
   Pavleska T, 2020, COMM COM INF SC, V1279, P143, DOI 10.1007/978-3-030-58462-7_12
   PIARC-Technical committee, 1999, TECHN COMM 5 ROAD TU
   Pokhrel A., Proc. - 2020 IEEE/ACM 42nd Int. Conf. Softw. Eng. Work. ICSEW, V2020, P671, DOI DOI 10.1145/3387940.3392199
   Ross J., 2006, SSRN ELECT J, DOI DOI 10.2139/SSRN.920666
   Schweichhart K., 2015, REFERENCE ARCHITECTU
   Sellitto GP, 2021, COMM COM INF SC, V1462, P73, DOI 10.1007/978-3-030-86507-8_7
   Sellitto GP, 2021, LECT NOTES BUS INF P, V432, P230, DOI 10.1007/978-3-030-91279-6_16
   Smart Grid Coordination Group, 2012, Technical Report
   Talkhestani BA, 2018, PROC CIRP, V72, P159, DOI 10.1016/j.procir.2018.03.166
   The European Parliament and the Council of European Union, 2004, DIR EU 2004 54 EC MI
   The Open Group, 2019, TOGAF 9 2
   The Open Group, 2021, REF ARCH OP GROUP ST
   The Open Group, 2019, OPEN GROUP SERIES
   Uslar M, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P110, DOI 10.1109/COMPSACW.2014.23
NR 57
TC 6
Z9 6
U1 11
U2 29
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 689
EP 707
DI 10.1007/s10270-022-01075-0
EA JAN 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F2QJ3
UT WOS:000906601000001
DA 2024-07-18
ER

PT J
AU Lorentz, J
   Hartmann, T
   Moawad, A
   Fouquet, F
   Aouada, D
   Le Traon, Y
AF Lorentz, Joe
   Hartmann, Thomas
   Moawad, Assaad
   Fouquet, Francois
   Aouada, Djamila
   Le Traon, Yves
TI CalcGraph: taming the high costs of deep learning using models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Differentiable programming; Computational graph model; Edge AI
ID ARCHITECTURES
AB Models based on differential programming, like deep neural networks, are well established in research and able to outperform manually coded counterparts in many applications. Today, there is a rising interest to introduce this flexible modeling to solve real-world problems. A major challenge when moving from research to application is the strict constraints on computational resources (memory and time). It is difficult to determine and contain the resource requirements of differential models, especially during the early training and hyperparameter exploration stages. In this article, we address this challenge by introducing CalcGraph, a model abstraction of differentiable programming layers. CalcGraph allows to model the computational resources that should be used and then CalcGraph's model interpreter can automatically schedule the execution respecting the specifications made. We propose a novel way to efficiently switch models from storage to preallocated memory zones and vice versa to maximize the number of model executions given the available resources. We demonstrate the efficiency of our approach by showing that it consumes less resources than state-of-the-art frameworks like TensorFlow and PyTorch for single-model and multi-model execution.
C1 [Lorentz, Joe; Hartmann, Thomas; Moawad, Assaad; Fouquet, Francois] DataThings SA, 5 Rue Ind, L-1811 Luxembourg, Luxembourg.
   [Aouada, Djamila; Le Traon, Yves] Univ Luxembourg, Campus Kirchberg,6 Rue Richard Coudenhove Kalergi, L-1359 Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Lorentz, J (corresponding author), DataThings SA, 5 Rue Ind, L-1811 Luxembourg, Luxembourg.
EM joe.lorentz@datathings.com; thomas.hanmann@datathings.com
RI Hartmann, Thomas/I-2479-2017; LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861; Lorentz, Joe/0000-0003-0786-4488;
   Hartmann, Thomas/0000-0002-0465-6280; Aouada,
   Djamila/0000-0002-7576-2064
FU National Research Fund Luxembourg [14297122]
FX The research leading to this publication is supported by the National
   Research Fund Luxembourg (Grant 14297122).
CR Abadi M., P 12 USENIX C OPERAT, P265
   Andrej Karpathy, SOFTWARE 2 0
   Andrychowicz M, 2016, ADV NEUR IN, V29
   [Anonymous], OPTIMISING LUA
   [Anonymous], ONNX OPERATORS
   [Anonymous], MIMALLOC MEMORY ALLO
   [Anonymous], 2012, P 3 ANN C SYST PROGR, DOI DOI 10.1145/2384716.2384723
   [Anonymous], TENSORFLOW OPERATORS
   Baydin AG, 2018, J MACH LEARN RES, V18
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Blalock D, 2020, arXiv
   BOVET DP, 1970, IEEE T COMPUT, VC 19, P492, DOI 10.1109/T-C.1970.222966
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen TC, 2017, AGEING SOC, V37, P1798, DOI 10.1017/S0144686X16000623
   Cho JH, 2019, IEEE I CONF COMP VIS, P4793, DOI 10.1109/ICCV.2019.00489
   Dean J., 2015, NIPS DEEP LEARNING R
   Deep Learning est Mort, 2018, VIVE DIFF PROGR
   Desell T, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P127, DOI 10.1145/3067695.3076002
   Devlin J., 2018, BERT PRE TRAINING DE
   Durner D, 2019, 15TH INTERNATIONAL WORKSHOP ON DATA MANAGEMENT ON NEW HARDWARE (DAMON 2019), DOI 10.1145/3329785.3329918
   Gholami Amir, 2021, ARXIV210313630, DOI DOI 10.1201/9781003162810-13
   HANSEN LK, 1990, IEEE T PATTERN ANAL, V12, P993, DOI 10.1109/34.58871
   Hartmann T, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P300, DOI 10.1109/MODELS.2019.00014
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hartmann T, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P180, DOI 10.1109/MODELS.2017.32
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu Y., 2019, DIFFTAICHI DIFFERENT
   Huang G., 2017, arXiv
   Innes M., 2019, A differentiable programming system to bridge machine learning and scientific computing
   Jacob B, 2018, PROC CVPR IEEE, P2704, DOI 10.1109/CVPR.2018.00286
   Kim T.-H., 2018, ARXIV
   Kingma D. P., 2014, arXiv
   Kononenko I, 2001, ARTIF INTELL MED, V23, P89, DOI 10.1016/S0933-3657(01)00077-X
   LeCun Y., 1989, Neural Information Processing Systems
   Lee BD, 2003, IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P487, DOI 10.1109/CLUSTR.2003.1253355
   Lee S., 2014, P WORKSHOP MEMORY SY, DOI 10.1145/2618128.2618131
   Li H, 2018, IEEE NETWORK, V32, P96, DOI 10.1109/MNET.2018.1700202
   Li LS, 2018, J MACH LEARN RES, V18
   Liang Junwei, 2019, ARXIV
   Margossian CC, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1305
   Murshed M.G.S., 2021, ARXIV
   Paszke A, 2019, ADV NEUR IN, V32
   Pearlmutter BA, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330018
   Plastiras G, 2018, IEEE INT CONF ASAP, P128
   Priya R., 2011, Proceedings of the 2011 World Congress on Information and Communication Technologies (WICT), P1193, DOI 10.1109/WICT.2011.6141418
   Qin Z., 2018, ARXIV
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Sandler M, 2019, ARXIV
   Selvaraju RR, 2020, INT J COMPUT VISION, V128, P336, DOI [10.1007/s11263-019-01228-7, 10.1109/ICCV.2017.74]
   Shrikumar A, 2017, PR MACH LEARN RES, V70
   Simonyan K, 2013, ARXIV
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Stojanovic R, 2001, REAL-TIME IMAGING, V7, P507, DOI 10.1006/rtim.2001.0231
   Sutskever I, 2014, ADV NEUR IN, V27
   Süzen AA, 2020, 2ND INTERNATIONAL CONGRESS ON HUMAN-COMPUTER INTERACTION, OPTIMIZATION AND ROBOTIC APPLICATIONS (HORA 2020), P179, DOI 10.1109/hora49412.2020.9152915
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Vanschoren Joaquin, 2018, ARXIV181003548 CS31
   Vilalta R, 2002, ARTIF INTELL REV, V18, P77, DOI 10.1023/A:1019956318069
   Wang F., 2018, P 32 INT C NEURAL IN, P10201
   Wei Richard, DIFFERENTIABLE PROGR
   Wenzel F., 2021, Hyperparameter ensembles for robustness and uncertainty quantification
   Zhang Y., 2018, FINE GRAINED VISUAL
   Zhou B., 2016, P IEEE C COMP VIS PA, DOI DOI 10.1109/CVPR.2016.319
   Zoph B., 2016, INT C LEARN REPR
   Zoph B, 2018, PROC CVPR IEEE, P8697, DOI 10.1109/CVPR.2018.00907
NR 69
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1151
EP 1174
DI 10.1007/s10270-022-01052-7
EA OCT 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000871804100001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Rosenthal, K
   Strecker, S
   Snoeck, M
AF Rosenthal, Kristina
   Strecker, Stefan
   Snoeck, Monique
TI Modeling difficulties in creating conceptual data models Multimodal
   studies on individual modeling processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual data modeling; Modeling difficulty; Problem solving;
   Cognitive breakdown; Mixed methods research
ID MIXED-METHODS RESEARCH; INFORMATION-SYSTEMS; COGNITIVE LOAD; QUALITY;
   GUIDELINES; NOVICES; DESIGN; DOMAIN; ERRORS; VIEW
AB Conceptual modeling is a learning task essential to students of computer science, software engineering and related programs. Construed as a complex task, surprisingly little is known about the actual act of conceptual modeling, and about modeling difficulties learners experience. Combining complementary modes of observation of learners' modeling processes, we study modeling difficulties encountered while performing a data modeling task. Using the concept of cognitive breakdown, we analyze audiovisual protocols of the individual modelers' modeling processes, recordings of their interactions with the employed modeling software tool and survey data of modelers about their perception of encountered modeling difficulties. In an exploratory study and a follow-up study, we identify eight types of modeling difficulties related to modeling entity types, generalization hierarchies, relationship types, attributes and cardinalities. The identified types of modeling difficulties contribute to a better and more complete understanding of data modeling processes intended to inform design science research on modeling assistance for data modelers at different stages of their learning and mastering of conceptual data modeling.
C1 [Rosenthal, Kristina; Strecker, Stefan] Univ Hagen, Hagen, Germany.
   [Snoeck, Monique] Katholieke Univ Leuven, Leuven, Belgium.
C3 Fern University Hagen; KU Leuven
RP Rosenthal, K (corresponding author), Univ Hagen, Hagen, Germany.
EM kristina.rosenthal@fernuni-hagen.de; stefan.strecker@fernuni-hagen.de;
   monique.snoeck@kuleuven.be
RI Rosenthal, Kristina/KIG-2723-2024; Snoeck, Monique/H-7771-2018
OI Rosenthal, Kristina/0000-0002-7698-2130; Snoeck,
   Monique/0000-0002-3824-3214; Strecker, Stefan/0000-0002-0533-6326
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Ågerfalk PJ, 2013, EUR J INFORM SYST, V22, P251, DOI 10.1057/ejis.2013.6
   [Anonymous], 2009, P 30 INT C INF SYST
   [Anonymous], 2021, ASS COMPUTING MACHIN
   [Anonymous], INT C MODEL DRIVEN E, DOI DOI 10.1007/978-3-319-66302-9_4
   Batra D, 1994, EUR J INFORM SYST, V3, P57, DOI 10.1057/ejis.1994.7
   BATRA D, 1992, INT J MAN MACH STUD, V37, P83, DOI 10.1016/0020-7373(92)90092-Y
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Batra D., 1988, P 9 INT C INFORM SYS
   Batra D, 2007, REQUIR ENG, V12, P231, DOI 10.1007/s00766-006-0040-y
   Bazeley P, 2012, AM BEHAV SCI, V56, P814, DOI 10.1177/0002764211426330
   Becker J, 2009, LECT NOTES COMPUT SC, V5829, P70, DOI 10.1007/978-3-642-04840-1_8
   Bera P., 2011, 5 AM C INF SYST AMCI
   Bera P, 2019, MIS QUART, V43, P1105, DOI 10.25300/MISQ/2019/14163
   Bera P, 2014, INFORM SYST RES, V25, P401, DOI 10.1287/isre.2014.0515
   Berger Peter., 1966, SOCIAL CONSTRUCTION
   Blech C, 2020, THINK REASONING, V26, P552, DOI 10.1080/13546783.2019.1685001
   Bogdanova D, 2018, LECT NOTES BUS INF P, V335, P321, DOI 10.1007/978-3-030-02302-7_20
   Bogdanova D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P672, DOI 10.1109/MODELS-C.2019.00103
   Brodie M., 1984, CONCEPTUAL MODELLING, DOI DOI 10.1007/978-1-4612-5196-5
   Burattin A., LECT NOTES COMPUTER, V1080, P322
   Burton-Jones A, 2008, J ASSOC INF SYST, V9, P748, DOI 10.17705/1jais.00179
   Chaiyasut P., 1994, P 1 INT C OBJ ROL MO, P310
   Chen M. C., 2001, CHI 01 HUM FACT COMP, P281, DOI DOI 10.1145/634067.634234
   Claes J, 2015, INFORM SYST FRONT, V17, P1401, DOI 10.1007/s10796-015-9585-y
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Elmasri Ramez., 2017, Fundamentals of database systems
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P1, DOI 10.1007/978-3-642-15865-0
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Frank U, 1999, ASSOCIATION FOR INFORMATION SYSTEMS - PROCEEDINGS OF THE FIFTH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 1999), P695
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P39, DOI 10.1007/s12599-013-0301-5
   Gregor S, 2006, MIS QUART, V30, P611
   Hirschheim R., 2008, INFORM SYSTEMS DEV D
   Hoppenbrouwers SJBA, 2006, LECT NOTES COMPUT SC, V4278, P1242
   Hoppenbrouwers SJBA, 2005, LECT NOTES COMPUT SC, V3716, P128
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Kayama M, 2014, 2014 IIAI 3RD INTERNATIONAL CONFERENCE ON ADVANCED APPLIED INFORMATICS (IIAI-AAI 2014), P616, DOI 10.1109/IIAI-AAI.2014.131
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Leung Felix., 2005, P P 38 ANN HAWAII IN, V7, P188
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Nickerson RC, 2013, EUR J INFORM SYST, V22, P336, DOI 10.1057/ejis.2012.26
   NIELSEN J, 1994, INT J HUM-COMPUT ST, V41, P385, DOI 10.1006/ijhc.1994.1065
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pinggera J., 2014, MODELING MIND BEHAV, V175, P1
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Polanyi M., 1966, Knowledge in Organisations
   Pretz J.E., 2003, PSYCHOL PROBLEM SOLV, P3, DOI DOI 10.1017/CBO9780511615771.002
   Rodden K., 2007, Web Information Seeking and Interaction, P29, DOI [10.1 080/02626667.2013.825722, DOI 10.1080/02626667.2013.825722]
   Rosenthal K., 2020, 39 INT C CONCEPTUAL, P501, DOI [10.1007/978-3-030-62522-1_37, DOI 10.1007/978-3-030-62522-1_37]
   Rosenthal K., 2020, MODELLIERUNG 2020, P77
   Rosenthal K., 2019, P 40 INT C INF SYST
   Rosenthal K., 2019, RES PAPER 137
   Schoonenboom J, 2017, KOLNER Z SOZIOL SOZ, V69, P107, DOI 10.1007/s11577-017-0454-1
   Sedrakyan G, 2014, COMPUT HUM BEHAV, V41, P486, DOI 10.1016/j.chb.2014.09.054
   Serral Estefania, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549293
   Shanks G., 1997, Australian Journal of Information Systems, V4, P63
   Siau K, 2005, DATA KNOWL ENG, V55, P343, DOI 10.1016/j.datak.2004.12.006
   SRINIVASAN A, 1995, MANAGE SCI, V41, P419, DOI 10.1287/mnsc.41.3.419
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Ternes B., 2020, DEMO TRACK 39 INT C, P178
   Ternes B., 2020, SHORT WORKSH TOOLS D, V2542, P198
   Ternes B., 2021, EUR C INF SYST ECIS
   Topi H., 2002, Journal of Database Management, V13, P3, DOI 10.4018/jdm.2002040101
   Van Someren MW, 1994, AcademicPress
   Venable J. R., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P50, DOI 10.1109/SEEP.1996.533980
   Venkatesh V, 2016, J ASSOC INF SYST, V17, P435, DOI 10.17705/1jais.00433
   Venkatesh V, 2013, MIS QUART, V37, P21
   VERBI Software, 2018, 12 VERBI SOFTW
   VESSEY I, 1994, COMMUN ACM, V37, P102, DOI 10.1145/175290.175305
   Walsham G, 1995, INFORM SYST RES, V6, P376, DOI 10.1287/isre.6.4.376
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Weber B, 2016, P ANN HICSS, P600, DOI 10.1109/HICSS.2016.81
   Wilmont I, 2017, LECT NOTES BUS INF P, V286, P59, DOI 10.1007/978-3-319-60048-2_6
   Wilmont I, 2013, LECT NOTES COMPUT SC, V8217, P74, DOI 10.1007/978-3-642-41924-9_7
   Wilmont I, 2010, LECT NOTES BUS INF P, V50, P301
   Zugal S, 2013, INT J INF SYST MODEL, V4, P23, DOI 10.4018/jismd.2013040102
NR 83
TC 1
Z9 1
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 1005
EP 1030
DI 10.1007/s10270-022-01051-8
EA OCT 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000867517500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Süss, JG
   Swift, S
   Escott, E
AF Suess, Joern Guy
   Swift, Samantha
   Escott, Eban
TI Using DevOps toolchains in Agile model-driven engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE DevOps; CI; CD; Ant; EMF; Eclipse; Agile; Model-driven engineering; MDE
AB For model-driven engineering (MDE) to become more Agile, the community needs to embrace development and operations (DevOps) practices. One of the core practices of DevOps is the use of pipelines to enable CI/CD to make teams more Agile and break down the barriers between development and operations with faster deployments. Current MDE tooling is not designed at its core to participate in DevOps pipelines. Consequently this makes the adoption of MDE in industry more difficult. In this article, we cover an industrial experience report describing how we enabled our pipelines using DevOps and MDE.
C1 [Suess, Joern Guy; Swift, Samantha; Escott, Eban] Codebots Pty Ltd, Res & Dev, 55 Railway Terrace, Milton, Qld 4064, Australia.
RP Süss, JG (corresponding author), Codebots Pty Ltd, Res & Dev, 55 Railway Terrace, Milton, Qld 4064, Australia.
EM joern.guy.suess@codebots.com; samantha.swift@codebots.com;
   eban.escott@codebots.com
OI Suss, Jorn Guy/0000-0002-3516-9143
CR Alfraihi H, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P451, DOI 10.5220/0006207004510458
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Bzivin J., 1994, OBJECT ORIENTED TECH, P1617
   Debois P., 2011, LOGIN USENIX MAG, V36
   Fowler M., 2005, Continuous integration
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
NR 7
TC 3
Z9 3
U1 5
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1495
EP 1510
DI 10.1007/s10270-022-01003-2
EA MAY 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000794097800001
DA 2024-07-18
ER

PT J
AU Zadahmad, M
   Syriani, E
   Alam, O
   Guerra, E
   de Lara, J
AF Zadahmad, Manouchehr
   Syriani, Eugene
   Alam, Omar
   Guerra, Esther
   de Lara, Juan
TI DSMCompare: domain-specific model differencing for graphical
   domain-specific languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model differencing; Domain-specific languages;
   Graphical concrete syntax
ID TRANSFORMATION; EVOLUTION; TOOLS
AB During the development of a software project, different developers collaborate on creating and changing models. These models evolve and need to be versioned. Over the past several years, progress has been made in offering dedicated support for model versioning that improves on what is being supported by text-based version control systems. However, there is still need to understand model differences in terms of the semantics of the modeling language, and to visualize the changes using its concrete syntax. To address these issues, we propose a comprehensive approach-called DSMCompare-that considers both the abstract and the concrete syntax of a domain-specific language (DSL) when expressing model differences, and which supports defining domain-specific semantics for specific difference patterns. The approach is based on the automatic extension of the DSL to enable the representation of changes and on the automatic adaptation of its graphical concrete syntax to visualize the differences. In addition, we allow for the definition of semantic differencing rules to capture recurrent domain-specific difference patterns. Since these rules can be conflicting with each other, we introduce algorithms for conflict resolution and rule scheduling. To demonstrate the applicability and effectiveness of our approach, we report on evaluations based on synthetic models and on version histories of models developed by third parties.
C1 [Zadahmad, Manouchehr; Syriani, Eugene] Univ Montreal, Montreal, PQ, Canada.
   [Alam, Omar] Trent Univ, Peterborough, ON, Canada.
   [Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
C3 Universite de Montreal; Trent University; Autonomous University of
   Madrid
RP Syriani, E (corresponding author), Univ Montreal, Montreal, PQ, Canada.
EM syriani@iro.umontreal.ca; esther.guerra@uam.es; juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014; Zadahmad,
   Manouchehr/M-8920-2015
OI Zadahmad, Manouchehr/0000-0003-3052-553X
CR Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Al-Herz A, 2022, DISCRETE APPL MATH, V308, P46, DOI 10.1016/j.dam.2019.09.013
   Altmanninger K., 2008, 1 INT WORKSH MOD COE
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], CDO MODEL REPOSITORY
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Babur Ö, 2019, J COMPUT LANG, V51, P57, DOI 10.1016/j.cola.2018.12.002
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Brosch P., 2010, ACM SIGPLAN C OBJ OR, P43
   Brosch P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a2
   Brosch P, 2009, ECSCW 2009: PROCEEDINGS OF THE 11TH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207, DOI 10.1007/978-1-84882-854-4_12
   Brun COdric., 2008, UPGRADE, The European Journal for the Informatics Professional IX, V2, P29
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Espinazo-Pagan J., 2010, P 1 INT WORKSH MOD C, P56
   Garcia Jokin., 2013, Software Language Engineering, Lecture Notes in Computer Science, P144
   Gleicher M, 2018, IEEE T VIS COMPUT GR, V24, P413, DOI 10.1109/TVCG.2017.2744199
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V5969, P3
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation, DOI [10.1002/9780470249260, DOI 10.1002/9780470249260]
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kramler Gerhard., 2006, Proceedings of the 2006 international workshop on Global integrated model management, pp, P43
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Lambers L, 2006, LECT NOTES COMPUT SC, V4178, P61
   Lambers L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/3180155.3180258
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a4
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Maoz Shahar, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P194, DOI 10.1007/978-3-642-21210-9_19
   Maoz S, 2018, SOFTW SYST MODEL, V17, P753, DOI 10.1007/s10270-016-0552-y
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   MPS, Differences viewer for files
   MPS, Version Control
   Ohst D., 2003, Software Engineering Notes, V28, P227, DOI 10.1145/949952.940102
   OMG, 2014, OMG document formal/2014-02-03
   OMG, XMI MET INT V 2 5 1
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Reuling D, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a8
   Schipper A, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P336
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Störrle H, 2017, SCI COMPUT PROGRAM, V134, P47, DOI 10.1016/j.scico.2015.07.010
   Storrle Harald., 2010, ECSA COMPANION VOLUM, P285
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Syriani E, 2013, SOFTW SYST MODEL, V12, P387, DOI 10.1007/s10270-011-0205-0
   Tanhaei M, 2016, INFORM SOFTWARE TECH, V80, P138, DOI 10.1016/j.infsof.2016.08.011
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   van Duin M, 2010, MACROMOL SYMP, V291-292, P66, DOI 10.1002/masy.201050508
   Vermolen Sander D., 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P201, DOI 10.1007/978-3-642-28830-2_11
   Wenzel S., 2008, Proceedings of the 2008 international workshop on Comparison and versioning of software models (CSVM'08), 10-18 May 2008, Leipzig Germany, P41
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Zadahmad M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P100, DOI 10.1145/3357766.3359537
NR 61
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 2067
EP 2096
DI 10.1007/s10270-021-00971-1
EA JAN 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000739769600001
DA 2024-07-18
ER

PT J
AU Höppner, S
   Kehrer, T
   Tichy, M
AF Hoeppner, Stefan
   Kehrer, Timo
   Tichy, Matthias
TI Contrasting dedicated model transformation languages versus general
   purpose languages: a historical perspective on ATL versus Java based on
   complexity and size
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE ATL; Java; Model transformations; Model transformation language; General
   purpose language; Comparison; MTL versus GPL; Historical perspective;
   Complexity measure; Size measure
ID FAULT PRONENESS; SOFTWARE; METRICS
AB Model transformations are among the key concepts of model-driven engineering (MDE), and dedicated model transformation languages (MTLs) emerged with the popularity of the MDE pssaradigm about 15 to 20 years ago. MTLs claim to increase the ease of development of model transformations by abstracting from recurring transformation aspects and hiding complex semantics behind a simple and intuitive syntax. Nonetheless, MTLs are rarely adopted in practice, there is still no empirical evidence for the claim of easier development, and the argument of abstraction deserves a fresh look in the light of modern general purpose languages (GPLs) which have undergone a significant evolution in the last two decades. In this paper, we report about a study in which we compare the complexity and size of model transformations written in three different languages, namely (i) the Atlas Transformation Language (ATL), (ii) Java SE5 (2004-2009), and (iii) Java SE14 (2020); the Java transformations are derived from an ATL specification using a translation schema we developed for our study. In a nutshell, we found that some of the new features in Java SE14 compared to Java SE5 help to significantly reduce the complexity of transformations written in Java by as much as 45%. At the same time, however, the relative amount of complexity that stems from aspects that ATL can hide from the developer, which is about 40% of the total complexity, stays about the same. Furthermore we discovered that while transformation code in Java SE14 requires up to 25% less lines of code, the number of words written in both versions stays about the same. And while the written number of words stays about the same their distribution throughout the code changes significantly. Based on these results, we discuss the concrete advancements in newer Java versions. We also discuss to which extent new language advancements justify writing transformations in a general purpose language rather than a dedicated transformation language. We further indicate potential avenues for future research on the comparison of MTLs and GPLs in a model transformation context.
C1 [Hoeppner, Stefan; Tichy, Matthias] Ulm Univ, D-89081 Ulm, Germany.
   [Kehrer, Timo] Humboldt Univ, D-10099 Berlin, Germany.
C3 Ulm University; Humboldt University of Berlin
RP Höppner, S (corresponding author), Ulm Univ, D-89081 Ulm, Germany.
EM stefan.hoeppner@uni-ulm.de; timo.kehrer@informatik.hu-berlin.de;
   matthias.tichy@uni-ulm.de
RI Kehrer, Timo/AAI-6563-2020
OI Kehrer, Timo/0000-0002-2582-5557; Hoppner, Stefan/0000-0001-7028-131X
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Akehurst DH, 2006, LECT NOTES COMPUT SC, V4199, P351
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Aniche M., 2015, JAVA CODE METRICS CA
   Anjorin A., 2017, TTC 17
   Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2014, Business process model and notation (bpmn) v2.0.2
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Batory D, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P319, DOI 10.5220/0008942803190327
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Beurer-Kellner L., 2020, TRANSF TOOL CONT C S
   Born K, 2015, LECT NOTES COMPUT SC, V9033, P165, DOI 10.1007/978-3-662-46675-9_11
   Boronat A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P78, DOI 10.1145/3239372.3239386
   Buchmann T, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P336, DOI 10.5220/0006563503360345
   Budinsky F., 2008, EMF ECLIPSE MODELING
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P194, DOI 10.1007/978-3-540-87405-8_14
   Getir S. etal, 2017, TRANSF TOOL CONT C S, P65
   Götz S, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P122, DOI 10.5220/0010340801220135
   Götz S, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a12
   Götz S, 2021, SOFTW SYST MODEL, V20, P469, DOI 10.1007/s10270-020-00815-4
   Gray J., 2003, 36th Hawaii International Conference on Systems Sciences
   Groner R, 2021, J Object Technol 20.2. OPEN REGULAR ISSUE, V2, P1, DOI [10.5381/jot.2021.20.2.a5, DOI 10.5381/JOT.2021.20.2.A5]
   Hebig R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P445, DOI 10.1145/3236024.3236046
   Hinkel G, 2016, NMF MODELING FRAMEWO
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Hoppner S., CONTRASTING DEDICATE, DOI [10.18725/OPARU-38923, DOI 10.18725/OPARU-38923]
   Horn Tassilo, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P56, DOI 10.1007/978-3-642-38883-5_7
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jouault F., 2013, ATL TUTORIALS CREAT
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Kehrer T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P638, DOI 10.1109/ICSM.2012.6405342
   Krikava F., 2014, S APPL COMPUTING GYE, P2, DOI DOI 10.1145/2554850.2555127
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Leblebici Erhan., 2014, P 13 INT WORKSHOP GR, P67
   Martínez S, 2017, SCI COMPUT PROGRAM, V136, P1, DOI 10.1016/j.scico.2016.08.006
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nair TRG, 2012, INFORM SOFTWARE TECH, V54, P274, DOI 10.1016/j.infsof.2011.10.001
   Nils W, 2019, LECT NOTES COMPUT SC, V11629, P131, DOI 10.1007/978-3-030-23611-3_8
   Object Management Group (OMG), 2016, MET OBJ FAC MOF QUER
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Rentschler A., 2014, P 13 INT C MODULARIT, DOI [10.1145/2577080.2577094, DOI 10.1145/2577080.2577094]
   Rindt Michaela, 2014, DEMOS MODELS, V14
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2022, IEEE T SOFTWARE ENG, V48, P1097, DOI 10.1109/TSE.2020.3011388
   Schultheiss A., 2020, SPLC 20 24 ACM INT S
   Schultheiss A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a3
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Singh Yogesh, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P664
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   van Amstel M.F., 2011, MTATL TOOLS
   Vignaga A., 2009, METRICS MEASURING AT
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Yi Guo, 2011, 2011 18th Working Conference on Reverse Engineering, P239, DOI 10.1109/WCRE.2011.36
   Zundorf A., 2013, 6 TRANSF TOOL CONT I
NR 61
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 805
EP 837
DI 10.1007/s10270-021-00937-3
EA NOV 2021
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000719682600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Kilincceker, O
   Turk, E
   Belli, F
   Challenger, M
AF Kilincceker, Onur
   Turk, Ercument
   Belli, Fevzi
   Challenger, Moharram
TI Model-based ideal testing of hardware description language (HDL)
   programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based testing; Ideal testing; Mutation testing; Behavioral model;
   Hardware description language
ID MUTATION; SIMULATION; CHECKERS
AB An ideal test is supposed to show not only the presence of bugs but also their absence. Based on the Fundamental Test Theory of Goodenough and Gerhart (IEEE Trans Softw Eng SE-1(2):156-173, 1975), this paper proposes an approach to model-based ideal testing of hardware description language (HDL) programs based on their behavioral model. Test sequences are generated from both original (fault-free) and mutant (faulty) models in the sense of positive and negative testing, forming a holistic test view. These test sequences are then executed on original (fault-free) and mutant (faulty) HDL programs, in the sense of mutation testing. Using the techniques known from automata theory, test selection criteria are developed and formally show that they fulfill the major requirements of Fundamental Test Theory, that is, reliability and validity. The current paper comprises a preparation step (consisting of the sub-steps model construction, model mutation, model conversion, and test generation) and a composition step (consisting of the sub-steps pre-selection and construction of Ideal test suites). All the steps are supported by a toolchain that is already implemented and is available online. To critically validate the proposed approach, three case studies (a sequence detector, a traffic light controller, and a RISC-V processor) are used and the strengths and weaknesses of the approach are discussed. The proposed approach achieves the highest mutation score in positive and negative testing for all case studies in comparison with two existing methods (regular expression-based test generation and context-based random test generation), using four different techniques.
C1 [Kilincceker, Onur; Belli, Fevzi] Paderborn Univ, Paderborn, Germany.
   [Kilincceker, Onur] Mugla Sitki Kocman Univ, Mentese, Turkey.
   [Turk, Ercument] Ege Univ, Bornova, Turkey.
   [Belli, Fevzi] Izmir Inst Technol, Urla, Turkey.
   [Challenger, Moharram] Univ Antwerp, Antwerp, Belgium.
   [Challenger, Moharram] Flanders Make Strateg Res Ctr, Leuven, Belgium.
C3 University of Paderborn; Mugla Sitki Kocman University; Ege University;
   Izmir Institute of Technology; University of Antwerp
RP Kilincceker, O (corresponding author), Paderborn Univ, Paderborn, Germany.; Kilincceker, O (corresponding author), Mugla Sitki Kocman Univ, Mentese, Turkey.; Challenger, M (corresponding author), Univ Antwerp, Antwerp, Belgium.; Challenger, M (corresponding author), Flanders Make Strateg Res Ctr, Leuven, Belgium.
EM okilinc@mail.upb.de; ercument_turk@hotmail.com; belli@upb.de;
   moharram.challenger@uantwerpen.be
RI Kilincceker, Onur/KHV-3755-2024; Challenger, Moharram/E-2164-2014;
   Kilincceker, Onur/I-6416-2018
OI Challenger, Moharram/0000-0002-5436-6070; Kilincceker,
   Onur/0000-0001-5996-4398
FU University of Antwerp and Flanders Make (a strategic research center)
   [43169]
FX Y The authors express their gratitude to John B. Goodenough for his
   valuable comments and suggestions on earlier versions of this article.
   The authors also thank anonymous reviewers for their valuable comments
   on an earlier version. This study is financially supported by University
   of Antwerp and Flanders Make (a strategic research center) under Grant
   No. 43169.
CR AbouTrab MS, 2012, P INT COMP SOFTW APP, P660, DOI 10.1109/COMPSAC.2012.93
   Adir A., 2011, Design Automation and Test in Europe Conference (DATE), P1
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], 2008, ANN MATH COMPUT TELE
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1963, IEEE Transactions on Electronic Computers, DOI DOI 10.1109/PGEC.1963.263416
   [Anonymous], 1961, Surveys, DOI [10.1070/RM1961v016n05ABEH004112, DOI 10.1070/RM1961V016N05ABEH004112]
   [Anonymous], 2015, P ARCS 28 INT C ARCH
   [Anonymous], 1960, IRE transactions on Electronic Computers, DOI [DOI 10.1109/TEC.1960.5221603, 10.1109/TEC.1960.5221603]
   August N, 2008, ISQED 2008: PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON QUALITY ELECTRONIC DESIGN, P423, DOI 10.1109/ISQED.2008.40
   Belli, 1978, THESIS TU BERLIN, V119
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Belli F., 2012, FERS MITTEILUNGEN, V30, P1
   Belli F., 2006, SICHERHEIT 2006
   Belli F, 2016, SCI COMPUT PROGRAM, V120, P25, DOI 10.1016/j.scico.2016.01.003
   Belli F, 2014, SOFTWARE PRACT EXPER, V44, P201, DOI 10.1002/spe.2161
   Bengtsson T., 2004, SURVEY HIGH LEVEL TE
   Bloem R., 2002, Journal of the Telematics Engineering Society, V2, P30
   BOUGE L, 1985, THEOR COMPUT SCI, V37, P151, DOI 10.1016/0304-3975(85)90090-8
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Bushnell M., 2004, Essentials of electronic testing for digital, memory and mixed-signal VLSI circuits, V17
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Devadze S, 2003, IEEE REGION 8 EUROCON 2003, VOL A, PROCEEDINGS, P57
   Dijkstra EW., 1972, CHAPTER NOTES STRUCT
   Eggers B., 1984, Fault-Tolerant Computing Systems. 2nd GI/NTG/GMR Conference, P139
   Fabbri S. C. P. F., 1999, Proceedings. SCCC'99 XIX International Conference of the Chilean Computer Science Society, P96, DOI 10.1109/SCCC.1999.810159
   Fellner A, 2021, SOFTW SYST MODEL, V20, P405, DOI 10.1007/s10270-020-00850-1
   Fellner A, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3289256
   Ferrandi F, 1998, INT TEST CONF P, P587, DOI 10.1109/TEST.1998.743202
   Ferrandi F, 2001, DESIGN, AUTOMATION AND TEST IN EUROPE, CONFERENCE AND EXHIBITION 2001, PROCEEDINGS, P403, DOI 10.1109/DATE.2001.915056
   Flake P, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3386337
   Fraser G, 2008, SOFTWARE QUAL J, V16, P161, DOI 10.1007/s11219-007-9031-6
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gautschi M, 2017, IEEE T VLSI SYST, V25, P2700, DOI 10.1109/TVLSI.2017.2654506
   Glasser M, 2009, OPEN VERIFICATION METHODOLOGY COOKBOOK, P1, DOI 10.1007/978-1-4419-0968-8
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hampton M, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P203, DOI 10.1109/TAIC.PART.2007.39
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Jervan G, 2002, SEVENTH IEEE INTERNATIONAL HIGH-LEVEL DESIGN VALIDATION AND TEST WORKSHOP, PROCEEDINGS, P169, DOI 10.1109/HLDVT.2002.1224448
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   KANNAVARA R, 2013, IISA 2013, P1
   Karimi Elmira, 2013, 2013 IFIP/IEEE 21st International Conference on Very Large Scale Integration (VLSI-SoC), P54, DOI 10.1109/VLSI-SoC.2013.6673246
   Karimi E, 2013, PROCEEDINGS OF IEEE EAST-WEST DESIGN & TEST SYMPOSIUM (EWDTS 2013)
   Kilincceker O., 2018, ARCS WORKSHOP 2018 3, P1
   Kilincceker O., 2017, 11 TURK NATL SOFTW E, P332
   Kilincceker O., 2019, P 1 INT INF SOFTW EN, P1
   Kilincceker O, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P170, DOI 10.1109/QRS-C.2019.00044
   Kilincceker O, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P585, DOI 10.1109/QRS-C.2018.00103
   Kleene S.C., 1951, Representation of events in nerve nets and finite automata
   Lajolo M, 2000, IEEE INTERNATIONAL HIGH-LEVEL DESIGN VALIDATION AND TEST WORKSHOP, PROCEEDINGS, P21, DOI 10.1109/HLDVT.2000.889554
   Lam W.K., 2005, HARDWARE DESIGN VERI
   Lotfy A., 2015, IEEE CUST INTEGR CIR, P1
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Mens T, 2019, SOFTW SYST MODEL, V18, P837, DOI 10.1007/s10270-018-0676-3
   Mercan G., 2018, CEUR WORKSHOP PROC, V2201
   Mishra P, 2017, IEEE DES TEST, V34, P68, DOI 10.1109/MDAT.2017.2691348
   Moore Edward F., 1959, P INT S SWITCH THEOR, P285
   Naik Kshirasagar., 2011, SOFTWARE TESTING QUA
   Nguyen T., 2001, P 11 IFIP INT C VER, P118
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Petrenko A, 2019, SOFTW SYST MODEL, V18, P825, DOI 10.1007/s10270-017-0613-x
   Prasetya ISWB, 2021, SOFTW SYST MODEL, V20, P383, DOI 10.1007/s10270-020-00848-9
   Rahkonen, 2016, THESIS TAMPERE U TEC
   Robach C, 2003, FR ELECTR T, P195
   Rodger S.H., 2006, JFLAP: An Interactive Formal Languages and Automata Package
   Salomaa Arto., 2014, Theory of automata
   Shin D, 2016, SOFTW SYST MODEL, V15, P631, DOI 10.1007/s10270-014-0428-y
   Silistre Alper, 2020, 2020 15th Conference on Computer Science and Information Systems (FedCSIS), P657, DOI 10.15439/2020F163
   Stumptner M, 1996, ARTIFICIAL INTELLIGENCE IN DESIGN '96, P541
NR 80
TC 0
Z9 0
U1 8
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1209
EP 1240
DI 10.1007/s10270-021-00934-6
EA NOV 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000716923600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   Delgado, A
   Ruiz, F
   Bacigalupe, V
   Piattini, M
AF Perez-Castillo, Ricardo
   Delgado, Andrea
   Ruiz, Francisco
   Bacigalupe, Virginia
   Piattini, Mario
TI A method for transforming knowledge discovery metamodel to ArchiMate
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture; ArchiMate; Knowledge discovery metamodel; Model
   transformation; MDE; ATL
ID DYNAMIC BAYESIAN NETWORKS; ENTERPRISE ARCHITECTURE; SYSTEM
AB Enterprise architecture has become an important driver to facilitate digital transformation in companies, since it allows to manage IT and business in a holistic and integrated manner by establishing connections among technology concerns and strategical/motivational ones. Enterprise architecture modelling is critical to accurately represent business and their IT assets in combination. This modelling is important when companies start to manage their enterprise architecture, but also when it is remodelled so that the enterprise architecture is realigned in a changing world. Enterprise architecture is commonly modelled by few experts in a manual way, which is error-prone and time-consuming and makes continuous realignment difficult. In contrast, other enterprise architecture modelling proposal automatically analyses some artefacts like source code, databases, services, etc. Previous automated modelling proposals focus on the analysis of individual artefacts with isolated transformations toward ArchiMate or other enterprise architecture notations and/or frameworks. We propose the usage of Knowledge Discovery Metamodel (KDM) to represent all the intermediate information retrieved from information systems' artefacts, which is then transformed into ArchiMate models. Thus, the core contribution of this paper is the model transformation between KDM and ArchiMate metamodels. The main implication of this proposal is that ArchiMate models are automatically generated from a common knowledge repository. Thereby, the relationships between different-nature artefacts can be exploited to get more complete and accurate enterprise architecture representations.
C1 [Perez-Castillo, Ricardo] Univ Castilla La Mancha, Fac Social Sci & IT, Av Real Febr Sedas S-N, Talavera De La Reina 45600, Spain.
   [Delgado, Andrea; Bacigalupe, Virginia] Univ La Republ, Fac Ingn, Inst Comp, Montevideo 11300, Uruguay.
   [Ruiz, Francisco; Piattini, Mario] Univ Castilla La Mancha, Informat Technol & Syst Inst ITSI, Paseo Univ 4, Ciudad Real 13071, Spain.
C3 Universidad de Castilla-La Mancha; Universidad de la Republica, Uruguay;
   Universidad de Castilla-La Mancha
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, Fac Social Sci & IT, Av Real Febr Sedas S-N, Talavera De La Reina 45600, Spain.
EM ricardo.pdelcastillo@uclm.es; adelgado@fing.edu.uy;
   francisco.ruizg@uclm.es; mbacigalupe@fing.edu.uy; mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Ruiz, Francisco/D-4295-2011; Delgado,
   Andrea/J-5801-2018
OI Piattini, Mario/0000-0002-7212-8279; Ruiz,
   Francisco/0000-0002-4923-7848; Delgado, Andrea/0000-0003-4749-9366
FU Direccion General de Universidades, Investigacion e Innovacion -
   Consejeria de Educacion, Cultura y Deportes and Gobierno de Castilla-La
   Mancha (JCCM) [SBPLY/17/180501/000150, SBPLY/17/180501/000293,
   SBPLY/17/180501/000364]; Ministerio de Economia, Industria y
   Competitividad y Fondos FEDER [RTI2018-094283-B-C31,
   RTI2018-098309-B-C31]
FX This study has been partially funded by the following projects: G3SOFT
   (SBPLY/17/180501/000150), GEMA (SBPLY/17/180501/000293) and SOS
   (SBPLY/17/180501/000364), funded by the 'Direccion General de
   Universidades, Investigacion e Innovacion -Consejeria de Educacion,
   Cultura y Deportes and Gobierno de Castilla-La Mancha (JCCM)'. This work
   is also part of the projects BIZDEVOPS-Global (RTI2018-098309-B-C31) and
   ECLIPSE project (RTI2018-094283-B-C31) funded by Ministerio de Economia,
   Industria y Competitividad y Fondos FEDER.
CR Alarcos Research Group, 2019, ARCH TOOL
   Alwadain A, 2016, DATA KNOWL ENG, V105, P39, DOI 10.1016/j.datak.2015.09.004
   [Anonymous], 2006, the Proceedings of the First International Conference on Design Science Research in Information Systems and Technology
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], TOGAF WORLDW
   [Anonymous], 2013, Business Process Model and Notation (BPMN), P532
   Bacigalupe V., 2020, KDM2ARCHIMATE MODEL
   Beauvoir P., 2020, ARCHI ARCHIMATE MODE
   Bebensee B, 2019, IEEE INT ENTERP, P17, DOI 10.1109/EDOCW.2019.00017
   Bogner J, 2016, IEEE INT ENTERP, P158
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Buckl S., 2007, LNI P, V2007, P33
   Caivano D, 2018, J SYST SOFTWARE, V144, P143, DOI 10.1016/j.jss.2018.06.026
   Chasioti K., 2019, THESIS UTRECHT U
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   de Kinderen S, 2012, LECT NOTES BUS INF P, V113, P270
   Drews P, 2017, IEEE INT ENTERP, P57, DOI 10.1109/EDOCW.2017.18
   Engelsman W, 2020, IEEE INT ENTERP DIST, P11, DOI 10.1109/EDOC49727.2020.00012
   Farwick M, 2016, SOFTW SYST MODEL, V15, P397, DOI 10.1007/s10270-014-0407-3
   Farwick M, 2012, IEEE INT ENTERP DIST, P1, DOI 10.1109/EDOC.2012.11
   Gartner, 2018, ENTERPRISE ARCHITECT
   Ge BF, 2014, IEEE SYST J, V8, P4, DOI 10.1109/JSYST.2013.2270573
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P46, DOI 10.1109/ICSAW.2017.48
   Hacks S, 2019, IEEE INT ENTERP, P9, DOI 10.1109/EDOCW.2019.00016
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holm H, 2014, SOFTW SYST MODEL, V13, P825, DOI 10.1007/s10270-012-0252-1
   Hu JP, 2014, ANN IEEE SYST CONF, P136, DOI 10.1109/SysCon.2014.6819248
   Iacob ME, 2018, IEEE INT ENTERP, P115, DOI 10.1109/EDOCW.2018.00026
   Johannesson P., 2014, An Introduction to Design Science, DOI [10.1007/978-3-319-10632-8, DOI 10.1007/978-3-319-10632-8]
   Johnson P, 2016, IEEE INT ENTERP, P122
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kotusev S, 2015, P ANN HICSS, P4069, DOI 10.1109/HICSS.2015.489
   Landi AD, 2017, P INT COMP SOFTW APP, P327, DOI 10.1109/COMPSAC.2017.225
   Liu C, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P234, DOI 10.5220/0007655902340241
   Moutaouakkil A, 2019, INT J ADV COMPUT SC, V10, P304
   OMG, 2016, ARCH DRIV MOD ADM KN, P372
   OMG, 2020, ADM TASK FORC OMG
   OMG, 2017, UML 251
   OMG, 2008, MOF QUER VIEW TRANSF, P282
   OMG, 2014, MDA GUID VERS 20, P15
   OMG, MET OBJ FAC MOF VERS
   Pepin J., P 17 INT C ENTERPRIS, V3, P229
   Perez-Castillo Ricardo, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P126
   Perez-Castillo R, 2012, P 27 ANN ACM S APPL, P1095
   Pérez-Castillo R, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2314
   Pérez-Castillo R, 2020, DECIS SUPPORT SYST, V131, DOI 10.1016/j.dss.2020.113249
   Perez-Castillo R, 2019, IEEE SOFTWARE, V36, P12, DOI 10.1109/MS.2019.2909329
   Perez-Castillo R, 2019, ENTERP INF SYST-UK, V13, P675, DOI 10.1080/17517575.2019.1590859
   Pérez-Castillo R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P671, DOI 10.1109/ICSM.2012.6405351
   Pérez-Castillo R, 2011, INFORM SOFTWARE TECH, V53, P1023, DOI 10.1016/j.infsof.2011.05.006
   Pérez-Castillo R, 2011, COMPUT STAND INTER, V33, P519, DOI 10.1016/j.csi.2011.02.007
   Proper HA, 2018, IEEE INT ENTERP, P162, DOI 10.1109/EDOCW.2018.00031
   Rolon Elvira, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P383, DOI 10.1109/CEC.2009.53
   Sanchez M., LECT NOTES BUSINESS, V191, P3
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schutz A., 2013, 21 EUR C INF SYST EC, P202
   Simon D, 2013, COMMUN ASSOC INF SYS, V32
   Truong TM, 2017, IEEE INT ENTERP DIST, P67, DOI 10.1109/EDOC.2017.18
   The Open Group, 2016, ARCH 30 ENT ARCH MOD
   The Open Group, 2019, ARCH MOD EXCH FIL FO
   The Open Group, 2011, TOGAF ENT ED VERS 91
   van Langerak R, 2017, LECT NOTES COMPUT SC, V10253, P247, DOI 10.1007/978-3-319-59536-8_16
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Werf J.M.E.M.V.D., 2017, ARCHITECTURAL INTELL
   Zimmermann A., 2015, BIR WORKSHOPS, P24
   Zimmermann A, 2021, ARCHITECTING DIGITAL, V2021, DOI 10.1007/978-3-030-49640-1
NR 67
TC 3
Z9 3
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 311
EP 336
DI 10.1007/s10270-021-00912-y
EA AUG 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000680292200002
PM 34366763
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Torres, W
   van den Brand, MGJ
   Serebrenik, A
AF Torres, Weslley
   Van den Brand, Mark G. J.
   Serebrenik, Alexander
TI A systematic literature review of cross-domain model consistency
   checking by model management tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model management; Systems engineering; Model-based systems engineering
ID CONFIGURATION MANAGEMENT; MECHATRONIC SYSTEMS; PRODUCT DESIGN;
   KNOWLEDGE; ONTOLOGY; INTEGRATION; FRAMEWORK; INTEROPERABILITY;
   INCONSISTENCIES; AGREEMENT
AB Objective The goal of this study is to identify gaps and challenges related to cross-domain model management focusing on consistency checking.Method We conducted a systematic literature review. We used the keyword-based search on Google Scholar, and we identified 618 potentially relevant studies; after applying inclusion and exclusion criteria, 96 papers were selected for further analysis.Results The main findings/contributions are: (i) a list of available tools used to support model management; (ii) 40% of the tools can provide consistency checking on models of different domains and 25% on models of the same domain, and 35% do not provide any consistency checking; (iii) available strategies to keep the consistency between models of different domains are not mature enough; (iv) most of the tools that provide consistency checking on models of different domains can only capture up to two inconsistency types; (v) the main challenges associated with tools that manage models on different domains are related tointeroperabilitybetween tools and theconsistency maintenance.Conclusion The results presented in this study can be used to guide new research on maintaining the consistency between models of different domains. Example of further research is to investigate how to capture theBehavioralandRefinementinconsistency types. This study also indicates that the tools should be improved in order to address, for example, more kinds of consistency check.
C1 [Torres, Weslley; Van den Brand, Mark G. J.] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Social Software Engn, Eindhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology
RP Torres, W (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM w.silva.torres@tue.nl; m.g.j.v.d.brand@tue.nl; a.serebrenik@tue.nl
OI Serebrenik, Alexander/0000-0002-1418-0095; van den Brand,
   Mark/0000-0003-3529-6182
FU European Commission; ECSEL [692455]
FX This work has been supported by the European Commission through the
   ENABLE-S3 project that has received funding from the ECSEL Joint
   Undertaking under grant agreement No 692455.
CR Abid H, 2015, INT J COMPUT INTEG M, V28, P972, DOI 10.1080/0951192X.2014.941938
   Abrishamchian F, 2014, PROC TECH, V15, P27, DOI 10.1016/j.protcy.2014.09.031
   Ahmad Mahreen Aziz, 2010, 2010 6th International Conference on Emerging Technologies (ICET), P310, DOI 10.1109/ICET.2010.5638468
   [Anonymous], 2009, P 6 IFIP INT C PRODU
   [Anonymous], 2013, SEMANTIC INFORM FEDE
   Aram S, 2013, AUTOMAT CONSTR, V35, P1, DOI 10.1016/j.autcon.2013.01.013
   Babur O, 2019, Model analytics and management
   Badin J, 2011, INT J INTERACT DES M, V5, P171, DOI 10.1007/s12008-011-0128-6
   Badin J., 2011, INT C ENG DES IMP SO, V6
   Bajaj M., 2016, INCOSE INT S, DOI DOI 10.1002/J.2334-5837.2016.00304.X
   Bajaj M., 2011, INT COUNCIL SYSTEMS, P1, DOI DOI 10.1109/AERO.2011.5747539
   Ball A, 2008, ADV ENG INFORM, V22, P222, DOI 10.1016/j.aei.2007.10.003
   Barbau R, 2012, COMPUT AIDED DESIGN, V44, P575, DOI 10.1016/j.cad.2012.01.008
   Barbieri G, 2014, MECHATRONICS, V24, P833, DOI 10.1016/j.mechatronics.2013.12.004
   Barbosa L., 2010, P 23 INT C COMP LING, V2, P36
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Belkadi F, 2012, ANNU REV CONTROL, V36, P346, DOI 10.1016/j.arcontrol.2012.09.016
   Belloncle G., 2013, COMPLEX SYSTEMS DESI, P209
   Bharadwaj A., 1992, Annals of Operations Research, V38, P17, DOI 10.1007/BF02283650
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Blondelle Gael., 2015, INSIGHT, V18, P35, DOI [10.1002/inst.12019, DOI 10.1002/INST.12019]
   Bock C, 2010, ADV ENG INFORM, V24, P510, DOI 10.1016/j.aei.2010.06.011
   Bogusch R., 2016, 8 EUR C EMB REAL TIM
   Bonnet S., 2015, INCOSE International Symposium, V25, P508, DOI DOI 10.1002/J.2334-5837.2015.00078.X
   Borsato M, 2014, COMPUT IND, V65, P258, DOI 10.1016/j.compind.2013.11.003
   Brusa E, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (ISSE) PROCEEDINGS, P303, DOI 10.1109/SysEng.2015.7302774
   Chami M, 2015, PROCEDIA COMPUT SCI, V51, P650, DOI 10.1016/j.procs.2015.05.180
   Chandrasegaran SK, 2013, COMPUT AIDED DESIGN, V45, P204, DOI 10.1016/j.cad.2012.08.006
   Chaparala R. T., 2013, COMPUTER AIDED DESIG, V10, P83
   Chen K., 2007, ASME 2007 INT MECH E, P123
   Chen L, 2006, INT J ADV MANUF TECH, V30, P589, DOI [10.1007/S00170-005-0108-8, 10.1007/s00170-005-0108-8]
   Cicchetti A, 2019, SOFTW SYST MODEL, V18, P3207, DOI 10.1007/s10270-018-00713-w
   Cleophas, 2017, FED INT C SOFTW TECH, P129
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corbier F., 2013, TECHNICAL REPORTS SA
   Costello J., 2007, USING XML WEB SITE M
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   David I., 2016, COMMITMDE MODELS
   David I., 2017, MODELS
   David I., 2016, SRC MODELS
   Demoly F, 2012, ROBOT CIM-INT MANUF, V28, P681, DOI 10.1016/j.rcim.2012.03.003
   Deshmukh M., 2014, AER C, P1
   Dutra M, 2007, COMPLEX SYSTEMS CONCURRENT ENGINEERING: COLLABORATION, TECHNOLOGY INNOVATION AND SUSTAINABILITY, P495, DOI 10.1007/978-1-84628-976-7_55
   Feldmann S, 2015, IFAC PAPERSONLINE, V48, P916, DOI 10.1016/j.ifacol.2015.06.200
   Fisher A., 2014, INCOSE International Symposium, V24, P207
   Fotso A. B., 2012, 2012 IEEE/ASME 8th International Conference on Mechatronic and Embedded Systems and Applications (MESA), P232, DOI 10.1109/MESA.2012.6275567
   Fourgeau E, 2016, ADV INTELL SYST, V426, P147, DOI 10.1007/978-3-319-29643-2_11
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Geirhofer S, 2013, IEEE GLOBE WORK, P1, DOI 10.1109/GLOCOMW.2013.6824952
   Gerpheide CM, 2016, SOFTWARE QUAL J, V24, P797, DOI 10.1007/s11219-015-9280-8
   Gondhalekar A., 2016, INCOSE INT S, V26, P1
   Graignic P, 2013, PROCEDIA COMPUT SCI, V16, P59, DOI 10.1016/j.procs.2013.01.007
   Grieves M., 2011, Virtually Perfect: Driving Innovative and Lean Products through Product Lifecycle
   Grieves M W., 2005, Product lifecycle management: Driving the next generation of lean thinking
   Gross J., 2009, AIAA SPAC 2009 C EXP, P6642
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gruhier E, 2015, ADV ENG INFORM, V29, P495, DOI 10.1016/j.aei.2015.04.004
   He LN, 2015, CONCURRENT ENG-RES A, V23, P199, DOI 10.1177/1063293X15580857
   Herzig S.J., 2014, Proc. CIRP, V21, P52
   Herzig SJI, 2014, PROCEDIA COMPUT SCI, V28, P354, DOI 10.1016/j.procs.2014.03.044
   Herzig SJI, 2012, PROCEEDINGS OF THE ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE, 2011, VOL 2, PTS A AND B, P1329
   Hisarciklilar O, 2010, PROCEEDINGS OF THE ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE, DETC 2010, VOL 6, P555
   Hjertberg Tim, 2018, Computer-Aided Design and Applications, V15, P488, DOI 10.1080/16864360.2017.1419637
   Horvath L., 2011, 2011 5th International Symposium on Computational Intelligence and Intelligent Informatics (ISCIII), P111, DOI 10.1109/ISCIII.2011.6069752
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   INCOSE, 2007, INCOSE TECHN REP
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jinzhi L., 2016, 8 EUROPEAN C EMBEDDE
   Johnson T, 2012, J COMPUT INF SCI ENG, V12, DOI 10.1115/1.4005452
   Kernschmidt K., 2013, MIM, P1465
   Kernschmidt K, 2018, J ENG DESIGN, V29, P617, DOI 10.1080/09544828.2018.1520205
   Khan M., MULTIDOMAIN MODEL BA
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kjaerulff UB, 2008, INFORM SCI STAT, P1, DOI 10.1007/978-0-387-74101-7
   Krima Sylvere, 2009, ONTOSTEP OWL DL ONTO
   Kuhrmann M., 2016, ARXIV161203583
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lee J., 2010, NIST IR, V7681
   Lee JH, 2012, IEEE T AUTOM SCI ENG, V9, P110, DOI 10.1109/TASE.2011.2165210
   Li YM, 2011, INT J ADV MANUF TECH, V55, P1149, DOI 10.1007/s00170-010-3130-4
   Lubell J., 2014, Model-based enterprise summit report
   Lubell J., 2002, MODEL MARKUP XML REP
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Ma YS, 2008, J INTELL MANUF, V19, P625, DOI 10.1007/s10845-008-0128-y
   Mckelvin M. L., 2015, AIAA SPACE 2015 C EX, P4462
   Moghaddam FA, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2764464
   Monticolo D, 2015, COMPUT IND, V66, P11, DOI 10.1016/j.compind.2014.08.001
   Mostefai S., 2005, INT J COMPUTATIONAL, V2, P206
   Müller P, 2013, PROC CIRP, V11, P187, DOI 10.1016/j.procir.2013.07.032
   Murray J., 2012, INCOSE INT S
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   NASA, 2000, TECHN REP MARS CLIM
   O'Brien S., 2011, TECHNICAL REPORTS SY
   Oliveira B, 2016, CLIM CHANG MANAG, P117, DOI 10.1007/978-3-319-24660-4_8
   Paige RF, 2012, SOFTW SYST MODEL, V11, P527, DOI 10.1007/s10270-012-0257-9
   Peak R.S., 2004, TECHNICAL REPORTS
   Penas O, 2017, COMPUT IND, V86, P52, DOI 10.1016/j.compind.2016.12.001
   Penciuc D, 2014, PROC CIRP, V25, P369, DOI 10.1016/j.procir.2014.10.051
   Petersen K., 2008, 12 INT C EVALUATION, DOI [10.14236/ewic/EASE2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Plateaux R, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (ISSE) PROCEEDINGS, P253, DOI 10.1109/SysEng.2015.7302766
   Pratt M., 2005, 10303 ISO, P1
   Qamar A., 2013, THESIS
   Qamar A., 2012, 13 MECH FOR INT C
   Qamar A, 2010, 7 EUR SYST ENG C INC
   Qamar A., 2017, AER C, P1
   Qamar A, 2015, ENG COMPUT-GERMANY, V31, P631, DOI 10.1007/s00366-014-0366-x
   Qamar A, 2012, J COMPUT INF SCI ENG, V12, DOI 10.1115/1.4007986
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Reichwein A., 2012, P 6 INT WORKSHOP MUL, DOI DOI 10.1145/2508443.2508451
   Rickover R., 2015, COMPLETE GUIDE ALEXA
   Roche RS, 2016, COMP MED SY, P1, DOI 10.1109/CBMS.2016.25
   Rosenman M, 1999, RES ENG DES, V11, P193, DOI 10.1007/s001630050014
   Sadeghi M, 2010, J INTELL MANUF, V21, P539, DOI 10.1007/s10845-009-0237-2
   Sadlauer Alfred, 2017, International Journal of Product Lifecycle Management, V10, P171
   Santamaria Lancia Adran A., 2015, 29th European Photovoltaic Solar Energy Conference and Exhibition (EU PVSEC 2014)
   Sarigecili MI, 2014, COMPUT AIDED DESIGN, V47, P72, DOI 10.1016/j.cad.2013.09.002
   Sellgren U., 2009, P 6 INT PROD LIF MAN
   Shaout A., 2010, 2010 International Computer Engineering Conference (ICENCO 2010), P9, DOI 10.1109/ICENCO.2010.5720417
   Sharifkhani Ali., 2009, GLOBECOM, P1, DOI DOI 10.1109/PSCE.2009.4839957
   Sirin G., 2012, ANAL SIMULATION SYST
   Song HJ, 2006, J MANUF SCI PROD, V7, P139
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Spencer D., 2009, CARD SORTING DESIGNI
   Stark J, 2016, DECIS ENG, P1, DOI 10.1007/978-3-319-24436-5_1
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Terzi Sergio, 2010, International Journal of Product Lifecycle Management, V4, P360, DOI 10.1504/IJPLM.2010.036489
   Thomas E., 2012, P 9 INT MODELICA C, P855
   Törngren M, 2014, MECHATRONICS, V24, P745, DOI 10.1016/j.mechatronics.2013.11.013
   Torre D., 2018, CONSISTENCY IS HANDL
   Torre D., 2014, P 18 INT C EVALUATIO, P1
   Torres W, 2019, 2019 IEEE INT SYSTEM
   Tristl C., 2012, INT DES C
   Ul Muram F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3037755
   Usman M, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P57, DOI 10.1109/ASEA.2008.40
   VanZandt L, 2016, INCOSE INT S, V26, P1905
   Vileiniskis T, 2017, AIP CONF PROC, V1863, DOI 10.1063/1.4992506
   Vosgien T, 2012, IFIP ADV INF COMM TE, V388, P612
   Webster J., 2002, 823 MIS Q
   Wegner P, 1996, ACM COMPUT SURV, V28, P285, DOI 10.1145/234313.234424
   Weingartner L., 2016, IFIP INT C PROD LIFE, P79
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolfenstetter T, 2018, J SYST SOFTWARE, V144, P342, DOI 10.1016/j.jss.2018.06.079
   Wu T, 2004, J COMPUT INF SCI ENG, V4, P281, DOI 10.1115/1.1814385
   Yang WZ, 2008, INT J PROD RES, V46, P6055, DOI 10.1080/00207540701343895
   Zaletelj V, 2018, ADV ENG INFORM, V38, P129, DOI 10.1016/j.aei.2018.06.009
   Zhang X, 2013, IN C IND ENG ENG MAN, P1314, DOI 10.1109/IEEM.2013.6962623
NR 151
TC 30
Z9 31
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 897
EP 916
DI 10.1007/s10270-020-00834-1
EA OCT 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000580903700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bergmayr, A
   Grossniklaus, M
   Wimmer, M
   Kappel, G
AF Bergmayr, Alexander
   Grossniklaus, Michael
   Wimmer, Manuel
   Kappel, Gerti
TI Leveraging annotation-based modeling with JUMP
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Java annotations; UML profiles; Model-based software engineering;
   Forward engineering; Reverse engineering
AB The capability of UML profiles to serve as annotation mechanism has been recognized in both research and industry. Today's modeling tools offer profiles specific to platforms, such as Java, as they facilitate model-based engineering approaches. However, considering the large number of possible annotations in Java, manually developing the corresponding profiles would only be achievable by huge development and maintenance efforts. Thus, leveraging annotation-based modeling requires an automated approach capable of generating platform-specific profiles from Java libraries. To address this challenge, we present the fully automated transformation chain realized by Jump, thereby continuing existing mapping efforts between Java and UML by emphasizing on annotations and profiles. The evaluation of Jump shows that it scales for large Java libraries and generates profiles of equal or even improved quality compared to profiles currently used in practice. Furthermore, we demonstrate the practical value of Jump by contributing profiles that facilitate reverse engineering and forward engineering processes for the Java platform by applying it to a modernization scenario.
C1 [Bergmayr, Alexander; Wimmer, Manuel; Kappel, Gerti] TU Wien, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Grossniklaus, Michael] Univ Konstanz, POB 188, D-78457 Constance, Germany.
C3 Technische Universitat Wien; University of Konstanz
RP Bergmayr, A (corresponding author), TU Wien, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM bergmayr@big.tuwien.ac.at
RI Grossniklaus, Michael/S-2107-2019; Grossniklaus, Michael/JWO-5296-2024
OI Grossniklaus, Michael/0000-0003-1609-2221; Grossniklaus,
   Michael/0000-0003-1609-2221
FU TU Wien (TUW); European Commission under the ICT Policy Support
   Programme [317859]
FX Open access funding provided by [TU Wien (TUW)]. This work is co-funded
   by the European Commission under the ICT Policy Support Programme, Grant
   No. 317859. We thank the anonymous reviewers for their critical
   reflection and suggestions of our previous paper at the MoDELS 2014
   conference. Moreover, we thank the anonymous reviewers of this article
   for their valuable comments.
CR Akehurst D, 2007, SOFTW SYST MODEL, V6, P3, DOI 10.1007/s10270-006-0020-1
   [Anonymous], 2010, P MDI
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], 2002, 4 INT S DISTR OBJ AP
   [Anonymous], JLS8
   [Anonymous], ECL MOD FRAM EMF
   [Anonymous], P INT WORKSH ONT THE
   [Anonymous], CAT UML PROF SPEC
   [Anonymous], ECL UML PROF REP
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], 2015, UN MOD LANG UML
   [Anonymous], J INFORM PROFESSIONA
   [Anonymous], P SOFTW ENG 2013 FAC
   [Anonymous], 2015, CORR
   [Anonymous], SOFTWARE SYSTEM MODE
   [Anonymous], P WORKSH BEST PRACT
   [Anonymous], P SFM
   [Anonymous], P INT C OBJ MOD COMP
   [Anonymous], 2003, J OBJECT TECHNOL
   [Anonymous], CHECKER FRAMEWORK PR
   [Anonymous], JSR 175 MET FAC JAV
   [Anonymous], P INT WORKSH S MOD S
   [Anonymous], 2007, PROC 4 INT WORKSHOP
   [Anonymous], MET FAC MOF
   Antkiewicz M, 2009, IEEE T SOFTWARE ENG, V35, P795, DOI 10.1109/TSE.2009.30
   Bergmayr A, 2014, LECT NOTES COMPUT SC, V8767, P552, DOI 10.1007/978-3-319-11653-2_34
   Bergmayr A, 2013, EUR CON SFTWR MTNCE, P465, DOI 10.1109/CSMR.2013.73
   Bergmayr Alexander, 2013, CEUR WORKSHOP PROC, V1104, P22
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Brosch Petra, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P184, DOI 10.1007/978-3-642-21210-9_18
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   Izquierdo JLC, 2012, INFORM SOFTWARE TECH, V54, P257, DOI 10.1016/j.infsof.2011.09.006
   Córdoba I, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P2087, DOI 10.1145/2695664.2695717
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Eichberg M, 2005, LECT NOTES COMPUT SC, V3442, P237, DOI 10.1007/978-3-540-31984-9_18
   Engels G, 1999, LECT NOTES COMPUT SC, V1723, P473
   Fowler M., 2010, Domain-specific languages
   France R, 2013, SOFTW SYST MODEL, V12, P223, DOI 10.1007/s10270-013-0346-4
   France RB, 2012, PROC INT CONF SOFTW, P1471, DOI 10.1109/ICSE.2012.6227059
   Gasevic D., 2009, Model Driven Engineering and Ontology Development, V2nd ed
   Gessenharter D, 2008, LECT NOTES COMPUT SC, V5301, P813, DOI 10.1007/978-3-540-87875-9_56
   Graaf B, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P586
   Harrison W, 2000, ACM SIGPLAN NOTICES, V35, P178, DOI 10.1145/354222.353184
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V5969, P374
   Jézéquel JM, 2012, SOFTW SYST MODEL, V11, P581, DOI 10.1007/s10270-012-0266-8
   Kavalec M, 2004, LECT NOTES COMPUT SC, V2932, P249
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a4
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Noguera C, 2008, LECT NOTES COMPUT SC, V5095, P48, DOI 10.1007/978-3-540-69100-6_4
   Noguera C, 2007, J SOFTW MAINT EVOL-R, V19, P253, DOI 10.1002/smr.349
   O. M. G. (OMG), 2012, SERV OR ARCH MOD LAN
   OMG, 2016, SEM FDN SUBS EX UML
   Pardillo J, 2010, LECT NOTES COMPUT SC, V6394, P407
   Ratiu D, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P203
   Rocha M. T., 2011, 23 INT C SOFTW ENG K, P426
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Wada H, 2005, LECT NOTES COMPUT SC, V3713, P584, DOI 10.1007/11557432_44
   Wimmer M, 2009, INT J WEB INF SYST, V5, P372, DOI 10.1108/17440080910983592
NR 67
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 65
EP 89
DI 10.1007/s10270-016-0528-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100006
PM 29449794
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Venero, MLF
   da Silva, FSC
AF Fernandez Venero, Mirtha Lina
   Correa da Silva, Flavio Soares
TI Model checking multi-level and recursive nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level modeling; Nested Petri nets; Model checking; SPIN
ID NESTED PETRI NETS; CPN TOOLS; SIMULATION; SEMANTICS; OBJECTS
AB With the increasing complexity of the problems and systems arising nowadays, the use of multi-level models is becoming more frequent in practice. However, there are still few reports in the literature concerning methods for analyzing such models without flattening the multi-level structure. For instance, several variants of multi-level Petri nets have been applied for modeling interaction protocols and mobility in multi-agent systems and coordination of cross-organizational workflows. But there are few automated tools for analyzing the behavior of these nets. In this paper we explain how to detect faults in models based on a representative class of multi-level nets: the nested Petri nets. We translate a nested net into a verifiable model that preserves its modular structure, a PROMELA program. This allows the use of SPIN model checker to verify properties related to termination, boundedness and reachability.
C1 [Fernandez Venero, Mirtha Lina] Fed Univ ABC, Ctr Math Computat & Cognit, Santo Andre, Brazil.
   [Correa da Silva, Flavio Soares] Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
C3 Universidade Federal do ABC (UFABC); Universidade de Sao Paulo
RP Venero, MLF (corresponding author), Fed Univ ABC, Ctr Math Computat & Cognit, Santo Andre, Brazil.
EM mirtha.lina@ufabc.edu.br; fcs@ime.usp.br
RI da Silva, Flavio S Correa/G-2230-2012
CR [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Augusto JC, 2003, LECT NOTES COMPUT SC, V2890, P207
   Barkaoui K, 2008, LECT NOTES COMPUT SC, V4928, P232
   Bednarczyk MA, 2005, LECT NOTES COMPUT SC, V3423, P28
   Brat Guillaume, 2000, WORKSH ADV VER
   Cabac L, 2005, LECT NOTES COMPUT SC, V3536, P148
   Ceska M., 1997, Computer Aided Systems Theory - EUROCAST '97. Selection of Papers from the 6th International Workshop on Computer Aided Systems Theory. Proceedings, P591, DOI 10.1007/BFb0025078
   Clavel M, 2003, LECT NOTES COMPUT SC, V2706, P76
   Dworzanskia LW, 2013, AUTOM CONTROL COMPUT, V47, P393, DOI 10.3103/S0146411613070201
   Eker Steven., 2004, ELECTRON NOTES THEOR, V71, P162, DOI [DOI 10.1016/S1571-0661(05)82534-4, 10.1016/S1571-0661(05)82534-4]
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Farwer Berndt., 2004, the 6th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming, Verona, Italy, P20
   Fernandez Venero Mirtha Lina, 2013, Formal Methods: Foundations and Applications. 16th Brazilian Symposium, SBMF 2013. Proceedings: LNCS 8195, P83, DOI 10.1007/978-3-642-41071-0_7
   Venero MLF, 2014, LECT NOTES BUS INF P, V191, P38, DOI 10.1007/978-3-662-44860-1_3
   Frappier M, 2010, LECT NOTES COMPUT SC, V6447, P581, DOI 10.1007/978-3-642-16901-4_38
   Gallardo MD, 2004, FORM ASP COMPUT, V16, P166, DOI 10.1007/s00165-004-0040-y
   Gannod GC, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P404, DOI 10.1109/ASE.2001.989839
   Grahlmann B., 1998, SPIN WORKSH
   Haddad S, 2007, ACTA INFORM, V44, P463, DOI 10.1007/s00236-007-0055-y
   Hicheur A, 2013, LECT NOTES COMPUT SC, V7789, P1, DOI 10.1007/978-3-642-39088-3_1
   Hillah LM, 2010, LECT NOTES COMPUT SC, V6128, P318, DOI 10.1007/978-3-642-13675-7_20
   Holzmann G. J., 1995, Formal Description Techniques VII. Proceedings of the 7th IFIP WG 6.1 International Conference on Formal Description Techniques, P197
   Holzmann G.J., 1991, TUTOR COMPUT NETW IS, V25, P981
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 1998, FORM METHOD SYST DES, V13, P289, DOI 10.1023/A:1008696026254
   Jensen K., 1992, COLOURED PETRI NETS
   JENSEN K, 1991, HIGH LEVEL PETRI NET
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Kissoum Y, 2008, I C COMP SYST APPLIC, P785, DOI 10.1109/AICCSA.2008.4493616
   Koch I, 2015, SOFTW SYST MODEL, V14, P703, DOI 10.1007/s10270-014-0421-5
   Köhler M, 2003, LECT NOTES COMPUT SC, V2679, P121
   Kummer O, 2004, LECT NOTES COMPUT SC, V3099, P484
   Lakos C, 1995, LECT NOTES COMPUT SC, V935, P278
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Lehmann K, 2005, LECT NOTES ARTIF INT, V3550, P179, DOI 10.1007/11550648_16
   Leuschel M., 2002, P AVOCS 2002 2 WORKS, P143
   Leyla Nazia., 2010, P 2010 C CTR ADV STU, P253
   Li-Pin Chang, 2011, 2011 9th IEEE Symposium on Embedded Systems for Real-Time Multimedia, P37, DOI 10.1109/ESTIMedia.2011.6088524
   Lomazova I. A., 2000, Fundamenta Informaticae, V43, P195
   Lomazova IA, 2002, FUND INFORM, V51, P121
   Lomazova IA, 2001, FUND INFORM, V47, P283
   Lomazova IA, 2001, PROGRAM COMPUT SOFT+, V27, P183, DOI 10.1023/A:1010914603293
   Lomazova IA, 2000, LECT NOTES COMPUT SC, V1755, P208
   Lomazova IA, 2008, LECT NOTES COMPUT SC, V4800, P460, DOI 10.1007/978-3-540-78127-1_25
   Mascheroni M, 2012, LECT NOTES COMPUT SC, V6900, P201
   Mateescu R., 1998, Proceedings of the International Workshop on Software Tools for Technology Transfer. STTT'98, P33
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Natarajan V., 1997, SPIN VERIFICATION SY, V32
   Prisecaru O, 2008, EOMAS, P64
   Ratzer AV, 2003, LECT NOTES COMPUT SC, V2679, P450
   Regis German, 2012, Formal Methods: Foundations and Applications. Proceedings 15th Brazilian Symposium, SBMF 2012, P147, DOI 10.1007/978-3-642-33296-8_12
   Reisig Wolfgang., 1998, ELEMENTS DISTRIBUTED
   Ribeiro L, 2012, SCI COMPUT PROGRAM, V77, P214, DOI 10.1016/j.scico.2011.03.010
   Ribeiro OR, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P378, DOI 10.1109/ECBS.2005.53
   Ribeiro OR, 2007, 2007 INTERNATIONAL SYMPOSIUM ON INDUSTRIAL EMBEDDED SYSTEMS, P266, DOI 10.1109/SIES.2007.4297344
   Ruys TC, 2004, LECT NOTES COMPUT SC, V2989, P304
   Sbai Z., 2010, P 2 INT C SOFTW TECH, V1
   Seghrouchni A. E. F., 1996, ICMAS-96 Proceedings. Second International Conference on Multi-Agent Systems, P307
   Szpyrka Marcin., 2014, Concurrency, Specification and Programming, CEUR Workshop Proceedings, V1269, P245
   Valk R, 2004, LECT NOTES COMPUT SC, V3098, P819, DOI 10.1007/978-3-540-27755-2_23
   Valk R, 1998, LECT NOTES COMPUT SC, V1420, P1
   van der Aalst WMP, 2015, SOFTW SYST MODEL, V14, P685, DOI 10.1007/s10270-014-0424-2
   Weise C., 1997, P 3 INT SPIN WORKSH
   Yamaguchi S., 2008, P 23 INT C CRIC SYST, P285
NR 64
TC 3
Z9 3
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1117
EP 1144
DI 10.1007/s10270-015-0509-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800009
DA 2024-07-18
ER

PT J
AU Bider, I
   Perjons, E
AF Bider, Ilia
   Perjons, Erik
TI Design science in action: developing a modeling technique for eliciting
   requirements on business process management (BPM) tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Workflow; Case management; Shared space;
   Design science
ID SYSTEMS
AB Selecting a suitable business process management (BPM) tool to build a business process support system for a particular business process is difficult. There are a number of BPM tools on the market that are available as systems to install locally and as services in the cloud. These tools are based on different BPM paradigms (e.g., workflow or case management) and provide different capabilities (e.g., enforcement of the control flow, shared spaces, or a collaborative environment). This makes it difficult for an organization to select a tool that would fit the business processes at hand. The paper suggests a solution for this problem. The core of the solution is a modeling technique for business processes for eliciting their requirements for a suitable BPM tool. It produces a high-level, business process model, called a "step-relationship" model that depicts the essential characteristics of a process in a paradigm-independent way. The solution presented in this paper has been developed based on the paradigm of design science research, and the paper discusses the research project from the design science perspective. The solution has been applied in two case studies in order to demonstrate its feasibility.
C1 [Bider, Ilia; Perjons, Erik] Stockholm Univ, DSV, S-16440 Stockholm, Sweden.
   [Bider, Ilia] IbisSoft AB, S-10432 Stockholm, Sweden.
C3 Stockholm University
RP Bider, I (corresponding author), Stockholm Univ, DSV, Forum 100, S-16440 Stockholm, Sweden.
EM ilia@dsv.su.se; perjons@dsv.su.se
RI Bider, Ilia/T-8106-2019
OI Bider, Ilia/0000-0002-3490-6092
CR Alter S, 2013, J ASSOC INF SYST, V14, P72
   Anderson J., 2011, COMMUNICATIONS COMPU
   Andersson T., 2005, Software Process Improvement and Practice, V10, P403, DOI 10.1002/spip.243
   [Anonymous], 2009, IEEE Data Engineering Bulletin
   [Anonymous], 2002, Workflow management: models, methods, and systems
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Anttila J, 2013, TOTAL QUAL MANAG BUS, V24, P918, DOI 10.1080/14783363.2013.791105
   Baresi L, 1999, SPRING INT SER ENG C, P47
   Baskerville R., 2009, P 4 INT C DESIGN SCI, P1, DOI DOI 10.1145/1555619.1555631
   Bider Ilia, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P299, DOI 10.1007/978-3-642-21640-4_23
   Bider I., 2013, CEUR, V1023, P70
   Bider I., 2013, ORG SYSTEMS INTERDIS, P35, DOI DOI 10.1007/978-3-642-33371-2_3
   Bider I., 2009, HDB RES COMPLEX DYNA, P79
   Bider I, 2013, LECT NOTES BUS INF P, V147, P63
   Bider I, 2012, LECT NOTES BUS INF P, V113, P16
   Bider I, 2011, LECT NOTES BUS INF P, V92, P238
   Bider I, 2010, LECT NOTES BUS INF, V50, P1
   Box G., 1987, Empirical Model-Building and Response Surfaces, DOI DOI 10.1080/00401706.1988.10488371
   Duarte NF, 2013, ADV INTELL SYST, V206, P487, DOI 10.1007/978-3-642-36981-0_45
   FIPS, 1993, FIPS PUBL, P183
   Giere R.N., 2006, Scientific Perspectivism, DOI DOI 10.7208/CHICAGO/9780226292144.001.0001
   Gilbert P., 2010, BPM 2010 C
   Hammer M., 1993, Reengineering the Corporation -A Manifesto for Business Revolution
   Hant V.D., 1996, PROCESS MAPPING REEN
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   iPB, 2012, IPBREFERENCE MAN
   Khan R., 2003, BUS INTEGR J     OCT
   Khomyakov M, 2001, OOIS 2000: 6TH INTERNATIONAL CONFERENCE ON OBJECT ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P85
   Kleiner N., 2003, CEUR WORKSH P, V75, P372
   Link E., 1997, DIFFUSION DYNAMICS P
   Müller D, 2007, LECT NOTES COMPUT SC, V4803, P131
   Neuman W. L., 2003, Social Research Methods: qualitative and quantitative approaches
   Österle H, 2011, EUR J INFORM SYST, V20, P7, DOI 10.1057/ejis.2010.55
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Sein MK, 2011, MIS QUART, V35, P37
   Swenson K.D., 2010, Mastering the Unpredictable: How Adaptive Case Management Will Revolutionize the Way That Knowledge Workers Get Things Done
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wohed P., 2010, MODERN BUSINESS PROC, P401
NR 40
TC 12
Z9 14
U1 0
U2 38
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1159
EP 1188
DI 10.1007/s10270-014-0412-6
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200007
DA 2024-07-18
ER

PT J
AU Syriani, E
   Vangheluwe, H
   LaShomb, B
AF Syriani, Eugene
   Vangheluwe, Hans
   LaShomb, Brian
TI T-Core: a framework for custom-built model transformation engines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Domain-specific model transformation;
   Transformation library; Reengineering
ID GRAPH; ALGORITHM; DIAGRAMS; LANGUAGE
AB A large number of model transformation languages and tools have emerged since the early 2000s. A transformation engineer is thus left with too many choices for the language he use to perform a specific transformation task. Furthermore, it is currently not possible to combine or reuse transformations implemented in different languages. We therefore propose T-Core, a framework where primitive transformation constructs can be combined to define and encapsulate reusable model transformation idioms. In this context, the transformation engineer is free to use existing transformation building blocks from an extensible library or define his own transformation units. The proposed primitive transformation operators are the result of deconstructing different existing transformation languages. Reconstructing these languages offers a common basis to compare their expressiveness, provides a framework for inter-operating them, and allows the transformation engineer to design transformations with the most appropriate constructs for the task at hand.
C1 [Syriani, Eugene; LaShomb, Brian] Univ Alabama, Tuscaloosa, AL 35487 USA.
   [Vangheluwe, Hans] Univ Antwerp, B-2020 Antwerp, Belgium.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   University of Antwerp
RP Syriani, E (corresponding author), Univ Alabama, Tuscaloosa, AL 35487 USA.
EM esyriani@cs.ua.edu; Hans.Vangheluwe@ua.ac.be; lasho001@crimson.ua.edu
RI Syriani, Eugene/AAI-5036-2020; Vangheluwe, Hans/H-9884-2016
OI Syriani, Eugene/0000-0001-6527-1651; Vangheluwe,
   Hans/0000-0003-2079-6643
CR Amrani M., 2012, MODELS WORKSH AN MOD
   [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], SOCSTR20092 MCGILL U
   Arendt T., 2010, LNCS, V6394, P12
   ATLAS group, 2005, SPEC ATL VIRT MACH
   Balogh A., 2006, EUR WORKSH COMP MOD
   Barroca B., 2010, LNCS
   Batz GV, 2008, LECT NOTES COMPUT SC, V5088, P471
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Bergmann G., 2008, INT WORKSH GRAPH MOD
   BOHM C, 1966, COMMUN ACM, V9, P366, DOI 10.1145/355592.365646
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   Denil J., 2013, SOCSTR20131 MCGILL U
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   EHRIG H, 1997, HDB GRAPH GRAMMARS C, V1
   Ergin H., 2013, ACM SE REG C
   Ermel C., 2006, ECEASST, V1
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Gamma Erich., 1994, DESIGN PATTERNS
   Gomes C., 2011, DSLTRANS MANUAL
   Guerra Esther, 2013, Software and Systems Modeling, V12, P555, DOI 10.1007/s10270-011-0211-2
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6142, P108, DOI 10.1007/978-3-642-13688-7_8
   Horvath Akos, 2010, International Journal on Software Tools for Technology Transfer, V12, P211, DOI 10.1007/s10009-010-0149-7
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kelly S., 2008, Domain-Specific Modeling
   Knirsch P, 2002, LECT NOTES COMPUT SC, V2505, P207
   Konigs Alexander, 2006, Softw. Syst. Model., V5, P349, DOI [10.1007/s10270-006-0016-x, DOI 10.1007/S10270-006-0016-X]
   Krissinel EB, 2004, SOFTWARE PRACT EXPER, V34, P591, DOI 10.1002/spe.588
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kuhne T., 2009, ELECT COMMUN EUR ASS, V21
   Lambers L, 2008, ELECTRON NOTES THEOR, V211, P17, DOI 10.1016/j.entcs.2008.04.026
   LaShomb B., 2012, SERG201204 U AL DEP
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   Lengyel Laszlo., 2006, International Journal of Computer Science, V1, P45
   Manning G., 2008, INT WORKSH GRAPH TRA, V10, P235
   MEHLHORN K, 1984, MONOGRAPHS THEORETIC, V2
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   *OBJ MAN GROUP, UN MOD LANG SUP
   Object Management Group, 2011, MET FAC 2
   Provost M., 2005, THESIS MCGILL U MONT
   Rensink A., 2009, INT WORKSH GRAPH TRA, V18
   Rudolf M., 1998, LNCS, V1764, P381
   Sanchez Cuadrado Jesus, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P176, DOI 10.1007/978-3-642-30476-7_12
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr A., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P219
   Syriani E., 2011, THESIS MCGILL U
   Syriani E., 2011, J SOFTW SYST MODEL, V11, P1
   Syriani E., 2010, DEVS SEMANTIC DOMAIN, P3
   Syriani E., 2012, 1 INT WORKSH VER MOD
   Syriani E., 2010, SOCSTR20108 MCGILL U
   Syriani E., 2010, ELECT COMMUN EUR ASS, V29
   Syriani E, 2010, LECT NOTES COMPUT SC, V6142, P199, DOI 10.1007/978-3-642-13688-7_14
   Syriani Eugene., 2010, T CORE
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   van den Bos Jeroen, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P121, DOI 10.1007/978-3-642-30476-7_8
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varro Gergely, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P368, DOI 10.1007/978-3-642-31491-9_28
   Varro Gergely, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P224, DOI 10.1007/978-3-642-30476-7_15
   Varro G., 2007, LNCS, V5088
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Vignaga A, 2009, LECT NOTES COMPUT SC, V5563, P197, DOI 10.1007/978-3-642-02408-5_14
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wimmer Manuel, 2009, INT WORKSH PETR NETS, P35
   Zundorf A., 1996, Graph Grammars and Their Application to Computer Science. 5th International Workshop. Selected Papers, P454, DOI 10.1007/3-540-61228-9_105
NR 69
TC 14
Z9 16
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1215
EP 1243
DI 10.1007/s10270-013-0370-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200009
DA 2024-07-18
ER

PT J
AU Natschläger, C
   Kossak, F
   Schewe, KD
AF Natschlaeger, Christine
   Kossak, Felix
   Schewe, Klaus-Dieter
TI Deontic BPMN: a powerful extension of BPMN with a trusted model
   transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modelling; BPMN; Deontic logic; Graph transformation;
   Deterministic transformation; Semantic analysis
AB The Business Process Model and Notation (BPMN) is a widely-used standard for process modelling. A drawback of BPMN, however, is that modality is implicitly expressed through the structure of the process flow but not directly within the corresponding activity. Thus, an extension of BPMN with deontic logic has been proposed in previous work, called Deontic BPMN. Deontic BPMN reduces the structural complexity of the process flow and increases the readability by explicitly highlighting obligatory and permissible activities. In addition, an algebraic graph transformation from a subset of BPMN to Deontic BPMN, called Deontic BpmnGTS, has been defined. The goal of the current research is to show that DeonticBpmnGTS is terminating and confluent, resulting in a globally deterministic transformation. Moreover, the semantic equivalence of BPMN models and the respective Deontic BPMN models is proven based on Abstract State Machines (ASMs). Thus, DeonticBpmnGTS can be called a trusted model transformation.
C1 [Natschlaeger, Christine; Kossak, Felix; Schewe, Klaus-Dieter] Software Competence Ctr Hagenberg, Hagenberg, Austria.
   [Schewe, Klaus-Dieter] Johannes Kepler Univ Linz, Res Inst Appl Knowledge Proc, Hagenberg, Austria.
C3 Softwarepark Hagenberg; Johannes Kepler University Linz
RP Natschläger, C (corresponding author), Software Competence Ctr Hagenberg, Hagenberg, Austria.
EM Christine.Natschlaeger@scch.at; felix.kossak@scch.at; kd.schewe@scch.at
FU program "Regionale Wettbewerbsfahigkeit OO" by the European Fund for
   Regional Development; State of Upper Austria
FX The project Vertical Model Integration is supported within the program
   "Regionale Wettbewerbsfahigkeit OO 2007-2013" by the European Fund for
   Regional Development as well as the State of Upper Austria.
CR [Anonymous], P EM 2012 MENSCH ZEN
   [Anonymous], 2006, AGG 1 5 0 DEV ENV US
   [Anonymous], EXTENDING BPMN DEONT
   [Anonymous], BUS PROC MOD NOT BPM
   Aqvist L., 2002, Handbook of Philosophical Logic, P147, DOI [10.1007/978-94-010-0387-2_3, DOI 10.1007/978-94-010-0387-2_3]
   Asirelli P., 2010, P 4 INT WORKSH VAR M, P37
   Asirelli P., 2009, VAMOS, P71
   Börger E, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P287
   Börger E, 2008, LECT NOTES COMPUT SC, V5316, P59, DOI 10.1007/978-3-540-89762-0_3
   Borger E., 2003, ABSTRACT STATE MACHI
   Broersen J., 2010, 10 PROBLEMS DEONTIC
   Broy M, 1998, INFORM GRUNDLEGENDE, V2
   DIJKMAN RM, 2007, FORMAL SEMANTICS AUT
   EHRIG H, 1991, LECT NOTES COMPUT SC, V532, P269, DOI 10.1007/BFb0017395
   Ehrig H., 1973, 14th Annual Symposium on Switching Automata Theory, P167, DOI 10.1109/SWAT.1973.11
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig Hartmut, 1991, Math. Struct. Comput. Sci., V1, P361, DOI DOI 10.1017/S0960129500001353
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Goedertier S, 2007, LECT NOTES COMPUT SC, V4805, P603
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Governatori G, 2006, INT J COOP INF SYST, V15, P659, DOI 10.1142/S0218843006001529
   Gurevich Y., 2000, ACM T COMPUT LOG, V1, P77, DOI DOI 10.1145/343369.343384
   Horty J.F., 2001, AGENCY DEONTIC LOGIC
   Lewis D.K., 1974, LOGICAL THEORY SEMAN, P1, DOI DOI 10.1007/978-94-010-2191-3_1
   Lowe M., 1993, REWRITING TECHNIQUES
   LOWE M, 1990, THESIS TU BERLIN
   Mogos AH, 2009, STUD COMPUT INTELL, V237, P263
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Natschlager Christine, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P264, DOI 10.1007/978-3-642-23091-2_23
   Natschlager C., 2012, ELECT COMMUN EASST, P160
   Padmanabhan V., 2006, AUSTR PAC C CONC MOD, VV, P75
   RAOULT JC, 1984, THEOR COMPUT SCI, V32, P1, DOI 10.1016/0304-3975(84)90021-5
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1779, P481
   Urzica A., 2009, P 17 INT C CONTR SYS, P539
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Weigand H, 1996, LECT NOTES COMPUT SC, V1080, P193
   Wieringa R.J., 1993, DEONTIC LOGIC COMPUT, P17
   Wong PYH, 2008, LECT NOTES COMPUT SC, V5256, P355, DOI 10.1007/978-3-540-88194-0_22
NR 41
TC 8
Z9 8
U1 1
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 765
EP 793
DI 10.1007/s10270-013-0329-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400017
DA 2024-07-18
ER

PT J
AU Ali, R
   Dalpiaz, F
   Giorgini, P
AF Ali, Raian
   Dalpiaz, Fabiano
   Giorgini, Paolo
TI Requirements-driven deployment Customizing the requirements model for
   the host environment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Contextual requirements; Deployment;
   Context-sensitive systems modelling
ID GOAL; TROPOS; VARIABILITY; FRAMEWORK
AB Deployment is a main development phase which configures a software to be ready for use in a certain environment. The ultimate goal of deployment is to enable users to achieve their requirements while using the deployed software. However, requirements are not uniform and differ between deployment environments. In one environment, certain requirements could be useless or redundant, thereby making some software functionalities superfluous. In another environment, instead, some requirements could be impossible to achieve and, thus, additional functionalities would be required. We advocate that ensuring fitness between requirements and the system environment is a basic and critical step to achieve a comprehensive deployment process. We propose a tool-supported modelling and analysis approach to tailor a requirements model to each environment in which the system is to be deployed. We study the case of a contextual goal model, which is a requirements model that captures the relationship between the variability of requirements (goal variability space) and the varying states of a deployment environment (context variability space). Our analysis relies on sampling a deployment environment to discover its context variability space and use it to identify loci in the contextual goal model where a modification has to take place. Finally, we apply our approach in practice and report on the obtained results.
C1 [Ali, Raian] Bournemouth Univ, Sch Design Engn & Comp, Bournemouth, Dorset, England.
   [Dalpiaz, Fabiano; Giorgini, Paolo] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
C3 Bournemouth University; University of Trento
RP Ali, R (corresponding author), Bournemouth Univ, Sch Design Engn & Comp, Bournemouth, Dorset, England.
EM rali@bournemouth.ac.uk; fabiano.dalpiaz@disi.unitn.it;
   paolo.giorgini@disi.unitn.it
RI Ali, Raian/HZI-8249-2023; Ali, Raian/AAM-9992-2021; Giorgini,
   Paolo/G-7886-2012
OI Ali, Raian/0000-0002-5285-7829; Giorgini, Paolo/0000-0003-4152-9683
FU EU Commission; Science Foundation Ireland [10/CE/I1855]
FX This work has been partially funded by the EU Commission, through the
   ANIKETOS and FastFix projects and by Science Foundation Ireland grant
   10/CE/I1855 to Lero-the Irish Software Engineering Research Centre
   (www.lero.ie). We also thank Vitor E. Silva Souza for discussions that
   enriched the ideas of this paper.
CR Acher M., 2009, 4 INT WORKSH MOD RUN
   Ali R., 2009, FOR 21 INT C ADV INF, V453, P37
   Ali R, 2008, LECT NOTES COMPUT SC, V5074, P575
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Ali R, 2009, LECT NOTES BUS INF P, V29, P326
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   Amyot D, 2008, PROCEEDINGS OF THE FIRST ITU-T KALEIDOSCOPE ACADEMIC CONFERENCE INNOVATIONS IN NGN: FUTURE NETWORK AND SERVICES, P195
   [Anonymous], P 1 INT WORKSH SOFTW
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P16, DOI 10.1007/978-3-642-15579-6_2
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Chaari T, 2007, J SYST SOFTWARE, V80, P1973, DOI 10.1016/j.jss.2007.03.010
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cohen D, 1997, PROC INT CONF SOFTW, P602, DOI 10.1145/253228.253493
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Feather M.S., 1998, P 9 INT WORKSH SOFTW
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Henricksen K, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P77, DOI 10.1109/PERCOM.2004.1276847
   Hui BW, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P117
   ITU-T, 2008, US REQ NOT URN LANG
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kronz Andreas., 2006, CHAP 3 CORPORATE PER, P31
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   Lapouchnian A, 2009, LECT NOTES COMPUT SC, V5829, P115, DOI 10.1007/978-3-642-04840-1_11
   Liaskos S., 2006, TECHNICAL REPORT
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Parra Carlos., 2009, Proceedings of the 13th International Software Product Line Conference, SPLC'09, P131
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pourshahid Alireza, 2010, International Journal of Electronic Business, V8, P233, DOI 10.1504/IJEB.2010.034170
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Ramachandran M., 2005, Software Process Improvement and Practice, V10, P31, DOI 10.1002/spip.212
   Robertson S., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P357, DOI 10.1109/DEXA.1999.795193
   Robertson S., 1996, P EUROSTAR C
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   SALIFU M, 2007, VAMOS, P149
   Salifu M, 2007, INT REQUIR ENG CONF, P211, DOI 10.1109/RE.2007.21
   Sykes Daniel., 2008, Proceedings of the 2008 international workshop on Software engineering for adaptive and self-managing systems, SEAMS '08, P1
   Wang XH, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P18
   Wang YT, 2007, Proceedings of the 2007 Chinese Control and Decision Conference, P293, DOI 10.1145/1321631.1321675
   Weiss M, 2005, INT J E-BUS RES, V1, P63, DOI 10.4018/jebr.2005070104
   Yau SS, 2006, FOURTH IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS AND THE SECOND INTERNATIONAL WORKSHOP ON COLLABORATIVE COMPUTING, INTEGRATION, AND ASSURANCE, PROCEEDINGS, P5, DOI 10.1109/SEUS-WCCIA.2006.25
   Yu E., 1995, MODELING STRATEGIC R
   Yu YJ, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P645
NR 50
TC 12
Z9 15
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 433
EP 456
DI 10.1007/s10270-012-0255-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000019
DA 2024-07-18
ER

PT J
AU Kraft, S
   Casale, G
   Krishnamurthy, D
   Greer, D
   Kilpatrick, P
AF Kraft, Stephan
   Casale, Giuliano
   Krishnamurthy, Diwakar
   Greer, Des
   Kilpatrick, Peter
TI Performance models of storage contention in cloud environments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Performance modeling; Virtualization; Storage
ID NETWORKS
AB We propose simple models to predict the performance degradation of disk requests due to storage device contention in consolidated virtualized environments. Model parameters can be deduced from measurements obtained inside Virtual Machines (VMs) from a system where a single VM accesses a remote storage server. The parameterized model can then be used to predict the effect of storage contention when multiple VMs are consolidated on the same server. We first propose a trace-driven approach that evaluates a queueing network with fair share scheduling using simulation. The model parameters consider Virtual Machine Monitor level disk access optimizations and rely on a calibration technique. We further present a measurement-based approach that allows a distinct characterization of read/write performance attributes. In particular, we define simple linear prediction models for I/O request mean response times, throughputs and read/write mixes, as well as a simulation model for predicting response time distributions. We found our models to be effective in predicting such quantities across a range of synthetic and emulated application workloads.
C1 [Kraft, Stephan] SAP Res, Belfast, Antrim, North Ireland.
   [Casale, Giuliano] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
   [Krishnamurthy, Diwakar] Univ Calgary, Dept ECE, Calgary, AB, Canada.
   [Greer, Des; Kilpatrick, Peter] Queens Univ Belfast, Sch EEECS, Belfast, Antrim, North Ireland.
C3 Imperial College London; University of Calgary; Queens University
   Belfast
RP Kraft, S (corresponding author), SAP Res, Belfast, Antrim, North Ireland.
EM stephan.kraft@sap.com; g.casale@imperial.ac.uk; dkrishna@ucalgary.ca;
   des.greer@qub.ac.uk; p.kilpatrick@qub.ac.uk
RI Casale, Giuliano/W-5595-2019
OI Kilpatrick, Peter/0000-0003-0818-8979; Casale,
   Giuliano/0000-0003-4548-7951; Greer, Des/0000-0001-6367-9274
FU InvestNI/SAP VIRTEX project; Imperial College Junior Research Fellowship
   scheme
FX The work of S. Kraft has been partially funded by the InvestNI/SAP
   VIRTEX project. The work of G. Casale has been supported by the Imperial
   College Junior Research Fellowship scheme. Thanks to Stephen Dawson for
   valuable comments. S. Kraft is also affiliated with Queen's University
   Belfast.
CR Ahmad I, 2003, I S WORKL CHAR PROC, P65, DOI 10.1109/WWC.2003.1249058
   Ahmad Irfan, 2007, 2007 IEEE International Symposium on Workload Characterization, P149, DOI 10.1109/IISWC.2007.4362191
   Ajay G., 2009, FAST, P85
   [Anonymous], HPL200759
   [Anonymous], 1989, S P COMMUNICATIONS A, DOI DOI 10.1145/75246.75248
   [Anonymous], 2008, WP065PRD0201 VMWARE
   [Anonymous], 1996, P ACM SIGCOMM
   [Anonymous], 2009, VALUETOOLS 09
   Axboe Jens, 2004, OTT LIN S, P51
   BASKETT F, 1975, J ACM, V22, P248, DOI 10.1145/321879.321887
   Begin T, 2010, PERFORM EVALUATION, V67, P386, DOI 10.1016/j.peva.2009.11.002
   Benevenuto F, 2006, LECT NOTES COMPUT SC, V4331, P427
   Bennani MN, 2005, ICAC 2005: Second International Conference on Autonomic Computing, Proceedings, P229
   Bennett JCR, 1996, IEEE INFOCOM SER, P120, DOI 10.1109/INFCOM.1996.497885
   Boutcher David, 2010, Operating Systems Review, V44, P20, DOI 10.1145/1740390.1740396
   Casale G., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P34, DOI 10.1109/ICDCSW.2011.46
   Casale G, 2008, INT CONF QUANT EVAL, P83, DOI 10.1109/QEST.2008.33
   Casale G, 2008, PERF E R SI, V36, P13, DOI 10.1145/1384529.1375460
   Chandra A, 2003, LECT NOTES COMPUT SC, V2707, P381
   Field T., JINQS EXTENSIBLE LIB
   Ganger G. R., 1993, Performance Evaluation Review, V21, P86, DOI 10.1145/166962.166989
   GOLESTANI SJ, 1994, IEEE INFOCOM SER, P636, DOI 10.1109/INFCOM.1994.337677
   Gueyoung Jung, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P23, DOI 10.1109/ICAC.2008.21
   Gulati Ajay., 2009, VPACT
   Koh Y, 2007, INT SYM PERFORM ANAL, P200, DOI 10.1109/ISPASS.2007.363750
   Kraft S., 2011, ACM SIGSOFT SOFTWARE, V36, P295
   Kundu S., 2010, HPCA
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li J, 2009, CLOUD: 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING CHALLENGES OF CLOUD COMPUTING, P15, DOI 10.1109/CLOUD.2009.5071528
   Menasce D.A., 2006, INT C AUTONOMIC AUTO, P28, DOI DOI 10.1109/ICAS.2006.13
   Mi NF, 2007, PERFORM EVALUATION, V64, P1082, DOI 10.1016/j.peva.2007.06.016
   Riska A, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P97
   Ruemmler C., 1993, USENIX Association. Proceedings of the Winter 1993 USENIX Conference, P405
   Wang MZ, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P588
   Wei Jin, 2004, Performance Evaluation Review, V32, P37, DOI 10.1145/1012888.1005694
NR 35
TC 8
Z9 13
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 681
EP 704
DI 10.1007/s10270-012-0227-2
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600004
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Steel, J
   Jézéquel, JM
AF Steel, Jim
   Jezequel, Jean-Marc
TI On model typing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
DE MDA; MOF; metamodelling; type systems; typing; model transformation
AB Where object-oriented languages deal with objects as described by classes, model-driven development uses models, as graphs of interconnected objects, described by metamodels. A number of new languages have been and continue to be developed for this model-based paradigm, both for model transformation and for general programming using models. Many of these use single-object approaches to typing, derived from solutions found in object-oriented systems, while others use metamodels as model types, but without a clear notion of polymorphism. Both of these approaches lead to brittle and overly restrictive reuse characteristics. In this paper we propose a simple extension to object-oriented typing to better cater for a model-oriented context, including a simple strategy for typing models as a collection of interconnected objects. We suggest extensions to existing type system formalisms to support these concepts and their manipulation. Using a simple example we show how this extended approach permits more flexible reuse, while preserving type safety.
C1 Univ Rennes, Irisa, F-35042 Rennes, France.
   INRIA, Irisa, Rennes, France.
C3 Universite de Rennes; Universite de Rennes; Inria
RP Steel, J (corresponding author), Univ Rennes, Irisa, Campus Univ Beaulieu, F-35042 Rennes, France.
EM Jim.Steel@irisa.fr; Jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; Steel, Jim/C-3946-2008
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Steel, Jim/0000-0002-5694-1147
CR [Anonymous], 1999, ENTCS
   [Anonymous], 1996, A Theory of Objects
   [Anonymous], 2003, Eclipse Modeling Framework
   Bezivin J., 2004, OOPSLA GPCE WORKSH B
   BIERMAN G, 2005, FDN OBJECTORIENTED L
   BLANC X, 2004, MODEL DRIVEN ARCHITE
   Bruce K.B., 2003, ELECT NOTES THEOR CO, V82, P1
   Bruce KB, 2003, ACM T PROGR LANG SYS, V25, P225, DOI 10.1145/641888.641891
   Duddy K, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/EDOC.2003.1233847
   DUDDY K, 2004, TRANSFORMATION KNOWL
   EDWARDS J, 2004, SIGSOFT 04 FSE 12, P189
   Ernst E., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P303
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   LALONDE W, 1991, J OBJECT-ORIENT PROG, V3, P57
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   *OBJ MAN GROUP, 2004, FORMAL20040201 OMG
   *OVT MERG GROUP, 2005, AD20050302 OMG
   SENDALL S, 2003, P 2 OOPSLA WORKSH GE
   Steel J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P151, DOI 10.1109/ISSRE.2004.23
   TOBIN H, 2005, FUNDAMENTALS OBJECT
NR 20
TC 73
Z9 76
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 401
EP 413
DI 10.1007/s10270-006-0036-6
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000005
OA Green Published
DA 2024-07-18
ER

PT J
AU Becker, SM
   Herold, S
   Lohmann, S
   Westfechtel, B
AF Becker, Simon M.
   Herold, Sebastian
   Lohmann, Sebastian
   Westfechtel, Bernhard
TI A graph-based algorithm for consistency maintenance in incremental and
   interactive integration tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Graph Transformations
CY SEP 17-23, 2006
CL Natal, BRAZIL
SP Brazilian Comp Soc, European Assoc Theoret Comp Sci, European Assoc Software Sci & Technol, Formal Methods Europe, Int Federat Informat Proc
DE incremental consistency maintenance; graph transformation; triple graph
   grammars
AB Development processes in engineering disciplines are inherently complex. Throughout the development process, the system to be built is modeled from different perspectives, on different levels of abstraction, and with different intents. Since state-of-the-art development processes are highly incremental and iterative, models of the system are not constructed in one shot; rather, they are extended and improved repeatedly. Furthermore, models are related by manifold dependencies and need to be maintained mutually consistent with respect to these dependencies. Thus, tools are urgently needed which assist developers in maintaining consistency between inter-dependent and evolving models. These tools have to operate incrementally, i.e., they have to propagate changes performed on one model into related models which are affected by these changes. In addition, they need to support user interactions in settings where the effects of changes cannot be determined automatically and deterministically. We present an algorithm for incremental and interactive consistency maintenance which meets these requirements. The algorithm is based on graphs, which are used as the data model for representing the models to be integrated, and graph transformation rules, which describe the modifications of the graphs to be performed on a high level of abstraction.
C1 [Becker, Simon M.; Herold, Sebastian; Lohmann, Sebastian] Rhein Westfal TH Aachen, D-52074 Aachen, Germany.
   [Westfechtel, Bernhard] Univ Bayreuth, D-95440 Bayreuth, Germany.
C3 RWTH Aachen University; University of Bayreuth
RP Becker, SM (corresponding author), Rhein Westfal TH Aachen, Ahornstr 55, D-52074 Aachen, Germany.
EM sbecker@i3.informatik.rwth-aachen.de;
   herold@i3.informatik.rwth-aachen.de;
   slohmann@i3.informatik.rwth-aachen.de;
   Bernhard.Westfechtel@uni-bayreuth.de
RI Herold, Sebastian/N-3557-2015
OI Herold, Sebastian/0000-0002-3180-9182
CR AKEHURST DH, 2003, J SOFTWARE SYSTEMS M, V2, P215
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   APPUKUTTAN BK, 2003, P 2003 MOD DRIV ARCH
   BARESI L, 2002, ELECT NOTES THEOR CO, V72
   BECKER S, 2002, P 6 BIENN WORLD C IN
   Becker SM, 2004, LECT NOTES COMPUT SC, V3256, P22
   BECKER SM, 2005, J SOFTWARE SYSTEMS M, V4, P123
   BECKER SM, 2004, J INTEGR DES PROCESS, V8, P49
   Böhlen B, 2002, 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL I, PROCEEDINGS, P17
   BRAUN P, 2003, ELECT NOTES THEOR CO, V72
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   Cremer K, 2002, J SOFTW MAINT EVOL-R, V14, P257, DOI 10.1002/smr.254
   de Lara J, 2002, LECT NOTES COMPUT SC, V2505, P239
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   EHRIG H, 2005, MTIP 2005
   ENDERS BE, 2002, T SDPS, V6, P1
   FINKELSTEIN A, 1990, INT WORKSH SOFTW ENG, P374
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   HEROLD S, 2005, THESIS RWTH AACHEN U
   KENT S, 2003, ELECT NOTES THEOR CO, V82
   KIESEL N, 1995, INFORM SYST, V20, P21, DOI 10.1016/0306-4379(95)00002-L
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Konigs A., 2005, LANGUAGE ENG MODEL D
   Lefering M., 1995, INTEGRATIONSWERKZEUG
   LOHMANN S, 2004, THESIS RWTH AACHEN U
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P143, DOI 10.1016/j.entcs.2005.10.022
   NAGL M, 1996, BUILDING TIGHTLY INT
   NAGL M, 1997, INFORMATIK 97 INFORM, P143
   SCHURR A, 1995, LNCS, V903, P151
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Sprinkle J, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P159
   TAENTZER G, 1999, HDB GRAPH GRAMMARS C, V3, P269
   Wagner R, 2003, P INT C UN MOD LANG
NR 34
TC 11
Z9 12
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2007
VL 6
IS 3
BP 287
EP 315
DI 10.1007/s10270-006-0045-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WT
UT WOS:000254667900006
DA 2024-07-18
ER

PT J
AU Cámara, J
   Troya, J
   Burgueño, L
   Vallecillo, A
AF Camara, Javier
   Troya, Javier
   Burgueno, Lola
   Vallecillo, Antonio
TI On the assessment of generative AI in modeling tasks: an experience
   report with ChatGPT and UML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Large language models; ChatGPT; Software models; Modeling languages; UML
AB Most experts agree that large language models (LLMs), such as those used by Copilot and ChatGPT, are expected to revolutionize the way in which software is developed. Many papers are currently devoted to analyzing the potential advantages and limitations of these generative AI models for writing code. However, the analysis of the current state of LLMs with respect to software modeling has received little attention. In this paper, we investigate the current capabilities of ChatGPT to perform modeling tasks and to assist modelers, while also trying to identify its main shortcomings. Our findings show that, in contrast to code generation, the performance of the current version of ChatGPT for software modeling is limited, with various syntactic and semantic deficiencies, lack of consistency in responses and scalability issues. We also outline our views on how we perceive the role that LLMs can play in the software modeling discipline in the short term, and how the modeling community can help to improve the current capabilities of ChatGPT and the coming LLMs for software modeling.
C1 [Camara, Javier; Troya, Javier; Burgueno, Lola; Vallecillo, Antonio] Univ Malaga, ITIS Software, ETSI Informat, Campus Teatinos,Bulevar Louis Pasteur 35, Malaga 29071, Spain.
C3 Universidad de Malaga
RP Cámara, J (corresponding author), Univ Malaga, ITIS Software, ETSI Informat, Campus Teatinos,Bulevar Louis Pasteur 35, Malaga 29071, Spain.
EM jcamara@uma.es; jtroya@uma.es; lolaburgueno@uma.es; av@uma.es
RI Vallecillo, Antonio/B-1884-2014; Burgueno, Lola/L-3817-2014; Troya,
   Javier/B-6951-2017
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueno,
   Lola/0000-0002-7779-8810; Troya, Javier/0000-0002-1314-9694
FU Spanish Government (FEDER/Ministerio de Ciencia e Innovacion-Agencia
   Estatal de Investigacion) [PID2021-125527NB-I00, TED2021-130523B-I00]
FX We would like to thank Joerg Kienzle for his comments and very valuable
   feedback on an earlier draft of this paper. This work was partially
   funded by the Spanish Government (FEDER/Ministerio de Ciencia e
   Innovacion-Agencia Estatal de Investigacion) under projects
   PID2021-125527NB-I00 and TED2021-130523B-I00.
CR Atenea Research Group, 2023, THESIS GIT REP CHATG
   Barke S., 2022, ARXIV
   Borji A., 2023, ARXIV
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Cabot J, 2004, LECT NOTES COMPUT SC, V3288, P69
   Capuano T, 2022, J OBJECT TECHNOL, V21, DOI 10.5381/jot.2022.21.3.a4
   Chaaben M.B., 2023, P ICSE NIER 23 IEEE
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   Doderlein J., 2022, ARXIV
   GitHub, 2023, COP YOUR AI PAIR PRO
   Kim H, 2020, PROC VLDB ENDOW, V13, P1737, DOI 10.14778/3401960.3401970
   Marcusarchive G., 2020, GPT 3 BLOVIATOR OPEN
   Meyer B., 2022, COMMUN ACM, V65, P5
   Mok Aaron., 2023, Business Insider
   Open AI, 2023, ChatGPT
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Saini R, 2022, SOFTW SYST MODEL, V21, P1015, DOI 10.1007/s10270-021-00942-6
   Savary-Leblanc M, 2023, SOFTWARE PRACT EXPER, V53, P856, DOI 10.1002/spe.3170
   Vaithilingam P, 2022, EXTENDED ABSTRACTS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2022, DOI 10.1145/3491101.3519665
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
NR 20
TC 16
Z9 16
U1 11
U2 49
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 781
EP 793
DI 10.1007/s10270-023-01105-5
EA MAY 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000992393200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wang, JY
   Ma, C
   Xu, HX
   Tu, ZY
   Xu, XF
   Xu, HC
   Wang, ZJ
AF Wang, Jingying
   Ma, Chao
   Xu, Huixin
   Tu, Zhiying
   Xu, Xiaofei
   Xu, Hanchuan
   Wang, Zhongjie
TI Semi-automatic service value network modeling approach based on external
   public data
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service value network; Modeling method; Service value; Value network
   modeling
ID VALUE CHAIN; BIG DATA; INTERNET
AB Various emerging IT technologies are widely used in the service industry. Thus, an increasing number of new service models have also emerged, including the Internet of Services (IoS). The IoS supports network-based service collaboration and transactions among various service participants from different domains and different organizations, and it is expected to deliver the maximum service value to all stakeholders. To describe the cross-domain, cross-organization, and cross-value chain characteristics of the IoS from a value perspective and support subsequent analysis of the value network and optimization of the IoS, this paper proposes a semi-automatic modeling method for a IoS-oriented value network based on external public data. We first propose an intelligent domain entity recognition algorithm based on multidimensional web data to help value network modelers realize effective and efficient recognition of service participants. Then, based on external news data, an intelligent domain relationship extraction algorithm that combines the Bert + BiLSTM + CRF model with the LightGBM model is proposed to effectively and efficiently identify the value exchange relationships among service participants, thereby forming an IoS-oriented value network model (IVN). Finally, to extend the cross-domain semantics of the IVN and support analysis of the IVN, we present a domain-specific value chain extraction algorithm based on typical patterns to complete the cross-domain semantic annotation of the IVN. The effectiveness and efficiency of the proposed methods and algorithms are validated through experimental analysis and a case study, which can be of great help in IVN modeling.
C1 [Wang, Jingying; Xu, Huixin; Tu, Zhiying; Xu, Xiaofei; Xu, Hanchuan; Wang, Zhongjie] Harbin Inst Technol, Fac Comp, Xidazhi St, Harbin 150000, Heilongjiang, Peoples R China.
   [Ma, Chao] Harbin Univ Sci & Technol, Sch Comp Sci & Technol, Linyuan St, Harbin 150000, Heilongjiang, Peoples R China.
C3 Harbin Institute of Technology; Harbin University of Science &
   Technology
RP Wang, ZJ (corresponding author), Harbin Inst Technol, Fac Comp, Xidazhi St, Harbin 150000, Heilongjiang, Peoples R China.
EM rainy@hit.edu.cn
RI Xu, Huixin/HTN-4199-2023; Xu, Xiaofei/IQS-7571-2023
FU National Key Research and Development Program of China [2018YFB1402900];
   National Science Foundation of China [61832004, 61832014]; Natural
   Science Foundation of Heilongjiang Province, China [QC2018081]
FX This study was supported in part by the National Key Research and
   Development Program of China (No. 2018YFB1402900), the National Science
   Foundation of China (Nos. 61832004, 61832014), and the Natural Science
   Foundation of Heilongjiang Province, China (No. QC2018081).
CR Allee V, 2008, J INTELLECT CAP, V9, P5, DOI 10.1108/14691930810845777
   [Anonymous], VALUE DELIVERY MODEL
   Berre AJ, 2013, IEEE INT ENTERP, P104, DOI 10.1109/EDOCW.2013.18
   Cardoso J, 2009, LECT NOTES BUS INF, V19, P15
   Chen YT, 2015, ADV ENG INFORM, V29, P269, DOI 10.1016/j.aei.2015.06.005
   Dai Z., 2019, 2019 12 INT C IMAG S, P15
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Grudinschi D., 2015, The Innovation Journal, V20, P1
   Hartmann P. M., 2014, BIG DATA BIG BUSINES, P1, DOI DOI 10.1016/J.IM.2014.08.008
   Hartmann PM, 2016, INT J OPER PROD MAN, V36, P1382, DOI 10.1108/IJOPM-02-2014-0098
   Hashemi M, 2020, MULTIMED TOOLS APPL, V79, P11921, DOI 10.1007/s11042-019-08373-8
   Kaplinsky Raphael., 2000, HDB VALUE CHAIN RES
   Ke GL, 2017, ADV NEUR IN, V30
   Mingyi Liu, 2020, 2020 International Conference on Service Science (ICSS), P23, DOI 10.1109/ICSS50103.2020.00012
   NORMANN R, 1993, HARVARD BUS REV, V71, P65
   Oberle D, 2009, BUS INFORM SYST ENG+, V1, P370, DOI 10.1007/s12599-009-0069-9
   Patrício L, 2018, SERV SCI, V10, P76, DOI 10.1287/serv.2017.0201
   Peppard J., 2006, European Management Journal, V24, P128, DOI 10.1016/j.emj.2006.03.003
   Pimentel J, 2018, INT REQUIR ENG CONF, P498, DOI 10.1109/RE.2018.00071
   Qi XG, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459357
   Quek C.Y., 1997, THESIS SCH COMPUTER
   Roper S, 2008, RES POLICY, V37, P961, DOI 10.1016/j.respol.2008.04.005
   Rumbaugh James, 1999, The unified modeling language reference manual
   Schroth C., 2007, IT Professional, V9, P36, DOI 10.1109/MITP.2007.60
   Schüritz R, 2016, CONF BUS INFORM, P133, DOI 10.1109/CBI.2016.23
   Sheng QZ, 2014, INFORM SCIENCES, V280, P218, DOI 10.1016/j.ins.2014.04.054
   Wahlster W., 2014, INTERNET SERVICES TH
   Wang ZJ, 2009, IEEE INT CONF CLOUD, P159, DOI 10.1109/CLOUD.2009.54
   Wei-Meng W.U., 2003, MODERN COMPUTER
   White SA., 2004, IBM Cooperation, V2, P0
   Wu ZH, 2016, IEEE T SERV COMPUT, V9, P664, DOI 10.1109/TSC.2015.2418765
   Xu HCA, 2020, P IEEE I C SERV COMP, P446, DOI 10.1109/SCC49832.2020.00065
   Xu XF, 2015, COMPUTER, V48, P80, DOI 10.1109/MC.2015.182
   Zhongjie Wang, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P210, DOI 10.1109/SCC.2010.15
NR 35
TC 0
Z9 0
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 751
EP 775
DI 10.1007/s10270-022-01014-z
EA JUN 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4K3
UT WOS:000810838700001
DA 2024-07-18
ER

PT J
AU Mkaouar, H
   Blouin, D
   Borde, E
AF Mkaouar, Hana
   Blouin, Dominique
   Borde, Etienne
TI A benchmark of incremental model transformation tools based on an
   industrial case study with AADL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Incremental model transformations; Benchmark; AADL; MoTE; eMoflon;
   VIATRA; YAMTL
AB Incremental model transformation (IMT) tools have been proposed to improve performances of model transformations by updating only the parts of a model that need to be changed when another model on which it depends has been changed. Yet, the question is how these tools are suitable for modeling large and complex systems with rich modeling languages as used in industry. In this paper, we report the results of a benchmark of the most mature IMT tools. Particularly, we benchmark MoTE, eMoflon, VIATRA and YAMTL to evaluate their usability, maintainability and runtime performances. Our benchmark is based on a model transformation of an industrial case study using the standard architecture description language AADL. We propose a reusable evaluation framework, available for tool developers and users. Besides the capability to process large models, our benchmark also assesses IMT tool performances according to the different kinds of complex structures that typically exist in models of rich languages, as well as the complexity of the transformation specifications. Our results show the promising potential of some tools to specify sophisticated specifications and transform large models with good performance, but their use still requires the help of their developers, especially to solve serious problems with their runtime performance.
C1 [Mkaouar, Hana; Blouin, Dominique; Borde, Etienne] Telecom Paris, Inst Polytech Paris, LTCI, Palaiseau, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   Paris
RP Mkaouar, H (corresponding author), Telecom Paris, Inst Polytech Paris, LTCI, Palaiseau, France.
EM mkaouar.hana@gmail.com; dominique.blouin@telecom-paris.fr;
   etienne.borde@telecom-paris.fr
CR Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2011, INFORMATIK 2011
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baki I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2904904
   Barisic A., 2014, INT WORKSH MOD DRIV, P8
   Bergmann G., 2013, Incremental Model Queries in Model-Driven Design
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Biehl M., 2010, TECH REP ISRNKTHMMK, V291
   Bodeveix JP, 2015, SCI COMPUT PROGRAM, V106, P30, DOI 10.1016/j.scico.2015.03.003
   Borde E, 2014, P IEEE RAP SYST PROT, P44, DOI 10.1109/RSP.2014.6966691
   Boronat A, 2021, INT J SOFTW TOOLS TE, V23, P289, DOI 10.1007/s10009-020-00583-y
   Boronat A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P78, DOI 10.1145/3239372.3239386
   Boydston A., 2019, TECHNICAL REPORT
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Debruyne V, 2005, ARCHITECTURE DESCRIP, P181, DOI DOI 10.1007/0-387-24590-1_12
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Greenyer J., 2011, INT S APPL GRAPH TRA, P222
   Hause M., 2006, 15 EUROPEAN SYSTEMS, V9, P1
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Klassen L., 2012, ELECT COMMUN EASST, V54
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lano K, 2013, J SYST SOFTWARE, V86, P412, DOI 10.1016/j.jss.2012.09.006
   Lano K, 2017, LECT NOTES COMPUT SC, V10374, P108, DOI 10.1007/978-3-319-61473-1_8
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Leblebici E., 2014, ELECT COMMUN EASST, V67
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Martínez S, 2017, SCI COMPUT PROGRAM, V136, P1, DOI 10.1016/j.scico.2016.08.006
   Mkaouar H., 2019, INT J SOFTW TOOLS TE, P1
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Nielsen, 1994, USABILITY ENG
   Nils W, 2019, LECT NOTES COMPUT SC, V11629, P131, DOI 10.1007/978-3-030-23611-3_8
   Paz F, 2014, 2014 7TH INTERNATIONAL CONFERENCE ON ADVANCED SOFTWARE ENGINEERING AND ITS APPLICATIONS (ASEA), P11, DOI 10.1109/ASEA.2014.10
   SAE, 2017, AS5506C SAE ARCHITEC
   Schalles C., 2011, P 10 INT C WIRTSCH Z, P787
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Struber Daniel, 2016, BIGMDE STAF, P21
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
NR 53
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 175
EP 201
DI 10.1007/s10270-022-00989-z
EA MAR 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000770741700001
DA 2024-07-18
ER

PT J
AU Dehghani, M
   Kolahdouz-Rahimi, S
   Tisi, M
   Tamzalit, D
AF Dehghani, MohammadHadi
   Kolahdouz-Rahimi, Shekoufeh
   Tisi, Massimo
   Tamzalit, Dalila
TI Facilitating the migration to the microservice architecture via
   model-driven reverse engineering and reinforcement learning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Microservice architecture; Reinforcement learning; Model-driven reverse
   engineering; Migration
ID SHOGI; CHESS; GO
AB The microservice architecture has gained remarkable attention in recent years. Microservices allow developers to implement and deploy independent services, so they are a naturally effective architecture for continuously deployed systems. Because of this, several organizations are undertaking the costly process of manually migrating their traditional software architectures to microservices. The research in this paper aims at facilitating the migration from monolithic software architectures to microservices. We propose a framework which enables software developers/architects to migrate their software systems more efficiently by helping them remodularize the source code of their systems. The framework leverages model-driven reverse engineering to obtain a model of the legacy system and reinforcement learning to propose a mapping of this model toward a set of microservices.
C1 [Dehghani, MohammadHadi; Kolahdouz-Rahimi, Shekoufeh] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Tisi, Massimo] IMT Atlantique, Nantes, France.
   [Tamzalit, Dalila] Univ Nantes, Nantes, France.
C3 University of Isfahan; IMT - Institut Mines-Telecom; IMT Atlantique;
   Nantes Universite
RP Kolahdouz-Rahimi, S (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM mhdehghani@eng.ui.ac.ir; sh.rahimi@eng.ui.ac.ir;
   massimo.tisi@imt-atlantique.fr; Dalila.Tamzalit@univ-nantes.fr
OI Dehghani, MohammadHadi/0009-0002-5540-5841
CR Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Bucchiarone Antonio, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P15, DOI 10.1007/978-3-030-39306-9_2
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Clarete RL, 2018, PHILIPPINE ECONOMY: NO LONGER THE EAST ASIAN EXCEPTION?, P1
   De Alwis AAC, 2020, LECT NOTES COMPUT SC, V12127, P3, DOI 10.1007/978-3-030-49435-3_1
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Escobar Daniel, 2016, 2016 XLII Latin American Computing Conference (CLEI), P1
   Evans E., 2003, Domain-Driven Design
   Fowler SJ., 2016, Production-ready microservices
   Gouigoux JP, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P182, DOI 10.1109/ICSA-C.2019.00040
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Gysel, 2015, THESIS U APPL SCI E
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Kapferer, 2020, THESIS U APPL SCI E
   Lewis J., 2014, Microservices: A definition of this new architectural term
   Namiot D., 2014, International Journal of Open Information Technologies, V2, P24
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   OMG, 2011, KNOWLEDGE DISCOVERY
   Schrittwieser J, 2020, NATURE, V588, P604, DOI 10.1038/s41586-020-03051-4
   Selmadji A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P157, DOI 10.1109/ICSA47634.2020.00023
   Silver D, 2018, SCIENCE, V362, P1140, DOI 10.1126/science.aar6404
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Terzic B, 2018, ENTERP INF SYST-UK, V12, P1034, DOI 10.1080/17517575.2018.1460766
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
   Zhu Z., 2020, TRANSFER LEARNING DE
NR 33
TC 3
Z9 3
U1 4
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1115
EP 1133
DI 10.1007/s10270-022-00977-3
EA FEB 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000756195400001
DA 2024-07-18
ER

PT J
AU Di Ruscio, D
   Kolovos, D
   de Lara, J
   Pierantonio, A
   Tisi, M
   Wimmer, M
AF Di Ruscio, Davide
   Kolovos, Dimitris
   de Lara, Juan
   Pierantonio, Alfonso
   Tisi, Massimo
   Wimmer, Manuel
TI Low-code development and model-driven engineering: Two sides of the same
   coin?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Low-code development; No-code development; Model-driven engineering
AB The last few years have witnessed a significant growth of so-called low-code development platforms (LCDPs) both in gaining traction on the market and attracting interest from academia. LCDPs are advertised as visual development platforms, typically running on the cloud, reducing the need for manual coding and also targeting non-professional programmers. Since LCDPs share many of the goals and features of model-driven engineering approaches, it is a common point of debate whether low-code is just a new buzzword for model-driven technologies, or whether the two terms refer to genuinely distinct approaches. To contribute to this discussion, in this expert-voice paper, we compare and contrast low-code and model-driven approaches, identifying their differences and commonalities, analysing their strong and weak points, and proposing directions for cross-pollination.
C1 [Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
   [Kolovos, Dimitris] Univ York, York, N Yorkshire, England.
   [de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
   [Tisi, Massimo] LS2N UMR CNRS 6004, IMT Atlantique, Nantes, France.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, Linz, Austria.
C3 University of L'Aquila; University of York - UK; Autonomous University
   of Madrid; IMT - Institut Mines-Telecom; IMT Atlantique; Johannes Kepler
   University Linz
RP Di Ruscio, D (corresponding author), Univ Aquila, Laquila, Italy.
EM davide.diruscio@univaq.it; dimitris.kolovos@york.ac.uk;
   juan.delara@uam.es; alfonso.pierantonio@univaq.it;
   massimo.tisi@imt-atlantique.fr; manuel.wimmer@jku.at
RI Kolovos, Dimitrios/L-9830-2014; Di Ruscio, Davide/AAG-4674-2020; de
   Lara, Juan/B-5422-2014
OI Di Ruscio, Davide/0000-0002-5077-6793; Kolovos,
   Dimitris/0000-0002-1724-6563
FU Lowcomote project under European Union's Horizon 2020 research and
   innovation program under the Marie Sklodowska-Curie grant [813884];
   Spanish Ministry of Science [RTI2018-095255-B-I00]; R&D programme of
   Madrid [P2018/TCS-4314]
FX This work has received funding from the Lowcomote project under European
   Union's Horizon 2020 research and innovation program under the Marie
   Sklodowska-Curie grant agree-ment no. 813884. Thework has also been
   partially funded by the Spanish Ministry of Science
   (RTI2018-095255-B-I00) and theR&Dprogramme of Madrid (P2018/TCS-4314).
CR Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Breaux T, 2021, COMMUN ACM, V64, P39, DOI 10.1145/3440753
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cabot J., 2020, P 23 ACM IEEE INT C
   Corley J, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P339
   Cortellessa V, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106362
   Drave I, 2019, SOFTWARE PRACT EXPER, V49, P301, DOI 10.1002/spe.2650
   Gómez A, 2020, SOFTW SYST MODEL, V19, P1229, DOI 10.1007/s10270-020-00776-8
   Google, AUTOML
   Hammond J., 2016, FORRESTER WAVE MOBIL
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation, DOI [10.1002/9780470249260, DOI 10.1002/9780470249260]
   Koplowitz R., 2019, NOW TECH RAPID APP D
   Lieberman H, 2006, END USER DEV EMERGIN, P1, DOI DOI 10.1007/1-4020-5386-X_1
   Martin J., 1991, Rapid Application Development
   Martin J., 1982, Application development without programmers
   Mines C., 2020, PREDICTIONS 2020 MOR
   Mohamed MA, 2021, IEEE ACCESS, V9, P48605, DOI 10.1109/ACCESS.2021.3068358
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Perez-Soler S, 2021, IEEE SOFTWARE, V38, P94, DOI 10.1109/MS.2020.3030198
   Richardson C., 2014, NEW DEV PLATFORMS EM
   Richardson C., 2016, VENDOR LANDSCAPE FRA
   Rymer J., 2018, SIEMENS SNAPS MENDIX
   Rymer J., 2016, FORRESTER WAVE LOW C
   Rymer JR., 2019, FORRESTER WAVE LOW C
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Thomas D, 2019, AGILE WEB DEV RAILS
   Tisi M., 2019, STAF 2019 COLOCATED
   Vincent P., 2016, GART REP
NR 32
TC 39
Z9 42
U1 11
U2 76
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 437
EP 446
DI 10.1007/s10270-021-00970-2
EA JAN 2022
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000741253000003
OA Green Published, Green Submitted, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Elrakaiby, Y
   Borgida, A
   Ferrari, A
   Mylopoulos, J
AF Elrakaiby, Yehia
   Borgida, Alexander
   Ferrari, Alessio
   Mylopoulos, John
TI CaRE: a refinement calculus for requirements engineering based on
   argumentation theory
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Requirements refinement; RE process; RE
   calculus; Argumentation theory; Formal semantics
ID FRAMEWORK; LANGUAGE
AB The Requirements Engineering (RE) process starts with initial requirements elicited from stakeholders-however conflicting, unattainable, incomplete and ambiguous-and successively refines them until a consistent, complete, valid, and unambiguous specification is reached. This is achieved by balancing stakeholders' viewpoints and preferences to reach compromises through negotiation. Several frameworks have been developed to support this process in a structured way, such as KAOS, i*, and RationalGLR. However, none provides the means to model the dialectic negotiation inherent to the RE process, so that the derivation of specifications from requirements is fully explicit and traceable. To address this gap, we propose CaRE, a refinement calculus for requirements engineering based on argumentation theory. CaRE casts the RE refinement problem as an iterative argument between all relevant stakeholders, who point out defects (ambiguity, incompleteness, etc.) of existing requirements, and then propose suitable refinements to address them, thereby leading to the construction of a refinement graph. This graph is then a conceptual model of the RE process. The semantics of refinement graphs is provided using Argumentation Theory, enabling reasoning over the RE process and the automatic computation of software specifications. An alternate semantics is also presented based on abduction and using Horn Theory. The application of CaRE is showcased with an extensive example from the railway domain, and a prototype tool for identifying specifications in a refinement graph is presented.
C1 [Elrakaiby, Yehia] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
   [Borgida, Alexander] Rutgers State Univ, New Brunswick, NJ USA.
   [Ferrari, Alessio] CNR ISTI, Pisa, Italy.
   [Mylopoulos, John] Univ Toronto, Toronto, ON, Canada.
   [Mylopoulos, John] Univ Trento, Trento, Italy.
C3 University of Luxembourg; Rutgers University System; Rutgers University
   New Brunswick; Consiglio Nazionale delle Ricerche (CNR); Istituto di
   Scienza e Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR);
   University of Toronto; University of Trento
RP Elrakaiby, Y (corresponding author), Univ Luxembourg, Esch Sur Alzette, Luxembourg.
EM yehia.elrakaiby@gmail.com; borgida@rutgers.edu;
   alessio.ferrari@isti.cnr.it; jm@cs.toronto.edu
OI FERRARI, ALESSIO/0000-0002-0636-5663
CR [Anonymous], 2011, 291482011E ISOIECIEE
   Bagheri E., 2011, CONSOLIDATING MULTIP, P659
   Black E., 2013, LNCS, P95, DOI DOI 10.1007/978-3-642-54373-9
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Cailliau A, 2019, ACM T AUTON ADAP SYS, V14, DOI 10.1145/3337800
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   Caminada M, 2006, LECT NOTES ARTIF INT, V4160, P111, DOI 10.1007/11853886_11
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DEKLEER J, 1986, ARTIF INTELL, V28, P127, DOI 10.1016/0004-3702(86)90080-9
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Elrakaiby Y, 2018, INT REQUIR ENG CONF, P364, DOI 10.1109/RE.2018.00-24
   Elrakaiby Y, 2017, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2017.27
   Ernst Neil A., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P382, DOI 10.1007/978-3-642-31095-9_25
   European Union Agency for Railways, 2016, ERTMS ETCS SYST REQ
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Finkelstein A., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P402, DOI 10.1145/74587.74645
   Franqueira VNL, 2011, INT REQUIR ENG CONF, P239, DOI 10.1109/RE.2011.6051659
   Ghose AK, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P171, DOI 10.1109/IWSSD.2000.891138
   Greenspan S. J., 1982, Sixth International Conference on Software Engineering, P225
   GREENSPAN SJ, 1986, INFORM SYST, V11, P9, DOI 10.1016/0306-4379(86)90020-7
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Hegel GeorgWilhelm Friedrich., 1988, Phdnomenologie des Geistes
   Hoare C. A. R., 1974, Acta Informatica, V3, P135, DOI 10.1007/BF00264034
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   Hunter A, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P78, DOI 10.1109/ISRE.1997.566844
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Ingolfo S, 2013, DATA KNOWL ENG, V87, P279, DOI 10.1016/j.datak.2012.12.004
   JACKSON M, 1995, PROC INT CONF SOFTW, P15, DOI 10.1145/225014.225016
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Jureta IJ, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P57, DOI 10.1109/RE.2009.8
   Letier E., 2000, IFIP WG2, V9
   Li FL, 2015, LECT NOTES COMPUT SC, V9013, P164, DOI 10.1007/978-3-319-16101-3_11
   Mirbel Isabelle, 2012, Computational Logic in Multi-Agent Systems. Proceedings of the 13th International Workshop, CLIMA XIII, P110, DOI 10.1007/978-3-642-32897-8_9
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Murukannaiah PK, 2015, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2015.7320418
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   SELMAN B, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P343
   Tjong S. F., 2013, The design of SREE-a prototype potential ambiguity finder for requirements specifications and lessons learned, V7830, P80, DOI DOI 10.1007/978-3-642-37422-7_6
   Toulmin S., 2003, The uses of argument, DOI DOI 10.1017/CBO9780511840005
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   van Zee M., 2020, ARGUM COMPUT, P1
   van Zee M, 2016, LECT NOTES COMPUT SC, V9974, P553, DOI 10.1007/978-3-319-46397-1_43
   van Zee M, 2015, INT REQUIR ENG CONF, P220, DOI 10.1109/RE.2015.7320426
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Yu E.S., 1993, P WORKSH INF TECHN S, P9
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
NR 51
TC 0
Z9 0
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2113
EP 2132
DI 10.1007/s10270-021-00943-5
EA NOV 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000714895200001
DA 2024-07-18
ER

PT J
AU Blas, MJ
   Leone, H
   Gonnet, S
AF Blas, Maria Julia
   Leone, Horacio
   Gonnet, Silvio
TI DEVS-based formalism for the modeling of routing processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Routed Discrete Event System Specification; Conceptual modeling;
   Modeling effort; Routing problem; Design patterns
ID EVENT SYSTEM SPECIFICATION; SIMULATION; ARCHITECTURE; EXTENSION;
   FRAMEWORK; LEVEL
AB The Discrete Event System Specification (DEVS) is a modular and hierarchical Modeling and Simulation (M&S) formalism based on systems theory that provides a general methodology for the construction of reusable models. Well-defined M&S structures have a positive impact when building simulation models because they can be applied systematically. However, even when DEVS can be used to model routing situations, the structures that emerge from this kind of problem are significant due to the handling of the flow of events. Often, the modeler ends with a lot of simulation models that refer to variants of the same component. The goal of this paper is to analyze the routing process domain from a conceptual modeling perspective through the use of a new DEVS extension called Routed DEVS (RDEVS). The RDEVS formalism is conceptually defined as a subclass of DEVS that manages a set of identified events inside a model network where each node combines a behavioral description with a routing policy. In particular, we study the modeling effort required to solve the M&S of routing problems scenarios employing a comparison between RDEVS modeling solutions and DEVS modeling strategies. Such a comparison is based on measures that promote the capture of the behavioral complexity of the final models. The results obtained highlight the modeling benefits of the RDEVS formalism as a constructor of routing processes. The proposed solution reduces the modeling effort involved in DEVS by specifying the event routing process directly in the RDEVS models using design patterns. The novel contribution is an advance in the understanding of how DEVS as a system modeling formalism supports best practices of software engineering in general and conceptual modeling in particular. The reusability and flexibility of the final simulation models, along with designs with low coupling and high cohesion, are the main benefits of the proposal that improve the M&S task applying a conceptual modeling perspective.
C1 [Blas, Maria Julia; Leone, Horacio; Gonnet, Silvio] Univ Tecnol Nacl, Inst Diseno & Desarrollo INGAR, Consejo Nacl Invest Cient & Tecn, Avellaneda 3653, Santa Fe, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Blas, MJ (corresponding author), Univ Tecnol Nacl, Inst Diseno & Desarrollo INGAR, Consejo Nacl Invest Cient & Tecn, Avellaneda 3653, Santa Fe, Argentina.
EM mariajuliablas@santafe-conicet.gov.ar; hleone@santafe-conicet.gov.ar;
   sgonnet@santafe-conicet.gov.ar
RI Gonnet, Silvio Miguel/AAA-1296-2019
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Alshareef A., 2017, Proceedings of the Symposium on Model-driven Approaches for Simulation Engineering, P9, DOI DOI 10.22360/SPRINGSIM.2017.MOD4SIM.014
   Alshareef A, 2019, 2019 SPRING SIMULATION CONFERENCE (SPRINGSIM), DOI 10.23919/springsim.2019.8732854
   [Anonymous], 2015, 197592015 ISOIEC TR
   [Anonymous], 2010, P 2010 SPRING SIM MU, DOI DOI 10.1145/1878537.1878714
   Barros F. J., 1997, ACM Transactions on Modeling and Computer Simulation, V7, P501, DOI 10.1145/268403.268423
   Batty M., 2001, Cybergeo: European Journal of Geography, DOI 10.4000/cybergeo.1035
   Bazoun H., 2014, P S THEOR MOD SIM DE, P20
   Bergero F, 2014, SIMUL-T SOC MOD SIM, V90, P522, DOI 10.1177/0037549714529833
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   Blas M, 2017, IEEE LAT AM T, V15, P341, DOI 10.1109/TLA.2017.7854631
   Blas MJ, 2018, WINT SIMUL C PROC, P560, DOI 10.1109/WSC.2018.8632265
   Bogado V, 2014, SIMUL-T SOC MOD SIM, V90, P290, DOI 10.1177/0037549713518586
   Brooks RJ, 1996, MATH COMPUT MODEL, V24, P1, DOI 10.1016/0895-7177(96)00103-3
   Capocchi L, 2020, SIMUL MODEL PRACT TH, V103, DOI 10.1016/j.simpat.2020.102122
   Cetinkaya D, 2011, P SUMM COMP, P113
   CHOW ACH, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P716
   Dávid I, 2018, WINT SIMUL C PROC, P616, DOI 10.1109/WSC.2018.8632470
   Farooq U, 2007, SIMUL MODEL PRACT TH, V15, P285, DOI 10.1016/j.simpat.2006.11.011
   Fehling Christoph., 2014, Cloud Computing Patterns, DOI DOI 10.1007/978-3-7091-1568-8
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Gholami S, 2014, WINT SIMUL C PROC, P2510, DOI 10.1109/WSC.2014.7020095
   Grimm V, 2005, SCIENCE, V310, P987, DOI 10.1126/science.1116681
   Hamri MEA, 2006, SIMUL MODEL PRACT TH, V14, P909, DOI 10.1016/j.simpat.2006.05.004
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hong JS, 1997, DISCRETE EVENT DYN S, V7, P355, DOI 10.1023/A:1008262409521
   Blas MJ, 2020, SN APPL SCI, V2, DOI 10.1007/s42452-020-2171-z
   Blas MJ, 2017, WINT SIMUL C PROC, P774, DOI 10.1109/WSC.2017.8247831
   Blas MJ, 2016, PROC LAT AM COMPUT C
   Kim YJ, 2016, COMM COM INF SC, V603, P40, DOI 10.1007/978-981-10-2158-9_4
   Kofman, 2018, THEORY MODELLING SIM
   Kwon Y, 1996, P AIS 1996, P227
   Liu Q, 2007, SIMUL-T SOC MOD SIM, V83, P449, DOI 10.1177/0037549707085084
   Mikhail, 2017, P THEOR MOD SIM S
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   Page-Jones M., 1980, The practical guide to structured systems design
   Risco-Martin J.L., 2016, Proceedings of the Summer Computer Simulation Conference, P45
   Robinson S, 2008, J OPER RES SOC, V59, P278, DOI 10.1057/palgrave.jors.2602368
   Robinson S, 2004, SIMUL MODEL PRACT TH, V12, P479, DOI 10.1016/j.simpat.2003.11.006
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Santucci JF, 2016, SIMUL-T SOC MOD SIM, V92, P747, DOI 10.1177/0037549716657168
   SCHRUBEN L, 1993, 1993 WINTER SIMULATION CONFERENCE PROCEEDINGS, P641
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Steiniger A, 2016, ACM T MODEL COMPUT S, V26, DOI 10.1145/2818641
   Tall D.A., 2010, P 2010 SPRING SIM MU, P29, DOI [10.1145/1878537.1878568, DOI 10.1145/1878537.1878568]
   Uhrmacher Adelinde M., 2007, 2007 Winter Simulation Conference, P871, DOI 10.1109/WSC.2007.4419683
   Van Tendeloo Y, 2017, SIMUL-T SOC MOD SIM, V93, P103, DOI 10.1177/0037549716678330
   Wainer GA, 2002, DISCRETE EVENT DYN S, V12, P135, DOI 10.1023/A:1014536803451
   Wainer G, 2017, IEEE INT C NETW SENS, P807, DOI 10.1109/ICNSC.2017.8000194
   Zeigler, 2004, T COMPUT SYST BIOL, VI, P66, DOI [10.1007/978-3-540-32126-2_6, DOI 10.1007/978-3-540-32126-2_6]
   Zeigler B., 2018, P 2018 SPRING SIM MU, DOI [10.1145/3213187.3213194, DOI 10.1145/3213187.3213194]
NR 51
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1179
EP 1208
DI 10.1007/s10270-021-00928-4
EA OCT 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000713084300001
DA 2024-07-18
ER

PT J
AU Akiki, PA
   Maalouf, HW
AF Akiki, Pierre A.
   Maalouf, Hoda W.
TI CHECKSUM: tracking changes and measuring contributions in cooperative
   systems modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Models; Diagrams; Changes; Contributions; Cooperative work; Design tools
   and techniques
ID REQUIREMENTS; HELP; TOOL
AB Models are often used to represent various types of systems. This is especially true for software systems, where cooperating teams create models using a modeling language (e.g., UML). In cooperative modeling scenarios, it is useful to identify contributions and changes performed by individuals and teams. This paper presents a technique called CHECKSUM, which monitors the cooperative work done on models and maintains an immutable changelog. CHECKSUM uses its changelog to measure contributions based on points, time, and quality, and to enable the auditing of a model's change-history. This paper also presents GEneric Meta-Model (GEMM). The latter unifies the underlying representation of different types of models that follow varying visualization patterns including box and line, container, and interleaving. GEMM enables CHECKSUM to support an extensible variety of model types. We developed a prototype tool that realizes CHECKSUM's concepts and integrates it into two existing modeling tools. We conducted two studies to evaluate CHECKSUM from two perspectives: technical and user. The studies yielded positive results concerning various qualities including integrability into existing tools, effectiveness, efficiency, usability, and usefulness.
C1 [Akiki, Pierre A.; Maalouf, Hoda W.] Notre Dame Univ Louaize, Dept Comp Sci, Zouk Mosbeh, Lebanon.
C3 Notre Dame University Lebanon
RP Akiki, PA (corresponding author), Notre Dame Univ Louaize, Dept Comp Sci, Zouk Mosbeh, Lebanon.
EM pakiki@ndu.edu.lb; hmaalouf@ndu.edu.lb
CR Akiki P.A., 2013, Proceedings of the 5th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, P139, DOI DOI 10.1145/2494603.2480332
   Akiki PA, 2019, IET SOFTW, V13, P75, DOI 10.1049/iet-sen.2018.5163
   Akiki PA, 2018, J SYST SOFTWARE, V135, P165, DOI 10.1016/j.jss.2017.10.017
   Akiki PA, 2017, ACM T COMPUT-HUM INT, V24, DOI 10.1145/3057857
   Akiki PA, 2016, IEEE T SOFTWARE ENG, V42, P1118, DOI 10.1109/TSE.2016.2553035
   Akiki PA, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P712, DOI 10.1145/2568225.2568230
   [Anonymous], 2011, CHI 11 HUM FACT COMP
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], 2007, CHI 07 EXTENDED ABST
   [Anonymous], 2012, VISUAL MODELS SOFTWA
   Arazy O., 2009, 3 INT AAAI C WEBL SO
   Azevedo D., 2011, P ECSCW 2011 WORKSH
   Bendix L, 2009, LECT NOTES COMPUT SC, V5795, P167, DOI 10.1007/978-3-642-04425-0_13
   Benedek Joey., 2002, Proceedings of Usability Professionals Association, V2003, P57
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Brandes U, 2002, LECT NOTES COMPUT SC, V2265, P501
   Brosch P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a2
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Connolly T.M., 2014, Database systems: a practical approach to design, implementation, and management
   Dadgari D., 2010, P 24 BCS INT SPEC GR, P62
   Danado J, 2014, J VISUAL LANG COMPUT, V25, P297, DOI 10.1016/j.jvlc.2014.03.005
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DeMarco T., 2001, PIONEERS THEIR CONTR, P255
   Ehmann K., 2008, First Monday, V13
   Elmasri R., 2015, FUNDAMENTALS DATABAS, V7th
   Elsden C, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174032
   Favre J.M, 2004, 3 WORKSH SOFTW MOD E, P262
   Flöck F, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P843, DOI 10.1145/2566486.2568026
   Förtsch S, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P90
   Foth Marcus, 2017, P 29 AUSTR C COMP HU, P513, DOI [10.1145/3152771.3156168, DOI 10.1145/3152771.3156168]
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   García F, 1999, INT FED INFO PROC, V22, P149
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grune D., 1986, CONCURRENT VERSIONS
   Himsolt Michael, 1997, TECHNICAL REPORT
   Hoisl B, 2007, LECT NOTES COMPUT SC, V4564, P362
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Korfiatis NT, 2006, ONLINE INFORM REV, V30, P252, DOI 10.1108/14684520610675780
   Kuttal SK, 2014, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2560016
   Li Y, 2017, LECT NOTES COMPUT SC, V10178, P556, DOI 10.1007/978-3-319-55699-4_34
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Liu S F, 2006, ADV INFO KNOW PROC, P7
   Maloney J., 2010, ACM T COMPUT EDUC, V10, P16, DOI DOI 10.1145/1868358.1868363
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S, 2018, SOFTW SYST MODEL, V17, P753, DOI 10.1007/s10270-016-0552-y
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Milovanovic V, 2015, SOFTW SYST MODEL, V14, P1273, DOI 10.1007/s10270-013-0378-9
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nejati S, 2012, IEEE T SOFTWARE ENG, V38, P1355, DOI 10.1109/TSE.2011.112
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   Nizamuddin N, 2019, COMPUT ELECTR ENG, V76, P183, DOI 10.1016/j.compeleceng.2019.03.014
   Olsen DR, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P251
   Parizi RM, 2018, PROC FRONT EDUC CONF, DOI 10.1109/FIE.2018.8658983
   Pasternak E, 2017, 2017 IEEE BLOCKS AND BEYOND WORKSHOP (B&B), P21, DOI 10.1109/BLOCKS.2017.8120404
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Peng ZH, 2020, IEEE T CYBERNETICS, V50, P2527, DOI 10.1109/TCYB.2019.2914717
   Pfeil U, 2006, J COMPUT-MEDIAT COMM, V12, P88, DOI 10.1111/j.1083-6101.2006.00316.x
   Pilato C.M., 2008, VERSION CONTROL SUBV
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Preece J, 2015, INTERACTION DESIGN H, P486
   Rich C, 2007, AI MAG, V28, P33
   Robinson I., 2013, Graph databases
   Rubin B, 2008, MIDDLE E FOCUS, P7
   Rubin Julia., 2010, SPLC WORKSHOPS, P155
   Sabel M., 2007, Proceedings of WikiSym, P125
   Sabetzadeh M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P815, DOI 10.1145/1368088.1368208
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schank P., 2004, Computer Supported Cooperative Work Conference Proceedings, P574, DOI 10.1145/1031607.1031704
   Schwäger F, 2019, SOFTW SYST MODEL, V18, P3373, DOI 10.1007/s10270-019-00722-3
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   Somogyi FA, 2020, SOFTW SYST MODEL, V19, P693, DOI 10.1007/s10270-019-00760-x
   Spinellis D, 2005, IEEE SOFTWARE, V22, P108, DOI 10.1109/MS.2005.140
   Spinellis D, 2012, IEEE SOFTWARE, V29, P100, DOI 10.1109/MS.2012.61
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Torres J, 2017, INT CONF EDEMOC EGOV, P63, DOI 10.1109/ICEDEG.2017.7962514
   Wang DK, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1865, DOI 10.1145/2702123.2702517
   Wenzel S, 2014, SOFTW SYST MODEL, V13, P679, DOI 10.1007/s10270-012-0311-7
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
   Wiegers Karl, 2013, Software Requirements
   Winter A, 2002, LECT NOTES COMPUT SC, V2269, P324
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zhu NP, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P254
   Zolotas A, 2020, SOFTW SYST MODEL, V19, P17, DOI 10.1007/s10270-019-00732-1
NR 90
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1079
EP 1122
DI 10.1007/s10270-020-00840-3
EA JAN 2021
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000605118600001
DA 2024-07-18
ER

PT J
AU Bravetti, M
   Zavattaro, G
AF Bravetti, Mario
   Zavattaro, Gianluigi
TI Asynchronous session subtyping as communicating automata refinement
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Session types; Behavioural contracts; Communicating finite-state
   machines
ID CHOREOGRAPHY CONFORMANCE; UNDECIDABILITY
AB We study the relationship between session types and behavioural contracts, representing Communicating Finite State Machines (CFSMs), under the assumption that processes communicate asynchronously. Session types represent a syntax-based approach for the description of communication protocols, while behavioural contracts, formally expressing CFSMs, follow an operational approach. We show the existence of a fully abstract interpretation of session types into a fragment of contracts that maps session subtyping into binary compliance-preserving CFSMs/behavioural contract refinement. In this way, on the one hand, we enrich the theory of session types with an operational characterization and, on the other hand, we use recent undecidability results for asynchronous session subtyping to obtain an original undecidability result for asynchronous CFSMs/behavioural contract refinement.
C1 [Bravetti, Mario; Zavattaro, Gianluigi] Univ Bologna, Dept Comp Sci & Engn, Bologna, Italy.
   [Zavattaro, Gianluigi] Univ Bologna, Focus Team, INRIA, Bologna, Italy.
C3 University of Bologna; University of Bologna
RP Bravetti, M (corresponding author), Univ Bologna, Dept Comp Sci & Engn, Bologna, Italy.
EM mario.bravetti@unibo.it
FU Alma Mater StudiorumUniversita di Bologna within the CRUI-CARE Agreement
FX Open access funding provided by Alma Mater StudiorumUniversita di
   Bologna within the CRUI-CARE Agreement.
CR Aldini A, 2004, LECT NOTES ARTIF INT, V2946, P1
   Ancona D, 2016, FOUND TRENDS PROGRAM, V3, pI, DOI 10.1561/2500000031
   Baeten JCM, 2008, MATH STRUCT COMP SCI, V18, P1057, DOI 10.1017/S0960129508007111
   Barbanera F, 2015, MATH STRUCT COMP SCI, V25, P1339, DOI 10.1017/S096012951400005X
   Bernardi G, 2016, MATH STRUCT COMP SCI, V26, P510, DOI 10.1017/S0960129514000243
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Bravetti M., 2018, LECT NOTES COMPUTER, V10852, P21
   Bravetti M., 2019, LEIBNIZ INT P INFORM, p38:1
   Bravetti M, 2007, LECT NOTES COMPUT SC, V4829, P34
   Bravetti M, 2007, LECT NOTES COMPUT SC, V4767, P207
   Bravetti M, 2020, J LOG ALGEBR METHODS, V112, DOI 10.1016/j.jlamp.2020.100527
   Bravetti M, 2019, LECT NOTES COMPUT SC, V11724, P29, DOI 10.1007/978-3-030-30446-1_2
   Bravetti M, 2018, THEOR COMPUT SCI, V722, P19, DOI 10.1016/j.tcs.2018.02.010
   Bravetti M, 2018, J LOG ALGEBR METHODS, V96, P41, DOI 10.1016/j.jlamp.2018.01.002
   Bravetti M, 2017, INFORM COMPUT, V256, P300, DOI 10.1016/j.ic.2017.07.010
   Bravetti M, 2009, LECT NOTES COMPUT SC, V5387, P37, DOI 10.1007/978-3-642-01364-5_3
   Bravetti M, 2009, LECT NOTES COMPUT SC, V5569, P261
   Bravetti M, 2009, MATH STRUCT COMP SCI, V19, P565, DOI 10.1017/S0960129509007683
   Bravetti M, 2009, LECT NOTES COMPUT SC, V5474, P1, DOI 10.1007/978-3-642-00945-7_1
   Castagna G, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P261, DOI 10.1145/1328438.1328471
   Cécé G, 2005, INFORM COMPUT, V202, P166, DOI 10.1016/j.ic.2005.05.006
   Chen TC, 2017, LOG METH COMPUT SCI, V13, DOI 10.23638/LMCS-13(2:12)2017
   de Boer FS, 2018, FUND INFORM, V159, P197, DOI 10.3233/FI-2018-1663
   Deniélou PM, 2013, LECT NOTES COMPUT SC, V7966, P174, DOI 10.1007/978-3-642-39212-2_18
   Gay S, 2005, ACTA INFORM, V42, P191, DOI 10.1007/s00236-005-0177-z
   Gay Simon J., 2016, A List of Successes that can Change the World. Essays Dedicated to Philip Wadler on the Occasion of his 60th Birthday. LNCS 9600, P95, DOI 10.1007/978-3-319-30936-1_5
   Gay S.J., 2020, EPTCS, V314, P23
   Hu R, 2016, LECT NOTES COMPUT SC, V9633, P401, DOI 10.1007/978-3-662-49665-7_24
   Laneve C, 2007, LECT NOTES COMPUT SC, V4703, P212
   Lange J, 2017, LECT NOTES COMPUT SC, V10203, P441, DOI 10.1007/978-3-662-54458-7_26
   Lindley S, 2016, ACM SIGPLAN NOTICES, V51, P133, DOI [10.1145/2976002.2976018, 10.1145/3241625.2976018]
   Milner R., 1989, Communication and concurrency
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Mostrous D, 2015, INFORM COMPUT, V241, P227, DOI 10.1016/j.ic.2015.02.002
   Mostrous D, 2009, LECT NOTES COMPUT SC, V5502, P316, DOI 10.1007/978-3-642-00590-9_23
   Neykova R., 2018, P 27 INT C COMP CONS
   Orchard D, 2016, ACM SIGPLAN NOTICES, V51, P568, DOI 10.1145/2914770.2837634
   Padovani L, 2017, J FUNCT PROGRAM, V27, P1, DOI 10.1017/S0956796816000289
   Scalas A., 2016, LIPICS, V56, P211
   Scalas A, 2018, J LOG ALGEBR METHODS, V97, P55, DOI 10.1016/j.jlamp.2018.01.001
NR 40
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 311
EP 333
DI 10.1007/s10270-020-00838-x
EA JAN 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000604826600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Gómez, A
   Rodríguez, RJ
   Cambronero, ME
   Valero, V
AF Gomez, Abel
   Rodriguez, Ricardo J.
   Cambronero, Maria-Emilia
   Valero, Valentin
TI Profiling the publish/subscribe paradigm for automated analysis using
   colored Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML 2; 5; Distributed resources; Publish; Subscribe; Automated analysis;
   WSRF; WSN; Colored Petri nets; CPN tools
ID WEB SERVICES; MODEL
AB UML sequence diagrams are used to graphically describe the message interactions between the objects participating in a certain scenario. Combined fragments extend the basic functionality of UML sequence diagrams with control structures, such as sequences, alternatives, iterations, or parallels. In this paper, we present a UML profile to annotate sequence diagrams with combined fragments to model timed Web services with distributed resources under the publish/subscribe paradigm. This profile is exploited to automatically obtain a representation of the system based on Colored Petri nets using a novel model-to-model (M2M) transformation. This M2M transformation has been specified using QVT and has been integrated in a new add-on extending a state-of-the-art UML modeling tool. Generated Petri nets can be immediately used in well-known Petri net software, such as CPN Tools, to analyze the system behavior. Hence, our model-to-model transformation tool allows for simulating the system and finding design errors in early stages of system development, which enables us to fix them at these early phases and thus potentially saving development costs.
C1 [Gomez, Abel] Univ Oberta Catalunya, Internet Interdisciplinary Inst IN3, Avda Carl Friedrich Gauss 5, Barcelona 08060, Spain.
   [Rodriguez, Ricardo J.] Ctr Univ Def, Acad Gen Mil, Carr Huesca S-N, Zaragoza 50090, Spain.
   [Cambronero, Maria-Emilia; Valero, Valentin] Univ Castilla La Mancha, Dept Sistemas Informat, Escuela Super Ingn Informat Albacete, Albacete 02071, Spain.
C3 UOC Universitat Oberta de Catalunya; Universidad de Castilla-La Mancha
RP Rodríguez, RJ (corresponding author), Ctr Univ Def, Acad Gen Mil, Carr Huesca S-N, Zaragoza 50090, Spain.
EM agomezlla@uoc.edu; rjrodriguez@unizar.es; memilia.cambronero@uclm.es;
   valentin.valero@uclm.es
RI Gómez, Abel/J-8652-2012; Rodriguez, Ricardo/GXF-0596-2022; Valero,
   Valentin/G-8268-2015
OI Gómez, Abel/0000-0003-1344-8472; Cambronero, Maria/0000-0003-2153-8830;
   Valero, Valentin/0000-0003-3462-7656
FU EU H2020 through the DICE Project [644869]; Spanish MINECO through
   CyCriSec Project [TIN2014-58457-R]; Spanish Ministry of Science and
   Innovation [TIN2015-65845-C3]; European Union FEDER Funds
   [TIN2015-65845-C3]; JCCM regional project [SBPLY/17/180501/000276]
FX The research of A.Gomez and R.J.Rodriguez was supported in part by the
   EU H2020 through the DICE Project under Grant 644869 and in part by the
   Spanish MINECO through CyCriSec Project under Grant TIN2014-58457-R. The
   research of M.E.Cambronero and V.Valero was supported by the Spanish
   Ministry of Science and Innovation and the European Union FEDER Funds
   through the DArDOS Project under Grant TIN2015-65845-C3, subproject 2-R,
   and also by the JCCM regional project SBPLY/17/180501/000276, which is
   also co-financed by the European Union FEDER Funds.
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 1997, The Definition of Standard ML
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Baeten J.C. M., 2002, EATCS Monographs Series
   Baldoni R, 2003, EIGHTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P304
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   Bettini L., 2016, IMPLEMENTING DOMAIN, P2
   Bowles Juliana Kuster Filipe, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P252, DOI 10.1007/978-3-319-25423-4_16
   Bowles J, 2010, ASIA PAC SOFWR ENG, P216, DOI 10.1109/APSEC.2010.33
   Bowles JKF, 2006, LECT NOTES COMPUT SC, V4019, P189
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cambronero ME, 2013, PROCEDIA COMPUT SCI, V18, P140, DOI 10.1016/j.procs.2013.05.177
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Cambronero ME, 2010, SOFTW TEST VERIF REL, V20, P3, DOI 10.1002/stvr.405
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Fernandes J M., 2007, Proceedings of the Sixth International Workshop on Scenarios and State Machines, P2, DOI [10.1109/SCESM.2007.1, DOI 10.1109/SCESM.2007.1]
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gomez A., 2006, INTERGENOMICS TRANSP
   Gómez A, 2014, INFORM SOFTWARE TECH, V56, P1101, DOI 10.1016/j.infsof.2013.12.006
   Gronmo R, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a8
   Hilken F, 2018, SOFTW SYST MODEL, V17, P885, DOI 10.1007/s10270-016-0568-3
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   INRIA LINA, 2014, ATLAS TRANSF LANG
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jensen K., 1996, COLOURED PETRI NETS, VI.
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Küster-Filipe J, 2006, THEOR COMPUT SCI, V351, P203, DOI 10.1016/j.tcs.2005.09.068
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lin Y., 2003, 16 IND U COMP SCI DE
   McAffer J, 2009, OSGI EQUINOX CREATIN
   Mirandola R, 2000, LECT NOTES COMPUT SC, V1939, P178
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Niblett P, 2005, IBM SYST J, V44, P869, DOI 10.1147/sj.444.0869
   Randimbivololona F, 2001, LECT NOTES COMPUTER, P131
   Richters M, 2000, LECT NOTES COMPUT SC, V1939, P265
   Rodríguez RJ, 2015, COMPUT J, V58, P2313, DOI 10.1093/comjnl/bxu096
   Selic B, 2000, COMPUTER, V33, P64, DOI 10.1109/2.846320
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Steinberg D., 2009, EMF ECLIPSE MODELING
   The Eclipse Foundation, 2014, MODISCO ECL PROJ
   Tribastone M, 2008, INT CONF QUANT EVAL, P205, DOI 10.1109/QEST.2008.18
   Valero V., 2015, LECT NOTES COMPUTER, V9128, P81
   Valero V, 2017, MATH COMP MODEL DYN, V23, P570, DOI 10.1080/13873954.2016.1277360
NR 49
TC 4
Z9 4
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2973
EP 3003
DI 10.1007/s10270-019-00716-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500008
OA hybrid
DA 2024-07-18
ER

PT J
AU Binalialhag, T
   Hassine, J
   Amyot, D
AF Binalialhag, Taha
   Hassine, Jameleddine
   Amyot, Daniel
TI Static slicing of Use Case Maps requirements models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements specification; Use Case Maps; Slicing; User Requirements
   Notation; Comprehension; Maintenance
ID PROGRAM; DEPENDENCE; AUTOMATA
AB Requirements specification is a crucial stage in many software development life cycles. As requirements specifications evolve, they often become more complex. The development of methods to assist the comprehension and maintenance of requirements specifications has gained much attention in the past 20years. However, there is much room for improvement for model-based specifications. The Use Case Maps (UCM) language, part of the ITU-T Z.151 User Requirements Notation standard, is a visual modeling notation that aims to describe requirements at a high level of abstraction. A UCM specification is used to integrate and capture both functional aspects (based on causal scenarios representing behavior) and architectural aspects (actors and system components responsible for scenario activities). As UCM models evolve and grow, they rapidly become hard to understand and to maintain. In this paper, we propose a static slicing technique to enhance the comprehension of UCM models. The developed slicing approach is implemented within the jUCMNav tool. We validate the proposed approach using a mock system and three publicly available UCM specifications. The results suggest that, on average, the models can be reduced by about 70% through slicing without losing information required for comprehension and maintenance activities. A small experiment involving 9 participants also suggests that the understandability of UCM specifications and comprehension speed have both improved substantially by using jUCMNav's new slicing feature.
C1 [Binalialhag, Taha; Hassine, Jameleddine] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
   [Amyot, Daniel] Univ Ottawa, Sch Elect Engn & Comp Sci, 800 King Edward St, Ottawa, ON K1N 6N5, Canada.
C3 King Fahd University of Petroleum & Minerals; University of Ottawa
RP Hassine, J (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
EM g201102370@kfupm.edu.sa; jhassine@kfupm.edu.sa; damyot@uottawa.ca
RI Hassine, Jameleddine/E-5940-2015; Amyot, Daniel/AAI-6948-2020
OI Amyot, Daniel/0000-0003-2414-1791
FU Deanship of Scientific Research at King Fahd University of Petroleum
   Minerals [FT141006]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals for funding this work through project No. FT141006.
CR Alkaf HS, 2017, LECT NOTES COMPUT SC, V10567, P157, DOI 10.1007/978-3-319-68015-6_10
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Androutsopoulos K, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501667
   Androutsopoulos K, 2013, IEEE T SOFTWARE ENG, V39, P892, DOI 10.1109/TSE.2012.72
   Androutsopoulos K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/1985793.1985834
   Androutsopoulos K, 2009, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2009.5306309
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   [Anonymous], 2016, JUCMNAV V7 0 0 JUCMN
   [Anonymous], P 4 INT WORKSH FEAT
   BECK J, 1993, PROC INT CONF SOFTW, P509, DOI 10.1109/ICSE.1993.346015
   BERGERETTI JF, 1985, ACM T PROGR LANG SYS, V7, P37, DOI 10.1145/2363.2366
   Best E, 2008, LECT NOTES BUS INF, V5, P45
   Binkley D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P43
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Boubaker A, 2015, LECT NOTES BUS INF P, V209, P20, DOI 10.1007/978-3-319-17957-5_2
   Bouras ZE, 2015, COMPLEXITY, V1, P2
   Bozga M, 2000, LECT NOTES COMPUT SC, V1785, P235
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Chan W., 1998, Software Engineering Notes, V23, P102, DOI 10.1145/271775.271798
   Colangelo D, 2006, LECT NOTES COMPUT SC, V4229, P243
   Fox C., 2006, DAGST SEM P
   Ganapathy Vinod., 2002, Electronic Notes in Theoretical Computer Science, V65, P50
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Gupta R., 1995, SIGSOFT Software Engineering Notes, V20, P29, DOI 10.1145/222132.222137
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 2001, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2001.972724
   Hassine J., 2004, System Analysis and Modeling. 4th International SDL and MSC Workshop, SAM 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3319), P138
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Hassine J, 2015, SOFTENG 2015, P1
   Heimdahl MPE, 1998, EUROMICRO CONF PROC, P435, DOI 10.1109/EURMIC.1998.711837
   Heimdahl MPE, 1997, LECT NOTES COMPUT SC, V1301, P450, DOI 10.1145/267896.267926
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   ITU-T, 2012, Z151 ITUT
   Janowska A, 2006, FUND INFORM, V72, P181
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N, 2010, BASICS SOFTWARE ENG, P1
   Kan SL, 2018, SOFTWARE PRACT EXPER, V48, P428, DOI 10.1002/spe.2526
   Kealey J., 2007, THESIS
   Kealey J, 2007, LECT NOTES COMPUT SC, V4745, P133
   Kim T., 2000, J. Computer and Information Science, V1, P91
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Labbé S, 2008, FORM ASP COMPUT, V20, P563, DOI 10.1007/s00165-008-0086-3
   Lallchandani JT, 2011, IEEE T SOFTWARE ENG, V37, P737, DOI 10.1109/TSE.2010.112
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   Lity S, 2016, LECT NOTES COMPUT SC, V9679, P3, DOI 10.1007/978-3-319-35122-3_1
   Lity S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P530, DOI 10.1109/SANER.2015.7081871
   Luangsodsai A., 2010, P COMP SCI EL ENG C, P1
   Ojala V., 2007, HUTTCSB25
   Philip S., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1640162.1666579
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Rabbi F, 2013, ELECTRON NOTES THEOR, V295, P79, DOI 10.1016/j.entcs.2013.04.007
   Ray Mitrabinda, 2009, International Journal of Recent Trends in Engineering, V1, P117
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Shaikh A, 2018, IEEE ACCESS
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Stafford JudithA., 1998, ISAW 98, P129, DOI DOI 10.1145/288408.288441
   Sun WL, 2013, LECT NOTES COMPUT SC, V8107, P724, DOI 10.1007/978-3-642-41533-3_44
   Takada T, 2002, PROG COMPREHEN, P169, DOI 10.1109/WPC.2002.1021338
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Umemori F, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P108, DOI 10.1109/SCAM.2003.1238037
   VanLangenhove S., 2006, THESIS
   Vaysburg B., 2002, Software Engineering Notes, V27, P107, DOI 10.1145/566171.566188
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wright H.K., 2010, P FSE SDP WORKSH FUT, P411
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Zhao JJ, 1998, IEEE INT C ENG COMP, P87, DOI 10.1109/ICECCS.1998.706659
NR 74
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2465
EP 2505
DI 10.1007/s10270-018-0680-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900005
DA 2024-07-18
ER

PT J
AU Ramos-Merino, M
   Santos-Gago, JM
   Alvarez-Sabucedo, LM
   Alonso-Roris, VM
   Sanz-Valero, J
AF Ramos-Merino, Mateo
   Santos-Gago, Juan M.
   Alvarez-Sabucedo, Luis M.
   Alonso-Roris, Victor M.
   Sanz-Valero, Javier
TI BPMN-E<SUP>2</SUP>: a BPMN extension for an enhanced workflow
   description
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE BPMN; HACCP; Quality controls; Conformance checking; Process monitoring;
   Process mining; Enhanced expressiveness; Time constraints; Activity
   effect; Parenteral nutrition
AB This paper discusses a business process model and notation (BPMN) extension that includes new elements designed to improve its expressiveness. In previous works, different shortcomings concerning the BPMN language were detected. As a result, a set of requirements to overcome these issues was collected and used to guide this work. The proposed extension supports the representation of information commonly used by experts in the hazard analysis and critical control points domain, usually expressed in natural language, in a machine-understandable fashion. To take full advantage of the features introduced in this BPMN extension, tools such as ProM can be easily upgraded with appropriate plugins to support the new elements. In this line, an advanced conformance checking plugin was developed for process mining on BPMN models. A real-world example of use showing the benefits of applying the new elements is also discussed. This proposal paves the way for novel advanced analysis mechanisms for traceability systems.
C1 [Ramos-Merino, Mateo; Santos-Gago, Juan M.; Alvarez-Sabucedo, Luis M.; Alonso-Roris, Victor M.] Univ Vigo, Escola Enxenaria Telecomunicac, Campus Lagoas Marcosende, Vigo 36310, Galicia, Spain.
   [Sanz-Valero, Javier] Univ Miguel Hernandez, Dept Salud Publ Hist Ciencia & Ginecol, Campus St Joan, Alicante 03550, Spain.
C3 Universidade de Vigo; Universidad Miguel Hernandez de Elche
RP Ramos-Merino, M (corresponding author), Univ Vigo, Escola Enxenaria Telecomunicac, Campus Lagoas Marcosende, Vigo 36310, Galicia, Spain.
EM mateo.ramos@gist.uvigo.es
RI Gago, Juan Manuel Santos/ABG-9718-2020; Sanz-Valero, Javier/C-4298-2015;
   Ramos Merino, Mateo/D-3749-2018
OI Gago, Juan Manuel Santos/0000-0002-2930-4249; Ramos Merino,
   Mateo/0000-0003-2460-0441; Alvarez Sabucedo, Luis/0000-0002-5834-7045
FU Instituto de Salud Carlos III [PI16/00788]
FX This work has been partially funded by Instituto de Salud Carlos III
   through the PI16/00788 project (Quality control and traceability of
   biohazardous medicinal products (BPM) through the Hospital at Home using
   Big Data models applied to risk analysis).
CR Rorís VMA, 2016, JMIR RES PROTOC, V5, DOI 10.2196/resprot.4907
   Alonso-Rorís VM, 2016, COMPUT IND, V83, P1, DOI 10.1016/j.compind.2016.08.003
   [Anonymous], 2014, EMISA 2014
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   Bernabéu Soria Beatriz, 2015, Farm Hosp., V39, P358, DOI 10.7399/fh.2015.39.6.9689
   Bocciarelli P, 2011, SIMUL SERIES, V43, P160
   Braun L, 2014, 2014 European Frequency and Time Forum (EFTF), P9, DOI 10.1109/EFTF.2014.7331414
   Decker G, 2007, IEEE INT ENTERP DIST, P27, DOI 10.1109/EDOC.2007.41
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Friedenstab JP, 2012, P 45 HAW INT C SYST, P4158, DOI DOI 10.1109/HICSS.2012.276
   Gagne Denis, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P361, DOI 10.1109/CEC.2009.71
   Gansner Emden, 2006, Technical report
   Herzberg N., 2012, ZEUS, P97
   Kafetzopoulos DP, 2013, FOOD CONTROL, V33, P505, DOI 10.1016/j.foodcont.2013.03.044
   Korherr B, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P287
   Laue R, 2016, PROCEEDINGS - 30TH EUROPEAN CONFERENCE ON MODELLING AND SIMULATION ECMS 2016, P413
   Lodhi A., 2011, J. Riga Technical University, V43, P27, DOI [10.2478/v10143-011-0004-7, DOI 10.2478/V10143-011-0004-7]
   Mans RS, 2009, APPL PROCESS MINING
   Martínez S, 2012, INTED PROC, P3116
   Merino M. R., 2016, BPMN E 2 EXTENSION E
   Object Management Group, 2016, DEC MOD NOT DMN VERS
   Pillat RM, 2015, INFORM SOFTWARE TECH, V57, P95, DOI 10.1016/j.infsof.2014.09.004
   Ramon-Stroppi LJ, 2011, 14 IB C SOFTW ENG, P25
   Merino MR, 2016, ADV INTELL SYST, V444, P297, DOI 10.1007/978-3-319-31232-3_28
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Rorís VMA, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0593-3
   Saeedi Kawther, 2010, 2010 IEEE International Conference on Web Services (ICWS), P616, DOI 10.1109/ICWS.2010.116
   Van der Aalst W.M., 2009, BPM (Demos), V489, P2
   van der Aalst W. M. P., 2012, ACM TRANS MANAG INF, V3, DOI [DOI 10.1145/2229156.2229157, 10.1145/2229156.2229157]
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Rensburg SJ, 2015, LECT N MECH ENG, P285, DOI 10.1007/978-3-319-15536-4_24
   Zor Sema., 2011, P 44 CIRP INT C MAN, P1
NR 33
TC 7
Z9 8
U1 1
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2399
EP 2419
DI 10.1007/s10270-018-0669-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900002
DA 2024-07-18
ER

PT J
AU Berardinelli, L
   Bernardo, M
   Cortellessa, V
   DiMarco, A
AF Berardinelli, Luca
   Bernardo, Marco
   Cortellessa, Vittorio
   DiMarco, Antinisca
TI Multidimensional context modeling applied to non-functional analysis of
   software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context modeling; Context evolution; Reliability; Performance; Transient
   and steady-state analysis
AB Context awareness is a first-class attribute of today software systems. Indeed, many applications need to be aware of their context in order to adapt their structure and behavior for offering the best quality of service even in case the software and hardware resources are limited. Modeling the context, its evolution, and its influence on the services provided by (possibly resource constrained) applications are becoming primary activities throughout the whole software life cycle, although it is still difficult to capture the multidimensional nature of context. We propose a framework for modeling and reasoning on the context and its evolution along multiple dimensions. Our approach enables (1) the representation of dependencies among heterogeneous context attributes through a formally defined semantics for attribute composition and (2) the stochastic analysis of context evolution. As a result, context can be part of a model-based software development process, and multidimensional context analysis can be used for different purposes, such as non-functional analysis. We demonstrate how certain types of analysis, not feasible with context-agnostic approaches, are enabled in our framework by explicitly representing the interplay between context evolution and non-functional attributes. Such analyses allow the identification of critical aspects or design errors that may not emerge without jointly taking into account multiple context attributes. The framework is shown at work on a case study in the eHealth domain.
C1 [Berardinelli, Luca] Tech Univ Wien, Distributed Syst Grp, Vienna, Austria.
   [Bernardo, Marco] Univ Urbino, Dipartimento Sci Pure & Appl, Urbino, Italy.
   [Cortellessa, Vittorio] Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, Laquila, Italy.
   [DiMarco, Antinisca] Univ Aquila, Dipartimento Sci Clin Appl & Biotecnol, Laquila, Italy.
C3 Technische Universitat Wien; University of Urbino; University of
   L'Aquila; University of L'Aquila
RP Berardinelli, L (corresponding author), Tech Univ Wien, Distributed Syst Grp, Vienna, Austria.
EM luca.berardinelli@tuwien.ac.at; marco.bernardo@uniurb.it;
   vittorio.cortellessa@univaq.it; antinisca.dimarco@univaq.it
RI Berardinelli, Luca/AAJ-8012-2021
OI Berardinelli, Luca/0000-0003-2416-2867
FU TU Wien (TUW)
FX Open access funding provided by TU Wien (TUW). We would like to thank
   the reviewers for their insightful comments on the paper that led us to
   improve our work.
CR Afanasov M, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P372, DOI 10.1109/COMPSACW.2014.64
   Alti A, 2010, LECT NOTES COMPUT SC, V6285, P441, DOI 10.1007/978-3-642-15114-9_39
   Amundsen SL, 2008, PERS UBIQUIT COMPUT, V12, P143, DOI 10.1007/s00779-006-0105-4
   [Anonymous], UML 2 4 1 SUP SPEC F
   [Anonymous], ICDCS WORKSH 2006 26
   [Anonymous], DYNAMIC VARIABILITY
   [Anonymous], P 6 INT WORKSH SOFTW
   [Anonymous], WICSA COMPARCH
   [Anonymous], SAEAS5506 WARR INT
   [Anonymous], THESIS
   [Anonymous], UML PROF MARTE PTC 0
   [Anonymous], MIDDL SUPP SELF AD U
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   [Anonymous], 2004, WORKSH ADV CONT MOD
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Balsamo Bernardo., 2002, P 3 INT WORKSHOP SOF, P190
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Berardinelli L, 2012, INT CONF SELF SELF, P139, DOI 10.1109/SASOW.2012.32
   Berardinelli L, 2010, LECT NOTES COMPUT SC, V6013, P353, DOI 10.1007/978-3-642-12029-9_25
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardo M, 2003, THEOR COMPUT SCI, V290, P117, DOI 10.1016/S0304-3975(01)00090-1
   Bernardo M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P1, DOI 10.1145/350391.350394
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Cortellessa V, 2002, SCI COMPUT PROGRAM, V44, P101, DOI 10.1016/S0167-6423(02)00033-3
   Cover T. M., 2012, ELEMENTS INFORM THEO
   Dobson S., 2006, PERVASIVE 2006 WORKS, P645
   Grassi V, 2004, LECT NOTES COMPUT SC, V3273, P128
   Grassi V, 2009, LECT NOTES COMPUT SC, V5525, P201, DOI 10.1007/978-3-642-02161-9_11
   Grassi Vincenzo., 2007, Proceedings of the 6th International Workshop on Software and Performance, WOSP'07, P103, DOI 10.1145/1216993.1217011
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Hirsch D, 2006, LECT NOTES COMPUT SC, V4344, P113
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   Inverardi Paola, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P1, DOI 10.1007/978-3-540-95888-8_1
   INVERARDI P, 2004, P 2004 ACM S APPL CO, P1177
   Kiukkonen N., 2010, Towards rich mobile phone datasets: Lausanne data collection campaign
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Liptchinsky V, 2014, INFORM SYST, V43, P66, DOI 10.1016/j.is.2013.05.007
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Trivedi Kishor S., 2009, Performance Evaluation Review, V36, P52, DOI 10.1145/1530873.1530884
NR 48
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2137
EP 2176
DI 10.1007/s10270-017-0645-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100027
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Peixoto, RJS
   da Silva, LD
   Perkusich, A
AF Sarmento Peixoto, Rodrigo Jose
   da Silva, Leandro Dias
   Perkusich, Angelo
TI Model-based testing of software for automation systems using heuristics
   and coverage criterion
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based testing; Conformance tests; Automation systems; Timed
   automata; Programmable logic controllers; Ladder; ISA 5.2
ID CONSTRUCTION
AB The aim of this work is to increase the confidence on software for automation systems defining a coverage criterion to measure the quality level of generated tests and the time interval needed to execute them. This coverage criterion called At Least N (ALN) is based on the Effect Predicate Heuristic (EPH) that provides all effect predicate for ISA 5.2 diagrams. The ALN and EPH have been incorporated into the Gungnir tool that was built using model-based testing concepts. The Gungnir uses timed automata to model the specification, in the ISA 5.2 diagrams, and the implementation, in the Ladder language. The timed automata models are automatically extracted, data tests are generated and the tool automatically verifies if the implementation is in conformance with the specification, given a quality level defined by the user.
C1 [Sarmento Peixoto, Rodrigo Jose; da Silva, Leandro Dias] Univ Fed Alagoas, Inst Comp, Maceio, Alagoas, Brazil.
   [Perkusich, Angelo] Univ Fed Campina Grande, Unidade Acad Engn Eletr, Lab Sistemas Embarcados & Comp Pervas, Campina Grande, Paraiba, Brazil.
C3 Universidade Federal de Alagoas; Universidade Federal de Campina Grande
RP da Silva, LD (corresponding author), Univ Fed Alagoas, Inst Comp, Maceio, Alagoas, Brazil.
EM rodrigopex@ic.ufal.br; leandrodias@ic.ufal.br; perkusich@dee.ufcg.edu.br
RI Perkusich, Angelo/I-2447-2013; Perkusich, Angelo/O-1203-2018; Silva,
   Leandro/AAC-1416-2020
OI Perkusich, Angelo/0000-0002-7377-1258; Dias da Silva,
   Leandro/0000-0003-4352-1466
CR AbouTrab MS, 2013, J SYST SOFTWARE, V86, P1209, DOI 10.1016/j.jss.2012.12.030
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 1992, The Z Notation
   Aspar Z, 2015, IEEE ST CONF RES DEV, P156, DOI 10.1109/SCORED.2015.7449314
   Bao J, 2014, INT J ADV MANUF TECH, V75, P523, DOI 10.1007/s00170-014-6166-z
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bengtsson J., 2004, LECT CONCURRENCY PET, V1633, P8
   Biallas S, 2012, IEEE INT CONF AUTOM, P338, DOI 10.1145/2351676.2351741
   Bin Waez MT, 2013, COMPUT SCI REV, V9, P1, DOI 10.1016/j.cosrev.2013.05.001
   Bryan L.A., 1997, Programmable Controllers: Theory and Implementation
   Chang JR, 2007, P INT COMP SOFTW APP, P457
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Clarke EM, 1999, MODEL CHECKING, P1
   de Vasconcelos Oliveira Kezia, 2010, 2010 IEEE International Conference on Industrial Technology (ICIT 2010), P1655, DOI 10.1109/ICIT.2010.5472509
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Goble W.M., 2005, Safety instrumented systems verification: practical probabilistic calculations
   Hasanain W, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P294
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hessel A., 2007, P 19 IFIP INT C TEST
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   ISA, 1992, BIN LOG DIGR PROC OP
   Kosmatov N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ISSRE.2004.12
   Kuzmin EV, 2014, AUTOM CONTROL COMPUT, V48, P554, DOI 10.3103/S0146411614070244
   Kuzmin EV, 2013, AUTOM CONTROL COMPUT, V47, P443, DOI 10.3103/S0146411613070110
   Larsen K.G., 2005, Proceedings of the 5th ACM international conference on Embedded software, P299, DOI DOI 10.1145/1086228.1086283
   Larsen K.G., 2009, Uppaal tron user manual
   Loding Helge, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P449, DOI 10.1109/ICST.2010.60
   Oliveira KD, 2010, PROC IEEE INT SYMP, P90, DOI 10.1109/ISIE.2010.5637890
   Ovatman T, 2016, SOFTW SYST MODEL, V15, P937, DOI 10.1007/s10270-014-0448-7
   Parr A., 2003, PROGRAMMABLE CONTROL
   PLCopen, 2004, 611313 IEC PLCOPEN
   Quezada JC, 2017, INT J ADV MANUF TECH, V88, P1393, DOI 10.1007/s00170-016-8638-9
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Utting M., 2006, Practical Model-Based Testing
   Yu YT, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P14
NR 36
TC 0
Z9 0
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 797
EP 823
DI 10.1007/s10270-018-0690-5
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400003
DA 2024-07-18
ER

PT J
AU Gammaitoni, L
   Kelsen, P
AF Gammaitoni, Loic
   Kelsen, Pierre
TI F-Alloy: a relational model transformation language based on Alloy
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; F-Alloy; Alloy; Analysis; Formal method;
   Endogenous; Exogenous
AB Model transformations are one of the core artifacts of a model-driven engineering approach. The relational logic language Alloy has been used in the past to verify properties of model transformations. In this paper we introduce the concept of functional Alloy modules. In essence a functional Alloy module can be viewed as an Alloy module representing a model transformation. We describe a sublanguage of Alloy called F-Alloy specifically designed to concisely specify functional Alloy modules. The restrictions on F-Alloy's syntax are meant to allow efficient execution of the specified transformation, without the use of backtracking, by an adapted interpretation algorithm. F-Alloy's semantics is given in this paper as a direct translation to Alloy; hence, F-Alloy specifications are also analyzable using the powerful automatic analysis features of Alloy.
C1 [Gammaitoni, Loic] Univ Luxembourg, Comp Sci, Esch Sur Alzette, Luxembourg.
   [Kelsen, Pierre] Univ Luxembourg, Comp Sci, Comp Sci & Commun Res Unit, Esch Sur Alzette, Luxembourg.
   [Kelsen, Pierre] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
C3 University of Luxembourg; University of Luxembourg; University of
   Luxembourg
RP Gammaitoni, L (corresponding author), Univ Luxembourg, Comp Sci, Esch Sur Alzette, Luxembourg.
EM loic.gammaitoni@uni.lu; pierre.kelsen@uni.lu
CR AKEHURST D, 2003, SOFTWARE SYSTEMS MOD, V2, P215, DOI DOI 10.1007/S10270-003-0032-Z
   Anastasakis K., 2007, ModeVVa'07, P47
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1995, GRAPHTHEORETIC CONCE
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   Bézivin J, 2006, LECT NOTES COMPUT SC, V3844, P120
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   G G., 2001, LNI, German Informatics Society, VP-7, P128
   Gammaitoni L., 2014, P 11 MODEVVA WORKSH, V1235, P19
   Gammaitoni L, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P125, DOI 10.1109/TASE.2016.21
   Gammaitoni L, 2015, LECT NOTES COMPUT SC, V9152, P166, DOI 10.1007/978-3-319-21155-8_13
   Gammaitoni  Loic, 2015, INT C SOFTW LANG ENG, P77
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Giese H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P19, DOI 10.1109/MoDeVVa.2010.14
   Hermann F, 2010, LECT NOTES COMPUT SC, V6372, P155
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Katebi H, 2011, LECT NOTES COMPUT SC, V6695, P343
   LANO K, CATALOGUE MODEL TRAN
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   OMG, 2011, MET OBJ FAC QUER VIE
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taghdiri M, 2003, LECT NOTES COMPUT SC, V2767, P240
   Tisi M, 2011, THESIS
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
NR 30
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 213
EP 247
DI 10.1007/s10270-017-0630-9
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300011
DA 2024-07-18
ER

PT J
AU Baier, T
   Di Ciccio, C
   Mendling, J
   Weske, M
AF Baier, Thomas
   Di Ciccio, Claudio
   Mendling, Jan
   Weske, Mathias
TI Matching events and activities by integrating behavioral aspects and
   label analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Event mapping; Business process intelligence; Constraint
   satisfaction; Declare; Natural language processing
AB Nowadays, business processes are increasingly supported by IT services that produce massive amounts of event data during the execution of a process. These event data can be used to analyze the process using process mining techniques to discover the real process, measure conformance to a given process model, or to enhance existing models with performance information. Mapping the produced events to activities of a given process model is essential for conformance checking, annotation and understanding of process mining results. In order to accomplish this mapping with low manual effort, we developed a semi-automatic approach that maps events to activities using insights from behavioral analysis and label analysis. The approach extracts Declare constraints from both the log and the model to build matching constraints to efficiently reduce the number of possible mappings. These mappings are further reduced using techniques from natural language processing, which allow for a matching based on labels and external knowledge sources. The evaluation with synthetic and real-life data demonstrates the effectiveness of the approach and its robustness toward non-conforming execution logs.
C1 [Baier, Thomas] Lana Labs GmbH, Engeldamm 62, D-10179 Berlin, Germany.
   [Di Ciccio, Claudio; Mendling, Jan] Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
   [Weske, Mathias] Univ Potsdam, Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
C3 Vienna University of Economics & Business; University of Potsdam
RP Di Ciccio, C (corresponding author), Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
EM claudio.di.ciccio@wu.ac.at
RI Di Ciccio, Claudio/H-8898-2018
OI Di Ciccio, Claudio/0000-0001-5570-0475; Mendling,
   Jan/0000-0002-7260-524X
FU Vienna University of Economics and Business (WU)
FX Open access funding provided by Vienna University of Economics and
   Business (WU).
CR Abels S., 2005, OSWIR
   [Anonymous], 2016, ADV FUNC MAT
   [Anonymous], 2015, P 16 INT C BPMDS 20
   [Anonymous], 2010, LECT NOTES BUS INF
   [Anonymous], 2005, FUNDAMENTAL MODELING
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Antunes Goncalo., 2015, ENTERPRISE MODELLING, P127
   Baier T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1225, DOI 10.1145/2695664.2699491
   Baier T, 2014, LECT NOTES BUS INF P, V197, P58
   Baier T, 2013, LECT NOTES BUS INF P, V147, P109
   Baier T, 2014, INFORM SYST, V46, P123, DOI 10.1016/j.is.2014.04.004
   Braschler M, 2004, INFORM RETRIEVAL, V7, P291, DOI 10.1023/B:INRT.0000011208.60754.a1
   Cannon D., 2007, ITIL Service Operation
   Cayoglu U., 2013, International Conference on Business Process Management, P442
   Cook DJ, 2013, IEEE T CYBERNETICS, V43, P820, DOI 10.1109/TSMCB.2012.2216873
   Decker G, 2009, DATA KNOWL ENG, V68, P777, DOI 10.1016/j.datak.2009.02.013
   Di Ciccio Claudio, 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629447
   Di Ciccio C., 2013, SIMPDA CEUR WORKSHOP, P31
   Di Ciccio C., 2015, WORK ENT ORG MODELIN, P20, DOI [10.1007/978-3-319-24626-0_2, DOI 10.1007/978-3-319-24626-0_2]
   Di Ciccio C., 2013, International Symposium on Data-Driven Process Discovery and Analysis, P1
   Di Ciccio C, 2017, INFORM SYST, V64, P425, DOI 10.1016/j.is.2016.09.005
   Di Ciccio C, 2016, INFORM SYST, V56, P258, DOI 10.1016/j.is.2015.06.009
   Di Ciccio C, 2015, LECT NOTES COMPUT SC, V9253, P144, DOI 10.1007/978-3-319-23063-4_9
   Di Ciccio C, 2014, LECT NOTES COMPUT SC, V8659, P34, DOI 10.1007/978-3-319-10172-9_3
   Di Ciccio C, 2013, IEEE INTERNET COMPUT, V17, P10, DOI 10.1109/MIC.2013.60
   DICICCIO C, 2013, CIDM 13, P135, DOI DOI 10.1109/CIDM.2013.6597228
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dumas M., 2013, Fundamentals of Business Process Management, DOI [10.1007/978-3-642-33143-5, DOI 10.1007/978-3-642-33143-5]
   Ehrig M., 2007, Proceedings of the Fourth Asia-Pacific Conference on Conceptual Modelling, Darlinghurst: Australian Computer Society, P71
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Freuder E., 2006, HDB CONSTRAINT PROGR, V2
   Gunther C. W., 2006, BETA WORKING PAPER S, V165
   Gunther CW, 2007, LECT NOTES COMPUT SC, V4714, P328
   Hanser M., 2016, SOFTWARETECHNIK TREN, V36, P53
   Jurafsky D., 2021, SPEECH LANGUAGE PROC
   Kettunen K, 2006, LECT NOTES ARTIF INT, V4139, P99
   Klinkmuller Christopher, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P211, DOI 10.1007/978-3-642-40176-3_17
   Leopold H, 2012, LECT NOTES COMPUT SC, V7481, P319, DOI 10.1007/978-3-642-32885-5_25
   Li JF, 2011, LECT NOTES BUS INF P, V66, P109
   Maggi Fabrizio M., 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P433, DOI 10.1007/978-3-642-38709-8_28
   Maggi Fabrizio M., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P270, DOI 10.1007/978-3-642-31095-9_18
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Navigli R, 2012, ARTIF INTELL, V193, P217, DOI 10.1016/j.artint.2012.07.001
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pérez-Castillo R, 2014, SOFTW SYST MODEL, V13, P1117, DOI 10.1007/s10270-012-0285-5
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Polyvyanyy Artem, 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P210, DOI 10.1007/978-3-319-07734-5_12
   Polyvyanyy A, 2016, FORM ASP COMPUT, V28, P597, DOI 10.1007/s00165-016-0372-4
   Rogge-Solti A, 2013, LECT NOTES COMPUT SC, V8274, P389, DOI 10.1007/978-3-642-45005-1_27
   Rosa M.L., 2006, LNCS, P424
   Toutanova K, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P63, DOI 10.3115/1117794.1117802
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Weidlich M., 2012, COMJNL
   Weidlich M, 2011, INFORM SYST, V36, P1009, DOI 10.1016/j.is.2011.04.002
   Weidlich M, 2012, INFORM SYST, V37, P80, DOI 10.1016/j.is.2010.12.004
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   Witten I. H., 2005, DATA MINING PRACTICA
NR 59
TC 16
Z9 17
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 573
EP 598
DI 10.1007/s10270-017-0603-z
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300012
PM 29706858
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Wittern, E
   Zirpins, C
AF Wittern, Erik
   Zirpins, Christian
TI Service feature modeling: modeling and participatory ranking of service
   design alternatives
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Software service engineering; Participatory design; Service variation
   modeling; Multi-criteria feature configuration decisions
ID PUBLIC-SERVICE; HIERARCHY; DECISION
AB The design of software-intensive service systems involves and affects numerous stakeholders including software engineers, legal and business experts as well as a potentially large number of consumers. In consequence, the challenge arises to adequately represent the interests of these groups with respect to service design decisions. Specifically, shared service design artifacts and participatory methods for influencing their development in consensus are required, which are not yet state of the art in software service engineering. To this end, we present service feature modeling. Using a modeling notation based on feature-oriented analysis, our approach can represent and interrelate diverse service design concerns and capture their potential combinations as service design alternatives. We further present a method that allows stakeholders to rank service design alternatives based on their preferences. The ranking can support service engineers in selecting viable alternatives for implementation. To exploit this potential, we have implemented a toolkit to enable both modeling and participative ranking of service design alternatives. It has been used to apply service feature modeling in the context of public service design and evaluate the approach in this context.
C1 [Wittern, Erik; Zirpins, Christian] Karlsruhe Inst Technol, Inst Appl Informat & Formal Descript Methods AIFB, eOrg Res Grp, Englerstr 11, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Wittern, E (corresponding author), Karlsruhe Inst Technol, Inst Appl Informat & Formal Descript Methods AIFB, eOrg Res Grp, Englerstr 11, D-76131 Karlsruhe, Germany.
EM erik.wittern@kit.edu; christian.zirpins@kit.edu
RI Zirpins, Christian/AAW-4384-2020
OI Zirpins, Christian/0000-0002-0838-2846
CR Acher M, 2012, P 11 ANN INT C ASP O, P1, DOI [10.1145/2162049.2162051, DOI 10.1145/2162049.2162051]
   Agarski B, 2010, INT J QUAL RES, V4, P131
   [Anonymous], 2012, CIT COLL COCR PUBL S
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI DOI 10.1145/1772690.1772693
   [Anonymous], METHODIK EMPIRISCHEN
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P300, DOI 10.1007/978-3-642-15579-6_21
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berkovich Marina, 2011, Wirtschaftsinformatik, V53, P357, DOI 10.1007/s11576-011-0301
   Bolloju N, 2001, EUR J OPER RES, V128, P499, DOI 10.1016/S0377-2217(99)00369-0
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Denhardt RB, 2000, PUBLIC ADMIN REV, V60, P549, DOI 10.1111/0033-3352.00117
   Dhanesha KA, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P435, DOI 10.1109/SCC.2009.75
   Gruenbacher P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P954, DOI 10.1109/DEXA.2000.875141
   Hartman A, 2010, LECT NOTES COMPUT SC, V6267, P219, DOI 10.1007/978-3-642-15172-9_21
   Kang K. C., 1990, Technical Report
   Karatas AS, 2010, LECT NOTES COMPUT SC, V6287, P286, DOI 10.1007/978-3-642-15579-6_20
   Kuhlenkamp J, 2011, THESIS KARLSRUHE I T
   Kumar N, 2009, COMMUN ACM, V52, P118, DOI 10.1145/1435417.1435444
   Liaskos S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P135, DOI 10.1109/RE.2010.26
   LIM KH, 1993, EUR J OPER RES, V67, P64, DOI 10.1016/0377-2217(93)90322-E
   Marchetto A., 2010, P 2 INT WORKSH PRINC, P15
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Rosenmuller Marko., 2010, VAMOS, P123
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saaty TL, 1998, APPL MATH LETT, V11, P121, DOI 10.1016/S0893-9659(98)00068-8
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Shaw M, 2012, IEEE SOFTWARE, V29, P46, DOI 10.1109/MS.2011.121
   SHIMOMURA Y, 2006, P 6 INT S TOOLS METH, P1665
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Trinidad P., 2009, 3 INT WORKSH VAR MOD VAMOS, V9, P145
   Warner ME, 2008, PUBLIC ADMIN REV, V68, P155, DOI 10.1111/j.1540-6210.2007.00845.x
   Wittern E., 2012, LECT NOTES COMPUTER, V7221
   Wittern E., 2012, SERVICE ORIENTED COM, P127, DOI 10.1007/978-3- 642-34321-6_9
   Wittern E, 2011, LECT NOTES COMPUT SC, V6569, P110
   Wolak R., 1998, Journal of Empirical Generalisations in Marketing Science, V3, P22
   Zirpins C, 2008, SERV ORIENTED COMPUT, V2, P145, DOI 10.1007/s11761-008-0025-4
NR 41
TC 9
Z9 11
U1 2
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 553
EP 578
DI 10.1007/s10270-014-0414-4
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800014
DA 2024-07-18
ER

PT J
AU Farias, K
   Garcia, A
   Whittle, J
   Chavez, CVG
   Lucena, C
AF Farias, Kleinner
   Garcia, Alessandro
   Whittle, Jon
   Garcia Chavez, Christina von Flach
   Lucena, Carlos
TI Evaluating the effort of composing design models: a controlled
   experiment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model composition effort; Empirical studies; Effort measurement
AB Model composition plays a key role in many tasks in model-centric software development, e.g., evolving UML diagrams to add new features or reconciling models developed in parallel by different software development teams. However, based on our experience in previous empirical studies, one of the main impairments for the widespread adoption of composition techniques is the lack of empirical knowledge about their effects on developers' effort. This problem applies to both existing categories of model composition techniques, i.e., specification-based (e.g., Epsilon) and heuristic-based techniques (e.g., IBM RSA). This paper, therefore, reports on a controlled experiment that investigates the effort of (1) applying both categories of model composition techniques and (2) detecting and resolving inconsistencies in the output composed models. We evaluate the techniques in 144 evolution scenarios, where 2,304 compositions of elements of UML class diagrams were produced. The main results suggest that (1) the employed heuristic-based techniques require less effort to produce the intended model than the chosen specification-based technique, (2) there is no significant difference in the correctness of the output composed models generated by these techniques, and (3) the use of manual heuristics for model composition outperforms their automated counterparts.
C1 [Farias, Kleinner] Univ Vale Rio Sinos Unisinos, Interdisciplinary Postgrad Program Appl Comp PIPC, Sao Leopoldo, RS, Brazil.
   [Garcia, Alessandro; Lucena, Carlos] Pontificia Univ Catolica Rio de Janeiro, Dept Informat, LES, OPUS Res Grp, Rio De Janeiro, RJ, Brazil.
   [Whittle, Jon] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Garcia Chavez, Christina von Flach] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
C3 Universidade do Vale do Rio dos Sinos (Unisinos); Lancaster University;
   Universidade Federal da Bahia
RP Farias, K (corresponding author), Univ Vale Rio Sinos Unisinos, Interdisciplinary Postgrad Program Appl Comp PIPC, Sao Leopoldo, RS, Brazil.
EM kleinnerfarias@unisinos.br; afgarcia@inf.puc-rio.br;
   whittle@comp.lancs.ac.uk; flach@dcc.ufba.br; lucena@inf.puc-rio.br
RI von Flach G. Chavez, Christina/G-2567-2012; Farias,
   Kleinner/ABH-4944-2020; Lucena, Carlos/GQP-2277-2022
OI von Flach, Christina/0000-0001-5172-9641
CR [Anonymous], 2010, UN MOD LANG IFR
   Asklund U., 1994, P NORD WORKSH PROGR, P86
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Brewer M., 2000, RES DESIGN ISSUES VA
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Campbell D.T., 1998, Social Experimentation
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   Clarke S., 2001, THESIS
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Devore J., 1999, APPL STAT ENG SCI
   Farias Kleinner, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P676, DOI 10.1007/978-3-642-33666-9_43
   Farias K., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P405, DOI 10.1145/1810295.1810404
   Farias K., 2012, THESIS
   Farias K, 2012, 9 INT C ASP OR SOFTW, P73
   Farias K., 2013, J SOFTW SYST MODEL S, V12, P1
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Kitchenham B., 2006, EMPIRICAL PARADIGM R, P25
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Klein Jacques., 2006, AOSD, P27
   Lange C. F. J., 2006, 28th International Conference on Software Engineering Proceedings, P401, DOI 10.1145/1134285.1134341
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mitchell M., 2001, Research Design Explained, V4th
   Norris N., 2011, GOVERNING MANAGING 1
   Perry DE, 1998, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE.1998.671134
   Petre M., 2013, 35 INT C SOFTW ENG I, P18
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Whittle J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656252
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 33
TC 12
Z9 12
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1349
EP 1365
DI 10.1007/s10270-014-0408-2
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900004
DA 2024-07-18
ER

PT J
AU Etien, A
   Muller, A
   Legrand, T
   Paige, RF
AF Etien, Anne
   Muller, Alexis
   Legrand, Thomas
   Paige, Richard F.
TI Localized model transformations for building large-scale transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Reusable transformation; Transformation chaining
AB Model-driven engineering (MDE) exploits well-defined, tool-supported modelling languages and operations applied to models created using these languages. Model transformation is a critical part of the use of MDE. It has been argued that transformations must be engineered systematically, particularly when the languages to which they are applied are large and complicated-e.g., UML 2.x and profiles such as MARTE-and when the transformation logic itself is complex. We present an approach to designing large model transformations for large languages, based on the principle of separation of concerns. Specifically, we define a notion of localized transformations that are restricted to apply to a subset of a modelling language; a composition of localized transformations is then used to satisfy particular MDE objectives, such as the design of very large transformations. We illustrate the use of localized transformations in a concrete example applied to large transformations for system-on-chip co-design.
C1 [Etien, Anne] Univ Lille 1, Inria Lille Nord Europe, LIFL CNRS UMR 8022, Lille, France.
   [Muller, Alexis; Legrand, Thomas] GenMyModel, Lille, France.
   [Paige, Richard F.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 Universite de Lille; University of York - UK
RP Etien, A (corresponding author), Univ Lille 1, Inria Lille Nord Europe, LIFL CNRS UMR 8022, Lille, France.
EM Anne.Etien@lifl.fr; Alexis.Muller@genmymodel.com;
   Thomas.Legrand@genmymodel.com; richard.paige@york.ac.uk
RI Etien, Anne/AAG-4675-2020
OI Etien, Anne/0000-0003-3034-873X
CR Alanen M, 2008, SOFTW SYST MODEL, V7, P103, DOI 10.1007/s10270-007-0049-9
   [Anonymous], RR7582 INRIA
   [Anonymous], 2009, OMG UML PROFILE MART
   Aranega V., 2011, P 2010 INT C MOD SOF
   Aranega V, 2011, COMM COM INF SC, V50, P137
   Balasubramanian D., 2007, ECEASST, V6
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cordy J, 2009, GPCE
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   CZARNECKI K, 2003, P 2 OOPSLA WORKSH GE
   de Lara Juan, 2012, Applications of Graph Transformations with Industrial Relevance. 4th International Symposium, AGTIVE 2011. Revised Selected and Invited Papers, P35, DOI 10.1007/978-3-642-34176-2_5
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Etien A., 2010, P ACM SAC DOFTW ENG, P2239
   Fleurey F., 2004, MODEL DESIGN VALIDAT
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Gamatie A., 2011, ACM T EMBED IN PRESS
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5063, P183, DOI 10.1007/978-3-540-69927-9_13
   Mendez D., 2010, MOD EV WORKSH OLS MO
   Mens T., 2005, LANGUAGE ENG MODEL D
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3543, P108
   Olsen G.K., 2006, P ECMDA COMPOSITION, P21
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Rose L, 2013, SOFTW SYST MODEL, V12, P201, DOI 10.1007/s10270-011-0203-2
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen S., 2009, ACM IEEE 12 INT C MO
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   van Amstel M., 2008, 12 ECOOP WORKSH QUAN
   Vanhoof B., 2005, P BEST PRACT MOD DRI
   Vanhooff B., 2006, P ECMDA COMP MOD TRA, P3
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Wagelaar D., 2009, SOFTW SYST MODEL
   Wagelaar D, 2008, LECT NOTES COMPUT SC, V5063, P152, DOI 10.1007/978-3-540-69927-9_11
   Weisemöller I, 2008, LECT NOTES COMPUT SC, V5301, P386, DOI 10.1007/978-3-540-87875-9_28
NR 41
TC 14
Z9 14
U1 2
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1189
EP 1213
DI 10.1007/s10270-013-0379-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pagán, JE
   Cuadrado, JS
   Molina, JG
AF Espinazo Pagan, Javier
   Sanchez Cuadrado, Jesus
   Garcia Molina, Jesus
TI A repository for scalable model management
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Model persistence; Model repositories; Model scalability; Large
   models; NoSQL; Document databases
AB Applying model-driven engineering (MDE) in industrial-scale systems requires managing complex models which may be very large. These models must be persisted in a way that allows their manipulation by client applications without fully loading them. In this paper, we propose Morsa, a model repository that provides scalable manipulation of large models through load on demand and incremental store; model persistence is supported by a NoSQL database. We discuss some load on demand and incremental store algorithms as well as a database design. A prototype that integrates transparently with EMF is presented, and its evaluation demonstrates that it is capable of fully managing large models with a limited amount of memory. Moreover, a set of benchmarks has been executed, exhibiting better performance than the EMF XMI file-based persistence and the most widely used model repository, CDO.
C1 [Espinazo Pagan, Javier; Garcia Molina, Jesus] Univ Murcia, Murcia, Spain.
   [Sanchez Cuadrado, Jesus] Univ Autonoma Madrid, Madrid, Spain.
C3 University of Murcia; Autonomous University of Madrid
RP Pagán, JE (corresponding author), Univ Murcia, Murcia, Spain.
EM jespinazo@um.es; jesus.sanchez.cuadrado@uam.es; jmolina@um.es
RI GARCIA-MOLINA, JESUS J/X-7078-2019
FU Spanish Ministry of Science [TIN2009-11555]; Fundacion Seneca
   [14954/BPS/10]
FX This work is funded by the Spanish Ministry of Science (project
   TIN2009-11555) and Fundacion Seneca (grant 14954/BPS/10).
CR [Anonymous], 2004, OSDI
   [Anonymous], 2009, GRAB 2009 5 INT WORK
   [Anonymous], 2008, REPORTS REVISED SELE, DOI DOI 10.1007/978-3-642-01648-6_6
   Aschauer T, 2009, LECT NOTES COMPUT SC, V5795, P17, DOI 10.1007/978-3-642-04425-0_3
   Atkinson C., 2000, INT WORKSH MOD ENG P
   Bergmann G, 2012, LECT NOTES COMPUT SC, V7304, P1, DOI 10.1007/978-3-642-30561-0_1
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Bohm C., 2010, WINNER 2010 BILLION
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Caue C., 2012, CLOUDMDE 2012 WORKSH
   Chang F., 2006, Bigtable: a distributed storage system for structured data
   Clark T., 2004, APPL METAMODELLING F
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Diaz O., 2011, SOFTWARE SYSTEMS MOD
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Espinazo-Pagan J., 2010, P 1 INT WORKSH MOD C, P56
   Gray J, 2004, LECT NOTES COMPUT SC, V3286, P361
   Han WS, 2005, IEEE T KNOWL DATA EN, V17, P1436, DOI 10.1109/TKDE.2005.156
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Ibrahim A, 2006, LECT NOTES COMPUT SC, V4067, P50
   Jouault F., 2009, GRAB 2009 5 INT WORK
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos D., 2008, P WORKSH CHALL MDE M, P35
   Leong H., 1997, P 1997 ACM S APPL CO, P302
   Rathore R., 2008, OVERVIEW MOBILE DATA
   Selic B, 2008, AUTOMAT SOFTW ENG, V15, P379, DOI 10.1007/s10515-008-0035-7
   Sriplakich P., P 2008 ACM S APPL CO, P674
   Stonebraker M., 1995, OBJECT RELATIONAL DB
   Stonebraker M, 2010, COMMUN ACM, V53, P10, DOI 10.1145/1721654.1721659
   Strauch C., 2011, NOSQL DATABASE
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
NR 32
TC 19
Z9 19
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 219
EP 239
DI 10.1007/s10270-013-0326-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100014
DA 2024-07-18
ER

PT J
AU Hermann, F
   Ehrig, H
   Orejas, F
   Czarnecki, K
   Diskin, Z
   Xiong, YF
   Gottmann, S
   Engel, T
AF Hermann, Frank
   Ehrig, Hartmut
   Orejas, Fernando
   Czarnecki, Krzysztof
   Diskin, Zinovy
   Xiong, Yingfei
   Gottmann, Susann
   Engel, Thomas
TI Model synchronization based on triple graph grammars: correctness,
   completeness and invertibility
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model synchronization; Correctness; Bidirectional model transformation;
   Triple graph grammars
ID TRANSFORMATIONS; TOOLS
AB Triple graph grammars (TGGs) have been used successfully to analyze correctness and completeness of bidirectional model transformations, but a corresponding formal approach to model synchronization has been missing. This paper closes this gap by providing a formal synchronization framework with bidirectional update propagation operations. They are generated from a given TGG, which specifies the language of all consistently integrated source and target models. As our main result, we show that the generated synchronization framework is correct and complete, provided that forward and backward propagation operations are deterministic. Correctness essentially means that the propagation operations preserve and establish consistency while completeness ensures that the operations are defined for all possible inputs. Moreover, we analyze the conditions under which the operations are inverse to each other. All constructions and results are motivated and explained by a running example, which leads to a case study, using concrete visual syntax and abstract syntax notation based on typed attributed graphs.
C1 [Hermann, Frank; Gottmann, Susann; Engel, Thomas] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Ehrig, Hartmut] Tech Univ Berlin, Inst Softwaretech & Theoret Informat, Berlin, Germany.
   [Orejas, Fernando] Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Barcelona, Spain.
   [Czarnecki, Krzysztof; Diskin, Zinovy] Univ Waterloo, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
   [Xiong, Yingfei] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Xiong, Yingfei] Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
C3 University of Luxembourg; Technical University of Berlin; Universitat
   Politecnica de Catalunya; University of Waterloo; Peking University;
   Peking University
RP Hermann, F (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM frank.hermann@uni.lu; ehrig@cs.tu-berlin.de; orejas@lsi.upc.edu;
   kczarnec@gsd.uwaterloo.ca; zdiskin@gsd.uwaterloo.ca; xiongyf@pku.edu.cn;
   susann.gottmann@uni.lu; thomas.engel@uni.lu
RI ; Orejas, Fernando/K-8630-2017
OI Xiong, Yingfei/0000-0001-8991-747X; Orejas, Fernando/0000-0002-3023-4006
FU Ontario Research Fond's Research Excellence Project on Model-Integrated
   Software Service Engineering; National Natural Science Foundation of
   China [61202071, 61121063]; CICYT project [TIN2007-66523]; AGAUR grant
   [00516]; Fonds National de la Recherche, Luxembourg [3968135]
FX This work was partially supported by: (1) the Ontario Research Fond's
   Research Excellence Project on Model-Integrated Software Service
   Engineering; (2) the National Natural Science Foundation of China under
   Grant No. 61202071 and No. 61121063.; (3) the CICYT project (ref.
   TIN2007-66523) and by the AGAUR grant to the research group ALBCOM (ref.
   00516) and; (4) the Fonds National de la Recherche, Luxembourg
   (3968135).
CR [Anonymous], 2006, MONOGRAPHS THEORETIC
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Barbosa DMJ, 2010, ACM SIGPLAN NOTICES, V45, P193, DOI 10.1145/1932681.1863572
   Becker S, 2008, LECT NOTES COMPUT SC, V4970, P224, DOI 10.1007/978-3-540-70552-9_11
   Buneman P, 2000, VLDB J, V9, P76, DOI 10.1007/s007780050084
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Diskin Z., 2011, P MODELS 2011
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6491, P92, DOI 10.1007/978-3-642-18023-1_3
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Ehrig H., 2008, EC EASST, V10
   Ehrig H, 2009, LECT NOTES COMPUT SC, V5795, P241, DOI 10.1007/978-3-642-04425-0_18
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Giese H., 2009, 28 U POSTSDAM
   Giese H., 2010, 37 U POSTSDAM
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Golas U., 2011, EC EASST, V39
   Golas U., 2010, P INT C GRAPH TRANSF
   Greenyer J, 2011, LECT NOTES COMPUT SC, V6698, P144, DOI 10.1007/978-3-642-21470-7_11
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Hermann F., 2011, TR201107 TU BERL
   Hermann F., 2011, LNCS, V6981
   Hermann F., 2010, P MDI 10
   Hermann F, 2012, LECT NOTES COMPUT SC, V7212, P178, DOI 10.1007/978-3-642-28872-2_13
   Hermann F, 2010, LECT NOTES COMPUT SC, V6372, P155
   HIDAKA S, 2010, 15 ACM SIGPLAN INT C, V45, P205
   Hofmann M, 2012, ACM SIGPLAN NOTICES, V47, P495, DOI 10.1145/2103621.2103715
   Hofmann M, 2011, ACM SIGPLAN NOTICES, V46, P371, DOI 10.1145/1925844.1926428
   KINDLER E, 2007, TRRI07284 U PAD DEP
   Klar F, 2010, LECT NOTES COMPUT SC, V5765, P141, DOI 10.1007/978-3-642-17322-6_8
   *OBJ MAN GROUP, 2008, MET OBJ FAC MOF 2 0
   Ottersten B., 2012, INTERDISCIPLINARY CT, P14
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr A., 1999, HDB GRAPH GRAMMARS C, V2
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
NR 36
TC 18
Z9 22
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 241
EP 269
DI 10.1007/s10270-012-0309-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100015
DA 2024-07-18
ER

PT J
AU Petre, M
AF Petre, Marian
TI "No shit" or "Oh, shit!": responses to observations on the use of UML in
   professional practice
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Software development; Software design; Notation; Empirical studies
ID DESIGN
AB This paper follows a paper, "UML in Practice" presented at ICSE 2013. It summarizes and reflects on the discussion and additional investigation that arose from "UML in Practice." The paper provides a condensed recap of "UML in Practice" findings, explains what data were collected from which sources to inform this paper, and describes how the data were analyzed. It reports on the discussion that has arisen, summarizing responses from industry practitioners, academics teaching software engineering, and the UML community, and considers how those responses reflect on the original observations. The responses to "UML in Practice" divide (crudely) between two perspectives: (1) the observations made are familiar and unsurprizing, and match personal experience ("No shit"); or (2) the observations threaten long-held beliefs about UML use, and in particular about the status of UML as the de facto standard of software engineering, implying a need to change personal practice ("Oh, shit!").
C1 Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Petre, M (corresponding author), Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
EM m.petre@open.ac.uk
FU Royal Society Wolfson Research Merit Award
FX Thanks to the professional software developers who shared their
   experience and examples and also to Jorge Aranda, David Bowers, David
   Budgen, Andre van der Hoek, Janet van der Linden, Shailey Minocha, Dave
   Roberts, Kevin Waugh, and Jon Whittle. This research has been supported
   by a Royal Society Wolfson Research Merit Award.
CR [Anonymous], 35 INT C SOFTW ENG I
   Booch G., 2004, FEVER IS REAL, P31
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Cabot J., 2014, BLOG MODELING LANGUA
   Dekel U, 2007, ACM SIGPLAN NOTICES, V42, P261, DOI 10.1145/1297105.1297047
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dori D, 2002, COMMUN ACM, V45, P82, DOI 10.1145/581571.581599
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Kastner C., PRINC SOFTW CONSTR O
   Kobryn C, 2002, COMMUN ACM, V45, P107
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Lethbridge T., 2013, BLOG T LETHBRIDGES I
   Oregon State University, CS 584 HUM FACT PROG
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Petre M., 2009, 200912 CTR RES COMP
   Petre M., 2009, ESEC FSE 09
   Reddit, 2013, UML NOT US PRACT DIS
   Reggio G., 2014, P 2 INT C MOD DRIV E
   Requirements Programmer, 2013, UML PRACT
   Seidewitz E., 2012, 3 BIANN WORKSH ECL O
   Selic B., 2000, LNCS, V1939
   Suzhou Institute for Advanced Study, ADV SOFTW ENG
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   Tichy W, 2011, COMMUNICATION, P1
   University of Illinois at Urbana-Champaign, CS527 TOP SOFTW ENG
   Wilson G, 2013, BLOG IT WILL NEVER W
NR 26
TC 14
Z9 17
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1225
EP 1235
DI 10.1007/s10270-014-0430-4
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300002
DA 2024-07-18
ER

PT J
AU Hubaux, A
   Heymans, P
   Schobbens, PY
   Deridder, D
   Abbasi, EK
AF Hubaux, Arnaud
   Heymans, Patrick
   Schobbens, Pierre-Yves
   Deridder, Dirk
   Abbasi, Ebrahim Khalil
TI Supporting multiple perspectives in feature-based configuration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product line engineering; Feature diagram; Separation of
   concerns; Multi-view; Feature-based configuration
ID VARIABILITY
AB Feature diagrams have become commonplace in software product line engineering as a means to document variability early in the life cycle. Over the years, their application has also been extended to assist stakeholders in the configuration of software products. However, existing feature-based configuration techniques offer little support for tailoring configuration views to the profiles of the various stakeholders. In this paper, we propose a lightweight, yet formal and flexible, mechanism to leverage multidimensional separation of concerns in feature-based configuration. We propose a technique to specify concerns in feature diagrams and to generate automatically concern-specific configuration views. Three alternative visualisations are proposed. Our contributions are motivated and illustrated through excerpts from a real web-based meeting management application which was also used for a preliminary evaluation. We also report on the progress made in the development of a tool supporting multi-view feature-based configuration.
C1 [Hubaux, Arnaud; Heymans, Patrick; Schobbens, Pierre-Yves; Abbasi, Ebrahim Khalil] Univ Namur, Fac Comp Sci, PReCISE Res Ctr, Namur, Belgium.
   [Heymans, Patrick] Univ Lille 1, CNRS, LIFL, INRIA Lille Nord Europe, Lille, France.
   [Deridder, Dirk] Vrije Univ Brussel, Software Languages Lab, Smals Vzw, Brussels, Belgium.
C3 University of Namur; Universite de Lille; Centre National de la
   Recherche Scientifique (CNRS); Vrije Universiteit Brussel
RP Hubaux, A (corresponding author), Univ Namur, Fac Comp Sci, PReCISE Res Ctr, Namur, Belgium.
EM ahu@info.fundp.ac.be; phe@info.fundp.ac.be; pys@info.fundp.ac.be;
   dirk.deridder@gmail.com; eab@info.fundp.ac.be
RI Schobbens, Pierre-Yves/H-2333-2011
OI Schobbens, Pierre-Yves/0000-0001-8677-4485
FU Interuniversity Attraction Poles Programme of the Belgian State, Belgian
   Science Policy, under MoVES project; FNRS (Fonds de la Recherche
   Scientifique, Belgium); BNB (National Bank of Belgium); Walloon Region
FX This work is sponsored by the Interuniversity Attraction Poles Programme
   of the Belgian State, Belgian Science Policy, under the MoVES project.
   This work was also partly funded by FNRS (Fonds de la Recherche
   Scientifique, Belgium), BNB (National Bank of Belgium), and the Walloon
   Region
CR [Anonymous], 2006, Fundamentals of Database Systems
   [Anonymous], P 3 INT WORKSH VAR M
   [Anonymous], SPLC INT C SOFTW PRO
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Batory D., 2003, Software Engineering Notes, V28, P48, DOI 10.1145/949952.940079
   Benavides D., 2010, INFORM SYSTEMS, V35
   Berger T., 2010, P 25 INT C AUT SOFTW, P73
   Bidian C., 2006, P 4 INT C PRIV SEC T, P1
   Botterweck G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P77, DOI 10.1109/SPLC.2008.32
   Cawley C., 2004, P 4 INT WORKSH VAR M, P179
   Clarke D., 2010, P 1 INT WORKSH FORM
   Classen A., 2010, SCI COMPUTE IN PRESS
   Classen Andreas., 2009, Proceedings of the 3th International Workshop on Variability Modelling of Software-intensive Systems (VAMOS'09), P51
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K., 2006, P 10 INT SOFTW PROD, P41
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Delannay G., 2007, OSSPL 07 COLL SPLC 0
   eCos, 2011, ECOS US GUID
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Glinz M, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.42
   Gotel O., 1995, International Symposium on Requirements Engineering, P100
   HAREL D, 2000, MCS0016 FAC MATH COM
   Hubaux A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P55, DOI 10.1109/SPLC.2008.39
   Hubaux A., 2009, P 13 INT SOFTW PROD, P221
   Janota M., 2010, THESIS U COLL DUBLIN
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kastner C, 2010, THESIS O VONGUERICKE
   Lang J, 2008, ARTIF INTELL, V172, P991, DOI 10.1016/j.artint.2007.12.003
   Mannion M, 2009, P INT COMP SOFTW APP, P67, DOI 10.1109/COMPSAC.2009.19
   Mendonca M., 2010, SPLOT
   Mendonca M., 2009, THESIS U WATERLOO
   MENDONCA M, 2008, J SOFTWARE, V0003, P00069, DOI DOI 10.4304/jsw.3.2.69-82
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Nuseibeh B, 2003, PROC INT CONF SOFTW, P676, DOI 10.1109/ICSE.2003.1201254
   Pleuss A., 2010, P 4 INT WORKSH VAR M, P69
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pure-systems GmbH, 2006, VAR MAN PUR VAR
   Reiser M.O., 2006, P 14 INT C REQ ENG R, P146
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Scholten P., 2014, P 14 INT REQ ENG C R, P139
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Thompson J. M., 2003, Requirements Engineering, V8, P42, DOI 10.1007/s00766-003-0166-0
   Unphon H, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P96, DOI 10.1109/CHASE.2009.5071420
   ZHAO H, 2008, J FRONTIERS COMPUTER, V2, P260
   [No title captured]
NR 49
TC 22
Z9 22
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 641
EP 663
DI 10.1007/s10270-011-0220-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300014
DA 2024-07-18
ER

PT J
AU Bresolin, D
   Della Monica, D
   Goranko, V
   Montanari, A
   Sciavicco, G
AF Bresolin, Davide
   Della Monica, Dario
   Goranko, Valentin
   Montanari, Angelo
   Sciavicco, Guido
TI Metric propositional neighborhood logics on natural numbers
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metric temporal logic; Interval logic; Decidability; Complexity;
   Expressiveness
ID REAL-TIME; DECIDABILITY; CALCULUS
AB Interval logics formalize temporal reasoning on interval structures over linearly (or partially) ordered domains, where time intervals are the primitive ontological entities and truth of formulae is defined relative to time intervals, rather than time points. In this paper, we introduce and study Metric Propositional Neighborhood Logic (MPNL) over natural numbers. MPNL features two modalities referring, respectively, to an interval that is "met by" the current one and to an interval that "meets" the current one, plus an infinite set of length constraints, regarded as atomic propositions, to constrain the length of intervals. We argue that MPNL can be successfully used in different areas of computer science to combine qualitative and quantitative interval temporal reasoning, thus providing a viable alternative to well-established logical frameworks such as Duration Calculus. We show that MPNL is decidable in double exponential time and expressively complete with respect to a well-defined sub-fragment of the two-variable fragment of first-order logic for linear orders with successor function, interpreted over natural numbers. Moreover, we show that MPNL can be extended in a natural way to cover full , but, unexpectedly, the latter (and hence the former) turns out to be undecidable.
C1 [Bresolin, Davide] Univ Verona, Dept Comp Sci, I-37100 Verona, Italy.
   [Della Monica, Dario; Montanari, Angelo] Univ Udine, I-33100 Udine, Italy.
   [Goranko, Valentin] Tech Univ Denmark, Dept Informat, DK-2800 Lyngby, Denmark.
   [Goranko, Valentin] Bulgarian Acad Sci, Inst Math & Informat, Sofia, Bulgaria.
   [Sciavicco, Guido] Univ Murcia, Murcia, Spain.
   [Sciavicco, Guido] Univ Informat Sci & Technol, Ohrid, Macedonia.
C3 University of Verona; University of Udine; Technical University of
   Denmark; Bulgarian Academy of Sciences; University of Murcia
RP Bresolin, D (corresponding author), Univ Verona, Dept Comp Sci, I-37100 Verona, Italy.
EM davide.bresolin@univr.it; dario.dellamonica@uniud.it; vfgo@imm.dtu.dk;
   angelo.montanari@uniud.it; guido@um.es
RI Monica, Dario Della/AAC-6091-2020; BRESOLIN, DAVIDE/I-2790-2017
OI BRESOLIN, DAVIDE/0000-0003-2253-9878; Della Monica,
   Dario/0000-0001-9743-665X; Sciavicco, Guido/0000-0002-9221-879X
FU EU [FP7-ICT-223844 CON4COORD]; HYLO-CORE project; Danish Natural Science
   Research Council; Italian PRIN; Italian GNCS;  [TIN2009-14372-C03-01]; 
   [HS2008-0006]
FX We would like to acknowledge the support from the EU project
   FP7-ICT-223844 CON4COORD (D. Bresolin), the Spanish project
   TIN2009-14372-C03-01 (G. Sciavicco), the HYLO-CORE project, funded by
   the Danish Natural Science Research Council (V. Goranko), the Italian
   PRIN project Innovative and multi-disciplinary approaches for constraint
   and preference reasoning (D. Della Monica, A. Montanari), the Spanish /
   South-African Project HS2008-0006 (V. Goranko, G. Sciavicco), and the
   Italian GNCS project Logics, automata, and games for the formal
   verification of complex systems (D. Bresolin, D. Della Monica, A.
   Montanari, G. Sciavicco).
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   [Anonymous], 1962, Journal of Symbolic Logic
   [Anonymous], 1983, THESIS
   Augusto JC, 2004, FRONT ARTIF INTEL AP, V110, P778
   Blackburn Patrick, 2002, Modal logic
   Bolander T, 2007, ELECTRON NOTES THEOR, V174, P113, DOI 10.1016/j.entcs.2006.11.029
   BORGER E, 1997, CLASSICAL DECISION P
   Bresolin D, 2010, FRONT ARTIF INTEL AP, V215, P695, DOI 10.3233/978-1-60750-606-5-695
   Bresolin D., 2010, Proceedings of the 2010 17th International Symposium on Temporal Representation and Reasoning (TIME 2010), P95, DOI 10.1109/TIME.2010.22
   Bresolin D, 2007, LECT NOTES COMPUT SC, V4393, P549
   Bresolin D, 2007, J AUTOM REASONING, V38, P173, DOI 10.1007/s10817-006-9051-0
   Bresolin D, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P240, DOI 10.1109/SEFM.2009.36
   Bresolin D, 2009, ANN PURE APPL LOGIC, V161, P289, DOI 10.1016/j.apal.2009.07.003
   Bresolin D, 2009, LECT NOTES ARTIF INT, V5607, P123, DOI 10.1007/978-3-642-02716-1_10
   Bresolin D, 2008, LECT NOTES ARTIF INT, V5330, P590, DOI 10.1007/978-3-540-89439-1_41
   CHAOCHEN Z, 1991, INFORM PROCESS LETT, V40, P269, DOI 10.1016/0020-0190(91)90122-X
   Chaochen Z., 1993, STACS 93. 10th Annual Symposium on Theoretical Aspects of Computer Science, P58
   Chaochen Z., 2004, MONOGRAPHS THEORETIC
   Chetcuti-Serandio N, 2000, J LOGIC COMPUT, V10, P877, DOI 10.1093/logcom/10.6.877
   Combi C, 2006, LECT NOTES COMPUT SC, V4008, P35
   Ghorbel M, 2004, LECT NOTES COMPUT SC, V3118, P937
   Goranko V, 2003, J UNIVERS COMPUT SCI, V9, P1137
   Goranko V, 2007, STUD LOGIC PRACT REA, V3, P249
   Gradel E, 1997, B SYMB LOG, V3, P53, DOI 10.2307/421196
   HALPERN JY, 1991, J ACM, V38, P935, DOI 10.1145/115234.115351
   Hansen M. R., 1997, Formal Aspects of Computing, V9, P283, DOI 10.1007/BF01211086
   Hirshfeld Y, 2004, FUND INFORM, V62, P1
   Kautz H. A., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P241
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Montanari A, 1997, THEOR COMPUT SCI, V183, P187, DOI 10.1016/S0304-3975(96)00324-6
   Montanari A., 1997, P IJCAI 97 WORKSH PR
   MORTIMER M, 1975, Z MATH LOGIK, V21, P135, DOI 10.1002/malq.19750210118
   Otto M, 2001, J SYMBOLIC LOGIC, V66, P685, DOI 10.2307/2695037
   Ouaknine J, 2008, LECT NOTES COMPUT SC, V5215, P1, DOI 10.1007/978-3-540-85778-5_1
   Sciavicco G., 2005, P 2 INT C LANG TECHN, P390
   Sciavicco G, 2009, LECT NOTES COMPUT SC, V5602, P158, DOI 10.1007/978-3-642-02267-8_18
   Veloudis S, 1998, LECT NOTES COMPUT SC, V1486, P103, DOI 10.1007/BFb0055340
   Venema Y., 1991, Journal of Logic and Computation, V1, P453, DOI 10.1093/logcom/1.4.453
NR 39
TC 13
Z9 13
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 245
EP 264
DI 10.1007/s10270-011-0195-y
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300004
DA 2024-07-18
ER

PT J
AU Winkler, S
   von Pilgrim, J
AF Winkler, Stefan
   von Pilgrim, Jens
TI A survey of traceability in requirements engineering and model-driven
   development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Model-driven engineering; Model-driven
   development; Traceability
ID GROUP DECISION; SOFTWARE; CONSISTENCY; LINKS; TOOL; HYPERMEDIA;
   GENERATION; MANAGEMENT; SUPPORT
AB Traceability-the ability to follow the life of software artifacts-is a topic of great interest to software developers in general, and to requirements engineers and model-driven developers in particular. This article aims to bring those stakeholders together by providing an overview of the current state of traceability research and practice in both areas. As part of an extensive literature survey, we identify commonalities and differences in these areas and uncover several unresolved challenges which affect both domains. A good common foundation for further advances regarding these challenges appears to be a combination of the formal basis and the automated recording opportunities of MDD on the one hand, and the more holistic view of traceability in the requirements engineering domain on the other hand.
C1 [Winkler, Stefan; von Pilgrim, Jens] Fernuniv, Dept Math & Comp Sci, D-58084 Hagen, Germany.
C3 Fern University Hagen
RP Winkler, S (corresponding author), Fernuniv, Dept Math & Comp Sci, D-58084 Hagen, Germany.
EM stefan.winkler-et@fernuni-hagen.de; jens.vonPilgrim@fernuni-hagen.de
RI Winkler, Stefan/ACL-6097-2022
OI Winkler, Stefan/0000-0003-4305-8408
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Aizenbud-Reshef Netta, 2005, ECMDA TRAC WORKSH EC, P8
   Albinet A., 2007, P 3 EUR C MOD DRIV A, P27
   Alexander I, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P411, DOI 10.1109/RE.2005.79
   ALEXANDER I, 2002, P 1 INT WORKSH TRAC
   ALEXANDER I, 2003, P 2 INT WORKSH TRAC
   Alexander I., 2006, ISSUES TRENDS TECHNO, P25
   Amar B., 2008, ECMDA TRAC WORKSH EC, P7
   Anderson KM, 2000, ACM T INFORM SYST, V18, P211, DOI 10.1145/352595.352596
   [Anonymous], 1 INT C REQ ENG ICRE
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], ECMDA TRAC WORKSH EC
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 2008, ECMDA TRACEABILITY W
   [Anonymous], P 1 INT WORKSH TRAC
   [Anonymous], 2003, Software requirements
   [Anonymous], 2007, 2 INT WORKSH REQ ENG
   *ANSI, 1988, ANSI X3 138 1988 INF
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2001, SOFTWARE PRACT EXPER, V31, P331, DOI 10.1002/spe.374
   Antoniol G., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering, P73, DOI DOI 10.1145/1107656.1107672
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   ARKLEY P, 2002, P 1 INT WORKSH TRAC
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BARBERO M, 2007, ECMDA TW 07, P47
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Boldyreff C, 2002, P INT COMP SOFTW APP, P1081, DOI 10.1109/CMPSAC.2002.1045153
   Brasethvik T, 2001, DATA KNOWL ENG, V38, P45, DOI 10.1016/S0169-023X(01)00016-7
   BRAUN A, 2001, REQUIR ENG, P26
   Brcina R., 2008, ECMDA TRAC WORKSH EC, P39
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   BRINKKEMPER S, 2004, REQ ENG FDN SOFTW QU, P41
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Bui T. X., 1997, Journal of Management Information Systems, V14, P223
   Campos P, 2007, IEEE SOFTWARE, V24, P73, DOI 10.1109/MS.2007.24
   CARD DN, 1992, J SYST SOFTWARE, V17, P219, DOI 10.1016/0164-1212(92)90110-6
   Cerbah F, 2001, DATA KNOWL ENG, V38, P31, DOI 10.1016/S0169-023X(01)00015-5
   Chen JYJ, 1999, J SYST SOFTWARE, V47, P105, DOI 10.1016/S0164-1212(99)00030-8
   CHIKOFSKY EJ, 1988, IEEE SOFTWARE, V5, P11, DOI 10.1109/52.2005
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J., 2003, Requirements Engineering, V8, P171, DOI 10.1007/s00766-003-0175-z
   Cleland-Huang J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P230
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   CLELANDHUANG J, 2007, IEEE COMP, V40, P27
   CLELANDHUANG J, 2006, COETGCT060109
   CONKLIN J, 1988, ACM T INFORM SYST, V6, P303, DOI 10.1145/58566.59297
   Costa M., 2007, ECMDA TRAC WORKSH EC, P17
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Decker Bjorn, 2005, WORKSH SEM WEB EN SO
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   DELUCIA A, 2005, CSMR 05, P32
   Deng M, 2005, INT J SOFTW ENG KNOW, V15, P837, DOI 10.1142/S0218194005002531
   DERNIAME JC, 1999, LECT NOTES COMPUTER, V1500
   DICK J, 2002, P 1 INT WORKSH TRAC
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   dos Santos Soares M., 2008, J SOFTWARE, V3, P57
   DRIVALOS N, 2008, LECT NOTES COMPUTER, V5452
   DUAN C, 2006, 1 INT WORKSH REQ ENG
   DUTOIT AH, 2001, HDB SOFTWARE ENG KNO, V1, P787
   Dutoit AH, 2006, RATIONALE MANAGEMENT
   Ebner G, 2002, IEEE SOFTWARE, V19, P70, DOI 10.1109/MS.2002.1003459
   Egyed A, 2005, INT J SOFTW ENG KNOW, V15, P783, DOI 10.1142/S0218194005002464
   EGYED A, 2005, VALUE BASED SOFTWARE
   Egyed A, 2007, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2007.16
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   FALLERI JR, 2006, ECMDA TRAC WORKSH EC, P31
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   FRITZSCHE M, 2008, ECMDA TRAC WORKSH EC, P111
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   GILLS M, 2005, ECMDA TRAC WORKSH EC, P39
   GLITIA F, 2008, ECMDA TRAC WORKSH EC, P27
   GOGUEN JA, 1996, 2 INT REQ ENG C ICRE
   Goknil Arda, 2008, ECMDA TRAC WORKSH EC, P59
   GOTEL O, 1995, THESIS U LONDON
   Gotel OCZ, 2008, LECT NOTES COMPUT SC, V5025, P129, DOI 10.1007/978-3-540-69062-7_12
   GRECHANIK M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P95
   HAPKE M, 2004, OPEN SOURCE INFORM K
   HARDMAN L, 1994, COMMUN ACM, V37, P50, DOI 10.1145/175235.175239
   Haumer P., 1999, P 32 HAW INT C SYST
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, INT J SOFTW ENG KNOW, V15, P751, DOI 10.1142/S021819400500252X
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Heindl M., 2005, P 10 EUROPEAN SOFTWA, P60
   Heindl M, 2008, LECT NOTES COMPUT SC, V5082, P267
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   Hoffmann M, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P301
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   *IEEE, 1984, 8301984 ANSI IEEE
   Ilieva MG, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P13, DOI 10.1109/SERA.2006.51
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   JARKE M, 1992, IFIP TRANS A, V8, P345
   JARKE M, 1999, NATURE REQUIREMENTS
   Jirapanthong W, 2009, SOFTW SYST MODEL, V8, P117, DOI 10.1007/s10270-007-0066-8
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Kaindl H., 1999, Hypertext '99. Returning to our Diverse Roots. The 10th ACM Conference on Hypertext and Hypermedia, P3, DOI 10.1145/294469.294473
   Kirova V, 2008, BELL LABS TECH J, V12, P143, DOI 10.1002/bltj.20272
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   KOLOVOS DS, 2006, ECMDA TRAC WORKSH EC, P6
   KONIGS A, 2006, J SOFTW SYST MODEL, V5, P349
   Kwan I, 2006, 1 INT WORKSH REQ ENG
   Lago P, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P261, DOI 10.1109/CSMR.2004.1281428
   Lago P, 2009, J SYST SOFTWARE, V82, P168, DOI 10.1016/j.jss.2008.08.026
   Lee C, 2003, P 2 INT WORKSHOP TRA, V20
   LIMON AE, 2005, ECMDA TRAC WORKSH EC, P47
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   LINDVALL M, 1994, THESIS LINKOPING U
   LORMANS M, 2005, TEFSE 05, P37
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   MADER P, 2008, LECT NOTES COMPUTER, V4880
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   MALETIC JI, 2005, TEFSE 05, P67
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A., 2005, P 3 INT WORKSH TRAC, P56, DOI DOI 10.1145/1107656.1107669
   MOHAN K, 2002, P 35 HAW INT C SYST, P76
   Mohan K, 2007, DECIS SUPPORT SYST, V43, P968, DOI 10.1016/j.dss.2005.05.026
   Mohan K, 2006, INFORM MANAGE-AMSTER, V43, P650, DOI 10.1016/j.im.2006.04.001
   MORAN T, 1995, DESIGN RATIONALE CON
   MUNSON EV, 2005, TEFSE 05, P62
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   NASLAVSKY L, 2005, TEFSE 05, P25
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Neumüller C, 2006, IEEE INT CONF AUTOM, P145
   NGUYEN TN, 2003, SIGDOC 03 P 21 ANN I, P198
   NGUYEN TN, 2005, SCM 05, P113
   *OBJ MAN GROUP, 2006, MET FAC 2 0 COR SPEC
   *OBJ MAN GROUP, 2008, OMG SYST MOD LANG VE
   *OBJ MAN GROUP, 2005, PROP MDA FDN MOD
   Object Management Group, 2005, MET FAC 2 0 QUER VIE
   OLDEVIK J, 2006, ECMDA TRAC WORKSH EC, P64
   OLDEVIK J, 2005, ECMDA TRAC WORKSH EC
   Olsen GK, 2007, LECT NOTES COMPUT SC, V4530, P144
   Olsson T., 2002, P 2002 IASTED INT C
   Ozkaya I., 2006, 1 INT WORKSH REQ ENG
   Paige R., 2008, ECMDA TRAC WORKSH EC, P49
   PALMER JD, 1997, SOFTWARE REQUIREMENT, P364
   Pierce RA., 1978, Proceedings of the software quality assurance workshop on functional and performance issues, P53
   Pinheiro F.A. C., 2003, Perspectives on Software Requirements, P93, DOI [10.1007/978-1-4615-0465-8_5, DOI 10.1007/978-1-4615-0465-8_5]
   PINHEIRO FA, 1996, THESIS U OXFORD
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   POHL K, 1995, REQUIREMENTS ENG
   Pohl K., 1996, Process-Centered Requirements Engineering
   POTTS C, 1988, ICSE 88, P418
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   RAMAMOORTHY CV, 1988, IEEE T SOFTWARE ENG, V14, P1145, DOI 10.1109/32.7625
   Ramesh B, 1997, ANN SOFTW ENG, V3, P397, DOI 10.1023/A:1018969401055
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Ramesh B., 1993, P 1 INT S REQUIREMEN, P256
   Ramsin R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322435
   Reiss SP, 2005, PROC IEEE INT CONF S, P113
   Richardson J, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ASE.2004.1342721
   Sabetzadeh M., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering. TEFSE'05, P44, DOI DOI 10.1145/1107656.1107667
   SHERBA SA, 2003, P 2 INT WORKSH TRAC
   Sherba Susanne A, 2005, THESIS U COLORADO BO
   SIMPSON J, 1989, OXFORD ENGLISH DICTI, V18
   Sinha V, 2006, IEEE SOFTWARE, V23, P52, DOI 10.1109/MS.2006.123
   SMITH M, 2003, 2 WORKSH COOP SUPP D, P150
   Sousa A, 2008, ECMDA TRAC WORKSH, P97
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   SPANOUDAKIS G, 2003, 15 INT C SOFTW ENG K, P570
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Stirewalt RE Kurt, 2005, P 3 INT WORKSH TRAC, P31, DOI DOI 10.1145/1107656.1107664
   Stone A, 2006, IEE P-SOFTW, V153, P211, DOI 10.1049/ip-sen:20060034
   STONE A, 2005, REQUIREMENTS ENG
   Strasunskas D, 2004, CONSTRUCTING THE INFRASTRUCTURE FOR THE KNOWLEGE ECONOMY: METHODS AND TOOLS, THEORY AND STRUCTURE, P305
   STRASUNSKAS D, 2002, P 1 INT WORKSH TRAC
   STRASUNSKAS D, 2006, THESIS NORWEGIAN U S
   TILBURY AJM, 1989, IEE C APPL COMP AID
   TRAINER E, 2005, ECL TECHN EXCH ETX W
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   van Lamsweerde A., 2001, 5 IEEE INT S REQ ENG
   VANDENBERG K, 2006, EA 06, P43
   VANGORP P, 2006, TRANSFORMATION TECHN
   VANGORP P, 2006, ENT DISTR OBJ COMP C, P185
   Vanhooff B., 2007, 3 ECMDA TRAC WORKSH, P37
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   VONKNETHEN A, 2001, THESIS U KAISERSLAUT
   VONKNETHEN A, 2002, 09501E FRAUNH IESE
   VONPILGRIM J, 2007, P WORKSH LAY SOFTW E, V7, P17
   Walderhaug S., 2006, ECMDA TRAC WORKSH EC, P41
   Walderhaug S., 2008, DESIGNING SOFTWARE I, P133, DOI DOI 10.4018/978-1-59904-699-0.CH006
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Wenzel Sven, 2007, 2007 IEEE International Conference on Software Maintenance, P104, DOI 10.1109/ICSM.2007.4362623
   Whittle J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P395, DOI 10.1109/ASE.2001.989837
   Wieringa R.J., 1995, INTRO REQUIREMENTS T
   WINKLER S, 2008, 3 INT WORKSH REQ ENG
   Zou XC, 2006, P INT COMP SOFTW APP, P265
   [No title captured]
NR 202
TC 180
Z9 202
U1 0
U2 27
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2010
VL 9
IS 4
BP 529
EP 565
DI 10.1007/s10270-009-0145-0
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 646SW
UT WOS:000281564100006
DA 2024-07-18
ER

PT J
AU Kosiuczenko, P
AF Kosiuczenko, Piotr
TI Redesign of UML class diagrams: a formal approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; OCL; Formal methods; Refactoring; Requirements tracing
ID OCL
AB Contracts provide a precise way of specifying object-oriented systems. When a class structure is modified, the corresponding contracts must be modified accordingly. This paper presents a method of transforming contracts, which allows the extension of a mapping defined on a few model elements, to-what we call-an interpretation function, and to use this function to automatically translate OCL-constraints. Interestingly, such functions preserve reasoning using propositional calculi, resolution, equations, and induction. Interpretation functions can be used to trace model elements throughout multiple redesigns of UML class diagrams in both the forward, and the backward direction. The applicability of our approach is demonstrated in several examples, including some of Fowler's refactoring patterns.
C1 Univ Leicester, Dept Comp Sci, Leicester LE1 7RH, Leics, England.
C3 University of Leicester
RP Kosiuczenko, P (corresponding author), Univ Leicester, Dept Comp Sci, Leicester LE1 7RH, Leics, England.
EM piotr@mcs.le.ac.uk
CR BAAR T, 2002, ROOM 2002
   BAMER D, 2000, PATTERN LANGUAGES PR
   Bidoit M, 1999, LECT NOTES COMPUT SC, V1723, P399
   BOUHOULA A, 2000, TCS, V236
   BRUEL JM, 1998, LNCS, V1618
   CENGARLE V, 2001, LNCS, V2185, P118
   *COFI TASK GROUP L, 1998, CASL COFI ALG SPEC L
   D'Souza D., 1998, OBJECTS COMPONENTS F
   *DEP DEF, 2001, DODSTD2167
   EGYED A, 2003, P 6 INT C UN MOD LAN, P121
   EVANS AS, 1999, BEHAV SPECIFICATIONS, pCH4
   FIADEIRO J, 1991, LNCS, V489
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   FRANCE R, 2002, USING ROLES PATTERN
   GAMMA E, 1995, DESIGN PATTERNS
   Goguen J., 1992, THEORETICAL COMPUTER, V105, P167
   GROSSERHODE M, 1999, LECT NOTES COMPUTER, V1589, P137
   HENNICKER R, 2004, ELECT NOTES THEORETI, V102, P111
   HUNTER A, 1997, P 3 INT S REQ ENG
   Jarke M., 1998, COMMUNICATIONS ACM, V41
   KIRCHNER C, 2005, P 7 ACM SIGPLAN INT
   KNETHEN A, 2001, 09501E IESE FRAUNH I
   KOSIUCZENKO P, 2005, CS05022005 U LEIC
   Kosiuczenko P., 2001, LECT NOTES INFORM
   Lano K., 1995, FORMAL OBJECT ORIENT
   LANO K, 1996, BCS FACS NO FORM MET, P23
   Markovic SA, 2005, LECT NOTES COMPUT SC, V3713, P280, DOI 10.1007/11557432_21
   Meyer B., 1998, Object-oriented software construction (Second Edi)
   *OMG, 2005, 050704 OMG
   PAECH B, 1994, LNCS, V873
   RICHTERS M, 1998, LNCS, V1507, P449
   Tarlecki A., 1999, ALGEBRAIC FDN SYSTEM
   Taylor W., 1973, ALGEBR UNIV, V3, P351, DOI DOI 10.1007/BF02945141
   TERESE, 2003, CAMBRIDGE TRACTS THE, V55
   WARMER J, 1999, OBJECT CONSTRAINT LA
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   WIRSING, 1990, HDB THEORETICAL COMP, P677
   ZAWLOCKI A, 2005, LNCS, V3269, P439
NR 39
TC 6
Z9 7
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 165
EP 183
DI 10.1007/s10270-007-0068-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bendraou, R
   Desfray, P
   Gervais, MP
   Muller, A
AF Bendraou, Reda
   Desfray, Philippe
   Gervais, Marie-Pierre
   Muller, Alexis
TI MDA Tool Components: a proposal for packaging know-how in model driven
   development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDD; Packaging of know-how; MDA Tool Component; Reusability
AB As the Model Driven Development (MDD) and Product Line Engineering (PLE) appear as major trends for reducing software development complexity and costs, an important missing stone becomes more visible: there is no standard and reusable assets for packaging the know-how and artifacts required when applying these approaches. To overcome this limit, we introduce in this paper the notion of MDA Tool Component, i.e., a packaging unit for encapsulating business know-how and required resources in order to support specific modeling activities on a certain kind of model. The aim of this work is to provide a standard way for representing this know-how packaging unit. This is done by introducing a two-layer MOF-compliant metamodel. Whilst the first layer focuses on the definition of the structure and contents of the MDA Tool Component, the second layer introduces a language independent way for describing its behavior. An OMG RFP (Request For Proposal) has been issued in order to standardize this approach.
C1 [Bendraou, Reda; Gervais, Marie-Pierre; Muller, Alexis] Univ Paris 06, Lab Informat, F-75015 Paris, France.
   [Desfray, Philippe] Softeam, F-75008 Paris, France.
   [Gervais, Marie-Pierre] Univ Paris 10, F-75008 Paris, France.
C3 Sorbonne Universite; Universite Paris Nanterre
RP Bendraou, R (corresponding author), Univ Paris 06, Lab Informat, 8 Rue Capitaine Scott, F-75015 Paris, France.
EM Reda.Bendraou@lip6.fr; Philippe.Desfray@softeam.fr;
   Marie-Pierre.Gervais@lip6.fr; Alexis.Muller@lip6.fr
OI Bendraou, Reda/0000-0003-3259-6286
CR BLANC X, 2004, P MDAFA 04 LINK U SW
   Booch G., 2004, UNIFIED MODELING LAN
   BZIVIN J, 2003, METAMODELLING MDA
   DESFRAY P, TECHNIQUES EARLY DEF
   *EDOC, 2002, PTC020205 OMG EDOC
   GREENFIELD J, 2003, P 18 C OBJ OR PROGR
   *MDA, MDA DEV TOOLS
   Object Management Group (OMG), 2005, PTC051101 OMG
   *OMG, 2004, PTC041002 OMG
   OMG, OMG SPEC
   *OMG, 2003, FORMAL031014 OMG
   *OMG, 2002, FORMAL20020403 OMG
   *OMG, 2003, PTC030915 OMG
   OMG SPEM1.0, 2002, FORMAL021114 OMG
   *OMG TC, ORMSC20010701 OMG TC
   *OMG TC, OMG TC WORK PORGR
   PRESSO JM, 2005, LNCS, V3748
   SRIPLAKICH P, 2006, IEEE INT C SOFTW MAI
   *STAND GROUP, 2005, 3 QUART RES REP
   MODELWARE PROJECT
   FAMILIES ITEA PROJEC
   J LANGUAGE
NR 22
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 329
EP 343
DI 10.1007/s10270-007-0058-8
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 322NZ
UT WOS:000257383900007
DA 2024-07-18
ER

PT J
AU Yvars, PA
   Zimmer, L
AF Yvars, Pierre-Alain
   Zimmer, Laurent
TI DEPS: a model- and property-based language for system synthesis problems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Model-based system synthesis; Specification; Design problem modeling
   language; Problem solving; Constraint programming
AB DEPS (design problem specification) is a new modeling language designed to pose and solve system design problems. DEPS addresses problems of sizing, configuration, resource allocation and of architecture generation for systems. Unlike system modeling languages, which are dedicated to the representation of a defined system for evaluation or analysis, we propose a problem modeling language for representing the design problem with a view to its automatic resolution. Compared with other declarative problem modeling languages, DEPS is a declarative structured and property-based language that combines structural modeling features specific to object-oriented languages with problem specification features from constraint programming. The mathematical nature of the problems is described by formal properties encapsulated in models organized according to the architecture of the studied system. The main features of the language are presented in details and are illustrated with examples in different domains. An integrated modeling and solving environment called DEPS Studio allows the designer to express its models in DEPS, to compile the models and to compute automatically the solutions. The validation of the approach is done through two case studies. Finally, we will conclude with the studies and developments in progress which will be integrated into the next version of DEPS Studio.
C1 [Yvars, Pierre-Alain] Inst Super Mecan Paris ISAE Supmeca, QUARTZ, EA 7393, St Ouen, France.
   [Zimmer, Laurent] Dassault Aviat, Direct Prospect, St Cloud, France.
C3 Dassault Aviation
RP Yvars, PA (corresponding author), Inst Super Mecan Paris ISAE Supmeca, QUARTZ, EA 7393, St Ouen, France.
EM pierre-alain.yvars@isae-supmeca.fr; laurent.zimmer@dassault-aviation.com
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Albarello N., 2012, 9 INT C MOD OPT SIM
   [Anonymous], 2007, IEEE Std 1220-2005, pc1
   [Anonymous], 2008, International vocabulary of metrology-Basic and general concepts and associated terms (VIM), JCGM 2008
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   [Anonymous], 2010, The Unified Modeling Language(UML)
   Asarin E, 2010, LECT NOTES COMPUT SC, V6252, P37
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Batteux M., 2015, System Structure Modeling Language (S2ML)
   Benhamou F, 1999, LOGIC PROGRAMM, P230
   Bensana E., 2000, EDA 2000
   Borning Alan., 1977, Proceedings of the 5th international joint conference on Artificial intelligence-Volume 1, V1, P497
   Burgueño L, 2019, INFORM SOFTWARE TECH, V113, P82, DOI 10.1016/j.infsof.2019.05.006
   Creff Stephen, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414963
   depslink, DEPS link nonprofit organization
   Diampovesa S, 2021, COMPUT IND, V129, DOI 10.1016/j.compind.2021.103440
   doc.modelica.org, Modelica units
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Fourer R., 2003, AMPL A language for mathematical programming
   Gibbings JC, 2011, DIMENSIONAL ANALYSIS, P1, DOI 10.1007/978-1-84996-317-6
   Hubert A, 2022, J ENERGY STORAGE, V54, DOI 10.1016/j.est.2022.105351
   ibm, OPL manual
   INCOSE, 2023, SYST ENG VIS 2035
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jayaraman B., 2002, LNCS, V2257, P28
   Khalil W., 2002, MODELING IDENTIFICAT
   Leserf P., 2017, Phd Thesis
   Leserf P, 2019, SOFTW SYST MODEL, V18, P3265, DOI 10.1007/s10270-019-00717-0
   MCCLOY D, 1990, ROBOTICA, V8, P355, DOI 10.1017/S0263574700000485
   Modelica Association, 2023, Modelica: A unified object-oriented language for systems modelling-Language specifications
   Mulyanto T., 2002, THESIS ECOLE NATL SU
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Object Management Group (OMG), 2019, OMG Document Number formal/19-11-011
   OCL, 2014, OCL 2.4
   omgsysml.org, 2017, SysML V2
   omgwiki.org, OMG SysMl QUDV
   Parasolver, 2013, Artisan Studio Para Solver TM 7.2 R1 Tutorials
   qudt.org, QUDT Ontology
   Rosenthal RE., 2007, GAMS a users's guide
   Sellini F., 1998, Revue L'Objet, Numero special: les representations par objet en conception, V4
   Shah AA., 2012, J. Comput. Inform. Sci. Eng, V1, P1231
   Shvetsov I, 1997, ARTIF INTELL ENG, V11, P15, DOI 10.1016/0954-1810(96)00016-7
   Society of Automotive Engineers, 2022, SAE Standards: Architecture Analysis & Design Language (AADL), AS5506d
   Soto R., 2009, Langage et transformation de modeles en programmation par contraintes
   Soto R., 2007, COMMA User's Manual
   Tambay P., 2003, The Cob Programmer's Manual
   Taylor BarryN., 2008, The International System of Units (SI)
   Technical Committee ISO/IECJTC1/SC7, 2019, ISO/IEC/IEEE 42020:2019, P110
   Vargas C., 1995, Revue Int. de CFAO et d'Infographie, V10, P113
   Yvars P.A., 2021, P IEEE INT SYST C SY
   Yvars P.A., 2021, P 14 INT C IND ENG C
   Yvars P.A., 2021, Procedia CIRP, V103
   Yvars PA., 2022, Proced. Proced. CIRP, V109C, P269, DOI [10.1016/j.procir.2022.05.248, DOI 10.1016/J.PROCIR.2022.05.248]
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zimmer L., 2001, CEAS C MULT AIRCR DE
   Zimmer L., 2020, Models of requirements for avionics architecture synthesis: safety, capacity and security, Proc of the 11th Complex System Design and Management (CSDM) conference
NR 56
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 OCT 19
PY 2023
DI 10.1007/s10270-023-01129-x
EA OCT 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6MR0
UT WOS:001085929200001
DA 2024-07-18
ER

PT J
AU Oakes, BJ
   Troya, J
   Galasso, J
   Wimmer, M
AF Oakes, Bentley James
   Troya, Javier
   Galasso, Jessie
   Wimmer, Manuel
TI Fault localization in DSLTrans model transformations by combining
   symbolic execution and spectrum-based analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
ID VERIFICATION; MUTATION
AB The verification of model transformations is important for realizing robust model-driven engineering technologies and quality-assured automation. Many approaches for checking properties of model transformations have been proposed. Most of them have focused on the effective and efficient detection of property violations by contract checking. However, there remains the fault localization step between identifying a failing contract for a transformation based on verification feedback and precisely identifying the faulty rules. While there exist fault localization approaches in the model transformation verification literature, these require the creation and maintenance of test cases, which imposes an additional burden on the developer. In this paper, we combine transformation verification based on symbolic execution with spectrum-based fault localization techniques for identifying the faulty rules in DSLTrans model transformations. This fault localization approach operates on the path condition output of symbolic transformation checkers instead of requiring a set of test input models. In particular, we introduce a workflow for running the symbolic execution of a model transformation, evaluating the defined contracts for satisfaction, and computing different measures for tracking the faulty rules. We evaluate the effectiveness of spectrum-based analysis techniques for tracking faulty rules and compare our approach to previous works. We evaluate our technique by introducing known mutations into five model transformations. Our results show that the best spectrum-based analysis techniques allow for effective fault localization, showing an average EXAM score below 0.30 (less than 30% of the transformation needs to be inspected). These techniques are also able to locate the faulty rule in the top-three ranked rules in 70% of all cases. The impact of the model transformation, the type of mutation and the type of contract on the results is discussed. Finally, we also investigate the cases where the technique does not work properly, including discussion of a potential pre-check to estimate the prospects of the technique for a certain transformation.
C1 [Oakes, Bentley James; Galasso, Jessie] Univ Montreal, DIRO, Montreal, PQ, Canada.
   [Oakes, Bentley James] Polytech Montreal, GIGL, Montreal, PQ, Canada.
   [Troya, Javier] Univ Malaga, ITIS Software, Malaga, Spain.
   [Galasso, Jessie] McGill Univ, ECE, Montreal, PQ, Canada.
   [Wimmer, Manuel] JKU, Dept Business Informat Software Engn, CDL MINT, Linz, Austria.
C3 Universite de Montreal; Universite de Montreal; Polytechnique Montreal;
   Universidad de Malaga; McGill University; Johannes Kepler University
   Linz
RP Troya, J (corresponding author), Univ Malaga, ITIS Software, Malaga, Spain.
EM bentley.oakes@polymtl.ca; jtroya@uma.es;
   jessie.galasso-carbonnel@mcgill.ca; manuel.wimmer@jku.at
RI Oakes, Bentley/AAS-2811-2020
OI Oakes, Bentley/0000-0001-7558-1434
FU Spanish Government (FEDER/Ministerio de Ciencia e Innovacion-Agencia
   Estatal de Investigacion) [PID2021-125527NB-I00, TED2021-130523B-I00];
   Austrian Science Fund [P 30525-N31]; Austrian Federal Ministry for
   Digital and Economic Affairs; National Foundation for Research,
   Technology and Development (CDG)
FX The authors thank Lola Burgueno from the University of Malaga for her
   insightful comments on this work. The authors have no competing
   interests to declare that are relevant to the content of this article.
   This work was partially funded by the Spanish Government
   (FEDER/Ministerio de Ciencia e Innovacion-Agencia Estatal de
   Investigacion) under projects PID2021-125527NB-I00 and
   TED2021-130523B-I00, by the Austrian Science Fund (P 30525-N31), and by
   the Austrian Federal Ministry for Digital and Economic Affairs and the
   National Foundation for Research, Technology and Development (CDG).
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   [Anonymous], 2013, P 2013 INT S SOFTW T
   Aranega V, 2015, SOFTW TEST VERIF REL, V25, P653, DOI 10.1002/stvr.1532
   Aranega V, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P66
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   ATL, 2006, ATL Zoo
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Baudry B., 2006, P ECMDA WORKSH INT M, P432, DOI [10.1007/978-3-642-33666-9_28, DOI 10.1007/978-3-642-33666-9_28]
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Cheng Z, 2018, INT J SOFTW TOOLS TE, V20, P645, DOI 10.1007/s10009-018-0491-8
   Cheng Z, 2017, IEEE INT CONF SOFTW, P379, DOI 10.1109/ICST.2017.41
   Cheng Z, 2017, LECT NOTES COMPUT SC, V10202, P300, DOI 10.1007/978-3-662-54494-5_17
   Clarisó R, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P74, DOI 10.1109/QUATIC.2018.00020
   de Souza HA, 2018, INFORM SOFTWARE TECH, V94, P245, DOI 10.1016/j.infsof.2017.10.014
   Du KK, 2020, LECT NOTES COMPUT SC, V12028, P299, DOI 10.1007/978-3-030-41418-4_20
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Gabmeyer S, 2019, SOFTW SYST MODEL, V18, P473, DOI 10.1007/s10270-017-0591-z
   github, SyVOLT tool
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gomez-Abajo P., 2016, P SAC, P1968
   Gómez-Abajo P, 2017, COMPUT LANG SYST STR, V49, P152, DOI 10.1016/j.cl.2016.11.001
   Guerra E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P78, DOI 10.1109/MODELS.2019.00-13
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hibberd M, 2007, LECT NOTES COMPUT SC, V4735, P589
   Janssen T, 2009, SINTER 09, P23
   Jin Kunxiang, 2022, MODELS '22: Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings, P852, DOI 10.1145/3550356.3561545
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Khan Y, 2013, IEEE ICST WORKSHOP, P43, DOI 10.1109/ICSTW.2013.13
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Li PF, 2020, IEEE ACCESS, V8, P14054, DOI 10.1109/ACCESS.2020.2966540
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lucio L., 2015, International Conference on Model Driven Engineering Languages and Systems, P24
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   MAXWELL AE, 1968, BRIT J MATH STAT PSY, V21, P105, DOI 10.1111/j.2044-8317.1968.tb00401.x
   Meghzili S, 2019, INFORM SYST FRONT, V21, P45, DOI 10.1007/s10796-018-9860-9
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   NaoMod Research Group-IMT Atlantique, ATL Zoo Benchmark
   Narayanan A., 2008, Electron. Commun. Eur. Assoc. Softw. Sci. Technol., V10
   Oakes B.J., 2018, P MDEBUG MODELS, P532
   Oakes B.J., 2018, A symbolic execution-based approach to model transformation verification using structural contracts
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   Paen E., 2012, Measuring incrementally developed model transformations using change metrics
   Posse E, 2016, SOFTW SYST MODEL, V15, P179, DOI 10.1007/s10270-014-0399-z
   Rodriguez-Echeverria R, 2022, SOFTW SYST MODEL, V21, P81, DOI 10.1007/s10270-021-00891-0
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Selim G., 2015, Proceedings of Analysis of Model Transformations workshop at Model Driven Engineering Languages and Systems, P26
   Selim G., 2015, Ph.D. thesis,
   Selim Gehan M. K., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P90, DOI 10.1007/978-3-642-31491-9_9
   Selim GMK, 2014, LECT NOTES COMPUT SC, V8571, P113
   Sen S., 2006, P MUT WORKSH, P1
   Troya Javier, 2020, Zenodo, DOI 10.5281/ZENODO.3954860
   Troya J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3523056
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Troya J, 2015, IEEE ICST WORKSHOP
   Ujhelyi Zoltan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P1, DOI 10.1109/ICST.2012.80
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Weidmann N, 2022, J OBJECT TECHNOL, V21, DOI 10.5381/jot.2022.21.3.a8
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang ZY, 2009, INFORM SOFTWARE TECH, V51, P1573, DOI 10.1016/j.infsof.2009.06.013
NR 80
TC 1
Z9 1
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 SEP 29
PY 2023
DI 10.1007/s10270-023-01123-3
EA SEP 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T0ZQ6
UT WOS:001075362200001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Franz, T
   Seidl, C
   Fischer, PM
   Gerndt, A
AF Franz, Tobias
   Seidl, Christoph
   Fischer, Philipp M.
   Gerndt, Andreas
TI Utilizing multi-level concepts for multi-phase modeling
   Context-awareness and process-based constraints to enable model
   evolution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based systems engineering; Multi-level modeling; Domain-specific
   languages; Systems engineering
AB In model-based systems engineering projects, engineers from multiple domains collaborate by establishing a common system model. Multi-level modeling is a technique that can be used to model the development from abstract ideas to concrete implementations. However, current multi-level modeling approaches are not adequate for processes with multiple modeling phases that might have to be rearranged later. In this paper, we introduce multi-phase modeling that utilizes concepts of multi-level modeling by considering a description of the expected phase ordering per domain. Constraints aware of this context can express that certain elements are only valid in specific phases without having to determine a concrete phase ordering for a particular model. This enables using multi-phase modeling in flexible workflows, adapting to changing requirements and the definition of access rules in domain notation. We show feasibility of this multi-phase modeling by applying it to multiple real-life systems engineering projects of the aerospace domain.
C1 [Franz, Tobias; Fischer, Philipp M.; Gerndt, Andreas] German Aerosp Ctr DLR, Inst Software Technol, Braunschweig, Germany.
   [Seidl, Christoph] IT Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
   [Gerndt, Andreas] Univ Bremen, Ctr Ind Math ZeTeM, Bremen, Germany.
C3 Helmholtz Association; German Aerospace Centre (DLR); IT University
   Copenhagen; University of Bremen
RP Franz, T (corresponding author), German Aerosp Ctr DLR, Inst Software Technol, Braunschweig, Germany.
EM tobias.franz@dlr.de
OI Fischer, Philipp M./0000-0003-2918-5195
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Almeida JPA, 2017, LECT NOTES COMPUT SC, V10650, P280, DOI 10.1007/978-3-319-69904-2_23
   [Anonymous], 2016, P 3 INT WORKSH MULTI
   [Anonymous], 2009, ECSSMST10C
   [Anonymous], 2005, METAOBJECT FACILITY
   Atkinson C, 2005, LECT NOTES COMPUT SC, V3713, P398, DOI 10.1007/11557432_30
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   Atkinson C., 2012, P 2 INT MAST CLASS M, P5, DOI 10.1145/2448076.2448083
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2013, P 2 WORKSH GRAPH MOD, DOI [10.1145/2489820.2489821, DOI 10.1145/2489820.2489821]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Dahchour M, 2002, IEEE T KNOWL DATA EN, V14, P1078, DOI 10.1109/TKDE.2002.1033775
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Fischer PM, 2017, CEAS SPACE J, V9, P351, DOI 10.1007/s12567-017-0166-4
   Fischer P.M., 2017, DAGST SEM
   FRANK U, 2020, P 23 ACM IEEE INT C, P622, DOI DOI 10.1109/CYBERSA49311.2020.9139673
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gross D, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P316
   Guerra E, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P23, DOI 10.1145/3239372.3239376
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P2787, DOI 10.1007/s10270-018-0701-6
   Igamberdiev M, 2018, SOFTW SYST MODEL, V17, P269, DOI 10.1007/s10270-016-0520-6
   Johnson R, 1998, SOFTW PATT S, P47
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Kühne T, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P2, DOI 10.1145/3239372.3239411
   Lange A., 2018, MODELS WORKSHOPS, P653
   Lange C, 2018, CONCURRENT ENG-RES A, V26, P77, DOI 10.1177/1063293X17736358
   Lyardet F.D., 1997, P C PATT LANG DES
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   Neumayr Bernd., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling, V96, P107
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Rao1 B.H., 2013, International Journal of Engineering Trends and Technology, V4, P3266
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Svensson D., 2000, INT DES ENG TECHN C, V35111, P377
   Theisz Z., 2020, P 23 ACM IEEE INT C, P1
NR 38
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1665
EP 1683
DI 10.1007/s10270-021-00963-1
EA JAN 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000745599500001
OA hybrid, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Mokaddem, CE
   Sahraoui, H
   Syriani, E
AF Mokaddem, Chihab Eddine
   Sahraoui, Houari
   Syriani, Eugene
TI A generic approach to detect design patterns in model transformations
   using a string-matching algorithm
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design pattern; Model transformation; Pattern detection; String
   matching; Bit-vector; Model-driven engineering
ID RECOVERY; LANGUAGE; ATL
AB Maintaining software artifacts is a complex and time-consuming task. Like any other program, model transformations are subject to maintenance. In a maintenance process, much effort is dedicated to the comprehension of programs. To this end, several techniques are used, such as feature location and design pattern detection. In the particular case of model transformations, detecting design patterns contributes to a better comprehension as they carry valuable information on the transformation structure. In this paper, we propose a generic approach to detect, semi-automatically, design patterns and their variations in model transformations. Our approach encodes both design patterns and transformations as strings and use a string-matching algorithm for the detection. The approach is able to detect complete and partial implementations of design patterns in transformations, which is useful to refactoring and improving model transformations.
C1 [Mokaddem, Chihab Eddine; Sahraoui, Houari; Syriani, Eugene] Univ Montreal, Montreal, PQ, Canada.
C3 Universite de Montreal
RP Mokaddem, CE (corresponding author), Univ Montreal, Montreal, PQ, Canada.
EM cemo.mokaddem@umontreal.ca; houari.sahraoui@umontreal.ca;
   eugene.syriani@umontreal.ca
CR Al-Obeidallah MohammedGhazi., 2016, International Journal of Software Engineering (IJSE), V7, P41
   Alnusair A, 2014, INT J SOFTW TOOLS TE, V16, P315, DOI 10.1007/s10009-013-0292-z
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Arcelli F, 2010, COMM COM INF SC, V69, P163
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Batot E, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P176
   Bergeron A., 2002, International Journal of Foundations of Computer Science, V13, P53, DOI 10.1142/S0129054102000947
   Dantizig GB., 1991, LINEAR PROGRAMMING E
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Guéhéneuc YG, 2010, SOFTWARE QUAL J, V18, P145, DOI 10.1007/s11219-009-9082-y
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Gupta M., 2018, DESIGN PATTERN DETEC
   Holub J., 1997, Proceedings of the Prague Stringology Club Workshop '97, P39
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jurack S, 2011, ELECTRON PROC THEOR, P181, DOI 10.4204/EPTCS.74.17
   Kaczor O, 2010, INFORM SOFTWARE TECH, V52, P152, DOI 10.1016/j.infsof.2009.08.006
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Lano K, 2017, LECT NOTES COMPUT SC, V10374, P108, DOI 10.1007/978-3-319-61473-1_8
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Lawrance, 2014, ARXIV14017416 CORR
   Mayvan BB, 2017, KNOWL-BASED SYST, V120, P211, DOI 10.1016/j.knosys.2017.01.007
   Mokaddem CE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P257, DOI 10.1145/3239372.3239406
   Mokaddem CE, 2016, LECT NOTES COMPUT SC, V9959, P211, DOI 10.1007/978-3-319-46613-2_14
   Myers G, 1999, J ACM, V46, P395, DOI 10.1145/316542.316550
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Paakki J., 2000, P INT C SOFTW THEOR
   Philippow I., 2005, Software System Model, V4, P55
   Ramadan Q, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P123, DOI 10.1109/MODELS.2017.10
   Rasool G, 2010, ADV ENG SOFTW, V41, P519, DOI 10.1016/j.advengsoft.2009.10.014
   Richa E, 2019, SOFTW SYST MODEL, V18, P321, DOI 10.1007/s10270-017-0607-8
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   Srinivasan G., 2010, OPERATIONS RES PRINC
   Syriani E, 2013, SOFTW SYST MODEL, V12, P387, DOI 10.1007/s10270-011-0205-0
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Uchiyama Satoru., 2014, Journal of Software Engineering and Applications, V7, P983, DOI DOI 10.4236/JSEA.2014.712086
   von Detten Markus., 2011, Proceedings of the joint ACM SIGSOFT conference - QoSA and ACM SIGSOFT symposium - ISARCS on Quality of software architectures - QoSA and architecting critical systems - ISARCS, QoSA-ISARCS '11, P23
   Yu DJ, 2015, J SYST SOFTWARE, V103, P1, DOI 10.1016/j.jss.2015.01.019
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
NR 47
TC 1
Z9 1
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1241
EP 1269
DI 10.1007/s10270-021-00936-4
EA NOV 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000718722700001
DA 2024-07-18
ER

PT J
AU Sabau, AR
   Hacks, S
   Steffens, A
AF Sabau, Alex R.
   Hacks, Simon
   Steffens, Andreas
TI Implementation of a continuous delivery pipeline for enterprise
   architecture model evolution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture model evolution; Continuous delivery; Enterprise
   architecture model maintenance
ID DESIGN SCIENCE; BUSINESS
AB The discipline of enterprise architecture (EA) is an established approach to model and manage the interaction of business processes and IT in an organization. Thereby, the EA model as a central artifact of EA is subject to a continuous evolution caused by multiple sources of changes. The continuous evolution requires a lot of effort in controlling and managing the evolution of the EA model. This is especially true when merging the induced changes from different sources in the EA model. Additionally, the lack of tool and automation support makes this a very time-consuming and error-prone task. The evolutionary character and the automated quality assessment of artifacts is a well-known challenge in the software development domain as well. To meet these challenges, the discipline of continuous delivery (CD) has emerged to be very useful. The evolution of EA model artifacts shows similarities to the evolution of software artifacts. Therefore, we leveraged practices of CD to practices of EA maintenance. Thus, we created a conceptual framework for automated EA model maintenance. The concepts were realized in a first prototype and were evaluated in a fictitious case study against equivalence classes based on EA model metrics and a set of several requirements for automated EA model maintenance from research. Overall, the concepts prove to be a promising basis for further refinement, implementation, and evaluation in research in an industrial context.
C1 [Sabau, Alex R.; Steffens, Andreas] Rhein Westfal TH Aachen, Res Grp Software Construct, Aachen, Germany.
   [Hacks, Simon] KTH Royal Inst Technol, Div Network & Syst Engn, Stockholm, Sweden.
C3 RWTH Aachen University; Royal Institute of Technology
RP Hacks, S (corresponding author), KTH Royal Inst Technol, Div Network & Syst Engn, Stockholm, Sweden.
EM alex.sabau@swc.rwth-aachen.de; shacks@kth.se;
   steffens@swc.rwth-aachen.de
RI Hacks, Simon/AAE-4785-2019; Rumpe, Bernhard/S-8216-2016
OI Hacks, Simon/0000-0003-0478-9347; Rumpe, Bernhard/0000-0002-2147-1966
FU Royal Institute of Technology
FX Open access funding provided by Royal Institute of Technology.
CR Alegria A., 2010, 2010 4 INT C RES CHA, P1
   Altmanninger K., 2009, CRPIT, V96, P139
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2011, SYST SOFTW ENG ARCH
   [Anonymous], 2019, OP GROUP ARCH MOD EX
   [Anonymous], 2017, ARCHIMATE 3 0 1 SPEC
   [Anonymous], 2018, REFACTORING IMPROVIN
   [Anonymous], 2011, 25010 ISOIEC
   Barjis J, 2009, LECT NOTES BUS INF P, V28, P50
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bebensee B, 2019, IEEE INT ENTERP, P17, DOI 10.1109/EDOCW.2019.00017
   Becker J., 2012, Grundsatze ordnungsmassiger Modellierung: Konzeption und Praxisbeispiel fur ein effizientes Prozessmanagement
   Burnstein I., 2006, Practical Software Testing: A Process-Oriented Approach
   Buschle M., 2012, 18 AM C INF SYST
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   De Lucia A, 2007, J VISUAL LANG COMPUT, V18, P492, DOI 10.1016/j.jvlc.2007.08.005
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dollmann T, 2011, IEEE ENABL TECHNOL, P217, DOI 10.1109/WETICE.2011.36
   Doring J.S, 2018, THESIS
   Farwick M., 2011, ICEIS
   Farwick M, 2012, LECT NOTES BUS INF P, V131, P129
   Fischer R., 2007, EMISA
   Fowler M., 2006, CONTINOUS INTEGRATIO
   Guild B.A, 2014, GUIDE BUSINESS ARCHI, VV04
   Hacks S., 2018, LECT NOTES INFORM
   Hacks S., 2020, 40 YEARS EMISA 2019
   Hacks S, 2019, LECT NOTES BUS INF P, V352, P141, DOI 10.1007/978-3-030-20618-5_10
   Hacks S, 2018, IEEE INT ENTERP DIST, P51, DOI 10.1109/EDOC.2018.00017
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hauder M., 2012, TEAR PRET
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Holm H, 2014, SOFTW SYST MODEL, V13, P825, DOI 10.1007/s10270-012-0252-1
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Johnson P, 2016, IEEE INT ENTERP, P122
   Jugel D, 2015, LECT NOTES BUS INF P, V215, P351, DOI 10.1007/978-3-319-19243-7_33
   Khosroshahi PA, 2015, LECT NOTES BUS INF P, V215, P413, DOI 10.1007/978-3-319-19243-7_38
   Kirschner B, 2014, MULTIKONFERENZ WIRTS
   Kleehaus M., 2019, AMCIS
   Kotusev S, 2016, J ENTERP ARCHIT, V12, P31
   Landthaler J, 2018, LECT NOTES BUS INF P, V335, P71, DOI 10.1007/978-3-030-02302-7_5
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Lim N, 2009, SNPD 2009: 10TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCES, NETWORKING AND PARALLEL DISTRIBUTED COMPUTING, PROCEEDINGS, P283, DOI 10.1109/SNPD.2009.97
   Matthes F., 2011, EAM KPI CATALOG V1 0
   Nakakawa A, 2010, LECT NOTES COMPUT SC, V6105, P538, DOI 10.1007/978-3-642-13335-0_40
   Niemi E, 2013, P ANN HICSS, P3878, DOI 10.1109/HICSS.2013.201
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Plataniotis G, 2014, INT J INF SYST MODEL, V5, P75, DOI 10.4018/ijismd.2014070104
   Prilla M, 2013, INT J E-COLLAB, V9, P1, DOI 10.4018/ijec.2013100101
   Rajashekar N., 2019, PRACT ENT MOD 2019 C, P54
   RITTGEN P, 2008, P CAISE 08 FOR, P61
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rumpe B., 2017, Agile Modeling with UML: Code Generation, Testing, Refactoring
   SaintLouis P., 2016, 20 INT ENT DISTR OBJ
   Salentin J., 2020, INTERNATIONALEN TAGU, P276
   Sandkuhl K., 2014, TACKLING BUSINESS CH, V309
   Simon D, 2013, COMMUN ASSOC INF SYS, V32
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Ssebuggwawo D, 2010, LECT NOTES BUS INF P, V68, P76
   Steffens A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P1, DOI 10.1145/3194760.3194768
   Timm F., 2017, P 5 INT WORKSH QUANT, P10
   Uludag Ö, 2018, IEEE INT ENTERP DIST, P191, DOI 10.1109/EDOC.2018.00032
   Valja M., 2016, PORTL INT C MAN ENG
   Valja M., 2015, 19 INT ENT DISTR OBJ
   van Buuren R, 2004, LECT NOTES COMPUT SC, V3256, P39
   Winter K., 2010, 5 MED C INF SYST AIS
   Yin R.K., 2014, Applications of case study research, V2nd
   Ylimaki T., 2006, Journal of Enterprise Architecture, V2, P29
NR 69
TC 2
Z9 3
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 117
EP 145
DI 10.1007/s10270-020-00828-z
EA SEP 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000571360400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cheng, Z
   Tisi, M
   Douence, R
AF Cheng, Zheng
   Tisi, Massimo
   Douence, Remi
TI CoqTL: a Coq DSL for rule-based model transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model transformation; Domain-specific
   language; Interactive theorem proving; Coq
ID ATL; VALIDATION; FRAMEWORK
AB In model-driven engineering, model transformation (MT) verification is essential for reliably producing software artifacts. While recent advancements have enabled automatic Hoare-style verification for non-trivial MTs, there are certain verification tasks (e.g. induction) that are intrinsically difficult to automate. Existing tools that aim at simplifying the interactive verification of MTs typically translate the MT specification (e.g. in ATL) and properties to prove (e.g. in OCL) into an interactive theorem prover. However, since the MT specification and proof phases happen in separate languages, the proof developer needs a detailed knowledge of the translation logic. Naturally, any error in the MT translation could cause unsound verification, i.e. the MT executed in the original environment may have different semantics from the verified MT. We propose an alternative solution by designing and implementing an internal domain-specific language, namely CoqTL, for the specification of declarative MTs directly in the Coq interactive theorem prover. Expressions in CoqTL are written in Gallina (the specification language of Coq), increasing the possibilities of reusing native Coq libraries in the transformation definition and proof. CoqTL specifications can be directly executed by our transformation engine encoded in Coq, or a certified implementation of the transformation can be generated by the native Coq extraction mechanism. We ensure that CoqTL has the same expressive power of Gallina (i.e. if a MT can be computed in Gallina, then it can also be represented in CoqTL). In this article, we introduce CoqTL, evaluate its practical applicability on a use case, and identify its current limitations.
C1 [Cheng, Zheng] ICAM, LS2N UMR CNRS 6004, Nantes, France.
   [Tisi, Massimo; Douence, Remi] IMT Atlantique, LS2N UMR CNRS 6004, Nantes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique
RP Cheng, Z (corresponding author), ICAM, LS2N UMR CNRS 6004, Nantes, France.
EM zheng.cheng@icam.fr; massimo.tisi@imt-atlantique.fr;
   remi.douence@imt-atlantique.fr
RI Douence, Remi/KGL-9014-2024
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Berghofer S, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P230, DOI 10.1109/SEFM.2004.1347524
   Berry Gerard, 2008, Formal Methods for Industrial Critical Systems. 12th International Workshop, FMICS 2007. Revised Selected Papers
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Cheng Z, 2018, INT J SOFTW TOOLS TE, V20, P645, DOI 10.1007/s10009-018-0491-8
   Cheng Z, 2015, LECT NOTES COMPUT SC, V9152, P133, DOI 10.1007/978-3-319-21155-8_11
   Chlipala A, 2013, ACM SIGPLAN NOTICES, V48, P391, DOI [10.1145/2544174.2500592, 10.1145/2500365.2500592]
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Fernández M, 2013, ELECTRON P THEOR COM, P63, DOI 10.4204/EPTCS.108.5
   Gu RH, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P653
   Hamiaz M.K., 2014, INT C FOM ENG METH
   He X, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P434, DOI 10.1145/3236024.3236070
   Hidaka S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P480, DOI 10.1109/ASE.2011.6100104
   Hidaka S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P23, DOI 10.1109/MODELS.2017.21
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Leroy X, 2006, ACM SIGPLAN NOTICES, V41, P42, DOI 10.1145/1111320.1111042
   Long Cheng, 2015, IEEE Transactions on Big Data, V1, P138, DOI 10.1109/TBDATA.2015.2505719
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   Picard C, 2011, ELECT COMMUN EASST, V39, P133
   Pierce Benjamin C., 2017, ELECT TXB
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Selim Gehan M. K., 2012, 18 EUR C MOD FDN APP, P90
   Stenzel K, 2015, SOFTW SYST MODEL, V14, P981, DOI 10.1007/s10270-013-0351-7
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tisi M, 2018, LECT NOTES COMPUT SC, V10888, P142, DOI 10.1007/978-3-319-93317-7_7
   Tisi M, 2011, LECT NOTES COMPUT SC, V6981, P32, DOI 10.1007/978-3-642-24485-8_4
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Wagelaar, 2014, 2 SOFTW DEV AUT C AM
   Werner B., 1997, Theoretical Aspects of Computer Software. Third International Symposium, TACS '97. Proceedings, P530, DOI 10.1007/BFb0014566
   Willink Edward, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P58, DOI 10.1007/978-3-642-38883-5_8
   Yang ZB, 2014, J SYST SOFTWARE, V93, P42, DOI 10.1016/j.jss.2014.02.058
NR 41
TC 3
Z9 3
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 425
EP 439
DI 10.1007/s10270-019-00765-6
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hojaji, F
   Zamani, B
   Hamou-Lhadj, A
   Mayerhofer, T
   Bousse, E
AF Hojaji, Fazilat
   Zamani, Bahman
   Hamou-Lhadj, Abdelwahab
   Mayerhofer, Tanja
   Bousse, Erwan
TI Lossless compaction of model execution traces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Execution trace; Compaction; Model execution; Trace metamodel
ID DESIGN SCIENCE; PATTERN; DOMAIN
AB Dynamic verification and validation (V&V) techniques are used to verify and validate the behavior of software systems early in the development process. In the context of model-driven engineering, such behaviors are usually defined using executable domain-specific modeling languages (xDSML). Many V&V techniques rely on execution traces to represent and analyze the behavior of executable models. Traces, however, tend to be overwhelmingly large, hindering effective and efficient analysis of their content. While there exist several trace metamodels to represent execution traces, most of them suffer from scalability problems. In this paper, we present a generic compact trace representation format called generic compact trace metamodel (CTM) that enables the construction and manipulation of compact execution traces of executable models. CTM is generic in the sense that it supports a wide range of xDSMLs. We evaluate CTM on traces obtained from real-world fUML models. Compared to existing trace metamodels, the results show a significant reduction in memory and disk consumption. Moreover, CTM offers a common structure with the aim to facilitate interoperability between existing trace analysis tools.
C1 [Hojaji, Fazilat; Zamani, Bahman] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Mayerhofer, Tanja; Bousse, Erwan] TU Wien, Business Informat Grp, Vienna, Austria.
C3 University of Isfahan; Concordia University - Canada; Technische
   Universitat Wien
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM f.hojaji@eng.ui.ac.ir; zamani@eng.ui.ac.ir;
   wahab.hamou-lhadj@concordia.ca; mayerhofer@big.tuwien.ac.at;
   bousse@big.tuwien.ac.at
RI Akram, Hakiri/H-5811-2018; Hojaji, Fazilat/ABC-9192-2020; Zamani,
   Bahman/X-6918-2019
OI Akram, Hakiri/0000-0001-7151-5499; Zamani, Bahman/0000-0001-6424-1442;
   Bousse, Erwan/0000-0003-0000-9219; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
FU Kharazmi University; Ministry of Science, Research, and Technology
   (MSRT) of Islamic Republic of Iran; Austria (OeAd) [4/11937]
FX The authors would like to acknowledge the financial sponsorship provided
   by co-founding of Kharazmi University and Ministry of Science, Research,
   and Technology (MSRT) of Islamic Republic of Iran under IMPULS Program.
   Lastly, the authors would like to thank Austria (OeAd) for supporting
   this research facilities through Contract No: 4/11937.
CR Alawneh L, 2011, FUTURE GENER COMP SY, V27, P381, DOI 10.1016/j.future.2010.08.015
   Alawneh L, 2009, COMM COM INF SC, V59, P253
   Aljamaan H., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P495, DOI 10.1109/WCRE.2012.59
   Aljamaan H, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P79
   [Anonymous], XML MET INT SPEC VER
   [Anonymous], 2017, MODEL DRIVEN SOFTWAR
   [Anonymous], 1962, COMMUN ACM
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], INT J ADV TELECOMMUN
   [Anonymous], ARXIVCS0101005
   [Anonymous], SIMPLE EFFICIENT TRE
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], EFF EXT MARK LANG XM
   [Anonymous], P 4 EUR C EMB REAL T
   [Anonymous], T ASP ORIENTED SOFTW
   [Anonymous], USENIX C OBJ OR TECH
   [Anonymous], MODELLIERUNG
   [Anonymous], PERIOD POLYTECHN ELE
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], P 1 INT WORKSH EX MO
   [Anonymous], TERADATA RAINSTORS C
   [Anonymous], THESIS
   [Anonymous], SEM FDN SUBS EX UML
   [Anonymous], P WORKSH FREQ IT MIN
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUTER
   Barmpis K., 2012, PROC 2012 EXTREME MO, P33, DOI [10.1145/2467307.2467314, DOI 10.1145/2467307.2467314]
   Barr ET, 2014, ACM SIGPLAN NOTICES, V49, P67, DOI [10.1145/2660193.2660209, 10.1145/2714064.2660209]
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Bousse E, 2019, SOFTW SYST MODEL, V18, P385, DOI 10.1007/s10270-017-0598-5
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Crégut X, 2010, LECT NOTES COMPUT SC, V6138, P90, DOI 10.1007/978-3-642-13595-8_9
   Crockford D., 2006, Tech. Rep.
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Dhamdhere DM, 2003, INFORM PROCESS LETT, V85, P145, DOI 10.1016/S0020-0190(02)00322-8
   Diamantini C, 2016, J INTELL INF SYST, V47, P5, DOI 10.1007/s10844-016-0394-7
   Domínguez E, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P55, DOI 10.1109/MiSE.2013.6595297
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Fuentes L., 2008, MISE 08, P75
   Gamma Erich., 1994, DESIGN PATTERNS
   Hamou-Lhadj A., 2004, Electronic Notes in Theoretical Computer Science, V94, P59
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hamou-Lhadj A, 2012, SOFTW SYST MODEL, V11, P77, DOI 10.1007/s10270-010-0180-x
   Hartmann T, 2014, LECT NOTES COMPUT SC, V8767, P252, DOI 10.1007/978-3-319-11653-2_16
   Hartmann Thomas., 2017, P 29 INT C SOFTWARE, P596
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Hegedüs A, 2016, SOFTW SYST MODEL, V15, P733, DOI 10.1007/s10270-014-0436-y
   Hendriks M., 2016, P INT J SOFTWARE TOO, P1, DOI [10.1007/s10009-016-0436-z, 10.1007/s10009-016, DOI 10.1007/S10009-016]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hilken F, 2016, 19TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2016), P708, DOI 10.1109/DSD.2016.42
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Hojaji F, 2016, 2016 6TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P298, DOI 10.1109/ICCKE.2016.7802156
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Kemper P, 2009, IEEE T SOFTWARE ENG, V35, P195, DOI 10.1109/TSE.2008.75
   Langer P, 2014, LECT NOTES COMPUT SC, V8767, P116, DOI 10.1007/978-3-319-11653-2_8
   Liesaputra V, 2015, LECT NOTES COMPUT SC, V9253, P441, DOI 10.1007/978-3-319-23063-4_29
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Maoz S, 2009, COMPUTER, V42, P28, DOI 10.1109/MC.2009.336
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pirzadeh H, 2013, SCI COMPUT PROGRAM, V78, P1099, DOI 10.1016/j.scico.2012.11.002
   Pirzadeh H, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P221, DOI 10.1109/ICECCS.2011.29
   Schivo Stefano, 2017, Dependable Software Engineering. Theories, Tools, and Applications. Third International Symposium, SETTA 2017. Proceedings: LNCS 10606, P319, DOI 10.1007/978-3-319-69483-2_19
   Schivo S, 2014, IEEE J BIOMED HEALTH, V18, P832, DOI 10.1109/JBHI.2013.2292880
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Song M, 2009, LECT NOTES BUS INF P, V17, P109
   Stonebraker Mike., 2005, VLDB'05
   Taniguchi K, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P148, DOI 10.1109/IWPSE.2005.19
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   Tax N, 2019, J INTELL INF SYST, V52, P107, DOI 10.1007/s10844-018-0507-6
   Tax N, 2018, LECT NOTE NETW SYST, V15, P251, DOI 10.1007/978-3-319-56994-9_18
   Varda Kenton, 2008, TECHNICAL REPORT
NR 80
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 199
EP 230
DI 10.1007/s10270-019-00737-w
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900010
DA 2024-07-18
ER

PT J
AU Burgueño, L
   Ciccozzi, F
   Famelis, M
   Kappel, G
   Lambers, L
   Mosser, S
   Paige, RF
   Pierantonio, A
   Rensink, A
   Sala, R
   Taentzer, G
   Vallecillo, A
   Wimmer, M
AF Burgueno, Loli
   Ciccozzi, Federico
   Famelis, Michalis
   Kappel, Gerti
   Lambers, Leen
   Mosser, Sebastien
   Paige, Richard F.
   Pierantonio, Alfonso
   Rensink, Arend
   Sala, Rick
   Taentzer, Gabriele
   Vallecillo, Antonio
   Wimmer, Manuel
TI Contents for a Model-Based Software Engineering Body of Knowledge
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-Based Software Engineering; Body of Knowledge; Core concepts;
   Education
AB Although Model-Based Software Engineering (MBE) is a widely accepted Software Engineering (SE) discipline, no agreed-upon core set of concepts and practices (i.e., a Body of Knowledge) has been defined for it yet. With the goals of characterizing the contents of the MBE discipline, promoting a global consistent view of it, clarifying its scope with regard to other SE disciplines, and defining a foundation for the development of educational curricula on MBE, this paper proposes the contents for a Body of Knowledge for MBE. We also describe the methodology that we have used to come up with the proposed list of contents, as well as the results of a survey study that we conducted to sound out the opinion of the community on the importance of the proposed topics and their level of coverage in the existing SE curricula.
C1 [Burgueno, Loli] UOC, Barcelona, Spain.
   [Burgueno, Loli] CEA LIST, Paris, France.
   [Ciccozzi, Federico] Malardalen Univ, Vasteras, Sweden.
   [Famelis, Michalis] Univ Montreal, Dept Comp Sci & Operat Res, Montreal, PQ, Canada.
   [Famelis, Michalis] Univ Montreal, GEODES Software Engn Res Team, Montreal, PQ, Canada.
   [Kappel, Gerti] TU Wien, CDP, Vienna, Austria.
   [Lambers, Leen] Hasso Plattner Inst, Potsdam, Germany.
   [Mosser, Sebastien] Univ Quebec Montreal, Software Engn, Montreal, PQ, Canada.
   [Paige, Richard F.] McMaster Univ, Software Engn, Hamilton, ON, Canada.
   [Pierantonio, Alfonso] Univ Aquila, Comp Sci, Laquila, Italy.
   [Rensink, Arend] Univ Twente, Chair Software Modelling Transformat & Verificat, Enschede, Netherlands.
   [Sala, Rick] Univ Toronto, Toronto, ON, Canada.
   [Taentzer, Gabriele] Philipps Univ Marburg, Software Engn, Marburg, Germany.
   [Vallecillo, Antonio] Univ Malaga, Software Engn, Malaga, Spain.
   [Vallecillo, Antonio] Univ Malaga, Atenea Res Grp, Malaga, Spain.
   [Wimmer, Manuel] JKU Linz, Linz, Austria.
C3 CEA; Malardalen University; Universite de Montreal; Universite de
   Montreal; Technische Universitat Wien; University of Potsdam; University
   of Quebec; University of Quebec Montreal; McMaster University;
   University of L'Aquila; University of Twente; University of Toronto;
   Philipps University Marburg; Universidad de Malaga; Universidad de
   Malaga; Johannes Kepler University Linz
RP Ciccozzi, F (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM lburguenoc@uoc.edu; federico.ciccozzi@mdh.se; famelis@iro.umontreal.ca;
   gerti@big.tuwien.ac.at; Leen.Lambers@hpi.de; mosser.sebastien@uqam.ca;
   paigeri@mcmaster.ca; alfonso.pierantonio@univaq.it;
   arend.rensink@utwente.nl; rsalay@cs.toronto.edu;
   taentzer@informatik.uni-marburg.de; av@lcc.uma.es; manuel.wimmer@jku.at
RI Vallecillo, Antonio/B-1884-2014; Burgueno, Lola/L-3817-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Mosser,
   Sebastien/0000-0001-9769-216X; Burgueno, Lola/0000-0002-7779-8810
FU Malardalen University
FX Open access funding provided by Malardalen University.
CR Adcock Rick, 2017, GUIDE SYSTEMS ENG BO
   Agner LTW, 2019, SOFTW SYST MODEL
   [Anonymous], 2017, Project management body of knowledge (pmbok guide)
   [Anonymous], 2015, EA COMMUNITY ENTERPR
   BEZIVIN J, 2008, EUROPEAN J INFORM PR, V9, P4
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Ciccozzi F, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P82, DOI 10.1145/3270112.3270121
   Ciccozzi F, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P122, DOI 10.1145/3270112.3270129
   Combemale Benoit, 2017, DAGSTUHL REPORTS, V8, P45, DOI [10.4230/DagRep.7.8.45, DOI 10.4230/DAGREP.7.8.45]
   DAMA International, 2017, DAT MAN BOD KNOWL DM
   Friedenthal S., 2007, INCOSE 2007 S, V11
   IIBA, 2015, BUS AN BOD KNOWL BAB
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Oliver GR, 2012, Foundations of the assumed business operations and strategy body of knowledge (bosbok): An outline of sharecommercial able knowledge
   Sands Nicholas P., 2018, AUTOMATION BODY KNOW, V3rd
   Watson Andrew, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P7
   Zaytsev V., 2018, SOFTWARE LANGUAGE EN
NR 19
TC 15
Z9 15
U1 1
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3193
EP 3205
DI 10.1007/s10270-019-00746-9
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600002
OA Green Accepted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Santoso, A
   Felderer, M
AF Santoso, Ario
   Felderer, Michael
TI Specification-driven predictive business process monitoring
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Predictive business process monitoring; Prediction task specification
   language; Automatic prediction model creation; Machine learning-based
   prediction
AB Predictive analysis in business process monitoring aims at forecasting the future information of a running business process. The prediction is typically made based on the model extracted from historical process execution logs (event logs). In practice, different business domains might require different kinds of predictions. Hence, it is important to have a means for properly specifying the desired prediction tasks, and a mechanism to deal with these various prediction tasks. Although there have been many studies in this area, they mostly focus on a specific prediction task. This work introduces a language for specifying the desired prediction tasks, and this language allows us to express various kinds of prediction tasks. This work also presents a mechanism for automatically creating the corresponding prediction model based on the given specification. Differently from previous studies, instead of focusing on a particular prediction task, we present an approach to deal with various prediction tasks based on the given specification of the desired prediction tasks. We also provide an implementation of the approach which is used to conduct experiments using real-life event logs.
C1 [Santoso, Ario; Felderer, Michael] Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
   [Santoso, Ario] Free Univ Bozen Bolzano, Fac Comp Sci, Bozen Bolzano, Italy.
   [Felderer, Michael] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 University of Innsbruck; Free University of Bozen-Bolzano; Blekinge
   Institute Technology
RP Santoso, A (corresponding author), Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.; Santoso, A (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, Bozen Bolzano, Italy.
EM ario.santoso@uibk.ac.at; michael.felderer@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020; Santoso, Ario/AAO-9480-2021
OI Santoso, Ario/0000-0001-6212-4365
FU University of Innsbruck; Medical University of Innsbruck
FX Open access funding provided by University of Innsbruck and Medical
   University of Innsbruck. The authors thank Tri Kurniawan Wijaya for
   various suggestions related to this work, and Yasmin Khairina for the
   implementation of several prototype components.
CR [Anonymous], 2016, 18492016 IEEE, P1
   [Anonymous], INT C BUS PROC MAN
   [Anonymous], 2008, P 28 IARCS C FDN SOF, DOI [DOI 10.4230/LIPICS.FSTTCS.2008.1740, 10.4230/LIPIcs.FSTTCS.2008.1740]
   [Anonymous], 1968, First-Order Logic
   Bagheri Hariri B., 2013, Proceedings of the 32Nd Symposium on Principles of Database Systems. PODS '13, P163, DOI DOI 10.1145/2463664.2465221
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Basin D, 2013, LECT NOTES COMPUT SC, V8174, P40, DOI 10.1007/978-3-642-40787-1_3
   BIANCULLI D, 2012, LNCS, V7684, P55
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breuker D, 2016, MIS QUART, V40, P1009, DOI 10.25300/MISQ/2016/40.4.10
   Calvanese D, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2847
   Calvanese D, 2014, LECT NOTES ARTIF INT, V8761, P514, DOI 10.1007/978-3-319-11558-0_36
   CONFORTI R, 2013, SUPPORTING RISK INFO, P116
   Conforti R, 2015, DECIS SUPPORT SYST, V69, P1, DOI 10.1016/j.dss.2014.10.006
   De Masellis R., 2014, Proceedings of the 2014 International Conference on Software and System Process, P134
   Di Francescomarino C, 2018, LECT NOTES COMPUT SC, V11080, P462, DOI 10.1007/978-3-319-98648-7_27
   Di Francescomarino C, 2016, LECT NOTES COMPUT SC, V9694, P361, DOI 10.1007/978-3-319-39696-5_22
   DIFRANCESCOMARI.C, 2016, IEEE T SERV COMPUT, P1
   DIFRANCESCOMARI.C, 2017, LNCS
   Du XN, 2015, LECT NOTES COMPUT SC, V9109, P231, DOI 10.1007/978-3-319-19249-9_15
   Dumas M, 2018, Fundamentals of business process management, V2
   Evermann J, 2017, LECT NOTES BUS INF P, V281, P327, DOI 10.1007/978-3-319-58457-7_24
   Evermann J, 2017, DECIS SUPPORT SYST, V100, P129, DOI 10.1016/j.dss.2017.04.003
   Folino F., 2012, MOVE MEANINGFUL INTE, V7565, DOI 10.1007/978-3-642-33606-5_18
   Frank U., 2013, Domain Engineering, P133
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Han J, 2012, MOR KAUF D, P1
   Hariri BB, 2013, LECT NOTES COMPUT SC, V8274, P600, DOI 10.1007/978-3-642-45005-1_51
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Leontjeva A, 2015, LECT NOTES COMPUT SC, V9253, P297, DOI 10.1007/978-3-319-23063-4_21
   Maggi Fabrizio Maria, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P81, DOI 10.1007/978-3-642-40176-3_8
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8484, P457, DOI 10.1007/978-3-319-07881-6_31
   Marquez- Chamorro A. E., 2017, IEEE T SERV COMPUT, VPP, P1
   Márquez-Chamorro AE, 2017, EXPERT SYST APPL, V87, P1, DOI 10.1016/j.eswa.2017.05.069
   Mehdiyev N, 2017, CONF BUS INFORM, V1, P119, DOI 10.1109/CBI.2017.46
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Metzger A., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P313, DOI 10.1109/SRII.2012.42
   Metzger A, 2017, LECT NOTES COMPUT SC, V10253, P445, DOI 10.1007/978-3-319-59536-8_28
   Metzger A, 2015, IEEE T SYST MAN CY-S, V45, P276, DOI 10.1109/TSMC.2014.2347265
   Mohri M., 2012, Foundations of Machine Learning
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   *OBJ MAN GROUP, DEC MOD NOT DMN 1 0
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pika A, 2016, INFORM SCIENCES, V352, P98, DOI 10.1016/j.ins.2016.03.003
   PIKA A, 2012, BPM WORKSH 2012 LNBI
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   Polato M, 2018, COMPUTING, V100, P1005, DOI 10.1007/s00607-018-0593-x
   Polato M, 2014, IEEE IJCNN, P816, DOI 10.1109/IJCNN.2014.6889360
   Rogge-Solti A, 2015, INFORM SYST, V54, P1, DOI 10.1016/j.is.2015.04.004
   Rogge-Solti A, 2013, LECT NOTES COMPUT SC, V8274, P389, DOI 10.1007/978-3-642-45005-1_27
   SANTOSO A, 2016, THESIS
   Santoso A, 2018, LECT NOTES BUS INF P, V318, P97, DOI 10.1007/978-3-319-91704-7_7
   Senderovich A, 2017, LECT NOTES COMPUT SC, V10445, P306, DOI 10.1007/978-3-319-65000-5_18
   Senderovich A, 2015, INFORM SYST, V53, P278, DOI 10.1016/j.is.2015.03.010
   Senderovich A, 2014, LECT NOTES COMPUT SC, V8484, P42, DOI 10.1007/978-3-319-07881-6_4
   Tax N, 2017, LECT NOTES COMPUT SC, V10253, P477, DOI 10.1007/978-3-319-59536-8_30
   Theano Development Team, 2016, ARXIV160502688
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst WMP, 2011, INFORM SYST, V36, P450, DOI 10.1016/j.is.2010.09.001
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2010, LECT NOTES COMPUT SC, V6051, P38, DOI 10.1007/978-3-642-13094-6_5
   van der Aalst WMP, 2001, DECIS SUPPORT SYST, V30, P451, DOI 10.1016/S0167-9236(00)00136-6
   Verenich I, 2016, LECT NOTES COMPUT SC, V9694, P186, DOI 10.1007/978-3-319-39696-5_12
NR 70
TC 2
Z9 2
U1 2
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1307
EP 1343
DI 10.1007/s10270-019-00761-w
EA NOV 2019
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000493704500001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Guessi, M
   Oquendo, F
   Nakagawa, EY
AF Guessi, Milena
   Oquendo, Flavio
   Nakagawa, Elisa Yumi
TI Ark: a constraint-based method for architectural synthesis of smart
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Smart system; Software architecture; Formal method; Architectural
   synthesis; Constraints; Alloy
ID SOFTWARE; MODEL; CLASSIFICATION
AB As smart systems leverage capabilities of heterogeneous systems for accomplishing complex combined behaviors, they pose new challenges to traditional software engineering practices that considered software architectures to be mostly static and stable. The software architecture of a smart system is inherently dynamic due to uncertainty surrounding its operational environment. While the abstract architecture offers a way to implicitly describe different forms taken by the software architecture at run time, it is still not sufficient to guarantee that all concrete architectures will automatically adhere to it. To address this issue, this work presents a formal method named Ark supporting the architectural synthesis of smart systems. This is achieved by expressing abstract architectures as a set of constraints that must be valid for any concrete architecture of the smart system. This way, we can benefit from existing model-checking techniques to guarantee that all concrete architectures realized from such an abstract model will comply with well-formed rules. We also describe how this method can be incorporated to a model-driven approach for bridging the gap between abstract and concrete architectural models. We demonstrate our method in an illustrative case study, showing how Ark can be used to support the synthesis of concrete architectures as well check the correctness and completeness of abstract architecture descriptions. Finally, we elaborate on future directions to consolidating a process for the synthesis of run-rime architectures that are correct-by-construction.
C1 [Guessi, Milena; Nakagawa, Elisa Yumi] Univ Sao Paulo, ICMC, Sao Paulo, Brazil.
   [Guessi, Milena] Univ Toronto, IHPME, Toronto, ON, Canada.
   [Oquendo, Flavio] Univ Bretagne Sud, IRISA UMR CNRS, Vannes, France.
C3 Universidade de Sao Paulo; University of Toronto
RP Guessi, M (corresponding author), Univ Sao Paulo, ICMC, Sao Paulo, Brazil.; Guessi, M (corresponding author), Univ Toronto, IHPME, Toronto, ON, Canada.
EM milena@icmc.usp.br; flavio.oquendo@irisa.fr; elisa@icmc.usp.br
RI Guessi, Milena/Q-1253-2018
OI Guessi Margarido, Milena/0000-0002-1728-8384
FU Sao Paulo Research Foundation (FAPESP) [2012/24290-5, 2017/22107-2,
   2017/06195-9]
FX This work was supported by the Sao Paulo Research Foundation (FAPESP),
   grants 2012/24290-5, 2017/22107-2, and 2017/06195-9.
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2011, Journal of the Brazilian Computer Society, DOI [10.1007/s13173-011-0029-3, DOI 10.1007/S13173-011-0029-3]
   [Anonymous], 2011, Documenting Software Architectures: Views and Beyond
   [Anonymous], 2013, SESOS
   Avgeriou P, 2013, IEEE SOFTWARE, V30, P40, DOI 10.1109/MS.2013.120
   Baldwin WC, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING SOSE 2009, P87
   Bass Len, 2012, SEI S SOFTW
   Boardman J, 2006, PROCEEDINGS OF THE 2006 IEEE/SMC INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, P118
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boehm B., 2004, CROSSTALK        MAY, P4
   Boehm B, 2011, FUTURE OF SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-15187-3_1
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Broy M, 2011, FUTURE OF SOFTWARE ENGINEERING, P33, DOI 10.1007/978-3-642-15187-3_2
   CHATTOPADHYAY D, 2008, C SYST ENG RES CSER, P1
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   COOK SA, 1971, ANN ACM S THEOR COMP
   Dagli C., 2009, SYSTEM SYSTEMS ENG P, P77
   Dahmann J, 2011, ANN IEEE SYST CONF, P212
   Dahmann J, 2011, IEEE AERO EL SYS MAG, V26, P22, DOI 10.1109/MAES.2011.5719652
   GAGLIARDI M, 2010, SYSTEM SYSTEMS SOS A
   GUESSI M, 2016, 2016 11 SYST SYST EN, P1, DOI DOI 10.1109/SYS0SE.2016.7542939
   Guessi M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1433, DOI 10.1145/2695664.2695795
   Guessi M, 2015, THIRD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS SESOS 2015, P12, DOI 10.1109/SESoS.2015.10
   HARMON RR, 2015, IT PROF, V17, P14
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heyman T., 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P161, DOI 10.1109/COMPSAC.2010.23
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hughes D., 2009, Proceedings of the 7th International Conference on Advances in Mobile Computing and Multimedia, P195
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2006, SCI AM, V294, P68, DOI 10.1038/scientificamerican0606-68
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jamshidi M., 2008, SYSTEM SYSTEMS ENG I
   JANSEN AG, 2005, P WICSA NOV, V5, P109, DOI DOI 10.1109/WICSA.2005.61
   Jaspan C, 2009, IEEE SOFTWARE, V26, P60, DOI 10.1109/MS.2009.188
   KENLEY C, 2014, INCOSE INT S, V24, P94, DOI DOI 10.1002/J.2334-5837.2014.TB03137.X
   Keznikl J, 2014, SOFTW SYST MODEL, V13, P843, DOI 10.1007/s10270-012-0274-8
   Khlif N, 2014, 2014 1ST INTERNATIONAL CONFERENCE ON ADVANCED TECHNOLOGIES FOR SIGNAL AND IMAGE PROCESSING (ATSIP 2014), P1, DOI 10.1109/ATSIP.2014.6834579
   Kogekar S, 2004, IPSN '04: THIRD INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P379
   KOONTZ RJ, 2012, CROSSTALK, P14
   Kramer J, 2009, J COMPUT SCI TECH-CH, V24, P183, DOI 10.1007/s11390-009-9216-5
   Kruchten P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P39, DOI 10.1007/978-3-642-02374-3_3
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mandrioli D, 2015, FME WORKS FORM, P1, DOI 10.1109/FormaliSE.2015.8
   MARGARIDO MG, 2017, THESIS
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mour A., 2013, INCOSE International Symposium, V23, P973, DOI DOI 10.1002/J.2334-5837.2013.TB03067.X
   Nafz F, 2009, LECT NOTES COMPUT SC, V5586, P17, DOI 10.1007/978-3-642-02704-8_3
   Nakagawa E.Y., 2013, P 1 INT WORKSH SOFTW, P13, DOI DOI 10.1145/2489850.2489853
   Neto Valdemar Vicente Graciano, 2017, Journal of the Brazilian Computer Society, V23, DOI 10.1186/s13173-017-0062-y
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Office of the Deputy Under Secretary of Defense for Acquisition and Technology Systems and Software Engineering, 2008, SYST SOFTW ENG SYST
   *OMG, 2011, UN MOD LANG V2 4 1
   *OMG, 2012, SYST MOD LANG V1 3
   *OMG, 2008, SOFTW SYST PROC ENG
   Oquendo F., 2016, P 11 SYSTEM SYSTEMS, P1, DOI [10.1109/SYSOSE.2016.7542926, DOI 10.1109/SYSOSE.2016.7542926]
   Oquendo F, 2016, SOFTWARE-INTENSIVE SYSTEMS-OF-SYSTEMS SYMPOSIUM (SISOS@ECSA), DOI 10.1145/3175731.3176180
   Oquendo F, 2016, LECT NOTES COMPUT SC, V9839, P3, DOI 10.1007/978-3-319-48992-6_1
   RHODES D, 2004, MIT MIT SYST DES MAN
   ROURE DD, 2005, INGENIA, V23, P50
   Sassone Alessandro., 2016, Smart Systems Integration and Simulation, P5
   Sawyer P, 2012, COMPUTER, V45, P56, DOI 10.1109/MC.2012.286
   SILVA E, 2015, C LOCAL COMPUT NETW, P346
   Tekinerdogan B, 2016, SOFTWARE-INTENSIVE SYSTEMS-OF-SYSTEMS SYMPOSIUM (SISOS@ECSA), DOI 10.1145/3175731.3175732
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Ulieru Mihaela, 2011, International Journal of Automomous and Adaptive Communications Systems, V4, P39, DOI 10.1504/IJAACS.2011.037748
   Valerdi R.Ross., 2007, CrossTalk, P28
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
   Zhang YH, 2013, 2013 8TH INTERNATIONAL ICST CONFERENCE ON COMMUNICATIONS AND NETWORKING IN CHINA (CHINACOM), P34, DOI 10.1109/ChinaCom.2013.6694561
NR 70
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 741
EP 762
DI 10.1007/s10270-019-00764-7
EA NOV 2019
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000493631300002
DA 2024-07-18
ER

PT J
AU Voelter, M
   Kolb, B
   Birken, K
   Tomassetti, F
   Alff, P
   Wiart, L
   Wortmann, A
   Nordmann, A
AF Voelter, Markus
   Kolb, Bernd
   Birken, Klaus
   Tomassetti, Federico
   Alff, Patrick
   Wiart, Laurent
   Wortmann, Andreas
   Nordmann, Arne
TI Using language workbenches and domain-specific languages for
   safety-critical software development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; Safety-critical software development; Case
   study; Language workbenches
ID EMBEDDED SOFTWARE; MBEDDR
AB Language workbenches support the efficient creation, integration, and use of domain-specific languages. Typically, they execute models by code generation to programming language code. This can lead to increased productivity and higher quality. However, in safety-/mission-critical environments, generated code may not be considered trustworthy, because of the lack of trust in the generation mechanisms. This makes it harder to justify the use of language workbenches in such an environment. In this paper, we demonstrate an approach to use such tools in critical environments. We argue that models created with domain-specific languages are easier to validate and that the additional risk resulting from the transformation to code can be mitigated by a suitably designed transformation and verification architecture. We validate the approach with an industrial case study from the healthcare domain. We also discuss the degree to which the approach is appropriate for critical software in space, automotive, and robotics systems.
C1 [Voelter, Markus; Kolb, Bernd; Birken, Klaus] Itemis AG, Stuttgart, Germany.
   [Tomassetti, Federico] TripAdvisor & Groupon, Lyon, France.
   [Alff, Patrick; Wiart, Laurent] Voluntis, Paris, France.
   [Wortmann, Andreas] OHB Syst AG, Bremen, Germany.
   [Nordmann, Arne] Bosch Corp Res, Stuttgart, Germany.
C3 OHB SE
RP Voelter, M (corresponding author), Itemis AG, Stuttgart, Germany.
EM voelter@acm.org; kolb@itemis.de; birken@itemis.de;
   federico@tomassetti.me; Patrick.Alff@voluntis.com;
   Laurent.Wiart@voluntis.com; andreas.wortmann@ohb.de;
   arne.nordmann@de.bosch.com
CR Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Beine M., 2004, DEV SAFETY CRITICAL
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Boehm BW., 1981, Software Engineering Economics
   Broy Manfred., 2013, Software Design and Development: Concepts, Methodologies, Tools, and Applications: Concepts, Methodologies, Tools, and Applications, P310
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Buckl C., 2007, ARES 2007 C
   Chiang MJ, 2009, IEEE MTT S INT MICR, P125, DOI 10.1109/MWSYM.2009.5165648
   Chlipala A, 2010, ACM SIGPLAN NOTICES, V45, P93, DOI 10.1145/1707801.1706312
   Claessen K, 2011, ACM SIGPLAN NOTICES, V46, P53, DOI 10.1145/1988042.1988046
   Conmy P., 2007, 4 INT WORKSH MOD BAS
   Conrad M., 2012, ERTS2 C
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cuoq P., 2012, INT C SOFTW ENG FORM
   Dahlweid M., 2009, ICSE COMPANION
   Dormoy Francois-Xavier, 2008, EMB REAL TIM SOFTW S
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Eysholdt M., 2014, EXECUTABLE SPECIFICA
   Florence SP, 2015, GPCE'15: PROCEEDINGS OF THE 2015 ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P131, DOI [10.1145/2814204.2814221, 10.1145/2936314.2814221]
   Gorke S., 2013, 2013 IEEE AIAA DIG A
   Halang WA, 2003, ANN REV CONTROL
   Hanmer R. S., 2013, Patterns for Fault Tolerant Software
   Hart B., 2004, SOFTW DEF RAD C, P3
   HAXTHAUSEN AE, 2002, P 6 BIENN WORLD C IN
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hickey PC, 2014, ACM SIGPLAN NOTICES, V49, P3, DOI 10.1145/2692915.2628146
   Karna J., 2009, P 9 OOPSLA WORKSH DO
   Kats LCL, 2011, ACM SIGPLAN NOTICES, V46, P139, DOI 10.1145/2076021.2048080
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Koopman P., EMBEDDED SOFTWARE CO
   Koopman P., 2010, 2010 WORKSH EMB SYST
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Kumar R, 2014, ACM SIGPLAN NOTICES, V49, P179, DOI 10.1145/2535838.2535841
   Lammel R., 2001, P 4 INT C FUND APPR
   Ledinot E., 2012, P ERTS 2012
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Lewis J, 2007, FMSE'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON FORMAL METHODS IN SECURITY ENGINEERING, P41
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Liggesmeyer P, 2009, IEEE SOFTWARE, V26, P19, DOI 10.1109/MS.2009.80
   Lucio L., 2010, MODELS 2010
   Mery D., 2014, DAGSTUHL REPORTS, V4
   Michailidis A., DATE 2010
   Molotnikov Zaur., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P539
   Motor Industry, 2013, SOFTW REL ASS MOT IN
   Munier P., 2012, POLYSPACE, P123
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   MYERS GJ, 1976, SOFTWARE RELIABILITY
   Nguyen-Tuong A., 2005, IFIP INT INF SEC C
   Pajic M, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2584651
   Peng XF, 2013, 2012 INTERNATIONAL CONFERENCE ON EDUCATION REFORM AND MANAGEMENT INNOVATION (ERMI 2012), VOL 1, P49
   Ratiu D., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P9, DOI 10.1109/FormSERA.2012.6229790
   Ratiu D., 2014, INT C COMP SAF REL S, P72
   Ratiu D., 2016, 11 IEEE ACM INT WORK
   Reveillere L., ASE 2000
   Santhanam, 2002, Proceedings of the 2002 annual ACM SIGAda international conference on Ada: The engineering of correct and reliable software for real-time distributed systems using Ada and related technologies, P40
   Seiler M, 2010, PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON INNOVATIVE MATERIALS FOR PROCESSES IN ENERGY SYSTEMS 2010 (IMPRES2010): FOR FUEL CELLS, HEAT PUMPS AND SORPTION SYSTEMS, P350, DOI 10.3850/978-981-08-7614-2_IMPRES083
   Svendsen A, 2008, LECT NOTES COMPUT SC, V5301, P128, DOI 10.1007/978-3-540-87875-9_9
   Tolvanen JP, 2015, PROCEDIA COMPUT SCI, V63, P539, DOI 10.1016/j.procs.2015.08.382
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vergu V., 2015, TECHNICAL REPORT
   Visser E., 2014, P 2014 ACM INT S NEW
   VOELTER M., 2014, GENERIC TOOLS SPECIF
   Voelter M., GEMOC WORKSH
   Voelter M., 2017, OVERVIEW PROGRAM ANA
   VOELTER M., 2013, ACESMB MODELS
   Voelter M., 2015, P WORKSH DOM SPEC MO, P55
   Voelter M., 2015, OOPSLA 2015
   Voelter M, 2019, SOFTW SYST MODEL, V18, P585, DOI 10.1007/s10270-016-0575-4
   Voelter M, 2015, ACM SIGPLAN NOTICES, V50, P655, DOI [10.1145/2814270.2814276, 10.1145/2858965.2814276]
   Voelter M, 2013, AUTOMAT SOFTW ENG, V20, P339, DOI 10.1007/s10515-013-0120-4
   Voelter Markus., 2011, GENERATIVE TRANSFORM, P383, DOI [10.1007/978-3-642-35992-7_11, DOI 10.1007/978-3-642-35992-7_11]
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
   WEISER MD, 1985, IEEE SOFTWARE, V2, P80, DOI 10.1109/MS.1985.230356
   Whalen M. W., 1999, 14th IEEE International Conference on Automated Software Engineering, P315, DOI 10.1109/ASE.1999.802346
   Wing JM, 2006, COMMUN ACM, V49, P33, DOI 10.1145/1118178.1118215
   Wortmann A., 2016, DASIA 2016, V736
NR 79
TC 15
Z9 17
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2507
EP 2530
DI 10.1007/s10270-018-0679-0
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900006
DA 2024-07-18
ER

PT J
AU Hacherouf, M
   Nait-Bahloul, S
   Cruz, C
AF Hacherouf, Mokhtaria
   Nait-Bahloul, Safia
   Cruz, Christophe
TI Transforming XML schemas into OWL ontologies using formal concept
   analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE XML schema; OWL ontology; Formal transformation; XSD formalization; FCA;
   Transformation patterns
AB Ontology Web Language (OWL) is considered as a data representation format exploited by the Extensible Markup Language (XML) format. OWL extends XML by providing properties to further express the semantics of data. To this effect, transforming XML data into OWL proves important and constitutes an added value for indexing XML documents and re-engineering ontologies. In this paper, we propose a formal method to transform XSD schemas into OWL schemas using transformation patterns. To achieve this end, we extend at the beginning, a set of existing transformation patterns to allow the maximum transformation of XSD schema constructions. In addition, a formal method is presented to transform an XSD schema using the extended patterns. This method named PIXCO comprises several processes. The first process models both the transformation patterns and all the constructions of XSD schema to be transformed. The patterns are modeled using the context of Formal Concept Analysis. The XSD constructions are modeled using a proposed mathematical model. This modeling will be used in the design of the following process. The second process identifies the most appropriate patterns to transform each construction set of XSD schema. The third process generates for each XSD construction set an OWL model according to the pattern that is identified. Finally, it creates the OWL file encompassing the generated OWL models.
C1 [Hacherouf, Mokhtaria] USTO MB, Lab LSSD, Fac Math & Informat, BP 1505, El Mnaouer 31000, Oran, Algeria.
   [Nait-Bahloul, Safia] Univ Oran 1, Lab LITIO, BP 1524, El Mnaouer 31000, Oran, Algeria.
   [Cruz, Christophe] Univ Bourgogne Franche Comte, CNRS, FRE 2005, Arts & Metiers,Le2i, Batiment I3M Rue Sully, Dijon, France.
C3 Universite des Sciences et de la Technologie d'Oran Mohamed Boudiaf;
   Centre National de la Recherche Scientifique (CNRS); CNRS - Institute
   for Information Sciences & Technologies (INS2I); Universite de Bourgogne
RP Hacherouf, M (corresponding author), USTO MB, Lab LSSD, Fac Math & Informat, BP 1505, El Mnaouer 31000, Oran, Algeria.
EM mokhtaria.hacherouf@univ-usto.dz; Nait-bahloul.safia@univ-oran.dz;
   christophe.cruz@ubfc.fr
RI CRUZ, Christophe/I-2419-2012; NAIT-BAHLOUL, Safia/ISV-5185-2023
OI CRUZ, Christophe/0000-0002-5611-9479; NAIT-BAHLOUL,
   Safia/0009-0009-5695-4923
CR Agreste S, 2014, KNOWL-BASED SYST, V66, P190, DOI 10.1016/j.knosys.2014.04.044
   [Anonymous], 2012, FORMAL CONCEPT ANAL
   [Anonymous], 2006, International Conference WWW/Internet
   [Anonymous], CLA
   [Anonymous], 1998, WORLD WIDE WEB CONSO
   Baclawski K., 2002, Software and System Modeling, V1, P142
   Bedini I, 2011, IEEE INT C SEMANT CO, P102, DOI 10.1109/ICSC.2011.77
   Belghiat A, 2012, 2012 6TH INTERNATIONAL CONFERENCE ON SCIENCES OF ELECTRONICS, TECHNOLOGIES OF INFORMATION AND TELECOMMUNICATIONS (SETIT), P840, DOI 10.1109/SETIT.2012.6482025
   Bian J, 2011, LECT NOTES COMPUT SC, V6988, P87, DOI 10.1007/978-3-642-23982-3_12
   Bohring H., 2005, Leipziger Informatik-Tage, volume 72 of Lecture Notes in Informatics LNI, V72, P147
   Brockmans S, 2006, LECT NOTES COMPUT SC, V4273, P187
   Cruz C., 2008, P 4 INT VLDB WORKSH, P17
   de Laborda C.P., 2005, CRPIT '43: proceedings of the 2nd Asia-Pacific conference on conceptual modelling, P89
   De Meo P, 2006, INFORM SYST, V31, P397, DOI 10.1016/j.is.2004.11.010
   Doan A, 2004, SIGMOD REC, V33, P11
   Duchateau Fabien, 2016, Transactions on Large-Scale Data- and Knowledge-Centered Systems XXV. LNCS 9620, P150, DOI 10.1007/978-3-662-49534-6_5
   El Hajjamy Oussama, 2016, Journal of Theoretical and Applied Information Technology, V90, P126
   Ferdinand M, 2004, LECT NOTES COMPUT SC, V3140, P354
   Fu GH, 2016, INFORM PROCESS MANAG, V52, P765, DOI 10.1016/j.ipm.2016.02.003
   Ghawi R., 2007, VDBL07 conference, VLDB Endowment ACM, P1
   Ghawi R, 2009, PROCEEDINGS OF THE 20TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, P480, DOI 10.1109/DEXA.2009.68
   Gu JG, 2006, LECT NOTES ARTIF INT, V4251, P738
   Hacherouf M, 2015, J INF SCI, V41, P242, DOI 10.1177/0165551514565972
   Hitzler Pascal, 2012, OWL 2 Web Ontology Language Primer, VSecond
   Hunt Ela., 2007, P 33 INT C VER LARG, P1318
   Kalfoglou Y, 2003, KNOWL ENG REV, V18, P1, DOI 10.1017/S0269888903000651
   Lacoste D., 2011, Proceedings of the 4th India Software Engineering Conference, P145
   Liu Q, 2007, J COMPUT SCI TECH-CH, V22, P218, DOI 10.1007/s11390-007-9028-4
   Madhavan J., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P49
   OConnor M.J., 2011, P 6 INT C KNOWL CAPT, P17, DOI [10.1145/1999676, DOI 10.1145/1999676.1999681]
   Pinto HS, 2004, KNOWL INF SYST, V6, P441, DOI 10.1007/s10115-003-0138-1
   Rahm E, 2004, SIGMOD REC, V33, P26, DOI 10.1145/1041410.1041415
   Shvaiko P, 2013, IEEE T KNOWL DATA EN, V25, P158, DOI 10.1109/TKDE.2011.253
   Sure Y., 2006, Semantic Web Technologies: Trends and Research in Ontology-based Systems, P171
   Thuy P.T.T., 2009, ACM International Conference Proceeding Series, V403, P125, DOI [10.1145/1655925.1655949, DOI 10.1145/1655925.1655949]
   Touzi A. G., 2013, ARXIV13111764
   Tsinaraki C, 2007, LECT NOTES COMPUT SC, V4803, P850
   Wache H., 2001, P IJCAI 01 WORKSH ON, P108
   Welty C., 2004, OWL web ontology language guide
   Yahia N., 2012, ARXIV12060570
   Zhang L., 2011, J Comput Inf Syst, V7, P1148
NR 41
TC 3
Z9 3
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2093
EP 2110
DI 10.1007/s10270-017-0651-4
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100025
DA 2024-07-18
ER

PT J
AU Durisic, D
   Staron, M
   Tichy, M
   Hansson, J
AF Durisic, Darko
   Staron, Miroslaw
   Tichy, Matthias
   Hansson, Jorgen
TI Assessing the impact of meta-model evolution: a measure and its
   automotive application
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific meta-models; Modeling tools; Architectural features;
   Software evolution; Measurement; Automotive software; AUTOSAR
AB Domain-specific meta-models play an important role in the design of large software systems by defining language for the architectural models. Such common modeling languages are particularly important if multiple actors are involved in the development process as they assure interoperability between modeling tools used by different actors. The main objective of this paper is to facilitate the adoption of new domain-specific meta-model versions, or a subset of the new architectural features they support, by the architectural modeling tools used by different actors in the development of large software systems. In order to achieve this objective, we developed a simple measure of meta-model evolution (named NoC-Number of Changes) that captures atomic modification between different versions of the analyzed meta-model. We evaluated the NoC measure on the evolution of the AUTOSAR meta-model, a domain-specific meta-model used in the design of automotive system architectures. The evaluation shows that the measure can be used as an indicator of effort needed to update meta-model-based tools to support different actors in modeling new architectural features. Our detailed results show the impact of 14 new AUTOSAR features on the modeling tools used by the main actors in the automotive development process. We validated our results by finding a significant correlation between the results of the NoC measure and the actual effort needed to support these features in the modeling tools reported by the modeling practitioners from four AUTOSAR tool vendors and the AUTOSAR tooling team at Volvo Cars. Generally, our study shows that quantitative analysis of domain-specific meta-model evolution using a simple measure such as NoC can be used as an indicator of the required updates in the meta-model-based tools that are needed to support new meta-model versions. However, our study also shows that qualitative analysis that may include an inspection of the actual meta-model changes is needed for more accurate assessment.
C1 [Durisic, Darko] Volvo Car Grp, Gothenburg, Sweden.
   [Staron, Miroslaw] Chalmers Univ Technol, Gothenburg, Sweden.
   [Staron, Miroslaw] Univ Gothenburg, Software Engn, Gothenburg, Sweden.
   [Tichy, Matthias] Ulm Univ, Software Engn Complex Tech Syst, Ulm, Germany.
   [Hansson, Jorgen] Univ Skovde, Skovde, Sweden.
C3 Volvo; Chalmers University of Technology; University of Gothenburg; Ulm
   University; University of Skovde
RP Durisic, D (corresponding author), Volvo Car Grp, Gothenburg, Sweden.
EM darko.durisic@volvocars.com; miroslaw.staron@cse.gu.se;
   matthias.tichy@uni-ulm.de; jorgen.hansson@his.se
RI Durisic, Darko/F-7755-2014
FU Swedish Governmental Agency for Innovation Systems (VINNOVA)
   [2013-02630]; Vinnova [2013-02630] Funding Source: Vinnova
FX The authors would like to thank Swedish Governmental Agency for
   Innovation Systems (VINNOVA) for funding this research (Grant No.
   2013-02630) and all our industrial partners for contributing to the
   presented work. The authors would also like to thank Maxime Jimenez who
   helped us in the assessment of the presented data model for measuring
   the evolution of UML and Modelica metamodels.
CR Aβmann U., 2006, Ontologies for Software Engineering and Software Technology, P249, DOI DOI 10.1007/3-540-34518-3_9
   [Anonymous], 2003, AUT OP SYST ARCH
   [Anonymous], 2004, MOF 2 0 COR SPEC
   [Anonymous], 2001, Eliciting and Analyzing Expert Judgment: A Practical Guide
   [Anonymous], 2016, OP MOD US GUID REL
   [Anonymous], 2013, SOFTWARE PRODUCT LIN
   [Anonymous], 2007, 15939 ISOIEC
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2002, Proceedings of the 5th International Conference on The Unified Modeling Language, P100
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Brörkens M, 2007, LECT NOTES COMPUT SC, V4530, P59
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Durisic D., 2016, INT C MOD DRIV ENG S
   Durisic D, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P103, DOI 10.1145/2737182.2737184
   Durisic D, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P30, DOI 10.1109/MiSE.2015.13
   Durisic D, 2014, EUROMICRO CONF PROC, P141, DOI 10.1109/SEAA.2014.21
   Eriksson O, 2013, INFORM SOFTWARE TECH, V55, P2099, DOI 10.1016/j.infsof.2013.07.008
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Gouriet P, 2010, COMPLEX SYSTEMS DESIGN AND MANAGEMENT, P305, DOI 10.1007/978-3-642-15654-0_22
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hyoseob K., 2002, P WORKSH QUANT APPR
   *ISO IEC, 1990, 10027 ISOIEC
   Jimenez M., 2017, INT C MOD DRIV ENG S
   Kehrer T., 2013, MODELS WORKSHOP MODE, P30
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kessentini W., 2015, P ACM STUD RES COMP, P13
   Kuryazov D, 2014, IEEE INT ENTERP, P211, DOI 10.1109/EDOCW.2014.39
   Liu Y, 2013, APPL MECH MATER, V321-324, P1574, DOI 10.4028/www.scientific.net/AMM.321-324.1574
   Ma ZY, 2013, FRONT COMPUT SCI-CHI, V7, P558, DOI 10.1007/s11704-013-1151-5
   Madhavi K., 2009, 2009 IEEE International Advance Computing Conference. IACC 2009, P1628, DOI 10.1109/IADCC.2009.4809261
   Mantz F., 2013, P INT WORKSH PRINC S, P1
   McQuillan JA, 2007, LECT NOTES COMPUT SC, V4364, P217
   Nordstrom G, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P68, DOI 10.1109/ECBS.1999.755863
   Pagel M, 2006, LECT NOTES COMPUT SC, V4066, P52
   Rocco J. D., 2014, SEM ADV TECHN TOOLS, P90
   Saeki M., 2007, 6 OOPSLA WORKSH DOM
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Vermolen Sander D, 2011, INT C SOFTW LANG ENG, P201
   Williams J., 2013, INT WORKSH EXP EMP S
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 43
TC 2
Z9 3
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1419
EP 1445
DI 10.1007/s10270-017-0601-1
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400029
DA 2024-07-18
ER

PT J
AU Strüber, D
   Acretoaie, V
   Plöger, J
AF Strueber, Daniel
   Acretoaie, Vlad
   Ploeger, Jennifer
TI Model clone detection for rule-based model transformation languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 12th European Conference on Modelling Foundations and Applications
   (ECMFA) / 9th International Conference on Theory and Practice of Model
   Transformations (ICMT) Held as Part of Software Technologies -
   Applications and Foundations (STAF) Conference
CY JUL 04-07, 2016
CL TU Wien, Vienna, AUSTRIA
HO TU Wien
DE Quality assurance; Model clone detection; Model transformation; ATL;
   Henshin
AB Cloning is a convenient mechanism to enable reuse across and within software artifacts. On the downside, it is also a practice related to severe long-term maintainability impediments, thus generating a need to identify clones in affected artifacts. A large variety of clone detection techniques have been proposed for programming and modeling languages; yet no specific ones have emerged for model transformation languages. In this paper, we explore clone detection for rule-based model transformation languages, including graph-based ones, such as Henshin, and hybrid ones, such as ATL. We introduce use cases for such techniques in the context of constructive and analytical quality assurance, and a set of key requirements we derived from these use cases. To address these requirements, we describe our customization of existing model clone detection techniques: We consider eScan, an a-priori-based technique, ConQAT, a heuristic technique, and a hybrid technique based on a combination of eScan and ConQAT. We compare these techniques in a comprehensive experimental evaluation, based on three realistic Henshin rule sets, and a comprehensive body of examples from the ATL transformation zoo. Our results indicate that our customization of ConQAT enables the efficient detection of the considered clones, without sacrificing accuracy. With our contributions, we present the first evidence on the usefulness of model clone detection for the quality assurance of model transformations and pave the way for future research efforts at the intersection of model clone detection and model transformation.
C1 [Strueber, Daniel] Univ Koblenz & Landau, Koblenz, Germany.
   [Strueber, Daniel; Ploeger, Jennifer] Philipp Univ Marburg, Marburg, Germany.
   [Acretoaie, Vlad] Tech Univ Denmark, Lyngby, Denmark.
   [Acretoaie, Vlad] Configit, Copenhagen, Denmark.
C3 University of Koblenz & Landau; Philipps University Marburg; Technical
   University of Denmark
RP Strüber, D (corresponding author), Univ Koblenz & Landau, Koblenz, Germany.; Strüber, D (corresponding author), Philipp Univ Marburg, Marburg, Germany.
EM strueber@uni-koblenz.de
OI Struber, Daniel/0000-0002-5969-3521
FU research project Visual Privacy Management in User Centric Open
   Environments (EUs Horizon 2020 programme) [653642]; H2020 Societal
   Challenges Programme [653642] Funding Source: H2020 Societal Challenges
   Programme
FX We thank the reviewers for their valuable and constructive suggestions.
   This research was partially supported by the research project Visual
   Privacy Management in User Centric Open Environments (supported by the
   EUs Horizon 2020 programme, Proposal Number: 653642).
CR Alalfi MH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P295, DOI 10.1109/ICSM.2012.6405285
   Alkhazi B, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P295, DOI 10.1145/2976767.2976782
   Anjorin A, 2014, LECT NOTES COMPUT SC, V8411, P340
   [Anonymous], 2006, ECEASST
   [Anonymous], 2012, J OBJECT TECHNOL
   Arendt T., INT C MOD DRIV ENG L, P121
   Arendt T, 2014, LECT NOTES COMPUT SC, V8571, P97
   Babur Ö, 2016, LECT NOTES COMPUT SC, V9764, P3, DOI 10.1007/978-3-319-42061-5_1
   Bauer J, 2008, LECT NOTES COMPUT SC, V5214, P321, DOI 10.1007/978-3-540-87405-8_22
   Beller M, 2015, INT C PROGRAM COMPRE, P240, DOI 10.1109/ICPC.2015.34
   Blouin D, 2014, LECT NOTES COMPUT SC, V8568, P106
   Brambilla M., SYNTH LECT SOFTW ENG, V1, P1
   Burdek J, 2015, J AUTOM SOFTW ENG, V23, P1
   Cordy J. R., INT SOFTW PROD LIN C, P7
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Deissenboeck F., 2010, P 4 INT WORKSH SOFTW, P57, DOI [10.1145/1808901.1808909, DOI 10.1145/1808901.1808909]
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Ehrig H, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000357
   Ekanayake CC, 2012, LECT NOTES COMPUT SC, V7481, P302, DOI 10.1007/978-3-642-32885-5_24
   Fischer T., INT WORKSH THEOR APP, P296
   FOWLER M, 2002, REFACTORING IMPROVIN
   Gerpheide C. M., 2014, SOFTW QUAL J, V24, P1
   Glass Robert L, 2001, IEEE software, V18, P112, DOI [DOI 10.1109/MS.2001.965816, 10.1109/MS.2001.922739, DOI 10.1109/MS.2001.922739]
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kapová L, 2010, LECT NOTES COMPUT SC, V6093, P151, DOI 10.1007/978-3-642-13821-8_12
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R., 2007, DAGST SEM 06301 DUPL
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Levendovszky T, 2005, ELECTRON NOTES THEOR, V127, P65, DOI 10.1016/j.entcs.2004.12.040
   Liang Z., J SOFTW, V9, P1810
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Narasimhan K, 2015, IEEE INT CONF AUTOM, P630, DOI 10.1109/ASE.2015.39
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Rapos EJ, 2015, IEEE INT WORK C SO, P241, DOI 10.1109/SCAM.2015.7335420
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Stephan M., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P84, DOI 10.1109/IWSC.2012.6227876
   Stephan M., INT C SOFTW QUAL REL, P92
   Stephan M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P276, DOI 10.1109/MODELS.2015.7338258
   Stephan M, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P48, DOI 10.1109/MiSE.2015.16
   Stephan M, 2014, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2014.113
   Storrle Harald, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P440
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Störrle H, 2013, SOFTW SYST MODEL, V12, P307, DOI 10.1007/s10270-011-0217-9
   Struber D., WORKSH SCAL MOD DRIV, P21
   Struber D., 2016, THESIS
   Struber D., 2017, FORMAL ASPECTS COMPU
   Struber D., 2016, INT C GRAPH TRANSF
   Strüber D, 2017, LECT NOTES COMPUT SC, V10374, P121, DOI 10.1007/978-3-319-61473-1_9
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Strüber D, 2016, LECT NOTES COMPUT SC, V9765, P191, DOI 10.1007/978-3-319-42064-6_13
   Strüber D, 2016, LECT NOTES COMPUT SC, V9633, P122, DOI 10.1007/978-3-662-49665-7_8
   Strüber D, 2015, LECT NOTES COMPUT SC, V9033, P283, DOI 10.1007/978-3-662-46675-9_19
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tairas R., 2011, LECT NOTES COMPUTER, P60
   Tichy M., 2013, AMT WORKSH, V1077
   van Amstel Marcel F., 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P108, DOI 10.1007/978-3-642-21732-6_8
   Wohlin C., 2012, Experimentation in Software Engineering
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
NR 66
TC 4
Z9 4
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 995
EP 1016
DI 10.1007/s10270-017-0625-6
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drago, A
   Marrone, S
   Mazzocca, N
   Nardone, R
   Tedesco, A
   Vittorini, V
AF Drago, Annarita
   Marrone, Stefano
   Mazzocca, Nicola
   Nardone, Roberto
   Tedesco, Annarita
   Vittorini, Valeria
TI A model-driven approach for vulnerability evaluation of modern physical
   protection systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Physical security; Vulnerability; CIP_VAM UML profile; Bayesian Network;
   Model transformation; Railway infrastructure system
ID BAYESIAN NETWORKS; SECURITY; CYBER
AB Modern physical protection systems integrate a number of security systems (including procedures, equipments, and personnel) into a single interface to ensure an adequate level of protection of people and critical assets against malevolent human actions. Due to the critical functions of a protection system, the quantitative evaluation of its effectiveness is an important issue that still raises several challenges. In this paper we propose a model-driven approach to support the design and the evaluation of physical protection systems based on (a) UML models representing threats, protection facilities, assets, and relationships among them, and (b) the automatic construction of a Bayesian Network model to estimate the vulnerability of different system configurations. Hence, the proposed approach is useful both in the context of vulnerability assessment and in designing new security systems as it enables what-if and cost-benefit analyses. A real-world case study is further illustrated in order to validate and demonstrate the potentiality of the approach. Specifically, two attack scenarios are considered against the depot of a mass transit transportation system in Milan, Italy.IS
C1 [Drago, Annarita; Mazzocca, Nicola; Nardone, Roberto; Vittorini, Valeria] Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
   [Marrone, Stefano] Seconda Univ Napoli, DMF, Viale Lincoln 5, I-81100 Caserta, Italy.
   [Tedesco, Annarita] Ansaldo STS, Innovat & Competitiveness Unit, Via Argine 425, I-80100 Naples, Italy.
C3 University of Naples Federico II; Universita della Campania Vanvitelli
RP Nardone, R (corresponding author), Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
EM annarita.tedesco@ansaldo-sts.com; stefano.marrone@unina2.it;
   nicola.mazzocca@unina.it; roberto.nardone@unina.it;
   annarita.drago@unina.it; valeria.vittorini@unina.it
RI nardone, roberto/AAM-4095-2021; Marrone, Stefano/AAC-4997-2021
OI nardone, roberto/0000-0003-4938-9216; Marrone,
   Stefano/0000-0003-1927-6173; Mazzocca, Nicola/0000-0002-0401-9687;
   Marrone, Stefano/0000-0001-6852-0377
CR Amalfitano D., 2014, P 2014 INT WORKSH LO, P9
   [Anonymous], 2008, P 4 ACM WORKSHOP QUA, DOI DOI 10.1145/1456362.1456368
   [Anonymous], 2019, OMG UML PROF MARTE
   Bagheri E, 2010, INFORM SYST FRONT, V12, P115, DOI 10.1007/s10796-008-9127-y
   Benerecetti M, 2017, SCI COMPUT PROGRAM, V133, P116, DOI 10.1016/j.scico.2016.09.002
   Berkenkötter K, 2006, LECT NOTES COMPUT SC, V4166, P398
   Bernardi S, 2013, RELIAB ENG SYST SAFE, V120, P112, DOI 10.1016/j.ress.2013.06.032
   Bernardi Simona, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P15, DOI 10.1007/978-3-642-24270-0_2
   Bistarelli S, 2012, J EXP THEOR ARTIF IN, V24, P161, DOI 10.1080/13623079.2011.587206
   Brown G.G., 2005, Emerging theory, methods, and applications, P102
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Department of Homeland Security: NIPP, 2013, TECH REP
   Drago A, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P380, DOI 10.1109/UIC-ATC.2013.78
   Ezell BC, 2007, RISK ANAL, V27, P571, DOI 10.1111/j.1539-6924.2007.00907.x
   Flammini F, 2012, WIT T STATE ART SCI, V54, P1
   Flammini F., 2010, International Journal of Systems of Systems Engineering, V2, P19, DOI 10.1504/IJSSE.2010.035379
   Flammini F, 2014, INT J RELIAB QUAL SA, V21, DOI 10.1142/S0218539314500016
   Flammini F, 2014, LECT NOTES COMPUT SC, V8666, P230, DOI 10.1007/978-3-319-10506-2_16
   Flammini F, 2013, LECT NOTES COMPUT SC, V6983, P128
   Flammini F, 2009, LECT NOTES COMPUT SC, V5508, P336, DOI 10.1007/978-3-642-03552-4_32
   Flammini F, 2009, LECT NOTES COMPUT SC, V5508, P180, DOI 10.1007/978-3-642-03552-4_16
   Frigault Marcel, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P698, DOI 10.1109/COMPSAC.2008.88
   Garcia M.L., 2005, VULNERABILITY ASSESS
   Garcia ML, 2008, DESIGN AND EVALUATION OF PHYSICAL PROTECTION SYSTEMS, 2ND EDITION, P1
   Gentile Ugo, 2014, Formal Methods for Industrial Critical Systems. 19th International Conference, FMICS 2014. Proceedings: LNCS 8718, P170, DOI 10.1007/978-3-319-10702-8_12
   Georg G, 2010, IEEE T SOFTWARE ENG, V36, P338, DOI 10.1109/TSE.2010.36
   Gribaudo M, 2015, ELECTRON NOTES THEOR, V310, P91, DOI 10.1016/j.entcs.2014.12.014
   Heckerman D., 1999, LEARNING GRAPHICAL M, P301
   Hei XH, 2011, 2011 INTERNATIONAL CONFERENCE ON QUALITY, RELIABILITY, RISK, MAINTENANCE, AND SAFETY ENGINEERING (ICQR2MSE), P948
   Holm H, 2013, TECHNICAL REPORT
   Holm H, 2015, IEEE T DEPEND SECURE, V12, P626, DOI 10.1109/TDSC.2014.2382574
   Houmb SH, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P190
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kordy B, 2014, J LOGIC COMPUT, V24, P55, DOI 10.1093/logcom/exs029
   Lewis T, 2011, MECHANISM HEART BEAT, P3
   Liu C, 2011, CHIN CONTR CONF, P5562
   MacDonald D, 2013, 2013 IEEE PES INNOVATIVE SMART GRID TECHNOLOGIES (ISGT)
   Marrone Stefano, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P231, DOI 10.1007/978-3-642-34032-1_23
   Marrone S, 2015, COMPUT ELECTR ENG, V47, P275, DOI 10.1016/j.compeleceng.2015.07.011
   Marrone S, 2014, INT J SOFTW TOOLS TE, V16, P669, DOI 10.1007/s10009-014-0320-7
   Marrone S, 2013, INT J CRIT INFR PROT, V6, P217, DOI 10.1016/j.ijcip.2013.10.001
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Murray AT, 2013, GEOJOURNAL, V78, P209, DOI 10.1007/s10708-011-9412-z
   Nardone R, 2016, COMM COM INF SC, V596, P121, DOI 10.1007/978-3-319-29510-7_7
   Nardone R, 2015, COMM COM INF SC, V476, P93, DOI 10.1007/978-3-319-17581-2_7
   Parker DB, 2007, COMMUN ACM, V50, P120, DOI 10.1145/1226736.1226774
   Pearl J., 1988, PROBABILISTIC REASON
   Risk Steering Committee, 2010, DHS RISK LEX
   Roadnight J., 2011, TECH REP
   Rodríguez RJ, 2016, STUD COMPUT INTELL, V616, P439, DOI 10.1007/978-3-319-25017-5_41
   Rodríguez RJ, 2015, COMPUT J, V58, P2313, DOI 10.1093/comjnl/bxu096
   Roy A, 2012, SECUR COMMUN NETW, V5, P929, DOI 10.1002/sec.299
   Sagan SD, 2004, RISK ANAL, V24, P935, DOI 10.1111/j.0272-4332.2004.00495.x
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Setola R., 2015, RAILWAY INFRASTRUCTU, V27, DOI [10.1007/978-3-319-04426-2, DOI 10.1007/978-3-319-04426-2]
   Sforza A, 2015, TOP SAF RISK RELIAB, V27, P171, DOI 10.1007/978-3-319-04426-2_9
   Sforza A, 2013, LECT NOTES COMPUT SC, V8328, P191, DOI 10.1007/978-3-319-03964-0_17
   Sommestad T, 2013, IEEE SYST J, V7, P363, DOI 10.1109/JSYST.2012.2221853
   US Department of Homeland Security, 2011, FUND HOM SEC RISK MA
   Vittorini V, 2015, TOP SAF RISK RELIAB, V27, P143, DOI 10.1007/978-3-319-04426-2_8
   Wilson J.M., 2007, SECURING AM PASSENGE
   Xie P, 2010, I C DEPEND SYS NETWO, P211, DOI 10.1109/DSN.2010.5544924
   Zonouz SA, 2014, IEEE T PARALL DISTR, V25, P395, DOI 10.1109/TPDS.2013.211
NR 65
TC 10
Z9 10
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 523
EP 556
DI 10.1007/s10270-016-0572-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300022
DA 2024-07-18
ER

PT J
AU Das, TK
   Dingel, J
AF Das, Tuhin Kanti
   Dingel, Juergen
TI Model development guidelines for UML-RT: conventions, patterns and
   antipatterns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE UML-RT; Patterns; AntiPatterns; Model development guidelines
ID CODE
AB Software development guidelines are a set of rules which can help improve the quality of software. These rules are defined on the basis of experience gained by the software development community over time. This paper discusses a set of design guidelines for model-based development of complex real-time embedded software systems. To be precise, we propose nine design conventions, three design patterns and thirteen antipatterns for developing UML-RT models. These guidelines have been identified based on our analysis of around 100 UML-RT models from industry and academia. Most of the guidelines are explained with the help of examples, and standard templates from the current state of the art are used for documenting the design rules.
C1 [Das, Tuhin Kanti] Queens Univ, Sch Comp, MASE Grp, Kingston, ON, Canada.
   [Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Das, TK (corresponding author), Queens Univ, Sch Comp, MASE Grp, Kingston, ON, Canada.
EM das@cs.queensu.com; dingel@cs.queensu.com
FU NSERC, as part of the NECSIS Automotive Partnership with General Motors;
   IBM Canada; Malina Software Corp.
FX We would like to thank Dr. Ron Smith from Royal Military College of
   Canada for giving us access to a student repository of UML-RT models. We
   would like to express our gratitude to Bran Selic from Malina Software
   Corp. for his valuable feedback on our work. We would also like to thank
   our industrial research partner Ericsson Inc. for their great support.
   In addition, this work is supported in part by NSERC, as part of the
   NECSIS Automotive Partnership with General Motors, IBM Canada and Malina
   Software Corp.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Akroyd M., 1996, ANTIPATTERNS SESSION
   Ambler S.W., UML 2 state machine diagrams: An agile introduction
   [Anonymous], 1998, PADL 99, P228
   [Anonymous], 1999, DOING HARD TIME DEV
   [Anonymous], SOFTW DEV GUID
   [Anonymous], PAP REAL TIM PAP RT
   Arcelli D, 2012, P 8 INT ACM SIGSOFT, P33, DOI 10.1145/2304696.2304704
   Balaban M, 2015, SOFTW SYST MODEL, V14, P1527, DOI 10.1007/s10270-013-0390-0
   Bellekens G., UML best practice: 5 rules for better UML diagrams
   BFar R, 2005, MOBILE COMPUTING PRINCIPLES: DESIGNING AND DEVELOPING MOBILE APPLICATIONS WITH UML AND XML, P1
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   Cortellessa V., 2010, P ICSE, P9
   Cunningham and Cunningham Inc, GLOB VAR AR BAD
   Das TK, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P54, DOI 10.1109/MODELS.2015.7338235
   Emilio M.D. P., 2014, Embedded systems design for high-speed data acquisition and control
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gopinath S., 2006, THESIS
   GrammaTech, 2010, FDA REC STAT AN MED
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   IBM, MOD REAL TIM APPL RS
   IBM, RAT ROS REAL TIM RT
   IBM, RAT ROS REALTIME
   International Organization for Standardization, 250002005 ISOIEC
   Jetley Raoul Praful, 2008, Proceedings of the 2008 Workshop on Static Analysis, SAW '08, p22S29, DOI 10.1145/1394504.1394507
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kopetz H., 1997, REAL TIME SYSTEMS DE
   Leveson N.G., 1999, MEDICAL DEVICES THER
   MathWorks Automotive Advisory Board (MAAB), 2007, CONTR ALG MOD GUID U
   Neal Adam, RSARTE CHEATSH
   Object Management Group (OMG), DEL RES SEC EFF EAS
   Ogheneovo E.E., 2014, Journal of Computer and Communications, V2, P25, DOI [DOI 10.4236/JCC.2014, 10.4236/jcc.2014]
   Oracle, 1999, COD CONV JAV PROGR L
   Oracle, IND
   Oracle, COMM
   Oracle, NAM CONV
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Pressman R.S., 1986, SOFTWARE ENG PRACTIT
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Safyan Michael., Avoid global variables, environment variables, and singletons
   Samek MiroM., 2008, PRACTICAL UML STATEC
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   SELIC B, 1992, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, P230, DOI 10.1109/CASE.1992.200156
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic B., 1996, PATTERN LANGUAGES PR, P4
   Smith C. U., 2011, CMG C, P717
   Sparx Systems Pty Ltd, UML 2 STAT MACH DIAG
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Sunye G., 2000, DESIGN PATTERNS APPL
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Trubiani C., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance engineering, P19
   Tsantalis N., P 2008 12 EUR C SOFT, P329
   WEBster, SOFTW DEV GUID
   Wong S., 2004, P 2001 ASCI C
   Wulf William, 1973, ACM Sigplan notices, V8, P28, DOI [10.1145/953353.953355, DOI 10.1145/953353.953355]
NR 59
TC 2
Z9 3
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 717
EP 752
DI 10.1007/s10270-016-0549-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000003
DA 2024-07-18
ER

PT J
AU Serral, E
   Valderas, P
   Pelechano, V
AF Serral, Estefania
   Valderas, Pedro
   Pelechano, Vicente
TI Addressing the evolution of automated user behaviour patterns by runtime
   model interpretation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE System behaviour evolution; Routine task automation; Models at runtime;
   Runtime interpretation of models
ID ADAPTATION; CONTEXT
AB The use of high-level abstraction models can facilitate and improve not only system development but also runtime system evolution. This is the idea of this work, in which behavioural models created at design time are also used at runtime to evolve system behaviour. These behavioural models describe the routine tasks that users want to be automated by the system. However, users' needs may change after system deployment, and the routine tasks automated by the systemmust evolve to adapt to these changes. To facilitate this evolution, the automation of the specified routine tasks is achieved by directly interpreting the models at runtime. This turns models into the primary means to understand and interact with the system behaviour associated with the routine tasks as well as to execute and modify it. Thus, we provide tools to allow the adaptation of this behaviour by modifying the models at runtime. This means that the system behaviour evolution is performed by using high-level abstractions and avoiding the costs and risks associated with shutting down and restarting the system.
C1 [Serral, Estefania] Vienna Univ Technol, Christian Doppler Lab Software Engn Integrat Flex, A-1040 Vienna, Austria.
   [Valderas, Pedro; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software ProS, Valencia 46022, Spain.
C3 Technische Universitat Wien; Universitat Politecnica de Valencia
RP Serral, E (corresponding author), Vienna Univ Technol, Christian Doppler Lab Software Engn Integrat Flex, Favoritenstrasse 9-11-188, A-1040 Vienna, Austria.
EM estefania.serral@tuwien.ac.at; pvalderas@dsic.upv.es; pele@dsic.upv.es
RI Serral, Estefanía/I-8123-2018; Valderas, Pedro/X-3605-2018; Pelechano,
   Vicente/S-4344-2016
OI Serral, Estefanía/0000-0001-7579-910X; Valderas,
   Pedro/0000-0002-4156-0675; Pelechano, Vicente/0000-0003-1090-230X
FU MICINN [EVERYWARE TIN2010-18011]; Christian Doppler
   Forschungsgesellschaft; BMWFJ, Austria
FX This work has been developed with the support of MICINN, under the
   project EVERYWARE TIN2010-18011, and the support of the Christian
   Doppler Forschungsgesellschaft and the BMWFJ, Austria.
CR Ajila SA, 2009, 2009 IEEE THIRD INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING (ICSC 2009), P390, DOI 10.1109/ICSC.2009.19
   Amoui M, 2012, J SYST SOFTWARE, V85, P2720, DOI 10.1016/j.jss.2012.05.033
   [Anonymous], 2006, END USER DEV
   [Anonymous], 2002, ESSENTIAL GUIDE USER
   [Anonymous], 2006, Business Process Execution Language for Web Services BPEL and BPEL4WS
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Ballagny C, 2009, INT CONF SELF SELF, P206, DOI 10.1109/SASO.2009.11
   Bennett K., 2000, P C FUTURE SOFTWARE, P75
   BERNSTEIN PA, 1983, ACM T DATABASE SYST, V8, P465, DOI 10.1145/319996.319998
   Biegel G, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P361, DOI 10.1109/PERCOM.2004.1276875
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bloch J, 2005, DESIGN GOOD API WHY, P506
   Blumendorf M, 2008, LECT NOTES COMPUT SC, V5136, P238, DOI 10.1007/978-3-540-70569-7_22
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Cetina C, 2009, ICAS: 2009 FIFTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS, P179, DOI 10.1109/ICAS.2009.50
   Chen H, 2003, KNOWL ENG REV, V18, P197, DOI 10.1017/S0269888904000025
   Cook D.J., 2005, SMART ENV TECHNOLOGI, V43
   Cook DJ, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P521, DOI 10.1109/PERCOM.2003.1192783
   Cooper S., 2000, NE C J COMPUTING SMA, P107
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   García-Herranz M, 2008, J UNIVERS COMPUT SCI, V14, P1529
   Garlan D, 2004, LECT NOTES COMPUT SC, V3047, P200
   Guy M, 2009, 2 UKOLN
   Hagras H, 2004, IEEE INTELL SYST, V19, P12, DOI 10.1109/MIS.2004.61
   Hardian B., 2006, COMOREA IEEE PERCOM
   Henricksen K, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P77, DOI 10.1109/PERCOM.2004.1276847
   Henricksen K, 2006, SOFTWARE PRACT EXPER, V36, P1307, DOI 10.1002/spe.760
   Hirschfeld R, 2004, LECT NOTES COMPUT SC, V2928, P227
   Hofer T., 2002, Proceedings of the 36th Annual Hawaii International Conference on System Sciences, P292
   Johnson P., 1999, Human-Computer Interaction: Ergonomics and User Interfaces. Proceedings of HCI International '99 (8th International Conference on Human-Computer Interaction), P1199
   Jones J.V., 1997, APPL SOFTWARE MEASUR
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Lewis J.R, 1991, SIGCHI B
   Lientz B P., 1980, Software Maintenance Management
   Loke SW., 2008, INT J SMART HOME, V2, P15
   Masuoka R, 2003, LECT NOTES COMPUT SC, V2870, P866
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mens T., 2009, P JOINT INT ANN ERCI
   Morin B., 2009, MODELS RUNTIME SUPPO, P46
   Munoz J., 2008, MODEL DRIVEN DEV PER
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Paterno Fabio., 2002, The Handbook of Analysis for Human-Computer Interaction, P483, DOI DOI 10.1111/J.1467-923X.1954.TB00152.X
   Perez Francisca, 2009, Fourth International Workshop on Requirements Engineering Visualization (REV 2009), P31, DOI 10.1109/REV.2009.1
   Pribeanu Costin., 2001, DSV-IS, P49, DOI DOI 10.1007/3-540-45522-1_4.LNCS2220
   Rashidi P, 2009, IEEE T SYST MAN CY A, V39, P949, DOI 10.1109/TSMCA.2009.2025137
   Runcai Huang, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P463, DOI 10.1109/CSSE.2008.663
   Serral E., 2011, AUTOMATING ROUTINE T
   Serral E., 2011, INFORM SYSTEMS DEV, P671
   Serral E, 2013, COMPUT J, V56, P87, DOI 10.1093/comjnl/bxs019
   Serral E, 2010, PERVASIVE MOB COMPUT, V6, P254, DOI 10.1016/j.pmcj.2009.07.006
   Sheng QZ, 2005, ICMB 2005: International Conference on Mobile Business, P206, DOI 10.1109/ICMB.2005.33
   Shepherd A, 1998, ERGONOMICS, V41, P1537, DOI 10.1080/001401398186063
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Souchon N, 2002, LECT NOTES COMPUT SC, V2545, P59
   Sousa JP, 2006, IEEE T SYST MAN CY C, V36, P328, DOI 10.1109/TSMCC.2006.871588
   STRANG T., 2004, WORKSHOP ADV CONTEXT
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
   Van Welie M., 2000, INTERACTION PATTERNS, P13
   Webb GI, 2001, USER MODEL USER-ADAP, V11, P19, DOI 10.1023/A:1011117102175
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Welty C., 2004, OWL web ontology language guide
   Wohlin C., 2012, Experimentation in Software Engineering
   Ye J, 2007, KNOWL ENG REV, V22, P315, DOI 10.1017/S0269888907001208
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
NR 67
TC 9
Z9 9
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1387
EP 1420
DI 10.1007/s10270-013-0371-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900006
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Pinggera, J
   Soffer, P
   Fahland, D
   Weidlich, M
   Zugal, S
   Weber, B
   Reijers, HA
   Mendling, J
AF Pinggera, Jakob
   Soffer, Pnina
   Fahland, Dirk
   Weidlich, Matthias
   Zugal, Stefan
   Weber, Barbara
   Reijers, Hajo A.
   Mendling, Jan
TI Styles in business process modeling: an exploration and a model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Process of process modeling; Modeling styles;
   Cluster analysis
ID CONTROL-FLOW COMPLEXITY; COGNITIVE LOAD; QUALITY; KNOWLEDGE; DESIGN
AB Business process models are an important means to design, analyze, implement, and control business processes. As with every type of conceptual model, a business process model has to meet certain syntactic, semantic, and pragmatic quality requirements to be of value. For many years, such quality aspects were investigated by centering on the properties of the model artifact itself. Only recently, the process of model creation is considered as a factor that influences the resulting model's quality. Our work contributes to this stream of research and presents an explorative analysis of the process of process modeling (PPM). We report on two large-scale modeling sessions involving 115 students. In these sessions, the act of model creation, i.e., the PPM, was automatically recorded. We conducted a cluster analysis on this data and identified three distinct styles of modeling. Further, we investigated how both task- and modeler-specific factors influence particular aspects of those modeling styles. Based thereupon, we propose a model that captures our insights. It lays the foundations for future research that may unveil how high-quality process models can be established through better modeling support and modeling instruction.
C1 [Pinggera, Jakob; Zugal, Stefan; Weber, Barbara] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Soffer, Pnina] Univ Haifa, IL-31999 Haifa, Israel.
   [Fahland, Dirk; Reijers, Hajo A.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Weidlich, Matthias] Technion Israel Inst Technol, Haifa, Israel.
   [Mendling, Jan] Vienna Univ Econ & Business, Vienna, Austria.
   [Reijers, Hajo A.] Percept Software, Apeldoorn, Netherlands.
C3 University of Innsbruck; University of Haifa; Eindhoven University of
   Technology; Technion Israel Institute of Technology; Vienna University
   of Economics & Business
RP Pinggera, J (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM jakob.pinggera@uibk.ac.at; spnina@is.haifa.ac.il; d.fahland@tue.nl;
   weidlich@tx.technion.ac.il; stefan.zugal@uibk.ac.at;
   barbara.weber@uibk.ac.at; h.a.reijers@tue.nl; jan.mendling@wu.ac.at
RI soffer, pnina/P-8893-2019
OI Mendling, Jan/0000-0002-7260-524X; Weber, Barbara/0000-0002-6004-4860;
   Weidlich, Matthias/0000-0003-3325-7227; Fahland,
   Dirk/0000-0002-1993-9363
FU Austrian Science Fund (FWF) [P23699-N23]; BIT School; Austrian Science
   Fund (FWF) [P23699] Funding Source: Austrian Science Fund (FWF)
FX This research is supported by Austrian Science Fund (FWF): P23699-N23.
   The stay of Dr. Pnina Soffer in Innsbruck, Austria was funded by BIT
   School.
CR Aguilar E. R., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1567, DOI 10.1145/1141277.1141641
   [Anonymous], 2010, P C ER POIS 10
   [Anonymous], 1967, Manage. Sci, DOI DOI 10.1287/MNSC.13.12.B707
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   Cardoso J, 2008, INT J WEB SERV RES, V5, P49, DOI 10.4018/jwsr.2008040103
   Claes J, 2012, LECT NOTES COMPUT SC, V7481, P33, DOI 10.1007/978-3-642-32885-5_3
   Crapo A. W., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P218, DOI 10.1145/347090.347129
   Frederiks RJM, 2006, DATA KNOWL ENG, V58, P4, DOI 10.1016/j.datak.2005.05.007
   Gray P., 2007, Psychology, V5th
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   Guindon R., 1988, CHI '88: Proceedings of the SIGCHI conference on Human factors in computing systems, P263, DOI DOI 10.1145/57167.57211
   Hamerly G., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P600, DOI 10.1145/584792.584890
   Hoppenbrouwers SJBA, 2005, LECT NOTES COMPUT SC, V3716, P128
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   MacQueen J, 1965, P 5 BER S MATH STAT, P281
   McCracken WM, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P55, DOI 10.1109/CSEE.2002.995198
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Newell A., 1994, UNIFIED THEORIES COG
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   Paas F, 2003, EDUC PSYCHOL, V38, P1, DOI 10.1207/S15326985EP3801_1
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pinggera J, 2012, LECT NOTES BUS INF P, V113, P151
   Pinggera J, 2013, LECT NOTES BUS INF P, V132, P438
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Pinggera J, 2010, LECT NOTES COMPUT SC, V6412, P445, DOI 10.1007/978-3-642-16373-9_33
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Rittgen P, 2007, LECT NOTES COMPUT SC, V4495, P561
   Rolón E, 2009, LECT NOTES BUS INF P, V29, P58
   SHANTEAU J, 1992, ACTA PSYCHOL, V81, P75, DOI 10.1016/0001-6918(92)90012-3
   Siau K, 2011, INFORM SYST J, V21, P249, DOI 10.1111/j.1365-2575.2007.00255.x
   Soffer P., 2012, LNBIP, V99, P357
   Stirna J, 2007, LECT NOTES COMPUT SC, V4495, P546
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Tegarden DP, 2001, INT J HUM-COMPUT ST, V54, P779, DOI 10.1006/ijhc.1999.0462
   TRACZ WJ, 1979, SOFTWARE PRACT EXPER, V9, P127, DOI 10.1002/spe.4380090207
   van der Aalst WMP, 2000, INFORM SYST, V25, P43, DOI 10.1016/S0306-4379(00)00008-9
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Willemain TR, 1995, OPER RES, V43, P916, DOI 10.1287/opre.43.6.916
   Zugal Stefan, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P123, DOI 10.1007/978-3-642-29645-1_14
   Zugal S., 2011, P EMISA 2011, V2011, P177
   Zugal S., 2012, P 2 EDITION INT WORK, DOI DOI 10.1145/2424563.2424571
   Zugal S, 2012, LECT NOTES BUS INF P, V113, P167
NR 54
TC 33
Z9 35
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1055
EP 1080
DI 10.1007/s10270-013-0349-1
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CQ7DX
UT WOS:000360764200003
OA hybrid, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Morse, J
   Cordeiro, L
   Nicole, D
   Fischer, B
AF Morse, Jeremy
   Cordeiro, Lucas
   Nicole, Denis
   Fischer, Bernd
TI Model checking LTL properties over ANSI-C programs with bounded traces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model checking; Linear temporal logic; Software verification
ID RUNTIME VERIFICATION; TEMPORAL LOGIC; SPECIFICATIONS; TRANSLATION;
   LIVENESS; SOFTWARE; SAFETY
AB Context-bounded model checking has been used successfully to verify safety properties in multi-threaded systems automatically, even if they are implemented in low-level programming languages such as C. In this paper, we describe and experiment with an approach to extend context-bounded software model checking to safety and liveness properties expressed in linear-time temporal logic (LTL). Our approach checks the actual C program, rather than an extracted abstract model. It converts the LTL formulas into Buchi automata for the corresponding never claims and then further into C monitor threads that are interleaved with the execution of the program under analysis. This combined system is then checked using the ESBMC model checker. We use an extended, four-valued LTL semantics to handle the finite traces that bounded model checking explores; we thus check the combined system several times with different acceptance criteria to derive the correct truth value. In order to mitigate the state space explosion, we use a dedicated scheduler that selects the monitor thread only after updates to global variables occurring in the LTL formula. We demonstrate our approach on the analysis of the sequential firmware of a medical device and a small multi-threaded control application.
C1 [Morse, Jeremy; Nicole, Denis; Fischer, Bernd] Univ Southampton, Southampton, Hants, England.
   [Cordeiro, Lucas] Univ Fed Amazonas, Elect & Informat Res Ctr, Manaus, Amazonas, Brazil.
   [Fischer, Bernd] Univ Stellenbosch, Div Comp Sci, ZA-7600 Stellenbosch, South Africa.
C3 University of Southampton; Universidade Federal de Amazonas;
   Stellenbosch University
RP Morse, J (corresponding author), Univ Southampton, Southampton, Hants, England.
EM jcmm106@ecs.soton.ac.uk; lucascordeiro@ufam.edu.br; dan@ecs.soton.ac.uk;
   b.fischer@ecs.soton.ac.uk
RI Cordeiro, Lucas Carvalho/AAQ-9258-2021; Cordeiro, Lucas/IVV-3044-2023
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272; Fischer,
   Bernd/0000-0002-1815-218X
FU Royal Society
FX This work was supported by a Royal Society International Exchange Grant.
   The reviewers' comments helped us to improve our presentation.
CR ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 1986, P 1 S LOG COMP SCI L
   Barnett M, 2008, LECT NOTES COMPUT SC, V4171, P144
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bauer A, 2010, FRONT ARTIF INTEL AP, V215, P881, DOI 10.3233/978-1-60750-606-5-881
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biere A, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:5)2006
   Buchi J.R., 1966, Studies in Logic and the Foundations of Mathematics, V44, P1
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2004, FORM METHOD SYST DES, V25, P105, DOI 10.1023/B:FORM.0000040025.89719.f3
   Clarke EM, 2007, J UNIVERS COMPUT SCI, V13, P639
   Cordeiro L, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P195
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   Cordeiro L, 2009, IEEE INT CONF AUTOM, P137, DOI 10.1109/ASE.2009.63
   Cordeiro L, 2009, IEEE I C EMBED SOFTW, P396, DOI 10.1109/ICESS.2009.82
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Eisner C, 2003, LECT NOTES COMPUT SC, V2725, P27
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   He AP, 2008, INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTATION TECHNOLOGY AND AUTOMATION, VOL 1, PROCEEDINGS, P1215, DOI 10.1109/ICICTA.2008.297
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   ISO, 2009, 99452009 ISOIECIEEE
   ISO, 2011, ISO/ IEC 9899: 2011 Information technologyProgramming languages-C
   Jonsson B, 1996, THEOR COMPUT SCI, V167, P47, DOI 10.1016/0304-3975(96)00069-2
   Kamp J.A.W., 1968, Tense logic and the theory of linear order
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Lahiri SK, 2009, LECT NOTES COMPUT SC, V5643, P509, DOI 10.1007/978-3-642-02658-4_38
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Lamport L., 1979, ACM Transactions on Programming Languages and Systems, V1, P84, DOI 10.1145/357062.357068
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   McMillan K. L., 1993, Symbolic model checking
   Morse J, 2011, LECT NOTES COMPUT SC, V7041, P302, DOI 10.1007/978-3-642-24690-6_21
   Nguyen A.C., 2008, P 15 NAT UND RES OPP
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rabinovitz I, 2005, LECT NOTES COMPUT SC, V3576, P82
   Rozier Kristin Y., 2010, International Journal on Software Tools for Technology Transfer, V12, P123, DOI 10.1007/s10009-010-0140-3
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Staats M, 2008, LECT NOTES COMPUT SC, V5256, P226, DOI 10.1007/978-3-540-88194-0_15
   Vardi M. Y., 1996, Logics for Concurrency. Structure versus Automata, P238
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
NR 46
TC 12
Z9 15
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 65
EP 81
DI 10.1007/s10270-013-0366-0
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100006
DA 2024-07-18
ER

PT J
AU Buchmann, T
   Westfechtel, B
AF Buchmann, Thomas
   Westfechtel, Bernhard
TI Mapping feature models onto domain models: ensuring consistency of
   configured domain models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven software product line engineering; Feature models; Domain
   models; Feature mappings; Dependency constraints
AB We present an approach to model-driven software product line engineering which is based on feature models and domain models. A feature model describes both common and varying properties of the instances of a software product line. The domain model is composed of a structural model (package and class diagrams) and a behavioral model (story diagrams). Features are mapped onto the domain model by annotating elements of the domain model with features. An element of a domain model is specific to the features included in its feature annotation. An instance of the product line is defined by a set of selected features (a feature configuration). A configuration of the domain model is built by excluding all elements whose feature set is not included in the feature configuration. To ensure consistency of the configured domain model, we define constraints on the annotations of inter-dependent domain model elements. These constraints guarantee that a model element may be selected only when the model elements are also included on which it depends. Violations of dependency constraints may be removed automatically with the help of an error repair tool which propagates features to dependent model elements.
C1 [Buchmann, Thomas; Westfechtel, Bernhard] Univ Bayreuth, D-95440 Bayreuth, Germany.
C3 University of Bayreuth
RP Buchmann, T (corresponding author), Univ Bayreuth, POB 101251, D-95440 Bayreuth, Germany.
EM thomas.buchmann@uni-bayreuth.de
OI Buchmann, Thomas/0000-0002-5675-6339
CR [Anonymous], 2008, PROC VISPLE SPLC 08
   [Anonymous], P 13 INT SOFTW PROD
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Buchert T, 2012, COSMIC UPDATE: DARK PUZZLES, ARROW OF TIME, FUTURE HISTORY, P1, DOI 10.1007/978-1-4419-8294-0_1
   Buchmann T., 2009, 1 INT WORKSH MOD DRI, P9
   Buchmann T., 2009, P 7 INT FUJ DAYS EIN, P20
   Buchmann T., 2008, 1 INT WORKSH MOD COE, P50
   Buchmann T, 2009, P 7 INT FUJ DAYS EIN, P59
   Buchmann T., 2012, INFORM SOFTWARE TECH
   Buchmann T., 2012, APPL GRAPH TRANSF IN
   Buchmann T., 2009, P 13 INT SOFTW PROD, V2, P174
   Buchmann T, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P309
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   deMicheaux NL, 1996, THEOR COMPUT SCI, V154, P329, DOI 10.1016/0304-3975(95)00007-0
   Dotor A., 2011, THESIS U BAYREUTH BA, P459
   Estublier J., 1994, CONFIGURATION MANAGE, P99
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Gamma Erich., 1994, DESIGN PATTERNS
   GIESE H, 2005, P 3 INT FUJ DAYS, P00001
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Gomaa Hassan., 2004, Workshop on Software Variability Management for Product Derivation, Software Product Line Conference (SPLC), Boston, MA, August 30 - September 2, 2014, P73
   Gosling J., 2005, Java Language Specification, Vthird
   Heidenreich F., 2009, P 1 INT WORKSHOP FEA, P69
   Heidenreich F., 2007, P 2 WORKSH ASP OR PR, P38
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Jarke M, 2010, LECT NOTES COMPUT SC, V5765, P602, DOI 10.1007/978-3-642-17322-6_26
   Jayaraman P, 2007, LECT NOTES COMPUT SC, V4735, P151
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2010, LECT NOTES INFORM, VP-159, P165
   Mezini M., 2009, 1 INT WORKSH MOD DRI
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   OMG, 2010, PTC101005 OMG
   OMG, 2010, FORMAL20100505 OMG
   OMG, 2010, FORMAL20100202 OMG
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Steinberg D., 2009, ECLIPSE SERIES
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Vesperman Jennifer., 2006, Essential CVS
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   Volter Markus., 2006, Model-Driven Software Development: Technology, Engineering, Management
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Westfechtel Bernhard., 2009, Proceedings of the 1st International Workshop on Model-Driven Product Line Engineering (MDPLE 2009). CTIT Proceedings, P57
   White BA, 2003, OBJECT TECHNOLOGY SE
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
   Ziadi T., 2007, P 3 WORKSH MAN VAR S
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
   Zundorf A., 2001, TECHNICAL REPORT
NR 61
TC 7
Z9 10
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1495
EP 1527
DI 10.1007/s10270-012-0305-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300014
DA 2024-07-18
ER

PT J
AU Hauck, M
   Kuperberg, M
   Huber, N
   Reussner, R
AF Hauck, Michael
   Kuperberg, Michael
   Huber, Nikolaus
   Reussner, Ralf
TI Deriving performance-relevant infrastructure properties through
   model-based experiments with Ginpex
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodelling; Experiments; Measurements; Infrastructure; Deriving
   infrastructure properties; Performance prediction
ID PREDICTION; GENERATION
AB To predict the performance of an application, it is crucial to consider the performance of the underlying infrastructure. Thus, to yield accurate prediction results, performance-relevant properties and behaviour of the infrastructure have to be integrated into performance models. However, capturing these properties is a cumbersome and error-prone task, as it requires carefully engineered measurements and experiments. Existing approaches for creating infrastructure performance models require manual coding of these experiments, or ignore the detailed properties in the models. The contribution of this paper is the Goal-oriented INfrastructure Performance EXperiments (Ginpex) approach, which introduces goal-oriented and model-based specification and generation of executable performance experiments for automatically detecting and quantifying performance-relevant infrastructure properties. Ginpex provides a metamodel for experiment specification and comes with predefined experiment templates that provide automated experiment execution on the target platform and also automate the evaluation of the experiment results. We evaluate Ginpex using three case studies, where experiments are executed to quantify various infrastructure properties.
C1 [Hauck, Michael] FZI Res Ctr Informat Technol, Karlsruhe, Germany.
   [Kuperberg, Michael] DB Systel GmbH, Frankfurt, Germany.
   [Huber, Nikolaus; Reussner, Ralf] Karlsruhe Inst Technol, D-76021 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Hauck, M (corresponding author), FZI Res Ctr Informat Technol, Karlsruhe, Germany.
EM hauck@fzi.de; michael.kuperberg@deutschebahn.com;
   nikolaus.huber@kit.edu; reussner@kit.edu
RI Kuperberg, Michael/AAK-9326-2021
OI Kuperberg, Michael/0000-0002-7445-0106; Reussner,
   Ralf/0000-0002-9308-6290
FU German Federal Ministry of Education and Research (BMBF) [01IC10S01A]
FX The work presented in this paper was partially developed in the context
   of EMERGENT: Grundlagen emergenter Software that is funded by the German
   Federal Ministry of Education and Research (BMBF) under grant
   01IC10S01A.
CR Aas J, 2005, TECHNICAL REPORT
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Becker S, 2008, LECT NOTES COMPUT SC, V5119, P79, DOI 10.1007/978-3-540-69814-2_7
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Cherkasova L., 2005, USENIX 2005 P USENIX
   Happe J, 2010, PERFORM EVALUATION, V67, P694, DOI 10.1016/j.peva.2009.07.006
   Hauck M., 2011, QOSA 2011 P 7 ACM SI, P53
   Hauck M., 2010, MASCOTS 2010 P 18 IE
   Heyer LJ, 1999, GENOME RES, V9, P1106, DOI 10.1101/gr.9.11.1106
   Iosup A, 2011, IEEE T PARALL DISTR, V22, P931, DOI 10.1109/TPDS.2011.66
   Kalibera T., 2006, VALUETOOLS 2006 P 1
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Krogmann K, 2010, IEEE T SOFTWARE ENG, V36, P865, DOI 10.1109/TSE.2010.69
   Lassnig Mario, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P485, DOI 10.1109/CCGRID.2010.118
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   Molnar I., 2007, LINUX COMPLETELY FAI
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Russinovich M.E., 2005, MICROSOFT WINDOWS IN, V4th
   Schroeder B, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI 06), P239
   Shao M., 2005, P 2005 C CTR ADV STU, P254
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   SPEC, 2012, SPECJMS2007 BENCHM
   The Cooperative Association for Internet Data Analysis, 2012, INT TOOLS TAX
   The Eclipse Foundation, 2012, ECL MOD TEXT M2T FRA
   The Eclipse Foundation, 2012, ECL EQ OSGI
   The Eclipse Foundation, 2012, ECL EMF EC MET API
   Tsouloupas G., 2006, E SCI 2006 P 2 IEEE
   Westermann D., 2010, P 36 EUROMICRO C SOF
   Wood T., 2008, MIDDL 2008 P 9 ACM I
   Zhang H, 2009, 6TH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATION, ICAC-INDUST'09, P19
   Zhu L, 2007, PROC INT CONF SOFTW, P797
   Zhu LM, 2007, J SYST SOFTWARE, V80, P265, DOI 10.1016/j.jss.2006.10.052
NR 33
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1345
EP 1365
DI 10.1007/s10270-013-0335-7
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300008
DA 2024-07-18
ER

PT J
AU Holm, H
   Buschle, M
   Lagerström, R
   Ekstedt, M
AF Holm, Hannes
   Buschle, Markus
   Lagerstrom, Robert
   Ekstedt, Mathias
TI Automatic data collection for enterprise architecture models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture; Automatic data collection; Network scanning
AB Enterprise Architecture (EA) is an approach used to provide decision support based on organization-wide models. The creation of such models is, however, cumbersome as multiple aspects of an organization need to be considered, making manual efforts time-consuming, and error prone. Thus, the EA approach would be significantly more promising if the data used when creating the models could be collected automatically-a topic not yet properly addressed by either academia or industry. This paper proposes network scanning for automatic data collection and uses an existing software tool for generating EA models (ArchiMate is employed as an example) based on the IT infrastructure of enterprises. While some manual effort is required to make the models fully useful to many practical scenarios (e.g., to detail the actual services provided by IT components), empirical results show that the methodology is accurate and (in its default state) require little effort to carry out.
C1 [Holm, Hannes; Buschle, Markus; Lagerstrom, Robert; Ekstedt, Mathias] Royal Inst Technol, S-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Holm, H (corresponding author), Royal Inst Technol, S-10044 Stockholm, Sweden.
EM hannesh@ics.kth.se
RI Ekstedt, Mathias/U-7557-2019
OI Lagerstrom, Robert/0000-0003-3089-3885
CR [Anonymous], 2009, AIS T ENTERP SYST
   [Anonymous], P S TECHN METH SEC C
   [Anonymous], HAW INT C SYST SCI P
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 2009, LNI
   Breu R, 2010, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS (CISIS 2010), P1, DOI 10.1109/CISIS.2010.73
   Buckl Sabine, 2009, Service-Oriented Computing. International Workshops, ICSOC/ServiceWave 2009. Revised Selected Papers, P1
   Buschle M., 2011, PREPR CAISE 11 FOR, P25
   Buschle M., 2010, C ADV INF SYST ENG C, P108
   Fischer R, 2007, ENTERP MODELLING INF, V2, P14
   Franke U., 2009, PROC 42 ANN SIMULATI, P209
   Geers K, 2010, J HOMEL SECUR EMERG, V7
   Gustafsson Pia, 2009, PICMET '09 - 2009 Portland International Conference on Management of Engineering & Technology, P3197, DOI 10.1109/PICMET.2009.5262275
   Holm Hannes, 2011, Information Management & Computer Security, V19, P231, DOI 10.1108/09685221111173058
   Holm H, 2012, COMPUT SECUR, V31, P164, DOI 10.1016/j.cose.2011.12.014
   Johnson P., 2007, Enterprise Architecture: Models and Analyses for Information Systems Decision Making
   Kejiang Ye, 2010, Proceedings of the 2010 IEEE 12th International Conference on High Performance Computing and Communications (HPCC 2010), P273, DOI 10.1109/HPCC.2010.79
   Kurpjuweit S., 2007, ENT MOD INF SYST ARC
   Lagerström R, 2010, SOFTWARE QUAL J, V18, P437, DOI 10.1007/s11219-010-9100-0
   Lankhorst M., 2009, ENTERPRISE ARCHITECT, V2nd
   Manzuik S., 2006, Network security assessment
   McDougall Richard, 2010, Operating Systems Review, V44, P40, DOI 10.1145/1899928.1899933
   Närman P, 2007, IEEE INT ENTERP DIST, P130, DOI 10.1109/EDOC.2007.39
   Närman P, 2011, ENTERP INF SYST-UK, V5, P37, DOI 10.1080/17517575.2010.507878
   *OP GROUP, 2009, ARCHIMATE 1 0 SPEC
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Sousa P, 2009, LECT NOTES BUS INF P, V34, P70
   The-Open-Group, 2009, OP GROUP ARCH FRAM T
   Ullberg J, 2008, P IEEE I C SERV COMP, P99, DOI 10.1109/SCC.2008.20
   Wang G, 2010, ADV INTEL SYS RES, V12, P1
   Warner R., 2013, Applied Statistics: From Bivariate through Multivariate Techniques, V2nd
   Winter R., 2006, P IEEE INT ENTERPRIS, DOI [DOI 10.1109/EDOCW.2006.33, 10.1109/EDOCW.2006.33]
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 33
TC 33
Z9 37
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 825
EP 841
DI 10.1007/s10270-012-0252-1
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300018
DA 2024-07-18
ER

PT J
AU Fiadeiro, JL
   Lopes, A
AF Fiadeiro, Jose Luiz
   Lopes, Antonia
TI A model for dynamic reconfiguration in service-oriented architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture; Service-oriented computing; Dynamic formal
   modelling
AB The importance of modelling the dynamic characteristics of the architecture of software systems has long been recognised. However, the nature of the dynamics of service-oriented applications goes beyond what is currently addressed by architecture description languages (ADLs). At the heart of the service-oriented approach is the logical separation between the service need and the need-fulfillment mechanism, i.e., the provision of the service: the binding between the requester and the provider is deferred to run time and established at the instance level, i.e., each time the need for the service arises. As a consequence, computation in the context of service-oriented architectures transforms not only the states of the components that implement applications but also the configurations of those applications. In this paper, we present a model for dynamic reconfiguration that is general enough to support the definition of ADLs that are able to address the full dynamics of service-oriented applications. As an instance of the model, we present a simple service-oriented ADL derived from the modelling language srml that we developed in the Sensoria project.
C1 [Fiadeiro, Jose Luiz] Univ Leicester, Dept Comp Sci, Leicester LE1 7RH, Leics, England.
   [Lopes, Antonia] Univ Lisbon, Fac Sci, P-1749016 Lisbon, Portugal.
C3 University of Leicester; Universidade de Lisboa
RP Lopes, A (corresponding author), Univ Lisbon, Fac Sci, P-1749016 Lisbon, Portugal.
EM jose@mcs.le.ac.uk; mal@di.fc.ul.pt
RI Lopes, Antonia/M-1755-2015
OI Lopes, Antonia/0000-0003-0688-3521
CR Abreu J, 2007, LECT NOTES COMPUT SC, V4574, P358
   Abreu J, 2009, LECT NOTES COMPUT SC, V5522, P219, DOI 10.1007/978-3-642-02138-1_15
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   [Anonymous], LNCS
   Batista T, 2005, LECT NOTES COMPUT SC, V3527, P1
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Bistarelli S, 2009, ELECTRON NOTES THEOR, V236, P147, DOI 10.1016/j.entcs.2009.03.020
   Bocchi Laura, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1059, DOI 10.1109/COMPSAC.2008.228
   Bocchi L., 2012, ADV KNOWLED IN PRESS
   Bocchi L, 2008, LECT NOTES COMPUT SC, V4937, P92
   Bocchi L, 2009, ELECTRON NOTES THEOR, V253, P3, DOI 10.1016/j.entcs.2009.09.025
   Bocchi L, 2008, COMM COM INF SC, V17, P155
   Boreale M, 2006, LECT NOTES COMPUT SC, V4184, P38
   Broy M, 2007, LECT NOTES COMPUT SC, V4700, P24
   Bruni R, 2008, LECT NOTES COMPUT SC, V4912, P186
   Bruni R, 2008, LECT NOTES COMPUT SC, V5065, P37, DOI 10.1007/978-3-540-68679-8_4
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   DENICOLA R, 2007, LNCS, V4421
   Elfatatry A, 2007, COMMUN ACM, V50, P35, DOI 10.1145/1278201.1278203
   Fargier H, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P175
   Fiadeiro J.L., 2011, SCI COMPUT IN PRESS
   Fiadeiro J.L., 2004, CATEGORIES SOFTWARE
   Fiadeiro JL, 2011, FORM ASP COMPUT, V23, P433, DOI 10.1007/s00165-010-0166-z
   Fiadeiro JL, 2010, LECT NOTES COMPUT SC, V6285, P70, DOI 10.1007/978-3-642-15114-9_8
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gilmore S., 1994, Computer Performance Evaluation. Modelling Techniques and Tools. 7th International Conference Proceedings, P353
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Lucchi R, 2007, J LOGIC ALGEBR PROGR, V70, P96, DOI 10.1016/j.jlap.2006.05.007
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Morrison R, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P69, DOI 10.1109/WICSA.2004.1310691
   Oquendo F., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI DOI 10.1145/986710.986728
   Oquendo F., 2008, SOSE, P154
   Oreizy P., 1998, IEE Proceedings-Software, V145, P137, DOI 10.1049/ip-sen:19982296
   OSOA, 2005, SERV COMP ARCH BUILD
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   REICHEL H, 1987, INITIAL COMPUTABILIT
   Sanz M.L., 2008, LNCS, V5292, P273
   Simon M., 2009, 21 INT TECHN C ENH S, P1
   Tiberghien A, 2010, LECT NOTES COMPUT SC, V5977, P91, DOI 10.1007/978-3-642-11811-1_8
   Wermelinger M., 2001, Software Engineering Notes, V26, P21, DOI 10.1145/503271.503213
   Wermelinger M, 2002, SCI COMPUT PROGRAM, V44, P133, DOI 10.1016/S0167-6423(02)00036-9
NR 42
TC 21
Z9 26
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 349
EP 367
DI 10.1007/s10270-012-0236-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300009
DA 2024-07-18
ER

PT J
AU Börger, E
AF Boerger, Egon
TI Approaches to modeling business processes: a critical analysis of BPMN,
   workflow patterns and YAWL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; BPMN; Workflow patterns; YAWL
ID SEMANTICS; BPEL
AB We investigate three approaches describing models of business processes: the OMG standard BPMN in its recent version 2.0, the workflow patterns of the Workflow Pattern Initiative and their reference implementation YAWL. We show how the three approaches fail to provide practitioners with a suitable means precisely and faithfully to capture business scenarios and to analyze, communicate and manage the resulting models. On the positive side, we distill from the discussion six criteria which can help to recognize practical and reliable tool-supported business process description and modeling systems.
C1 Univ Pisa, Dipartimento Informat, I-56125 Pisa, Italy.
C3 University of Pisa
RP Börger, E (corresponding author), Univ Pisa, Dipartimento Informat, Corso Italia 40, I-56125 Pisa, Italy.
EM boerger@di.unipi.it
CR Ait-Sadoune I, 2010, STUD COMPUT INTELL, V296, P51, DOI 10.1007/978-3-642-13273-5_4
   [Anonymous], P OOPSLA 2011 PORTL
   [Anonymous], MUCH BPMN DO YOU NEE
   [Anonymous], PETRI NETZE
   [Anonymous], P ASP OR SOFTW DEV C
   [Anonymous], P SOFTW ENG 2005
   [Anonymous], BPM0618
   [Anonymous], P 5 INT WORKSH ENH W
   [Anonymous], 7115 QUEENSL U TECHN
   [Anonymous], 2011, SUBJEKTORIENTIERTES
   [Anonymous], BPM0627
   [Anonymous], P 11 EMMSAD JUN
   [Anonymous], THESIS HPI U POTSDAM
   [Anonymous], PREPROC WEB SERV FOR
   [Anonymous], SIGN BPM AC IN
   [Anonymous], SUBJECT ORIENTED BPM
   [Anonymous], HDB CONCEPTUAL MODEL
   [Anonymous], MET SUIT
   [Anonymous], BPM0622
   [Anonymous], 34 ANN IEEE COMP SOF
   [Anonymous], TRANSLATION BP UNPUB
   [Anonymous], THESIS KARLSRUHE I T
   [Anonymous], GREAT PRINCIPLES COM
   [Anonymous], 2005, INT TECHN ROADM SEM
   [Anonymous], 3791 RZ IBM
   [Anonymous], RES ISSUES SYSTEMS A
   [Anonymous], P 16 AUSTR C INF SYS
   [Anonymous], 2006, COMPILERS PRINCIPLES
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Barros A, 2005, LECT NOTES COMPUT SC, V3785, P5
   Batory D, 2008, J UNIVERS COMPUT SCI, V14, P2059
   Börger E, 2007, LECT NOTES COMPUT SC, V4801, P1
   Börger E, 2008, LECT NOTES COMPUT SC, V5316, P59, DOI 10.1007/978-3-540-89762-0_3
   Borger E., 2003, ABSTRACT STATE MACHI
   Börger E, 2007, FORM ASP COMPUT, V19, P225, DOI 10.1007/s00165-006-0019-y
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas M, 2007, LECT NOTES COMPUT SC, V4803, P41
   Fleischmann A, 2012, UNIVERSAL ACCESS INF, V11, P125, DOI 10.1007/s10209-011-0236-x
   Frappier M., 2006, Software Specification Methods, DOI DOI 10.1002/9780470612514
   Gao Yi., 2006, BPMN-BPEL Transformation and Round Trip Engineering
   Gruhn V, 2007, SCI COMPUT PROGRAM, V65, P4, DOI 10.1016/j.scico.2006.08.003
   Hanisch H.-M., 2000, Fundamenta Informaticae, V41, P415
   Kuhnle K., 1996, ISSAC 96. Proceedings of the 1996 International Symposium on Symbolic and Algebraic Computation, P63, DOI 10.1145/236869.236900
   Lohmann Niels., 2007, A feature-complete petri net semantics for ws-bpel 2.0 and its compiler bpel2owfn
   Mayr EW, 2011, ISSAC 2011: PROCEEDINGS OF THE 36TH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND ALGEBRAIC COMPUTATION, P257
   Mayr R, 2000, INFORM COMPUT, V156, P264, DOI 10.1006/inco.1999.2826
   Ouyang C, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P285
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reisig Wolfgang., 1998, ELEMENTS DISTRIBUTED
   Silver Bruce., 2009, BPMN Method and Style: A levels-based methodology for BPM process modeling and improvement using BPMN 2.0. s.l
   Strosnider JK, 2008, IBM SYST J, V47, P415, DOI 10.1147/sj.473.0415
   Ter Hofstede A.H. M., 2010, Modern business process automation: YAWL and its support environment, DOI DOI 10.1007/978-3-642-03121-2
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   van der Aalst W. M. P., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P535
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Weidlich M, 2008, LECT NOTES COMPUT SC, V5331, P265
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 59
TC 66
Z9 72
U1 0
U2 37
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 305
EP 318
DI 10.1007/s10270-011-0214-z
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600002
DA 2024-07-18
ER

PT J
AU Choi, Y
   Bunse, C
AF Choi, Yunja
   Bunse, Christian
TI Design verification in model-based μ-controller development using an
   abstract component
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Abstract component; Model-driven development; Design verification;
   Embedded systems
ID FRAMEWORK
AB Component-based software development is a promising approach for controlling the complexity and quality of software systems. Nevertheless, recent advances in quality control techniques do not seem to keep up with the growing complexity of embedded software; embedded systems often consist of dozens to hundreds of software/hardware components that exhibit complex interaction behavior. Unanticipated quality defects in a component can be a major source of system failure. To address this issue, this paper suggests a design verification approach integrated into the model-driven, component-based development methodology Marmot. The notion of abstract components-the basic building blocks of Marmot-helps to lift the level of abstraction, facilitates high-level reuse, and reduces verification complexity by localizing verification problems between abstract components before refinement and after refinement. This enables the identification of unanticipated design errors in the early stages of development. This work introduces the Marmot methodology, presents a design verification approach in Marmot, and demonstrates its application on the development of a mu-controller-based abstraction of a car mirror control system. An application on TinyOS shows that the approach helps to reuse models as well as their verification results in the development process.
C1 [Choi, Yunja] Kyungpook Natl Univ, Sch Elect Engn & Comp Sci, Taegu, South Korea.
   [Bunse, Christian] Univ Mannheim, Dept Comp Sci, Mannheim, Germany.
C3 Kyungpook National University; University of Mannheim
RP Choi, Y (corresponding author), Kyungpook Natl Univ, Sch Elect Engn & Comp Sci, Taegu, South Korea.
EM yuchoi76@knu.ac.kr; Christian.Bunse@informatik.uni-mannheim.de
FU Korean Government [KRF-2008-331-D00525]; Korean Ministry of Education,
   Science and Technology (MEST)/Korea Science and Engineering Foundation
   (KOSEF) [R11-2008-007-03002-0]
FX This paper is an extended version of Choi [11] and Choi and Bunse [13].
   This work has been supported by the Korea Research Foundation Grant
   funded by the Korean Government (KRF-2008-331-D00525) and the
   Engineering Research Center of Excellence Program of the Korean Ministry
   of Education, Science and Technology (MEST)/Korea Science and
   Engineering Foundation (KOSEF), grant number R11-2008-007-03002-0.
CR Adamek J, 2005, J SOFTW MAINT EVOL-R, V17, P363, DOI 10.1002/smr.321
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   ARBAB F, 2004, MATH STRUCT COMPUT S
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   BRAUN AW, 1998, IEEE SOFTWARE
   BUNSE C, 2003, LNCS, V3938
   BUNSE C, 2008, MODELS WORKSH, P66
   Campbell L. A., 2002, Requirements Engineering, V7, P264, DOI 10.1007/s007660200020
   Cheesman J., 2000, UML COMPONENTS SIMPL
   CHOI Y, 2008, 11 INT S COMP BAS SO, P196
   CHOI Y, 2009, 2009 ICSE WORKSH MOD
   CHOI Y, 2007, LNCS, V4362
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clarke EM, 1999, MODEL CHECKING, P1
   D'Souza D., 1998, OBJECTS COMPONENTS F
   EasterBrook S., 1998, IEEE Trans. Softw. Eng
   ENGELS G, 2003, J INTEGRATED DESIGN, V6, P2
   Formal Systems (Europe) Ltd, 1997, FAIL DIV REF FDR2 US
   Fung M, 1997, AUST COMPUT J, V29, P95
   GANNOD GC, 2001, IEEE INT C PERF COMP
   Gay Daniel., 2003, Composite Materials: Design and Applications, P1
   GOMES L, 2005, 10 IEEE INT C EM TEC
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   HAERTIG H, 2007, ACM T SOFTW ENG METH, V35, P1
   Hill J., 2000, System architecture directions for networked sensors, P93
   HOLZMANN GJ, 1991, PRENTICE HALL SOFTWA
   HOOMAN J, 2008, SOFTW SYST MODEL
   HSIUNG PA, 2001, 9 INT S HARDW SOFTW
   Jackson D., 1996, Computer, V29, P21
   JOHNSON SD, 2003, IEEE COMPUTER    NOV
   KERN C, 1999, ACM T DES AUTOM  APR
   KHAN MU, 2006, P 3 INT WORKSH MOD B
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MIKK E, 1998, 2 IEEE WORKSH IND ST
   Mitchell B, 2008, IEEE T SOFTWARE ENG, V34, P305, DOI 10.1109/TSE.2008.28
   MORICONI M, 1995, IEEE T SOFTWARE ENG, V21, P356, DOI 10.1109/32.385972
   NAESER G, 2005, 17 EUR C REAL TIM SY
   OBER I, 2004, ACTION SPECIFICATION
   *OBJ MAN GROUP, UML2 0 SUP SPEC
   RIBEIRO OR, 2005, 12 IEEE INT C WORKSH
   RUSHBY JM, 1996, CSL9510 SRI INT
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   TROFIN M, 2008, SOFTWARE TOOLS TECHN
   van der Aalst WMP, 2002, SCI COMPUT PROGRAM, V42, P129, DOI 10.1016/S0167-6423(01)00005-3
   XIE F, 2003, P JOINT C ESEC FSE
   YANG W, 2003, IEEE INT C SYST ON C
   ZIADI T, 2004, 26 INT C SOFTW ENG
NR 51
TC 4
Z9 4
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 91
EP 115
DI 10.1007/s10270-010-0147-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400006
DA 2024-07-18
ER

PT J
AU Kurtev, I
AF Kurtev, Ivan
TI Application of reflection in a model transformation language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Reflection; Model transformation languages; MDE; MISTRAL
AB Computational reflection is a well-known technique applied in many existing programming languages ranging from functional to object-oriented languages. In this paper we study the possibilities and benefits of introducing and using reflection in a rule-based model transformation language. The paper identifies some language abstractions to achieve structural and behavioral reflection. Reflective features are motivated by examples of problems derived from the experience with currently used transformation languages. Example solutions are given by using an experimental language with reflective capabilities. The paper also outlines possible implementation strategies for adding reflection to a language and discusses their advantages and disadvantages.
C1 Univ Twente, Software Engn Grp, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Kurtev, I (corresponding author), Univ Twente, Software Engn Grp, POB 217, NL-7500 AE Enschede, Netherlands.
EM kurtev@ewi.utwente.nl
OI Kurtev, Ivan/0009-0003-3783-405X
CR AKCHURST D, 2006, SITRA SIMPLE TRANSFO, P351
   AKSIT M, 1993, ECOOP WORKSH 1993, P152
   [Anonymous], 2003, Eclipse Modeling Framework
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   *DOM SPEC ASP LANG, DOM SPEC ASP LANG WO
   Havinga Wilke., 2006, AOSD 06, P214
   Herzeel C, 2008, LECT NOTES COMPUT SC, V5146, P87
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   JOUAULT F, 2005, ECMDA 2005 WORKSH TR
   JOUAULT F, 2005, MOD TRANSF PRACT WOR
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kojarski S, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P515
   KURTEV I, 2005, THESIS U TWENTE NETH
   Kurtev I, 2007, SCI COMPUT PROGRAM, V68, P138, DOI 10.1016/j.scico.2007.05.006
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   LEITNER A, 2007, JOT, V6
   LEWIS B, 2003, OOPSLA 03, P96, DOI DOI 10.1145/949344.949367
   MAES P, 1987, THESIS VRIJE U BRUSS
   MCAFFER J, 1996, REFLECTION 96, P39
   *OMG, 2002, AD20020410 OMG
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   PAWLAK R, 2001, 3 INT C MET ARCH ADV
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Tanter É, 2003, ACM SIGPLAN NOTICES, V38, P27, DOI 10.1145/949343.949309
   TANTER E, 2004, THESIS U NANTES
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   WAND M, 1986, ACM S LISP FUNCT PRO, P298
   MISTRAL WEB SITE
NR 32
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 311
EP 333
DI 10.1007/s10270-009-0138-z
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Offutt, J
   Wu, Y
AF Offutt, Jeff
   Wu, Ye
TI Modeling presentation layers of web applications for testing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web applications; Web modeling; Test criteria
AB Web software applications have become complex, sophisticated programs that are based on novel computing technologies. Their most essential characteristic is that they represent a different kind of software deployment-most of the software is never delivered to customers' computers, but remains on servers, allowing customers to run the software across the web. Although powerful, this deployment model brings new challenges to developers and testers. Checking static HTML links is no longer sufficient; web applications must be evaluated as complex software products. This paper focuses on three aspects of web applications that are unique to this type of deployment: (1) an extremely loose form of coupling that features distributed integration, (2) the ability that users have to directly change the potential flow of execution, and (3) the dynamic creation of HTML forms. Taken together, these aspects allow the potential control flow to vary with each execution, thus the possible control flows cannot be determined statically, prohibiting several standard analysis techniques that are fundamental to many software engineering activities. This paper presents a new way to model web applications, based on software couplings that are new to web applications, dynamic flow of control, distributed integration, and partial dynamic web application development. This model is based on the notion of atomic sections, which allow analysis tools to build the analog of a control flow graph for web applications. The atomic section model has numerous applications in web applications; this paper applies the model to the problem of testing web applications.
C1 [Offutt, Jeff] George Mason Univ, Volgenau Sch Informat Technol & Engn, Fairfax, VA 22030 USA.
   [Wu, Ye] Sci Applicat Int Corp, Innovat Informat Technol Div, Bethesda, MD USA.
C3 George Mason University; Science Applications International Corporation
   (SAIC)
RP Offutt, J (corresponding author), George Mason Univ, Volgenau Sch Informat Technol & Engn, Fairfax, VA 22030 USA.
EM offutt@gmu.edu; ye.wu@saic.com
CR ALEXANDER RT, 1915, P 11 INT S SOFTW REL
   ALSHAHWAN N, 2008, 1 IEEE INT C SOFTW T, P298
   Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   ANDREWS A, 2009, INF SOFTW T IN PRESS
   [Anonymous], P 16 INT S SOFTW REL
   BENEDIKT M, 2002, P 11 INT WORLD WID W, P654
   BLUMENSTYK M, 2006, STICKYMONDS COM
   CERI S, 2000, 9 WORLD WID WEB C AM
   Ceri S., 2003, Designing data-intensive Web applications
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P74, DOI 10.1109/WSE.2003.1234011
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   GOLD R, 2003, HUTP HOM ONL
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Harrold M. J., 1994, SIGSOFT Software Engineering Notes, V19, P154, DOI 10.1145/195274.195402
   HARROLD MJ, 1991, IEEE SOFTWARE, V8, P58, DOI 10.1109/52.73750
   HATCHER E, 2002, JAVA DEV ANT MANNING
   Hower Rick., 2002, Web site test tools and site management tools
   Jia Xiaoping., 2002, P IASTED INT C SOFTW, P280
   JIN Z, 1998, WILEYS SOFTW TEST VE, V8, P133
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   LEE SC, 2000, P 12 INT S SOFTW REL, P200
   Liu CH, 2001, INT J SOFTW ENG KNOW, V11, P157, DOI 10.1142/S0218194001000499
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   OFFUTT J, 2008, 1 IEEE INT C SOFTW T, P465
   PARRISH A, 1991, IEEE T SOFTWARE ENG, V17, P565, DOI 10.1109/32.87282
   PERTET S, 2005, CMUPDL05109, P109
   PIMONT S, 1976, P 2 INT C SOFTW ENG
   RICCA F, 2001, 23 INT C SOFTW ENG I
   SAMPATH S, 2008, 1 IEEE INT C SOFTW T, P141
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P266
   Singh I., 2002, DESIGNING ENTERPRISE
   SPRENKLE S, 2007, P 18 INT S SOFTW REL, P253
   Tappenden A, 2005, AGILE 2005, Proceedings, P29, DOI 10.1109/ADC.2005.11
   Turner C. D., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P302, DOI 10.1109/ICSM.1993.366932
   WU Y, 2002, ISETR0208 G MASON U
   YANG JT, 2000, P 23 ANN COMP SOFTW
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   [No title captured]
NR 49
TC 20
Z9 24
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2010
VL 9
IS 2
BP 257
EP 280
DI 10.1007/s10270-009-0125-4
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 577YP
UT WOS:000276260200006
DA 2024-07-18
ER

PT J
AU Burgués, X
   Franch, X
   Ribó, JM
AF Burgues, Xavier
   Franch, Xavier
   Ribo, Josep M.
TI Improving the accuracy of UML metamodel extensions by introducing
   induced associations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodelling; MOF; Shallow instantiation; UML extension; Software
   quality; Metaassociations
AB In the process of extending the UML metamodel for a specific domain, the metamodel specifier introduces frequently some metaassociations at MOF level M2 with the aim that they induce some specific associations at MOF level M1. For instance, if a metamodel for software process modelling states that a "Role" is responsible for an "Artifact", we can interpret that its specifier intended to model two aspects: (1) the implications of this metaassociation at level M1 (e.g., the specific instance of Role "TestEngineer" is responsible for the specific instance of Artifact "TestPlans"); and (2) the implications of this metaassociation at level M0 (e.g., "John Doe" is the responsible test engineer for elaborating the test plans for the package "Foo"). Unfortunately, the second aspect is often not enforced by the metamodel and, as a result, the models which are defined as its instances may not incorporate it. This problem, consequence of the so-called "shallow instantiation" in Atkinson and Kuhne (Procs. UML'01, LNCS 2185, Springer, 2001), prevents these models from being accurate enough in the sense that they do not express all the information intended by the metamodel specifier and consequently do not distinguish metaassociations that induce associations at M1 from those that do not. In this article we introduce the concept of induced association that may come up when an extension of the UML metamodel is developed. The implications that this concept has both in the extended metamodel and in its instances are discussed. We also present a methodology to enforce that M1 models incorporate the associations induced by the metamodel which they are instances from. Next, as an example of application we present a quality metamodel for software artifacts which makes intensive use of induced associations. Finally, we introduce a software tool to assist the development of quality models as correct instantiations of the metamodel, assuring the proper application of the induced associations as required by the metamodel.
C1 [Burgues, Xavier; Franch, Xavier] Univ Politecn Cataluna, ES-08034 Barcelona, Spain.
   [Ribo, Josep M.] Univ Lleida, Lleida, Catalunya, Spain.
C3 Universitat Politecnica de Catalunya; Universitat de Lleida
RP Burgués, X (corresponding author), Univ Politecn Cataluna, C Jordi Girona 1-3,Campus Nord,Omega, ES-08034 Barcelona, Spain.
EM diafebus@lsi.upc.edu
RI Franch, Xavier/A-8588-2008; Ribó, Josep M./K-2052-2017; Burgues,
   Xavier/G-2152-2016
OI Burgues, Xavier/0000-0001-6974-9886; Franch, Xavier/0000-0001-9733-8830
CR Alvarez J., 2001, WORKSH TRANSF UML WT
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   ATKINSON C, 2002, ACM T MODEL COMP SIM, V12
   Atkinson Colin, 2001, LNCS, V2185
   BURGUES X, 1924, LNCS, V3716
   CARVALLO JP, 2004, P 3 INT C COST BAS S
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Costal D, 2006, LECT NOTES COMPUT SC, V4215, P513
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Firesmith D., 2003, J OBJECT TECHNOL, V2
   *FORMAL, FORMAL070504
   GLASS R, 1995, IEEE SOFTW, V12
   GONZALEZPEREZ C, 2006, SOFTW SYST MODEL, V5
   HENDERSONSELLER.B, 2005, 2 AS PAC C CONC MOD
   *ISO IEC, 2001, 91261 ISO IEC 1
   KELLER S, 1990, SYST SOFTW REQUIREME
   Knapp A., 2003, 1 INT WORKSH ENG MET
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   ODELL J, 1994, J OBJECT ORIENTED PR, V7
   *OMG, 2003, FORMAL2030302 OMG
   *OMG, FORMAL020401 OMG
   *OMG, FORMAL20050106 OMG
   *OMG, FORMAL050707 OMG
   *PTC, PTC031004
   RIBO JM, 2002, THESIS POLITECHNICLA
   ROBILLARD PN, 2001, SOFTWARE PROCESSES U
   Zuse Horst., 1998, A framework of software measurement
NR 28
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 361
EP 379
DI 10.1007/s10270-007-0062-z
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 322NZ
UT WOS:000257383900009
DA 2024-07-18
ER

PT J
AU Lahouij, A
   Hamel, L
   Graiet, M
AF Lahouij, Aida
   Hamel, Lazhar
   Graiet, Mohamed
TI Formal reconfiguration model for cloud resources
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cloud environment; Dynamic reconfiguration; Elasticity coordination;
   Formal approach; Event-B
ID VERIFICATION; ELASTICITY; SERVICE
AB The execution context of the cloud composite services is dynamically and rapidly changing. In the cloud environment, the service demands can increase/decrease in a restrained time interval. Due to this fact, cloud composite services have to evolve continuously by scaling up/down their capacity to handle new demands. Scaling up consists in making a component larger or faster to handle a greater load. Scaling down is the reverse of Scaling up and it is the situation of reducing component capacity when the load decreases. Dynamic adaptation mechanisms must be in place to take into account the evolution of the execution context and environment. In this paper, we propose a new Event-B formal model to manage the dynamic reconfiguration of composite services in the cloud context. The proposed approach sets up the required reconfiguration mechanisms and takes into account the coordination between the different cloud computing levels: Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (IaaS). The proposed model contains four abstraction levels and implements the scaling mechanisms at each abstraction level. The model consistency has been proved thanks to the Event-B dedicated tools.
C1 [Lahouij, Aida] Univ Sousse, ISITCom, Hammam Sousse 4011, Tunisia.
   [Hamel, Lazhar; Graiet, Mohamed] Univ Monastir, ISIMM, Monastir 5000, Tunisia.
C3 Universite de Sousse; Universite de Monastir
RP Lahouij, A (corresponding author), Univ Sousse, ISITCom, Hammam Sousse 4011, Tunisia.
EM aida.lahouij@gmail.com
RI Lahouij, Aida/ABB-3699-2020; Hamel, Lazhar/AAW-4626-2021
OI Lahouij, Aida/0000-0003-4296-6893; Hamel, Lazhar/0000-0003-1920-1825;
   Graiet, Mohamed/0000-0002-0482-7254
CR Abrial J., 2010, Modeling in event-b-system and software engineering, DOI DOI 10.1017/CBO9781139195881
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J.R., 1988, LNCS, P86, DOI [10.1007/3-540-50214-9_8, DOI 10.1007/3-540-50214-9]
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   Al-Dhuraibi Y, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P322, DOI 10.5220/0006652403220329
   Al-Dhuraibi Y, 2018, IEEE T SERV COMPUT, V11, P430, DOI 10.1109/TSC.2017.2711009
   Al-Dhuraibi Y, 2017, IEEE INT CONF CLOUD, P472, DOI 10.1109/CLOUD.2017.67
   Amziani M, 2012, LECT NOTES COMPUT SC, V7481, P194, DOI 10.1007/978-3-642-32885-5_15
   [Anonymous], 2013, MODELSWARD
   [Anonymous], 2014, SURVEY ELASTICITY MA, DOI DOI 10.1007/978-1-4471-6452-4_10
   Ashraf A., 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P581, DOI 10.1109/CloudCom.2012.6427605
   Cansell D, 2008, MONOGR THEOR COMPUT, P47, DOI 10.1007/978-3-540-74107-7_3
   Chatziprimou K, 2013, INT CONF CLOUD COMP, P687, DOI 10.1109/CloudCom.2013.112
   Coutinho EF, 2015, ANN TELECOMMUN, V70, P289, DOI 10.1007/s12243-014-0450-7
   Dawoud W, 2011, COMM COM INF SC, V190, P431
   Farokhi S, 2016, FUTURE GENER COMP SY, V65, P57, DOI 10.1016/j.future.2016.05.028
   Fernandez H, 2014, INT CONF CLOUD ENG, P195, DOI 10.1109/IC2E.2014.25
   Galante G, 2012, INT CONF UTIL CLOUD, P263, DOI 10.1109/UCC.2012.30
   Graiet M, 2017, FORM ASP COMPUT, V29, P987, DOI 10.1007/s00165-017-0425-3
   Gueye SMK, 2014, FUTURE GENER COMP SY, V35, P14, DOI 10.1016/j.future.2013.12.037
   Hoang T.S., 2013, IND DEPLOYMENT SYSTE, P211
   Iqbal W, 2018, J NETW COMPUT APPL, V124, P94, DOI 10.1016/j.jnca.2018.09.023
   Kalyvianaki E, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P117
   Kirthica S, 2018, INT J APPROX REASON, V101, P88, DOI 10.1016/j.ijar.2018.07.002
   Lahouij A, 2020, LECT NOTES COMPUT SC, V12541, P69, DOI 10.1007/978-3-030-64694-3_5
   Lahouij A, 2020, FORM ASP COMPUT, V32, P361, DOI 10.1007/s00165-020-00517-0
   Lahouij A, 2018, IEEE INT CONF SERV, P161, DOI 10.1109/SOCA.2018.00031
   Lahouij A, 2018, LECT NOTES COMPUT SC, V11229, P604, DOI 10.1007/978-3-030-02610-3_34
   Laili YJ, 2013, COMPUT IND, V64, P448, DOI 10.1016/j.compind.2013.02.008
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Marshall Paul, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P43, DOI 10.1109/CCGRID.2010.80
   Mohamed M, 2015, FUTURE GENER COMP SY, V50, P49, DOI 10.1016/j.future.2014.10.017
   Naskos A, 2016, LECT NOTES COMPUT SC, V9511, P151, DOI 10.1007/978-3-319-29919-8_12
   Padidar, 2011, STUDY USE EVENT B SY
   Paraiso F, 2016, COMPUTING, V98, P539, DOI 10.1007/s00607-014-0421-x
   Podolskiy V, 2019, INT J AP MAT COM-POL, V29, P227, DOI 10.2478/amcs-2019-0017
   Ramirez YM, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P177, DOI 10.1109/ICAC.2019.00029
   Sheng Zhang, 2011, Proceedings of the 2011 IEEE Global Communications Conference (GLOBECOM 2011), DOI 10.1109/GLOCOM.2011.6133670
   Vasic N, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P423
NR 40
TC 0
Z9 0
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 225
EP 245
DI 10.1007/s10270-022-00990-6
EA MAR 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000774602800001
DA 2024-07-18
ER

PT J
AU Jahandideh, I
   Ghassemi, F
   Sirjani, M
AF Jahandideh, Iman
   Ghassemi, Fatemeh
   Sirjani, Marjan
TI An actor-based framework for asynchronous event-based cyber-physical
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Actor model; Cyber-physical systems; Hybrid automata
AB In cyber-physical systems like automotive systems, there are components like sensors, actuators, and controllers that communicate asynchronously with each other. The computational model of actors supports modeling distributed asynchronously communicating systems. We propose the Hybrid Rebeca language to support the modeling of cyber-physical systems. Hybrid Rebeca is an extension of the actor-based language Rebeca. In this extension, physical actors are introduced as new computational entities to encapsulate physical behaviors. To support various means of communication among the entities, the network is explicitly modeled as a separate entity from actors. We develop a tool to derive hybrid automata as the basis for the analysis of Hybrid Rebeca models. We demonstrate the applicability of our approach through a case study in the domain of automotive systems. We use the SpaceEx framework for reachability analysis of the case study. Compared to hybrid automata, our results show that for event-based asynchronous models hybrid Rebeca improves analyzability by reducing the number of real variables, and increases modularity and hence, minimizes the number of changes caused by a modification in the model.
C1 [Jahandideh, Iman; Ghassemi, Fatemeh] Univ Tehran, Coll Engn, Sch Elect & Comp Engn, Tehran, Iran.
   [Ghassemi, Fatemeh] Inst Res Fundamental Sci, Sch Comp Sci, POB 19395-5746, Tehran, Iran.
   [Sirjani, Marjan] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Sirjani, Marjan] Reykjav Univ, Sch Comp Sci, Reykjavik, Iceland.
C3 University of Tehran; Malardalen University; Reykjavik University
RP Ghassemi, F (corresponding author), Univ Tehran, Coll Engn, Sch Elect & Comp Engn, Tehran, Iran.; Ghassemi, F (corresponding author), Inst Res Fundamental Sci, Sch Comp Sci, POB 19395-5746, Tehran, Iran.
EM jahandideh.iman@ut.ac.ir; fghassemi@ut.ac.ir; marjan.sirjani@mdh.se
RI Ghassemi, Fatemeh/W-8386-2018
OI Ghassemi, Fatemeh/0000-0002-9677-3854
CR Aceto L, 2011, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.58.1
   Agha G., 1986, ACTORS MODEL CONCURR, DOI DOI 10.7551/MITPRESS/1086.001.0001
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 2014, SYSTEM DESIGN MODELI
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Cicirelli F, 2018, SIMUL MODEL PRACT TH, V83, P93, DOI 10.1016/j.simpat.2017.12.008
   Cuijpers PJL, 2005, J LOGIC ALGEBR PROGR, V62, P191, DOI 10.1016/j.jlap.2004.02.001
   David R, 2001, DISCRETE EVENT DYN S, V11, P9, DOI 10.1023/A:1008330914786
   Davis RI, 2007, REAL-TIME SYST, V35, P239, DOI 10.1007/s11241-007-9012-7
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Filipovikj P, 2016, LECT NOTES COMPUT SC, V9995, P748, DOI 10.1007/978-3-319-48989-6_46
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Hewitt C., 1972, DESCRIPTION THEORETI
   Jahandideh I., 2018, LECT NOTES COMPUTER, V11615, P3
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   Kamburjan E., 2019, ARXIV190605704
   Kang EY, 2013, RELIAB ENG SYST SAFE, V120, P127, DOI 10.1016/j.ress.2013.06.007
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Lanotte R, 2017, LECT NOTES COMPUT SC, V10168, P115, DOI 10.1007/978-3-319-53733-7_8
   Lanotte R, 2017, P IEEE CSFW, P436, DOI 10.1109/CSF.2017.12
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lohstroh M., 2019, P 56 ANN DES AUT C 2, P152
   Marinescu R, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P293, DOI 10.1109/SEAA.2016.47
   Metelo A, 2018, LECT NOTES COMPUT SC, V10960, P80, DOI 10.1007/978-3-319-95162-1_6
   Nigro, 2019, P SAI INT SYST C, P1232
   Pfeiffer O., 2008, EMBEDDED NETWORKING
   Platzer A, 2010, J LOGIC COMPUT, V20, P309, DOI 10.1093/logcom/exn070
   Sabouri H, 2013, LECT NOTES COMPUT SC, V8161, P51, DOI 10.1007/978-3-642-40213-5_4
   Sangiovanni-Vincentelli A.L, LECT NOTES COMPUTER, V11971, P59
   Sankaranarayanan S, 2008, FORM METHOD SYST DES, V32, P25, DOI 10.1007/s10703-007-0046-1
   Sirjani M, 2004, FUND INFORM, V63, P385
   Sirjani M., 2018, LNCS, P1
   Sirjani M, 2011, LECT NOTES COMPUT SC, V7000, P20, DOI 10.1007/978-3-642-24933-4_3
   Tini S., 2018, 14 INT C INT FORM ME
   Varshosaz Mahsa., 2012, Formal Methods and Software Engineering, volume 7635 of Lecture Notes in Computer Science, V7635, P135, DOI DOI 10.1007/978-3-642-34281-312
   Wolf W, 2000, P IEEE, V88, P23, DOI 10.1109/5.811598
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yousefi B, 2017, FORM ASP COMPUT, V29, P1051, DOI 10.1007/s00165-017-0429-z
   Yousefi B, 2015, LECT NOTES COMPUT SC, V9392, P69, DOI 10.1007/978-3-319-24644-4_5
NR 41
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 641
EP 665
DI 10.1007/s10270-021-00877-y
EA APR 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000636411600001
DA 2024-07-18
ER

PT J
AU Klikovits, S
   Buchs, D
AF Klikovits, Stefan
   Buchs, Didier
TI Pragmatic reuse for DSML development Composing a DSL for hybrid CPS
   modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Domain-specific language; Modeling; Simulation;
   Verification
ID PROGRAMMING LANGUAGE; SYSTEMS
AB By bridging the semantic gap, domain-specific language (DSLs) serve an important role in the conquest to allow domain experts to model their systems themselves. In this publication we present a case study of the development of the Continuous REactive SysTems language (CREST), a DSL for hybrid systems modeling. The language focuses on the representation of continuous resource flows such as water, electricity, light or heat. Our methodology follows a very pragmatic approach, combining the syntactic and semantic principles of well-known modeling means such as hybrid automata, data-flow languages and architecture description languages into a coherent language. The borrowed aspects have been carefully combined and formalised in a well-defined operational semantics. The DSL provides two concrete syntaxes: CREST diagrams, a graphical language that is easily understandable and serves as a model basis, and crestdsl, an internal DSL implementation that supports rapid prototyping-both are geared towards usability and clarity. We present the DSL's semantics, which thoroughly connect the various language concerns into an executable formalism that enables sound simulation and formal verification in crestdsl, and discuss the lessons learned throughout the project.
C1 [Klikovits, Stefan; Buchs, Didier] Univ Geneva, Route Drize 7, CH-1227 Carouge, Switzerland.
   [Klikovits, Stefan] Natl Inst Informat, ERATO Meta Math Syst Design Hasuo Project, Tokyo, Japan.
C3 University of Geneva; Research Organization of Information & Systems
   (ROIS); National Institute of Informatics (NII) - Japan
RP Klikovits, S (corresponding author), Univ Geneva, Route Drize 7, CH-1227 Carouge, Switzerland.; Klikovits, S (corresponding author), Natl Inst Informat, ERATO Meta Math Syst Design Hasuo Project, Tokyo, Japan.
EM klikovits@nii.ac.jp; didier.buchs@unige.ch
OI Klikovits, Stefan/0000-0003-4212-7029
FU University of Geneva
FX Open access funding provided by University of Geneva
CR Abdelzad V, 2015, LECT NOTES COMPUT SC, V9369, P159, DOI 10.1007/978-3-319-24912-4_12
   Ahmad E., 2014, PROC 2014 ACM SIGADA, P29, DOI DOI 10.1145/2692956.2663178
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 1976, Theory of modelling and simulation
   [Anonymous], 2014, SYSTEM DESIGN MODELI
   [Anonymous], 1974, PROC IFIP C 74
   [Anonymous], 2017, AS5506C SAE
   Bächle M, 2007, IEEE SOFTWARE, V24, P105, DOI 10.1109/MS.2007.176
   Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Barisic A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P342, DOI 10.1109/QUATIC.2012.63
   Barroca B., 2009, ELECT COMMUN EASST, V21
   Bechtold S., 2016, JUNIT 5 USER GUIDE V
   Bergero F, 2011, SIMUL-T SOC MOD SIM, V87, P113, DOI 10.1177/0037549710368029
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Black DavidC., 2009, SystemC: From the Ground Up
   Bourke T., P 16 INT C HYBR SYST, P113
   Bouyer Patricia., 2010, MODELING VERIFICATIO, P111
   Broenink JanF., 1999, SIE WHITEBOOK SIMULA, P1
   Broman David., 2012, MPM MODELS 12 MULTIP, P49, DOI DOI 10.1145/2508443.2508452
   Campagne F, 2014, The MPS LanguageWorkbench, V1
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   Cazzola W., 2010, P 7 WORKSH REFL AOP, V10
   De Laet T., 2013, CORR
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delange J, 2014, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2014.20
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Feniello A, 2014, IEEE INT C INT ROBOT, P4428, DOI 10.1109/IROS.2014.6943189
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Fowler M., 2010, Domain-specific languages
   Franca R.B., 2007, ASSESSMENT AADL BEHA, P13
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Freeman S., 2006, Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '06, P855, DOI DOI 10.1145/1176617.1176735
   Freeze J., 2006, Ruby Code Style, V16
   Friedenthal S., 2009, INCOSE INSIGHT, V12, P10, DOI DOI 10.1002/INST.200912410
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   Fryer JA, 1998, IEEE INT CONF ROBOT, P3167, DOI 10.1109/ROBOT.1998.680912
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Gao S, 2012, INT JOINT C AUT REAS, P286
   Ghosh D., 2010, DSLs in Action, V1st
   Ghosh D, 2011, COMMUN ACM, V54, P44, DOI 10.1145/1965724.1965740
   Haber A, 2015, COMM COM INF SC, V580, P45, DOI 10.1007/978-3-319-27869-8_3
   Haber Arne, 2016, MONTIARC ARCHITECTUR, V24
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hemel Z., 2011, STATIC CONSISTENCY C
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Horswill ID, 2000, AUTON ROBOT, V9, P83, DOI 10.1023/A:1008932520090
   Huang CY, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P247
   Klikovits S., 2018, CEUR WORKSHOP P, V2245, P515
   Klikovits S., 2019, THESIS
   Klikovits S., 2018, TECHNICAL REPORT
   Klikovits S, 2018, LECT NOTES COMPUT SC, V11150, P29, DOI 10.1007/978-3-030-01042-3_3
   Kofman E, 2001, SIMUL-T SOC MOD SIM, V18, P123
   Kopetz H, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P3, DOI 10.1109/ISORC.2008.14
   Lacoste-Julien S., 2004, 2004 IEEE International Symposium on Computer Aided Control Systems Design (IEEE Cat. No.04TH8770), P65, DOI 10.1109/CACSD.2004.1393852
   Lepri D, 2015, SCI COMPUT PROGRAM, V99, P128, DOI 10.1016/j.scico.2014.06.006
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Mustafiz S, 2016, 2016 SYMPOSIUM ON THEORY OF MODELING AND SIMULATION (TMS-DEVS)
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Object Management Group, 2011, FORMAL20110103 OMG
   Object Management Group, 2011, FORMAL110602 OMG
   OMG, 2017, UML 2 5 1 OBJECT MAN
   OMG, 2017, OMG SYST MOD LANG OM
   Peterson J, 1999, ICRA '99: IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION, VOLS 1-4, PROCEEDINGS, P1144, DOI 10.1109/ROBOT.1999.772516
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Petri C. A., 1962, dissertation
   Pohjonen R, 2002, DR DOBBS J, V27, P26
   Rieger C., 2018, MODELSWARD
   Ringert J.O., 2015, CORR
   Sadati SMH, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P559, DOI 10.1109/MODELS-C.2019.00086
   Cuadrado JS, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P109, DOI 10.4018/978-1-4666-2092-6.ch005
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tolvanen J.-P., 2003, COMPANION 18 ANN ACM, P92, DOI DOI 10.1145/949344.949365
   van der Aalst WMP, 2015, SOFTW SYST MODEL, V14, P685, DOI 10.1007/s10270-014-0424-2
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Van Deursen A, 2008, J SOFTW MAINT-RES PR, V10, P75, DOI [10.1002/(SICI)1096-908X(199803/04)10:275::AID-SMR1683.0.CO;2-5, DOI 10.1002/(SICI)1096-908X(199803/04)10:275::AID-SMR1683.0.CO;2-5]
   VOLTER M., 2013, DSL ENG DESIGNING IM
   Walsh D, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P3, DOI 10.1109/ECBS.2006.28
   Zhang F., 2008, IFAC Proceedings Volumes, V41, P7967, DOI [10.3182/20080706-5-KR-1001.01346, DOI 10.3182/20080706-5-KR-1001.01346]
NR 80
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 837
EP 866
DI 10.1007/s10270-020-00831-4
EA OCT 2020
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000577267400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Graics, B
   Molnár, V
   Vörös, A
   Majzik, I
   Varró, D
AF Graics, Bence
   Molnar, Vince
   Voros, Andras
   Majzik, Istvan
   Varro, Daniel
TI Mixed-semantics composition of statecharts for the component-based
   design of reactive systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Component-based design; Statecharts; Composition language; Formal
   semantics; Formal verification
AB The increasing complexity of reactive systems can be mitigated with the use of components and composition languages in model-driven engineering. Designing composition languages is a challenge itself as both practical applicability (support for different composition approaches in various application domains), and precise formal semantics (support for verification and code generation) have to be taken into account. In our Gamma Statechart Composition Framework, we designed and implemented a composition language for the synchronous, cascade synchronous and asynchronous composition of statechart-based reactive components. We formalized the semantics of this composition language that provides the basis for generating composition-related Java source code as well as mapping the composite system to a back-end model checker for formal verification and model-based test case generation. In this paper, we present the composition language with its formal semantics, putting special emphasis on design decisions related to the language and their effects on verifiability and applicability. Furthermore, we demonstrate the design and verification functionality of the composition framework by presenting case studies from the cyber-physical system domain.
C1 [Graics, Bence; Molnar, Vince; Voros, Andras; Majzik, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
   [Graics, Bence; Molnar, Vince; Voros, Andras; Varro, Daniel] MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.
   [Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 Budapest University of Technology & Economics; Budapest University of
   Technology & Economics; McGill University
RP Graics, B (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.; Graics, B (corresponding author), MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.
EM graics@mit.bme.hu; molnarv@mit.bme.hu; vori@mit.bme.hu;
   majzik@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Molnár, Vince/AAV-3754-2021; Majzik,
   Istvan/G-8929-2012
OI Varro, Daniel/0000-0002-8790-252X; Molnár, Vince/0000-0002-8204-7595;
   Graics, Bence/0000-0001-5546-5970
FU Budapest University of Technology and Economics (BME); Uj Nemzeti
   Kivalosag Program 2017-2018; Nemzeti Tehetseg Program; Nemzet Fiatal
   Tehetsegeiert osztondij 2018 [NTP-NFTo-18]; New National Excellence
   Program of the Ministry for Innovation and Technology [uNKP-19-3]
FX Open access funding provided by Budapest University of Technology and
   Economics (BME). This work was partially supported by uj Nemzeti
   Kivalosag Program 2017-2018, Nemzeti Tehetseg Program, Nemzet Fiatal
   Tehetsegeiert osztondij 2018 (NTP-NFTo-18) and by the uNKP-19-3 New
   National Excellence Program of the Ministry for Innovation and
   Technology.
CR Aldini A, 2010, PROCESS ALGEBRAIC APPROACH TO SOFTWARE ARCHITECTURE DESIGN, P239, DOI 10.1007/978-1-84800-223-4_7
   [Anonymous], 2004, Timed Automata: Semantics, Algorithms and Tools
   Apvrille L., 2016, MODEL DRIVEN ENG SOF, P293
   Aravantinos V., 2015, CEUR WORKSHOP P, P19
   Bae K, 2012, SCI COMPUT PROGRAM, V77, P1235, DOI 10.1016/j.scico.2010.10.002
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Behrmann Gerd, 2006, Uppaal 4.0
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   Borde E., 2011, P 14 INT ACM SIGS S, P129
   Broy M, 1997, J ACM, V44, P850, DOI 10.1145/268999.269004
   Broy M., 2012, Specification and development of interactive systems: focus on streams, interfaces, and refinement
   Bure T., 2008, PROCOM PROGR COMPONE
   Callahan J., 2000, AUTOMATED SOFTWARE T
   Chhokra Ajay., 2015, 2015 EL SYST LEV SYN
   Childs A, 2006, COMPUTER, V39, P42, DOI 10.1109/MC.2006.51
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   Crane M. L., 2005, 2005501 SCH COMP QUE
   Crane ML, 2005, LECT NOTES COMPUT SC, V3713, P97, DOI 10.1007/11557432_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Edwards SA, 2003, SCI COMPUT PROGRAM, V48, P21, DOI 10.1016/S0167-6423(02)00096-5
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Eshuis R, 2009, SCI COMPUT PROGRAM, V74, P65, DOI 10.1016/j.scico.2008.09.001
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gerard S., 2010, MODEL DRIVEN ENG DIS
   Graics B., 2020, 27 MIN
   Graics B., 2016, Technical report
   [Group O. M Object Management Group], 2019, 20190501 OBJ MAN GRO
   Group O. M, 2019, 20190201 OBJ MAN GRO
   Group O. M, 2018, 20181201 OBJ MAN GRO
   Haber Arne, 2014, ARXIV14096578
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Herber P., 2010, A Framework for Automated HW/SW Co-Verification of SystemC Designs using Timed Automata
   Hili N, 2017, PROC IEEE ACM INT C, P509, DOI 10.1109/ICSE-C.2017.168
   Jiang Y, 2018, ACM TRANS CYBER-PHYS, V3, P12
   Juodisius Paulius., 2019, ART SCI ENG PROGRAM, V3, P2, DOI [DOI 10.22152/PROGRAMMINGJOURNAL.ORG/2019/3/2, 10.22152/programming-journal.org/2019/3/2, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2019/3/2]
   Kanav S., 2017, MODELS, P300
   Ke X, 2008, RTCSA 2008: 14TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS - PROCEEDINGS, P153, DOI 10.1109/RTCSA.2008.32
   Ke X, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P199, DOI 10.1109/RTCSA.2007.29
   Latella D., 1999, IFIP TC6/WG6.1 Third International Conference on Formal Methods for Open Object-Based Distribution Systems (FMOODS), P331
   LEE EA, 1995, P IEEE, V83, P773, DOI 10.1109/5.381846
   Liu S., 2013, PROCEEDING 10 INT C, P331, DOI [10.1007/978-3-642-38613-8_23, DOI 10.1007/978-3-642-38613-8_23]
   Lohstroh Marten., 2019, Proceedings of the 56th Annual Design Automation Conference 2019 on - DAC'19, P1, DOI DOI 10.1145/3316781.3323469
   Lugou F., 2016, C MOD DRIV ENG SOFTW
   Mazzini S., 2016, EDUSYMP OSS4MDE MODE
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Molnar Vince, 2018, INT C SOFTW ENG
   Nuzzo P, 2015, P IEEE, V103, P2104, DOI 10.1109/JPROC.2015.2453253
   Panda PR, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P75, DOI 10.1109/ISSS.2001.957916
   Procter Sam, 2019, ACM SIGAda Ada Letters, V39, P63, DOI 10.1145/3379106.3379113
   Rapos E. J., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P962, DOI 10.1109/ICST.2012.205
   Reisig W, 2017, ASS COMPOSITION REAC
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 1994, REAL TIME OBJECT ORI
   Shlaer S, 1988, OBJECT ORIENTED SYST
   Simko G, 2013, LECT NOTES COMPUT SC, V8107, P471, DOI 10.1007/978-3-642-41533-3_29
   Sztipanovits J., 2014, OPENMETA MODEL AND C, P235
   Toth T., P 17 C FORM METH COM
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vörös A, 2018, LECT NOTES COMPUT SC, V10811, P460, DOI 10.1007/978-3-319-77935-5_31
   Vulgarakis A, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P478, DOI 10.1109/SEAA.2009.53
   WAGNER F, 1992, COMPUTER SYSTEMS AND SOFTWARE ENGINEERING, P226, DOI 10.1109/CMPEUR.1992.218505
   Zurowska K, 2014, THESIS
   Zurowska K, 2017, SOFTW SYST MODEL, V16, P393, DOI 10.1007/s10270-015-0484-y
NR 67
TC 11
Z9 11
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1483
EP 1517
DI 10.1007/s10270-020-00806-5
EA JUL 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000544569700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Maraee, A
   Sturm, A
AF Maraee, Azzam
   Sturm, Arnon
TI Imperative versus declarative constraint specification languages: a
   controlled experiment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling; Constraint language; OCL; Java; Evaluation; Controlled
   experiment; Imperative language; Declarative language
ID METRICS SUITE; UML; UNDERSTANDABILITY; IMPACT
AB Model-based software engineering gains further attention these days. To better support it, the use of constraint languages is important in order to bridge expressiveness gaps and eliminate ambiguity. Nevertheless, the use of model-based constraint languages, like the Object Constraint Language (OCL), is quite limited and the specification of constraints is left to the implementation stage. One option for these practices might be the misconception that model-based constraint languages are difficult to work with. In this paper, we examine the usages of representative constraint languages, namely OCL, for model-based constraint languages, and Java, for implementation-based constraint languages. In particular, we examine their usage in understanding and developing constraints. We evaluate these usages via a controlled experiment with 110 Information Systems Engineering undergraduate students. We found out that using OCL outperforms using Java for both understanding and developing constraints. Yet, the students had more confidence with Java. The results indicate that the aforementioned misconception is wrong and there is a need for further education regarding model-based constraints languages, so to get more practice and confidence.
C1 [Maraee, Azzam; Sturm, Arnon] Ben Gurion Univ Negev, Beer Sheva, Israel.
   [Maraee, Azzam] Achva Acad Coll, Kiryat Malakhi, Israel.
C3 Ben Gurion University
RP Sturm, A (corresponding author), Ben Gurion Univ Negev, Beer Sheva, Israel.
EM mari@cs.bgu.ac.il; sturm@bgu.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR AbuHassan A, 2019, SOFTW SYST MODEL, V18, P557, DOI 10.1007/s10270-016-0573-6
   Ali S, 2014, LECT NOTES COMPUT SC, V8769, P223, DOI 10.1007/978-3-319-11743-0_16
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2012, Model-based development and evolution of information systems a quality approach
   [Anonymous], Free Encyclopedia
   Balaban M., 2016, CEUR Workshop Proceedings, P57
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2004, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2004.1357823
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Burgueño L, 2018, COMPUT SCI EDUC, V28, P23, DOI 10.1080/08993408.2018.1462000
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIOREAN D, OBJECT CONSTRAINT LA
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   FAHLAND D, 2009, LECT NOTES BUSINESS, V29
   Genero M, 2008, DATA KNOWL ENG, V64, P534, DOI 10.1016/j.datak.2007.09.011
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jamil H, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P322, DOI 10.1109/SERVICES-I.2009.46
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krogstie J., 1996, Requirements Engineering, V1, P210, DOI 10.1007/BF01587101
   Li BL, 2007, CIS: 2007 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PROCEEDINGS, P1048, DOI 10.1109/CIS.2007.150
   Manso E, 2003, LECT NOTES COMPUT SC, V2681, P127
   Maraee A, 2019, LECT NOTES BUS INF P, V352, P329, DOI 10.1007/978-3-030-20618-5_22
   Misra S, 2018, IEEE ACCESS, V6, P8782, DOI 10.1109/ACCESS.2018.2791344
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   *OMG, OBJ CONSTR LANG VERS
   Pérez B, 2019, INFORM SYST, V81, P152, DOI 10.1016/j.is.2018.08.005
   Peters J, 2015, DES AUT CON, DOI 10.1145/2744769.2744775
   Pichler P, 2012, LECT NOTES BUS INF P, V99, P383
   Rull G, 2015, SOFTW SYST MODEL, V14, P953, DOI 10.1007/s10270-013-0350-8
   Rychkova I, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P99
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Storrle H., 2013, 13 INT WORKSH OCL MO, P83
   SUBRAMANIAM V, 2014, PRAGMATIC BOOKSHELF
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Yue T, 2016, SOFTW SYST MODEL, V15, P757, DOI 10.1007/s10270-014-0438-9
   Zugal S, 2012, J SOFTW-EVOL PROC, V24, P285, DOI 10.1002/smr.554
NR 42
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 27
EP 48
DI 10.1007/s10270-020-00796-4
EA MAY 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000533489500001
DA 2024-07-18
ER

PT J
AU Wortmann, A
   Barais, O
   Combemale, B
   Wimmer, M
AF Wortmann, Andreas
   Barais, Olivier
   Combemale, Benoit
   Wimmer, Manuel
TI Modeling languages in Industry 4.0: an extended systematic mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Industry 4.0; Modeling languages; Smart manufacturing
ID CYBER-PHYSICAL SYSTEMS; CHALLENGES; GENERATION; DESIGN; UML;
   REQUIREMENTS; MANAGEMENT; FRAMEWORK; IOT
AB Industry 4.0 integrates cyber-physical systems with the Internet of Things to optimize the complete value-added chain. Successfully applying Industry 4.0 requires the cooperation of various stakeholders from different domains. Domain-specific modeling languages promise to facilitate their involvement through leveraging (domain-specific) models to primary development artifacts. We aim to assess the use of modeling in Industry 4.0 through the lens of modeling languages in a broad sense. Based on an extensive literature review, we updated our systematic mapping study on modeling languages and modeling techniques used in Industry 4.0 (Wortmann et al., Conference on model-driven engineering languages and systems (MOD-ELS'17), IEEE, pp 281-291, 2017) to include publications until February 2018. Overall, the updated study considers 3344 candidate publications that were systematically investigated until 408 relevant publications were identified. Based on these, we developed an updated map of the research landscape on modeling languages and techniques for Industry 4.0. Research on modeling languages in Industry 4.0 focuses on contributing methods to solve the challenges of digital representation and integration. To this end, languages from systems engineering and knowledge representation are applied most often but rarely combined. There also is a gap between the communities researching and applying modeling languages for Industry 4.0 that originates from different perspectives on modeling and related standards. From the vantage point of modeling, Industry 4.0 is the combination of systems engineering, with cyber-physical systems, and knowledge engineering. Research currently is splintered along topics and communities and accelerating progress demands for multi-disciplinary, integrated research efforts.
C1 [Wortmann, Andreas] Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
   [Barais, Olivier] Univ Rennes 1, Rennes, France.
   [Combemale, Benoit] Univ Toulouse, Toulouse, France.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, Inst Business Informat Software Engn, Linz, Austria.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, CDL MINT, Linz, Austria.
C3 RWTH Aachen University; Universite de Rennes; Universite de Toulouse;
   Johannes Kepler University Linz; Johannes Kepler University Linz
RP Wortmann, A (corresponding author), Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
EM wortmann@se-rwth.de; Olivier.Barais@irisa.fr; benoit.combemale@irit.fr;
   manuel.wimmer@jku.at
RI Barais, Olivier/KIH-2583-2024; Rumpe, Bernhard/S-8216-2016
OI Barais, Olivier/0000-0002-4551-8562; Rumpe, Bernhard/0000-0002-2147-1966
FU Austrian Federal Ministry for Digital and Economic Affairs; National
   Foundation for Research, Technology and Development; FWF in the Project
   LEA-xDSML [P 30525-N31]
FX This work has been partially supported by the Austrian Federal Ministry
   for Digital and Economic Affairs, the National Foundation for Research,
   Technology and Development and by the FWF in the Project LEA-xDSML under
   the Grant Number P 30525-N31.
CR Abramovici M, 2007, FUTURE OF PRODUCT DEVELOPMENT, P665, DOI 10.1007/978-3-540-69820-3_64
   Aigner W., 2011, HUMAN COMPUTER INTER, DOI DOI 10.1007/978-0-85729-079-3
   Aleksic DS, 2012, INT J ADV MANUF TECH, V59, P397, DOI 10.1007/s00170-011-3466-4
   Alenazi M, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P51, DOI 10.1109/REW.2017.55
   Alexopoulos K, 2016, INT J COMPUT INTEG M, V29, P839, DOI 10.1080/0951192X.2015.1130257
   [Anonymous], 10 INT C DYN SYST CO
   [Anonymous], DEVOPS
   [Anonymous], OPEN AUTOM CONTROL S
   [Anonymous], P ISR ROB 2014 41 IN
   [Anonymous], MBEES
   [Anonymous], 2013 IEEE INT S ASS
   [Anonymous], IFIP INT C ADV PROD
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], EXPT SOFTWARE ENG
   [Anonymous], SERVICE COMPOSITION
   [Anonymous], SACI 2004 1 ROM HUNG
   [Anonymous], 2012, P ACM SIGMOD INT C M, DOI DOI 10.1145/2213836.2213838
   [Anonymous], 2017, LECT NOTES COMPUT SC, DOI DOI 10.1007/978-3-319-61240-9_15
   [Anonymous], J MOD PROJECT MANAG
   [Anonymous], J COMPUT INF SCI ENG
   [Anonymous], ASME 2013 INT MECH E
   [Anonymous], 14 INT C MOD INF TEC
   [Anonymous], 1991 SHIP PROD S P B
   [Anonymous], INT POLYM SCI TECHNO
   [Anonymous], 2011 INT C SYST SCI
   [Anonymous], 2011, INT J COMPUTER APPL
   [Anonymous], APPL COMPUT SCI
   [Anonymous], 2015 IEEE 20 C EM TE
   [Anonymous], INT WS CYBER PHYS PR
   [Anonymous], P ESREL 2015 C ZUR S
   [Anonymous], 25 INT ASS MAN TECHN
   [Anonymous], ECMS
   [Anonymous], EUR SEM WEB C
   [Anonymous], FALL SIM INT WORKSH
   [Anonymous], TECHNICAL REPORT
   Back MG, 2016, INT J NAV ARCH OCEAN, V8, P496, DOI 10.1016/j.ijnaoe.2016.05.005
   Backhaus J, 2017, J INTELL MANUF, V28, P1787, DOI 10.1007/s10845-015-1063-3
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Berardinelli G, 2016, INT SYM WIRELESS COM, P11, DOI 10.1109/ISWCS.2016.7600846
   Berardinelli L, 2016, AT-AUTOM, V64, P253, DOI 10.1515/auto-2015-0076
   Bergert M, 2007, IEEE INT C EMERG, P352
   Bergmann Soren., 2010, P 2010 SUMMER SIMULA, P545
   Bigvand P. G., 2015, 2015 IEEE 20 C EM TE, P1
   Boeker M, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-131
   Broy M, 2014, COMPUTER, V47, P70, DOI 10.1109/MC.2014.30
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Büscher C, 2016, PROC CIRP, V41, P478, DOI 10.1016/j.procir.2015.12.022
   Chavarría-Barrientos D, 2018, INT J PROD RES, V56, P584, DOI 10.1080/00207543.2017.1386333
   Chen DJ, 2015, IFAC PAPERSONLINE, V48, P29, DOI 10.1016/j.ifacol.2015.06.469
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   DEANE PhyllisM., 1979, The first industrial revolution, V2Aa
   Dias Neto A. C., 2007, P 1 ACM INT WORKSH E, P31
   Díaz-Madroñero M, 2017, APPL MATH MODEL, V52, P527, DOI 10.1016/j.apm.2017.08.009
   Divoux T, 1997, J INTELL MANUF, V8, P59, DOI 10.1023/A:1018544418379
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Dorofeev K, 2017, IEEE INT C EMERG
   Drath R, 2008, IEEE INT C EMERG, P616, DOI 10.1109/ETFA.2008.4638461
   Dregger J, 2016, 2016 IEEE INTERNATIONAL SYMPOSIUM ON ETHICS IN ENGINEERING, SCIENCE AND TECHNOLOGY (ETHICS)
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Feldmann S, 2015, IFAC PAPERSONLINE, V48, P916, DOI 10.1016/j.ifacol.2015.06.200
   Foradis T., 2017, Journal of Software Engineering and Applications, V10, P734
   Francalanza E, 2017, COMPUT IND, V84, P39, DOI 10.1016/j.compind.2016.08.001
   García MV, 2016, 2016 IEEE ECUADOR TECHNICAL CHAPTERS MEETING (ETCM)
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Gisbert JR, 2014, J NETW COMPUT APPL, V39, P233, DOI 10.1016/j.jnca.2013.07.014
   Givehchi O, 2017, IEEE T IND INFORM, V13, P3370, DOI 10.1109/TII.2017.2740434
   Göring M, 2012, IEEE IND ELEC, P6160, DOI 10.1109/IECON.2012.6389073
   Gruhn V., 2015, INT C INTELLIGENT SO, P388, DOI [10.1007/978-3-319-22689-7_30, DOI 10.1007/978-3-319-22689-7_30]
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harcuba O, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P3000, DOI 10.1109/ICIT.2015.7125541
   Hasan B., 2017, INT J MECH ENG SSRG, V4, P5, DOI DOI 10.14445/23488360/IJME-V4I11P102
   Heineck T, 2016, P BRAZ SYMP SOFTW, P151, DOI 10.1109/SBCARS.2016.12
   Hermann M, 2016, P ANN HICSS, P3928, DOI 10.1109/HICSS.2016.488
   Hummel B., 2008, P 2008 INT WORKSHOP, DOI DOI 10.1145/1370731.1370744
   Irisarri E, 2016, IEEE 21 INT C EMERGI, P1, DOI [DOI 10.1109/ETFA.2016.7733633, 10.1109/ETFA.2016.7733633]
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jung K, 2016, IFIP ADV INF COMM TE, V488, P705, DOI 10.1007/978-3-319-51133-7_83
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Kádár B, 2013, CIRP ANN-MANUF TECHN, V62, P443, DOI 10.1016/j.cirp.2013.03.045
   Kannengiesser U, 2013, 2013 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY - WORKSHOPS (WI-IAT), VOL 3, P83, DOI 10.1109/WI-IAT.2013.155
   Kern H, 2015, IADIS-INT J COMPUT S, V10, P47
   Khaleel H, 2017, IEEE SYST J, V11, P1412, DOI 10.1109/JSYST.2015.2469681
   Khan A., 2016, Proceedings of the First International Scientific Conference "Intelligent Information Technologies for Industry"(IITI'16), P15, DOI [10.1007/978-3-319-33609-12, DOI 10.1007/978-3-319-33609-12, 10.1007/978-3-319-33609-1_2, DOI 10.1007/978-3-319-33609-1_2]
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara., 2010, EASE'10 Proceedings of the 14th international conference on Evaluation and Assessment in Software Engineering, P25, DOI DOI 10.14236/EWIC/EASE2010.4
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kovalenko O, 2015, IEEE INT C EMERG
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Liao YX, 2017, INT J PROD RES, V55, P3609, DOI 10.1080/00207543.2017.1308576
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Loskyll M, 2012, FUTURE INTERNET, V4, P737, DOI 10.3390/fi4030737
   Lu Y, 2017, J IND INF INTEGR, V6, P1, DOI 10.1016/j.jii.2017.04.005
   Lütjen M, 2015, INT J ADV MANUF TECH, V81, P171, DOI 10.1007/s00170-015-7037-y
   Lütjen M, 2014, PROC TECH, V15, P303, DOI 10.1016/j.protcy.2014.09.084
   Ma ZD, 2017, 2017 2ND IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P153, DOI 10.1109/EuroSPW.2017.65
   Mätzler S, 2017, IEEE IND ELEC, P5453, DOI 10.1109/IECON.2017.8216944
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mazak A, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND ENGINEERING MANAGEMENT (IEEM), P1342, DOI 10.1109/IEEM.2015.7385866
   McMillan AJ, 2017, ADV MANUF-POLYM COMP, V3, P130, DOI 10.1080/20550340.2017.1389047
   Mechs S, 2013, IEEE IND ELEC, P6928, DOI 10.1109/IECON.2013.6700281
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mehmood A, 2013, INFORM SOFTWARE TECH, V55, P395, DOI 10.1016/j.infsof.2012.09.003
   Merkumians M. Melik, 2016, 2016 IEEE 21 INT C E, P1, DOI DOI 10.1109/ETFA.2016.7733729
   Gutierrez-Guerrero JM, 2017, ELEKTRON ELEKTROTECH, V23, P3, DOI [10.5755/j01.eie.23.3.18324, 10.5755/j01.eie.13.3.18324]
   Mokyr J., 1998, Storia dell'economia Mondiale, P219
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P5, DOI 10.1007/s10270-015-0469-x
   Negri E, 2017, COMPUT IND, V88, P19, DOI 10.1016/j.compind.2017.03.004
   Negri E, 2016, COMPUT IND, V81, P55, DOI 10.1016/j.compind.2015.10.009
   Onori M, 2008, INNOVATION IN MANUFACTURING NETWORKS, P205
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petrasch R, 2016, INT JOINT CONF COMP, P275
   Polacsek T, 2017, LECT NOTES COMPUT SC, V10650, P340, DOI 10.1007/978-3-319-69904-2_27
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   Prévost G, 2017, ENASE: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P38, DOI 10.5220/0006289700380046
   Priego R., 2015, IFAC - Papers Online, V48, P81, DOI 10.1016/j.ifacol.2015.08.112
   Ranky PG, 2003, INT J COMPUT INTEG M, V16, P255, DOI 10.1080/0951192031000089165
   Ren G, 2017, IEEE ACCESS, V5, P10882, DOI 10.1109/ACCESS.2017.2708127
   Runde Stefan, 2013, 2013 IEEE 18 C EMERG, P1, DOI 10.1109/ETFA.2013.6647962
   Sadigh BL, 2017, INT J COMPUT INTEG M, V30, P320, DOI 10.1080/0951192X.2016.1145811
   Sadlauer Alfred, 2017, International Journal of Agile Systems and Management, V10, P73
   Saraeian S, 2018, COMPUT STAND INTER, V57, P1, DOI 10.1016/j.csi.2017.10.003
   Sarigecili MI, 2017, J COMPUT INF SCI ENG, V17, DOI 10.1115/1.4035269
   Schubert D, 2016, PROCEEDINGS 2016 19TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING, P33, DOI 10.1109/CBSE.2016.10
   Sever M, 2018, RES SOC EDUC, P3
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soares A. L., 1995, Balanced Automation Systems. Architectures and Design Methods. Proceedings of the IEEE/ECLA/IFIP International Conference on Architectures and Design Methods for Balanced Automation Systems, 1995, P319
   Steimer C, 2017, PROC CIRP, V60, P163, DOI 10.1016/j.procir.2017.01.036
   Strang D, 2014, P WORLD C ENG COMP S, V2
   Sungur CT, 2016, PROC CIRP, V41, P147, DOI 10.1016/j.procir.2015.12.076
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Takahashi K, 2017, IEEE INT CON AUTO SC, P964, DOI 10.1109/COASE.2017.8256228
   Thramboulidis K, 2016, COMPUT IND, V82, P259, DOI 10.1016/j.compind.2016.05.010
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Trappey AJC, 2016, IEEE ACCESS, V4, P7356, DOI 10.1109/ACCESS.2016.2619360
   van Gerner H.J., 2016, P PROJ SHOWC STAF 20, P1
   van Stein B, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE & COMPUTATIONAL INTELLIGENCE (CSCI), P459, DOI [10.1109/CSCI.2016.92, 10.1109/CSCI.2016.0093]
   Vogel-Heuser B., 2016, Journal of Software Engineering and Applications, V9, P1, DOI [10.4236/jsea.2016.91001, DOI 10.4236/JSEA.2016.91001]
   Vogel-Heuser B, 2016, IEEE T AUTOM SCI ENG, V13, P411, DOI 10.1109/TASE.2016.2523639
   Walch M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AGENTS (ICA), P84, DOI 10.1109/AGENTS.2017.8015307
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Wortmann A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P281, DOI 10.1109/MODELS.2017.14
   Xu XW, 2006, ROBOT CIM-INT MANUF, V22, P144, DOI 10.1016/j.rcim.2005.02.009
   Xu ZW, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON AUTOMATION AND LOGISTICS, VOLS 1-6, P2925, DOI 10.1109/ICAL.2008.4636677
   Yoo EH, 2016, EARTH INTERACT, V20, P1, DOI 10.1175/EI-D-15-0003.1
   Zadeh NS, 2017, MOD SIMUL ENG, V2017, DOI 10.1155/2017/9814179
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
   Zhang QC, 2017, INT J ADV MANUF TECH, V88, P1845, DOI 10.1007/s00170-016-8872-1
   Zhao WB, 2012, IFIP ADV INF COMM TE, V388, P202
NR 152
TC 73
Z9 73
U1 0
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 67
EP 94
DI 10.1007/s10270-019-00757-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900006
DA 2024-07-18
ER

PT J
AU Balaban, M
   Maraee, A
AF Balaban, Mira
   Maraee, Azzam
TI Removing redundant multiplicity constraints in UML class models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Class models; MBSE; Formal semantics; Multiplicity constraints;
   Correctness; Quality; Redundancy; Verification; Boundary tight;
   Tightening methods; Model optimization; Multiplicity tightening;
   Tightening rules
ID SATISFIABILITY; DIAGRAMS; SCHEMAS
AB Models are central for the development and management of complex systems. In order to be useful along the entire life cycle of software they must provide reliable support and enable automatic management. For that purpose, they must be precise, consistent, correct, and be subject to stringent quality verification and control criteria. Model automation calls for deep formal study of models, so that tools can provide inclusive support to users. This paper deals with optimization of multiplicity constraints in Class Models, i.e., models that provide abstraction on the static structure of software. The paper introduces an in-depth analysis of redundancy of multiplicity constraints, i.e., multiplicities that cannot be realized in any legal instance. The analysis includes: (1) a formal study of gaps of redundancies in multiplicity intervals; (2) algorithmic and rule-based methods for removing redundancies in multiplicity constraints; (3) a formal study of completeness of the algorithmic procedures, with respect to most UML class model constraints. The algorithmic procedures are implemented in our FiniteSatUSE tool. To the best of our knowledge, there is no previous study of properties of multiplicity redundancy, no completeness analysis of tightening methods, and no systematic study of these features with respect to most UML class model constraints.
C1 [Balaban, Mira; Maraee, Azzam] Ben Gurion Univ Negev, Comp Sci Dept, Beer Sheva, Israel.
C3 Ben Gurion University
RP Maraee, A (corresponding author), Ben Gurion Univ Negev, Comp Sci Dept, Beer Sheva, Israel.
EM mira@cs.bgu.ac.il; mari@cs.bgu.ac.il
RI Balaban, Mira/AAD-2603-2019
CR Alanen M, 2008, SOFTW SYST MODEL, V7, P103, DOI 10.1007/s10270-007-0049-9
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Angelica Ibanez-Garcia Y., 2012, CEUR WORKSHOP P
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], 2017, SEM FDN SUBS EX UML
   Artale A., 2010, P 29 INT C CONC MOD
   Baader F., 2003, DESCRIPTION LOGIC HD
   Balaban M., 2015, SOFTW SYST MODEL SOS, P1
   Balaban M., 2018, UML CLASS MODEL ABST
   Balaban M, 2013, LECT NOTES COMPUT SC, V8107, P454, DOI 10.1007/978-3-642-41533-3_28
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Balaban M, 2011, LECT NOTES COMPUT SC, V6981, P517, DOI 10.1007/978-3-642-24485-8_38
   Balaban M, 2010, INT J INF SYST MODEL, V1, P24, DOI 10.4018/jismd.2010100102
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   BGU Modeling Group, 2013, BGU MODELING GROUP F
   BGU Modeling Group, 2014, UML CLASS DIAGR PATT
   Boufares F, 2004, INFORM SCIENCES, V163, P263, DOI 10.1016/j.ins.2003.06.015
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Calì A, 2012, LECT NOTES COMPUT SC, V7213, P1, DOI 10.1007/978-3-642-28729-9_1
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Calvanese D, 1998, SPRING INT SER ENG C, P229
   CALVANESE D, 1994, 10 IEEE INT C DAT EN
   Costal D, 2006, LECT NOTES COMPUT SC, V4215, P513
   Costal D, 2011, LECT NOTES COMPUT SC, V6998, P189, DOI 10.1007/978-3-642-24606-7_15
   Diskin Z, 2008, LECT NOTES BUS INF P, V11, P336
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   Faitelson D, 2017, PROC INT CONF SOFTW, P735, DOI 10.1109/ICSE.2017.73
   Feinerer I, 2014, SOFTW SYST MODEL, V13, P1167, DOI 10.1007/s10270-012-0294-4
   Feinerer I, 2011, LECT NOTES COMPUT SC, V6981, P379, DOI 10.1007/978-3-642-24485-8_27
   Formica A, 2002, IEEE T KNOWL DATA EN, V14, P123, DOI 10.1109/69.979977
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   Hamann L, 2013, LECT NOTES COMPUT SC, V8107, P488, DOI 10.1007/978-3-642-41533-3_30
   Hartmann S, 2001, ANN MATH ARTIF INTEL, V33, P253, DOI 10.1023/A:1013133428451
   Hartmann S., 2001, LNCS, P241
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kaneiwa K, 2010, THEOR COMPUT SCI, V411, P301, DOI 10.1016/j.tcs.2009.04.030
   Kleppe A., 2008, ELECT COMMUNICATIONS, V10
   KUHLMANN M, 2011, TOOLS EUROPE 2011 OB, V6705, P290
   LENZERINI M, 1990, INFORM SYST, V15, P453, DOI 10.1016/0306-4379(90)90048-T
   Lutz C, 2005, INFORM COMPUT, V199, P132, DOI 10.1016/j.ic.2004.11.002
   Makarenkov V., 2009, MODEVVA 09, P1
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Maraee A., 2008, MCCM08
   Maraee A., 2012, MODELS 2012
   Maraee A., 2012, THESIS
   Maraee A, 2014, LECT NOTES COMPUT SC, V8767, P235, DOI 10.1007/978-3-319-11653-2_15
   Maraee A, 2009, MBSE: 2009 INTERNATIONAL CONFERENCE ON MODEL-BASED SYSTEMS ENGINEERING, P1, DOI 10.1109/MBSE.2009.5031714
   OMG, 2017, ACT LANG FDN UML SPE
   OMG, 2011, UML 2 4 SUP SPEC
   OMG, 2017, UML 2 5 1
   OMG, 2012, OMG Object Constraint Language (OCL), Version 2.3.1
   Oriol X, 2017, J SYST SOFTWARE, V128, P130, DOI 10.1016/j.jss.2017.03.015
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Rosati R, 2008, LECT NOTES COMPUT SC, V5021, P215
   SATOH K, 2006, 21 IEEE ACM INT C AU, P277
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Shoval P, 2004, REQUIR ENG, V9, P217, DOI 10.1007/s00766-004-0201-9
   Shoval P, 2003, LECT NOTES COMPUT SC, V2784, P264
   Soeken M., 2010, P C DES AUT TEST EUR, P1341
   Thalheim Bernhard., 2000, ENTITY RELATIONSHIP
   Wahler M, 2010, SOFTW SYST MODEL, V9, P225, DOI 10.1007/s10270-009-0123-6
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 67
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2717
EP 2751
DI 10.1007/s10270-018-0696-z
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900014
DA 2024-07-18
ER

PT J
AU Gamboa, M
   Syriani, E
AF Gamboa, Miguel
   Syriani, Eugene
TI Improving user productivity in modeling tools by explicitly modeling
   workflows
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Domain-specific language; Enactment; Model
   transformation; User study
AB Software engineering aims to create software tools that allow people to solve particular problems in an easy and efficient way. In this regard, model-driven engineering (MDE) enables to generate software tools, by systematically modeling and transforming models. To do so, MDE relies on language workbenches: Integrated Development Environment for engineering modeling languages, designing models, executing them, and verifying them. However, the usability of these tools is far from efficient. Common MDE activities, such as creating a domain-specific language or developing a model transformation, are non-trivial and often require repetitive tasks. This results in unnecessary risings of development time. The goal of this paper is to increase the productivity of modelers in their daily activities by automating the tasks performed in current MDE tools. We propose an MDE-based solution where the user defines a reusable workflow that can be parameterized at run-time and executed. We have implemented workflows in the graphical modeling tool AToMPM. An empirical evaluation shows that the users' productivity is significantly improved.
C1 [Gamboa, Miguel] Univ Montreal, Montreal, PQ, Canada.
   [Syriani, Eugene] Univ Montreal, Comp Sci, Montreal, PQ, Canada.
C3 Universite de Montreal; Universite de Montreal
RP Syriani, E (corresponding author), Univ Montreal, Comp Sci, Montreal, PQ, Canada.
EM miguelgamboag@gmail.com; syriani@iro.umontreal.ca
RI Syriani, Eugene/AAI-5036-2020
OI Syriani, Eugene/0000-0001-6527-1651
CR Alajrami S., 2014, MODEL DRIVEN ENG CLO, P6
   [Anonymous], 2007, OASIS WEB SERVICES B
   [Anonymous], 2017, ECLIPSE MODELING WOR
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2012, INT MASTER CLASS MOD
   Buzan T., 2006, The Ultimate Book of Mind Maps
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Conover WJ, 1998, PRACTICAL NONPARAMET, P3
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gamboa M., 2016, THESIS
   Gamboa M. A., 2017, CCIS, V692, P25
   Gamboa MA, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P123
   Heidenreich F, 2013, LNCS BOOK SECTION MO, P322
   Jacob F., 2012, WORKSH DOM SPEC MOD, P61
   Johnson R., 1996, EUROPLOP
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Kolovos DimitriosS., 2008, P WORKSHOP MODELS SO, P69
   Leblebici E, 2014, LNCS, P138
   Lecerof A, 1998, IEEE T SOFTWARE ENG, V24, P863, DOI 10.1109/32.729686
   Ledeczi, 2001, WORKSH INT SIGN PROC, V17, P1
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Lucio L, 2014, MODEL TRANSFORMATION, P1
   Mahmud M, LNCS, V2013, P205
   Martin D, 2008, IEEE INT ENTERP DIST, P127, DOI 10.1109/EDOC.2008.22
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Object Management Group, 2008, OMG SOFTW SYST PROC
   Object Management Group, 2012, 195052 ISOIEC OMG
   Rivera J. E., 2009, 14 JORN ING SOFTW BA, P158
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Steinberg D, 2008, ECLIPSE MODELING FRA, P2
   Syriani E., 2012, 2012 IEEE Model-Driven Requirements Engineering Workshop (MoDRE 2012), P1, DOI 10.1109/MoDRE.2012.6360083
   Syriani E., 2011, J SOFTWARE SYSTEMS M, V12, P387, DOI DOI 10.1007/s10270-011-0205-0
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Syriani E, LNCS, V2010, P199
   Syriani E, 2015, SOFTW SYST MODEL, V14, P1215, DOI 10.1007/s10270-013-0370-4
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   WMC, 2005, WFMCTC1025 WMC
   WMC, 1999, WFMCTC1011 WMC
NR 49
TC 5
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2441
EP 2463
DI 10.1007/s10270-018-0678-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900004
DA 2024-07-18
ER

PT J
AU Bruneliere, H
   Burger, E
   Cabot, J
   Wimmer, M
AF Bruneliere, Hugo
   Burger, Erik
   Cabot, Jordi
   Wimmer, Manuel
TI A feature-based survey of model view approaches
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling; Viewpoint; View; Model; Survey
ID FRAMEWORK; SYSTEMS
AB When dealing with complex systems, information is very often fragmented across many different models expressed within a variety of (modeling) languages. To provide the relevant information in an appropriate way to different kinds of stakeholders, (parts of) such models have to be combined and potentially revamped by focusing on concerns of particular interest for them. Thus, mechanisms to define and compute views over models are highly needed. Several approaches have already been proposed to provide (semi)automated support for dealing with such model views. This paper provides a detailed overview of the current state of the art in this area. To achieve this, we relied on our own experiences of designing and applying such solutions in order to conduct a literature review on this topic. As a result, we discuss the main capabilities of existing approaches and propose a corresponding research agenda. We notably contribute a feature model describing what we believe to be the most important characteristics of the support for views on models. We expect this work to be helpful to both current and potential future users and developers of model view techniques, as well as to any person generally interested in model-based software and systems engineering.
C1 [Bruneliere, Hugo] INRIA, IMT Atlantique, AtlanModels Team, Nantes, France.
   [Bruneliere, Hugo] IMT Atlantique Bretagne Pays Loire, LS2N, Nantes, France.
   [Burger, Erik] Karlsruhe Inst Technol, Inst Program Struct & Data Org, Karlsruhe, Germany.
   [Cabot, Jordi] Open Univ Catalonia, ICREA, Barcelona, Spain.
   [Wimmer, Manuel] TU Wien, CDL MINT, Vienna, Austria.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Inria; IMT - Institut
   Mines-Telecom; IMT Atlantique; Helmholtz Association; Karlsruhe
   Institute of Technology; UOC Universitat Oberta de Catalunya; ICREA;
   Technische Universitat Wien
RP Bruneliere, H (corresponding author), INRIA, IMT Atlantique, AtlanModels Team, Nantes, France.; Bruneliere, H (corresponding author), IMT Atlantique Bretagne Pays Loire, LS2N, Nantes, France.
EM hugo.bruneliere@imt-atlantique.fr; burger@kit.edu;
   jordi.cabot@icrea.cat; wimmer@big.tuwien.ac.at
RI Cabot, Jordi/P-7723-2015; Burger, Erik/KVZ-2777-2024
FU MoNoGe national collaborative project (French FUI) [15]; Electronic
   Component Systems for European Leadership (ECSEL) Joint Undertaking &
   the European Union's Horizon 2020 research/innovation program [737494];
   Spanish government [TIN2016-75944-R]; Austrian Federal Ministry of
   Science, Research and Economy (BMWFW); National Foundation for Research,
   Technology and Development
FX This work has been partially funded by the MoNoGe national collaborative
   project (French FUI #15), the Electronic Component Systems for European
   Leadership (ECSEL) Joint Undertaking & the European Union's Horizon 2020
   research/innovation program under grant agreement No. 737494 (MegaM@Rt2
   project), the Spanish government (TIN2016-75944-R project), the Austrian
   Federal Ministry of Science, Research and Economy (BMWFW) and National
   Foundation for Research, Technology and Development. We also would like
   to thank the various academics and industrials that provided valuable
   feedback to us on our descriptions of their respective solutions.
CR Alanen M, 2008, SOFTW SYST MODEL, V7, P103, DOI 10.1007/s10270-007-0049-9
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Anjorin A, 2014, LECT NOTES COMPUT SC, V8569, P1
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], 2015, P PROJ SHOWC STAF
   [Anonymous], 2011, 420102011 ISOIECIEEE
   Anwar A, 2010, J OBJECT TECHNOL, V9, P89, DOI 10.5381/jot.2010.9.2.a1
   Armesto N, 2013, J HIGH ENERGY PHYS, DOI 10.1007/JHEP12(2013)052
   Atkinson C, 2008, LECT NOTES COMPUT SC, V5153, P54
   Atkinson C, 2010, COMM COM INF SC, V69, P206
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Bernstein P.A., 2007, SIGMOD 07, P1, DOI DOI 10.1145/1247480.1247482
   Beyhl T, 2016, LECT NOTES COMPUT SC, V9761, P170, DOI 10.1007/978-3-319-40530-8_11
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4066, P346
   Breu R., 1997, UML WORKSH, P93
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9381, P317, DOI 10.1007/978-3-319-25264-3_23
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9153, P62, DOI 10.1007/978-3-319-21151-0_5
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Burger E., 2014, SOFTWARE SYSTEMS MOD, V15, P472
   Burger E., 2014, 1 KARLSR I TECHN FAC
   Burger E, 2016, LECT NOTES COMPUT SC, V9765, P55, DOI 10.1007/978-3-319-42064-6_4
   Chechik M, 2012, INNOV SYST SOFTW ENG, V8, P3, DOI 10.1007/s11334-011-0155-2
   Cicchetti A., 2011, ECEASST, V50, DOI [10.14279/tuj.eceasst.50.738, DOI 10.14279/TUJ.ECEASST.50.738]
   Combemale B, 2014, COMPUTER, V47, P68, DOI 10.1109/MC.2014.147
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Debreceni Csaba., 2014, Proceedings of the 2nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling, P31, DOI [DOI 10.1145/2631675.2631677, 10.1145/2631675.2631677]
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Engels G, 1997, INT J SOFTW ENG KNOW, V7, P457, DOI 10.1142/S0218194097000266
   Fahland D, 2013, IEEE INT CONF AUTOM, P443, DOI 10.1109/ASE.2013.6693102
   Feldmann Stefan, 2016, 2016 IEEE International Conference on Automation Science and Engineering (CASE), P1120, DOI 10.1109/COASE.2016.7743530
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Goldschmidt T., 2012, P MOD 2012 GI
   Golra FR, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P206, DOI 10.1145/2892664.2892701
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hilliard R., 2011, METAMODELS 42010
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Jakob J, 2006, LECT NOTES COMPUT SC, V4178, P321
   Jakob J, 2008, ELECTRON NOTES THEOR, V211, P181, DOI 10.1016/j.entcs.2008.04.040
   Jalali A, 2012, EC EASST
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kitchenham B., 2007, Joint Report
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6142, P138, DOI 10.1007/978-3-642-13688-7_10
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Kusel A., 2013, P WORKSH MOD EV COL, P4
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.1.a8
   Langlois B., 2014, P 14 WORKSHOP DOMAIN, P19
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Linington P. F., 1995, Open Distributed Processing Experiences with Distributed Environments. Proceedings of the Third IFIP TC 6/WG 6.1 International Conference on Open Distributed Processing, P15
   Linnington P, 2011, BUILDING ENTERPRISE
   Mayol E., 1999, Advances in Conceptual Modeling. ER'99 Workshop on Evolution and Change in Data Management, Reverse Engineering in Information Systems, and the World Wide Web and Conceptual Modeling. Proceedings (Lecture Notes in Computer Science Vol.1727), P62
   Melnik Sergey., 2005, SIGMOD C, P167
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Moreno Nathalie., 2008, Human-Computer Interaction Series, P353, DOI DOI 10.1007/978-1-84628-923-1_12
   Nassar M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/ASE.2003.1240341
   Noyrit Florian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P20, DOI 10.1007/978-3-642-33666-9_3
   Palpanas T., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P802
   Rubin B, 2008, MIDDLE E FOCUS, P7
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Semeráth O, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P306, DOI 10.1145/2976767.2976788
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vallecillo A, 2010, LECT NOTES COMPUT SC, V6138, P305, DOI 10.1007/978-3-642-13595-8_24
   Vangheluwe H., 2016, JOINT P DOCT S PROJ, P40
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wood-Harper A, 1985, COMPUTER SCI TEXTS
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zito A, 2006, LECT NOTES COMPUT SC, V4199, P185
NR 68
TC 24
Z9 24
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1931
EP 1952
DI 10.1007/s10270-017-0622-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100020
DA 2024-07-18
ER

PT J
AU Misbhauddin, M
   Alshayeb, M
AF Misbhauddin, Mohammed
   Alshayeb, Mohammad
TI An integrated metamodel-based approach to software model refactoring
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Refactoring; Metamodel; UML; Model refactoring
ID UML; METRICS; IMPROVEMENT; FRAMEWORK
AB Software refactoring is the process of changing a software system in a manner that does not alter its external behavior and yet improving its internal structure. Model-driven architecture and the popularity of the UML enabled the application of refactoring at model level, which was earlier applied to software code. In this paper, we propose a multi-view integrated approach to model-driven refactoring using UML models. We selected a single model from each UML view at metamodel level to construct an integrated metamodel. We selected class diagram to represent the structural view, sequence diagram to represent the behavioral view and use case diagram to represent the functional view. We validated the proposed approach by comparing integrated refactoring approach with refactoring applied to models individually in terms of quality improvement through UML model metrics. Our results indicate that more bad smell instances can be detected using the integrated approach rather than the individual refactoring approach.
C1 [Misbhauddin, Mohammed] King Faisal Univ, Informat Syst Dept, Al Hasa 31982, Saudi Arabia.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Faisal University; King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM mmisbhauddin@kfu.edu.sa; alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Misbhauddin, Mohammed/0000-0002-4940-575X
FU King Abdul Aziz City for Science & Technology (KACST); Deanship of
   Scientific Research of the King Fahd University of Petroleum and
   Minerals
FX This research work is partially supported by King Abdul Aziz City for
   Science & Technology (KACST) as well as the Deanship of Scientific
   Research of the King Fahd University of Petroleum and Minerals.
CR Akiyama M, 2011, LECT NOTES COMPUT SC, V6981, P455, DOI 10.1007/978-3-642-24485-8_33
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   [Anonymous], MODEL VALIDATION APP
   [Anonymous], 2011, J SYST SOFTW
   [Anonymous], 6 ECOOP WORKSH QUANT
   [Anonymous], 2011, P 2011 C CTR ADV STU
   [Anonymous], 2011, Unified modeling language (UML) infrastructure specification
   Astels D., 2002, P INT C EXTREME PROG, P67
   Ballis D, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P51, DOI 10.1109/ITNG.2008.227
   BATINI C, 1986, COMPUT SURV, V18, P323, DOI 10.1145/27633.27634
   Ben Salem R, 2008, COMPUT IND, V59, P682, DOI 10.1016/j.compind.2007.12.013
   Berndl D., 2007, SENSORIA SOFTWARE EN
   Bittner K., 2003, USE CASE MODELING
   Boger M, 2003, LECT NOTES COMPUT SC, V2591, P366
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Bragança A, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P123
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Chaouni S.B., 2011, INT J COMPUTER SCI I, V8, P1
   Chapman M., 2003, SUPPLY CHAIN MANAGEM
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ciemniewska A, 2007, LECT NOTES COMPUT SC, V4439, P424
   da Silva PP, 2003, IEEE SOFTWARE, V20, P62, DOI 10.1109/MS.2003.1207457
   Derrick J, 2010, SCI COMPUT PROGRAM, V75, P192, DOI 10.1016/j.scico.2009.11.004
   Dobrzanski L., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1273, DOI 10.1145/1141277.1141574
   Egyed A., 1999, P 2 INT C UN MOD LAN
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Enckevort T.v., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P635, DOI DOI 10.1145/1639950.1639959
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Fliedl G, 2007, DATA KNOWL ENG, V61, P433, DOI 10.1016/j.datak.2006.06.012
   Fondement F., 2004, 3 INT WORKSH SOFTW M
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 1998, DISTRIBUTED COMPUTIN
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   France R, 2001, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2001.972751
   Furche T., 2004, REASONING WEB RULES
   Genero M, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2002.1166940
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hoffmann V, 2009, J OBJECT TECHNOL, V8, P85, DOI 10.5381/jot.2009.8.3.a2
   Jalbani AA, 2009, LECT NOTES COMPUT SC, V5719, P63, DOI 10.1007/978-3-642-04554-7_5
   Katic M., 2009, 4 INT C INFORM TECHN, P1
   Khan MU, 2014, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2014.94
   Kim DK, 2007, J VISUAL LANG COMPUT, V18, P560, DOI 10.1016/j.jvlc.2007.02.009
   Kim DK, 2008, IEEE HI ASS SYS ENGR, P293, DOI 10.1109/HASE.2008.10
   KNIESEL G, 1991, PROGRAM, V52, P9, DOI DOI 10.1016/j.scico.2004.03.002
   Koch N., 2007, SENSORIA SOFTWARE EN
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Lange CFJ, 2007, LECT NOTES COMPUT SC, V4364, P211
   Lange CFJ, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P7
   Lano K., 2009, UML 2 SEMANTICS APPL
   Lilly S, 1999, P TECHN OBJ OR LANG
   Liu H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269
   Llano MT, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P39, DOI 10.1109/ICSEA.2009.15
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mantz F., 2009, THESIS
   Meng S, 2008, INT CONF QUAL SOFTW, P17, DOI 10.1109/QSIC.2008.13
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2008, MODEL DRIVEN SOFTWAR
   Mens T., 2003, ELECTRON NOTES THEOR, V82, P483, DOI [10.1016/S1571-0661(05)82624-6, DOI 10.1016/S1571-0661(05)82624-6]
   Mens T., 2007, INT WORKSH OBJ OR RE
   Miller I., 2003, MDA GUIDE VERSION 1
   Misbhauddin M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P129, DOI 10.1109/ICSEA.2010.27
   Misbhauddin M., 2012, AFR C SOFTW ENG APPL
   Misbhauddin M, 2015, SOFTW SYST MODEL, V14, P813, DOI 10.1007/s10270-013-0333-9
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   MOHA N, 2009, IEEE T SOFTWARE ENG, V36, P20
   Mohamed M, 2009, J OBJECT TECHNOL, V8, P143, DOI 10.5381/jot.2009.8.6.a3
   Muskens J, 2004, EUROMICRO CONF PROC, P372, DOI 10.1109/EURMIC.2004.1333392
   Nunes NJ, 2010, LECT NOTES COMPUT SC, V5963, P131, DOI 10.1007/978-3-642-11797-8_11
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Opdyke William F., 1992, THESIS
   Philipps und J., 2001, Tenth OOPSLA Workshop on Behavioral Semantics. Northeastern University. 2001, P187
   Ramalho F, 2003, J UNIVERS COMPUT SCI, V9, P956
   Regnell B, 1999, THESIS
   Ren S., 2004, P 6 INT C ENTERPRISE, P173
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Ruhroth T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P360, DOI 10.1109/SEAA.2009.39
   Rui K., 2003, P 25 AUSTRALASIAN CO, P301
   Rui K., 2007, THESIS
   Seidl R., 2010, MODELING METRICS UML
   Selonen P., 2000, P OOPSLA 2000 WORKSH
   Sinha A, 2009, I C DEPEND SYS NETWO, P327, DOI 10.1109/DSN.2009.5270320
   Somé SS, 2009, J OBJECT TECHNOL, V8, P87, DOI 10.5381/jot.2009.8.7.a2
   Stolc M, 2010, 2010 IEEE 8TH INTERNATIONAL SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS, P77
   Sun WL, 2010, J UNIVERS COMPUT SCI, V16, P2435
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Taentzer G., 2005, INT WORKSH MOD TRANS
   Tchertchago A., 2002, SOFTWARE ENG APPL
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Wake W. C., 2003, OBJECT TECHNOLOGY SE
   Warmer Jos., 2004, OBJECT CONSTRAINT LA
   Wust J., 2016, SDMETRICS
   Xu J, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P484
   Yu W, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P328, DOI 10.1109/ASE.2004.1342757
   Yue T., 2010, AUTOMATICALLY DERIVI
NR 99
TC 6
Z9 7
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2013
EP 2050
DI 10.1007/s10270-017-0628-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100023
DA 2024-07-18
ER

PT J
AU de Murillas, EGL
   Reijers, HA
   van der Aalst, WMP
AF de Murillas, Eduardo Gonzalez Lopez
   Reijers, Hajo A.
   van der Aalst, Wil M. P.
TI Connecting databases with process mining: a meta model and toolset
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Process mining; Database; Data schema; Meta model; Event extraction
AB Process mining techniques require event logs which, in many cases, are obtained from databases. Obtaining these event logs is not a trivial task and requires substantial domain knowledge. In addition, an extracted event log provides only a single view on the database. To change our view, e.g., to focus on another business process and generate another event log, it is necessary to go back to the source of data. This paper proposes a meta model to integrate both process and data perspectives, relating one to the other. It can be used to generate different views from the database at any moment in a highly flexible way. This approach decouples the data extraction from the application of analysis techniques, enabling the application of process mining in different contexts.
C1 [de Murillas, Eduardo Gonzalez Lopez; Reijers, Hajo A.; van der Aalst, Wil M. P.] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Reijers, Hajo A.] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
   [van der Aalst, Wil M. P.] Rhein Westfal TH Aachen, Dept Comp Sci, Aachen, Germany.
C3 Eindhoven University of Technology; Vrije Universiteit Amsterdam; RWTH
   Aachen University
RP de Murillas, EGL (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
EM e.gonzalez@tue.nl; h.a.reijers@tue.nl; w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940; Gonzalez Lopez de Murillas,
   Eduardo/0000-0002-6340-6388; Reijers, Hajo/0000-0001-9634-5852
CR [Anonymous], 2016, 1849-2016, DOI [10.1109/IEEESTD.2016.7740858, DOI 10.1109/IEEESTD.2016.7740858]
   [Anonymous], 2001, P INT C EL COMM RES
   BUIJS J, 2010, THESIS
   de Murillas EGL, 2016, LECT NOTES BUS INF P, V248, P231, DOI 10.1007/978-3-319-39429-9_15
   Eder J, 2002, LECT NOTES COMPUT SC, V2480, P1
   Gonzalez-Lopez de Murillas E., 2015, BUSINESS PROCESS MAN
   Herzberg N, 2015, DATA KNOWL ENG, V98, P144, DOI 10.1016/j.datak.2015.07.008
   Ingvaldsen JE, 2008, LECT NOTES COMPUT SC, V4928, P30
   Lu XX, 2015, IEEE T SERV COMPUT, V8, P861, DOI 10.1109/TSC.2015.2474358
   Mahendrawathi E., 2015, P LECT NOTES BUSINES, P115, DOI DOI 10.1007/978-3-319-19509-4_9
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Mueller-Wickop N, 2013, LECT NOTES COMPUT SC, V7939, P105
   Neumuth T, 2008, COMP MED SY, P230, DOI 10.1109/CBMS.2008.41
   Niedrite L., 2007, P 6 C 6 WSEAS INT C, V6, P243
   Popova V, 2015, INT J COOP INF SYST, V24, DOI 10.1142/S021884301550001X
   Rosemann M., 1998, Australian Journal of Information Systems, V6, P103
   Sismanis Y., 2006, PROC INT C VERY LARG, P691
   Stolfa J., 2014, PROC 4 INT C INNOV B, V237, P61, DOI [10.1007/978-3-319-01781-5_6, DOI 10.1007/978-3-319-01781-5_6]
   van der Aalst W.M.P., 2015, BPM-Driving innovation in a digital world, P105, DOI 10.1007/978-3-319-14430-6_8
   van der Aalst WMP, 2013, LECT NOTES BUS INF P, V159, P1
   van Dongen B. F., 2005, EMOI-INTEROP, V160, P30
   vanderAalst WM, 2015, Enterprise, business-process and information systems modeling, P102, DOI [DOI 10.1007/978-3-319-19237-6_7, 10.1007/978-3-319-19237-6_7]
   Vogelgesang T., 2015, INT C BUS PROC MAN, P167
   Vogelgesang T., 2016, CAISE 2016 FORUM, V1612, P169
   Vogelgesang T., 2015, P 5 INT S DAT DRIV P, P64
   Zhang M, 2010, PROC VLDB ENDOW, V3, P805, DOI 10.14778/1920841.1920944
   zur Muehlen M., 2000, Proceedings of the 33rd Annual Hawaii International Conference on System Sciences
   zur Muehlen M, 2001, WORKFLOW HDB 2001 WO, P61
   Zur Muhlen M., 1999, P 32 ANN HAW INT C S
NR 29
TC 30
Z9 32
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1209
EP 1247
DI 10.1007/s10270-018-0664-7
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400023
OA hybrid
DA 2024-07-18
ER

PT J
AU Oakes, BJ
   Troya, J
   Lúcio, L
   Wimmer, M
AF Oakes, Bentley James
   Troya, Javier
   Lucio, Levi
   Wimmer, Manuel
TI Full contract verification for ATL using symbolic execution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Model transformation; ATL; Formal verification; Symbolic execution;
   Contracts; Pre-/post-conditions
ID MODEL; FRAMEWORK
AB The Atlas Transformation Language (ATL) is currently one of the most used model transformation languages and has become a de facto standard in model-driven engineering for implementing model transformations. At the same time, it is understood by the community that enhancing methods for exhaustively verifying such transformations allows for a more widespread adoption of model-driven engineering in industry. A variety of proposals for the verification of ATL transformations have arisen in the past few years. However, the majority of these techniques are either based on non-exhaustive testing or on proof methods that require human assistance and/or are not complete. In this paper, we describe our method for statically verifying the declarative subset of ATL model transformations. This verification is performed by translating the transformation (including features like filters, OCL expressions, and lazy rules) into our model transformation language DSLTrans. As we handle only the declarative portion of ATL, and DSLTrans is Turing-incomplete, this reduction in expressivity allows us to use a symbolic-execution approach to generate representations of all possible input models to the transformation. We then verify pre-/post-condition contracts on these representations, which in turn verifies the transformation itself. The technique we present in this paper is exhaustive for the subset of declarative ATL model transformations. This means that if the prover indicates a contract holds on a transformation, then the contract's pre-/post-condition pair will be true for any input model for that transformation. We demonstrate and explore the applicability of our technique by studying several relatively large and complex ATL model transformations, including a model transformation developed in collaboration with our industrial partner. As well, we present our 'slicing' technique. This technique selects only those rules in the DSLTrans transformation needed for contract proof, thereby reducing proving time.
C1 [Oakes, Bentley James] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
   [Troya, Javier] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Lucio, Levi] Fortiss GmbH, Munich, Germany.
   [Wimmer, Manuel] TU Wien, Business Informat Grp, Vienna, Austria.
C3 McGill University; University of Sevilla; fortiss; Technische
   Universitat Wien
RP Oakes, BJ (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM bentley.oakes@mail.mcgill.ca; jtroya@us.es; lucio@fortiss.org;
   wimmer@big.tuwien.ac.at
RI Troya, Javier/B-6951-2017; Oakes, Bentley/AAS-2811-2020
OI Troya, Javier/0000-0002-1314-9694; Oakes, Bentley/0000-0001-7558-1434
FU NSERC grant; NECSIS project - Automotive Partnership, Canada; European
   Commission (FEDER); Spanish and the Andalusian RDI programmes
   [TIN2015-70560-R, P10-TIC-5906, P12-TIC-1867]
FX The authors warmly thank Gehan Selim and Claudio Gomes for their
   contributions to the implementation of the contract prover. Bentley
   James Oakes is funded by an NSERC grant, as well as support from the
   NECSIS project, funded by Automotive Partnership, Canada. The work of
   Javier Troya is funded by the European Commission (FEDER) and the
   Spanish and the Andalusian R&D&I programmes under grants and projects
   BELI (TIN2015-70560-R), THEOS (P10-TIC-5906), and COPAS (P12-TIC-1867).
   Finally, the work of Manuel Wimmer is funded by the Christian Doppler
   Forschungsgesellschaft and the BMWFW, Austria.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   Anastasakis K., 2007, ModeVVa'07, P47
   [Anonymous], 2009, P OCL
   [Anonymous], THESIS
   [Anonymous], P OF SBMF
   [Anonymous], THESIS
   [Anonymous], 2014, VOLT STAF, DOI DOI 10.1007/978-3-319-21215-98
   [Anonymous], 2015, P 2015 C N AM CHAPTE
   [Anonymous], RR7582 INRIA
   [Anonymous], SOCSTR20141 MCGILL U
   Arendt T, 2014, LECT NOTES COMPUT SC, V8571, P97
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P158, DOI 10.1007/978-3-642-38883-5_15
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Gammaitoni L, 2015, LECT NOTES COMPUT SC, V9152, P166, DOI 10.1007/978-3-319-21155-8_13
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos D., 2006, GAMMA 06, P13, DOI DOI 10.1145/1138304.1138308
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Lucio L., 2015, International Conference on Model Driven Engineering Languages and Systems, P24
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Lúcio L, 2010, LECT NOTES COMPUT SC, V6394, P136
   Mottu Jean-Marie, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P105, DOI 10.1109/ICSTW.2008.27
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Posse E, 2016, SOFTW SYST MODEL, V15, P179, DOI 10.1007/s10270-014-0399-z
   Richa E, 2015, LECT NOTES COMPUT SC, V9152, P183, DOI 10.1007/978-3-319-21155-8_14
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Selim G., 2015, Proceedings of Analysis of Model Transformations workshop at Model Driven Engineering Languages and Systems, P26
   Selim GMK, 2014, LECT NOTES COMPUT SC, V8571, P113
   Syriani E, 2015, SOFTW SYST MODEL, V14, P1215, DOI 10.1007/s10270-013-0370-4
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   Wieber M, 2014, LECT NOTES COMPUT SC, V8568, P1
NR 44
TC 17
Z9 18
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 815
EP 849
DI 10.1007/s10270-016-0548-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000006
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Vaupel, S
   Taentzer, G
   Gerlach, R
   Guckert, M
AF Vaupel, Steffen
   Taentzer, Gabriele
   Gerlach, Rene
   Guckert, Michael
TI Model-driven development of mobile applications for Android and iOS
   supporting role-based app variability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Mobile application; Android; iOS
AB Rapidly increasing numbers of applications and users make the development of mobile applications to one of the most promising fields in software engineering. Due to short time to market, differing platforms, and fast emerging technologies, mobile application development faces typical challenges where model-driven development (MDD) can help. We present a modeling language and an infrastructure for the MDD of native apps in Android and iOS. Our approach allows a flexible app development on different abstraction levels: compact modeling of standard app elements such as standard data management and increasingly detailed modeling of individual elements to cover, for example, specific behavior. Moreover, a kind of variability modeling is supported such that mobile apps with variants can be developed. We demonstrate our MDD approach with several apps including a conference app, a museum guide with augmented reality functionality, and a SmartPlug.
C1 [Vaupel, Steffen; Taentzer, Gabriele] Philipps Univ Marburg, Hans Meerwein Str 1, D-35032 Marburg, Germany.
   [Gerlach, Rene; Guckert, Michael] Tech Hsch Mittelhessen, KITE Kompetenzzentrum Informat Technol, Wilhelm Leuschner Str 13, D-61169 Friedberg, Germany.
C3 Philipps University Marburg
RP Vaupel, S (corresponding author), Philipps Univ Marburg, Hans Meerwein Str 1, D-35032 Marburg, Germany.
EM svaupel@informatik.uni-marburg.de; taentzer@informatik.uni-marburg.de;
   rene.gerlach@mnd.thm.de; michael.guckert@mnd.thm.de
OI Vaupel, Steffen/0009-0001-8670-226X
FU LOEWE HA Project [355/12-45]
FX This work was partially funded by LOEWE HA Project No. 355/12-45 (State
   Offensive for the Development of Scientific and Economic Excellence).
CR Abolfazli S, 2014, J NETW COMPUT APPL, V40, P345, DOI 10.1016/j.jnca.2013.09.009
   Allen S., 2010, PRO SMARTPHONE CROSS
   AMBLER S., 2012, Agile Database Techniques: Effective Strategies for the Agile Software Developer
   [Anonymous], 2007, Web Services Business Process Execution Language (BPEL)
   [Anonymous], 2010, PROC ACM INT C COMPA
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2015, HWACI APPL SOFTWARE
   [Anonymous], 2009, Techreport B-108
   Bishop R., 2011, LEARNING LABVIEW
   Burnette Ed., 2010, HELLO ANDROID INTRO
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Conway Joe., 2012, iOS Programming: The Big Nerd Ranch Guide, V3rd
   Degrandsart S, 2014, SOFTW SYST MODEL, V13, P191, DOI 10.1007/s10270-012-0239-y
   Emmanouilidis C, 2013, J NETW COMPUT APPL, V36, P103, DOI 10.1016/j.jnca.2012.04.007
   Goadrich Mark H., 2011, P 42 ACM TECHN S COM
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Guckert M., 2015, ANWENDUNGEN KONZEPTE, V3, P5
   Heitkotter Henning, 2013, P 28 ANN ACM S APPL, P526
   Hemel Z., 2011, OOPSLA COMPANION, P23
   Hemel Z, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P695
   Kennedy-Eden H., 2012, ATAXONOMY OFMOBILE A
   Kraemer FA, 2011, LECT NOTES COMPUT SC, V6981, P183, DOI 10.1007/978-3-642-24485-8_14
   Liao S., 2014, MIGRATING SWIFT ANDR
   Mednieks Z.R., 2012, PROGRAMMING ANDROID
   Meier R., 2012, PROFESSIONAL ANDROID
   Navarre D, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614393
   Oehlman D., 2011, PRO ANDROID WEB APPS
   OMG, 2013, Business process model and notation (BPMN 2.0)
   Piper I., 2010, Learn Xcode tools for Mac OS X and iPhone development
   PUERTA AR, 1994, PEOPLE AND COMPUTERS IX, P353
   Raneburger D., 2012, P ACM S ENG INTERACT, P91
   Rubel D., 2011, ECLIPSE GRAPHICAL ED
   Souchon N, 2003, LECT NOTES COMPUT SC, V2844, P377
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tran V., 2012, P 4 ACM SIGCHI S ENG, P101
   Vaupel S., 2016, P 3 ACM INT IN PRESS
   Vaupel S., 2015, INT WORKSH FLEX MOD, P12
   Vaupel S, 2014, LECT NOTES COMPUT SC, V8767, P1, DOI 10.1007/978-3-319-11653-2_1
   Vaupel Steffen., 2016, Software Engineering 2016, P99
   Vlissides J., 1998, Pattern Hatching: Design Patterns Applied
   Williams G., 2012, LEARN HTML5 JAVASCRI
   Yener M., 2014, PROFESSIONAL JAVA EE
   Zapata, 2013, ANDROID STUDIO APPL, DOI [10.1007/s41468-022-00103-8, DOI 10.1007/S40891-022-00360-8]
NR 44
TC 22
Z9 24
U1 0
U2 22
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 35
EP 63
DI 10.1007/s10270-016-0559-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100005
DA 2024-07-18
ER

PT J
AU Batory, D
   Azanza, M
AF Batory, Don
   Azanza, Maider
TI Teaching model-driven engineering from a relational database perspective
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Teaching; Tools
AB We reinterpret MDE from the viewpoint of relational databases to provide an alternative way to understand, demonstrate, and teach MDE using concepts and technologies that should be familiar to undergraduates. We use (1) relational database schemas to express metamodels, (2) relational databases to express models, (3) Prolog to express constraints and M2M transformations, (4) Java tools to implement M2T and T2M transformations, and (5) Java to execute transformations. Application case studies and a user study illuminate the viability and benefits of our approach.
C1 [Batory, Don] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
   [Azanza, Maider] Univ Basque Country UPV EHU, Comp Languages & Syst Dept, San Sebastian, Spain.
C3 University of Texas System; University of Texas Austin; University of
   Basque Country
RP Batory, D (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM batory@cs.utexas.edu; maider.azanza@ehu.eus
RI Azanza Sese, Maider/L-6400-2014
OI Azanza Sese, Maider/0000-0002-4537-1572
FU NSF [CCF-1421211, CCF-0724979, OCI-1148125]; Spanish Ministry of
   Education; European Social Fund [TIN2011-23839]
FX We are indebted to S. Trujillo (Ikerlan), O. Diaz (UPV/EHU), P. Stevens
   (Edinburgh), J. Siegmund (Passau) and L. Vozmediano (UPV/EHU) for their
   insightful comments on earlier drafts of this paper. We also appreciate
   the help given by M. Sponemann on the Kieler graph layout tools and R.
   Lammel his invaluable help answering questions about Prolog. We also
   thank R. Berg, E. Huneke, A. Shali, and J. Ho for creating VM2T and
   thank J. Croy, D. Ilijev, B. Koo, E. Liu, T. McCandless, M. Parikh, C.
   Orchard, C. Salisbury, A. Sharp, J. Siu, C. Stewart, and M. Teng for
   participating in the user evaluation. We gratefully acknowledge support
   for this work by NSF grants CCF-1421211, CCF-0724979, and OCI-1148125,
   the Spanish Ministry of Education, and the European Social Fund under
   contract TIN2011-23839.
CR Almendros-Jimenez J.M., 2008, PROLE, P29
   Almendros-Jiménez JM, 2013, LECT NOTES COMPUT SC, V7741, P382
   [Anonymous], P VLL 2007 WORKSH VI
   [Anonymous], 1991, Basic Category Theory for Computer Scientists
   Basili Victor R., 1992, TECH REP
   Batory D, 2006, IBM SYST J, V45, P527, DOI 10.1147/sj.453.0527
   Batory D, 2013, LECT NOTES COMPUT SC, V8225, P1, DOI 10.1007/978-3-319-02654-1_1
   Batory D, 2013, LECT NOTES COMPUT SC, V8107, P121, DOI 10.1007/978-3-642-41533-3_8
   Batory D, 2008, LECT NOTES COMPUT SC, V5301, P1, DOI 10.1007/978-3-540-87875-9_1
   Baughman M., 2008, Consequences of No Child Left Behind for educational evaluation, V117, P85
   Bezivin J., 2004, OOPSLA GPCE WORKSH B
   Bezivin J, 2010, LECT NOTES COMPUT SC, V6002, P55
   Boruch R.F, 2007, NEW DIRECTIONS EVALU, V113, P55
   BROSCH P, 2009, 5 ED S CONJ 12 INT C
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Cook TD, 2003, ANN AM ACAD POLIT SS, V589, P114, DOI 10.1177/0002716203254764
   Dehayni M, 2003, LECT NOTES COMPUT SC, V2817, P412
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Favre J.M., 2004, P 3 UML WORKSH SOFTW
   Fraenkel JR., 2009, The nature of qualitative research. How to design and evaluate research in education
   France R.B., 2011, KEYN SPEAK 7 ED S CO
   Hainaut J.-L., 2005, Generative and Transformational Techniques in Software Engineering. International Summer School, GTTSE 2005. Revised Papers (Lecture Notes in Computer Science Vol. 4143), P95
   ISO/IEC, 2001, SOFTW ENG SOFTW PROD
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Johnson P., 1992, HUMAN COMPUTER INTER
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   MCKEACHIE WJ, 1990, J EDUC PSYCHOL, V82, P189, DOI 10.1037/0022-0663.82.2.189
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P382
   Oldevik J., 2004, UMT UML MOD TRANSF T
   Pantel M., 2013, PRIVATE EMAIL CONVER
   Sprinkle J, 2010, LECT NOTES COMPUT SC, V6100, P57, DOI 10.1007/978-3-642-16277-0_3
   Walser T.M., 2014, PRACTICAL ASSESSMENT, V19, P1, DOI [10.7275/17hj-1k58, DOI 10.7275/17HJ-1K58]
NR 32
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 443
EP 467
DI 10.1007/s10270-015-0488-7
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400008
DA 2024-07-18
ER

PT J
AU Burnay, C
   Jureta, IJ
   Linden, I
   Faulkner, S
AF Burnay, Corentin
   Jureta, Ivan J.
   Linden, Isabelle
   Faulkner, Stephane
TI A framework for the operationalization of monitoring in business
   intelligence requirements engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Business intelligence; Requirement; Monitoring; Indicator; Analytic;
   Field; Schema; Source
ID BALANCED SCORECARD; INFORMATION-SYSTEMS; GOAL; MODEL; CONTEXT
AB Business intelligence (BI) is perceived as a critical activity for organizations and is increasingly discussed in requirements engineering (RE). RE can contribute to the successful implementation of BI systems by assisting the identification and analysis of such systems' requirements and the production of the specification of the system to be. Within RE for BI systems, we focus in this paper on the following questions: (i) how the expectations of a BI system's stakeholders can be translated into accurate BI requirements, and (ii) how do we operationalize specifically these requirements in a system specification? In response, we define elicitation axes for the documentation of BI-specific requirements, give a list of six BI entities that we argue should be accounted for to operationalize business monitoring, and provide notations for the modeling of these entities. We survey important contributions of BI to define elicitation axes, adapt existing BI notations issued from RE literature, and complement them with new BI-specific notations. Using the i* framework, we illustrate the application of our proposal using a real-world case study.
C1 [Burnay, Corentin; Jureta, Ivan J.; Faulkner, Stephane] Univ Namur, PReCISE Res Ctr, Dept Business Adm, Namur, Belgium.
   [Burnay, Corentin; Jureta, Ivan J.] Fonds Rech Sci FNRS, Namur, Belgium.
   [Linden, Isabelle] Univ Namur, Dept Business Adm, Focus Res Grp, Namur, Belgium.
C3 University of Namur; Fonds de la Recherche Scientifique - FNRS;
   University of Namur
RP Burnay, C (corresponding author), Univ Namur, PReCISE Res Ctr, Dept Business Adm, Namur, Belgium.
EM corentin.burnay@unamur.be; ivan.jureta@unamur.be;
   isabelle.linden@unamur.be; stephane.faulkner@unamur.be
RI Linden, Isabelle/H-5938-2015
OI Linden, Isabelle/0000-0001-8034-1857
CR Ackoff R. L., 1989, Journal of applied system analysis, V16, P3, DOI DOI 10.5840/DU2005155/629
   [Anonymous], P 27 ANN ACM S APPL
   [Anonymous], 2000, SURVEY CONTEXT AWARE
   [Anonymous], 2010, Performance dashboards: Measuring, monitoring, and managing your business
   [Anonymous], 2007, Management by Measurement: Designing key Indicators and Performance Measurement Systems
   Arens Y., 1993, International Journal of Intelligent & Cooperative Information Systems, V2, P127, DOI 10.1142/S0218215793000071
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Barone D, 2011, LECT NOTES BUS INF P, V92, P82
   Barone D, 2011, LECT NOTES COMPUT SC, V6998, P448, DOI 10.1007/978-3-642-24606-7_35
   Britos P, 2008, INT FED INFO PROC, V274, P139
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Chen H, 2003, KNOWL ENG REV, V18, P197, DOI 10.1017/S0269888904000025
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Davies J., 2006, ADV MEASUREMENT APPR
   del-Río-Ortega A, 2013, INFORM SYST, V38, P470, DOI 10.1016/j.is.2012.11.004
   Fernandes KJ, 2006, TECHNOVATION, V26, P623, DOI 10.1016/j.technovation.2005.03.006
   Gangadharan GR, 2004, ITI 2004: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY INTERFACES, P139
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Golfarelli M, 1998, INT J COOP INF SYST, V7, P215, DOI 10.1142/S0218843098000118
   Golfarelli M., 2004, DOLAP 04 P 7 ACM INT, P1, DOI [DOI 10.1145/1031763.1031765, 10.1145/1031763.1031765]
   GOLFARELLI M., 1998, Proceedings of the 1st ACM International workshop on Data warehousing and OLAP, P3
   Grigori D, 2004, COMPUT IND, V53, P321, DOI 10.1016/j.compind.2003.10.007
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   Horkoff Jennifer., 2012, OTM CONFEDERATED INT, P700, DOI [DOI 10.1007/978-3-642-33615-7_17, 10.1007/978-3-642-33615-7_17]
   Indulska Jadwiga., 2003, P AUSTRALIASIAN INFO, P143
   Inmon W. H, 1992, BUILDING DATA WAREHO
   Isik O, 2011, INTELL SYST ACCOUNT, V18, P161, DOI 10.1002/isaf.329
   Jureta IJ, 2006, LECT NOTES COMPUT SC, V4215, P281
   Kaplan RS, 1996, CALIF MANAGE REV, V39, P53, DOI 10.2307/41165876
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   KIMBALL R., 1996, DATA WAREHOUSE TOOLK
   Kronz Andreas., 2006, CHAP 3 CORPORATE PER, P31
   Liu L, 2004, INFORM SYST, V29, P187, DOI 10.1016/S0306-4379(03)00052-8
   LUHN HP, 1958, IBM J RES DEV, V2, P314, DOI 10.1147/rd.24.0314
   Mazón JN, 2007, LECT NOTES COMPUT SC, V4802, P255
   Moody D. L., 2000, P INT WORKSH DES MAN
   Moss LT., 2003, BUSINESS INTELLIGENC
   Neely A., 2001, MEAS BUS EXCELL, V5, P6, DOI DOI 10.1108/13683040110385142
   Negash S., 2004, COMMUN ASSOC INF SYS, V13, P177, DOI [DOI 10.17705/1CAIS.01315, 10.1007/978-3-540-48716-69, DOI 10.1007/978-3-540-48716-69]
   Olszak C. M., 2007, INTERDISCIPLINARY J, V2, P134
   Paim FRS, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P75
   Palpanas T, 2007, INFORM SYST FRONT, V9, P195, DOI 10.1007/s10796-007-9032-9
   Panian Zeljko, 2007, Studies in Simulation and Modelling, P205
   Parmenter D., 2010, Key performance indicators: Developing, implementing and using winning kpis
   Pauwels K, 2009, J SERV RES-US, V12, P175, DOI 10.1177/1094670509344213
   Popova V, 2010, INFORM SYST, V35, P505, DOI 10.1016/j.is.2009.12.001
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   Pourshahid A, 2013, IEEE INT WORKSH MODE, P10, DOI 10.1109/MoDRE.2013.6597259
   Pourshahid A, 2011, LECT NOTES BUS INF P, V78, P100
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Ranjan Jayanthi, 2009, Journal of Theoretical and Applied Information Technology, V9, P60
   Rasmussen N.H., 2009, BUSINESS DASHBOARDS
   Rizzi S., 2006, DOLAP '06, P3, DOI [10.1145/1183512.1183515, DOI 10.1145/1183512.1183515]
   Rodríguez C, 2010, IEEE INTERNET COMPUT, V14, P32, DOI 10.1109/MIC.2010.59
   Roest P., 1997, INF MANAG COMPUT SEC, V5, P163
   Romero O, 2009, INT J DATA WAREHOUS, V5, P1, DOI 10.4018/jdwm.2009040101
   Rowley J, 2007, J INF SCI, V33, P163, DOI 10.1177/0165551506070706
   Scandizzo S, 2005, ECON NOTES, V34, P231, DOI 10.1111/j.0391-5026.2005.00150.x
   Schmidt A, 2001, IEEE PERS COMMUN, V8, P66, DOI 10.1109/98.944006
   Stefanov V, 2005, LECT NOTES COMPUT SC, V3589, P53, DOI 10.1007/11546849_6
   Tawhid R., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P267, DOI 10.1109/RE.2012.6345813
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Vassiliadis P., 2002, P 5 ACM INT WORKSH D, P14
   Vassiliadis P, 2009, INT J DATA WAREHOUS, V5, P1, DOI 10.4018/jdwm.2009070101
   Winograd T, 2001, HUM-COMPUT INTERACT, V16, P401, DOI 10.1207/S15327051HCI16234_18
   Winter R., 2004, P 2004 ACM S APPL CO, P1359
   Yigitbasioglu Ogan M., 2012, International Journal of Accounting Information Systems, V13, P41, DOI 10.1016/j.accinf.2011.08.002
   ZELENY M, 1987, HUM SYST MANAGE, V7, P59
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 71
TC 3
Z9 5
U1 0
U2 28
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 531
EP 552
DI 10.1007/s10270-014-0417-1
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800013
DA 2024-07-18
ER

PT J
AU Kusel, A
   Schönböck, J
   Wimmer, M
   Kappel, G
   Retschitzegger, W
   Schwinger, W
AF Kusel, A.
   Schoenboeck, J.
   Wimmer, M.
   Kappel, G.
   Retschitzegger, W.
   Schwinger, W.
TI Reuse in model-to-model transformation languages: are we there yet?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reuse mechanisms; Model transformations; Survey; Model-driven
   engineering
AB In the area of model-driven engineering, model transformations are proposed as the technique to systematically manipulate models. For increasing development productivity as well as quality of model transformations, reuse mechanisms are indispensable. Although numerous mechanisms have been proposed, no systematic comparison exists, making it unclear, which reuse mechanisms may be best employed in a certain situation. Thus, this paper provides an in-depth comparison of reuse mechanisms in model-to-model transformation languages and categorizes them along their intended scope of application. Finally, current barriers and facilitators to model transformation reuse are discussed.
C1 [Kusel, A.; Retschitzegger, W.; Schwinger, W.] Johannes Kepler Univ Linz, Linz, Austria.
   [Schoenboeck, J.] Upper Austrian Univ Appl Sci, Hagenberg, Austria.
   [Wimmer, M.] Univ Malaga, Software Engn Grp, E-29071 Malaga, Spain.
   [Wimmer, M.] Vienna Univ Technol, Business Informat Grp, A-1040 Vienna, Austria.
   [Kappel, G.] Vienna Univ Technol, Inst Software Technol & Interact Syst, A-1040 Vienna, Austria.
C3 Johannes Kepler University Linz; Universidad de Malaga; Technische
   Universitat Wien; Technische Universitat Wien
RP Schönböck, J (corresponding author), Upper Austrian Univ Appl Sci, Hagenberg, Austria.
EM Angelika.Kusel@jku.at; johannes.schoenbeck@fh-hagenberg.at;
   mw@lcc.uma.es; Kappel@big.tuwien.ac.at; Werner.Retschitzegger@jku.at;
   Wieland.Schwinger@jku.at
OI Schonbock, Johannes/0000-0002-1706-6319
FU Austrian Science Fund (FWF) [P21374-N13, J3159-N23]; Austrian Research
   Promotion Agency (FFG) [832160]; Austrian Science Fund (FWF) [P21374]
   Funding Source: Austrian Science Fund (FWF)
FX This work has been funded by the Austrian Science Fund (FWF) under grant
   P21374-N13 and J3159-N23 as well as by the Austrian Research Promotion
   Agency (FFG) under project number 832160.
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   Allen Eric., 2002, P IFIP TC2WG21 WORKI, P207
   Amrani Moussa., 2012, P 1 WORKSHOP ANAL MO, P3
   [Anonymous], MOD TRANSF PRACT WOR
   [Anonymous], 2010, P MDI
   [Anonymous], P 17 INT C PATT LANG
   [Anonymous], P 5 INT WORKSH MULT
   [Anonymous], ECEASST
   [Anonymous], 2007, BTW WORKSH
   [Anonymous], 2006, ECEASST
   [Anonymous], THESIS VIENNA U TECH
   [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2012, J OBJECT TECHNOL
   [Anonymous], P 3 INT WORKSH MOD T
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P 7 INT WORKSH DOM S
   [Anonymous], P 1 INT WORKSH AN MO
   [Anonymous], P 3 INT WORKSH MOD A
   [Anonymous], ECEASST
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   BIGGERSTAFF T, 1987, IEEE SOFTWARE, V4, P41, DOI 10.1109/MS.1987.230095
   Cabot J, 2010, LECT NOTES COMPUT SC, V6412, P419, DOI 10.1007/978-3-642-16373-9_30
   Chenouard R, 2009, LECT NOTES COMPUT SC, V5795, P92, DOI 10.1007/978-3-642-04425-0_8
   Chimiak-Opoka J, 2009, LECT NOTES COMPUT SC, V5795, P665, DOI 10.1007/978-3-642-04425-0_53
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Falleri JR, 2008, LECT NOTES COMPUT SC, V5301, P326, DOI 10.1007/978-3-540-87875-9_24
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   George Lars, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P160, DOI 10.1007/978-3-642-30476-7_11
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra Esther, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P40, DOI 10.1007/978-3-642-30476-7_3
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Klar Felix., 2007, P THE 6 JOINT M EURO, P285
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kramer J., 2007, Communications of the ACM, V50, P36, DOI 10.1145/1232743.1232745
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kurtev I, 2010, SOFTW SYST MODEL, V9, P311, DOI 10.1007/s10270-009-0138-z
   Lau KK, 2010, EUROMICRO CONF PROC, P102, DOI 10.1109/SEAA.2010.36
   Legros E, 2009, J VISUAL LANG COMPUT, V20, P252, DOI 10.1016/j.jvlc.2009.04.005
   Liskov B., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P118
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Cardona PAN, 2015, CUAD ACT, P154
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3543, P108
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Cuadrado JS, 2009, IEEE T SOFTWARE ENG, V35, P825, DOI 10.1109/TSE.2009.14
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5563, P229, DOI 10.1007/978-3-642-02408-5_16
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sijtema Marten., 2010, PROC MTATL, V10, P39
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Syriani E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P929, DOI 10.1109/ICST.2012.198
   Tisi M, 2010, LECT NOTES COMPUT SC, V6142, P215, DOI 10.1007/978-3-642-13688-7_15
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Vignaga A, 2009, LECT NOTES COMPUT SC, V5563, P197, DOI 10.1007/978-3-642-02408-5_14
   Voigt K, 2010, LECT NOTES COMPUT SC, V6142, P245, DOI 10.1007/978-3-642-13688-7_17
   Wagelaar D, 2008, LECT NOTES COMPUT SC, V5063, P152, DOI 10.1007/978-3-540-69927-9_11
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wimmer Manuel, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P280, DOI 10.1007/978-3-642-30476-7_19
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Wimmer M, 2010, LECT NOTES COMPUT SC, V6142, P260, DOI 10.1007/978-3-642-13688-7_18
NR 80
TC 39
Z9 42
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 537
EP 572
DI 10.1007/s10270-013-0343-7
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400003
DA 2024-07-18
ER

PT J
AU Falcone, Y
   Jaber, M
   Nguyen, TH
   Bozga, M
   Bensalem, S
AF Falcone, Ylies
   Jaber, Mohamad
   Thanh-Hung Nguyen
   Bozga, Marius
   Bensalem, Saddek
TI Runtime verification of component-based systems in the BIP framework
   with formally-proved sound and complete instrumentation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Runtime verification; Component-based systems; Instrumentation; Formal
   methods
ID LTL
AB Verification of component-based systems still suffers from limitations such as state space explosion since a large number of different components may interact in a heterogeneous environment. These limitations entail the need for complementary verification methods such as runtime verification. Runtime verification is a dynamic analysis technique and is prone to scalability. In this paper, we integrate runtime verification into the BIP (Behavior, Interaction and Priority) framework. BIP is a powerful and expressive component-based framework for the formal construction of heterogeneous systems. Our method augments BIP systems with monitors to check specifications at runtime. This method has been implemented in RV-BIP, a prototype tool that we used to validate the whole approach on a robotic application.
C1 [Falcone, Ylies] Univ Grenoble 1, Lab Informat Grenoble, Grenoble, France.
   [Jaber, Mohamad] Amer Univ Beirut, Beirut, Lebanon.
   [Thanh-Hung Nguyen] Hanoi Univ Sci & Technol, Hanoi, Vietnam.
   [Bozga, Marius; Bensalem, Saddek] Univ Grenoble 1, Verimag Lab, Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); American University of Beirut; Hanoi
   University of Science & Technology (HUST); Communaute Universite
   Grenoble Alpes; Institut National Polytechnique de Grenoble; Universite
   Grenoble Alpes (UGA); Centre National de la Recherche Scientifique
   (CNRS)
RP Falcone, Y (corresponding author), Univ Grenoble 1, Lab Informat Grenoble, Grenoble, France.
EM Ylies.Falcone@ujf-grenoble.fr; mj54@aub.edu.lb; hungnt@soict.hut.edu.vn;
   Marius.Bozga@imag.fr; Saddek.Bensalem@imag.fr
OI Jaber, Mohamad/0000-0003-2457-9742
CR ABADI M, 1993, ACM T PROGR LANG SYS, V15, P73, DOI 10.1145/151646.151649
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], THESIS CARNEGIE MELL
   [Anonymous], 2005, INT C COMP AID VER
   [Anonymous], 2010, P INT WORKSH FORM AS
   [Anonymous], J AEROSPACE COMPUT I
   [Anonymous], S LOG COMP SCI IEEE
   [Anonymous], 1995, COMMUNICATION CONCUR
   [Anonymous], P 10 INT C EMB SOFTW
   Bacchus F, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1215
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Ben-Hafaiedh I, 2010, LECT NOTES COMPUT SC, V6447, P436, DOI 10.1007/978-3-642-16901-4_29
   Bensalem S., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P257
   Bensalem S, 2010, IET SOFTW, V4, P181, DOI 10.1049/iet-sen.2009.0011
   Bensalem S, 2009, IEEE ROBOT AUTOM MAG, V16, P67, DOI 10.1109/MRA.2008.931631
   Bliudze S, 2008, LECT NOTES COMPUT SC, V5201, P508, DOI 10.1007/978-3-540-85361-9_39
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bodden E, 2010, LECT NOTES COMPUT SC, V6418, P183, DOI 10.1007/978-3-642-16612-9_15
   Bonakdarpour B., 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P108, DOI 10.1109/SIES.2010.5551377
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Bozga M, 2009, INT SYM IND EMBED, P152, DOI 10.1109/SIES.2009.5196211
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   Clarke E.M., 1981, LNCS, V131
   Colombo C, 2010, LECT NOTES COMPUT SC, V6418, P480, DOI 10.1007/978-3-642-16612-9_38
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y, 2011, LECT NOTES COMPUT SC, V7041, P204, DOI 10.1007/978-3-642-24690-6_15
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   Fleury S., 1997, Proceedings of the 1997 IEEE/RSJ International Conference on Intelligent Robot and Systems. Innovative Robotics for Real-World Applications. IROS '97 (Cat. No.97CH36108), P842, DOI 10.1109/IROS.1997.655108
   Francalanza A, 2011, ELECTRON P THEOR COM, P23, DOI 10.4204/EPTCS.68.4
   Havelund K, 2008, LECT NOTES COMPUT SC, V5047, P7, DOI 10.1007/978-3-540-68524-1_3
   Kähkönen K, 2009, LECT NOTES COMPUT SC, V5779, P93, DOI 10.1007/978-3-642-04694-0_7
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Rosu G, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(1:09)2012
   Stolz V, 2007, LECT NOTES COMPUT SC, V4839, P176
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Umrigar Z. D., 1983, ACM IEEE 20th Design Automation Conference Proceedings, P221, DOI 10.1109/DAC.1983.1585652
NR 47
TC 24
Z9 25
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 173
EP 199
DI 10.1007/s10270-013-0323-y
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100011
DA 2024-07-18
ER

PT J
AU Degrandsart, S
   Demeyer, S
   Van den Bergh, J
   Mens, T
AF Degrandsart, Sylvain
   Demeyer, Serge
   Van den Bergh, Jan
   Mens, Tom
TI A transformation-based approach to context-aware modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context-aware model; Model transformation; Critical pair analysis;
   Context adaptation; Context coverage
AB Context-aware computing is a paradigm for governing the numerous mobile devices surrounding us. In this computing paradigm, software applications continuously and dynamically adapt to different "contexts" implying different software configurations of such devices. Unfortunately, modelling a context-aware application (CAA) for all possible contexts is only feasible in the simplest of cases. Hence, tool support verifying certain properties is required. In this article, we introduce the CAA model, in which context adaptations are specified explicitly as model transformations. By mapping this model to graphs and graph transformations, we can exploit graph transformation techniques such as critical pair analysis to find contexts for which the resulting application model is ambiguous. We validate our approach by means of an example of a mobile city guide, demonstrating that we can identify subtle context interactions that might go unnoticed otherwise.
C1 [Degrandsart, Sylvain; Demeyer, Serge] Univ Antwerp, Dept Math & Comp Sci, B-2610 Antwerp, Belgium.
   [Degrandsart, Sylvain; Mens, Tom] Univ Mons, Inst Informat, B-7000 Mons, Belgium.
   [Van den Bergh, Jan] Hasselt Univ, tUL, IBBT, Expertise Ctr Digital Media, B-3590 Diepenbeek, Belgium.
C3 University of Antwerp; University of Mons; Hasselt University
RP Degrandsart, S (corresponding author), Univ Antwerp, Dept Math & Comp Sci, Univ Pl 1, B-2610 Antwerp, Belgium.
EM sylvain.degrandsart@ua.ac.be; serge.demeyer@ua.ac.be;
   jan.vandenbergh@uhasselt.be; tom.mens@umons.ac.be
RI Mens, Tom/B-6518-2013; Van den Bergh, Jan/H-3986-2019; Demeyer,
   Serge/JMQ-7341-2023
OI Mens, Tom/0000-0003-3636-5020; Van den Bergh, Jan/0000-0002-3054-0628;
   Demeyer, Serge/0000-0002-4463-2945
FU FWO [G. 0296.08]; Interuniversity Attraction Poles Programme-Belgian
   State Belgian Science Policy; Ministere de la Communaute
   francaise-Direction generale de l'Enseignement non obligatoire et de la
   Recherche scientifique, Belgique
FX This work was supported by the FWO project Transforming human interface
   designs via model-driven engineering (G. 0296.08); the MoVES project was
   financed by the Interuniversity Attraction Poles Programme-Belgian State
   Belgian Science Policy, and the Action de Recherche Concertee
   Model-Driven Software Evolution was financed by the Ministere de la
   Communaute francaise-Direction generale de l'Enseignement non
   obligatoire et de la Recherche scientifique, Belgique. We express our
   gratitude to H. Vangheluwe, T. Molderez, B. Meyers, M. Goeminne and O.
   Gauwin for reviewing earlier drafts of this article.
CR [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Bolchini C, 2007, SIGMOD REC, V36, P19, DOI 10.1145/1361348.1361353
   Brown PJ, 1997, IEEE PERS COMMUN, V4, P58, DOI 10.1109/98.626984
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Clerckx Tim., 2004, CADUI, P281
   Corradini A, 2002, LECT NOTES COMPUTER, V2505
   Coutaz Joelle., 2002, Proc. 4th International Conference on Computer-Aided Design of User Interfaces (CADUl 2002), P13
   Dey A. K., 2005, ACM Transactions on Computer-Human Interaction, V12, P53, DOI 10.1145/1057237.1057241
   Dey A. K., 2000, P 4 INT C COMP AID D
   Feather M. S., 1997, Automated Software Engineering, V4, P419, DOI 10.1023/A:1008680612960
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   González S, 2011, LECT NOTES COMPUT SC, V6563, P246, DOI 10.1007/978-3-642-19440-5_15
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Henricksen K, 2006, PERVASIVE MOB COMPUT, V2, P37, DOI 10.1016/j.pmcj.2005.07.003
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   LIMBOURG Q, 2004, THESIS U CATHOLIQUE
   Lohmann S, 2007, LECT NOTES COMPUT SC, V4364, P116
   Patemo Fabio., 2002, Proceedings of CAD U I2002, the 4th International Conference on Computer-Aided Design of User Interfaces, P143, DOI DOI 10.1007/978-94-010-0421-313
   Preuveneers D, 2004, LECT NOTES COMPUT SC, V3295, P148
   Pribeanu Costin., 2001, DSV-IS, P49, DOI DOI 10.1007/3-540-45522-1_4.LNCS2220
   Runge O., 2011, LNCS IN PRESS
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   SCHILIT BN, 1994, IEEE NETWORK, V8, P22, DOI 10.1109/65.313011
   Schmidt A, 1999, LECT NOTES COMPUT SC, V1707, P89
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Van den Bergh J, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P13
   Van den Bergh J, 2006, LECT NOTES COMPUT SC, V4199, P140, DOI 10.1007/11880240_11
   van Doesburg Jan, 2011, Processing, Storage, Distribution of Food. Food in the Medieval Rural Environment, P31
NR 31
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 191
EP 208
DI 10.1007/s10270-012-0239-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000011
DA 2024-07-18
ER

PT J
AU Gouvêa, DD
   Muniz, CDAD
   Pinto, GA
   Avritzer, A
   Leao, RMM
   Silva, EDE
   Diniz, MC
   Cortellessa, V
   Berardinelli, L
   Leite, JCB
   Mossé, D
   Cai, YF
   Dalton, M
   Happe, L
   Koziolek, A
AF Gouvea, Daniel Dominguez
   Muniz, Cyro de A. Assis D.
   Pinto, Gilson A.
   Avritzer, Alberto
   Meri Leao, Rosa Maria
   de Souza e Silva, Edmundo
   Diniz, Morganna Carmem
   Cortellessa, Vittorio
   Berardinelli, Luca
   Leite, Julius C. B.
   Mosse, Daniel
   Cai, Yuanfang
   Dalton, Michael
   Happe, Lucia
   Koziolek, Anne
TI Experience with model-based performance, reliability, and adaptability
   assessment of a complex industrial architecture
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Performance; Reliability; Adaptability
ID SOFTWARE-RELIABILITY
AB In this paper, we report on our experience with the application of validated models to assess performance, reliability, and adaptability of a complex mission critical system that is being developed to dynamically monitor and control the position of an oil-drilling platform. We present real-time modeling results that show that all tasks are schedulable. We performed stochastic analysis of the distribution of task execution time as a function of the number of system interfaces. We report on the variability of task execution times for the expected system configurations. In addition, we have executed a system library for an important task inside the performance model simulator. We report on the measured algorithm convergence as a function of the number of vessel thrusters. We have also studied the system architecture adaptability by comparing the documented system architecture and the implemented source code. We report on the adaptability findings and the recommendations we were able to provide to the system's architect. Finally, we have developed models of hardware and software reliability. We report on hardware and software reliability results based on the evaluation of the system architecture.
C1 [Gouvea, Daniel Dominguez; Muniz, Cyro de A. Assis D.] Chemtech, BR-20011030 Rio De Janeiro, RJ, Brazil.
   [Avritzer, Alberto] Siemens Corp, Res & Technol, Princeton, NJ 08540 USA.
   [Meri Leao, Rosa Maria; de Souza e Silva, Edmundo] Univ Fed Rio de Janeiro, COPPE, BR-21941972 Rio De Janeiro, RJ, Brazil.
   [Diniz, Morganna Carmem] Fed Univ State Rio de Janeiro, Dept Comp, Rio De Janeiro, RJ, Brazil.
   [Cortellessa, Vittorio] Univ Aquila, Dept Comp Sci, I-67100 Laquila, Italy.
   [Berardinelli, Luca] Univ Aquila, I-67100 Laquila, Italy.
   [Leite, Julius C. B.] Univ Fed Fluminense, Comp Inst, Niteroi, RJ, Brazil.
   [Mosse, Daniel] Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA USA.
   [Cai, Yuanfang; Dalton, Michael] Drexel Univ, Philadelphia, PA 19104 USA.
   [Happe, Lucia] Karlsruhe Inst Technol, Grp Software Design & Qual, D-76021 Karlsruhe, Germany.
   [Koziolek, Anne] Univ Zurich, Zurich, Switzerland.
   [Pinto, Gilson A.] Chemtech, BR-05069010 Sao Paulo, Brazil.
C3 Siemens AG; Universidade Federal do Rio de Janeiro; University of
   L'Aquila; University of L'Aquila; Universidade Federal Fluminense;
   Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh; Drexel University; Helmholtz Association; Karlsruhe
   Institute of Technology; University of Zurich
RP Avritzer, A (corresponding author), Siemens Corp, Res & Technol, Princeton, NJ 08540 USA.
EM cyro.muniz@chemtech.com.br; gilson.pinto@chemtech.com.br;
   alberto.avritzer@siemens.com
RI Koziolek, Anne/AAG-5242-2020; Berardinelli, Luca/AAJ-8012-2021; de Souza
   e Silva, Edmundo/AAG-7454-2019; Leao, Rosa/AAG-7471-2019; Koziolek,
   Anne/T-2305-2019
OI Koziolek, Anne/0000-0002-1593-3394; Berardinelli,
   Luca/0000-0003-2416-2867; de Souza e Silva, Edmundo/0000-0003-0912-7860;
   Happe, Lucia/0000-0003-1117-6880
FU FINEP; CNPq
FX We thank FINEP and CNPq for partial financial support of the project.
CR Abdelmoez W, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P384, DOI 10.1109/METRIC.2004.1357923
   [Anonymous], 2009, Real-Time Systems and Programming Languages
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   [Anonymous], 2000, DESIGN RULES POWER M
   AUDSLEY N, 1993, SOFTWARE ENG J, V8, P284, DOI 10.1049/sej.1993.0034
   BAKER TP, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P191, DOI 10.1109/REAL.1990.128747
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   BURCHARD A, 1995, IEEE T COMPUT, V44, P1429, DOI 10.1109/12.477248
   Cai YF, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377658
   Cal Y, 2006, THESIS U VIRGINIA
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   de Souza e Silva E., 2009, EVALUATION REV, V36, P64
   Duarte Flavio, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P109, DOI 10.1109/ICGSE.2010.20
   DUGAN JB, 1989, IEEE T COMPUT, V38, P775, DOI 10.1109/12.24286
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Gokhale SS, 2006, IEEE T RELIAB, V55, P578, DOI 10.1109/TR.2006.884587
   Gouvea D.D., 2011, P 2 JOINT WOSP SIPEW
   Kapova L, 2010, LECT NOTES COMPUT SC, V6342, P17
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Koziolek H., 2008, KARLSRUHE SERIES SOF, V2
   Lehoczky J., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P166, DOI 10.1109/REAL.1989.63567
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   OMG, 2009, UML profile for MARTE: Modeling and analysis of real-time embedded systems
   Pinto G., 2010, RIO OIL GAS IN PRESS
   QNX Software Systems, 2010, QNX NEUTR RTOS
   Rajkumar R., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P259, DOI 10.1109/REAL.1988.51121
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sethi K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P269, DOI 10.1109/WICSA.2009.5290817
   Wong S, 2009, IEEE INT CONF AUTOM, P173, DOI 10.1109/ASE.2009.55
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
NR 32
TC 2
Z9 2
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 765
EP 787
DI 10.1007/s10270-012-0264-x
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Rusu, V
AF Rusu, Vlad
TI Embedding domain-specific modelling languages in Maude specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; Algebraic specifications; Formal
   verification; Maude
ID TRANSFORMATIONS
AB We propose a formal approach for the definition and analysis of domain-specific modelling languages (dsml). The approach uses standard model-driven engineering artifacts for defining a language's syntax (using metamodels) and its operational semantics (using model transformations). We give formal meanings to these artifacts by translating them to the Maude language: metamodels and models are mapped to equational specifications, and model transformations are mapped to rewrite rules between such specifications, which are also expressible in Maude due to Maude's reflective capabilities. These mappings provide us, on the one hand, with abstract definitions of the mde concepts used for defining dsml, which naturally capture their intended meanings; and, on the other hand, with equivalent executable definitions, which can be directly used by Maude for formal verification. We also study a notion of operational semantics-preserving model transformations, which are model transformations between two dsml that ensure that each execution of a transformed instance is matched by an execution of the original instance. We propose a semi-decision procedure, implemented in Maude, for checking the semantics-preserving property. We also show how the procedure can be adapted for tracing finite executions of the transformed instance back to matching executions of the original one. The approach is illustrated on xspem, a language for describing the execution of activities constrained by time, precedence, and resource availability.
C1 [Rusu, Vlad] Inria Lille Nord Europe, Lille, France.
   [Rusu, Vlad] Lab Informat Fondamentale Lille, Lille, France.
RP Rusu, V (corresponding author), Inria Lille Nord Europe, Lille, France.
EM Vlad.Rusu@inria.fr
CR [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], 2007, LECT NOTES COMPUTER
   Bendraou R., 2007, 14 APSEC JAP DEC 200
   Bergstra J., 1980, LNCS, V81, P76
   Bisztray D., 2008, ECEASST, V16
   Boronat A, 2010, LECT NOTES COMPUT SC, V6013, P29, DOI 10.1007/978-3-642-12029-9_3
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Clavel M, 2006, J UNIVERS COMPUT SCI, V12, P1618
   Clavel M, 2009, LECT NOTES COMPUT SC, V5595, P380, DOI 10.1007/978-3-642-02348-4_27
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Combemale B, 2011, LECT NOTES COMPUT SC, V6698, P35, DOI 10.1007/978-3-642-21470-7_4
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   EGEA M, 2008, THESIS U COMPLUTENSE
   Egea M, 2010, INNOV SYST SOFTW ENG, V6, P73, DOI 10.1007/s11334-009-0108-1
   Fiorentini C, 2010, LECT NOTES COMPUT SC, V6142, P77, DOI 10.1007/978-3-642-13688-7_6
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1618, P92
   Guerra E, 2009, INFORM SOFTWARE TECH, V51, P769, DOI 10.1016/j.infsof.2008.09.005
   Hegedus A., 2010, SEFM 10 SEPT
   Meseguer J, 1998, LECT NOTES COMPUT SC, V1376, P18
   Moe J, 2001, PROG COMPREHEN, P60, DOI 10.1109/WPC.2001.921714
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Ogata K, 2008, ELECTRON NOTES THEOR, V201, P127, DOI 10.1016/j.entcs.2008.02.018
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Poernomo I., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1845, DOI 10.1145/1141277.1141710
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Rangel G, 2008, LECT NOTES COMPUT SC, V5214, P242, DOI 10.1007/978-3-540-87405-8_17
   Rivera J.E., 2009, CIBSE, P87
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Rusu V., 2011, ACM SOFTW ENG NOTES, V36
   Rusu V, 2010, LECT NOTES COMPUT SC, V6143, P135, DOI 10.1007/978-3-642-13977-2_12
NR 31
TC 1
Z9 1
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 847
EP 869
DI 10.1007/s10270-012-0232-5
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600011
DA 2024-07-18
ER

PT J
AU Vignaga, A
   Jouault, F
   Bastarrica, MC
   Brunelière, H
AF Vignaga, Andres
   Jouault, Frederic
   Cecilia Bastarrica, Maria
   Bruneliere, Hugo
TI Typing artifacts in megamodeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Type system; Megamodeling
AB Model management is essential for coping with the complexity introduced by the increasing number and varied nature of artifacts involved in model-driven engineering-based projects. Global model management (GMM) addresses this issue by enabling the representation of artifacts, particularly transformation composition and execution, within a model called a megamodel. Type information about artifacts can be used for preventing type errors during execution. Built on our previous work, in this paper we present the core elements of a type system for GMM that improves its original typing approach and enables both typechecking and type inference on artifacts within a megamodel. This type system is able to deal with non-trivial situations such as the use of higher order transformations. We also present a prototypical implementation of such a type system.
C1 [Vignaga, Andres; Cecilia Bastarrica, Maria] Univ Chile, MaTE, Dept Comp Sci, Santiago, Chile.
   [Vignaga, Andres] Univ Chile, MaTE Team, Santiago, Chile.
   [Jouault, Frederic; Bruneliere, Hugo] Ecole Mines Nantes, INRIA Rennes Ctr, AtlanMod, Nantes, France.
C3 Universidad de Chile; Universidad de Chile; IMT - Institut
   Mines-Telecom; IMT Atlantique
RP Vignaga, A (corresponding author), Univ Chile, MaTE, Dept Comp Sci, Santiago, Chile.
EM avignaga@dcc.uchile.cl; frederic.jouault@inria.fr;
   cecilia@dcc.uchile.cl; hugo.bruneliere@inria.fr
RI Bastarrica, Maria Cecilia/AGN-6617-2022
OI Bruneliere, Hugo/0000-0002-5987-2175
FU IST-FP6 MODELPLEX European project [15]; Conicyt-Chile/INRIA HOT
   project; Conicyt-Chile
FX We would like to specially thank Alvaro Tasistro for his valuable and
   numerous contributions to this work. The present work has been jointly
   supported by the IST-FP6 MODELPLEX European project [15] and the
   Conicyt-Chile/INRIA HOT project. The work of Andres Vignaga has been
   partially funded by Conicyt-Chile.
CR [Anonymous], 2009, DEL D2 13 B MOD MAN
   [Anonymous], 2009, COQ PROOF ASSISTANT
   Barbero M, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P277, DOI 10.1109/ECBS.2008.42
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   CARDELLI L, 1986, LECT NOTES COMPUTER, V306, P45
   Cardelli L., 1997, COMPUTER SCI ENG HDB, V2nd, P2208
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Favre J.M., 2004, P 3 UML WORKSH SOFTW
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Luo Z., 1990, An extended calculus of constructions
   MacQueen DavidB., 1986, P 13 ACM SIGPLAN S P, P277, DOI DOI 10.1145/512644.512670
   Poernomo I, 2006, LECT NOTES COMPUT SC, V3938, P262
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Vignaga Andres, 2009, Proceedings of the 28th International Conference of the Chilean Computer Science Society (SCCC 2009), P115, DOI 10.1109/SCCC.2009.25
   Vignaga A., 2009, TRDCC20099 U CHIL CO
   Vignaga A, 2009, LECT NOTES COMPUT SC, V5563, P197, DOI 10.1007/978-3-642-02408-5_14
   WERNER B, 1994, THESIS U PARIS 7
   WILLINK ED, 2004, 2 EUR WORKSH MDA U K, P160
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
NR 24
TC 10
Z9 10
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 105
EP 119
DI 10.1007/s10270-011-0191-2
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800009
DA 2024-07-18
ER

PT J
AU Kallel, S
   Kacem, MH
   Jmaiel, M
AF Kallel, Slim
   Kacem, Mohamed Hadj
   Jmaiel, Mohamed
TI Modeling and enforcing invariants of dynamic software architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture; UML profile; Formal specification and
   verification; Aspect-oriented programming; Runtime enforcement
ID UML; DESIGN; TOOL
AB In this paper, we propose an "end-to-end" approach that supports dynamic reconfiguration of software architectures taking advantage of graphical modeling, formal methods and aspect-oriented programming. There are three ingredients of the proposal. The specification end of the solution is covered by a new UML profile enabling to specify the desired architectural style (model), its invariants and the intended reconfiguration operations. In order to verify the consistency of the model and the preservation of the invariants after every reconfiguration, we automatically generate formal specifications in Z notation from the defined model. At the runtime enforcing end of the solution, we propose to encode the enforcement logic as aspect in the AspectJ language. The third important ingredient that makes our approach end-to-end is the automatic translation of formal specifications into aspect-based enforcement code.
C1 [Kallel, Slim] Tech Univ Darmstadt, Software Technol Grp, D-64289 Darmstadt, Germany.
   [Kallel, Slim; Kacem, Mohamed Hadj; Jmaiel, Mohamed] Univ Sfax, ReDCAD Lab, Sfax 3038, Tunisia.
C3 Technical University of Darmstadt; Universite de Sfax; Ecole Nationale
   dIngenieurs de Sfax (ENIS)
RP Kallel, S (corresponding author), Tech Univ Darmstadt, Software Technol Grp, Hochschulstr 10, D-64289 Darmstadt, Germany.
EM kallel@st.informatik.tu-darmstadt.de; mohamed.hadjkacem@redcad.org;
   mohamed.jmaiel@enis.rnu.tn
OI Hadj Kacem, Mohamed/0000-0003-3407-2144; Kallel,
   Slim/0000-0002-2824-167X
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   Bockisch C, 2006, ACM SIGPLAN NOTICES, V41, P125, DOI 10.1145/1167515.1167484
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Cazzola W, 2004, INTELLIGENT AND ADAPTIVE SYSTEMS AND SOFTWARE ENGINEERING, P145
   Cazzola W., 2004, Research Reports on Mathematical and Computing Sciences Series C (Computer Science), P21
   Cazzola W., 2007, P RAM SE 07 ECOOP 07, P81
   Cazzola W, 2007, J OBJECT TECHNOL, V6, P167, DOI 10.5381/jot.2007.6.7.a7
   CHRISTIE D M., 1980, Proceedings of the 18th annual Southeast regional conference, Association for Computing Machinery, P103
   Cooper Kendra, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P628
   Dan H., 1998, P 3 INT WORKSHOP SOF, P69
   Dowling J., 2001, P 3 INT C METALEVEL, P81, DOI DOI 10.1007/3-540-45429-2
   Dowling J., 2004, Proceedings ACM Workshop on Self-Managed Systems, P39
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   Endler M., 1992, International Workshop on Configurable Distributed Systems, P68
   Farooq U., 2007, ADV COMPUTER SCI TEC, P128
   Garlan David, 2002, P 1 WORKSH SELFH HEA, P27, DOI [10.1145/582128.582134, DOI 10.1145/582128.582134]
   Georg G, 2002, IEEE INT C ENG COMP, P117, DOI 10.1109/ICECCS.2002.1181504
   Georgas JohnC., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-Managed Systems, WOSS2004, P59, DOI DOI 10.1145/1075405.1075417
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Guennoun K, 2007, MUE: 2007 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND UBIQUITOUS ENGINEERING, PROCEEDINGS, P1130
   Iqbal A., 2006, P 10 INT WORKSH ASP, P10
   Jia XP, 1998, P INT COMP SOFTW APP, P393, DOI 10.1109/CMPSAC.1998.716686
   Kacem M. H., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1245, DOI 10.1145/1141277.1141569
   Kacem M.H., 2005, P C COMP OR ENT APPL, P25
   Kacem MH, 2007, LECT NOTES COMPUT SC, V4473, P158
   Kallel S, 2007, LECT NOTES COMPUT SC, V4467, P211
   Kallel S, 2008, ELECTRON NOTES THEOR, V215, P5, DOI 10.1016/j.entcs.2008.06.018
   Kaplan S.M., 1993, RES DIRECTIONS CONCU, P235
   Khan K., 2006, JBOSSAOP FRAMEWORK O
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Klein Jacques., 2006, AOSD, P27
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   Leclercq M, 2007, PROC INT CONF SOFTW, P209
   Loulou I, 2004, IEEE/ACS INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, PROCEEDINGS, P227
   Loulou I, 2007, LECT NOTES COMPUT SC, V4758, P44
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Man-Wu X, 2005, SIGSOFT SOFTW ENG NO, V30, P1, DOI 10.1145/1082983.1083007
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Meisels I., 1997, Z EVES REFERENCE MAN
   Miladi M.N., 2009, P 3 IPM INT C FUND S, V5961
   Miladi MN, 2008, I C COMP SYST APPLIC, P1107, DOI 10.1109/AICCSA.2008.4493686
   Moreira RS, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P320, DOI 10.1109/ICDCSW.2004.1284049
   *OMG, 2003, UML 2 0 SUP SPEC FIN
   Oreizy P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P899
   Ostermann K, 2005, LECT NOTES COMPUT SC, V3586, P214
   Pavlich-Mariscal J., 2007, P 11 INT WORKSH ASP, V10
   Pérez-Martínez J, 2004, LECT NOTES COMPUT SC, V3047, P88
   Perez-Martinez J.E., 2003, ACM SIGSOFT SOFTWARE, V28, P5
   Pessemier N, 2008, INT J COMPUT APPL T, V31, P94, DOI 10.1504/IJCAT.2008.017722
   Ramkarthik S., 2006, 5 IEEE ACIS INT C CO, P405, DOI DOI 10.1109/ICIS-COMSAR.2006.41
   RHO T, 2004, IAITR20044 U BONN
   Sacha K, 2005, FRONT ARTIF INTEL AP, V130, P381
   Sengupta Sabnam, 2008, 1st India Software Engineering Conference. ISEC 2008, P151
   Sheng-Wen Cheng, 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P45
   Spivey M., 1992, The Z Notation: A Reference Manual
   Stein Dominik, 2004, P AOSD WORKSH ASP OR
   Tisato F., 2001, Engineering Distributed Objects. Second International Workshop, EDO 2000. Revised Papers. (Lecture Notes in Computer Science Vol.1999), P102
   VANGLABBEEK RJ, 1987, LECT NOTES COMPUT SC, V247, P336
   Vergnaud T, 2005, LECT NOTES COMPUT SC, V3555, P67
   YU H, 2006, P INT C SOFTW ENG KN, P11
NR 67
TC 5
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 127
EP 149
DI 10.1007/s10270-010-0162-z
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500010
DA 2024-07-18
ER

PT J
AU Broy, M
   Cengarle, MV
AF Broy, Manfred
   Cengarle, Maria Victoria
TI UML formal semantics: lessons learned
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal semantics; Compositional semantics; Multiple system views;
   All-encompassing UML semantics; Formal model-driven system development
AB The article below presents the insights gained during a number of years of research dedicated to the formalisation of the Unified Modeling Language.
C1 [Broy, Manfred; Cengarle, Maria Victoria] Tech Univ Munich, Chair Software & Syst Engn, Munich, Germany.
C3 Technical University of Munich
RP Broy, M (corresponding author), Tech Univ Munich, Chair Software & Syst Engn, Munich, Germany.
EM broy@in.tum.de; cengarle@in.turn.de
FU German Research Foundation (DFG)
FX The insights reflected in this article are the corollary of the rUML
   project financed by the German Research Foundation (DFG).
CR [Anonymous], UML 2 SEMANTICS APPL
   [Anonymous], 1994, LNCS
   BOOCH G, 2008, ACM SIGSOFT SOFTWARE, V33
   Cengarle MV, 2008, LECT NOTES COMPUT SC, V5065, P383, DOI 10.1007/978-3-540-68679-8_23
   Cengarle MariaVictoria., 2004, Proc. 3rd Int. Wsh. Critical Systems Development with UML, P85
   CENGARLE MV, 2007, NORD WORKSH MOD DRIV, P112
   CENGARLE MV, 2004, SOFTW SYST MODEL, V3, P9
   COOK S, 2005, SOFTW SYST MODEL, V4, P4, DOI DOI 10.1007/S10270-004-0076-8
   COOK S, 2004, UML SEMANTICS
   Crane ML, 2008, LECT NOTES COMPUT SC, V5301, P675, DOI 10.1007/978-3-540-87875-9_47
   Cuccuru A, 2007, LECT NOTES COMPUT SC, V4735, P271
   Evermann J, 2008, REQUIR ENG, V13, P167, DOI 10.1007/s00766-008-0065-5
   GORNIK D, 2004, TP026B IBM
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   HENDERSONSELLER.B, 2005, SOFTWARE SYSTEM MODE, V4, P4, DOI DOI 10.1007/S10270-004-0076-8
   Jacobson I., 2004, OBJECT ORIENTED SOFT
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kapteijns T., 2009, CODE CENTRIC MODEL C, P22
   Naumenko A., 2003, IC200344 SWISS FED I
   *OBJ MAN GROUP, 2009, GETT SPEC PROD
   *OBJ MAN GROUP, 2011, FORMAL20110201 OMG
   *OBJ MAN GROUP, 2009, INTR OMGS UN MOD LAN
   *OBJ MAN GROUP, 2005, AD20050402 OMG
   Object Management Group, 2010, FORMAL20100201 OMG
   Object Management Group, 2010, FORMAL20100505 OMG
   PICEK R, 2007, 18 INT C INF INT SYS, P407
   Richters M., 2002, BISS MONOGRAPHS, V14
   ROSS DT, 1985, COMPUTER, V18, P25, DOI 10.1109/MC.1985.1662862
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   RUMPE B, 1998, 2 ECOOP WORKSH PREC, P177
   Seehusen Fredrik, 2009, Telektronikk, V105, P126
   Simons A., 1999, BEHAV SPECIFICATIONS, P237
   Simons A.J. H., 2000, RIG OBJ OR METH ROOM
   STAPLETON J, 1999, 29 INT C TECHN OBJ O, V406
   Storrle Harald., 2003, Proceedings of Workshop on Critical Systems Development with UML (CSDUML '03), P79
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
   Warmer J., 1998, OBJECT TECHNOLOGY SE
NR 38
TC 27
Z9 29
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 441
EP 446
DI 10.1007/s10270-011-0207-y
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200002
DA 2024-07-18
ER

PT J
AU Monperrus, M
   Jézéquel, JM
   Baudry, B
   Champeau, J
   Hoeltzener, B
AF Monperrus, Martin
   Jezequel, Jean-Marc
   Baudry, Benoit
   Champeau, Joel
   Hoeltzener, Brigitte
TI Model-driven generative development of measurement software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID METRICS
AB Metrics offer a practical approach to evaluate properties of domain-specific models. However, it is costly to develop and maintain measurement software for each domain-specific modeling language. In this paper, we present a model-driven and generative approach to measuring models. The approach is completely domain-independent and operationalized through a prototype that synthesizes a measurement infrastructure for a domain-specific modeling language. This model-driven measurement approach is model-driven from two viewpoints: (1) it measures models of a domain-specific modeling language; (2) it uses models as unique and consistent metric specifications, with respect to a metric specification metamodel which captures all the necessary concepts for model-driven specifications of metrics. The benefit from applying the approach is evaluated by four case studies. They indicate that this approach significantly eases the measurement activities of model-driven development processes.
C1 [Monperrus, Martin] Tech Univ Darmstadt, Darmstadt, Germany.
   [Jezequel, Jean-Marc] Univ Rennes, Rennes, France.
   [Jezequel, Jean-Marc; Baudry, Benoit] INRIA, Rennes, France.
   [Champeau, Joel; Hoeltzener, Brigitte] ENSIETA, Brest, France.
C3 Technical University of Darmstadt; Universite de Rennes; Inria; ENSTA
   Bretagne
RP Monperrus, M (corresponding author), Tech Univ Darmstadt, Darmstadt, Germany.
EM monperrus@cs.tu-darmstadt.de
RI Monperrus, Martin/I-3640-2012; Jezequel, Jean-Marc/AAF-3854-2019
OI Monperrus, Martin/0000-0003-3505-3383; Jezequel,
   Jean-Marc/0000-0002-0582-9745
CR [Anonymous], SOFTWARE MEASURES CA
   Baroni A., 2002, ECOOP 02 WORKSH QUAN
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BERENBACH B, 2006, P 28 INT C SOFTW ENG, P445
   Budinsky F., 2004, Eclipse modeling framework: a developer's guide
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   DAVIS A, 1993, P 1 INT SOFTW METR S
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   DOUGLASS B, 2004, COMPUTING MODEL COMP
   El-wakil M. A. M., 2005, P 9 INT C EMP ASS SO
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   García F, 2007, INFORM SCIENCES, V177, P2570, DOI 10.1016/j.ins.2007.01.018
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   García F, 2009, KNOWL ENG REV, V24, P23, DOI 10.1017/S0269888909000125
   GUERRA E, 2008, J VISUAL LANG COMPUT, V19, P1
   HAMMER T, 1997, P 3 IEEE INT S REQ E
   HARMER TJ, 2002, P INT C SOFTW MAINT
   Henderson-Sellers B, 2002, LECT NOTES COMPUT SC, V2425, P409
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Kolde C., 2004, BASIC METRICS REQUIR
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Loconsole A., 2001, P 12 EUR SOFTW CONTR
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   MARINESCU C, 2005, IEEE METRICS, P11
   McQuillan J.A., 2006, DEFINITION CHIDAMBER
   MCQUILLAN JA, 2006, P 4 INT C PRINC PRAC
   Mens T., 2002, Electronic Notes in Theoretical Computer Science, V72, P57
   Misic V.B., 1997, Proceedings of the Technology of Object-Oriented Languages (TOOLS 1997), P330
   MONPERRUS M, 2008, MODEL DRIVEN SOFTWAR
   MONPERRUS M, 2007, P 2 WORKSH MOD SIZ M
   MONPERRUS M, 2010, SYST ENG, V13
   MONPERRUS M, 2008, P 4 EUR C MOD DRIV A
   MONPERRUS M, 2008, THESIS U RENNES
   Mora B., 2008, P 8 WORKSH DOM SPEC
   MORA B, 2008, P INT C ENT INF SYST
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   *OMG, 2006, RFP SOFTW METR MET A
   *OMG, 2004, MOF 2 0 SPEC
   Paulk M.C., 1993, KEY PRACTICES CAPABI
   Pawlak R., 2006, 5901 INRIA
   REISSING R, 2001, ECOOP 01 WORKSH QAOO
   REYNOSO L, 2006, P 1 WORKSH QUAL MOD
   *SAE, 2006, AADL STAND
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Singh Y., 2004, International Journal on Information and Management Sciences, V15, P69
   Staron M, 2009, INFORM SOFTWARE TECH, V51, P721, DOI 10.1016/j.infsof.2008.10.001
   Sztipanovits J, 2001, IEEE IMTC P, P1660, DOI 10.1109/IMTC.2001.929485
   TANG MH, 2002, P MODELS UML 2002 UM
   Vepa E., 2006, P 1 WORKSH MOD SIZ M
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 54
TC 6
Z9 6
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 537
EP 552
DI 10.1007/s10270-010-0165-9
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200007
DA 2024-07-18
ER

PT J
AU Kirner, R
   Knoop, J
   Prantl, A
   Schordan, M
   Kadlec, A
AF Kirner, Raimund
   Knoop, Jens
   Prantl, Adrian
   Schordan, Markus
   Kadlec, Albrecht
TI Beyond loop bounds: comparing annotation languages for worst-case
   execution time analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Worst-case execution time (WCET) analysis; Annotation languages;
   Path-oriented , constraint-oriented, and hierarchy-oriented WCET
   annotation languages; WCET annotation language challenge
AB Worst-case execution time (WCET) analysis is concerned with computing a precise-as-possible bound for the maximum time the execution of a program can take. This information is indispensable for developing safety-critical real-time systems, e. g., in the avionics and automotive fields. Starting with the initial works of Chen, Mok, Puschner, Shaw, and others in the mid and late 1980s, WCET analysis turned into a well-established and vibrant field of research and development in academia and industry. The increasing number and diversity of hardware and software platforms and the ongoing rapid technological advancement became drivers for the development of a wide array of distinct methods and tools for WCET analysis. The precision, generality, and efficiency of these methods and tools depend much on the expressiveness and usability of the annotation languages that are used to describe feasible and infeasible program paths. In this article we survey the annotation languages which we consider formative for the field. By investigating and comparing their individual strengths and limitations with respect to a set of pivotal criteria, we provide a coherent overview of the state of the art. Identifying open issues, we encourage further research. This way, our approach is orthogonal and complementary to a recent approach of Wilhelm et al. who provide a thorough survey of WCET analysis methods and tools that have been developed and used in academia and industry.
C1 [Kirner, Raimund; Kadlec, Albrecht] Vienna Univ Technol, Inst Comp Engn, A-1040 Vienna, Austria.
   [Knoop, Jens] Vienna Univ Technol, Inst Comp Languages, Fac Informat, A-1040 Vienna, Austria.
   [Schordan, Markus] Univ Appl Sci Tech Wien, Vienna, Austria.
C3 Technische Universitat Wien; Technische Universitat Wien; Technische
   Universitat Wien
RP Kirner, R (corresponding author), Vienna Univ Technol, Inst Comp Engn, A-1040 Vienna, Austria.
EM raimund@vmars.tuwien.ac.at; knoop@complang.tuwien.ac.at;
   adrian@complang.tuwien.ac.at; schordan@technikum-wien.at;
   albrecht@vmars.tuwien.ac.at
OI Kirner, Raimund/0000-0003-3921-6813
FU Austrian Science Fund (Fonds zur Forderung der wissenschaftlichen
   Forschung) [P18925-N13]; ARTIST-Design Networks of Excellence; EU
   [215068];  [ARTIST2]
FX This work was partially funded by the Austrian Science Fund (Fonds zur
   Forderung der wissenschaftlichen Forschung) within the research project
   " Compiler-Support for Timing Analysis" (CoSTA) under contract
   P18925-N13, by the ARTIST2 and ARTIST-Design Networks of Excellence
   (http://www.artist-embedded.org/), and the research project "
   Integrating European Timing Analysis Technology" (ALL-TIMES) under
   contract No 215068 funded by the 7th EU R&D Framework Programme.
CR AHO AV, 2007, COMPILERS PRINCI PLE
   [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], P 21 IEEE REAL TIM S
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], PROGRAMMING LANGUAGE
   [Anonymous], 1960, IRE transactions on Electronic Computers, DOI [DOI 10.1109/TEC.1960.5221603, 10.1109/TEC.1960.5221603]
   BALLABRIGA C, 2008, OTAWA ONLINE PROGRAM
   Bernat G, 2002, REAL TIM SYST SYMP P, P279, DOI 10.1109/REAL.2002.1181582
   BLIEBERGER J, 1994, COMPUT LANG, V20, P193, DOI 10.1016/0096-0551(94)90004-3
   BODK R, 1997, SIGSOFT SOFTW ENG NO, V22, P361
   CASSE H, 2006, EUR C EMB REAL TIM S, P8
   Chapman R, 1996, REAL-TIME SYST, V11, P145, DOI 10.1007/BF00365316
   CHAPMAN R, 1994, P ACM WORKSH LANG CO
   CHEN M, 1987, TIMING ANAL LANGUAGE
   COLIN A, 2001, P 13 EUR C REAL TIM
   Ermedahl A, 2005, IEEE T COMPUT, V54, P1104, DOI 10.1109/TC.2005.139
   ERMEDAHL A, 2002, P 2 INT WORKSH WORST
   FERDINAND C, 2003, P 3 INT WORKSH WORST, P17
   GUSTAFSSON J, 2006, P 2 IEEE S LEV APPL, P246
   Harbour MG, 2001, EUROMICRO, P125, DOI 10.1109/EMRTS.2001.934015
   HEALY CA, 1999, IEEE T COMP, V48
   HECKMANN R, 2005, EMB WORLD 2005 C FEB
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOLSTI N, 2005, BOUND T ASSERTION LA
   HOLSTI N, 2000, EUR SIGN PROC C 2000
   HOLSTI N, 2008, P 8 INT WORKSH WORLS, P149, DOI DOI 10.4230/OASICS.WCET.2008.1663
   HOLSTI N, 2005, BOUND T TIMING ANAL
   *IBM, 2010, IBM ILOG CPLEX HIGH
   Kirner R, 2002, EUROMICRO, P31, DOI 10.1109/EMRTS.2002.1019183
   KIRNER R, 2008, P 8 INT WORKSH WORST, P53
   KIRNER R, 2005, P 8 INT WORKSH WORST
   KIRNER R, 2007, P 7 INT WORKSH WORST, P83
   KIRNER R, 2001, USERS MANUAL WCET AN
   KIRNER R, 2008, COMPILER SUPPORT TIM
   Kirner R, 2009, EUROMICRO, P119, DOI 10.1109/ECRTS.2009.8
   KLINGERMAN E, 1986, IEEE T SOFTWARE ENG, V12, P1941
   LI X, 2010, CHRONOS USER MAN UAL
   Li X, 2007, SCI COMPUT PROGRAM, V69, P56, DOI 10.1016/j.scico.2007.01.014
   LI YTS, 1995, DES AUT CON, P456
   LISPER B, 2005, 25 U MAL DEP COMP SC
   LOKUCIEJEWSKI P, 2008, ACM INT C P SERIES, V296, P21
   Lundqvist T., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P12, DOI 10.1109/REAL.1999.818824
   MOK AK, 1989, P 6 IEEE WORKSH REAL, P74
   Muchnick S., 1997, ADV COMPILER DESIGN
   *OMG, 2008, UML PROF MOD AN REAL
   PARK CY, 1991, COMPUTER, V24, P48, DOI 10.1109/2.76286
   PARK CY, 1993, REAL-TIME SYST, V5, P31, DOI 10.1007/BF01088696
   PARK CY, 1992, 920802 TR U WASH
   PRANTL A, 2009, P 9 INT WORKSH WORST
   PRANTL A, 2008, 8 INT WORKSH WORST C, P141
   Puschner P., 1989, Real-Time Systems, V1, P159, DOI 10.1007/BF00571421
   Puschner PP, 1997, REAL-TIME SYST, V13, P67, DOI 10.1023/A:1007905003094
   *RAPITA SYST LTD, 2006, WORST CAS EX TIM AN
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   SHAW AC, 1989, IEEE T SOFTWARE ENG, V15, P875, DOI 10.1109/32.29487
   Stappert F, 2000, J SYST ARCHITECT, V46, P339, DOI 10.1016/S1383-7621(99)00010-7
   TAN L, 2006, 2 INT IEEE S LEV APP
   TARJAN RE, 1981, J ACM, V28, P594, DOI 10.1145/322261.322273
   VRCHOTICKY A, 1992, 021992 TU WIEN I TEC
   VRCHOTICKY A, 1994, P ACM SIGPLAN WORKSH
   Wenzel I, 2005, DES AUT TEST EUROPE, P606, DOI 10.1109/DATE.2005.76
   WENZEL I, 2008, P 3 INT S LEV APPL F
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   WRIGHT F, 2001, COMPUTINGWITH MAPLE
NR 64
TC 8
Z9 10
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 411
EP 437
DI 10.1007/s10270-010-0161-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800008
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Whittle, J
AF Whittle, Jon
TI Extending interaction overview diagrams with activity diagram constructs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Interactions; Activity diagrams; Formal semantics
ID REQUIREMENTS
AB UML2.0 introduced interaction overview diagrams (IODs) as a way of specifying relationships between UML interactions. IODs are a variant of activity diagrams that show control flow between a set of interactions. The nodes in an IOD are either inline interactions or references to an interaction. A number of recent papers have defined a formal semantics for IODs. These are restricted, however, to interactions that can be specified using basic sequence diagrams. This excludes the many rich modeling constructs available in activity diagrams such as interruptible regions, activity groups, concurrent node executions, and flow final nodes. It is non-trivial to allow such constructs in IODs because their meaning has to be interpreted in the context of interaction sequences rather than activities. In this paper, we consider how some of these activity diagram constructs can be used practically in IODs. We motivate the integration of these constructs into IODs using a NASA air traffic control subsystem and define a formal semantics for these constructs that builds on an existing semantics definition for IODs.
C1 Univ Lancaster, Dept Comp, Lancaster LA1 4YW, England.
C3 Lancaster University
RP Whittle, J (corresponding author), Univ Lancaster, Dept Comp, Lancaster LA1 4YW, England.
EM whittle@comp.lancs.ac.uk
CR ALEXANDER I, 2005, SCENARIO PLUS USE CA
   Alexander I., 2004, SCENARIOS STORIES US
   AMYOT D, 1999, REQUIR ENG, P444
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Belachew M, 2001, EUROMICRO, P117, DOI 10.1109/EMRTS.2001.934013
   CLARK T, 2005, APPL METAMODELING FD
   Combes P, 2005, LECT NOTES COMPUT SC, V3707, P414
   DENERY D, 1997, AIAA GUIDANCE NAVIGA
   GOTTENSDEINER E, 2004, SCENARIOS STORIES US, P81
   Gross M, 2005, CHEM WORLD-UK, V2, P6
   GROSU R, 2000, 3 ITN S OBJ OR REAL, P104
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   HAUGEN O, 2005, J SOFTW SYST MODEL, V4, P355
   *INT TEL U, 2004, REC Z 120 MESS SEQ C
   Jayaraman PK, 2007, PROC INT CONF SOFTW, P43, DOI 10.1109/ICSECOMPANION.2007.80
   KRUGER I, 2000, THESIS TU MUNCHEN, P148
   MAIDEN NAM, 1998, CREWS SAVRE SYSTEMAT, P148
   *OMG, 2007, UN MOD LANG 2 1 1 SP
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   ROBINSON JE, 2003, WEATHER CONTROL REQU
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Swiderski F., 2004, Threat Modeling (Microsoft Professional), VSecond
   Uchitel S., 2002, SIGSOFT FSE, P109
   WHITTLE J, 2004, FUNDAMENTAL APPROACH, P170
   WHITTLE J, 2005, 3 WORLD C SOFTW QUAL, P41
   WHITTLE J, 2006, SOFTW QUAL PROF, V8, P17
   Whittle J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P19
   ZACHOS K, 2004, REQUIR ENG, P360
NR 28
TC 4
Z9 5
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2010
VL 9
IS 2
BP 203
EP 224
DI 10.1007/s10270-009-0114-7
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 577YP
UT WOS:000276260200004
DA 2024-07-18
ER

PT J
AU Levendovszky, T
   Lengyel, L
   Mészáros, T
AF Levendovszky, Tihamer
   Lengyel, Laszlo
   Meszaros, Tamas
TI Supporting domain-specific model patterns with metamodeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB Metamodeling is a widely applied technique in the field of graphical languages to create highly configurable modeling environments. These environments support the rapid development of domain-specific modeling languages (DSMLs). Design patterns are efficient solutions for recurring problems. With the proliferation of DSMLs, there is a need for domain-specific design patterns to offer solutions to problems recurring in different domains. The aim of this paper is to provide theoretical and practical foundations to support domain-specific model patterns in metamodeling environments. In order to support the treatment of premature model parts, we weaken the instantiation relationship. We provide constructs relaxing the instantiation rules, and we show that these constructs are appropriate and sufficient to express patterns. We provide the necessary modifications in metamodeling tools for supporting patterns. With the contributed results, a well-founded domain-specific model pattern support can be realized in metamodeling tools.
C1 [Levendovszky, Tihamer; Lengyel, Laszlo; Meszaros, Tamas] Budapest Univ Technol & Econ, H-1117 Budapest, Hungary.
   [Levendovszky, Tihamer] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN USA.
C3 Budapest University of Technology & Economics; Vanderbilt University
RP Levendovszky, T (corresponding author), Budapest Univ Technol & Econ, H-1117 Budapest, Hungary.
EM tihamer@aut.bme.hu
RI Mészáros, Tamás/H-2095-2012; Lengyel, Laszlo/G-9367-2012
OI Lengyel, Laszlo/0000-0002-5129-4198
FU Hungarian Academy of Sciences
FX The authors would like to thank the anonymous reviewers and the editor
   for the comments on the draft of the paper, contributing the rationale
   behind the example for multiplicity and cardinality constructs, which
   helped the improvement to a great extent. This paper was supported by
   the Janos Bolyai Research Scholarship of the Hungarian Academy of
   Sciences.
CR AGRAWAL A, 2004, 2 INT C GRAPH TRANSF
   Albin-Amiot H., 2001, P 1 ECOOP WORKSH AUT
   [Anonymous], ECLIPSE MODELING FRA
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   ATKINSON C, 2001, UML, P19
   de Lara J., 2004, SOFTWARE SYSTEMS MOD, V3, P194, DOI [DOI 10.1007/S10270-003-0047-5, 10.1007/s10270-003-0047-5]
   DIETRICH J, 2007, DESIGN PATTERNS FORM
   DONG J, 2007, DESIGN PATTERNS FORM
   EDEN A, 1999, P 2 NORD WORKSH SOFT
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   FLORES A, 2007, DESIGN PATTERNS FORM
   FLORES A, 2003, P CACIC 03 9 ARG C C
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GASPARIS E, 2007, DESIGN PATTERNS FORM
   GUENNEC A, 2000, LNCS, V1939, P482
   Hosking J.G., 2007, DESIGN PATTERNS FORM
   Karsai G, 2003, J UNIVERS COMPUT SCI, V9, P1296
   Kim DK, 2004, J VISUAL LANG COMPUT, V15, P265, DOI 10.1016/j.jvlc.2004.01.004
   Kohler H. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P241, DOI 10.1109/ICSE.2000.870415
   KURTEV I, 2004, P 1 EUR MDA WORKSH M
   LANO K, 2007, DESIGN PATTERNS FORM
   LARA J, 2002, 4 INT C ENT INF SYST, P642
   Lauder A., 1998, LECT NOTES COMPUTER, V1445, P114
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Lengyel L, 2006, THESIS BUDAPEST U TE
   LENGYEL L, 2007, 2 INT WORK C EV NOV
   LENGYEL L, 2006, 2 INT WORKSH MOD DRI, P39
   Lengyel Laszlo., 2006, International Journal of Computer Science, V1, P45
   Levendovszky T., 2004, INT WORKSH GRAPH BAS
   LEVENDOVSZKY T, 2005, WSEAS T COMPUTERS, V4
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Minas M., 2006, P 3 INT WORKSH GRAPH
   *OMG, 2006, OML OCL SPEC VERS 2
   *OMG, 2007, OMG UML SPEC VERS 2
   *OMG, OMG QVT MET OBJ FAC
   Roberts D., 1997, PATTERN LANGUAGES PR
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Sprinkle J, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P159
   Taentzer G., 2005, ACM IEEE 8 INT C MOD
   TAENTZER G., 2003, P TOOL EX FORM METH
   Taibi T., 2007, Design patterns formalization techniques
   VARRO D, 2003, J SOFTWARE SYSTEMS M, V2, P187
NR 43
TC 14
Z9 18
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 501
EP 520
DI 10.1007/s10270-009-0118-3
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900004
DA 2024-07-18
ER

PT J
AU Petriu, DB
   Woodside, M
AF Petriu, Dorin B.
   Woodside, Murray
TI An intermediate metamodel with scenarios and resources for generating
   performance models from UML designs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 7th Satellite Activities Conference on UML Modeling Languages and
   Applications
CY OCT 11-15, 2004
CL Lisbon, PORTUGAL
SP SINFIC, Springer, Mentor Graph, IBM, ACM SIGSOFT, IEEE Comp Soc, New Univ Lisbon, Turismo Lisboa, Object Management Grp
DE unified modeling language; performance evaluation; scenarios; model
   transformations
AB Performance analysis of a software specification in a language such as UML can assist a design team in evaluating performance-sensitive design decisions and in making design trade-offs that involve performance. Annotations to the design based on the UML Profile for Schedulability, Performance and Time provide necessary information such as workload parameters for a performance model, and many different kinds of performance techniques can be applied. The Core Scenario Model (CSM) described here provides a meta-model for an intermediate form which correlates multiple UML diagrams, extracts the behaviour elements with the performance annotations, attaches important resource information that is obtained from the UML, and supports the creation of many different kinds of performance models. Models can be made using queueing networks, layered queues, timed Petri nets, and it is proposed to develop the CSM as an intermediate language for all performance formalisms. This paper defines the CSM and describes how it resolves questions that arise in performance model-building.
C1 [Petriu, Dorin B.; Woodside, Murray] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Petriu, DB (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM dorin@sce.carleton.ca; cmw@sce.carleton.ca
CR [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Buhr R.J. A., 1995, USE CASE MAPS OBJECT
   Carroll JM, 1998, IEEE T SOFTWARE ENG, V24, P1156, DOI 10.1109/32.738344
   Cortellessa V., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P58, DOI 10.1145/350391.350406
   *DSTC, 2004, AD040106 OMG
   Franks G., 1996, Software Quality, P15
   KAHKIPURO P, 2001, P PERF ENG C, P167
   KERBER L, 2001, PERFORMANCE ENG, P185
   LASSILA O, 1999, 22 WORLD WID WEB CON
   Liu J., 2000, Real-Time Systems
   LOPEZGRAO JP, 2004, 4 INT WORKSH SOFTW P, P25
   *OBJ MAN GROUP, 2003, PTC031004 OBJ MAN GR
   *OBJ MAN GROUP, 2005, UML PROF MOD AN REAL
   *OBJ MAN GROUP, 2002, AD020410 RFP
   *OBJ MAN GROUP, 2002, PTC020302 OMG
   Object Management Group, 2005, FORMAL050704 OMG
   PETRI DC, 2002, P 12 INT C MOD TOOLS
   Petriu D., 2003, UML REAL, P221
   PETRIU D, 2002, P 12 INT C MOD TOOLS
   Petriu DB, 2004, LECT NOTES COMPUT SC, V3273, P41
   *PUM PROJ, XML SCH COR SCEN MOD
   SMITH CU, 2004, P 1 INT C QUANT EV S
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Woodside CM, 2001, INT J SOFTW ENG KNOW, V11, P407, DOI 10.1142/S0218194001000608
   WOODSIDE M, 2005, P 5 INT WORKSH SOFTW
   WU X, 2004, P 4 INT WORKSH SOFTW, P290, DOI DOI 10.1145/974044.974089
   Xu J, 2003, LECT NOTES COMPUT SC, V2794, P291
NR 28
TC 43
Z9 46
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2007
VL 6
IS 2
BP 163
EP 184
DI 10.1007/s10270-006-0026-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WR
UT WOS:000254667700004
DA 2024-07-18
ER

PT J
AU Guizzardi, R
   Amaral, G
   Guizzardi, G
   Mylopoulos, J
AF Guizzardi, Renata
   Amaral, Glenda
   Guizzardi, Giancarlo
   Mylopoulos, John
TI An ontology-based approach to engineering ethicality requirements
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements elicitation and analysis; Ontological analysis;
   Foundational ontologies; Ethicality requirements; Ethical systems
AB In a world where Artificial Intelligence (AI) is pervasive, humans may feel threatened or at risk by giving up control to machines. In this context, ethicality becomes a major concern to prevent AI systems from being biased, making mistakes, or going rogue. Requirements Engineering (RE) is the research area that can exert a great impact in the development of ethical systems by design. However, proposing concepts, tools and techniques that support the incorporation of ethicality into the software development processes as explicit requirements remains a great challenge in the RE field. In this paper, we rely on Ontology-based Requirements Engineering (ObRE) as a method to elicit and analyze ethicality requirements ('Ethicality requirements' is adopted as a name for the class of requirements studied in this paper by analogy to other quality requirements studied in software engineering, such as usability, reliability, and portability, etc. The use of this term (as opposed to 'ethical requirements') highlights that they represent requirements for ethical systems, analogous to how 'trustworthiness requirements' represent requirements for trustworthy systems. To put simply: the predicates 'ethical' or 'trustworthy' are not meant to be predicated over the requirements themselves). ObRE applies ontological analysis to ontologically unpack terms and notions that are referred to in requirements elicitation. Moreover, this method instantiates the adopted ontology and uses it to guide the requirements analysis activity. In a previous paper, we presented a solution concerning two ethical principles, namely Beneficence and Non-maleficence. The present paper extends the previous work by targeting two other important ethicality principles, those of Explicability and Autonomy. For each of these new principles, we do ontological unpacking of the relevant concepts, and we present requirements elicitation and analysis guidelines, as well as examples in the context of a driverless car case. Furthermore, we validate our approach by analysing the requirements elicitation made for the driverless car case in contrast with a similar case, and by assessing our method's coverage w.r.t European Union guidelines for Trustworthy AI.
C1 [Guizzardi, Renata; Amaral, Glenda; Guizzardi, Giancarlo] Univ Twente, Enschede, Netherlands.
   [Mylopoulos, John] Univ Toronto, Toronto, ON, Canada.
C3 University of Twente; University of Toronto
RP Guizzardi, R (corresponding author), Univ Twente, Enschede, Netherlands.
EM r.guizzardi@utwente.nl; g.c.mouraamaral@utwente.nl;
   g.guizzardi@utwente.nl; jm@cs.toronto.edu
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   Al Balushi TH, 2007, LECT NOTES COMPUT SC, V4542, P306
   Almeida JPA, 2019, LECT NOTES COMPUT SC, V11788, P469, DOI 10.1007/978-3-030-33223-5_39
   Amaral G., 2021, 40 INT C CONCEPTUAL, P257
   Amaral G, 2021, LECT NOTES COMPUT SC, V13011, P257, DOI 10.1007/978-3-030-89022-3_21
   Amaral G, 2020, LECT NOTES COMPUT SC, V12400, P342, DOI 10.1007/978-3-030-62522-1_25
   Anjum RaniLill., 2013, Powers and Capacities in Philosophy: The New Aristotelianism, P231
   [Anonymous], 2016, LEARN ROAD CODE
   [Anonymous], 2005, Ontological foundations for structural conceptual models
   [Anonymous], 2019, Ethics Guidelines for Trustworthy AI
   [Anonymous], 2015, FRAMEWORK ETHICAL DE
   [Anonymous], 2021, Ethics By Design and Ethics of Use Approaches for Artificial Intelligence
   [Anonymous], 2019, 7 MOST PRESSING ETHI
   Baratella R, 2022, LECT NOTES BUS INF P, V446, P389, DOI 10.1007/978-3-031-05760-1_23
   Benevides AB, 2019, APPL ONTOL, V14, P293, DOI 10.3233/AO-190214
   Bernasconi A., 2022, BMC BIOINFORMATICS, V23, P1
   Berto Francesco, 2015, Ontology and Metaontology: A Contemporary Guide
   Borgo S, 2022, APPL ONTOL, V17, P1, DOI 10.3233/AO-220265
   Castelfranchi C., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P41
   Dalpiaz F., 2016, ARXIV
   Dennett Daniel., 2009, The Oxford Handbook of Philosophy of Mind, DOI DOI 10.1093/OXFORDHB/9780199262618.003.0020
   Dignum V, 2019, ARTIF INTELL-FOUND, P1, DOI 10.1007/978-3-030-30371-6
   Etzioni A., 2017, The Journal of Ethics, P403, DOI DOI 10.1007/S10892-017-9252-2
   Floridi L, 2018, MIND MACH, V28, P689, DOI 10.1007/s11023-018-9482-5
   Fonseca C.M., 2021, JOWO
   Fonseca CM, 2022, LECT NOTES COMPUT SC, V13607, P18, DOI 10.1007/978-3-031-17995-2_2
   Fonseca CM, 2019, LECT NOTES COMPUT SC, V11788, P28, DOI 10.1007/978-3-030-33223-5_4
   Guarino N, 2015, LECT NOTES COMPUT SC, V9097, P279, DOI 10.1007/978-3-319-19069-3_18
   Guerson J, 2015, IEEE INT ENTERP, P144, DOI 10.1109/EDOCW.2015.17
   Guizzardi G., 2023, PREPRINT, DOI DOI 10.48550/ARXIV.2304.11124
   Guizzardi G, 2021, LECT NOTES COMPUT SC, V13011, P356, DOI 10.1007/978-3-030-89022-3_28
   Guizzardi G, 2021, DATA KNOWL ENG, V134, DOI 10.1016/j.datak.2021.101891
   Guizzardi G, 2020, DATA INTELLIGENCE, V2, P181, DOI 10.1162/dint_a_00040
   Guizzardi G, 2016, LECT NOTES COMPUT SC, V9850, P20, DOI 10.1007/978-3-319-45348-4_2
   Guizzardi G, 2015, APPL ONTOL, V10, P259, DOI 10.3233/AO-150157
   Guizzardi G, 2013, LECT NOTES COMPUT SC, V8217, P327, DOI 10.1007/978-3-642-41924-9_27
   Guizzardi Renata, 2020, Advances in Artificial Intelligence. 33rd Canadian Conference on Artificial Intelligence, Canadian AI 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12109), P251, DOI 10.1007/978-3-030-47358-7_24
   GUIZZARDI R., 2014, P 8 FORMAL ONTOLOGY, P344, DOI [DOI 10.3233/978-1-61499-438-1-344, 10.3233/978-1-61499-438-1-344]
   Guizzardi R., 2020, P 13 SEMINAR ONTOLOG
   Guizzardi R., 2006, THESIS U TWENTE NETH
   Guizzardi R, 2022, LECT NOTES BUS INF P, V450, P221, DOI 10.1007/978-3-031-07475-2_15
   Gunning D, 2019, AI MAG, V40, P44, DOI 10.1609/aimag.v40i2.2850
   High-Level Expert Groupon ArtificialIntelligence E.C., 2018, DRAFT ETH GUID TRUST
   Hu HB, 2015, IET SOFTW, V9, P145, DOI 10.1049/iet-sen.2014.0153
   Mumford S., 2003, DISPOSITIONS, DOI [10.1093/acprof:oso/9780199259823.001.0001, DOI 10.1093/ACPROF:OSO/9780199259823.001.0001]
   ONeil C., 2017, Weapons of math destruction: How big data increases inequality and threatens democracy
   Peters Dorian, 2020, IEEE Transactions on Technology and Society, V1, P34, DOI 10.1109/TTS.2020.2974991
   Porello D, 2018, LECT NOTES ARTIF INT, V11298, P152, DOI 10.1007/978-3-030-03840-3_12
   Rashid A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P523, DOI 10.1109/ICSE.2015.187
   Romanenko E, 2022, LECT NOTES ARTIF INT, V13514, P201, DOI 10.1007/978-3-031-17105-5_15
   Sales TP, 2018, LECT NOTES COMPUT SC, V11157, P121, DOI 10.1007/978-3-030-00847-5_11
   SEARLE JR, 1980, BEHAV BRAIN SCI, V3, P417, DOI 10.1017/S0140525X00006038
   Smith Barry., 2007, Metaphysics and Truthmakers, P79, DOI DOI 10.1515/9783110326918.79
   Thompson Naomi., 2016, P ARISTOTELIAN SOC, V116, P395, DOI [10.1093/arisoc/aow012, DOI 10.1093/ARISOC/AOW012]
   Van Fraassen Bas, 1988, Theories of explanation, V8, P135
   Veleda R, 2019, LECT NOTES COMPUT SC, V11483, P145, DOI 10.1007/978-3-030-21290-2_10
   Verdonck M, 2019, INFORM SYST, V81, P92, DOI 10.1016/j.is.2018.11.009
   Verdonck M, 2016, LECT NOTES COMPUT SC, V9974, P83, DOI 10.1007/978-3-319-46397-1_7
NR 58
TC 3
Z9 3
U1 3
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1897
EP 1923
DI 10.1007/s10270-023-01115-3
EA JUL 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001034575200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ma, Q
   Kaczmarek-Hess, M
   de Kinderen, S
AF Ma, Qin
   Kaczmarek-Hess, Monika
   de Kinderen, Sybren
TI Validation and verification in domain-specific modeling method
   engineering: an integrated life-cycle view
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling method engineering; Validation and
   verification; Enterprise modeling
ID ENTERPRISE ARCHITECTURE; FORMAL VERIFICATION; F-ALLOY; FRAMEWORK;
   LANGUAGE; PHYSICS; KNOWLEDGE; SUPPORT; QUALITY
AB Enterprise models have the potential to constitute a valuable asset for organizations, e.g., in terms of enabling a variety of analyses or by fostering cross-organizational communication. Therefore, while designing an enterprise modeling method one needs to ensure that created enterprise models are of good quality in terms of: (1) syntactic validity, which entails that a model adheres to syntactic rules encoded in the underlying modeling language, (2) semantic validity, i.e., that the model should make sense in its context of use, and (3) pragmatic validity, i.e., that the model should effectively and efficiently serve the intended purpose. To ensure these three validity types, verification and validation (V &V) techniques need to be exploited while designing the enterprise modeling method, e.g., to check created enterprise models against syntactic rules, or to ensure intra- and inter-model consistency. This paper targets the systematic embedding of V &V techniques into the engineering of (enterprise) domain-specific modeling methods (DSMMs). Specifically, after identifying and analyzing existing DSMM engineering approaches, we synthesize their elements (such as typical phases and steps) and enrich them with V &V techniques. This paper is an extension of our previous work and additionally contributes (1) a systematic analysis of a wider set of existing approaches to DSMM engineering, (2) an extended background that covers information on models, modeling languages and modeling methods, (3) additional details regarding selected validation and verification techniques for each phase, and finally (4) a road-map encompassing desiderata for further advances in V &V in domain-specific modeling method engineering, from the perspectives of practice, research and education.
C1 [Ma, Qin] Univ Luxembourg, Fac Sci Technol & Med, Dept Comp Sci, Esch Sur Alzette, Luxembourg.
   [Kaczmarek-Hess, Monika] Univ Duisburg Essen, Informat Syst & Enterprise Modeling Res Grp, Essen, Germany.
   [de Kinderen, Sybren] Eindhoven Univ Technol, Informat Syst Grp IE & IS, Eindhoven, Netherlands.
C3 University of Luxembourg; University of Duisburg Essen; Eindhoven
   University of Technology
RP Ma, Q (corresponding author), Univ Luxembourg, Fac Sci Technol & Med, Dept Comp Sci, Esch Sur Alzette, Luxembourg.
EM qin.ma@uni.lu; monika.kaczmarek-hess@uni-due.de; s.d.kinderen@tue.nl
RI Ma, Qin/V-7920-2019
OI Ma, Qin/0000-0002-3264-8392; Ma, Qin/0000-0001-8520-8190
CR Ahrendt W., 2016, Lecture notes in computer science, V10001, DOI DOI 10.1007/978-3-319-49812-6
   Alaca OF, 2021, COMPUT STAND INTER, V76, DOI 10.1016/j.csi.2021.103513
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Ammann Paul, 2008, Introduction to software testing, V1st
   Antunes G., 2015, ECIS 2015 COMPLETED
   Asici TZ, 2021, J COMPUT LANG, V62, DOI 10.1016/j.cola.2020.101020
   Azevedo CLB, 2015, INFORM SYST, V54, P235, DOI 10.1016/j.is.2015.04.008
   Azevedo CLB, 2011, IEEE INT ENTERP DIST, P25, DOI 10.1109/EDOC.2011.29
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barash M., 2020, COMPANION P 23 ACMIE
   Barjis J, 2009, LECT NOTES BUS INF P, V24, P651
   Barringer A, 2022, SUBST USE MISUSE, V57, P1743, DOI 10.1080/10826084.2022.2107668
   Bezivin J., 2005, P WORKSH SOFTW MOD E
   Bibel W., 2013, Automated theorem proving
   Bork D., 2015, THESIS U BAMBERG
   Bork D, 2021, SOFTW SYST MODEL, V20, P939, DOI 10.1007/s10270-021-00895-w
   Bork D, 2018, LECT NOTES BUS INF P, V335, P172, DOI 10.1007/978-3-030-02302-7_11
   Braga BFB, 2010, INNOV SYST SOFTW ENG, V6, P55, DOI 10.1007/s11334-009-0120-5
   Brat G., 2010, P 2 NASA FORM METH S
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Chapurlat V, 2008, COMPUT IND, V59, P711, DOI 10.1016/j.compind.2007.12.018
   Chapurlat V, 2006, COMPUT IND, V57, P153, DOI 10.1016/j.compind.2005.06.001
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Cunha A, 2015, SOFTW SYST MODEL, V14, P5, DOI 10.1007/s10270-013-0353-5
   Teixeira MDD, 2016, LECT NOTES BUS INF P, V248, P432, DOI 10.1007/978-3-319-39429-9_27
   de Kinderen S, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P532, DOI 10.1109/MODELS-C53483.2021.00082
   de Kinderen S, 2015, APPL ONTOL, V10, P7, DOI 10.3233/AO-150139
   Department of Defense, 2003, INSTR 5000 61 DOD MO
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Dijkstra E.W., 1988, A Method of Programming
   Duffy DavidA., 1991, PRINCIPLES AUTOMATED
   Efendioglu N., 2015, P 17 INT C INF INT W
   Efendioglu N., 2016, 2016 IEEE 20 INT ENT, P1
   El Kharbili M, 2011, IEEE INT ENTERP DIST, P247, DOI 10.1109/EDOC.2011.23
   El Kharbili M, 2011, INT C COMMERCE BUS, P185, DOI 10.1109/CEC.2011.39
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Feltus C, 2021, LECT NOTES COMPUT SC, V13012, P75, DOI 10.1007/978-3-030-88358-4_7
   Fill HG, 2013, ENTERP MODELLING INF, V8, P4, DOI 10.1007/BF03345926
   Fill HG, 2013, LECT NOTES BUS INF P, V141, P429, DOI 10.1007/978-3-642-40654-6_26
   Filliatre Jean-Christophe, 2011, International Journal on Software Tools for Technology Transfer, V13, P397, DOI 10.1007/s10009-011-0211-0
   Frank U., 2010, ICB Research Report 42
   Frank U., 2011, ICB Research Report 46
   Frank U., 2013, Domain Engineering, P133
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Fumagalli M, 2020, LECT NOTES COMPUT SC, V12584, P15, DOI 10.1007/978-3-030-65847-2_2
   Gammaitoni L., 2017, THESIS U LUXEMBOURG
   Gammaitoni L, 2019, SOFTW SYST MODEL, V18, P213, DOI 10.1007/s10270-017-0630-9
   Gammaitoni L, 2018, SCI COMPUT PROGRAM, V162, P55, DOI 10.1016/j.scico.2017.07.001
   Gammaitoni L, 2014, LECT NOTES COMPUT SC, V8477, P324, DOI 10.1007/978-3-662-43652-3_33
   Gammaitoni  Loic, 2015, INT C SOFTW LANG ENG, P77
   Geeraerts Dirk, 2010, THEORIES LEXICAL SEM
   Ghiran AM., 2020, ADV INFORM SYSTEMS D, P1
   Golas U., 2011, ELECTR COMMUN, V39
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Gries D., 1981, The Science of Programming, DOI [10.1007/978-1-4612-5983-1, DOI 10.1007/978-1-4612-5983-1]
   Guizzardi G, 2015, APPL ONTOL, V10, P259, DOI 10.3233/AO-150157
   Gupta R, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2021), P49, DOI 10.1109/SER-IP52554.2021.00016
   Hadar I, 2013, SCI COMPUT PROGRAM, V78, P1407, DOI 10.1016/j.scico.2012.10.006
   Hajibayova L, 2013, J INF SCI, V39, P676, DOI 10.1177/0165551513481443
   Hall, 2009, PYTHON 3 ABSOLUTE BE, DOI [10.1007/978-1-4302-1633-9, DOI 10.1007/978-1-4302-1633-9]
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Hornung T, 2008, LECT NOTES COMPUT SC, V5231, P265, DOI 10.1007/978-3-540-87877-3_20
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jannaber S, 2017, LECT NOTES COMPUT SC, V10243, P39, DOI 10.1007/978-3-319-59144-5_3
   Jeusfeld, 2016, DOMAIN SPECIFIC CONC, P31, DOI DOI 10.1007/978-3-319-39417-6_2
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kaner C., 1999, TESTING COMPUTER S
   Karagiannis D, 2002, LECT NOTES COMPUT SC, V2455, P182
   Karagiannis D., 2015, P 19 PANH C INF ATH, P5, DOI DOI 10.1145/2801948.2802040
   Karagiannis D, 2021, IFIP ADV INF COMM TE, V598, P273, DOI 10.1007/978-3-030-62412-5_23
   Karagiannis D, 2019, INT REQUIR ENG CONF, P199, DOI 10.1109/RE.2019.00030
   Karagiannis D, 2018, LECT NOTES BUS INF P, V273, P3, DOI 10.1007/978-3-319-73459-0_1
   Karsai G., 2014, ARXIV
   Kharbili M.E., 2013, THESIS U LUXEMBOURG
   Kinderen Sybren, 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P138, DOI 10.1007/978-3-030-63479-7_10
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Krogstie J., 2013, SEMINAL CONTRIBUTION, P103, DOI DOI 10.1007/978-3-642-36926-1
   Krogstie J., 2003, UML and the unified process, P1
   Land O, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-540-85232-2
   Lankhorst MM, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010092301
   Lano K, 2008, INT CONF QUAL SOFTW, P45, DOI 10.1109/QSIC.2008.38
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Loveland D. W., 2016, Automated theorem proving: A logical basis
   Ma Q, 2021, LECT NOTES BUS INF P, V432, P119, DOI 10.1007/978-3-030-91279-6_9
   Ma Q, 2015, SOFTW SYST MODEL, V14, P921, DOI 10.1007/s10270-013-0348-2
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Michael J, 2015, 2015 FIFTEENTH INTERNATIONAL CONFERENCE ON ADVANCES IN ICT FOR EMERGING REGIONS (ICTER), P119, DOI 10.1109/ICTER.2015.7377676
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   Negm E, 2019, INT J ADV COMPUT SC, V10, P624
   Nickerson RC, 2013, EUR J INFORM SYST, V22, P336, DOI 10.1057/ejis.2012.26
   Niemann K.D., 2006, From Enterprise Architecture to IT Governance: Elements of Effective IT Management
   Okoli C, 2015, COMMUN ASSOC INF SYS, V37, P879
   OMG, OMG MET OBJ FAC MOF
   Op't Land M., 2012, Enterprise Engineering Working Conference, P77
   Ozkaya M, 2021, J COMPUT LANG, V63, DOI 10.1016/j.cola.2021.101030
   Persson A, 2010, LECT NOTES BUS INF P, V68, P232
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Poletaeva T, 2017, LECT NOTES BUS INF P, V284, P181, DOI 10.1007/978-3-319-57955-9_14
   Poltronieri I, 2021, LECT NOTES COMPUT SC, V12762, P299, DOI 10.1007/978-3-030-78462-1_23
   Poltronieri Rodrigues I., 2017, Lecture Notes in Computer Science, V10271, P522, DOI DOI 10.1007/978-3-319-58071-5_39
   Proper HA, 2018, IEEE INT ENTERP, P162, DOI 10.1109/EDOCW.2018.00031
   Razo-Zapata I.S., 2018, P JOINT INT C SERVIC
   Savary-Leblanc M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P631, DOI 10.1109/MODELS-C53483.2021.00097
   Schumann Johann M., 2001, Automated theorem proving in software engineering
   Seligman E., 2015, Formal Verification, An Essential Toolkit for Modern VLSI Design
   Sobernig, 2020, VARIABLE DOMAIN SPEC, P33
   Speel PH, 2001, ENCY COMP S, V44, P107
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stirna, 2018, ROLES COMPETENCES EN, P93
   Stoklasa J., 2019, Quality Quantity, V53, P435, DOI [10.1007/s11135-018-0762-1, DOI 10.1007/S11135-018-0762-1]
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   Tuggy David., 2007, OXFORD HDB COGNITIVE, P82
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   van der Linden D, 2012, APPL ONTOL, V7, P471, DOI 10.3233/AO-2012-0115
   Viho C, 2001, INT FED INFO PROC, V69, P53
   Weber R., 2003, Journal of Database Management, V14, P1, DOI 10.4018/jdm.2003070101
   Weidmann N., 2021, CORR ABS210601063
NR 129
TC 3
Z9 3
U1 12
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 647
EP 666
DI 10.1007/s10270-022-01056-3
EA OCT 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4H2
UT WOS:000869667200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Holtmann, J
   Deantoni, J
   Fockel, M
AF Holtmann, Jorg
   Deantoni, Julien
   Fockel, Markus
TI Early timing analysis based on scenario requirements and platform models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Scenario-based requirements; Platform modeling; Real-time systems;
   Timing analysis
ID SCHEDULABILITY ANALYSIS; TIME; TOOL; SEMANTICS; SPECIFICATION; LANGUAGE
AB Distributed, software-intensive systems (e.g., in the automotive sector) must fulfill communication requirements under hard real-time constraints. The requirements have to be documented and validated carefully using a systematic requirements engineering (RE) approach, for example, by applying scenario-based requirements notations. The resources of the execution platforms and their properties (e.g., CPU frequency or bus throughput) induce effects on the timing behavior, which may lead to violations of the real-time requirements. Nowadays, the platform properties and their induced timing effects are verified against the real-time requirements by means of timing analysis techniques mostly implemented in commercial-off-the-shelf tools. However, such timing analyses are conducted in late development phases since they rely on artifacts produced during these phases (e.g., the platform-specific code). In order to enable early timing analyses already during RE, we extend a scenario-based requirements notation with allocation means to platform models and define operational semantics for the purpose of simulation-based, platform-aware timing analyses. We illustrate and evaluate the approach with an automotive software-intensive system.
C1 [Holtmann, Jorg] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Interact Design & Software Engn Div, Gothenburg, Sweden.
   [Deantoni, Julien] Univ Cote dAzur, I3S INRIA Kairos, CNRS, Sophia Antipolis, France.
   [Fockel, Markus] Fraunhofer IEM, Safe & Secure IoT Syst, Paderborn, Germany.
C3 Chalmers University of Technology; Centre National de la Recherche
   Scientifique (CNRS); Universite Cote d'Azur
RP Holtmann, J (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Interact Design & Software Engn Div, Gothenburg, Sweden.
EM jorg.holtmann@gu.se; julien.deantoni@univ-cotedazur.fr;
   markus.fockel@iem.fraunhofer.de
OI Deantoni, Julien/0000-0001-6962-7846; Holtmann,
   Jorg/0000-0001-6141-4571; Fockel, Markus/0000-0002-1269-0702
FU University of Gothenburg
FX Funding Open access funding provided by University of Gothenburg.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1998, LECT NOTES COMPUT SC, V1466, P163, DOI 10.1007/BFb0055622
   Amnell T, 2002, LECT NOTES COMPUT SC, V2280, P460
   Amnell T., 2004, LNCS, P6072, DOI [10.1007/978-3-540-40903, DOI 10.1007/978-3-540-40903]
   Andr C, 2009, RR6925 CCSL INRIA
   André C, 2007, LECT NOTES COMPUT SC, V4735, P559
   [Anonymous], 2016, Z101 ITUT
   [Anonymous], TIMESQUARE
   [Anonymous], Eclipse Modeling Framework (EMF)
   [Anonymous], 2011, Z120 ITUT
   [Anonymous], TA TOOL SUITE
   [Anonymous], Platform architect
   AUDSLEY NC, 1995, REAL-TIME SYST, V8, P173, DOI 10.1007/BF01094342
   autosar, AUTOSAR GBR AUTOMOTI
   Bate I.J., 1998, SCHEDULING TIMING AN
   Bengtsson J., 2004, ADV COURSE PETRI NET, P87124, DOI [DOI 10.1007/978-3-540-27755-2_3, 10.1007/978-3-540-27755-2_3]
   Bernijazov R., 2017, THESIS PADERBORN U
   bitbucket, SCENARIOTOOLS MSD TO
   Boehm BW., 1981, Software Engineering Economics
   Borger E., 2003, ABSTRACT STATE MACHI, DOI [10.1007/978-3-642-18216-7, DOI 10.1007/978-3-642-18216-7]
   Boucheneb H, 2008, FORM ASP COMPUT, V20, P225, DOI 10.1007/s00165-007-0050-7
   Bousse E., 2016, 9 INT C SOFTWARE LAN
   Brenner C., 2014, 13 INT WORKSHOP GRAP, DOI [10.14279/tuj.eceasst.67, DOI 10.14279/TUJ.ECEASST.67]
   Buttazzo GC, 2011, HARD REAL-TIME COMPUTING SYSTEMS: PREDICTABLE SCHEDULING ALGORITHMS AND APPLICATIONS, THIRD EDITION, P1, DOI 10.1007/978-1-14614-0676-1
   Byhlin S, 2005, EUROMICRO, P249, DOI 10.1109/ECRTS.2005.7
   Chen XH, 2011, ASIA PAC SOFWR ENG, P381, DOI 10.1109/APSEC.2011.30
   Clements P.C., 1993, 1993 REAL TIME SYSTE, P1222, DOI [10.1109/REAL.1993.393519, DOI 10.1109/REAL.1993.393519]
   Combemale B, 2013, LECT NOTES COMPUT SC, V8225, P365, DOI 10.1007/978-3-319-02654-1_20
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Deantoni J., 2014, RR8628 INRIA
   Deantoni J., 2012, RR8031 INRIA
   Deantoni J., 2014, Research Report RR-8584
   Deantoni J, 2015, DES AUT TEST EUROPE, P313
   DeAntoni J, 2012, LECT NOTES COMPUT SC, V7304, P34, DOI 10.1007/978-3-642-30561-0_4
   Dietrich C., 2017, 2017 IEEE 23 REAL TI, P3748, DOI [10.1109/RTAS.2017.37, DOI 10.1109/RTAS.2017.37]
   Durisic D, 2019, SOFTW SYST MODEL, V18, P1419, DOI 10.1007/s10270-017-0601-1
   eclipse, ECLIPSE QVT OPERATIO
   eclipse, ECLIPSE PAPYRUSMODEL
   eclipse, ECLIPSE GEMOC STUDIO
   eclipse, XTEXT LANGUAGE DEV F
   Feiertag N., 2008, 1 INT WORKSHOP COMPO
   FIDGE C, 1991, COMPUTER, V24, P28, DOI 10.1109/2.84874
   Fockel M, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P311, DOI 10.5220/0006554103110318
   Gendreau M., 2019, INT SERIES OPERATION, V3rd, DOI [10.1007/978-3-319-91086-4, DOI 10.1007/978-3-319-91086-4]
   GERBER R, 1990, LECT NOTES COMPUT SC, V458, P263
   Glitia C, 2015, DES AUTOM EMBED SYST, V19, P1, DOI 10.1007/s10617-014-9140-y
   Goknil A, 2013, IEEE INT C ENG COMP, P145, DOI 10.1109/ICECCS.2013.28
   Goldberg E, 2008, LECT NOTES COMPUT SC, V4905, P127, DOI 10.1007/978-3-540-78163-9_14
   graphviz, DOT LANGUAGE
   Greenyer Joel, 2013, P 2013 9 JOINT M FDN, P433
   Gutierrez JCP, 1998, EUROMICRO, P35, DOI 10.1109/EMWRTS.1998.684945
   Han S, 2012, IEEE T SYST MAN CY A, V42, P630, DOI 10.1109/TSMCA.2011.2170064
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Harel D, 2002, MASCOTS 2002: 10TH IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS, PROCEEDINGS, P193, DOI 10.1109/MASCOT.2002.1167077
   Harel D., 2003, Come, Let's Play: Scenario-based Programming Using LSCs and the Play-engine, DOI [10.1007/978-3-642-19029-2, DOI 10.1007/978-3-642-19029-2]
   Harel D., 2004, 4 INT C QUALITY SOFT, P210, DOI [10.1109/QSIC.2004.1357938, DOI 10.1109/QSIC.2004.1357938]
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassine J, 2006, LECT NOTES COMPUT SC, V4320, P99
   Hassine J, 2015, REQUIR ENG, V20, P181, DOI 10.1007/s00766-013-0200-9
   Hassine J, 2010, J SYST SOFTWARE, V83, P326, DOI 10.1016/j.jss.2009.09.014
   Hassine J, 2009, LECT NOTES COMPUT SC, V5719, P98, DOI 10.1007/978-3-642-04554-7_7
   Haugen O, 2005, LECT NOTES COMPUT SC, V3466, P1
   Heumesser N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P322
   Holtmann J., 2019, THESIS PADERBORN U, DOI [10.17619/UNIPB/1-730, DOI 10.17619/UNIPB/1-730]
   Holtmann J., 2020, EARLY TIMING ANAL BA
   Holtmann J., 2013, LNI P, VP-220, P2458
   Holtmann J., 2022, **DATA OBJECT**, DOI 10.5281/zenodo.4769781
   Holtmann J., 2016, TRRI16351 IEM HEINZ, DOI [10.13140/RG.2.2.33223.29606, DOI 10.13140/RG.2.2.33223.29606]
   International Organization for Standardization (ISO), 2005, 1735632005 ISO
   International Organization for Standardization (ISO), 2018, 2626262018E ISO
   JAHANIAN F, 1994, IEEE T SOFTWARE ENG, V20, P933, DOI 10.1109/32.368134
   Jahanian F., 1988, Proceedings of the Twenty-First Annual Hawaii International Conference on System Sciences. Vol.II. Software Track (Cat. No.88TH0212-1), P479, DOI 10.1109/HICSS.1988.11840
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Khecharem A, 2014, PROCEEDINGS OF THE 2014 FORUM ON SPECIFICATION & DESIGN LANGUAGES (FDL)
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kopetz, 2011, REAL-TIME SYST, DOI [10.1007/978-1-4419-8237-7_13, DOI 10.1007/978-1-4419-8237-7, DOI 10.1007/978-1-4419-8237-7_13]
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Larsen KC, 2009, LECT NOTES COMPUT SC, V5850, P676, DOI 10.1007/978-3-642-05089-3_43
   Larsen KG, 2010, DES AUT TEST EUROPE, P447
   Latombe F., 2015, 8 INT C SOFTWARE LAN
   Lettrari M., 2001, LNCS, DOI [10.1007/3-540-45441-1_24, DOI 10.1007/3-540-45441-1_24]
   Li SH, 2010, FORM METHOD SYST DES, V37, P200, DOI 10.1007/s10703-010-0103-z
   Liebel G., 2015, HUFAMO MODELS, P17
   Mallet F, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P372
   Mallet F, 2009, PROCEEDINGS OF THE 12TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, P305, DOI 10.1109/ISORC.2009.27
   Mateescu R., 2008, INT S FORMAL METHODS
   mcrl2, ALDEBARAN FILE FORMA
   ModRec, US
   Mubeen S, 2019, SOFTW SYST MODEL, V18, P39, DOI 10.1007/s10270-017-0579-8
   Mubeen S, 2015, IEEE INT CONF EMBED, P149, DOI 10.1109/RTCSA.2015.24
   Mubeen S, 2014, J SYST ARCHITECT, V60, P207, DOI 10.1016/j.sysarc.2013.10.008
   Mubeen S, 2013, COMPUT SCI INF SYST, V10, P453, DOI 10.2298/CSIS120614011M
   Nolin Mikael, 2008, Proceedings of the 2008 International Conference on Embedded Systems & Applications (ESA 2008), P173
   OMG, 2014, OMG document formal/2014-02-03
   OMG, 2016, MET OBJ FAC MOF 2 0
   OMG, 2011, UML PROF MART MOD AN
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Ostroff J.S, 1990, LNCS, DOI [10.1007/3-540-52148-8_20, DOI 10.1007/3-540-52148-8_20]
   Ostroff J.S., 1989, TEMPORAL LOGIC REAL
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Peraldi-Frati Marie-Agnes, 2011, 2011 Proceedings of IEEE 14th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC 2011), P50, DOI 10.1109/ISORC.2011.16
   Pohl K., 2016, Requirements Engineering Fundamentals: A Study Guide for the Certified Professional for Requirements Engineering Exam-Foundation Level-IREB Compliant
   Prasad KV, 2010, P IEEE, V98, P510, DOI 10.1109/JPROC.2010.2041835
   Puschner P, 2000, REAL-TIME SYST, V18, P115, DOI 10.1023/A:1008119029962
   Ragnarsson A, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P362, DOI 10.1109/MODELS-C53483.2021.00059
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Schmelter D, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P372, DOI 10.1109/REW.2017.14
   Selic B., 2014, Modeling and Analysis of Real-Time and Embedded Systems with UML and MARTE: Developing Cyber-Physical Systems, P27, DOI [10.1016/B978-0-12-416619-6.00002-X, DOI 10.1016/B978-0-12-416619-6.00002-X]
   Sha L, 2004, REAL-TIME SYST, V28, P101, DOI 10.1023/B:TIME.0000045315.61234.1e
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
   TINDELL K, 1995, REAL-TIME SYST, V9, P147, DOI 10.1007/BF01088855
   Tindell K. W., 1994, Proceedings. Real-Time Systems Symposium (Cat. No.94CH35728), P259, DOI 10.1109/REAL.1994.342710
   uppaal, UPPAAL CASE STUDIES
   Wang SH, 2004, REAL-TIME SYST, V28, P69, DOI 10.1023/B:TIME.0000033379.78994.1a
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
NR 121
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2171
EP 2211
DI 10.1007/s10270-022-01002-3
EA APR 2022
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000796015900001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kessentini, W
   Alizadeh, V
AF Kessentini, Wael
   Alizadeh, Vahid
TI Semi-automated metamodel/model co-evolution: a multi-level interactive
   approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodel; model co-evolution; Interactive multi-objective search;
   Search-based software engineering
ID COUPLED EVOLUTION; MODEL MIGRATION; ADAPTATION; LANGUAGE
AB Metamodels evolve even more frequently than programming languages. This evolution process may result in a large number of instance models that are no longer conforming to the revised metamodel. On the one hand, the manual adaptation of models after the metamodels' evolution can be tedious, error-prone, and time-consuming. On the other hand, the automated co-evolution of metamodels/models is challenging, especially when new semantics is introduced to the metamodels. While some interactive techniques have been proposed, designers still need to explore a large number of possible revised models, which makes the interaction time-consuming. Existing interactive tools are limited to interactions with the designers to evaluate the impact of the co-evolved models on different objectives of the number of inconsistencies, number of changes and the deviation from the initial models. However, designers are also interested to check the impact of introduced changes on the decision space which is composed by model elements. These interactions help designers to understand the differences of the co-evolved models solution that have similar objectives value to select the best one based on their preferences. In this paper, we propose an interactive approach that enables designers to select their preference simultaneously in the objective and decision spaces. Designers may be interested in looking at co-evolution operations that can improve a specific objective such as number of non-conformities with the revised metamodel (objective space), but such operations may be related to different model locations (decision space). A set of co-evolution solutions is generated at first using multi-objective search that suggests edit operations to designers based on three objectives: minimizing the deviation with the initial model, the number of non-conformities with the revised metamodel and the number of changes. Then, the approach proposes to the user few regions of interest by clustering the set of recommended co-evolution solutions of the multi-objective search. Also, another clustering algorithm is applied within each cluster of the objective space to identify solutions related to different model element locations. The objective and decision spaces can now be explored more efficiently by the designers, who can quickly select their preferred cluster and give feedback on a smaller number of solutions by eliminating similar ones. This feedback is then used to guide the search for the next iterations if the user is still not satisfied. We evaluated our approach on a set of metamodel/model co-evolution case studies and compared it to existing fully automated and interactive co-evolution techniques.
C1 [Kessentini, Wael; Alizadeh, Vahid] Depaul Univ, Coll Comp & Digital Media, 243 South Wabash Ave, Chicago, IL 60604 USA.
C3 DePaul University
RP Kessentini, W (corresponding author), Depaul Univ, Coll Comp & Digital Media, 243 South Wabash Ave, Chicago, IL 60604 USA.
EM wkessent@depaul.edu; v.alizadeh@depaul.edu
RI Alizadeh, Vahid/S-2154-2018
OI Alizadeh, Vahid/0000-0002-5030-9036
CR Anguel F, 2014, INT CONF COMP SCI, P142, DOI 10.1109/CSIT.2014.6805992
   Anguel F., 2015, P CIIA
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2014, EVOLVING SOFTWARE SY
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Banerjee J., 1987, P SIGMOD
   Cabot J, 2004, LECT NOTES COMPUT SC, V3289, P350
   Calinski T., 1974, Communications in Statistics-Simulation and Computation, V3, P1, DOI [10.1080/03610927408827101, DOI 10.1080/03610927408827101]
   Cicchetti A., 2011, P IWMCP
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Demuth A, 2013, LECT NOTES COMPUT SC, V8107, P287, DOI 10.1007/978-3-642-41533-3_18
   Demuth A, 2012, IEEE INT CONF AUTOM, P302, DOI 10.1145/2351676.2351730
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   DiRuscio D., 2011, P 2 INT WORKSH MOD C
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Garcés K, 2014, SOFTW SYST MODEL, V13, P789, DOI 10.1007/s10270-012-0297-1
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   Gruschko, 2007, P MODSE WORKSH
   Han AR, 2015, INFORM SOFTWARE TECH, V59, P53, DOI 10.1016/j.infsof.2014.10.007
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassam K., 2010, BELGIAN NETHERLANDS, P16
   Hassam K, 2011, EUR CON SFTWR MTNCE, P151, DOI 10.1109/CSMR.2011.21
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.74.1
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V5969, P3
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Jackson RR, 2001, BEHAVIOUR, V138, P1215, DOI 10.1163/15685390152822184
   Kessentini M, 2017, EMPIR SOFTW ENG, V22, P670, DOI 10.1007/s10664-016-9442-8
   Kessentini W., 2020, MODELS 20 ACM IEEE 2
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Khelladi DE, 2016, LECT NOTES COMPUT SC, V9679, P333, DOI 10.1007/978-3-319-35122-3_22
   Kruse S., 2011, MOD EV WORKSH
   Kusel A., 2015, 11 APCCM
   Kusel A., 2015, MODELS
   Levendovszky T, 2010, LECT NOTES COMPUT SC, V5969, P23
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mantz F., 2013, ECEASST, V61, P24
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   Markovic SA, 2005, LECT NOTES COMPUT SC, V3713, P280, DOI 10.1007/11557432_21
   Markovic S, 2008, SOFTW SYST MODEL, V7, P25, DOI 10.1007/s10270-007-0056-x
   Mendez D., 2010, MOD EV WORKSH
   Meyers B., 2010, P MPM WORKSH
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Morales R, 2018, J SYST SOFTWARE, V145, P25, DOI 10.1016/j.jss.2018.07.076
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Muflikhah L, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTER TECHNOLOGY AND DEVELOPMENT, VOL 1, P58, DOI 10.1109/ICCTD.2009.206
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Omg Q., 2008, FINAL ADOPTED SPECIF
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   POLLATSEK A, 1995, J EXP PSYCHOL LEARN, V21, P785, DOI 10.1037/0278-7393.21.3.785
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Rebai S., 2020, IEEE T SOFTWARE ENG
   REDNER RA, 1984, SIAM REV, V26, P195, DOI 10.1137/1026034
   Richters M., 2001, PRECISE APPROACH VAL
   Roddick J. F., 1992, SIGMOD Rec, V21, P35, DOI [DOI 10.1145/141818.141826, 10.1145/141818.14 1826, 10.1145/141818.141826]
   Rose L.M., 2009, P MODSE MCCM WORKSH
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Ruscio D.D., 2016, P ECMFA
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schoenboeck J., 2014, P APCCM
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Taentzer G, 2013, LECT NOTES COMPUT SC, V8107, P254, DOI 10.1007/978-3-642-41533-3_16
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wimmer M., 2010, P MTATL WORKSH
NR 74
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1853
EP 1876
DI 10.1007/s10270-022-00978-2
EA APR 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000779470200001
DA 2024-07-18
ER

PT J
AU Alvarado, SH
   Cortiñas, A
   Luaces, MR
   Pedreira, O
   Places, AS
AF Alvarado, Suilen H.
   Cortinas, Alejandro
   Luaces, Miguel R.
   Pedreira, Oscar
   Places, Angeles S.
TI Multilevel modeling of geographic information systems based on
   international standards
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Multilevel software modeling; Geographic
   information systems
AB Even though different applications based on Geographic Information Systems (GIS) provide different features and functions, they all share a set of common concepts (e.g., spatial data types, operations, services), a common architecture, and a common set of technologies. Furthermore, common structures appear repeatedly in different GIS, although they have to be specialized in specific application domains. Multilevel modeling is an approach to model-driven engineering (MDE) in which the number of metamodel levels is not fixed. This approach aims at solving the limitations of a two-level metamodeling approach, which forces the designer to include all the metamodel elements at the same level. In this paper, we address the application of multilevel modeling to the domain of GIS, and we evaluate its potential benefits. Although we do not present a complete set of models, we present four representative scenarios supported by example models. One of them is based on the standards defined by ISO TC/211 and the Open Geospatial Consortium. The other three are based on the EU INSPIRE Directive (territory administration, spatial networks, and facility management). These scenarios show that multilevel modeling can provide more benefits to GIS modeling than a two-level metamodeling approach.
C1 [Alvarado, Suilen H.; Cortinas, Alejandro; Luaces, Miguel R.; Pedreira, Oscar; Places, Angeles S.] Univ A Coruna, Ctr Invest CITIC, Database Lab, La Coruna 15071, Spain.
C3 Universidade da Coruna
RP Pedreira, O (corresponding author), Univ A Coruna, Ctr Invest CITIC, Database Lab, La Coruna 15071, Spain.
EM s.hernandez@udc.es; alejandro.cortinas@udc.es; miguel.luaces@udc.es;
   oscar.pedreira@udc.es; angeles.saavedra.places@udc.es
RI Luaces, Miguel R./HTP-5849-2023; Pedreira, Oscar/ABA-5296-2020; Places,
   Ángeles Saavedra/E-8860-2015
OI Luaces, Miguel R./0000-0003-0549-2000; Pedreira,
   Oscar/0000-0001-6176-4475; 
FU MICIU/FEDERUE [MAGIST: PID2019-105221RB-C41]; MICIU/FEDER-UEBIZDEV
   OPSGLOBAL [RTI-2018-098309-B-C32]; Xunta de Galicia/FEDERUE, ConectaPeme
   [GEMA: IN852A 2018/14]; MINECOAEI/FEDERUE [Datos 4.0:
   TIN2016-78011-C4-1-R]; MINECOAEI/FEDER-UE [Velocity:
   TIN2016-77158-C4-3-R]; XUNTA; EU through the European Regional
   Development Fund Galicia 2014-2020 Program [ED431G 2019/01];
   Universidade da Coruna/CISUG
FX This work has been partially funded by grants: MICIU/FEDERUE, MAGIST:
   PID2019-105221RB-C41; MICIU/FEDER-UEBIZDEV OPSGLOBAL:
   RTI-2018-098309-B-C32, Xunta de Galicia/FEDERUE, ConectaPeme, GEMA:
   IN852A 2018/14; MINECOAEI/FEDERUE Datos 4.0: TIN2016-78011-C4-1-R;
   MINECOAEI/FEDER-UE Velocity: TIN2016-77158-C4-3-R; CITIC research center
   funded by XUNTA and EU through the European Regional Development Fund
   Galicia 2014-2020 Program, grant ED431G 2019/01. Funding for open access
   charge: Universidade da Coruna/CISUG.
CR Al-Hilank S., 2014, P INT WORKSH MUL MOD
   Alvarado SH, 2020, J WEB ENG, V19, P167, DOI 10.13052/jwe1540-9589.1923
   [Anonymous], 1994, Proceedings of the 20th International Conference on Very Large Data Bases, VLDB '94
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benner B., 2017, P 4 INT WORKSH MUL M
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Cortiñas A, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P46, DOI 10.1145/3109729.3109759
   Cortiñas A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P190, DOI 10.1145/3106195.3106222
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Filho JL., 2013, DOMAIN ENG PRODUCT L, P375, DOI [10.1007/978-3-642-36654-3_15, DOI 10.1007/978-3-642-36654-3_15]
   Frank U., 2016, P 2 INT WORKSH MUL M
   Frank U., 2018, P 5 INT WORKSH MULT, P718
   International Organization for Standardization, 191072003 ISO
   Kutzner T., 2016, THESIS TU MUNICH
   Lisboa-Filho J., 2010, P INT WORKSHOP DOMAI, P18
   Nesic D., 2017, P 4 INT WORKSH MUL M
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Rodriguez A., 2018, P 5 INT WORKSH MUL M
   Rossi MT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P103, DOI 10.1109/MODELS-C.2019.00020
   Sampaio GB, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P409
   The Open Geospatial Consortium, OPENGIS SIMPL FEAT 1
   Tomlinson R.F., 1969, J GEOGRAPHY CHIGAKU, V78, P45
   Worboys M., 2004, GIS: A Computing Perspective, DOI [10.4324/9780203481554, DOI 10.4324/9780203481554]
NR 29
TC 1
Z9 1
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 623
EP 666
DI 10.1007/s10270-021-00901-1
EA JUL 2021
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000669188100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Farshidi, S
   Jansen, S
   Fortuin, S
AF Farshidi, Siamak
   Jansen, Slinger
   Fortuin, Sven
TI Model-driven development platform selection: four industry case studies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development platform; Decision model; Multi-criteria
   decision-making; Decision support system; Industry case study
ID BUSINESS PROCESS MANAGEMENT; LOW-CODE; DECISION; TRANSFORMATION;
   SYSTEMS; SCIENCE
AB Model-driven development platforms shift the focus of software development activity from coding to modeling for enterprises. A significant number of such platforms are available in the market. Selecting the best fitting platform is challenging, as domain experts are not typically model-driven deployment platform experts and have limited time for acquiring the needed knowledge. We model the problem as a multi-criteria decision-making problem and capture knowledge systematically about the features and qualities of 30 alternative platforms. Through four industry case studies, we confirm that the model supports decision-makers with the selection problem by reducing the time and cost of the decision-making process and by providing a richer list of options than the enterprises considered initially. We show that having decision knowledge readily available supports decision-makers in making more rational, efficient, and effective decisions. The study's theoretical contribution is the observation that the decision framework provides a reliable approach for creating decision models in software production.
C1 [Farshidi, Siamak; Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Jansen, Slinger] LUT Univ, Sch Engn Sci, Lappeenranta, Finland.
   [Fortuin, Sven] Bolcom, Utrecht, Netherlands.
C3 Utrecht University; Lappeenranta-Lahti University of Technology LUT
RP Farshidi, S (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
EM s.farshidi@uu.nl; slinger.jansen@uu.nl; sfortuin@bol.com
RI Farshidi, Siamak/AAD-9788-2022; Roijackers, Slinger/Y-4244-2019;
   Farshidi, Siamak/GQH-3241-2022
OI Farshidi, Siamak/0000-0003-3270-4398; Roijackers,
   Slinger/0000-0003-3752-2868; 
CR Asadi M, 2008, LECT NOTES COMPUT SC, V5095, P419, DOI 10.1007/978-3-540-69100-6_30
   Baxter L., 2004, J FAM COMMUN, V4, P181
   Becker K., 2001, PROC ODP, V174B, DOI DOI 10.2973/ODP.PROC.SR.174B.130.2001
   Bowen GA, 2009, QUAL RES J, V9, P27, DOI 10.3316/QRJ0902027
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Carvallo J.P., 2006, P INT WORKSHOP SOFTW, P9
   Ceri S, 2009, LECT NOTES COMPUT SC, V5600, P273, DOI 10.1007/978-3-642-02463-4_15
   Chen WK, 2005, ELECTRICAL ENGINEERING HANDBOOK, pXV, DOI 10.1016/B978-012170960-0/50001-3
   Corbin J., 2015, BASICS QUALITATIVE R
   Davies I, 2010, INT HANDB INFORM SYS, P339, DOI 10.1007/978-3-642-00416-2_16
   de Oliveira Melo, 2017, ORG TRANSFORMATION I
   Delgado A, 2015, IFIP ADV INF COMM TE, V451, P81, DOI 10.1007/978-3-319-17837-0_8
   Dhiman HS., 2020, DECISION CONTROL HYB, DOI DOI 10.1007/978-981-15-0275-0
   DSDM consortium and others, 2014, DSDM AGILE PROJECT F
   Dvorak O., 2018, ENT ENG WORK C, P39
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Encheva Sylvia, 2009, Recent Advances in Computer Engineering, V192
   Farshidi S., 2018, 23 INT C REQ ENG FDN, V2075, P100
   Farshidi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110714
   Farshidi S, 2020, IEEE T ENG MANAGE, V67, P1109, DOI 10.1109/TEM.2019.2956897
   Farshidi S, 2018, CONF BUS INFORM, P139, DOI 10.1109/CBI.2018.00024
   Farshidi S, 2018, J DECIS SYST, V27, P98, DOI 10.1080/12460125.2018.1464821
   Fitzgerald DR, 2017, PERS INDIV DIFFER, V104, P339, DOI 10.1016/j.paid.2016.08.030
   Fortus D, 2005, INT J SCI EDUC, V27, P855, DOI 10.1080/09500690500038165
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Gigerenzer G, 2001, DAHL WS ENV, P37
   Gigerenzer G, 1999, Simple Heuristics that Make us Smart, P3
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   ISO, 2011, IEC 25010: 2011 systems and software engineering-systems and software quality requirements and evaluation (square)-system and software quality models, V34, P2910
   JONES SRG, 1992, AM J SOCIOL, V98, P451, DOI 10.1086/230046
   Kahneman D., 1982, JUDGMENT UNCERTAINTY, P201, DOI DOI 10.1017/CBO9780511809477
   Kapteijns T., 2009, CODE CENTRIC MODEL C, P22
   Kaufmann L, 2012, J PURCH SUPPLY MANAG, V18, P76, DOI 10.1016/j.pursup.2012.04.004
   Kerremans M., 2019, MAGIC QUADRANT INTEL
   Marin B., 2014, INT C MOD DRIV ENG S, P183
   Meidan A, 2017, COMPUT STAND INTER, V51, P71, DOI 10.1016/j.csi.2016.06.003
   Mejri A, 2015, PROCEDIA COMPUT SCI, V64, P1043, DOI 10.1016/j.procs.2015.08.514
   Meredith J., 1989, J OPER MANAG, V8, P297
   Montibeller G, 2015, RISK ANAL, V35, P1230, DOI 10.1111/risa.12360
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   NADEAU R, 1993, INT POLIT SCI REV, V14, P203, DOI 10.1177/019251219301400204
   Olariu C, 2016, ADV INTELL SYST, V357, P993, DOI 10.1007/978-3-319-18416-6_79
   P. Vincent, 2019, MAGIC QUADRANT ENTER
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Ravasan Ahad Zare, 2014, 16th International Conference on Enterprise Information Systems (ICEIS 2014). Proceedings, P295
   Richardson C., 2016, Vendor Landscape: The Fractured, Fertile Terrain of Low-Code Application Platforms, VVolume 12
   Richters RJH, 2017, J EUR ACAD DERMATOL, V31, P267, DOI 10.1111/jdv.13829
   Rymer J.R., FORRESTER WAVE TM LO
   S.E.S. Committee, 1998, IEEE Std, P1219
   Samadhiya D., 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P320, DOI 10.1109/ICSTE.2010.5608852
   Sanchis R, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10010012
   Sattar, 2018, SELECTION LOW CODE P
   Sen A.Y., 2018, INT S PRODUCTION RES, P150
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Simon HA, 1955, Q J ECON, V69, P99, DOI 10.2307/1884852
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Stemberger MI, 2010, EKON ISTRAZ, V22, P84
   Susac, 2019, BUSINESS PROCESS MAN, V1, P1
   Triantaphyllou E., 1998, ENCY ELECT ELECT ENG, V15, P175
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3098, P1
   Vuksic VB, 2016, 2016 39TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1476, DOI 10.1109/MIPRO.2016.7522372
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   Wasilewski A., 2016, Information System in Management, V5, P585
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Zolotas C, 2018, ENTERP INF SYST-UK, V12, P1007, DOI 10.1080/17517575.2018.1462403
NR 71
TC 5
Z9 5
U1 2
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1525
EP 1551
DI 10.1007/s10270-020-00855-w
EA JAN 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WH9YE
UT WOS:000607974200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Granada, D
   Vara, JM
   Merayo, M
   Marcos, E
AF Granada, David
   Vara, Juan M.
   Merayo, Mercedes
   Marcos, Esperanza
TI CEViNEdit: improving the process of creating cognitively effective
   graphical editors with GMF
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering (MDE); Domain-Specific Language (DSL); Visual
   notation; Cognitive effectiveness
ID MODELS; ENVIRONMENTS
AB The rise of domain-specific (Visual) languages and the inherent complexity of developing graphical editors for these languages have led to the emergence of proposals that provide support for this task. Most of these proposals are principally based on EMF and GMF, which effectively help to simplify and increase the level of automation of the development process of the editors, but it is important to recall that these proposals have some important disadvantages, mainly related to the learning curve of these technologies, poor documentation or the complexity of providing all the customisation possibilities to the user. In addition, in the process of developing a domain-specific language, issues related to graphical conventions have historically been undervalued, while most of the effort has been focused on semantic aspects. In fact, definitions of the concrete (visual) syntax of modelling languages in Software Engineering are usually based on common sense, intuition, the reuse of existing notations or emulation of common practices. In order to alleviate the inherent complexity of the EMF/GMF approach for the development of graphical editors and to support the evaluation of the quality of visual notations of modelling languages, this article presents CEViNEdit, an intuitive tool that simultaneously supports the semi-automatic generation of graphical editors and the assessment of the cognitive effectiveness of the visual notation implemented by the editor.
C1 [Granada, David; Vara, Juan M.; Marcos, Esperanza] Rey Juan Carlos Univ, Kybele Res Grp, Calle Tulipan S-N, Madrid 28933, Spain.
   [Merayo, Mercedes] Univ Complutense Madrid, Fac Comp Sci, Ciudad Univ, Madrid 28040, Spain.
C3 Universidad Rey Juan Carlos; Complutense University of Madrid
RP Vara, JM (corresponding author), Rey Juan Carlos Univ, Kybele Res Grp, Calle Tulipan S-N, Madrid 28933, Spain.
EM david.granada@urjc.es; juanmanuel.vara@urjc.es; mgmerayo@fdi.ucm.es;
   esperanza.marcos@urjc.es
RI Martinez, Esperanza Marcos/JCE-5935-2023; Vara, Juan Manuel/K-6774-2014;
   Martinez, Esperanza Marcos/AAS-8564-2021; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Vara, Juan Manuel/0000-0002-8637-6580; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082; Marcos, Esperanza/0000-0003-2666-9995;
   Granada, David/0000-0001-9743-4347
FU Regional Government of Madrid under the FORTE-CM project
   [S2018/TCS-4314]; MADRID project - Spanish Ministry of Economy, Industry
   and Competitiveness [TIN2017-88557-R]; MINECO/FEDER FAME project -
   Spanish Ministry of Economy, Industry and Competitiveness
   [RTI2018-093608-B-C31]
FX This research has been partially funded by the Regional Government of
   Madrid under the FORTE-CM project (S2018/TCS-4314) and the MADRID
   (TIN2017-88557-R) and MINECO/FEDER FAME (RTI2018-093608-B-C31) projects,
   financed by the Spanish Ministry of Economy, Industry and
   Competitiveness.
CR Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], 2010, VIEWPOINTS CREATION
   Bertin J., 1983, SEMIOLOGY GRAPHICS D
   BEZIVIN J, 2004, EUR J INFORM PROF, V5, P21
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brand C., 2011, Eclipse Magazine
   Budinsky F., 2004, Eclipse modeling framework: a developer's guide
   Cairns P., 2016, EXPT METHODS HUMAN C
   Clark T., 2015, arXiv preprint, P1
   Connolly T.M., 2005, DATABASE SYSTEMS PRA, V4th
   Ehrig K., 2005, INT C AUTOMATED SOFT, P134, DOI DOI 10.1145/1101908.1101930
   Ehrig K, 2005, ELECTRON NOTES THEOR, V127, P127, DOI 10.1016/j.entcs.2004.08.051
   El Kouhen A., 2012, TECHNICAL REPORT
   Estañol M, 2017, LECT NOTES COMPUT SC, V10601, P80, DOI 10.1007/978-3-319-69035-3_6
   Fisher R. A., 1921, Metron, V1, P3, DOI DOI 10.1093/BIOMET/9.1-2.22
   Fleiss JL, 1999, J AM STAT ASSOC, V94, P448
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Garmendia A, 2019, INFORM SOFTWARE TECH, V115, P97, DOI 10.1016/j.infsof.2019.05.010
   Genon N., 2010, Software Language Engineering, P377
   Genon N., 2010, INT WORKSH SYST AN M, P221, DOI DOI 10.1007/978-3-642-21652-7_14
   Ghosh D, 2011, COMMUN ACM, V54, P44, DOI 10.1145/1965724.1965740
   Goodman Nelson., 1968, Languages of Art: An Approach to a Theory of Symbols
   Granada D, 2017, ICSOFT: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P330, DOI 10.5220/0006430503300337
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Gray J, 2017, SOFTW SYST MODEL, V16, P307, DOI 10.1007/s10270-017-0596-7
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Gutwenger C, 2004, LECT NOTES COMPUT SC, V2912, P123
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   KAZEMZADEH Y., 2015, J MANAGEMENT STRATEG, V6, P88, DOI DOI 10.5430/JMS.V6N1P88
   Kelly S., 2004, 19 ANN ACM C OBJ OR, P87
   Kern H., 2011, SPLASH 11 WORKSH, P7
   KISH L, 1959, AM SOCIOL REV, V24, P328, DOI 10.2307/2089381
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Koo TK, 2016, J CHIROPR MED, V15, P155, DOI 10.1016/j.jcm.2016.02.012
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   López-Fernández JJ, 2019, SOFTW SYST MODEL, V18, P961, DOI 10.1007/s10270-017-0632-7
   McGraw KO, 1996, PSYCHOL METHODS, V1, P30, DOI 10.1037/1082-989X.1.1.30
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Minas M, 2000, LECT NOTES COMPUT SC, V1779, P433
   Moody D. L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P485, DOI 10.1145/1810295.1810442
   Moody D.L., 2007, REV ARCHIMATE ROAD I, V77
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Morris SJ, 2006, LECT NOTES COMPUT SC, V4045, P130
   Moss M, 2012, CHANDOS INF PROF SER, P1
   Pelechano V., 2006, ACT TALL DES SOFTW D, V227
   Perez-Blanco Francisco J., 2020, Fundamental Approaches to Software Engineering. 23rd International Conference, FASE 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12076), P266, DOI 10.1007/978-3-030-45234-6_13
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pontisso N, 2006, IEEE INT CONF AUTOM, P359
   Popescu G, 2014, CONF BUS INFORM, P166, DOI 10.1109/CBI.2014.21
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schuette R., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P240
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Sentosa P., 2007, THESIS
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Taentzer G., 2006, P INT WORKSH ECL TEC
   Thomas JC, 2012, S VIS LANG HUM CEN C, P41, DOI 10.1109/VLHCC.2012.6344478
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Wheildon C, 2005, TYPE LAYOUT ARE YOU
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
NR 73
TC 1
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 867
EP 895
DI 10.1007/s10270-020-00833-2
EA OCT 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ST2QJ
UT WOS:000579448800001
DA 2024-07-18
ER

PT J
AU Akdur, D
   Say, B
   Demirörs, O
AF Akdur, Deniz
   Say, Bilge
   Demirors, Onur
TI Modeling cultures of the embedded software industry: feedback from the
   field
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software modeling; Embedded software; Modeling patterns and cultures;
   Characterization model; Case study
ID PROCESS IMPROVEMENT; UML; BENEFITS; STATE
AB Engineering of modern embedded systems requires complex technical, managerial and operational processes. To cope with the complexity, modeling is a commonly used approach in the embedded software industry. The modeling approaches in embedded software vary since the characteristics of modeling such as purpose, medium type and life cycle phase differ among systems and industrial sectors. The objective of this paper is to detail the use of a characterization model MAPforES ("Modeling Approach Patterns for Embedded Software"). This paper presents the results of applying MAPforES in multiple case studies. The applications are performed in three sectors of the embedded software industry: defense and aerospace, automotive and transportation, and consumer electronics. A series of both structured and semi-structured interviews with 35 embedded software professionals were conducted as part of the case studies. The characterization model was successfully applied to these cases. The results show that identifying individual patterns provides insight for improving both individual behavior and the behavior of projects and organizations.
C1 [Akdur, Deniz] ASELSAN Inc, Ankara, Turkey.
   [Akdur, Deniz] Middle East Tech Univ METU, Informat Inst, Dept Informat Syst, Ankara, Turkey.
   [Say, Bilge] Atilim Univ, Dept Software Engn, Ankara, Turkey.
   [Demirors, Onur] Izmir Inst Technol, Dept Comp Engn, Izmir, Turkey.
C3 Aselsan; Middle East Technical University; Atilim University; Izmir
   Institute of Technology
RP Akdur, D (corresponding author), ASELSAN Inc, Ankara, Turkey.; Akdur, D (corresponding author), Middle East Tech Univ METU, Informat Inst, Dept Informat Syst, Ankara, Turkey.
EM denizakdur@aselsan.com.tr; bilge.say@atilim.edu.tr;
   onurdemirors@iyte.edu.tr
RI Akdur, Deniz/O-9886-2019
OI Akdur, Deniz/0000-0001-8966-2649; Say, Bilge/0000-0001-9276-729X
CR Akdur D., 2015, INT C MOD DRIV ENG S
   Akdur D., 2018, 44 EUR C SOFTW ENG A
   Akdur D, 2018, THESIS
   Akdur D, 2017, ONLINE DATASET MULTI
   Akdur D., 2015, MDE EMBEDDED SW IND, DOI [10.6084/m9.figshare.4262972, DOI 10.6084/M9.FIGSHARE.4262972]
   Akdur D., 2017, METUIITR201790
   Akdur D., 2017, 43 EUR C SOFTW ENG A
   Akdur D., 2018, 12 TURK NATL SOFTW E
   Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Akdur D, 2017, MEDD C EMBED COMPUT, P7
   Amorim T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P203, DOI 10.1109/ICSE-SEIP.2019.00030
   [Anonymous], 2004, Software Factories
   [Anonymous], 2017, PATTERN CAMBRIDGE DI
   Arcelli D., 2015, ACM INT WORKSH FUT S
   Brambilla M, 2012, SYNTHESIS LECTURES S
   Bratthall L., 2002, Empirical Software Engineering, V7, P9, DOI 10.1023/A:1014866909191
   Cabot J, 2018, CLARIFYING CONCEPTS
   Dikici A, 2018, INFORM SOFTWARE TECH, V93, P112, DOI 10.1016/j.infsof.2017.09.001
   DORLING A, 1993, INFORM SOFTWARE TECH, V35, P404, DOI 10.1016/0950-5849(93)90011-Q
   Douglass B., 2003, REAL TIME DESIGN PAT
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Fernández-Sáez AM, 2018, EMPIR SOFTW ENG, V23, P3281, DOI 10.1007/s10664-018-9599-4
   Gamma E., 1998, Design Patterns: Elements of Reusable Object-Oriented Software
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Karagoz NA, 2010, CONCEPTUAL MODELING
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klc o, 2011, ADV DYNAMIC STATIC M
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Liebel G, 2016, CONF SOFTW ENG EDUC, P18, DOI 10.1109/CSEET.2016.18
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Robson C., 2002, Real world research
   Ross JA, 2019, SOFTW SYST MODEL, V18, P739, DOI 10.1007/s10270-017-0592-y
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   Uskarci A, 2017, COMPUT STAND INTER, V52, P25, DOI 10.1016/j.csi.2017.01.008
   Verner J.M., 2009, 3 INT C RES CALL INF
   Vetro A, 2015, IEEE DATA COMPR CONF, P13, DOI 10.1109/DCC.2015.26
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Walls C, 2012, EMBEDDED SOFTWARE
   Weinberg GeraldM., 1992, QUALITY SOFTWARE MAN, V1
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 45
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 447
EP 467
DI 10.1007/s10270-020-00810-9
EA JUN 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000543321200001
DA 2024-07-18
ER

PT J
AU Gómez, A
   Mendialdua, X
   Barmpis, K
   Bergmann, G
   Cabot, J
   de Carlos, X
   Debreceni, C
   Garmendia, A
   Kolovos, DS
   de Lara, J
AF Gomez, Abel
   Mendialdua, Xabier
   Barmpis, Konstantinos
   Bergmann, Gabor
   Cabot, Jordi
   de Carlos, Xabier
   Debreceni, Csaba
   Garmendia, Antonio
   Kolovos, Dimitrios S.
   de Lara, Juan
TI Scalable modeling technologies in the wild: an experience report on wind
   turbines control applications development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering (MBE); Scalability; Domain-specific graphical
   modeling languages; Collaborative modeling; Model indexing; Experience
   report
ID ACCESS-CONTROL
AB Scalability in modeling has many facets, including the ability to build larger models and domain-specific languages (DSLs) efficiently. With the aim of tackling some of the most prominent scalability challenges in model-based engineering (MBE), the MONDO EU project developed the theoretical foundations and open-source implementation of a platform for scalable modeling and model management. The platform includes facilities for building large graphical DSLs, for splitting large models into sets of smaller interrelated fragments, to index large collections of models to speed-up their querying, and to enable the collaborative construction and refinement of complex models, among other features. This paper reports on the tools provided by MONDO that Ikerlan, a medium-sized technology center which in the last decade has embraced the MBE paradigm, adopted in order to improve their processes. This experience produced as a result a set of model editors and related technologies that fostered collaboration and scalability in the development of wind turbine control applications. In order to evaluate the benefits obtained, an on-site evaluation of the tools was performed. This evaluation shows that scalable MBE technologies give new growth opportunities to small- and medium-sized organizations.
C1 [Gomez, Abel] UOC, Internet Interdisciplinary Inst IN3, Barcelona, Spain.
   [Mendialdua, Xabier; de Carlos, Xabier] Ikerlan Res Ctr, Arrasate Mondragon, Spain.
   [Barmpis, Konstantinos; Kolovos, Dimitrios S.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Bergmann, Gabor; Debreceni, Csaba] Budapest Univ Technol & Econ, MTA BME Lendulet Res Grp CyberPhys Syst, Budapest, Hungary.
   [Cabot, Jordi] UOC, ICREA Internet Interdisciplinary Inst IN3, Barcelona, Spain.
   [Garmendia, Antonio; de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
C3 UOC Universitat Oberta de Catalunya; University of York - UK; Budapest
   University of Technology & Economics; Autonomous University of Madrid
RP Gómez, A (corresponding author), UOC, Internet Interdisciplinary Inst IN3, Barcelona, Spain.
EM agomezlla@uoc.edu; xmendialdua@ikerlan.es;
   konstantinos.barmpis@york.ac.uk; bergmann@mit.bme.hu;
   jordi.cabot@icrea.cat; xdecarlos@ikerlan.es; debreceni@mit.bme.hu;
   Antonio.Garmendia@uam.es; dimitris.kolovos@york.ac.uk;
   Juan.deLara@uam.es
RI de Lara, Juan/B-5422-2014; Kolovos, Dimitrios/L-9830-2014; Gómez,
   Abel/J-8652-2012; Garmendia, Antonio/HLW-7667-2023; Cabot,
   Jordi/P-7723-2015
OI Gómez, Abel/0000-0003-1344-8472; Barmpis,
   Konstantinos/0000-0002-0864-0956; Cabot, Jordi/0000-0003-2418-2489;
   Kolovos, Dimitris/0000-0002-1724-6563; Mendialdua,
   Xabier/0000-0002-4132-2968; Perez del Campo,
   Lorenzo/0000-0002-4647-5453; De Carlos, Xabier/0000-0002-9444-9313
FU MONDO [EU FP7-ICT-611125]; Janos Bolyai Research Scholarship of the
   Hungarian Academy of Sciences; New National Excellence Program of The
   Ministry ofHuman Capacities [UNKP-18-4]; New National Excellence Program
   of theMinistry For Innovation and Technology [UNKP-194]; Spanish
   Ministry of Science [RTI2018-095255-B-I00]; Madrid Region
   [S2018/TCS-4314]
FX This work has been supported by the MONDO (EU FP7-ICT-611125) project.
   The work of Gabor Bergmann was also partially supported by the Janos
   Bolyai Research Scholarship of the Hungarian Academy of Sciences, the
   UNKP-18-4 New National Excellence Program of TheMinistry ofHuman
   Capacities, and the UNKP-194 New National Excellence Program of
   theMinistry For Innovation and Technology.; Antonio and Juan's work was
   also partially supported by the Spanish Ministry of Science
   (RTI2018-095255-B-I00) and the Madrid Region (S2018/TCS-4314). Finally,
   authors would like to thank Ana Pescador, Istvan Rath, Daniel Varro and
   all the MONDO researchers for their contributions to the project.
CR Ackermann T, 2000, RENEW SUST ENERG REV, V4, P315, DOI 10.1016/S1364-0321(00)00004-6
   Anderson Anne., 2003, OASIS
   [Anonymous], 2013, P OF ACM BIGMDE 2013, DOI DOI 10.1145/2487766.2487771
   [Anonymous], KEYNOTE TRUST MANAGE
   [Anonymous], 2015, P 2015 ACM SIGPLAN I
   [Anonymous], 2011, P COMP COL WORKSH DS
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2016, MONDO PROJECT WORK P
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Barmpis K, 2014, LECT NOTES COMPUT SC, V8569, P35
   Basciani Francesco., 2014, CloudMDE@MoDELS
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bergmann G., 2017, 2 INT WORKSH COLL MO
   Bergmann G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P351, DOI 10.1145/2976767.2976793
   Biermann E, 2009, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2009.46
   Blaha Michael., 2010, Patterns of Data Modeling
   Brieler F, 2010, J VISUAL LANG COMPUT, V21, P81, DOI 10.1016/j.jvlc.2009.12.002
   Cezo J., USE PRODUCT LINE ENG
   Cho H., 2011, DSM, DOI [10.1145/2095050.2095056, DOI 10.1145/2095050.2095056]
   Clasen C, 2011, LECT NOTES COMPUT SC, V6999, P332, DOI 10.1007/978-3-642-24574-9_43
   Corley J, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P339
   DARPA VehicleFORGE, 2012, DARPA VEHICLEFORGE P
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Debreceni C., 2017, 20 INT C MOD DRIV EN
   Debreceni C., 2016, 1 INT WORKSH COLL MO
   Debreceni C, 2019, SOFTW SYST MODEL, V18, P1737, DOI 10.1007/s10270-017-0631-8
   Debreceni C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P984, DOI 10.1145/3106237.3122829
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Dietzold S., 2006, P 2 WORKSH SCRIPT SE, V183
   Pagán JE, 2015, SOFTW SYST MODEL, V14, P219, DOI 10.1007/s10270-013-0326-8
   Farwick M, 2010, LECT NOTES COMPUT SC, V6189, P278, DOI 10.1007/978-3-642-13911-6_19
   Franz I, ALLEGROGRAPH
   Fundulaki Irini., 2004, Proceedings 9th ACM Symposium on Access Control Models and Technologies, P61
   Gallardo J, 2012, J NETW COMPUT APPL, V35, P1086, DOI 10.1016/j.jnca.2011.12.009
   Gamma E., 1994, DESIGN PATTERNS
   Garcia-Dominguez A., 2018, P 13 INT WORKSH MOD
   Garcia-Dominguez A, 2019, SOFTW SYST MODEL, V18, P1047, DOI 10.1007/s10270-017-0606-9
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Gómez A, 2017, LECT NOTES COMPUT SC, V10376, P300, DOI 10.1007/978-3-319-61482-3_18
   Granada D, 2014, LECT NOTES COMPUT SC, V8767, P535, DOI 10.1007/978-3-319-11653-2_33
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kang K.C., 90 CMUSEI
   Kelly S., 2008, Domain-Specific Modeling
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kelsen P, 2011, MODELS MODELS TAMING, P171
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Montrieux Lionel, 2015, P 20 ACM S ACC CONTR, P185, DOI DOI 10.1145/2752952.2752963
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Neo4j Inc, NEO4J GRAPH PLATF
   No Magic Inc, TEAMW SERV
   No Magic Inc., TEAMW CLOUD
   Papakonstantinou Vassilis, 2012, SACMAT, P103, DOI DOI 10.1145/2295136.2295155
   Pedro L., 2008, 8 OOPSLA ACM SIGPLAN
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   Scheidgen M., 2012, P 1 INT WORKSH MOD D, DOI [10.1145/2446224.2446231, DOI 10.1145/2446224.2446231]
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sparx Systems Ltd, ENTERPRISE ARCHITECT
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Struber D., 2013, BIGMDE 2013, P7, DOI DOI 10.1145/2487766.2487773
   Struber R, 2014, SPLITTING MODELS USI, P47
   Tolone W, 2005, ACM COMPUT SURV, V37, P29, DOI 10.1145/1057977.1057979
   Tolvanen Juha-Pekka., 2007, Software Product Lines, P145
   Trujillo S, 2010, LECT NOTES COMPUT SC, V6138, P293, DOI 10.1007/978-3-642-13595-8_23
   Vacchi E, 2013, LECT NOTES COMPUT SC, V8225, P76, DOI 10.1007/978-3-319-02654-1_5
   Vaquero-Melchor D, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P75, DOI 10.1109/MODELS.2017.13
   Voelter M, 2009, J OBJECT TECHNOL, V8, P79, DOI 10.5381/jot.2009.8.6.c6
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
NR 80
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1229
EP 1261
DI 10.1007/s10270-020-00776-8
EA JAN 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000508708600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Steinau, S
   Marrella, A
   Andrews, K
   Leotta, F
   Mecella, M
   Reichert, M
AF Steinau, Sebastian
   Marrella, Andrea
   Andrews, Kevin
   Leotta, Francesco
   Mecella, Massimo
   Reichert, Manfred
TI DALEC: a framework for the systematic evaluation of data-centric
   approaches to process management software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Systematic literature review; Data-centric BPM; DALEC framework;
   Systematic evaluation
ID BUSINESS PROCESS MODELS; PROCESS SUPPORT; OBJECT; REQUIREMENTS;
   ARTIFACTS
AB The increasing importance of data in business processes has led to the emergence of data-centric business process management, which deviates from the widely used activity-centric paradigm. Data-centric approaches set their focus on data, aiming at supporting data-intensive business processes and increased process flexibility. The objective of this article is to gain profound insights into the maturity of different data-centric approaches as well as their capabilities. In particular, this article will provide a framework for systematically evaluating and comparing data-centric approaches, with regard to the phases of the business process lifecycle. To this end, a systematic literature review (SLR) was conducted with the goal of evaluating the capabilities of data-centric process management approaches. The SLR comprises 38 primary studies which were thoroughly analyzed. The studies were categorized into different approaches, whose capabilities were thoroughly assessed. Special focus was put on the tooling and software of the approaches. The article provides the empirically grounded DALEC framework to evaluate and compare data-centric approaches. Furthermore, the results of the SLR offer insights into existing data-centric approaches and their capabilities. Data-centric approaches promise better support of loosely structured and data-intensive business processes, which may not be adequately represented by activity-centric paradigms.
C1 [Marrella, Andrea; Leotta, Francesco; Mecella, Massimo] Sapienza Univ Roma, Dipartimento Ingn Informat Automat Gest, Via Ariosto 25, I-00185 Rome, Italy.
   [Steinau, Sebastian; Andrews, Kevin; Reichert, Manfred] Ulm Univ, Inst Databases & Informat Syst, Bldg O27,Level 5, D-89081 Ulm, Germany.
C3 Sapienza University Rome; Ulm University
RP Marrella, A (corresponding author), Sapienza Univ Roma, Dipartimento Ingn Informat Automat Gest, Via Ariosto 25, I-00185 Rome, Italy.
EM sebastian.steinau@uni-ulm.de; marrella@diag.uniroma1.it;
   kevin.andrews@uni-ulm.de; leotta@diag.uniroma1.it;
   mecella@diag.uniroma1.it; manfred.reichert@uni-ulm.de
RI Reichert, Manfred U/ABB-4469-2020; Leotta, Francesco/AAT-2480-2020
OI Leotta, Francesco/0000-0001-9216-8502
FU project FIRST (EU H2020-RISE) [734599]; project VOICE [EU FP7 621137];
   Social Museum & Smart Tourism (Italian) [CTN01_00034_23154]; Resilience
   of Metropolitan Areas (ROMA) (Italian) [SCN_00064]; ZAFH Intralogistik -
   European Regional Development Fund; Ministry of Science, Research and
   the Arts of Baden-Wurttemberg, Germany [32-7545.24-17/3/1]
FX This work has been partially supported by the projects FIRST (EU
   H2020-RISE 734599), VOICE (EU FP7 621137), Social Museum & Smart Tourism
   (Italian CTN01_00034_23154), and Resilience of Metropolitan Areas (ROMA)
   (Italian SCN_00064). This work is partially funded by the ZAFH
   Intralogistik, funded by the European Regional Development Fund and the
   Ministry of Science, Research and the Arts of Baden-Wurttemberg, Germany
   (F.No. 32-7545.24-17/3/1)
CR [Anonymous], 2000, STAFFW STAFFW CAS HA
   [Anonymous], 2015, P BPM DEMO SESSION 2, P6
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Bagheri Hariri B., 2013, Proceedings of the 32Nd Symposium on Principles of Database Systems. PODS '13, P163, DOI DOI 10.1145/2463664.2465221
   Belardinelli F., 2012, Service-Oriented Computing, V7636. Lecture Notes in Computer Science, P17, DOI [DOI 10.1007/978-3-642-34321-6_2, 10.1007/978-3-642-34321-6_2]
   Bhattacharya K., 2009, HDB FRESEARCH BUSINE, P503
   Boeker M, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-131
   Calvanese D., 2012, SEMANTICALLY GOVERNE, P21
   Calvanese D., 2015, CEUR WORKSHOP P, V1378, P209
   Cangialosi P, 2010, LECT NOTES COMPUT SC, V6470, P318, DOI 10.1007/978-3-642-17358-5_22
   Chao T, 2009, LECT NOTES COMPUT SC, V5701, P261, DOI 10.1007/978-3-642-03848-8_18
   Chiao C.M., 2013, CPSM ICSM, P1, DOI [10.1109/BIBE.2013.6701699, DOI 10.1109/BIBE.2013.6701699]
   Chiao C. M., 2014, ENTERPRISE MODELLING, P101
   Chiao CM, 2013, LECT NOTES BUS INF P, V132, P328
   Damaggio E, 2013, INFORM SYST, V38, P561, DOI 10.1016/j.is.2012.09.002
   De Giacomo G, 2017, LECT NOTES COMPUT SC, V10253, P612, DOI 10.1007/978-3-319-59536-8_38
   Deutsch A, 2016, ARXIV E PRINTS
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Dumas M, 2011, LECT NOTES COMPUT SC, V6909, P19, DOI 10.1007/978-3-642-23737-9_2
   Durst S, 2012, J KNOWL MANAG, V16, P879, DOI 10.1108/13673271211276173
   Eckermann O, 2011, LECT NOTES BUS INF P, V81, P103
   ESHUIS R, 2014, LECT NOTES BUSINESS, V171, P155
   Gehanno JF, 2013, BMC MED INFORM DECIS, V13, DOI 10.1186/1472-6947-13-7
   Haddar Nahla, 2013, Database and Expert Systems Applications. 24th International Conference, DEXA 2013. Proceedings: LNCS 8055, P239, DOI 10.1007/978-3-642-40285-2_21
   Haesen R., 2007, 14 C PATT LANG PROGR
   Haesen R, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P515, DOI 10.1109/SERVICES-I.2009.19
   Hariri BB, 2013, LECT NOTES COMPUT SC, V8274, P600, DOI 10.1007/978-3-642-45005-1_51
   Harmon Paul., 2016, The State of Business Process Management
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Heath F, 2013, LECT NOTES COMPUT SC, V8274, P705, DOI 10.1007/978-3-642-45005-1_65
   Hill JB., 2006, Gartner Research G, P136533
   Hollingsworth D., 1994, WORKFLOW MANAGEMENT
   Hull B, 2011, CHANDOS INF PROF SER, P51
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   Hull Richard, 2016, DAGSTUHL REPORTS, V6, P1
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kossak F., 2014, A Rigorous Semantics for BPMN 2.0 Process Diagrams, DOI DOI 10.1007/978-3-319-09931-6_4
   Künzle V, 2011, INT J INF SYST MODEL, V2, P19, DOI 10.4018/jismd.2011040102
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4714, P165
   Kumaran S, 2008, LECT NOTES COMPUT SC, V5074, P32
   Kunzle V., 2013, THESIS
   Kurz M., 2015, P 7 INT C SUBJ OR BU, P4
   Kurz M, 2013, 2013 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY - WORKSHOPS (WI-IAT), VOL 3, P87, DOI 10.1109/WI-IAT.2013.156
   Liu R, 2007, LECT NOTES COMPUT SC, V4495, P324
   London Bridge Group, 2001, VECT TECHN ARCH
   Marrella A, 2015, IEEE INT CONF SERV, P116, DOI 10.1109/SOCA.2015.19
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Meyer Andreas., 2011, Data in business processes
   Michelberger B, 2012, IEEE INT ENTERP DIST, P21, DOI 10.1109/EDOC.2012.13
   Müller D, 2007, LECT NOTES COMPUT SC, V4803, P131
   Mutschler B, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P82
   Neumann CP, 2010, LECT NOTES BUS INF P, V43, P569
   Ngai EWT, 2009, EXPERT SYST APPL, V36, P2592, DOI 10.1016/j.eswa.2008.02.021
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Object Management Group, 2014, CAS MAN MOD NOT VERS
   Peng Zhang, 2010, Proceedings 2010 9th International Conference on Grid and Cloud Computing (GCC 2010), P377, DOI 10.1109/GCC.2010.79
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Polyvyanyy A, 2012, LECT NOTES COMPUT SC, V7481, P335, DOI 10.1007/978-3-642-32885-5_26
   Pryss R, 2011, LECT NOTES BUS INF P, V72, P150
   Pufahl L, 2013, LECT NOTES COMPUT SC, V8274, P283, DOI 10.1007/978-3-642-45005-1_20
   Reichert M, 2003, LECT NOTES COMPUT SC, V2888, P407
   Reijers H. A., 2016, SOFTWARE SYSTEMS MOD, P1
   Reijers HA, 2003, INT J COOP INF SYST, V12, P365, DOI 10.1142/S0218843003000784
   Russo A., 2014, Business Process Management Workshops: BPM 2013 International Workshops, Beijing, China, August 26, 2013, Revised Papers, P141, DOI [10.1007/978-3-319-06257-0_12, DOI 10.1007/978-3-319-06257-0_12]
   Russo A, 2013, IEEE INT CONF SERV, P225, DOI 10.1109/SOCA.2013.37
   Ryndina K., 2007, LNCS
   Software-Ley GmbH, 2002, COSA ACT MAN
   Solomakhin D, 2013, LECT NOTES COMPUT SC, V8274, P252, DOI 10.1007/978-3-642-45005-1_18
   Steinau S., 2017, THESIS
   Vaculín R, 2011, IEEE INT ENTERP DIST, P151, DOI 10.1109/EDOC.2011.36
   Van den Brink W., 2013, ISRN SOFTW ENG, P1, DOI DOI 10.1155/2013/507984
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Van der Aalst WMP, 2001, INT J COOP INF SYST, V10, P443, DOI 10.1142/S0218843001000412
   Vanderfeesten I, 2011, INFORM SYST, V36, P517, DOI 10.1016/j.is.2010.09.008
   Wahler K, 2008, LECT NOTES COMPUT SC, V5240, P148, DOI 10.1007/978-3-540-85758-7_13
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Westergaard Michael, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P283, DOI 10.1007/978-3-642-40176-3_24
   Xu W, 2011, LECT NOTES COMPUT SC, V7044, P256, DOI 10.1007/978-3-642-25109-2_17
   [No title captured]
NR 82
TC 27
Z9 28
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2679
EP 2716
DI 10.1007/s10270-018-0695-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900013
OA hybrid, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Zayan, D
   Sarkar, A
   Antkiewicz, M
   Maciel, RSP
   Czarnecki, K
AF Zayan, Dina
   Sarkar, Atrisha
   Antkiewicz, Michal
   Pitangueira Maciel, Rita Suzana
   Czarnecki, Krzysztof
TI Example-driven modeling: on effects of using examples on structural
   model comprehension, what makes them useful, and how to create them
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software engineering; Structural modeling; Empirical study;
   Example-driven modeling
ID UML; PHYSICS
AB We present a controlled experiment for the empirical evaluation of example-driven modeling (EDM), an approach that systematically uses examples for model comprehension and domain knowledge transfer. We conducted the experiment with 26 graduate (Masters and Ph.D. level) and undergraduate (Bachelor level) students from electrical and computer engineering, computer science, and software engineering programs at the University of Waterloo. The experiment involves a domain model, with UML class diagrams representing the domain abstractions and UML object diagrams representing examples of using these abstractions. The goal is to provide empirical evidence of the effects of suitable examples on model comprehension, compared to having model abstractions only, by having the participants perform model comprehension tasks. Our results show that EDM is superior to having model abstractions only, with an improvement of 39% for diagram completeness, 33% for questions completeness, 71% for efficiency, and a reduction in the number of mistakes by 80%. We provide qualitative results showing that participants receiving model abstractions augmented with examples experienced lower perceived difficulty in performing the comprehension tasks, higher perceived confidence in their tasks' solutions, and asked 90% fewer clarifying domain questions. We also present participants' feedback regarding the usefulness of the provided examples, their number and types, as well as the use of partial examples. We present a taxonomy of the different types of examples, explain their significance, and propose guidelines for manual and automatic creation of useful examples.
C1 [Zayan, Dina] Univ Waterloo, Waterloo, ON, Canada.
   [Sarkar, Atrisha] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
   [Antkiewicz, Michal] Univ Waterloo, Elect & Comp Engn Dept, Waterloo, ON, Canada.
   [Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Pitangueira Maciel, Rita Suzana] Univ Fed Bahia, Salvador, BA, Brazil.
C3 University of Waterloo; University of Waterloo; University of Waterloo;
   University of Waterloo; Universidade Federal da Bahia
RP Sarkar, A (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
EM dzayan@gsd.uwaterloo.ca; a9sarkar@gsd.uwaterloo.ca;
   mantkiew@gsd.uwaterloo.ca; ritasuzana@dcc.ufba.br;
   kczarnec@gsd.uwaterloo.ca
RI Maciel, Rita Suzana Pitangueira/AAA-5111-2022
OI Maciel, Rita Suzana Pitangueira/0000-0003-3159-6065
FU CAPES Science Abroad scholarship [1505/14-9]; NECSIS-Automotive
   Partnership Canada
FX This work was partly sponsored by CAPES Science Abroad scholarship -
   number 1505/14-9 and NECSIS-Automotive Partnership Canada.
CR Agresti A., 1992, STAT SCI, V7, P131, DOI 10.1214/ss/1177011454
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], 2013, EFFECTS USING EXAMPL
   [Anonymous], P 40 HAW INT INT C S
   [Anonymous], 1984, Ph. D. Dissertation
   Antkiewicz M., 2013, 1 INT WORKSH MOD DRI
   Bak K., 2010, INT C SOFTW LANG ENG, P291
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Batot E., 2015, P ACM IEEE 18 INT C, P1
   Bauer J., 2009, THESIS
   Bk K., 2013, NEW IDEAS EMERGING R
   Bk K., 2013, 6 INT C SOFTW LANG E
   Brosch P, 2009, LECT NOTES COMPUT SC, V5795, P271, DOI 10.1007/978-3-642-04425-0_20
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   CHI MTH, 1981, COGNITIVE SCI, V5, P121, DOI 10.1207/s15516709cog0502_2
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Demuth B., 2004, P 13 INT C INF SYST, V7
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Fisler K, 2005, PROC INT CONF SOFTW, P196
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   GICK ML, 1983, COGNITIVE PSYCHOL, V15, P1, DOI 10.1016/0010-0285(83)90002-6
   GICK ML, 1992, CAN J PSYCHOL, V46, P539, DOI 10.1037/h0084333
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Goldstone RL, 2005, J LEARN SCI, V14, P69, DOI 10.1207/s15327809jls1401_4
   Guan P, 2012, ACM T GRAPHIC, V31, DOI 10.1145/2185520.2185531
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Hyun Cho, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P22, DOI 10.1109/MISE.2012.6226010
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kalyuga S, 2009, LEARN INSTR, V19, P402, DOI 10.1016/j.learninstruc.2009.02.003
   KAPPEL G, 2012, MODEL TRANSFORMATION, P197
   Karasneh B, 2015, ASIA PAC SOFWR ENG, P261, DOI 10.1109/APSEC.2015.59
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Lopes JT, 2013, SIMBIOTICA, P1
   López-Fernández JJ, 2016, INFORM SYST, V62, P104, DOI 10.1016/j.is.2016.06.008
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P281, DOI 10.1007/978-3-642-22655-7_14
   Mendel L., 2007, THESIS
   Montaghami Vajih, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P122, DOI 10.1007/978-3-642-30885-7_9
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nebeling M, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, AVI 2014, P313, DOI 10.1145/2598153.2598164
   Nelson T, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P232, DOI 10.1109/ICSE.2013.6606569
   North D, 2006, BETTER SOFTW, V12, P1
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Park S, 2011, THESIS
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Purchase HelenC., 2001, APVIS 01, P113
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Sadilek DA, 2008, LECT NOTES COMPUT SC, V5095, P294, DOI 10.1007/978-3-540-69100-6_20
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Scanniello Giuseppe, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P76, DOI 10.1049/ic.2011.0009
   STEIN C., 1960, Contributions to probability and statistics essays in honor of Harold Hotelling
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   van Gog T, 2011, CONTEMP EDUC PSYCHOL, V36, P212, DOI 10.1016/j.cedpsych.2010.10.004
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Whittle J, 2011, EESSMOD
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zayan D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P955, DOI 10.1145/2568225.2568270
   ZLOOF MM, 1981, COMPUTER, V14, P13, DOI 10.1109/C-M.1981.220446
NR 72
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2213
EP 2239
DI 10.1007/s10270-017-0652-3
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HZ6XP
UT WOS:000468996100029
DA 2024-07-18
ER

PT J
AU Guizzo, G
   Colanzi, TE
   Vergilio, SR
AF Guizzo, Giovani
   Colanzi, Thelma Elita
   Vergilio, Silvia Regina
TI Applying design patterns in the search-based optimization of software
   product line architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design pattern; Search-based software engineering; Software product line
   architecture
ID EVOLUTIONARY; VARIABILITY
AB The design of the product line architecture (PLA) is a difficult activity that can benefit from the application of design patterns and from the use of a search-based optimization approach, which is generally guided by different objectives related, for instance, to cohesion, coupling and PLA extensibility. The use of design patterns for PLAs is a recent research field, not completely explored yet. Some works apply the patterns manually and for a specific domain. Approaches to search-based PLA design do not consider the usage of these patterns. To allow such use, this paper introduces a mutation operator named "Pattern-Driven Mutation Operator" that includes methods to automatically identify suitable scopes and apply the patterns Strategy, Bridge and Mediator with the search-based approach multi-objective optimization approach for PLA. A metamodel is proposed to represent and identify suitable scopes to receive each one of the patterns, avoiding the introduction of architectural anomalies. Empirical results are also presented, showing evidences that the use of the proposed operator produces a greater diversity of solutions and improves the quality of the PLAs obtained in the search-based optimization process, regarding the values of software metrics.
C1 [Guizzo, Giovani; Vergilio, Silvia Regina] Univ Fed Parana, Dept Informat, Ave Cel Francisco H dos Santos 210, BR-81531970 Curitiba, PR, Brazil.
   [Colanzi, Thelma Elita] Univ Estadual Maringa, Dept Informat, Ave Colombo 5790,Bloco C56, BR-87020900 Maringa, PR, Brazil.
C3 Universidade Federal do Parana; Universidade Estadual de Maringa
RP Guizzo, G (corresponding author), Univ Fed Parana, Dept Informat, Ave Cel Francisco H dos Santos 210, BR-81531970 Curitiba, PR, Brazil.
EM gguizzo@inf.ufpr.br; thelma.lopes@din.uem.br; silvia@inf.ufpr.br
OI Guizzo, Giovani/0000-0001-5361-2973; Colanzi, Thelma/0000-0001-9761-1999
CR Amoui M, 2006, INT J INFORM TECHNOL, V1, P235
   [Anonymous], 1981, LECT NOTES EC MATH S
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Bovenzi A, 2013, ON LINE DETECTION AN
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Colanzi TE, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P237, DOI 10.1145/2648511.2648537
   Colanzi TE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P28, DOI 10.1109/CMSBSE.2013.6604433
   Contieri AC, 2011, LECT NOTES COMPUT SC, V6903, P130, DOI 10.1007/978-3-642-23798-0_13
   Coplien J.O., 1998, PATTERNS HDB TECHNIQ, P311
   Darwin C., 1859, ORIGIN SPECIES MEANS
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Donegan P.M., 2007, SBCARS, P3
   Eide MelCinn., 2001, IWPSE 01 P 4 INT WOR, P162
   Fant JS, 2013, P ANN HICSS, P4985, DOI 10.1109/HICSS.2013.52
   Gamma E., 1995, ADDISON WESLEY PROFE
   Gandibleux X., 2012, LECT NOTES EC MATH S
   Garlan D., 1994, ADV SOFTWARE ENG KNO, P1
   Gomaa H, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P79, DOI 10.1109/WICSA.2004.1310692
   Guizzo G., 2013, P 32 INT C CHIL COMP
   Guizzo G, 2014, LECT NOTES COMPUT SC, V8636, P77
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P737, DOI 10.1109/TSE.2010.106
   Institute SE, 2014, ARC GAM MAK PED PROD
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   Mariani Thaina, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P173, DOI 10.1007/978-3-319-22183-0_12
   Mariani T., 2015, P 39 IEEE COMP SOC I
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Oliveira EA, 2013, J UNIVERS COMPUT SCI, V19, P25
   Oliveira EA, 2010, J UNIVERS COMPUT SCI, V16, P2374
   Philippow I., 2003, MODELLING VARIABILIT, P42
   Qayum F, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/SSBSE.2009.27
   Raiha O., 2011, 2011 Third World Congress on Nature and Biologically Inspired Computing (NaBIC 2011), P29, DOI 10.1109/NaBIC.2011.6089413
   Raiha Outi, 2010, Proceedings 10th International Conference on Intelligent Systems Design and Applications (ISDA 2010), P266, DOI 10.1109/ISDA.2010.5687255
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Shimomura T., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P213, DOI 10.1109/ICSEA.2010.39
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Wust J., SDMETRICS SOFTWARE D
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
   Ziadi T., 2003, P SOFTW VAR MAN WORK
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 48
TC 3
Z9 3
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1487
EP 1512
DI 10.1007/s10270-017-0614-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400032
DA 2024-07-18
ER

PT J
AU Leopold, H
   van der Aa, H
   Pittke, F
   Raffel, M
   Mendling, J
   Reijers, HA
AF Leopold, Henrik
   van der Aa, Han
   Pittke, Fabian
   Raffel, Manuel
   Mendling, Jan
   Reijers, Hajo A.
TI Searching textual and model-based process descriptions based on a
   unified data format
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Integrated Process Search; Unified Data Format; Textual Process
   Descriptions
ID DESIGN SCIENCE
AB Documenting business processes using process models is common practice in many organizations. However, not all process information is best captured in process models. Hence, many organizations complement these models with textual descriptions that specify additional details. The problem with this supplementary use of textual descriptions is that existing techniques for automatically searching process repositories are limited to process models. They are not capable of taking the information from textual descriptions into account and, therefore, provide incomplete search results. In this paper, we address this problem and propose a technique that is capable of searching textual as well as model-based process descriptions. It automatically extracts activity-related and behavioral information from both descriptions types and stores it in a unified data format. An evaluation with a large Austrian bank demonstrates that the additional consideration of textual descriptions allows us to identify more relevant processes from a repository.
C1 [Leopold, Henrik; van der Aa, Han; Reijers, Hajo A.] Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
   [Pittke, Fabian; Raffel, Manuel; Mendling, Jan] WU Vienna, Welthandelspl 1, A-1020 Vienna, Austria.
C3 Vrije Universiteit Amsterdam
RP Leopold, H (corresponding author), Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM h.leopold@vu.nl; j.h.vander.aa@vu.nl; fabian.pittke@wu.ac.at;
   manuel.raffel@wu.ac.at; jan.mendling@wu.ac.at; h.a.reijers@vu.nl
OI van der Aa, Han/0000-0002-4200-4937
CR [Anonymous], RDF 1 1 CONCEPTS ABS
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2006, PROC 5 INT C LANGUAG
   [Anonymous], 2008, COLING 2008 P WORKSH
   [Anonymous], THESIS
   [Anonymous], P INT C RES CHALL IN
   Awad A., 2008, LECT NOTES COMPUTER, V5240
   Awad A, 2008, IEEE INT ENTERP DIST, P85, DOI 10.1109/EDOC.2008.11
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baier T., 2013, LECT NOTES COMPUTER, V8094
   Becker J., 2010, ECIS 2010 P, V156
   Becker J, 2009, LECT NOTES COMPUT SC, V5829, P70, DOI 10.1007/978-3-642-04840-1_8
   Breuker D., 2009, P INT TAG WIRTSCH
   Candan K. S., 2001, SIGKDD EXPLOR NEWSL, V3, P6, DOI [10.1145/507533.507536, DOI 10.1145/507533.507536]
   Christopher D.M., 2008, An Introduction To Information Retrieval, V151, P177
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Eid-Sabbagh RH, 2012, LECT NOTES BUS INF P, V125, P8
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   Ghose Aditya, 2007, 2007 IEEE Congress on Services, P167, DOI 10.1109/SERVICES.2007.52
   Gonçalves JCDR, 2009, INT C COMP SUPP COOP, P161, DOI 10.1109/CSCWD.2009.4968052
   Grefenstette G, 1999, TEXT SPEECH LANGUAGE, V9
   Gruhn V, 2011, ENTERP MODELLING INF, V6, P3
   Hamp B., 1997, AUTOMATIC INFORM EXT
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Indulska M., 2009, LECT NOTES COMPUTER, V5829
   Kunze Matthias, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P166, DOI 10.1007/978-3-642-23059-2_15
   Kunze M., 2011, LECT NOTES COMPUTER, V6896
   Leopold H, 2015, BPMDS 15 WORK C
   Leopold H, 2012, LECT NOTES BUSINESS, V117
   Leopold H., 2013, LNBIP, V168
   Leopold H, 2016, LECT NOTES BUS INF P, V248, P51, DOI 10.1007/978-3-319-39429-9_4
   Leopold H, 2013, DECIS SUPPORT SYST, V56, P310, DOI 10.1016/j.dss.2013.06.014
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Loberger G. J., 2001, WEBSTERS NEW WORLD E
   Malinova M, 2013, WIRTSCH P, V75
   Mansar SL, 2007, BUS PROCESS MANAG J, V13, P193, DOI 10.1108/14637150710740455
   McDonald R., P 51 ANN M ASS COMP, V2, P92
   Meersman R., 2010, LECT NOTES COMPUTER, V6426
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J., 2015, Int J Inf Syst Softw Eng Big Companies, V1, P78
   Miller George, 1998, WORDNET ELECT LEXICA
   MLADENIC D, 2002, P INT C MACH LEARN, P427
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Plag Ingo, 2015, Introduction to English linguistics
   Qiao M., 2011, LECT NOTES COMPUTER, V6896
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Sinha Avik, 2010, 2010 IEEE International Conference on Web Services (ICWS), P473, DOI 10.1109/ICWS.2010.105
   van der Aa H, 2016, LECT NOTES COMPUT SC, V9850, P271, DOI 10.1007/978-3-319-45348-4_16
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   vanderVos B, 1997, DATA KNOWL ENG, V21, P147, DOI 10.1016/S0169-023X(96)00030-4
   vom Brocke J., 2018, Business Process Management Cases: Digital Innovation and Business Transformation in Practice
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Yan ZQ, 2012, DISTRIB PARALLEL DAT, V30, P105, DOI 10.1007/s10619-012-7089-z
NR 54
TC 19
Z9 19
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1179
EP 1194
DI 10.1007/s10270-017-0649-y
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400021
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Posenato, R
   Lanz, A
   Combi, C
   Reichert, M
AF Posenato, Roberto
   Lanz, Andreas
   Combi, Carlo
   Reichert, Manfred
TI Managing time-awareness in modularized processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Process-aware information system; Temporal constraints; Subprocess;
   Process modularity; Controllability
ID CONTROLLABILITY; PATTERNS
AB Managing temporal process constraints in a suitable way is crucial for long-running business processes in many application domains. However, proper support of time-aware processes is still missing in contemporary information systems. This paper tackles a particular challenge existing in this context, namely the handling of temporal constraints for modularized processes (i.e., processes comprising subprocesses), which shall enable both the reuse of process knowledge and the modular design of complex processes. In detail, this paper focuses on the representation and support of time-aware modularized processes in process-aware information systems. To this end, we present a sound and complete method to derive the duration restrictions of a time-aware (sub-)process in such a way that its temporal properties are completely specified. We then show how this characterization of a process can be utilized when reusing it as a subprocess within a modularized process. As a motivating example, we consider a compound process from healthcare. Altogether the proper handling of temporal constraints for modularized processes is crucial for the enhancement of time- and process-aware information systems.
C1 [Lanz, Andreas; Reichert, Manfred] Ulm Univ, Inst Databases & Informat Syst, Ulm, Germany.
   [Posenato, Roberto; Combi, Carlo] Univ Verona, Dept Comp Sci, Comp Sci, Verona, Italy.
C3 Ulm University; University of Verona
RP Posenato, R (corresponding author), Univ Verona, Dept Comp Sci, Comp Sci, Verona, Italy.
EM roberto.posenato@univr.it; andreas.lanz@uni-ulm.de;
   carlo.combi@univr.it; manfred.reichert@uni-ulm.de
RI Combi, Carlo/AAD-4918-2020; Posenato, Roberto/J-5768-2012; Reichert,
   Manfred U/ABB-4469-2020
OI Posenato, Roberto/0000-0003-0944-0419; 
CR Bettini C, 2002, DISTRIB PARALLEL DAT, V11, P269, DOI 10.1023/A:1014048800604
   Combi Carlo, 2013, Proceedings of the 5th International Conference on Agents and Artificial Intelligence. ICAART 2013, P144
   Combi Carlo, 2010, Proceedings of the 2010 17th International Symposium on Temporal Representation and Reasoning (TIME 2010), P129, DOI 10.1109/TIME.2010.17
   Combi C, 2014, COMM COM INF SC, V449, P314, DOI 10.1007/978-3-662-44440-5_19
   Combi C, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2240166.2240169
   Combi C, 2014, IEEE T SYST MAN CY-S, V44, P1182, DOI 10.1109/TSMC.2014.2300055
   Combi C, 2009, LECT NOTES COMPUT SC, V5701, P64, DOI 10.1007/978-3-642-03848-8_6
   Cruz-Jentoft AJ, 2010, AGE AGEING, V39, P412, DOI 10.1093/ageing/afq034
   DECHTER R, 1991, ARTIF INTELL, V49, P61, DOI 10.1016/0004-3702(91)90006-6
   Eder J., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P243
   Eder J, 2003, LECT NOTES COMPUT SC, V2678, P216
   Eder J, 2002, INT FED INFO PROC, V103, P239
   Eder J., 2013, TIME CONSTRAINTS WOR, P191, DOI [10.1007/978-3-642-36926-1_15, DOI 10.1007/978-3-642-36926-1_15]
   Eder Johann, 2013, SEM CONTR INF SYST E, P207, DOI [10.1007/978-3-642-36926-1_16, DOI 10.1007/978-3-642-36926-1_16]
   Haselkorn JK, 2015, NEUROLOGY, V85, P1896, DOI 10.1212/WNL.0000000000002146
   Hochberg MC, 2012, ARTHRIT CARE RES, V64, P465, DOI 10.1002/acr.21596
   Lanz Andreas, 2015, 7th International Conference on Agents and Artificial Intelligence (ICAART 2015). Proceedings, P370
   Lanz A., 2014, P BPM 14 DEM TRACK
   Lanz A., 2013, UIB201302 U ULM
   Lanz A, 2016, LECT NOTES BUS INF P, V248, P157, DOI 10.1007/978-3-319-39429-9_11
   Lanz A, 2016, INFORM SYST, V57, P38, DOI 10.1016/j.is.2015.10.002
   Lanz A, 2014, LECT NOTES COMPUT SC, V8659, P217, DOI 10.1007/978-3-319-10172-9_14
   Lanz A, 2014, REQUIR ENG, V19, P113, DOI 10.1007/s00766-012-0162-3
   Lanz A, 2013, LECT NOTES COMPUT SC, V8185, P39, DOI 10.1007/978-3-642-41030-7_4
   Marjanovic O., 1999, Knowledge and Information Systems, V1, P157
   Monti E, 2010, THER CLIN RISK MANAG, V6, P367, DOI 10.2147/TCRM.S5932
   Morris Paul, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P464, DOI 10.1007/978-3-319-07046-9_33
   Morris P., 2005, Proceedings of the 20th National Conference on Artificial Intelligence, V3, P1193
   Morris P. H., 2001, P 17 INT JOINT C ART, P494
   Morris P, 2006, LECT NOTES COMPUT SC, V4204, P375
   Reichert M, 2012, Enabling Flexibility in Process-Aware Information Systems-Challenges, Methods. Technologies, DOI DOI 10.1007/978-3-642-30409-5
   Reijers H.A., 2003, DESIGN CONTROL WORKF
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Zhang YQ, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P709, DOI 10.1109/SCC.2014.129
NR 35
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1135
EP 1154
DI 10.1007/s10270-017-0643-4
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400019
DA 2024-07-18
ER

PT J
AU Kluge, R
   Stein, M
   Varró, G
   Schürr, A
   Hollick, M
   Mühlhäuser, M
AF Kluge, Roland
   Stein, Michael
   Varro, Gergely
   Schuerr, Andy
   Hollick, Matthias
   Muehlhaeuser, Max
TI A systematic approach to constructing families of incremental topology
   control algorithms using graph transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graph transformation; Graph constraints; Static analysis; Model-driven
   engineering; Wireless networks; Network simulation
ID WIRELESS AD HOC; MODEL; LIFETIME
AB In the communication system domain, constructing and maintaining network topologies via topology control algorithms is an important crosscutting research area. Network topologies are usually modeled using attributed graphs whose nodes and edges represent the network nodes and their interconnecting links. A key requirement of topology control algorithms is to fulfill certain consistency and optimization properties to ensure a high quality of service. Still, few attempts have been made to constructively integrate these properties into the development process of topology control algorithms. Furthermore, even though many topology control algorithms share substantial parts (such as structural patterns or tie-breaking strategies), few works constructively leverage these commonalities and differences of topology control algorithms systematically. In previous work, we addressed the constructive integration of consistency properties into the development process. We outlined a constructive, model-driven methodology for designing individual topology control algorithms. Valid and high-quality topologies are characterized using declarative graph constraints; topology control algorithms are specified using programmed graph transformation. We applied a well-known static analysis technique to refine a given topology control algorithm in a way that the resulting algorithm preserves the specified graph constraints. In this paper, we extend our constructive methodology by generalizing it to support the specification of families of topology control algorithms. To show the feasibility of our approach, we reengineering six existing topology control algorithms and develop e-kTC, a novel energy-efficient variant of the topology control algorithm kTC. Finally, we evaluate a subset of the specified topology control algorithms using a new tool integration of the graph transformation tool EMOFLON and the SIMONSTRATOR network simulation framework.
C1 [Kluge, Roland; Varro, Gergely; Schuerr, Andy] Tech Univ Darmstadt, Real Time Syst Lab, Merckstr 25, D-64283 Darmstadt, Germany.
   [Stein, Michael; Muehlhaeuser, Max] Tech Univ Darmstadt, Telecooperat Grp, Hsch Str 10, D-64289 Darmstadt, Germany.
   [Hollick, Matthias] Tech Univ Darmstadt, Secure Mobile Networking Lab, Mornewegstr 32, D-64293 Darmstadt, Germany.
C3 Technical University of Darmstadt; Technical University of Darmstadt;
   Technical University of Darmstadt
RP Kluge, R (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Merckstr 25, D-64283 Darmstadt, Germany.
EM roland.kluge@es.tu-darmstadt.de
OI Speith, Roland/0000-0002-5551-9374
FU German Research Foundation (DFG) within the Collaborative Research
   Center (CRC) [1053 - MAKI]
FX This work has been funded by the German Research Foundation (DFG) as
   part of projects A01 and C01 within the Collaborative Research Center
   (CRC) 1053 - MAKI.
CR Agricola I., 2008, ELEMENTARY GEOMETRY
   Al Saad M, 2008, PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING WITH APPLICATIONS, P871, DOI 10.1109/ISPA.2008.22
   Anaya IDP, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P145, DOI 10.1145/2593929.2593941
   Anguera J., 2010, P ICSE WORKSH SOFTW, P14, DOI [10.1145/1809111.1809118, DOI 10.1145/1809111.1809118]
   [Anonymous], 2012, P 16 INT SOFTW PROD
   [Anonymous], 2012, 16 INT SOFTWARE PROD
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], Gossip, DOI [DOI 10.1007/978-3-642-17348-67, 10.1007/978-3-642-17348-67]
   [Anonymous], 2012, NET ARCHITECT SERV
   Baldan P, 2008, INFORM COMPUT, V206, P869, DOI 10.1016/j.ic.2008.04.002
   Baleani M, 2005, DES AUT TEST EUROPE, P1044, DOI 10.1109/DATE.2005.105
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Bencomo N., 2008, P 12 INT C SOFTWARE, V2, P23
   Berardinelli L, 2015, LECT NOTES COMPUT SC, V9153, P1, DOI 10.1007/978-3-319-21151-0_1
   Beydeda S., 2005, MODEL DRIVEN SOFTWAR
   Burdek J., 2014, P 8 INT WORKSHOP VAR, DOI DOI 10.1145/2556624.2556627
   Camp T, 2002, WIREL COMMUN MOB COM, V2, P483, DOI 10.1002/wcm.72
   Chakeres ID, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P698, DOI 10.1109/ICDCSW.2004.1284108
   Chen YX, 2005, IEEE COMMUN LETT, V9, P976, DOI 10.1109/LCOMM.2005.11010
   Chu XY, 2012, IEEE INFOCOM SER, P262, DOI 10.1109/INFCOM.2012.6195667
   Deckwerth F., 2014, ECEASST, V67, P1, DOI DOI 10.14279/TUJ.ECEASST.67.945
   Delicato FC, 2009, LECT NOTES COMPUT SC, V5793, P379, DOI 10.1007/978-3-642-04383-3_31
   Delicato FC, 2009, LECT NOTES COMPUT SC, V5518, P851, DOI 10.1007/978-3-642-02481-8_129
   Dijkstra E W, 1976, DISCIPLINE PROGRAMMI, V1
   Dohler A, 2007, 2007 4TH ANNUAL IEEE COMMUNICATIONS SOCIETY CONFERENCE ON SENSOR, MESH AND AD-HOC COMMUNICATIONS AND NETWORKS, VOLS 1 AND 2, P590, DOI 10.1109/SAHCN.2007.4292871
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fischer Thorsten., 1998, Proc. of the 6th International Workshop on Theory and Application of Graph Transformation, V1764, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Fok CL, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1552297.1552299
   FRIIS HT, 1946, P IRE, V34, P254, DOI 10.1109/JRPROC.1946.234568
   Fuentes L, 2011, UBIQUITOUS DEVELOPMENTS IN AMBIENT COMPUTING AND INTELLIGENCE: HUMAN-CENTERED APPLICATIONS, P71, DOI 10.4018/978-1-60960-549-0.ch006
   Fuentes L, 2010, J UNIVERS COMPUT SCI, V16, P1592
   GABRIEL KR, 1969, SYST ZOOL, V18, P259, DOI 10.2307/2412323
   Habel A., 2010, ELECT COMMUN EASST, V30, DOI [10.14279/tuj.eceasst.30.404, DOI 10.14279/TUJ.ECEASST.30.404]
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Hausmann J.H., 2002, P UML 2002 WORKSHOP, P61
   Heckel Reiko, 1995, ELECT NOTES THEOR CO, V2, P118, DOI [10.1016/S1571-0661(05)80188-4, DOI 10.1016/S1571-0661(05)80188-4]
   Hermann Frank, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P50, DOI 10.1007/978-3-642-38883-5_4
   Hiranandani D, 2013, IEEE WIREL COMMUN, V20, DOI 10.1109/MWC.2013.6590054
   Jacob R, 2009, PODC'09: PROCEEDINGS OF THE 2009 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P131, DOI 10.1145/1582716.1582741
   Kang K, 1990, TECH REP
   Karp B., 2000, MobiCom 2000. Proceedings of the Sixth Annual International Conference on Mobile Computing and Networking, P243, DOI 10.1145/345910.345953
   Katelman M, 2008, LECT NOTES COMPUT SC, V5051, P150, DOI 10.1007/978-3-540-68863-1_10
   Khemapech I., 2007, Proceedings of the 8th Annual Postgraduate Symposium on the Convergence of Telecommunications, Networking and Broadcasting (PGNet'07), P15
   Kluge R, 2017, J VISUAL LANG COMPUT, V38, P47, DOI 10.1016/j.jvlc.2016.10.003
   Kluge R, 2015, LECT NOTES COMPUT SC, V9152, P199, DOI 10.1007/978-3-319-21155-8_15
   Koch M., 2002, ACM Transactions on Information and Systems Security, V5, P332, DOI 10.1145/545186.545191
   Kulcsar G., 2014, P INT WORKSH GRAPH B, V68, P1, DOI DOI 10.14279/TUJ.ECEASST.68.957
   Kurkowski S., 2005, ACM SIGMOBILE Mob. Comput. Commun. Rev., V9, P50, DOI DOI 10.1145/1096166.1096174
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Martins F, 2010, ELECTRON P THEOR COM, P49, DOI 10.4204/EPTCS.17.5
   Mori S, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P856
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Portocarrero JMT, 2014, LECT NOTES ARTIF INT, V8779, P110, DOI 10.1007/978-3-319-11298-5_12
   Potop-Butucaru D, 2005, ACSD2005: Fifth International Conference on Application of Concurrency to System Design, Proceedings, P48, DOI 10.1109/ACSD.2005.10
   Qadir J, 2015, IEEE COMMUN SURV TUT, V17, P256, DOI 10.1109/COMST.2014.2345792
   Quinton Clement., 2013, P 17 INT SOFTWARE PR, P162
   Radke H., 2010, INT WORKSH GRAPH COM, P165
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P226
   Richerzhagen B., 2015, 8 EAI INT C SIM TOOL, P99
   Rodoplu V, 1999, IEEE J SEL AREA COMM, V17, P1333, DOI 10.1109/49.779917
   Rozenberg G., 1997, Handbook of Graph Grammars and Computing by Graph Transformation, DOI DOI 10.1142/3303
   Saller K, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P106
   Saller Karsten, 2012, P 16 INT SOFTW PROD, V2, P135, DOI DOI 10.1145/2364412.2364435
   Santi P, 2005, ACM COMPUT SURV, V37, P164, DOI 10.1145/1089733.1089736
   Schnabel T, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P33, DOI 10.1145/2866614.2866619
   Schweizer, 2012, P INT C COMP COMM NE, P1, DOI DOI 10.1109/ICCCN.2012.6289318
   Stein M., 2015, P IEEE LCN, P438, DOI DOI 10.1109/LCN.2015.7366313
   Stein M, 2016, C LOCAL COMPUT NETW, P389, DOI 10.1109/LCN.2016.67
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stingl Dominik, 2011, Proceedings of the 2011 International Conference on High Performance Computing and Simulation (HPCS 2011), P577
   Strüber D, 2016, LECT NOTES COMPUT SC, V9761, P89, DOI 10.1007/978-3-319-40530-8_6
   Strüber D, 2016, LECT NOTES COMPUT SC, V9633, P122, DOI 10.1007/978-3-662-49665-7_8
   Strüber D, 2015, LECT NOTES COMPUT SC, V9033, P283, DOI 10.1007/978-3-662-46675-9_19
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1764, P179
   Valente B, 2011, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON ADVANCES IN FUTURE INTERNET (AFIN 2011), P139
   van der Linden Frank, 2007, Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering, DOI [10.1007/978-3-540-71437-8, DOI 10.1007/978-3-540-71437-8]
   Van Gorp P, 2011, PROCEDIA COMPUT SCI, V4, P589, DOI 10.1016/j.procs.2011.04.062
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Wang Y, 2008, SIGNALS COMMUN TECHN, P113, DOI 10.1007/978-0-387-49592-7_5
   Wattenhofer R., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Weckesser M, 2016, LECT NOTES COMPUT SC, V9633, P158, DOI 10.1007/978-3-662-49665-7_10
   YAO ACC, 1982, SIAM J COMPUT, V11, P721, DOI 10.1137/0211059
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zave P, 2008, LECT NOTES COMPUT SC, V5310, P256
   ZIMMERMANN H, 1980, IEEE T COMMUN, V28, P425, DOI 10.1109/TCOM.1980.1094702
NR 87
TC 10
Z9 10
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 279
EP 319
DI 10.1007/s10270-017-0587-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300013
DA 2024-07-18
ER

PT J
AU Alalfi, MH
   Antony, EP
   Cordy, JR
AF Alalfi, Manar H.
   Antony, Elizabeth P.
   Cordy, James R.
TI An approach to clone detection in sequence diagrams and its application
   to security analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model clone detection; Model based security analysis
ID NICAD
AB Duplication in software systems is an important issue in software quality assurance. While many methods for software clone detection in source code and structural models have been described in the literature, little has been done on similarity in the dynamic behaviour of interactive systems. In this paper, we present an approach to identifying near-miss interaction clones in reverse-engineered UML sequence diagrams. Our goal is to identify patterns of interaction ("conversations") that can be used to characterize and abstract the run-time behaviour of web applications and other interactive systems. In order to leverage existing robust near-miss code clone technology, our approach is text-based, working on the level of XMI, the standard interchange serialization for UML. Clone detection in UML behavioural models, such as sequence diagrams, presents a number of challenges-first, it is not clear how to break a continuous stream of interaction between lifelines (representing the objects or actors in the system) into meaningful conversational units. Second, unlike programming languages, the XMI text representation for UML is highly non-local, using attributes to reference-related elements in the model file remotely. In this work, we use a set of contextualizing source transformations on the XMI text representation to localize related elements, exposing the hidden hierarchical structure of the model and allowing us to granularize behavioural interactions into conversational units. Then we adapt NICAD, a robust near-miss code clone detection tool, to help us identify conversational clones in reverse-engineered behavioural models. These conversational clones are then analysed to find worrisome interactions that may indicate security access violations.
C1 [Alalfi, Manar H.; Antony, Elizabeth P.; Cordy, James R.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Alalfi, MH (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM alalfi@cs.queensu.ca; antony@cs.queensu.ca; cordy@cs.queensu.ca
RI Alalfi, Manar/AAT-3091-2021; Cordy, James R/G-9736-2011
FU Natural Sciences and Engineering Research Council of Canada (NSERC) as
   part of the NECSIS Automotive Partnership; Ontario Research Fund
FX This work is supported in part by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) as part of the NECSIS Automotive
   Partnership, and by the Ontario Research Fund through a Research
   Excellence grant.
CR Al-Batran B, 2011, LECT NOTES COMPUT SC, V6981, P258, DOI 10.1007/978-3-642-24485-8_19
   Alalfi M., 2009, WSE 2009, P41
   Alalfi Manar H., 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P121, DOI 10.1007/978-3-642-31753-8_9
   Alalfi MH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P295, DOI 10.1109/ICSM.2012.6405285
   Alalfi MH, 2012, IEEE INT S WEB SYST, P1, DOI 10.1109/WSE.2012.6320525
   Alalfi MH, 2009, IEEE ICST WORKSHOP, P287, DOI 10.1109/ICSTW.2009.8
   Antony EP, 2013, WORK CONF REVERSE EN, P472, DOI 10.1109/WCRE.2013.6671325
   Brun COdric., 2008, UPGRADE, The European Journal for the Informatics Professional IX, V2, P29
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Dean T. R., 2003, Automated Software Engineering, V10, P311, DOI 10.1023/A:1025801405075
   Farhadi MR, 2014, INT CONF SOFTW SECUR, P78, DOI 10.1109/SERE.2014.21
   Gauthier F., 2013, Proceedings of the 29th Annual Computer Security Applications Conference, P209
   Karademir Saruhan, 2013, P C CTR ADV STUD COL PROC C CTR ADE STUD, P70
   Liu H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269
   Martin D, 2010, LECT NOTES COMPUT SC, V6400, P216
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Rattan D, 2012, ANNU IEEE IND CONF, P1041
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Rubin J., 15 INT C FUND APPR S, P285
   Rubin Julia., 2010, SPLC WORKSHOPS, P155
   Shapland Rob., FORCED BROWSING UNDE
   Stephan M., 2011, 2011582 QUEENS U
   Störrle H, 2009, S VIS LANG HUM CEN C, P199, DOI 10.1109/VLHCC.2009.5295261
   Storrle H., MACH 5 HYPERSONIC
   Störrle H, 2013, SOFTW SYST MODEL, V12, P307, DOI 10.1007/s10270-011-0217-9
   Storrle Harald., 2010, ECSA COMPANION VOLUM, P285
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
NR 29
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1287
EP 1309
DI 10.1007/s10270-016-0557-6
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000010
DA 2024-07-18
ER

PT J
AU Jaouadi, I
   Ben Djemaa, R
   Ben-Abdallah, H
AF Jaouadi, Imen
   Ben Djemaa, Raoudha
   Ben-Abdallah, Hanene
TI A model-driven development approach for context-aware systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context modeling; Application adaptation; Context-aware application
   development; Model-driven development
ID FRAMEWORK
AB The widespread usage of various types of computer devices with different platform characteristics created a need for new methods and tools to support the development of context-aware applications capable of dynamically adapting themselves to context changes. In this paper, we present a new model-based approach that addresses the development of context-aware applications from both the theoretical and practical perspectives and that supports all development phases of context-aware systems. On the one hand, we describe how our approach is applied to dynamically capture, observe the change of the context and notify the system at runtime. On the other hand, we show how our approach is used by programmers to develop a context-aware application.
C1 [Jaouadi, Imen] Univ Sfax, FSEG, MIRACL Lab, Sfax, Tunisia.
   [Jaouadi, Imen; Ben Djemaa, Raoudha] Univ Sousse, ISITCOM, Sousse, Tunisia.
   [Ben-Abdallah, Hanene] King Abdulaziz Univ, Fac Comp & Informat Technol, Jeddah, Saudi Arabia.
C3 Multimedia, InfoRmation Systems & Advancing Computing Laboratory
   (MIRACL); Universite de Sfax; Universite de Sousse; King Abdulaziz
   University
RP Jaouadi, I (corresponding author), Univ Sfax, FSEG, MIRACL Lab, Sfax, Tunisia.; Jaouadi, I (corresponding author), Univ Sousse, ISITCOM, Sousse, Tunisia.
EM Jaouadi.Imen@fsegs.rnu.tn; Raoudha.Bendjemaa@isimsf.rnu.tn;
   HBenAbdallah@kau.edu.sa
RI ; Ben-Abdallah, Hanene/L-1239-2014
OI Ben djemaa, raoudha/0000-0002-7831-112X; Ben-Abdallah,
   Hanene/0000-0001-9215-4661
CR Achilleos A, 2010, PERVASIVE MOB COMPUT, V6, P281, DOI 10.1016/j.pmcj.2009.07.014
   [Anonymous], 2015, MOD DRIV ARCH
   [Anonymous], 2005, 35 EISB C SUST ENTR, DOI [10.1007/978-1-4020-2686-7, DOI 10.1145/1101480.1101483]
   [Anonymous], 2013, P 7 IEEE INT C RES C, DOI DOI 10.1109/RCIS.2013.6577709
   [Anonymous], 2000, MET FAC MOF SPEC
   [Anonymous], 2007, THESIS
   [Anonymous], 12 ANN ACM S US INT
   [Anonymous], 2015, MARKLOGIC SERVER XQU
   ATLAS group LINAand INRIA Nantes, 2005, ATL ATL TRANSF LANG
   Bardram JE, 2005, LECT NOTES COMPUT SC, V3468, P98
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Dey A.K., 2000, CHI 2000 WORKSHOP WH
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Helming J., 2015, ECLIPSE SOURCE
   Henricksen K, 2006, PERVASIVE MOB COMPUT, V2, P37, DOI 10.1016/j.pmcj.2005.07.003
   Jaouadi I., 2014, 23 INT C SYST ENG IC
   Pham Huy N., 2007, First International Workshop on Software Engineering for Pervasive Computing Applications, Systems, and Environments (SEPCASE '07), DOI 10.1109/SEPCASE.2007.2
   SANTOS LOB, 2007, P 5 INT WORKSH MIDDL, P37
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Serral E, 2008, LECT NOTES COMPUT SC, V5061, P662, DOI 10.1007/978-3-540-69293-5_52
   Vale S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P261, DOI 10.1109/ICIW.2009.44
   Vieira V, 2011, EXPERT SYST APPL, V38, P1119, DOI 10.1016/j.eswa.2010.05.006
   Zimmermann A, 2007, LECT NOTES ARTIF INT, V4635, P558
NR 23
TC 6
Z9 6
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1169
EP 1195
DI 10.1007/s10270-016-0550-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000006
DA 2024-07-18
ER

PT J
AU Di Alesio, S
   Sen, S
AF Di Alesio, Stefano
   Sen, Sagar
TI Using UML/MARTE to support performance tuning and stress testing in
   real-time systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE UML/MARTE; Real-time systems; Safety-critical systems; Performance
   tuning; Stress testing; Constrained optimization
ID SCHEDULABILITY ANALYSIS; SOFTWARE-DEVELOPMENT; MODEL
AB Real-time embedded systems (RTESs) operating in safety-critical domains have to satisfy strict performance requirements in terms of task deadlines, response time, and CPU usage. Two of the main factors affecting the satisfaction of these requirements are the configuration parameters regulating how the system interacts with hardware devices, and the external events triggering the system tasks. In particular, it is necessary to carefully tune the parameters in order to ensure a satisfactory trade-off between responsiveness and usage of computational resources, and also to stress test the system with worst-case inputs likely to violate the requirements. Performance tuning and stress testing are usually manual, time-consuming, and error-prone processes, because the system parameters and input values range in a large domain, and their impact over performance is hard to predict without executing the system. In this paper, we provide an approach, based on UML/MARTE, to support the generation of system configurations predicted to achieve a satisfactory trade-off between response time and CPU usage, and stress test cases that push the system tasks to violate their deadlines. First, we devise a conceptual model that specifies the abstractions required for analyzing task deadlines, response time, and CPU usage, and provide a mapping between these abstractions and UML/MARTE. Then, we prune the UML/MARTE metamodel to only contain a purpose-specific subset of entities needed to support performance tuning and stress testing. The pruned version is a supertype of UML/MARTE, which ensures that all instances of the pruned metamodel are also instances of UML/MARTE. Finally, we cast the generation of configurations and stress test cases as two constrained optimization problems (COPs) over our conceptual model. The input data for these COPs in automatically generated via a model-to-text (M2T) transformation from models specified in the pruned UML/MARTE metamodel to the Optimization Programming Language. We validate our approach in a safety-critical RTES from the maritime and energy domain, showing that (1) our conceptual model can be applied in an industrial setting with reasonable effort, and (2) the optimization problems effectively identify configurations predicted to minimize response time and CPU usage, and stress test cases that maximize deadline misses. Based on our experience, we highlight challenges and potential issues to be aware of when using UML/MARTE to support performance tuning and stress testing in an industrial context.
C1 [Di Alesio, Stefano; Sen, Sagar] Simula Res Lab, Certus Ctr Software Verificat & Validat, POB 134, N-1325 Lysaker, Norway.
RP Di Alesio, S (corresponding author), Simula Res Lab, Certus Ctr Software Verificat & Validat, POB 134, N-1325 Lysaker, Norway.
EM stefano@simula.no; sagar@simula.no
RI Sen, Sagar/H-3126-2017; Di Alesio, Stefano/M-5253-2014
OI Sen, Sagar/0000-0002-5784-7355; Di Alesio, Stefano/0000-0002-4627-8011
CR Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   [Anonymous], 2011, HARD REAL TIME COMPU
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], 2011, 20110602 OMG
   [Anonymous], 1996, Safety-critical computer systems
   [Anonymous], 2011, Introduction to Embedded Systems-A Cyber-Physical Systems Approach
   [Anonymous], 2006, Acm International Conference Proceeding Series
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1999, OPL OPTIMIZATION PRO
   Atamtürk A, 2005, ANN OPER RES, V140, P67, DOI 10.1007/s10479-005-3968-2
   Baker TP, 2006, REAL-TIME SYST, V32, P49, DOI 10.1007/S11241-005-4686-1
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Baptiste Philippe, 2001, INT SER OPER RES MAN, V39
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   Bruce K., 2004, ELECT NOTES THEOR CO, V20, P1
   Chinchuluun A, 2008, SPRINGER SER OPTIM A, V17, P1, DOI 10.1007/978-0-387-77247-9
   Clarke EM., 2012, LASER Summer School on Software Engineering, P1, DOI [10.1007/978-3-642-35746-6, 10.1007/978-3-642-35746-6_1, DOI 10.1007/978-3-642-35746-6_1]
   Committee I. S., 2008, IEEE STAND FLOAT POI
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   David A., 2009, MODEL BASED EMBED SY, V1, P93
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   Di Alesio S., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P764, DOI 10.1109/ICST.2012.171
   Di Alesio S., 2016, 22 INT C PRINC PRACT
   Di Alesio S., ACM T SOFT ENG METHO, V25
   Di Alesio S., 2014, PRINCIPLES PRACTICE
   Di Alesio S, 2013, PROC INT SYMP SOFTW, P158, DOI 10.1109/ISSRE.2013.6698915
   Espinoza H., 2008, MODELING ANAL REAL T
   Gomaa H., 2006, 28th International Conference on Software Engineering Proceedings, P1059, DOI 10.1145/1134285.1134504
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Hwang CL, 2012, Multiple objective decision making-methods and applications: a state-of-the- art survey, DOI DOI 10.1007/978-3-642-45511-737
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P1367, DOI 10.1007/s10270-014-0405-5
   Kartson D., 1994, Modelling with generalized stochastic Petri nets
   Kopetz H, 2011, Real-time systems series, V2
   LALA JH, 1994, P IEEE, V82, P25, DOI 10.1109/5.259424
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Middleton S. E., 2010, ECHALLENGES 2010, P1
   Mikucionis M, 2010, LECT NOTES COMPUT SC, V6416, P175, DOI 10.1007/978-3-642-16561-0_21
   Mraidha C., 2011, ACM SIGSOFT Softw Eng Notes, V36, P1, DOI [10.1145/1921532.1921555, DOI 10.1145/1921532.1921555]
   Nejati Shiva, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P759, DOI 10.1007/978-3-642-33666-9_48
   Nejati S, 2013, IEEE INT CONF AUTOM, P529, DOI 10.1109/ASE.2013.6693110
   Petriu DC, 2010, MODEL DRIVEN ENG DIS
   PLATEAU B, 1991, IEEE T SOFTWARE ENG, V17, P1093, DOI 10.1109/32.99196
   Safdar SA, 2015, LECT NOTES COMPUT SC, V9153, P33, DOI 10.1007/978-3-319-21151-0_3
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   SHIN KG, 1994, P IEEE, V82, P6, DOI 10.1109/5.259423
   Shousha M, 2008, LECT NOTES COMPUT SC, V5301, P475, DOI 10.1007/978-3-540-87875-9_34
   Singh A, 2009, ADV INFORM SECUR, V44, P1, DOI 10.1007/978-0-387-89468-3_1
   Sprunt B., 1989, Real-Time Systems, V1, P27, DOI 10.1007/BF02341920
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
NR 61
TC 1
Z9 1
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 479
EP 508
DI 10.1007/s10270-017-0585-x
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300007
DA 2024-07-18
ER

PT J
AU Ribeiro, FGC
   Pereira, CE
   Rettberg, A
   Soares, MS
AF Ribeiro, Fabiola Goncalves C.
   Pereira, Carlos E.
   Rettberg, Achim
   Soares, Michel S.
TI Model-based requirements specification of real-time systems with UML,
   SysML and MARTE
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Real-time systems; Requirements engineering; UML; SysML; MARTE
ID DESIGN; TRACEABILITY; FRAMEWORK
AB Activities of specification, analysis and design of real-time systems (RTS) are highly dependent on an effective understanding of the application domain and on the thorough representation of their basic requirements. Model-based approaches using modeling languages such as UML are often applied to contribute to handle complexity of RTS development. However, UML alone does not completely represent important features associated with these systems, such as relationship with hardware elements and an effective representation of timing constraints. This article explores the combined use of UML and its profiles SysML and MARTE for modeling hardware and software requirements of RTS, with application to a case of controlling urban road traffic. The SysML profile alone does not present the representation of temporal, behavioral and performance requirements. The MARTE profile provides key resources to specify non-functional requirements for RTS, in addition to a clear description of the various relevant aspects of requirements definition of RTS, as for instance, temporal aspects and constraints. The main objective is to present the combined application of SysML with MARTE stereotypes, which enables the specification of different features of individual software requirements. Thus, in addition to the factors mentioned above, we can say that the proposed approach has an important role to specify RTS at different levels of detail and levels of abstraction.
C1 [Ribeiro, Fabiola Goncalves C.] Fed Inst Goiano, Catalao, Brazil.
   [Pereira, Carlos E.] Univ Fed Rio Grande do Sul, Porto Alegre, RS, Brazil.
   [Rettberg, Achim] Carl von Ossietzky Univ Oldenburg, Oldenburg, Germany.
   [Soares, Michel S.] Univ Fed Sergipe, Sao Cristovao, Brazil.
C3 Instituto Federal Goiano; Universidade Federal do Rio Grande do Sul;
   Carl von Ossietzky Universitat Oldenburg; Universidade Federal de
   Sergipe
RP Soares, MS (corresponding author), Univ Fed Sergipe, Sao Cristovao, Brazil.
EM fabiola.ribeiro@ifgoiano.edu.br; cpereira@ece.ufrgs.br;
   achim.rettberg@iess.org; mics.soares@gmail.com
RI Pereira, Carlos E/G-5280-2012
OI Pereira, Carlos E/0000-0003-4315-4256
FU CNPq [445500/2014-0]
FX The authors would like to thank CNPq (www.cnpq.br) Grant 445500/2014-0
   for the financial support.
CR Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   [Anonymous], P 3 EUR C MOD DRIV A
   [Anonymous], 2007, C P IEEE INT C SYST
   Bair LJ, 2013, WINT SIMUL C PROC, P1245, DOI 10.1109/WSC.2013.6721512
   Bantegnie E., 2011, INTEROPERABLE EMBEDD
   Belategi L, 2010, LECT NOTES COMPUT SC, V6287, P466, DOI 10.1007/978-3-642-15579-6_38
   Côté I, 2011, EUR CON SFTWR MTNCE, P161, DOI 10.1109/CSMR.2011.22
   David P, 2010, RELIAB ENG SYST SAFE, V95, P431, DOI 10.1016/j.ress.2009.11.015
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   dos Santos Soares Michel, 2008, Journal of Software, V3, P57
   Dubois H, 2010, IEEE INT C ENG COMP, P233, DOI 10.1109/ICECCS.2010.32
   Ebeid E, 2012, DES AUT TEST EUROPE, P1072
   Ebeid E, 2015, IEEE T COMPUT AID D, V34, P603, DOI 10.1109/TCAD.2015.2394395
   Espinoza H., 2008, C DES AUT TEST EUR D
   Espinoza H, 2009, LECT NOTES COMPUT SC, V5562, P98, DOI 10.1007/978-3-642-02674-4_8
   Fishwick P, 2014, WINT SIMUL C PROC, P2786, DOI 10.1109/WSC.2014.7020121
   Gomez C, 2012, EUROMICRO CONF PROC, P17, DOI 10.1109/SEAA.2012.66
   Helming Jonas, 2010, 2010 Fifth International Workshop on Requirements Engineering Visualization (REV), P53, DOI 10.1109/REV.2010.5625659
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Iqbal M.Z., 2011, 201104 SIM RES LAB
   Kumar B, 2010, J OBJECT TECHNOL, V9, P178, DOI 10.5381/jot.2010.9.2.a5
   Laplante P.A., 2006, Real-Time Systems Design Analysis, V3rd
   Lei Li, 2011, Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety (ICRMS 2011), P1247, DOI 10.1109/ICRMS.2011.5979460
   Linhares MV, 2007, IEEE INT C EMERG, P344
   Meng C, 2013, WINT SIMUL C PROC, P2180, DOI 10.1109/WSC.2013.6721595
   Mura Marcello, 2008, 2008 Forum on Specification, Verification & Design Languages (FDL), P203, DOI 10.1109/FDL.2008.4641446
   OMG M., 2011, TECHNICAL REPORT
   OMG S., 2010, TECHNICAL REPORT
   OMG U., 2011, UN MOD LANG VERS 2 3
   Parviainen P., 2004, REQUIREMENTS ENG DEA
   Pinheiro F.A. C., 2003, Perspectives on Software Requirements, P93, DOI [10.1007/978-1-4615-0465-8_5, DOI 10.1007/978-1-4615-0465-8_5]
   Quadri IR, 2008, EMB SYST REAL TIME M, P47, DOI 10.1109/ESTMED.2008.4696994
   Quadri IR, 2012, 7 INT WORKSH REC COM, P1, DOI DOI 10.1109/RECOSOC.2012.6322882
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Ribeiro FGC, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P70, DOI 10.5220/0004449800700081
   Rogers P, 2003, TLS-TIMES LIT SUPPL, P3
   Marques MRS, 2014, IEEE INTL CONF IND I, P176, DOI 10.1109/INDIN.2014.6945504
   Shousha M, 2012, IEEE T SOFTWARE ENG, V38, P354, DOI 10.1109/TSE.2010.107
   Shuman E. A., 2010, P SUMM SIM MULT, P483
   Silvestre EA, 2012, LECT NOTES COMPUT SC, V7336, P1, DOI 10.1007/978-3-642-31128-4_1
   Soares MD, 2011, P INT COMP SOFTW APP, P308, DOI 10.1109/COMPSAC.2011.47
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Valles-Barajas F, 2010, IEEE LAT AM T, V8, P259, DOI 10.1109/TLA.2010.5538400
   von der Beeck M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P92, DOI 10.1109/ICRE.2002.1048510
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Xu J., INFORM TECHNOLOGY CO, V2, P54
   Zaki M. Z. M., IEEE S COMP INF ISCI, P536
NR 49
TC 13
Z9 16
U1 1
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 343
EP 361
DI 10.1007/s10270-016-0525-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100017
DA 2024-07-18
ER

PT J
AU Zurowska, K
   Dingel, J
AF Zurowska, Karolina
   Dingel, Juergen
TI Language-specific model checking of UML-RT models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML-RT; Model checking; Lazy composition
ID VERIFICATION
AB Model-driven development (MDD) deals with complexities of modern software development by using models. Their verification is one of the opportunities of MDD, since it can be performed in the early stages of the development. The prevailing trend in verification of MDD models has been to translate them to an input language of one of the existing tools, most notably model checkers. Such an approach has advantages; for instance, we can use tools that achieved a higher level of maturity, including SPIN, NuSMV and Java PathFinder. However, the input languages of model checkers are typically not compatible with MDD models, which can make the translations very complex and difficult to maintain. Moreover, it is more difficult to take advantage of specific features of the structure and semantics of models to, e.g., speed up analysis. In this paper, we depart from the translational trend and present more direct and dedicated approach. We use an MDD language, namely UML-RT (used in IBM Rational Software Architect RealTime Edition), and we introduce a verification method built around its main features such as hierarchical structures, action code and asynchronous communication. In our method we use a formalization tailored to UML-RT models. This enables very easy transformation of models, but also reduces the necessary translations of verification results and directly supports the most important features of UML-RT. The proposed method includes an on-the-fly model checking algorithm based on the original CTL labeling. This algorithm is further optimized to include lazy composition. In the paper, we present all necessary components of the checking algorithms. Additionally, we also show the results of experiments with our implementation using several UML-RT models and CTL formulas. The experiments provide some evidence of the viability of a language-specific analysis of MDD models and of the effectiveness of our optimizations in certain cases.
C1 [Zurowska, Karolina; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zurowska, K (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM zurowska@cs.queensu.ca
CR [Anonymous], 2006, P MODEV 2, P94
   Balasubramanian D, 2013, LECT NOTES COMPUT SC, V7795, P523, DOI 10.1007/978-3-642-36742-7_36
   BHAT G, 1995, IEEE S LOG, P388, DOI 10.1109/LICS.1995.523273
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   Clarke EM, 1999, MODEL CHECKING, P1
   Compton K., 2000, TECHNICAL REPORT
   Courcoubetis Costas., 1993, Computer-aided Verification, P129
   Giese H., 2003, Software Engineering Notes, V28, P38, DOI 10.1145/949952.940078
   GRAF S, 1991, LECT NOTES COMPUT SC, V531, P186, DOI 10.1007/BFb0023732
   Hammer M, 2005, LECT NOTES COMPUT SC, V3440, P191
   Jensen H.E., 2000, FORMAL TECHNIQUES RE, P641
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Leue S., 2008, TECHNICAL REPORT
   Lind-Nielsen J, 2001, FORM METHOD SYST DES, V18, P5, DOI 10.1023/A:1008736219484
   Mehlitz P.C., 2008, IEEE AER C
   Posse Ernesto., 2014, Software and Systems Modeling, P1
   Saaltink M., 1999, TECHNICAL REPORT
   Schafer Timm., 2001, ELECTRON NOTES THEOR, V55, P1
   Selic B., 1994, REAL TME OBJECT ORIE
   Shen WW, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P315, DOI 10.1109/ASE.2001.989819
   Vergauwen B., 1993, CONCUR '93. 4th International Conference on Concurrency Theory Proceedings, P447
   Visser W, 2012, SOFTW SYST MODEL, V11, P541, DOI 10.1007/s10270-012-0281-9
   Zheng H, 2010, IEEE T COMPUT AID D, V29, P329, DOI 10.1109/TCAD.2009.2035544
   Zurowska Karolina, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P39, DOI 10.1007/978-3-642-28891-3_6
   Zurowska K, 2014, THESIS
   Zurowska K, 2013, LECT NOTES COMPUT SC, V8107, P304, DOI 10.1007/978-3-642-41533-3_19
NR 26
TC 1
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 393
EP 415
DI 10.1007/s10270-015-0484-y
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400006
DA 2024-07-18
ER

PT J
AU Abdallah, R
   Hélouët, L
   Jard, C
AF Abdallah, Rouwaida
   Helouet, Loic
   Jard, Claude
TI Distributed implementation of message sequence charts
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Scenarios; Implementation; Distributed system synthesis
ID BEHAVIOR MODELS; CHECKING
AB This work revisits the problem of program synthesis from specifications described by high-level message sequence charts. We first show that in the general case, synthesis by a simple projection on each component of the system allows more behaviors in the implementation than in the specification. We then show that differences arise from loss of ordering among messages and show that behaviors can be preserved by addition of communication controllers that intercept messages to add stamping information before resending them and deliver messages to processes in the order described by the specification.
C1 [Abdallah, Rouwaida] Univ Europeenne Bretagne, ENS Cachan, IRISA, F-35170 Bruz, France.
   [Helouet, Loic] INRIA IRISA, F-35042 Rennes, France.
   [Jard, Claude] Univ Nantes LINA, F-44322 Nantes, France.
C3 Universite de Bretagne Occidentale; Universite Paris Saclay; Universite
   de Rennes
RP Hélouët, L (corresponding author), INRIA IRISA, Campus Beaulieu, F-35042 Rennes, France.
EM rouwaida.abdallah@bretagne.ens-cachan.fr; loic.helouet@inria.fr;
   claude.jard@univ-nantes.fr
OI Abdallah, Rouwaida/0009-0007-9803-3511
CR Abdalla MM, 1999, SDL'99: THE NEXT MILLENNIUM, P51, DOI 10.1016/B978-044450228-5/50005-9
   Akshay S, 2007, LECT NOTES COMPUT SC, V4703, P181
   Amyot D, 2003, TELECOMMUN SYST, V24, P61, DOI 10.1023/A:1025890110119
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   [Anonymous], 2011, Z150 ITUT
   [Anonymous], 1998, Z120 ITUT
   [Anonymous], 2011, Z100 ITUT
   Baudru N, 2007, LECT NOTES COMPUT SC, V4855, P277
   BenAbdallah H, 1997, LECT NOTES COMPUT SC, V1217, P259, DOI 10.1007/BFb0035393
   Bochmann G., 1986, P ACM SIGCOMM C COMM, P148
   Bollig B, 2010, LECT NOTES COMPUT SC, V6072, P48, DOI 10.1007/978-3-642-13182-0_5
   BRAND D, 1981, RZ1053 IBM ZUR RES L
   Caillaud B., 2000, RR3970 INRIA
   FIDGE C, 1991, COMPUTER, V24, P28, DOI 10.1109/2.84874
   Genest B, 2002, LECT NOTES COMPUT SC, V2380, P657
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   HELOUET L, 2000, 5 INT WORKSH FORM ME
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Leue S, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/ASE.1998.732635
   Liang Hu, 2006, Proceedings 2006 10th International Conference on Computer Supported Cooperative Work in Design (IEEE Cat. No. 06EX1292), DOI 10.1145/1138953.1138956
   Mansurov N, 1999, SDL'99: THE NEXT MILLENNIUM, P225, DOI 10.1016/B978-044450228-5/50016-3
   Mattern F., 1988, WORKSH PAR DISTR ALG, P215
   Mukund M., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P521
   Muscholl A, 1998, LECT NOTES COMPUT SC, V1378, P226, DOI 10.1007/BFb0053553
   Object Management Group, 2005, UML 2 0 UN MOD LANG
   RAYNAL M, 1991, INFORM PROCESS LETT, V39, P343, DOI 10.1016/0020-0190(91)90008-6
   SALEH K, 1996, COMPUT COMMUN REV, V26, P40
   Uchitel S., 2001, Software Engineering Notes, V26, P74, DOI 10.1145/503271.503220
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   Uchitel S, 2001, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2001.919093
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
NR 31
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 1029
EP 1048
DI 10.1007/s10270-013-0357-1
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400028
DA 2024-07-18
ER

PT J
AU Giua, A
   Seatzu, C
AF Giua, Alessandro
   Seatzu, Carla
TI Petri nets for the control of discrete event systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Petri nets; Discrete event systems; Supervisory control; Monitor places;
   State estimation
ID DEADLOCK PREVENTION; FAULT-DETECTION; IDENTIFICATION; OBSERVABILITY;
   AVOIDANCE; DIAGNOSIS; SIPHONS
AB The interest in Petri nets has grown within the automatic control community in parallel with the development of the theory of discrete event systems. In this article, our goal is to give a flavor of the features that make Petri nets a good model for discrete event systems and to point out the main areas where Petri nets have offered the most significant contributions.
C1 [Giua, Alessandro; Seatzu, Carla] Univ Cagliari, DIEE, Cagliari, Italy.
   [Giua, Alessandro] Aix Marseille Univ, LSIS, Marseille, France.
C3 University of Cagliari; Aix-Marseille Universite
RP Giua, A (corresponding author), Univ Cagliari, DIEE, Cagliari, Italy.
EM giua@diee.unica.it; seatzu@diee.unica.it
RI Giua, Alessandro/AAY-4581-2021; Giua, Alessandro/G-5827-2012
OI Giua, Alessandro/0000-0002-3859-9472; Giua,
   Alessandro/0000-0002-3859-9472
CR Badouel E., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P529
   Basile F, 2009, IEEE T AUTOMAT CONTR, V54, P748, DOI 10.1109/TAC.2009.2014932
   Benveniste A, 2003, IEEE T AUTOMAT CONTR, V48, P714, DOI 10.1109/TAC.2003.811249
   Bourdeaud'huy T., 2004, ACT 5 C FRANC MOD EL
   Cabasino MP, 2011, CONTROL ENG PRACT, V19, P989, DOI 10.1016/j.conengprac.2010.12.010
   Cabasino M.P., 2012, LECT NOTES CONTROL I, V433, P213
   Cabasino MP, 2007, DISCRETE EVENT DYN S, V17, P447, DOI [10.1007/s10626-007-0025-0, 10.1007/S10626-007-0025-0]
   Cabasino MP, 2010, AUTOMATICA, V46, P1531, DOI 10.1016/j.automatica.2010.06.013
   Caines P., 1988, P 27 IEEE C DEC CONT
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Chu F, 1997, IEEE T ROBOTIC AUTOM, V13, P793, DOI 10.1109/70.650158
   COLOM JM, 1990, LECT NOTES COMPUTER, V483
   Cordone R., 2013, IEEE T AUTOMAT CONTR, V58, P1
   DAVID R, 2005, DISCRETE CONTINUOS H
   Dotoli M, 2009, AUTOMATICA, V45, P2665, DOI 10.1016/j.automatica.2009.07.021
   EZPELETA J, 1995, IEEE T ROBOTIC AUTOM, V11, P173, DOI 10.1109/70.370500
   Genc S, 2007, IEEE T AUTOM SCI ENG, V4, P206, DOI 10.1109/TASE.2006.879916
   Giua A, 2002, IEEE T AUTOMAT CONTR, V47, P1424, DOI 10.1109/TAC.2002.802769
   Giua A., 2012, LECT NOTES CONTROL I, V433, P235
   Giua A., 1992, P 1992 IEEE INT C SY
   HIRAISHI K, 1992, LECT NOTES COMPUT SC, V616, P244
   Holloway LE, 1997, DISCRETE EVENT DYN S, V7, P151, DOI 10.1023/A:1008271916548
   Iordache M., 2005, PETR NETS 2005 MIAM
   Iordache MV, 2002, IEEE T ROBOTIC AUTOM, V18, P59, DOI 10.1109/70.988975
   KUMAR R, 1993, IEEE T AUTOMAT CONTR, V38, P232, DOI 10.1109/9.250512
   Li ZW, 2004, IEEE T SYST MAN CY A, V34, P38, DOI 10.1109/TSMCA.2003.820576
   Miyagi PE, 2006, CONTROL ENG PRACT, V14, P397, DOI 10.1016/j.conengprac.2005.02.002
   Moody J.O., 1998, KLUW S DISC EV DYN S
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   OZVEREN CM, 1990, IEEE T AUTOMAT CONTR, V35, P797, DOI 10.1109/9.57018
   Park JH, 2000, IEEE T ROBOTIC AUTOM, V16, P190, DOI 10.1109/70.843175
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   PROCK J, 1991, AUTOMATICA, V27, P239, DOI 10.1016/0005-1098(91)90074-C
   Ramadge P., 1986, P 25 IEEE C DEC CONT
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Reveliotis SA, 2007, IEEE T SYST MAN CY A, V37, P319, DOI 10.1109/TSMCA.2007.893461
   Seatzu C., 2012, LECT NOTES CONTROL I, V433
   Silva M., 1992, RECENT ADV MATH THEO, VII, P35
   Sreenivas R.S., 2002, P IFAC WODES 02 6 WO
   VISWANADHAM N, 1990, IEEE T ROBOTIC AUTOM, V6, P713, DOI 10.1109/70.63257
   Wu YQ, 2005, IEEE T AUTOMAT CONTR, V50, P2048, DOI 10.1109/TAC.2005.860249
   Yamalidou K, 1996, AUTOMATICA, V32, P15, DOI 10.1016/0005-1098(95)00103-4
NR 42
TC 12
Z9 13
U1 0
U2 22
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 693
EP 701
DI 10.1007/s10270-014-0425-1
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU de Roo, A
   Sözer, H
   Aksit, M
AF de Roo, Arjan
   Sozer, Hasan
   Aksit, Mehmet
TI Composing domain-specific physical models with general-purpose software
   modules in embedded control software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain specific languages; Embedded systems; Software composition;
   Composition filters; Aspect-oriented programming
ID CONTRACTS; LANGUAGES
AB A considerable portion of software systems today are adopted in the embedded control domain. Embedded control software deals with controlling a physical system, and as such models of physical characteristics become part of the embedded control software. In current practices, usually general-purpose languages (GPL), such as C/C++ are used for embedded systems development. Although a GPL is suitable for expressing general-purpose computation, it falls short in expressing the models of physical characteristics as desired. This reduces not only the readability of the code but also hampers reuse due to the lack of dedicated abstractions and composition operators. Moreover, domain-specific static and dynamic checks may not be applied effectively. There exist domain-specific modeling languages (DSML) and tools to specify models of physical characteristics. Although they are commonly used for simulation and documentation of physical systems, they are often not used to implement embedded control software. This is due to the fact that these DSMLs are not suitable to express the general-purpose computation and they cannot be easily composed with other software modules that are implemented in GPL. This paper presents a novel approach to combine a DSML to model physical characteristics and a GPL to implement general-purpose computation. The composition filters model is used to compose models specified in the DSML with modules specified in the GPL at the abstraction level of both languages. As such, this approach combines the benefits of using a DSML to model physical characteristics with the freedom of a GPL to implement general-purpose computation. The approach is illustrated using two industrial case studies from the printing systems domain.
C1 [de Roo, Arjan; Aksit, Mehmet] Univ Twente, Software Engn Grp, CS Dept, NL-7500 AE Enschede, Netherlands.
   [Sozer, Hasan] Ozyegin Univ, Dept Comp Sci, Istanbul, Turkey.
C3 University of Twente; Ozyegin University
RP de Roo, A (corresponding author), Univ Twente, Software Engn Grp, CS Dept, POB 217, NL-7500 AE Enschede, Netherlands.
EM roo@ewi.utwente.nl
RI Sözer, Hasan/AAR-8697-2020; Sözer, Hasan/A-4722-2015
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763
FU Netherlands Ministry of Economic Affairs under the Embedded Systems
   Institute program
FX This work has been carried out as part of the OCTOPUS project under the
   responsibility of the Embedded Systems Institute. This project is
   partially supported by the Netherlands Ministry of Economic Affairs
   under the Embedded Systems Institute program. We thank Jacques Verriet
   from ESI for reviewing this paper and providing useful feedback.
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   AKSIT M, 1992, LECT NOTES COMPUT SC, V615, P372, DOI 10.1007/BFb0053047
   Aksit M., 1994, Object-Based Distributed Programming. ECOOP '93 Workshop Proceedings, P152, DOI 10.1007/BFb0017540
   AKSIT M, 1988, ACM SIGPLAN NOTICES, V23, P267
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], 2007, WEB SERV BUS PROC EX
   Bapty T., 1999, ISIS9901 VAND U
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Berbers Y, 2005, LECT NOTES COMPUT SC, V3778, P209
   Bergmans L., 2005, ASPECT ORIENTED SOFT, P63
   Bishop R.H., 1996, MODERN CONTROL SYSTE
   Bockisch C.M., 2008, THESIS TU DARMSTADT
   Bouraqadi N., 2005, ASPECT ORIENTED SOFT, P261
   Broenink J. F., 1997, Journal A, V38, P22
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Chen F, 2007, ACM SIGPLAN NOTICES, V42, P569, DOI 10.1145/1297105.1297069
   de Roo A., 2011, P 5 IEEE INT C SEC S
   de Roo A., 2012, THESIS ENSCHEDE
   de Roo A., 2007, THESIS
   de Roo A., 2008, 1 INT WORKSH ADV SOF
   de Roo A, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P349, DOI 10.1109/WICSA.2009.5290661
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Feldman A., 2009, P DX, V9, P403
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   FORBUS KD, 1984, ARTIF INTELL, V24, P85, DOI 10.1016/0004-3702(84)90038-9
   FRANCEZ N, 1986, SCI COMPUT PROGRAM, V6, P35, DOI 10.1016/0167-6423(86)90018-3
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GLANDRUP M, 1995, THESIS U TWENTE
   Gray J, 2003, LECT NOTES COMPUT SC, V2830, P151
   HELM R, 1990, SIGPLAN NOTICES, V25, P169, DOI 10.1145/97946.97967
   Henzinger TA, 2003, IEEE CONTR SYST MAG, V23, P50, DOI 10.1109/MCS.2003.1172829
   HOLLAND IM, 1992, LECT NOTES COMPUT SC, V615, P287, DOI 10.1007/BFb0053043
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kitchin D, 2009, LECT NOTES COMPUT SC, V5522, P1, DOI 10.1007/978-3-642-02138-1_1
   Kleijn C, 2009, 20 SIM 4 1 REFERENCE
   Koopman P, 1996, PR IEEE COMP DESIGN, P310, DOI 10.1109/ICCD.1996.563572
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Malakuti Somayeh, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P31, DOI 10.1109/ISSRE.2009.12
   Markovski J, 2010, IEEE DECIS CONTR P, P3481, DOI 10.1109/CDC.2010.5717095
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   Passerone R, 2009, IEEE DES TEST COMPUT, V26, P38, DOI 10.1109/MDT.2009.64
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Theunissen R., 2009, P EUR CONTR C
   University of Twente, 2012, COMP ANN REF MAN
   University of Twente, COMPOSE
   van den Berg K., 2005, P DES SOFTW OR ASP D
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   VANDIJK W, 1995, CFIST COMPOSITION FI
   VDC Research, 2010, EMB SOFTW TOOLS MARK
   WICHMAN JC, 1999, THESIS U TWENTE
   Yoshioka M, 2004, ADV ENG INFORM, V18, P95, DOI 10.1016/j.aei.2004.09.004
   Zoeteweij Peter, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P103, DOI 10.1109/SSIRI.2008.48
NR 55
TC 4
Z9 4
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 55
EP 81
DI 10.1007/s10270-012-0283-7
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Störrle, H
AF Storrle, Harald
TI Towards clone detection in UML domain models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model clones; Model management; Model evolution; Model maintenance;
   Model similarity
ID SPECIFICATION; ALGORITHM
AB Code clones (i.e., duplicate fragments of code) have been studied for long, and there is strong evidence that they are a major source of software faults. Anecdotal evidence suggests that this phenomenon occurs similarly in models, suggesting that model clones are as detrimental to model quality as they are to code quality. However, programming language code and visual models have significant differences that make it difficult to directly transfer notions and algorithms developed in the code clone arena to model clones. In this article, we develop and propose a definition of the notion of "model clone" based on the thorough analysis of practical scenarios. We propose a formal definition of model clones, specify a clone detection algorithm for UML domain models, and implement it prototypically. We investigate different similarity heuristics to be used in the algorithm, and report the performance of our approach. While we believe that our approach advances the state of the art significantly, it is restricted to UML models, its results leave room for improvements, and there is no validation by field studies.
C1 [Storrle, Harald] Tech Univ Denmark DTU, Dept Informat & Math Modeling IMM, Lyngby, Denmark.
C3 Technical University of Denmark
RP Störrle, H (corresponding author), Tech Univ Denmark DTU, Dept Informat & Math Modeling IMM, Lyngby, Denmark.
EM hsto@imm.dtu.dk
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Booch G., 2004, MDA J, V5, P2
   Cordy J.R., 2010, P 4 INT WS SOFTW CLO, V29
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Fish A, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P41, DOI 10.1109/VLHCC.2007.34
   ICSE, 2009, P IEEE 31 INT C SOFT
   Juergens E., ICSE 09, P485
   Junginger S, 2000, WIRTSCHAFTSINF, V42, P392, DOI 10.1007/BF03250755
   Kapser C., 2007, 06301
   Kelter Udo., 2005, Software Engineering, volume 64 of LNI, V64, P105
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Koschke R., 2006, DUPL RED SIM SOFTW 0
   Liu H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269
   MDA, 2003, OMG20030601
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   Mork P, 2004, PROC INT CONF DATA, P787, DOI 10.1109/ICDE.2004.1320047
   Myers B., 2011, P IEEE S VIS LANG HU
   NAGL M, 1991, LECT NOTES COMPUT SC, V532, P599, DOI 10.1007/BFb0017415
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   OMG: OMG Unified Modeling Language (OMG UML), 2009, OMG UN MOD LANG OMG
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Ren SB, 2003, LECT NOTES COMPUT SC, V2817, P294
   Roy C.K., 2007, 541 TR QUEENS U SCH
   Schrepfer M, 2009, LECT NOTES BUS INF P, V39, P161
   SCHURR A, 1990, LECT NOTES COMPUT SC, V411, P151
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Störrle H, 2007, Proceedings of the IASTED International Conference on Software Engineering, P382
   Störrle H, 2009, S VIS LANG HUM CEN C, P199, DOI 10.1109/VLHCC.2009.5295261
   STORRLE H, 2009, INT WS VISUAL LANGUA, V510, P18
   Storrle H., 2007, INT WS VIS LANG LOG, V274, P71
   Storrle H., 2011, J VIS LANG COMPUT, V22
   Tiarks R, 2009, IEEE INT WORK C SO, P67, DOI 10.1109/SCAM.2009.16
   Wasowski A., 2010, P 4 EUR C SW ARCH EC
   Wielemaker J., 2007, SWI PROLOG 5646 REFE, VUniversity of Amsterdam, Department of Social Science Informatics
NR 35
TC 34
Z9 37
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 307
EP 329
DI 10.1007/s10270-011-0217-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Reisig, W
AF Reisig, Wolfgang
TI Remarks on Egon Borger: "Approaches to model business processes: a
   critical analysis of BPMN, workflow patterns and YAWL, SOSYM 11:305-318"
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modelling; BPMN; YAWL; Petri nets; Evaluation criteria
   for tools
AB Egon Borger (SOSYM, 11, pp. 305-318, 2012) challenges the concepts of BPMN, workflow patterns and YAWL as useful contributions to the modeling of business processes. I show that he misjudges the role of BPMN, YAWL and similar techniques in the modeling of business processes. In particular he mistakes YAWL's formal basis, i.e. Petri nets. Borger furthermore suggests evaluation criteria for business process modeling tools. I argue that his criteria overemphasize some less important aspects, while ignoring some decisive ones.
C1 Humboldt Univ, Dept Comp Sci, D-10099 Berlin, Germany.
C3 Humboldt University of Berlin
RP Reisig, W (corresponding author), Humboldt Univ, Dept Comp Sci, D-10099 Berlin, Germany.
EM reisig@informatik.hu-berlin.de
CR Börger E, 2012, SOFTW SYST MODEL, V11, P305, DOI 10.1007/s10270-011-0214-z
   Petri C.A., 1977, ISF775
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   Universitat Hamburg, PETR NET WORLD
NR 4
TC 3
Z9 3
U1 1
U2 26
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 5
EP 9
DI 10.1007/s10270-012-0306-4
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800002
DA 2024-07-18
ER

PT J
AU Rose, L
   Guerra, E
   de Lara, J
   Etien, A
   Kolovos, D
   Paige, R
AF Rose, Louis
   Guerra, Esther
   de Lara, Juan
   Etien, Anne
   Kolovos, Dimitris
   Paige, Richard
TI Genericity for model management operations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model management; Genericity; Reusability; Epsilon; Eclipse Modelling
   Framework
ID TRANSFORMATION; TEMPLATES; SUPPORT; OCL
AB Models are the core assets in model-driven engineering, and are therefore subject to all kind of manipulations, such as refactorings, animations, transformations into other languages, comparisons and merging. This set of model-related activities is known as model management. Even though many languages and approaches have been proposed for model management, most of them are type-centric, specific to concrete meta-models, and hence leading to specifications with a low level of abstraction and difficult to be reused in practice. In this paper, we introduce ideas from generic programming into model management to raise the level of abstraction of the specifications of model manipulations and facilitate their reuse. In particular we adopt generic meta-model concepts as an intermediate, abstract meta-model over which model management specifications are defined. Such meta-model concepts are mapped to concrete meta-models, so that specifications can be applied to families of meta-models satisfying the concept requirements. As a proof of concept, we show the implementation of these ideas using the Eclipse Modeling Framework and the Epsilon family of languages for model management.
C1 [Rose, Louis; Kolovos, Dimitris; Paige, Richard] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, Madrid, Spain.
   [Etien, Anne] Univ Lille 1, INRIA Lille Nord Europe, Lille, France.
C3 University of York - UK; Autonomous University of Madrid; Universite de
   Lille
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, Madrid, Spain.
EM louis@cs.york.ac.uk; Esther.Guerra@uam.es; Juan.deLara@uam.es;
   Anne.Etien@lifl.fr; dkolovos@cs.york.ac.uk; paige@cs.york.ac.uk
RI Etien, Anne/AAG-4675-2020; Rose, Louis M/L-8892-2014; Kolovos,
   Dimitrios/L-9830-2014; Guerra, Esther/B-4977-2014; de Lara,
   Juan/B-5422-2014
OI Etien, Anne/0000-0003-3034-873X; Guerra, Esther/0000-0002-2818-2278; de
   Lara, Juan/0000-0001-9425-6362; Kolovos, Dimitris/0000-0002-1724-6563
FU Spanish Ministry of Science and Innovation with project METEORIC
   [TIN2008-02081]; R&D program of the Community of Madrid
   [S2009/TIC-1650]; Universidad Autonoma of Madrid [CCG10-UAM/TIC-5772];
   Spanish Ministry of Science and Innovation [JC2009-00015, PR2009-0019,
   PR2008-0185]
FX This work has been sponsored by the Spanish Ministry of Science and
   Innovation with project METEORIC (TIN2008-02081), and by the R&D program
   of the Community of Madrid with projects "e-Madrid" (S2009/TIC-1650) and
   GUIDE (co-financed with the Universidad Autonoma of Madrid,
   CCG10-UAM/TIC-5772). Parts of this work were done during the research
   stays of Esther and Juan at the University of York, with financial
   support from the Spanish Ministry of Science and Innovation (grant refs.
   JC2009-00015, PR2009-0019 and PR2008-0185). We would like to thank the
   referees for their useful and detailed comments.
CR Bernstein P.A., 2007, SIGMOD 07, P1, DOI DOI 10.1145/1247480.1247482
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Bezivin J., 2005, EWMT 05
   Bonet P., 2007, CLEI 07
   Boronat A, 2005, LECT NOTES COMPUT SC, V3748, P316
   Bottoni P, 2008, J VISUAL LANG COMPUT, V19, P429, DOI 10.1016/j.jvlc.2008.04.004
   Caron O, 2004, LECT NOTES COMPUT SC, V3273, P27
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Cuccuru A, 2007, LECT NOTES COMPUT SC, V4530, P68
   Cuccuru A, 2009, LECT NOTES COMPUT SC, V5795, P644, DOI 10.1007/978-3-642-04425-0_51
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   de Lara J., 2007, ELECT COMMUNICATIONS, V6
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   de Lara J, 2010, LECT NOTES COMPUT SC, V6394, P16
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   de Lara J, 2010, FORM ASP COMPUT, V22, P297, DOI 10.1007/s00165-009-0114-y
   Dos Reis G, 2006, ACM SIGPLAN NOTICES, V41, P295, DOI 10.1145/1111320.1111064
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Epsilon, 2010, EPSILON
   Etien A., 2010, P ACM SAC DOFTW ENG, P2239
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia R, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/949343.949317
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Hermann F, 2009, LECT NOTES COMPUT SC, V5503, P325
   Hillah L.M., 2009, Petri Net Newsletter, V76, P9
   Kensche D., 2007, Journal on Data Semantics, VVIII, P82, DOI DOI 10.1007/978-3-540-70664-9_4
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Kühne T, 2010, LECT NOTES COMPUT SC, V6394, P31
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   OMG, UML 2 3 SPEC
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stepanov A, 1995, 9511R1 HP LAB
   Stepanov Alexander, 2009, ELEMENTS PROGRAMMING
   Stroustrup B, 2009, C 0X REMOVE CONCEPTS
   Sun, JAV MET INT
NR 46
TC 10
Z9 10
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 201
EP 219
DI 10.1007/s10270-011-0203-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800013
DA 2024-07-18
ER

PT J
AU Ali, S
   Briand, LC
   Hemmati, H
AF Ali, Shaukat
   Briand, Lionel C.
   Hemmati, Hadi
TI Modeling robustness behavior using aspect-oriented modeling to support
   robustness testing of industrial systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Aspect-oriented modeling; UML state machines; Robustness; UML profile;
   Crosscutting behavior; Robustness testing
AB Model-based robustness testing requires precise and complete behavioral, robustness modeling. For example, state machines can be used to model software behavior when hardware (e.g., sensors) breaks down and be fed to a tool to automate test case generation. But robustness behavior is a crosscutting behavior and, if modeled directly, often results in large, complex state machines. These in practice tend to be error prone and difficult to read and understand. As a result, modeling robustness behavior in this way is not scalable for complex industrial systems. To overcome these problems, aspect-oriented modeling (AOM) can be employed to model robustness behavior as aspects in the form of state machines specifically designed to model robustness behavior. In this paper, we present a RobUstness Modeling Methodology (RUMM) that allows modeling robustness behavior as aspects. Our goal is to have a complete and practical methodology that covers all features of state machines and aspect concepts necessary for model-based robustness testing. At the core of RUMM is a UML profile (AspectSM) that allows modeling UML state machine aspects as UML state machines (aspect state machines). Such an approach, relying on a standard and using the target notation as the basis to model the aspects themselves, is expected to make the practical adoption of aspect modeling easier in industrial contexts. We have used AspectSM to model the crosscutting robustness behavior of a videoconferencing system and discuss the benefits of doing so in terms of reduced modeling effort and improved readability.
C1 [Ali, Shaukat; Briand, Lionel C.; Hemmati, Hadi] Simula Res Lab, N-1325 Lysaker, Norway.
   [Ali, Shaukat; Briand, Lionel C.; Hemmati, Hadi] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Ali, S (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM shaukat@simula.no; briand@simula.no; hemmati@simula.no
RI Ali, Shaukat/H-4121-2013
OI Ali, Shaukat/0000-0002-9979-3519
CR Aldawud O., 2003, P 3 INT WORKSH ASP O
   Ali S., 2010, TECHNICAL REPORT
   Ali S., 2010, 201011 SIM RES LAB
   Ali S., 2010, 201001 SIM RES LAB
   Ali S., 2011, P 11 INT C QUAL SOFT
   [Anonymous], 2009, 10442009 IEEE
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2003, Electron. Notes Theor. Comput. Sci.
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2010, KERM BREATH LIF YOUR
   [Anonymous], MODEL BASED SECURITY
   [Anonymous], 1999, 610121990 IEEE
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Bruel J.-M., 2003, P AOSD MOD UML WORKS
   Bruel J. M., 2005, P 2 WORKSH MOD NONF
   Bruning S, 2007, P 10 IEEE HIGH ASS S
   Chan K. S., 2009, FAULT TAXONOMY WEB S
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   COTTENIER T, 2007, P 10 INT WORKSH ASP
   Cottenier T., 2007, P ASP OR SOFTW DEV A
   Entwisle S., 2006, P 10 IEEE INT ENT DI
   EVERMANN J, 2007, P 10 INT WORKSH ASP
   Filman R., 2004, ASPECT ORIENTED SOFT
   France R., 2004, IEEE SOFTW, V151
   Hayes J. H., 2003, P 14 INT S SOFTW REL
   HO W.-M., 2002, P 1 INT C ASP OR SOF
   IBM OCL Parser IBM, 2010, IBM OCL PARS
   Jiang M., 2007, P MOD RUN TIM CONJ M
   Jingjun Z., 2009, MODELING ASPECT ORIE
   Junior J. U., 2009, P 13 WORKSH ASP OR M
   JURJENS J, 2002, P 5 INT C UN MOD LAN
   Kaufmann M., 2008, SYSMOD THE SYSTEMS M, P83
   Kienzle J., 2009, P 8 ACM INT C ASP OR
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Lagarde F., 2008, LEVERAGING PATTERNS
   Lei B, 2010, ELECTRON NOTES THEOR, V260, P173, DOI 10.1016/j.entcs.2009.12.037
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Pazzi L., 1999, P WORKSH OBJ OR TECH
   Pender T., 2003, UML BIBLE
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Petriu D., 2010, FLEXIBLE MODEL ELEME
   Pinter G., 2005, MODELING ANAL EXCEPT
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shafique M., 2010, SCE1004 CARL U DEP S
   Software Assurance Standard, 2005, NASASTD87398
   Standard for Software Quality Characteristics, 2003, ISO91263
   Stein D., 2002, P AOSD UML WORKSH AO
   STEIN D, 2002, P 1 INT C ASP OR SOF
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   TESSIER F, 2004, P 5 ASP OR MOD WORKS
   Utting M., 2007, PRACTICAL MODEL BASE
   Whittle J., 2008, MATA TOOL ASPECT ORI
   Whittle J., 2007, EXPRESSIVE ASPECT CO
   Xu D., 2005, P 17 INT C SOFTW ENG
   XU DX, 2006, P 5 INT C ASP OR SOF
   XU W, 2005, P 1 WORKSH TEST ASP
   Yedduladoddi R., 2009, ASPECT ORIENTED SOFT
   Zhang G., 2006, P 2 AS WORKSH ASP OR
   Zhang G., 2007, ENHANCING UML STATE
   Zhang G., 2009, P 14 WORKSH ASP OR M
   Zhang J, 2007, J OBJECT TECHNOL, V6, P89, DOI 10.5381/jot.2007.6.7.a4
NR 62
TC 38
Z9 39
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 633
EP 670
DI 10.1007/s10270-011-0206-z
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500014
DA 2024-07-18
ER

PT J
AU Clark, T
   Muller, PA
AF Clark, Tony
   Muller, Pierre-Alain
TI Exploiting model driven technology: a tale of two startups
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Startup; Tool company; Model driven development
ID LANGUAGES
AB This article describes the experiences of two independent start-up companies that were created in the white-heat of the early days of model-based engineering. Each company aimed to revolutionise software development by raising the level of abstraction through modelling. The article describes the context, technical innovations, business experiences, demise and lessons learned by each company.
C1 [Clark, Tony] Middlesex Univ, Burroughs, London NW4 4BT, England.
   [Muller, Pierre-Alain] Univ Haute Alsace, F-68093 Mulhouse, France.
C3 Middlesex University; Universites de Strasbourg Etablissements Associes;
   Universite de Haute-Alsace (UHA)
RP Clark, T (corresponding author), Middlesex Univ, Burroughs, London NW4 4BT, England.
EM t.n.clark@mdx.ac.uk; pierre-alain.muller@uha.fr
CR Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], MOD TRANSF PRACT WOR
   Bobrow D.G., 1988, ACM SIGPLAN NOTICES, V23, P1
   Clark T., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P17
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clark T., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P305
   Clark T., 2002, FUNDAMENTAL APPROACH, P242
   Clark T., 2000, FEASIBILITY STUDY RE
   Clark T., 2012, FORMAL PRACTICAL ASP, DOI [10.4018/978-1-4666-2092-6, DOI 10.4018/978-1-4666-2092-6]
   Clark T., 2002, PROGRAMMERS GUIDE MM
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Cointe P, 1987, ACM SIGPLAN NOTICES, V22, P156
   Fowler M, 2003, LECT NOTES COMPUT SC, V2863, P325
   Georgalas N., 2005, EURESCOM SUMM 2005 U
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Helsen S, 2008, IEEE SOFTWARE, V25, P18, DOI 10.1109/MS.2008.138
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Langlois B., 2007, OOPSLA 7 WORKSH DOM
   Mann RJ, 2007, RES POLICY, V36, P193, DOI 10.1016/j.respol.2006.10.002
   MARCOS E., 2003, SOFTW SYST MODEL, V2, P59, DOI DOI 10.1007/S10270-002-0001-Y
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Midler Christophe, 2008, International Journal of Project Management, V26, P479, DOI 10.1016/j.ijproman.2008.05.003
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Muller PA, 2003, LECT NOTES COMPUT SC, V2863, P220
   Muller Pierre-Alain., 2005, Software and Systems Modeling, V4, P424
   O'Connor GC, 2001, CALIF MANAGE REV, V43, P95, DOI 10.2307/41166077
   Soley RM, 2003, LECT NOTES COMPUT SC, V2817, P2
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Vohora A, 2004, RES POLICY, V33, P147, DOI 10.1016/S0048-7333(03)00107-0
NR 32
TC 16
Z9 20
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 481
EP 493
DI 10.1007/s10270-012-0260-1
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500004
DA 2024-07-18
ER

PT J
AU Gervais, F
   Frappier, M
   Laleau, R
AF Gervais, Frederic
   Frappier, Marc
   Laleau, Regine
TI Generating relational database transactions from eb <SUP>3</SUP>
   attribute definitions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Information systems; Attributes; Pattern matching; SELECT statements;
   Transactions
ID DIAGRAMS
AB eb (3) is a trace-based formal language created for the specification of information systems. In eb (3), each entity and association attribute is independently defined by a recursive function on the valid traces of external events. This paper describes an algorithm that generates, for each external event, a transaction that updates the value of affected attributes in their relational database representation. The benefits are twofold: eb (3) attribute specifications are automatically translated into executable programs, eliminating system design and implementation steps; the construction of information systems is streamlined, because eb (3) specifications are simpler and shorter to write than corresponding traditional specifications, design and implementations. In particular, the paper shows that simple eb (3) constructs can replace complex SQL queries which are typically difficult to write.
C1 [Gervais, Frederic] IUT Senart Fontainebleau, Dept Informat, F-77300 Fontainebleau, France.
   [Gervais, Frederic; Laleau, Regine] Univ Paris Est, LACL, Creteil, France.
   [Frappier, Marc] Univ Sherbrooke, GRIL, Sherbrooke, PQ J1K 2R1, Canada.
C3 Universite Paris-Est-Creteil-Val-de-Marne (UPEC); Universite
   Paris-Est-Creteil-Val-de-Marne (UPEC); University of Sherbrooke
RP Gervais, F (corresponding author), IUT Senart Fontainebleau, Dept Informat, Route Forestiere Hurtault, F-77300 Fontainebleau, France.
EM frederic.gervais@univ-paris12.fr; marc.frappier@usherbrooke.ca;
   laleau@univ-paris12.fr
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936; Gervais,
   Frederic/0000-0003-3672-402X
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   [Anonymous], 1997, The Theory and Practice of Concurrency
   BARROS R, 1994, FME 94, P703
   BATANADO P, 2005, THESIS U SHERBROOKE
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Cousineau G., 1998, FUNCTIONAL APPROACH
   Davies J., 1996, Using Z: Specification, Refinement and Proof
   Demuth B, 1999, LECT NOTES COMPUT SC, V1723, P598
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   EDMOND D, 1995, LNCS, V967, P25
   Elmasri R., 2004, FUNDAMENTALS DATABAS, V3rd
   EVANS N, 2004, SEFM 2004, P416
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Fraikin B., 2005, Software and Systems Modeling, V4, P236
   FRAIKIN B, 2002, 15 INT C SOFTW SYST
   FRAIKIN B, 2006, EFFICIENT EXEC UNPUB
   FRAPPIER M, 2002, AAAI SPRING S, P17
   FRAPPIER Marc., 2003, Software and Systems Modeling, V2, P134, DOI DOI 10.1007/S10270-003-0024-Z
   GARAVEL H, 1990, 10 INT S PROT SPEC T, P379
   Gervais F, 2005, LECT NOTES COMPUT SC, V3771, P207
   Gervais F, 2005, SEFM 2005: Third IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P117, DOI 10.1109/SEFM.2005.23
   GERVAIS F, 2004, THESIS U SHERBROOKE
   GERVAIS F, 2004, 683 CEDRIC
   GERVAIS F, 2005, 700 CEDRIC
   Gervais F, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P44
   GINOUX B, 1998, IWSSD 98, P106
   Hoare CAR., 1985, Communicating Sequential Processes
   HOHENSTEIN U, 1992, INFORM SYST, V17, P209, DOI 10.1016/0306-4379(92)90014-E
   HOHENSTEIN U, 1989, 8 INT C ENT REL APPR, P303
   Jackson Michael., 1983, SYSTEM DEV
   JAJODIA S, 1984, J SYST SOFTWARE, V4, P123, DOI 10.1016/0164-1212(84)90003-7
   LALEAU R, 2000, ASE 00, P269
   LEUCKER M, 1999, RSP 1999, P60
   LYNGBAEK P, 1987, ACM SIGMOD
   MAMMAR A, 2002, THESIS CNAM
   Meyer E, 1999, LECT NOTES COMPUT SC, V1708, P875
   Milner R., 1989, Communication and concurrency
   NGUYEN HP, 1998, THESIS CNAM
   Object Management Group (OMG), OBJ CONSTR LANG OCL
   Prowell S.J., 1999, SEI S SOFTW
   QIAN XL, 1993, ACM T DATABASE SYST, V18, P626, DOI 10.1145/169725.169716
   SCHEWE KD, 1991, LECT NOTES COMPUT SC, V551, P496
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   STEINBERG D, 1987, ER 1987
   SUBLETA K, 1986, ER 1986
   TEOREY TJ, 1986, COMPUT SURV, V18, P197, DOI 10.1145/7474.7475
   TERRILLON JG, 2005, THESIS U SHERBROOKE
   van Lamsweerde Axel., 2000, ICSE, P147
NR 48
TC 1
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 423
EP 445
DI 10.1007/s10270-008-0104-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 466UE
UT WOS:000267687600008
DA 2024-07-18
ER

PT J
AU Boronat, A
AF Boronat, Artur
TI EMF-Syncer: scalable maintenance of view models over heterogeneous
   data-centric software systems at run time
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Models@runtime; Roundtrip synchronization;
   View update problem
ID SYNCHRONIZATION; FRAMEWORK
AB With the increasing presence of cyber-physical systems (CPSs), like autonomous vehicle systems and digital twins, the future of software engineering is predicated on the importance of designing and developing data-centric software systems that can adapt intelligently at run time. CPSs consist of complex heterogeneous software components. Model-driven engineering advocates using software models to tame such complexity, capturing the relevant design concerns of such systems at different levels of abstraction. Yet most of the existing CPSs are engineered without considering MDE practices and tools, facing fundamental challenges when working with data: monitoring the program data at run time, syncing updates between program and model, dealing with heterogeneous data sources, and representing such observed data at run time to facilitate automated analysis. In this work, we introduce the notion of view models to explicitly represent parts of the domain knowledge implicitly embedded in the source code of a software system. This notion is equipped with a scalable bidirectional syncing mechanism that extracts view model instances from program snapshots at run time. The syncing mechanism is proposed from a conceptual point of view, independently of specific implementations and supports incremental view model update and view model maintenance. We show how this syncing mechanism is flexible enough to facilitate the non-intrusive adoption of MDE technology over existing MDE-agnostic heterogeneous data-centric systems. We study the run-time cost implied by the EMF-Syncer , the tool implementing this syncing mechanism for Java applications and view models atop the eclipse modeling framework (EMF) when executing data analytic and transformation tasks over large volumes of data in the presence of data updates at run time. An empirical evaluation of the EMF-Syncer has been conducted with an industry-targeted benchmark for decision support systems, analyzing performance and scalability. The novel syncing mechanism enables new opportunities to adopt MDE technology in heterogeneous data-centric systems.
C1 [Boronat, Artur] Univ Leicester, Sch Comp & Math Sci, Leicester, England.
C3 University of Leicester
RP Boronat, A (corresponding author), Univ Leicester, Sch Comp & Math Sci, Leicester, England.
EM artur.boronat@leicester.ac.uk
CR Amrani M, 2021, SOFTW SYST MODEL, V20, P611, DOI 10.1007/s10270-021-00876-z
   [Anonymous], 2003, DOMAIN DRIVEN DESIGN
   [Anonymous], 2009, Database Systems: The Complete Book
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Boronat A., 2020, JOINT P 13 14 TOOL T
   Boronat A., 2019, P 34 IEEE ACM INT C
   Boronat A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P78, DOI 10.1145/3239372.3239386
   Boronat A, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P194, DOI 10.1145/3136014.3136026
   Bruhn J, 2008, I C COMP SYST APPLIC, P755, DOI 10.1109/AICCSA.2008.4493612
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Bruneliere H, 2020, SOFTW SYST MODEL, V19, P827, DOI 10.1007/s10270-020-00794-6
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Daniel G, 2017, SCI COMPUT PROGRAM, V149, P9, DOI 10.1016/j.scico.2017.08.002
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Eclipse Foundation, 2022, CDO MOD REP
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Giese Holger, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P137, DOI 10.1007/978-3-642-30982-3_5
   Giese H., 2008, P 3 INT WORKSH GRAPH, P1, DOI 10.1145/1402947.1402949
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Goldschmidt T., 2012, MODELLIERUNG 2012, VP-201, P59
   Gray J, 2022, SOFTW SYST MODEL, V21, P839, DOI 10.1007/s10270-022-01001-4
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He X, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P162, DOI 10.1145/2976767.2976806
   Hui Song, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P303, DOI 10.1145/1810295.1810362
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Seybold D, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P46, DOI 10.1145/2997364.2997380
   Song H., 2010, MODELS RUN TIME, V641, P25
   Song H, 2011, LECT NOTES COMPUT SC, V6981, P273, DOI 10.1007/978-3-642-24485-8_20
   Song H, 2011, J SYST SOFTWARE, V84, P711, DOI 10.1016/j.jss.2010.12.009
   Song H, 2010, LECT NOTES COMPUT SC, V6002, P140
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Team T.E., EPSILON
   TPC, 2019, DEC SUPP BENCHM VERS
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Vogel T, 2010, LECT NOTES COMPUT SC, V6002, P124
   Zolotas A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P237, DOI 10.1109/MODELS.2017.18
NR 40
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1949
EP 1968
DI 10.1007/s10270-023-01111-7
EA JUN 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001003570800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Rivadeh, M
   Mirian-Hosseinabadi, SH
AF Rivadeh, Mehran
   Mirian-Hosseinabadi, Seyed-Hassan
TI Formal translation of YAWL workflow models to the Alloy formal
   specifications: a testing application
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Integration testing; Alloy; Formal methods; YAWL; Workflow models;
   Microservice architecture
ID BPMN
AB Within microservice architecture-based systems, some microservices are integrated to build the software. The integration of these services may be defined based on a workflow model. There are also a variety of different languages available for defining these workflow models. BPMN and YAWL are two such options. It is important that testers test the integration of these microservices. This paper proposes the formal method as the solution for integration testing. This method translates the workflow model to the Alloy. The algorithm has suggested a translation of workflow models to formal specifications. This specification takes into consideration both structural and behavioral aspects. The first perspective is about general structures, while the second is about the behavior of the objects in a specific model. We have proved the correctness of the suggested specifications. For this purpose, the paper has shown that formal definitions are sound and are complete with nine theorems for these properties. The translation from YAWL to Alloy is defined based on their BNF grammar. The generated model is an appropriate source for different purposes containing software testing. The suggested method for software testing is model-driven testing. Logical predicates define the structure of Alloy models. This method uses these logical predicates for generating tests. The test method has used RACC coverage as an example criterion. Alloy Analyzer tests the model by generating test predicates.
C1 [Rivadeh, Mehran; Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
EM mrivadeh@ce.sharif.edu; hmirian@shari.fedu
OI Rivadeh, Mehran/0000-0003-1795-0996
CR Achour S, 2016, INT CONF MULTIMED, P605, DOI 10.1109/ICMCS.2016.7905597
   Aichernig Bernhard K., 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P228, DOI 10.1007/978-3-642-17071-3_12
   Ammann Paul, 2008, Introduction to software testing, V1st
   Bazzana G., 2016, MODEL BASED TESTING
   Brader Larry, 2013, Testing for Continuous Delivery with Visual Studio 2012
   Bueno AS., 2018, TESTING JAVA MICROSE
   Camunda Group: Zeebe, 2018, US
   Castillos K.C., 2013, IFM 2013, V7940, P316, DOI [10.1007/978-3-642-38613-822, DOI 10.1007/978-3-642-38613-822]
   Castillos KC., 2011, STTT, V13, P431, DOI [10.1007/s10009-011-0189-7, DOI 10.1007/S10009-011-0189-7]
   Clemson T., 2014, TESTING STRATEGIES M
   Decker G, 2008, LECT NOTES COMPUT SC, V5240, P386, DOI 10.1007/978-3-540-85758-7_30
   Falcone Y, 2008, ELECTRON NOTES THEOR, V220, P29, DOI 10.1016/j.entcs.2008.11.004
   Fowler Martin., 2014, Microservices. Martinfowler.Com
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Meinke K, 2015, LECT NOTES COMPUT SC, V9509, P3, DOI 10.1007/978-3-662-49224-6_1
   Mendling J., 2006, INT C BUSINESS PROCE, P451
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Object Management Group: BPMN. OMG, US
   Ouyang C, 2008, INT J WEB SERV RES, V5, P42, DOI 10.4018/jwsr.2008010103
   Lamancha BP, 2013, COMM COM INF SC, V275, P155
   Peuster M, 2019, ICT EXPRESS, V5, P150, DOI 10.1016/j.icte.2019.02.001
   Prandi D, 2008, LECT NOTES COMPUT SC, V5052, P249, DOI 10.1007/978-3-540-68265-3_16
   Reeve M.P., 2019, AUTOMATED INTEGRATIO
   Russell N., 2006, BPM Center Report, P6
   Savchenko DI, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P235, DOI 10.1109/MIPRO.2015.7160271
   Ter Hofstede A.H.M., 2009, Modern Business Process Automation: YAWL and Its Support Environment
   van der Aalst WMP, 2009, LECT NOTES COMPUT SC, V5460, P1
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Wynn MT, 2009, BUS PROCESS MANAG J, V15, P74, DOI 10.1108/14637150910931479
   Yamasathien S, 2014, INT CONF DIGIT INFO, P211, DOI 10.1109/DICTAP.2014.6821684
   Ye JH, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL II, PROCEEDINGS, P70, DOI 10.1109/IITA.2008.68
   Yuan Eric, 2019, 2019 IEEE/ACM 2nd International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P26, DOI 10.1109/ECASE.2019.00013
   Zhao C, 2007, J VISUAL LANG COMPUT, V18, P378, DOI 10.1016/j.jvlc.2007.07.004
NR 33
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 941
EP 968
DI 10.1007/s10270-022-01043-8
EA NOV 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000877751700002
DA 2024-07-18
ER

PT J
AU Boronat, A
AF Boronat, Artur
TI Safe reuse in modelling language engineering using model subtyping with
   OCL constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model subtyping; DSL engineering; Software specification; Stepwise
   refinement
ID TRANSFORMATION; SEMANTICS
AB Low-code software development promises rapid delivery of software cloud applications by employing domain-specific languages (DSLs), requiring minimal traditional coding. Model-driven engineering (MDE) provides tools, modelling notations and practices suited for engineering such DSLs, both from a syntactic and semantic perspective. However, low-code software development is heavily reliant on software reuse. It is imperative to provide safe mechanisms that guarantee valid semantic reuse of structural components and their behaviour, most often in a stepwise manner. This article presents a semantic reuse technique based on model subtyping over metamodels to manage correct model-driven engineering of DSLs. Model subtyping is generalized to structural semantics by considering OCL constraints. Moreover, model subtyping is generalized to behavioural semantics by considering specifications of model transformation operations, which may encode operational or translational semantics. Model subtyping facilitates structural and behavioural refinement. It has been implemented atop a bounded model checker, realizing a semi-decidable procedure for verifying that DSL elements are safely reused. The algorithm finds semantic witnesses of inconsistencies when refinement principles are not satisfied, fostering a correct stepwise engineering of DSLs. Moreover, the algorithm produces an extension metamodel that permits the as-is reuse of implementations of model transformation operation specifications. Finally, the versatility of the model subtyping technique is illustrated with common use cases extracted from the research literature.
C1 [Boronat, Artur] Univ Leicester, Sch Comp & Math Sci, Leicester, Leics, England.
C3 University of Leicester
RP Boronat, A (corresponding author), Univ Leicester, Sch Comp & Math Sci, Leicester, Leics, England.
EM artur.boronat@leicester.ac.uk
CR [Anonymous], 2007, THESIS U POLITECNICA
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2014, P 2 WORKSH VIEW BAS
   [Anonymous], 1999, ENTCS
   [Anonymous], 1996, A Theory of Objects
   [Anonymous], 2010, SYSTEMS SOFTWARE ENG, P1, DOI DOI 10.1109/IEEESTD.2010.5733835
   [Anonymous], 2011, ECEASST
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Boronat A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P874, DOI 10.1109/ASE.2019.00086
   Boronat A, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P194, DOI 10.1145/3136014.3136026
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Boronat A, 2009, LECT NOTES BUS INF P, V33, P96
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Bruel JM, 2020, SOFTW SYST MODEL, V19, P441, DOI 10.1007/s10270-019-00762-9
   Buttner Fabian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P158, DOI 10.1007/978-3-642-38883-5_15
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   CARDELLI L, 1988, INFORM COMPUT, V76, P138, DOI 10.1016/0890-5401(88)90007-7
   Chechik M, 2016, LECT NOTES COMPUT SC, V9681, P28, DOI 10.1007/978-3-319-33693-0_3
   Clark T., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P17
   Clark T, 1999, LECT NOTES COMPUT SC, V1723, P503
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   de Lara J, 2017, LECT NOTES COMPUT SC, V10202, P264, DOI 10.1007/978-3-662-54494-5_15
   de Lara J, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P156, DOI 10.1109/MODELS.2015.7338246
   Degueule T, 2017, COMPUT LANG SYST STR, V49, P176, DOI 10.1016/j.cl.2016.09.001
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fowler M., 2010, Domain-specific languages
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Heckel Reiko, 1995, ELECT NOTES THEOR CO, V2, P118, DOI [10.1016/S1571-0661(05)80188-4, DOI 10.1016/S1571-0661(05)80188-4]
   Hilken F, 2014, LECT NOTES COMPUT SC, V8568, P170
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kuhlmann M., 2012, P 15 INT C MODEL DRI, V7590, P415, DOI DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Leroy D, 2020, SOFTW SYST MODEL, V19, P1015, DOI 10.1007/s10270-020-00798-2
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Poernomo I., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1845, DOI 10.1145/1141277.1141710
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Richters Mark, 2002, Ph. D. Dissertation
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Cuadrado JS, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a10
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Vignaga A, 2013, SOFTW SYST MODEL, V12, P105, DOI 10.1007/s10270-011-0191-2
NR 53
TC 0
Z9 0
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 797
EP 818
DI 10.1007/s10270-022-01028-7
EA SEP 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000850009700001
OA hybrid
DA 2024-07-18
ER

PT J
AU David, I
   Latifaj, M
   Pietron, J
   Zhang, WX
   Ciccozzi, F
   Malavolta, I
   Raschke, A
   Steghöfer, JP
   Hebig, R
AF David, Istvan
   Latifaj, Malvina
   Pietron, Jakob
   Zhang, Weixing
   Ciccozzi, Federico
   Malavolta, Ivano
   Raschke, Alexander
   Steghoefer, Jan-Philipp
   Hebig, Regina
TI Blended modeling in commercial and open-source model-driven software
   engineering tools: A systematic study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Inconsistency tolerance; Multi-view modeling;
   Modeling tools; Survey
ID GUIDELINES; COMPUTER; REVIEWS
AB Blended modeling aims to improve the user experience of modeling activities by prioritizing the seamless interaction with models through multiple notations over the consistency of the models. Inconsistency tolerance, thus, becomes an important aspect in such settings. To understand the potential of current commercial and open-source modeling tools to support blended modeling, we have designed and carried out a systematic study. We identify challenges and opportunities in the tooling aspect of blended modeling. Specifically, we investigate the user-facing and implementation-related characteristics of existing modeling tools that already support multiple types of notations and map their support for other blended aspects, such as inconsistency tolerance, and elevated user experience. For the sake of completeness, we have conducted a multivocal study, encompassing an academic review, and grey literature review. We have reviewed nearly 5000 academic papers and nearly 1500 entries of grey literature. We have identified 133 candidate tools, and eventually selected 26 of them to represent the current spectrum of modeling tools.
C1 [David, Istvan] Univ Montreal, DIRO, Montreal, PQ, Canada.
   [Latifaj, Malvina; Ciccozzi, Federico] Malardalen Univ, Vasteras, Sweden.
   [Pietron, Jakob; Raschke, Alexander] Ulm Univ, Inst Software Engn & Programming Languages, Ulm, Germany.
   [Zhang, Weixing; Steghoefer, Jan-Philipp; Hebig, Regina] Chalmers Univ Technol, Interact Design & Software Engn Div, Gothenburg, Sweden.
   [Zhang, Weixing; Steghoefer, Jan-Philipp; Hebig, Regina] Univ Gothenburg, Gothenburg, Sweden.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Comp Sci Dept, Amsterdam, Netherlands.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Network Inst, Amsterdam, Netherlands.
C3 Universite de Montreal; Malardalen University; Ulm University; Chalmers
   University of Technology; University of Gothenburg; Vrije Universiteit
   Amsterdam; Vrije Universiteit Amsterdam
RP David, I (corresponding author), Univ Montreal, DIRO, Montreal, PQ, Canada.
EM istvan.david@umontreal.ca
RI David, Istvan/KEI-9054-2024; Steghöfer, Jan-Philipp/AAM-2555-2020;
   Zhang, Weixing/HCI-7535-2022; Hebig, Regina/B-5284-2015; Malavolta,
   Ivano/E-9018-2017
OI Steghöfer, Jan-Philipp/0000-0003-1694-0972; Zhang,
   Weixing/0000-0003-2890-6034; Hebig, Regina/0000-0002-1459-2081;
   ciccozzi, federico/0000-0002-0401-1036; Raschke,
   Alexander/0000-0002-6088-8393; David, Istvan/0000-0002-4870-8433;
   Latifaj, Malvina/0000-0002-2754-9568; Malavolta,
   Ivano/0000-0001-5773-8346; Pietron, Jakob/0000-0001-8308-6636
FU Rijksdienst voor Ondernemend Nederland (RVO) [18006]
FX This research was partially funded by the Rijksdienst voor Ondernemend
   Nederland (RVO) through the ITEA3 BUMBLE project (18006).
CR Addazi L, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110912
   Adve SV, 1996, COMPUTER, V29, P66, DOI 10.1109/2.546611
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2009, The handbook of research synthesis and meta-analysis
   [Anonymous], 2018, THESIS U ANTWERP BEL
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Balegas Valter, 2015, Proceedings of the Tenth European Conference on Computer Systems, DOI [10.1145/2741948.2741972, DOI 10.1145/2741948.2741972]
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Barisic A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P342, DOI 10.1109/QUATIC.2012.63
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Berger T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/2950290.2950315
   Broy M., 2012, CONQUERING COMPLEXIT, P309, DOI [10.1007/978-1-4471-2297-5_14, DOI 10.1007/978-1-4471-2297-5_14]
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Carreira P., 2020, FDN MULTIPARADIGM MO, DOI [10.1007/978-3-030-43946-0, DOI 10.1007/978-3-030-43946-0]
   Charfi A, 2009, LECT NOTES COMPUT SC, V5562, P237, DOI 10.1007/978-3-642-02674-4_17
   Cicchetti A, 2019, SOFTW SYST MODEL, V18, P3207, DOI 10.1007/s10270-018-00713-w
   Ciccozzi F, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P425, DOI 10.1109/MODELS-C.2019.00068
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Corley J., 2016, MODERN SOFTWARE ENG, P120, DOI DOI 10.4018/978-1-4666-9916-8.CH007
   David I., 2019, THESIS U ANTWERP BEL
   David I., 2016, P 1 INT WORKSHOP COL, P35
   David I., 2018, 16 INT IND SIMULATIO, P54
   David I, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P273, DOI 10.1109/MODELS50736.2021.00035
   Dennis A.R., 2014, AIS Transactions on Replication Research, V1, P1, DOI DOI 10.17705/1ATRR.00001
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   EASTERBROOK S, 1994, CONCURRENT ENG-RES A, V2, P209, DOI 10.1177/1063293X9400200307
   Engelen L, 2010, ELECTRON NOTES THEOR, V253, P105, DOI 10.1016/j.entcs.2010.08.035
   Engels G., 2001, Software Engineering Notes, V26, P186, DOI 10.1145/503271.503235
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Finkelstein A., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P1
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Franzosi Roberto., 2010, QUANTITATIVE NARRATI
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Gausemeier J, 2009, ICED 09 - THE 17TH INTERNATIONAL CONFERENCE ON ENGINEERING DESIGN, VOL 6: DESIGN METHODS AND TOOLS, PT 2, P1
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Granada D, 2017, ICSOFT: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P330, DOI 10.5220/0006430503300337
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Gu ZH, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P78
   HAVILAND MG, 1990, STAT MED, V9, P363, DOI 10.1002/sim.4780090403
   Huning L, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P233, DOI 10.5220/0010575802330244
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Kelly S, 2018, LECT NOTES COMPUT SC, V10748, P20, DOI 10.1007/978-3-319-74730-9_3
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Klare H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110815
   Kolovos D.S., 2013, P WORKSHOP SCALABILI, P2
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   Lazar C.L., 2011, STUDIA U BABES BOLYA, V56
   Maro S., 2015, P 2015 ACM SIGPLAN I, P1, DOI [10.1145/2814251.2814253, DOI 10.1145/2814251.2814253]
   Maroti Miklos, 2014, 8 MULT MOD WORKSH
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Merkle Bernhard, 2010, COMPANION 25 ANN ACM, P139, DOI DOI 10.1145/1869542
   Michaux J., 2011, P 2011 ACM S APPL CO, P1470, DOI DOI 10.1145/1982185.1982500
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Negm E, 2019, INT J ADV COMPUT SC, V10, P624
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   Persson Magnus, 2013, 2013 Proceedings of the International Conference on Embedded Software (EMSOFT), DOI 10.1109/EMSOFT.2013.6658588
   Petersen K., 2018, BCS WORKSHOPS COMPUT
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pirttijarvi M, 2008, GRABLOX GRAVITY INTE
   Ráth I, 2010, SOFTW SYST MODEL, V9, P453, DOI 10.1007/s10270-009-0122-7
   Reineke J, 2019, SOFTW SYST MODEL, V18, P1577, DOI 10.1007/s10270-017-0638-1
   Ries B, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P103, DOI 10.1145/3276604.3276614
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Scheidgen M, 2008, LECT NOTES COMPUT SC, V5095, P153, DOI 10.1007/978-3-540-69100-6_11
   Schulze M., 2012, P 16 INT SOFTWARE PR, V1, P207
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   Simonyi C., 1995, MSRTR9552
   Spanoudakis G., 2001, HDB SOFTWARE ENG KNO, V1, P329
   Stevens P, 2020, SOFTW SYST MODEL, V19, P39, DOI 10.1007/s10270-019-00736-x
   Syriani E, 2021, MODELLING-BASEL, V2, P609, DOI 10.3390/modelling2040032
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Van Mierlo S., 2016, PROC WORKSHOP ENG IN, V2, P1
   van Rest Oskar, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P92, DOI 10.1007/978-3-642-38883-5_11
   Vangheluwe H., 2002, AI, P9
   Vanherpen K, 2016, 2016 1ST INTERNATIONAL WORKSHOP ON CYBER-PHYSICAL PRODUCTION SYSTEMS (CPPS)
   VanMierlo S., 2018, P MODEL DRIVEN APPRO
   Voelter M, 2014, LECT NOTES COMPUT SC, V8706, P41, DOI 10.1007/978-3-319-11245-9_3
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Volter M, 2011, INT SUMMER SCH GENER, V7680, P383
   Wixom BH, 2005, INFORM SYST RES, V16, P85, DOI 10.1287/isre.1050.0042
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P370, DOI 10.1109/QRS-C.2017.68
   Zaheri M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P401, DOI 10.1109/MODELS-C53483.2021.00063
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 92
TC 12
Z9 12
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 415
EP 447
DI 10.1007/s10270-022-01010-3
EA JUN 2022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000814025100001
DA 2024-07-18
ER

PT J
AU Tuma, K
   Peldszus, S
   Strüber, D
   Scandariato, R
   Jürjens, J
AF Tuma, Katja
   Peldszus, Sven
   Struber, Daniel
   Scandariato, Riccardo
   Juerjens, Jan
TI Checking security compliance between models and code
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security-by-design; Security compliance; Data flow diagram (DFD); Static
   program analysis
ID THREAT ANALYSIS; CONFORMANCE
AB It is challenging to verify that the planned security mechanisms are actually implemented in the software. In the context of model-based development, the implemented security mechanisms must capture all intended security properties that were considered in the design models. Assuring this compliance manually is labor intensive and can be error-prone. This work introduces the first semi-automatic technique for secure data flow compliance checks between design models and code. We develop heuristic-based automated mappings between a design-level model (SecDFD, provided by humans) and a code-level representation (Program Model, automatically extracted from the implementation) in order to guide users in discovering compliance violations, and hence, potential security flaws in the code. These mappings enable an automated, and project-specific static analysis of the implementation with respect to the desired security properties of the design model. We developed two types of security compliance checks and evaluated the entire approach on open source Java projects.
C1 [Tuma, Katja] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Peldszus, Sven] Ruhr Univ Bochum, Bochum, Germany.
   [Struber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Struber, Daniel] Chalmers Gothenburg Univ, Gothenburg, Sweden.
   [Scandariato, Riccardo] Hamburg Univ Technol, Hamburg, Germany.
   [Juerjens, Jan] Univ Koblenz Landau, Mainz, Germany.
   [Juerjens, Jan] Fraunhofer Inst Software & Syst Engn ISST, Dortmund, Germany.
C3 Vrije Universiteit Amsterdam; Ruhr University Bochum; Radboud University
   Nijmegen; Hamburg University of Technology; University of Koblenz &
   Landau; Fraunhofer Gesellschaft
RP Tuma, K (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM k.tuma@vu.nl; sven.peldszus@rub.de; d.strueber@cs.ru.nl;
   riccardo.scandariato@tuhh.de; juerjens@uni-koblenz.de
RI Peldszus, Sven/HGB-6952-2022; Tuma, Katja/JXW-6562-2024
OI Peldszus, Sven/0000-0002-2604-0487; Tuma, Katja/0000-0001-7189-2817
FU Deutscher Akademischer Austauschdienst (DAAD); H2020-projects AssureMOSS
   [952647]; European Union's Horizon 2020 research and innovation
   programme; BMWi-project IIP Ecosphere
FX The work presented in this article is part of the Ph.D. theses of Katja
   Tuma [65] and Sven Peldszus [47]. This research was partially supported
   by Deutscher Akademischer Austauschdienst (DAAD), the H2020-projects
   AssureMOSS (grant agreement No 952647), TRUSTS and Qu4lity that received
   funding from the European Union's Horizon 2020 research and innovation
   programme, and the BMWi-project IIP Ecosphere. This paper reflects only
   the author's view and the Commission is not responsible for any use that
   may be made of the information contained therein.
CR Abe T, 2013, ASIA PAC SOFWR ENG, P58, DOI 10.1109/APSEC.2013.19
   ABIANTOUN M, 2007, P 22 IEEE ACM INT C, P393, DOI [DOI 10.1145/1321631.1321692, 10.1145/1321631.1321692]
   [Anonymous], 2008, Journal of Computing Sciences in Colleges
   [Anonymous], 2005, Secure Systems Development with UML
   Arzt S., 2013, Tech. Rep. TUDCS-2013-0114
   Arzt S., 2017, THESIS TU DARMSTADT
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Axway Software BizAgi Ltd Bruce Silver Associates IDS Scheer International Business Machinesand MEGA International Model Driven Solutions Object Management Group Oracle SAP AG Software AG Inc TIBCO Unisys, 2014, BUSINESS PROCESS MOD
   Baca D, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P804, DOI 10.1109/ARES.2009.163
   Berger BJ, 2013, EUR CON SFTWR MTNCE, P285, DOI 10.1109/CSMR.2013.37
   Bernsmed K., 2019, P INT C CYBER SECURI, P1, DOI DOI 10.1109/CYBERSECPODS.2019.8885144
   Biba Kenneth, 1977, Integrity considerations for secure computer systems
   Bjork R.C., 2020, ATMEXAMPLE
   Bodden Eric, 2012, P ACM SIGPLAN INT WO, P3, DOI DOI 10.1145/2259051.2259052
   Bürger J, 2018, J SYST SOFTWARE, V139, P142, DOI 10.1016/j.jss.2018.02.003
   Cook S., 2017, 20171205 OMG
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Diskin Zinovy, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P165, DOI 10.1007/978-3-642-21210-9_16
   Dougherty C., 2009, SECURE DESIGN PATTER
   Duarte L, 2017, SOFTW SYST MODEL, V16, P523, DOI 10.1007/s10270-015-0466-0
   Eclipse Contributors, 2020, ECL DOC SEC STOR
   Ehrig H., 1999, HDB GRAPH GRAMMARS C, V3, DOI [10.1142/4181, DOI 10.1142/4181]
   Estañol M, 2019, SOFTW SYST MODEL, V18, P2531, DOI 10.1007/s10270-018-0681-6
   Faily Shamal, 2020, Graphical Models for Security. 7th International Workshop, GraMSec 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12419), P186, DOI 10.1007/978-3-030-62230-5_10
   Fan M, 2020, PROC INT SYMP SOFTW, P253, DOI 10.1109/ISSRE5003.2020.00032
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Ferrara Pietro, 2018, Privacy Technologies and Policy. 6th Annual Privacy Forum (APF 2018). Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11079), P63, DOI 10.1007/978-3-030-02547-2_4
   Fourneret E., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P272, DOI 10.1109/ARES.2011.46
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Heinrich R., 2016, 20162 KARLSR I TECHN, V2
   Hjerppe K., 2019, PRIVACY IDENTITY MAN, P343
   Jasser S, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P35, DOI 10.1109/ICSA47634.2020.00012
   Katkalov K, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P51, DOI 10.1109/SocialCom.2013.14
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   König H, 2017, LECT NOTES COMPUT SC, V10376, P161, DOI 10.1007/978-3-319-61482-3_10
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Macher Georg, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P130, DOI 10.1007/978-3-319-45477-1_11
   Mebus D., 2019, THESIS U KOBLENZ LAN
   Meneely A., 2020, ITRUST ELECT HLTH CA
   Muntean P, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY - COMPANION (QRS-C 2015), P128, DOI 10.1109/QRS-C.2015.30
   MyBatis, 2020, JPETSTORE
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Peldszus S., 2015, P INT C PRINCIPLES P, P138, DOI DOI 10.1145/2807426.2807438
   Peldszus S., 2018, GPCE
   Peldszus S., 2020, IMPLEMENTATION EVALU
   Peldszus S., 2015, TRANSFORMATION TOOL, P118
   Peldszus S, 2021, THESIS U KOBLENZ LAN
   Peldszus S., 2020, GRAVITY PROGRAM MODE
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Peldszus S, 2016, IEEE INT CONF AUTOM, P578, DOI 10.1145/2970276.2970338
   Ramadan Q, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P123, DOI 10.1109/MODELS.2017.10
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Ruland S, 2018, LECT NOTES COMPUT SC, V10802, P38, DOI 10.1007/978-3-319-89363-1_3
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Scandariato R, 2015, REQUIR ENG, V20, P163, DOI 10.1007/s00766-013-0195-2
   Shostack A., 2014, Threat Modeling: Designing for Security
   Sion L, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1425, DOI 10.1145/3167132.3167285
   Tuma K, 2018, J SYST SOFTWARE, V144, P275, DOI 10.1016/j.jss.2018.06.073
   Tuma K, 2021, THESIS CHALMERS U TE
   Tuma K, 2018, LECT NOTES COMPUT SC, V11048, P347, DOI 10.1007/978-3-030-00761-4_23
   Tuma K, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P191, DOI 10.1109/ICSA.2019.00028
   Vallee-Rai Raja, 1998, Jimple: Simplifying Java bytecode for analyses and transformations
   Vanciu R, 2013, IEEE INT CONF AUTOM, P334, DOI 10.1109/ASE.2013.6693092
   Wolf T., 2019, EGIT USER GUIDE
NR 69
TC 1
Z9 1
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 273
EP 296
DI 10.1007/s10270-022-00991-5
EA MAR 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000770507700001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Vidgof, M
   Djurica, D
   Bala, S
   Mendling, J
AF Vidgof, Maxim
   Djurica, Djordje
   Bala, Saimir
   Mendling, Jan
TI Interactive log-delta analysis using multi-range filtering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Log-delta analysis; Variant analysis; Multi-range
   filter; Event logs; Event sequence data
ID USER ACCEPTANCE; BEHAVIOR
AB Process mining is a family of analytical techniques that extract insights from an event log and present them to an analyst. A key analysis task is to understand the distinctive features of different variants of the process and their impact on process performance. Techniques for log-delta analysis (or variant analysis) put a strong emphasis on automatically extracting explanations for differences between variants. A weakness of them is, however, their limited support for interactively exploring the dividing line between typical and atypical behavior. In this paper, we address this research gap by developing and evaluating an interactive technique for log-delta analysis, which we call InterLog. This technique is developed based on the idea that the analyst can interactively define filter ranges and that these filters are used to partition the log L into sub-logs L-1 for the selected cases and L-2 for the deselected cases. In this way, the analyst can step-by-step explore the log and manually separate the typical behavior from the atypical. We prototypically implement InterLog and demonstrate its application for a real-world event log. Furthermore, we evaluate it in a preliminary design study with process mining experts for usefulness and ease of use.
C1 [Vidgof, Maxim; Djurica, Djordje; Bala, Saimir; Mendling, Jan] Vienna Univ Econ & Business WU, Inst Informat Business, Vienna, Austria.
C3 Vienna University of Economics & Business
RP Vidgof, M (corresponding author), Vienna Univ Econ & Business WU, Inst Informat Business, Vienna, Austria.
EM maxim.vidgof@wu.ac.at
RI Bala, Saimir/AAB-5475-2022
OI Vidgof, Maxim/0000-0003-2394-2247; Bala, Saimir/0000-0001-7179-1901;
   Djurica, Djordje/0000-0002-3656-8314
FU Vienna University of Economics and Business (WU)
FX Open access funding provided by Vienna University of Economics and
   Business (WU).
CR Augusto A, 2019, IEEE T KNOWL DATA EN, V31, P686, DOI 10.1109/TKDE.2018.2841877
   Ballambettu NP, 2017, LECT NOTES COMPUT SC, V10253, P298, DOI 10.1007/978-3-319-59536-8_19
   Berti A., 2019, ARXIV190506169, P13
   Bolt A, 2016, LECT NOTES COMPUT SC, V9694, P151, DOI 10.1007/978-3-319-39696-5_10
   Bolt A, 2018, INFORM SYST, V74, P53, DOI 10.1016/j.is.2017.12.006
   Boltenhagen M, 2021, INFORM SYST, V102, DOI 10.1016/j.is.2020.101675
   Compeau D, 2012, INFORM SYST RES, V23, P1093, DOI 10.1287/isre.1120.0423
   Conforti R, 2017, IEEE T KNOWL DATA EN, V29, P300, DOI 10.1109/TKDE.2016.2614680
   Cordes C, 2015, LECT NOTES BUS INF P, V202, P383, DOI 10.1007/978-3-319-15895-2_32
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   De Weerdt J, 2013, IEEE T KNOWL DATA EN, V25, P2708, DOI 10.1109/TKDE.2013.64
   Di Ciccio C., 2015, WORK ENT ORG MODELIN, P20, DOI [10.1007/978-3-319-24626-0_2, DOI 10.1007/978-3-319-24626-0_2]
   Du F, 2017, IEEE T VIS COMPUT GR, V23, P1636, DOI 10.1109/TVCG.2016.2539960
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Gunther Christian W., 2007, Business Process Management. Proceedings 5th International Conference, BPM 2007. (Lecture Notes in Computer Science vol. 4714), P328
   Lakshmanan G.T., 2013, Business Process Management, V8094, P323, DOI DOI 10.1007/978-3-642-40176-3_27
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Mannhardt, 2016, DATASET SEPSIS CASES, DOI 10.4121/uuid:915d2bfb-7-84-49ad-a286-dc35f063a460
   Pentland BT, 2003, MANAGE SCI, V49, P857, DOI 10.1287/mnsc.49.7.857.16382
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Polato, 2017, DATASET DATASET BELO, DOI 10.4121/uuid:0c60edf1-6f83-4-75-9367-4c63b3-9d5bb
   Song M, 2009, LECT NOTES BUS INF P, V17, P109
   Taymouri F, 2021, KNOWL-BASED SYST, V211, DOI 10.1016/j.knosys.2020.106557
   Taymouri F, 2020, LECT NOTES COMPUT SC, V12127, P299, DOI 10.1007/978-3-030-49435-3_19
   van Beest NRTP, 2015, LECT NOTES COMPUT SC, V9253, P386, DOI 10.1007/978-3-319-23063-4_26
   Van Der Aalst W., 2016, Process mining: data science in action, V2
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Vidgof Maxim, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P135, DOI 10.1007/978-3-030-49418-6_9
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Yeshchenko A, 2022, IEEE T VIS COMPUT GR, V28, P3050, DOI 10.1109/TVCG.2021.3050071
NR 31
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 847
EP 868
DI 10.1007/s10270-021-00902-0
EA SEP 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0U0DM
UT WOS:000695768400001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Kugele, S
   Obergfell, P
   Sax, E
AF Kugele, Stefan
   Obergfell, Philipp
   Sax, Eric
TI Model-based resource analysis and synthesis of service-oriented
   automotive software architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service-oriented architecture; Real-time behaviour; Model-based design;
   Automotive architectures
ID OPTIMIZATION
AB Context Automotive software architectures describe distributed functionality by an interaction of software components. One drawback of today's architectures is their strong integration into the onboard communication network based on predefined dependencies at design time. The idea is to reduce this rigid integration and technological dependencies. To this end, service-oriented architecture offers a suitable methodology since network communication is dynamically established at run-time. Aim We target to provide a methodology for analysing hardware resources and synthesising automotive service-oriented architectures based on platform-independent service models. Subsequently, we focus on transforming these models into a platform-specific architecture realisation process following AUTOSAR Adaptive. Approach For the platform-independent part, we apply the concepts of design space exploration and simulation to analyse and synthesise deployment configurations, i. e., mapping services to hardware resources at an early development stage. We refine these configurations to AUTOSAR Adaptive software architecture models representing the necessary input for a subsequent implementation process for the platform-specific part. Result We present deployment configurations that are optimal for the usage of a given set of computing resources currently under consideration for our next generation of E/E architecture. We also provide simulation results that demonstrate the ability of these configurations to meet the run time requirements. Both results helped us to decide whether a particular configuration can be implemented. As a possible software toolchain for this purpose, we finally provide a prototype. Conclusion The use of models and their analysis are proper means to get there, but the quality and speed of development must also be considered.
C1 [Kugele, Stefan] TH Ingolstadt, Res Inst Almot Bavaria, D-85049 Ingolstadt, Germany.
   [Obergfell, Philipp] BMW Grp Res, New Technol, Innovat, D-85748 Garching, Germany.
   [Sax, Eric] Karlsruhe Inst Technol, Inst Informat Proc Technol, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Kugele, S (corresponding author), TH Ingolstadt, Res Inst Almot Bavaria, D-85049 Ingolstadt, Germany.
EM Stefan.Kugele@thi.de; Philipp.Obergfell@bmw.de; eric.sax@kit.edu
OI Kugele, Stefan/0000-0002-9833-4548
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   Alliance, GENIVI
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Amdahl G.M., 1967, AFIPS 1967 SPRING JO, P483
   [Anonymous], Android auto
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2017, LNI
   [Anonymous], 2013, EAST ADL DOMAIN MODE
   [Anonymous], 2004, THESIS
   [Anonymous], 2011, IEEE STANDARD LOCAL
   [Anonymous], 2011, ISO 262622011
   [Anonymous], SCALABLE SERVICE ORI
   [Anonymous], 2010, MATLAB, Version 7.10.0 (R2010a)
   *AUTOSAR, AUT OP SYST ARCH
   Axelsson, 2006, P 16 INT S INT COUNC
   Axelsson J, 2000, IEEE INT C ENG COMP, P229
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Bjorner Nikolaj., 2014, SCSS 2014 VOLUME 30, V30, P1, DOI DOI 10.29007/JMXJ
   Bocchi Laura, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1059, DOI 10.1109/COMPSAC.2008.228
   Bosch J., 2014, CONTINUOUS SOFTWARE
   Broy M., 2009, tech. rep., White paper of the IBM Cooperation and technical report of the TUM
   Broy M, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189753
   Bucher H., 2019, Simulation Notes Europe, V29, P73
   Carnegie Mellon University, 2020, OP SOURC AADL TOOL E
   Cebotari V, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P53, DOI 10.1109/ICSA-C.2019.00017
   Dajsuren Y., 2015, THESIS TU EINDHOVEN
   Damm W., 2005, FIT 2005 FDN INT TEC
   Daniel J.G., 2016, THESIS KARLSRUHER I
   de Menezes R, 2020, ASTROPHYS SPACE SCI, V365, DOI 10.1007/s10509-020-3727-5
   Dziwok S., 2016, TRRI16352 FRAUNH IEM
   Ernst R., 2018, Dagstuhl Reports, V8, P122
   ETAS, ASCET DEVELOPER
   Feiler P.H., 2006, The Architecture Analysis Design Language (AADL): An Introduction
   Fellini R, 1999, FIRST INTERNATIONAL SYMPOSIUM ON ENVIRONMENTALLY CONSCIOUS DEGIGN AND INVERSE MANUFACTURING, PROCEEDINGS, P400, DOI 10.1109/ECODIM.1999.747645
   Ferdinand Christian., 2001, EMSOFT 01, P469
   Florentz B, 2006, LECT NOTES COMPUT SC, V4214, P145
   fortiss GmbH, 2018, WELC FORT AUTOFOCUS
   Geiger A., 2012, CVPR
   Glass M, 2008, 2008 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION, PROCEEDINGS, P74, DOI 10.1109/ICSAMOS.2008.4664849
   Grossmann IE, 2002, OPTIM ENG, V3, P227, DOI 10.1023/A:1021039126272
   Grunske L, 2007, LECT NOTES COMPUT SC, V4615, P188
   Haberl W, 2010, LECT NOTES COMPUT SC, V6415, P18, DOI 10.1007/978-3-642-16558-0_4
   IEEE, 2010, IEEE STANDARD LOCAL, DOI 10.1109/IEEESTD.2009.5375704
   Inchron, CHRONSIM
   Jaensch, 2014, MODULORIENTIERTES PR
   Kampmann A, 2019, IEEE INT C INTELL TR, P2101, DOI 10.1109/ITSC.2019.8916841
   Karunamoorthy L., 2007, J IND ENG INT ISLAMI
   Kugele S., 2014, P 6 INT WORKSH CONST, P18, DOI [10.1145/2593735.2593739, DOI 10.1145/2593735.2593739]
   Kugele S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P65, DOI 10.1109/ICSA.2018.00016
   Kugele S, 2018, IEEE INT C INTELL TR, P3183, DOI 10.1109/ITSC.2018.8569374
   Kugele S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P193, DOI 10.1109/ICSA.2017.20
   Kugele S, 2016, 2016 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P133, DOI 10.1109/MEMCOD.2016.7797758
   Kugele S, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P158, DOI 10.1109/MEMCOD.2015.7340482
   Kugele S, 2008, COMM COM INF SC, V17, P400
   Kumar R, 2008, IEEE T RELIAB, V57, P650, DOI 10.1109/TR.2008.2006079
   Lampe B., 2019, 28 AACH C AACH GERM
   Lee EA, 2003, J CIRCUIT SYST COMP, V12, P231, DOI 10.1142/S0218126603000751
   Lohstroh M., 2019, P 9 WORKSH DES MOD E, P26
   Lotz J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P45, DOI 10.1109/ICSA-C.2019.00016
   Lukasiewycz M, 2008, DES AUT CON, P626
   Malkis A, 2015, P BRAZ SYMP SOFTW, P110, DOI 10.1109/SBCARS.2015.22
   Martens A, 2009, ELECTRON NOTES THEOR, V253, P77, DOI 10.1016/j.entcs.2009.09.029
   Meedeniya I, 2011, J SYST SOFTWARE, V84, P835, DOI 10.1016/j.jss.2011.01.004
   Menard C., 2019, ARXIV191201367
   Modelica Association Project, 2014, FMI FUNCT MOCK UP IN
   Obergfell P, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P128, DOI 10.1109/MODELS.2019.000-8
   Obergfell P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P127, DOI 10.1109/ICSA-C.2019.00030
   Object Management Group (OMG), 2015, Data Distribution Service (DDS)
   OMG, 2009, UML profile for MARTE: Modeling and analysis of real-time embedded systems
   OMG, 2016, MET FAC
   PELLICCIONE P, 2017, J SYST ARCHIT, V77
   Pohl K., 2016, ADV MODEL BASED ENG
   Ptolemaeus C., 2014, System Design, Modeling, and Simulation using Ptolemy II
   Quigley CP., 2007, 2007 3rd Institution of Engineering and Technology Conference on Automotive Electronics, P1
   Qureshi T.N., 2011, REAL TIM SWED RTIS
   Rebholz Heinz., 2008, 2008 IEEE INT S ELEC, P1, DOI [10.1109/ISEMC.2008.4652041, DOI 10.1109/ISEMC.2008.4652041]
   Reinhardt Dominik, 2014, Proceedings of the 2014 9th IEEE International Symposium on Industrial Embedded Systems (SIES 2014), P189, DOI 10.1109/SIES.2014.6871203
   SAE, 2014, SAE STANDARD J, V3016, P1, DOI DOI 10.4271/J3016_201401
   Seyler JR, 2015, DES AUT TEST EUROPE, P49
   Sillmann B, 2018, ANN IEEE SYST CONF, P433
   Sobieszczanski-Sobieski J, 2001, STRUCT MULTIDISCIP O, V22, P295, DOI 10.1007/s00158-001-0150-6
   Society of Automotive Engineers, 2006, AS5506 SAE AADL
   Sommer Stephan., 2013, 2013 IEEE INT ELECT, P1
   Streichert T, 2006, 2006 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION, PROCEEDINGS, P93, DOI 10.1109/ICSAMOS.2006.300814
   System C Standardization Working Group, 2012, Tech. Rep., P1, DOI DOI 10.1109/IEEESTD.2012.6134619
   The MathWorks Inc, 2000, US SIM
   Thiele L, 2000, ISCAS 2000: IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS - PROCEEDINGS, VOL IV, P101, DOI 10.1109/ISCAS.2000.858698
   Traub M., 2010, THESIS, DOI 10.5445/KSP/1000020379
   Traub M, 2017, IEEE SOFTWARE, V34, P27, DOI 10.1109/MS.2017.69
NR 92
TC 5
Z9 5
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1945
EP 1975
DI 10.1007/s10270-021-00896-9
EA SEP 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000692713600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Casalaro, GL
   Cattivera, G
   Ciccozzi, F
   Malavolta, I
   Wortmann, A
   Pelliccione, P
AF Casalaro, Giuseppina Lucia
   Cattivera, Giulio
   Ciccozzi, Federico
   Malavolta, Ivano
   Wortmann, Andreas
   Pelliccione, Patrizio
TI Model-driven engineering for mobile robotic systems: a systematic
   mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Mobile robot systems; Systematic mapping study
ID CONTROL SOFTWARE; STATE
AB Mobile robots operate in various environments (e.g. aquatic, aerial, or terrestrial), they come in many diverse shapes and they are increasingly becoming parts of our lives. The successful engineering of mobile robotics systems demands the interdisciplinary collaboration of experts from different domains, such as mechanical and electrical engineering, artificial intelligence, and systems engineering. Research and industry have tried to tackle this heterogeneity by proposing a multitude of model-driven solutions to engineer the software of mobile robotics systems. However, there is no systematic study of the state of the art in model-driven engineering (MDE) for mobile robotics systems that could guide research or practitioners in finding model-driven solutions and tools to efficiently engineer mobile robotics systems. The paper is contributing to this direction by providing a map of software engineering research in MDE that investigates (1) which types of robots are supported by existing MDE approaches, (2) the types and characteristics of MRSs that are engineered using MDE approaches, (3) a description of how MDE approaches support the engineering of MRSs, (4) how existing MDE approaches are validated, and (5) how tools support existing MDE approaches. We also provide a replication package to assess, extend, and/or replicate the study. The results of this work and the highlighted challenges can guide researchers and practitioners from robotics and software engineering through the research landscape.
C1 [Casalaro, Giuseppina Lucia; Cattivera, Giulio] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
   [Ciccozzi, Federico] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
   [Wortmann, Andreas] Rhein Westfal TH Aachen, Chair Software Engn, Aachen, Germany.
   [Pelliccione, Patrizio] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Pelliccione, Patrizio] Univ Aquila, Laquila, Italy.
C3 University of L'Aquila; Malardalen University; Vrije Universiteit
   Amsterdam; RWTH Aachen University; Chalmers University of Technology;
   University of L'Aquila
RP Ciccozzi, F (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM giuseppina.casalaro@univaq.it; giulio.cattivera@univaq.it;
   federico.ciccozzi@mdh.se; i.malavolta@vu.nl; wottmann@se-rwth.de;
   patrizio.pelliccione@univaq.it
RI Pelliccione, Patrizio/Q-5118-2019; Malavolta, Ivano/E-9018-2017
OI Pelliccione, Patrizio/0000-0002-5438-2281; Malavolta,
   Ivano/0000-0001-5773-8346; ciccozzi, federico/0000-0002-0401-1036
FU Malardalen University
FX Open access funding provided by Malardalen University.
CR Adam K., 2017, AACHENER INFORMATIK, V28
   Ahmad A, 2016, J SYST SOFTWARE, V122, P16, DOI 10.1016/j.jss.2016.08.039
   Akiki PA, 2020, SCI COMPUT PROGRAM, V200, DOI 10.1016/j.scico.2020.102534
   Ando N, 2008, LECT NOTES ARTIF INT, V5325, P87
   Andrews T, 2004, LECT NOTES COMPUT SC, V3114, P484
   [Anonymous], 2018, MEET COBOTS HUMANS R
   [Anonymous], 2018, SELF DRIVING ELECT B
   [Anonymous], 2006, Acm International Conference Proceeding Series
   Aranda Jorge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P692, DOI 10.1007/978-3-642-33666-9_44
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Belgrave L.L, 2007, Qualitative Psychology: A Practical Guide to Research Methods, DOI [10.1002/9781405165518.wbeosg070, DOI 10.1002/9781405165518.WBEOSG070.PUB2]
   Berndt J., 2004, PROC AIAA MODEL SIMU, P4923, DOI [10.2514/6.2004-4923, DOI 10.2514/6.2004-4923]
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Blanc X., 2007, P 2 NAT WORKSH CONTR
   Boedecker J., 2008, AUTON ROBOT, V174, P181
   Bozhinoski D, 2019, J SYST SOFTWARE, V151, P150, DOI 10.1016/j.jss.2019.02.021
   Bozhinoski D, 2015, IEEE INT CONF AUTOM, P801, DOI 10.1109/ASE.2015.104
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooks A., 2005, 2005 IEEE/RSJ International Conference on Intelligent Robots and Systems, P163
   Bruel J.-M., 2015, INT C COMP SCI ICCS INT C COMP SCI ICCS
   Brugali Davide, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P361, DOI 10.1007/978-3-642-34327-8_33
   Brugali D., 2010, J SOFTW ENG ROBOT, V1, P1
   Brugali D, 2007, SPRINGER TRAC ADV RO, V30, P3, DOI 10.1007/978-3-540-68951-5_1
   Brugali D, 2015, IEEE ROBOT AUTOM MAG, V22, P155, DOI 10.1109/MRA.2015.2452201
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P9, DOI 10.1109/MRA.2009.932127
   Bruyninckx H, 2001, IEEE INT CONF ROBOT, P2523, DOI 10.1109/ROBOT.2001.933002
   Bruyninckx H., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1758, DOI [10.1145/2480362.2480693, DOI 10.1145/2480362.2480693]
   Ciccozzi F., 2016, J IEEE ACCESS
   Ciccozzi F, 2017, IEEE SOFTWARE, V34, P46, DOI 10.1109/MS.2017.1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Datta C, 2012, IEEE INT C INT ROBOT, P2352, DOI 10.1109/IROS.2012.6386105
   Denil J., 2017, P S THEOR MOD SIM, P10
   Dennis S., 2016, SMARTMDSD TOOLCHAIN
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragomir Iulia, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P155, DOI 10.1007/978-3-030-03424-5_11
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Echeverria Gilberto, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P197, DOI 10.1007/978-3-642-34327-8_20
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   Feitosa D, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P738
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Franzosi R., 2010, Quantitative Narrative Analysis, DOI DOI 10.4135/9781412993883
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Garcia S., 2019, 12 ACM SIGPLAN INT C
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   Gerkey BP, 2003, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON ADVANCED ROBOTICS 2003, VOL 1-3, P317
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Grönniger H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P925
   Hasanain W, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P294
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heim R, 2015, IEEE INT C INT ROBOT, P1793, DOI 10.1109/IROS.2015.7353610
   Heldal R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P216, DOI 10.1145/2976767.2976808
   Holldobler K., 2017, MONTICORE 5 LANGUAGE, V32
   Horsley T., 2011, COCHRANE DATAB SYST, V8
   Hu GQ, 2012, IEEE NETWORK, V26, P21, DOI 10.1109/MNET.2012.6201212
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Ingibergsson JTM, 2015, LECT NOTES COMPUT SC, V9459, P335, DOI 10.1007/978-3-319-26844-6_25
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Keele S., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kozaczynski W, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/MS.1998.714621
   Kraetzschmar GK, 2015, LECT NOTES ARTIF INT, V8992, P171, DOI 10.1007/978-3-319-18615-3_14
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Kuhne T., 2005, Language Engineering for Model-Driven Software Development, P1
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Major L, 2012, IET SOFTW, V6, P502, DOI 10.1049/iet-sen.2011.0125
   Makarenko A., 2006, International Conference on Intelligent Robots and Systems, Beijing, China, P163
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mehmood A, 2013, INFORM SOFTWARE TECH, V55, P395, DOI 10.1016/j.infsof.2012.09.003
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Menghi C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P99, DOI 10.1109/ICSE-Companion.2019.00048
   Mohanarajah G, 2015, IEEE T AUTOM SCI ENG, V12, P481, DOI 10.1109/TASE.2014.2329556
   Morelli M., 2013, 2013 IEEE 18 C EM TE 2013 IEEE 18 C EM TE, P1
   Muhe H., 2010, 1 INT WORKSH DOM SPE 1 INT WORKSH DOM SPE
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Nordmann A, 2014, LECT NOTES COMPUT SC, V8810, P195, DOI 10.1007/978-3-319-11900-7_17
   Penzenstadler B., 2014, P 18 INT C EV ASS SO, P1
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pons C, 2012, ING INVEST, V32, P58
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Schlegel C., 2009, ADV ROB 2009 ICAR 20
   Schlegel C., 2018, J SOFTW ENG ROBOT JO, V7, P3
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P214, DOI 10.1109/RTTAS.1996.509538
   Soley R., 2000, MODEL DRIVEN ARCHITE, V308, P5
   SPARC, 2016, ROB 2020 MULT ROADM
   Sprinkle J, 2010, LECT NOTES COMPUT SC, V6100, P57, DOI 10.1007/978-3-642-16277-0_3
   Sprinkle J, 2009, SOFTW SYST MODEL, V8, P551, DOI 10.1007/s10270-009-0116-5
   Steck A, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P73
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Thomas U, 2013, IEEE INT CONF ROBOT, P461, DOI 10.1109/ICRA.2013.6630615
   Toris R, 2015, IEEE INT C INT ROBOT, P4530, DOI 10.1109/IROS.2015.7354021
   Trower J., 2015, Proceedings of the 46th ACM Technical Symposium on Computer Science Education, P5, DOI [DOI 10.1145/2676723.2691871, DOI 10.1145/2676723]
   Turnbull L., 2012, P IEEE SOUTH P IEEE SOUTH, P1
   Vallecillo A., 2015, Int. J. Inf. Syst. Softw. Eng. Big Co, V1, P52
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Weilkiens T., 2011, SYSTEMS ENG SYSMLUML
   Weintrop D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173940
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
   Yang CH, 2014, IEEE T SYST MAN CY-S, V44, P292, DOI 10.1109/TSMCC.2013.2266914
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
NR 114
TC 14
Z9 14
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 19
EP 49
DI 10.1007/s10270-021-00908-8
EA AUG 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000683257900001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Planas, E
   Daniel, G
   Brambilla, M
   Cabot, J
AF Planas, Elena
   Daniel, Gwendal
   Brambilla, Marco
   Cabot, Jordi
TI Towards a model-driven approach for multiexperience AI-based user
   interfaces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multiexperience development platform (MXDP); Model-driven development
   (MDD); bots; Conversational user interface (CUI)
ID TECHNOLOGY
AB Software systems start to include other types of interfaces beyond the "traditional" Graphical-User Interfaces (GUIs). In particular, Conversational User Interfaces (CUIs) such as chat and voice are becoming more and more popular. These new types of interfaces embed smart natural language processing components to understand user requests and respond to them. To provide an integrated user experience all the user interfaces in the system should be aware of each other and be able to collaborate. This is what is known as a multiexperience User Interface. Despite their many benefits, multiexperience UIs are challenging to build. So far CUIs are created as standalone components using a platform-dependent set of libraries and technologies. This raises significant integration, evolution and maintenance issues. This paper explores the application of model-driven techniques to the development of software applications embedding a multiexperience User Interface. We will discuss how raising the abstraction level at which these interfaces are defined enables a faster development and a better deployment and integration of each interface with the rest of the software system and the other interfaces with whom it may need to collaborate. In particular, we propose a new Domain Specific Language (DSL) for specifying several types of CUIs and show how this DSL can be part of an integrated modeling environment able to describe the interactions between the modeled CUIs and the other models of the system (including the models of the GUI). We will use the standard Interaction Flow Modeling Language (IFML) as an example "host" language.
C1 [Planas, Elena; Daniel, Gwendal] Univ Oberta Catalunya, Barcelona 08018, Spain.
   [Brambilla, Marco] Politecn Milan, I-20133 Milan, Italy.
   [Cabot, Jordi] Univ Oberta Catalunya, ICREA, Barcelona 08010, Spain.
C3 UOC Universitat Oberta de Catalunya; Polytechnic University of Milan;
   UOC Universitat Oberta de Catalunya; ICREA
RP Planas, E (corresponding author), Univ Oberta Catalunya, Barcelona 08018, Spain.
EM eplanash@uoc.edu; gdaniel@uoc.edu; marco.brambilla@polimi.it;
   jordi.cabot@icrea.cat
RI Brambilla, Marco/M-4748-2015; Cabot, Jordi/P-7723-2015
OI Brambilla, Marco/0000-0002-8753-2434; 
FU Spanish government [PID2020-114615RBI00]; ECSEL Joint Undertaking (JU)
   [101007350]; European Union
FX This work has been partially funded by the Spanish government
   (PID2020-114615RBI00) and the AIDOaRt project, which has received
   funding from the ECSEL Joint Undertaking (JU) under grant agreement No
   101007350. The JU receives support from the European Union's Horizon
   2020 research and innovation programme and Sweden, Austria, Czech
   Republic, Finland, France, Italy and Spain.
CR Acerbis R, 2015, LECT NOTES COMPUT SC, V9114, P605, DOI 10.1007/978-3-319-19890-3_39
   Albert M, 2010, SOFTW SYST MODEL, V9, P47, DOI 10.1007/s10270-008-0108-x
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2008, COMP 23 ACM SIGPLAN
   Baresi L, 2000, LECT NOTES COMPUT SC, V1921, P89
   Baudart G, 2018, PROCEEDINGS OF THE 5TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON REACTIVE AND EVENT-BASED LANGUAGES AND SYSTEMS (REBLS'18), P21, DOI 10.1145/3281278.3281282
   Bernaschina Carlo, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P207, DOI 10.1109/MOBILESoft.2017.15
   Berti S., 2004, CHI'04 extended abstracts on Human factors in computing systems, P793, DOI DOI 10.1145/985921.985939
   Brambilla Marco, 2014, Mobile Web Information Systems. 11th International Conference (MobiWIS 2014). Proceedings: LNCS 8640, P176, DOI 10.1007/978-3-319-10359-4_15
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Bravo-Santos S., 2020, QUAL INF COMM TECHN, P426, DOI [10.1007/978- 3-030- 58793-2 34, DOI 10.1007/978-3-030-58793-234]
   Cabot J., 2020, P 23 ACM IEEE INT C
   Ceri S, 2007, COMMUN ACM, V50, P55, DOI 10.1145/1232743.1232748
   Chittò P, 2020, LECT NOTES COMPUT SC, V12400, P239, DOI 10.1007/978-3-030-62522-1_17
   Daniel G, 2020, IEEE ACCESS, V8, P15332, DOI 10.1109/ACCESS.2020.2966919
   Daniel G, 2019, LECT NOTES COMPUT SC, V11483, P177, DOI 10.1007/978-3-030-21290-2_12
   Ed-Douibi H, 2021, LECT NOTES COMPUT SC, V12706, P440, DOI 10.1007/978-3-030-74296-6_33
   Garrett J. J., 2010, The elements of user experience: user-centered design for the web and beyond
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   Huang A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P52, DOI 10.1145/3270112.3278185
   IBM, 2018, WATS ASS WEBS
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Klopfenstein LC, 2017, DIS'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON DESIGNING INTERACTIVE SYSTEMS, P555, DOI 10.1145/3064663.3064672
   Linaje M, 2007, LECT NOTES COMPUT SC, V4607, P226
   McTear MF, 2002, ACM COMPUT SURV, V34, P90, DOI 10.1145/505282.505285
   Meixner G, 2011, STUD COMPUT INTELL, V340, P1
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   OMG, 2015, INTERACTION FLOW MOD
   OMG, 2017, UNIFIED MODELING LAN
   Pan MX, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110433
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Perez-Soler Sara, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P257, DOI 10.1007/978-3-030-49418-6_17
   Pérez-Soler S, 2020, LECT NOTES COMPUT SC, V12400, P207, DOI 10.1007/978-3-030-62522-1_15
   Rahimi M, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P241, DOI 10.1109/REW.2019.00049
   Raneburger D, 2011, STUD COMPUT INTELL, V340, P107
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Rodriguez-Echeverria J, 2021, 3 INT WORKSH BOTS SO
   Schwabe D., 1996, Seventh ACM Conference on Hypertext. Hypertext '96, P116, DOI 10.1145/234828.234840
   Soysal E, 2018, J AM MED INFORM ASSN, V25, P331, DOI 10.1093/jamia/ocx132
   Vanderdonckt J, 2005, LECT NOTES COMPUT SC, V3520, P16
   Vdovjak R., 2003, Journal of Web Engineering, V2, P3
   Völkel ST, 2020, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, IUI 2020, P477, DOI 10.1145/3377325.3377500
NR 43
TC 12
Z9 12
U1 3
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 997
EP 1009
DI 10.1007/s10270-021-00904-y
EA AUG 2021
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000680292200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Mussbacher, G
   Combemale, B
   Kienzle, J
   Abrahao, S
   Ali, H
   Bencomo, N
   Búr, M
   Burgueño, L
   Engels, G
   Jeanjean, P
   Jézéquel, JM
   Kühn, T
   Mosser, S
   Sahraoui, H
   Syriani, E
   Varró, D
   Weyssow, M
AF Mussbacher, Gunter
   Combemale, Benoit
   Kienzle, Jorg
   Abrahao, Silvia
   Ali, Hyacinth
   Bencomo, Nelly
   Bur, Marton
   Burgueno, Loli
   Engels, Gregor
   Jeanjean, Pierre
   Jezequel, Jean-Marc
   Kuhn, Thomas
   Mosser, Sebastien
   Sahraoui, Houari
   Syriani, Eugene
   Varro, Daniel
   Weyssow, Martin
TI Opportunities in intelligent modeling assistance
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based software engineering; Intelligent modeling assistance;
   Integrated development environment; Artificial intelligence; Development
   data; Feedback
AB Modeling is requiring increasingly larger efforts while becoming indispensable given the complexity of the problems we are solving. Modelers face high cognitive load to understand a multitude of complex abstractions and their relationships. There is an urgent need to better support tool builders to ultimately provide modelers with intelligent modeling assistance that learns from previous modeling experiences, automatically derives modeling knowledge, and provides context-aware assistance. However, current intelligent modeling assistants (IMAs) lack adaptability and flexibility for tool builders, and do not facilitate understanding the differences and commonalities of IMAs for modelers. Such a patchwork of limited IMAs is a lost opportunity to provide modelers with better support for the creative and rigorous aspects of software engineering. In this expert voice, we present a conceptual reference framework (RF-IMA) and its properties to identify the foundations for intelligent modeling assistance. For tool builders, RF-IMA aims to help build IMAs more systematically. For modelers, RF-IMA aims to facilitate comprehension, comparison, and integration of IMAs, and ultimately to provide more intelligent support. We envision a momentum in the modeling community that leads to the implementation of RF-IMA and consequently future IMAs. We identify open challenges that need to be addressed to realize the opportunities provided by intelligent modeling assistance.
C1 [Mussbacher, Gunter; Kienzle, Jorg; Ali, Hyacinth; Bur, Marton; Varro, Daniel] McGill Univ, Montreal, PQ, Canada.
   [Combemale, Benoit] Univ Toulouse, Software Engn, Toulouse, France.
   [Combemale, Benoit] INRIA, Toulouse, France.
   [Abrahao, Silvia] Univ Politecn Valencia, Valencia, Spain.
   [Bencomo, Nelly] Aston Univ, Birmingham, W Midlands, England.
   [Burgueno, Loli] Univ Oberta Catalunya, Barcelona, Spain.
   [Burgueno, Loli] CEA LIST, Palaiseau, France.
   [Engels, Gregor] Paderborn Univ, Database & Informat Syst, Paderborn, Germany.
   [Jeanjean, Pierre; Jezequel, Jean-Marc] Univ Rennes, IRISA, CNRS, INRIA, Rennes, France.
   [Kuhn, Thomas] Karlsruher Inst Technol, Karlsruhe, Germany.
   [Mosser, Sebastien] Univ Quebec Montreal, Software Engn, Montreal, PQ, Canada.
   [Sahraoui, Houari; Syriani, Eugene; Weyssow, Martin] Univ Montreal, Montreal, PQ, Canada.
C3 McGill University; Universite de Toulouse; Inria; Universitat
   Politecnica de Valencia; Aston University; UOC Universitat Oberta de
   Catalunya; CEA; University of Paderborn; Inria; Centre National de la
   Recherche Scientifique (CNRS); Universite de Rennes; Helmholtz
   Association; Karlsruhe Institute of Technology; University of Quebec;
   University of Quebec Montreal; Universite de Montreal
RP Combemale, B (corresponding author), Univ Toulouse, Software Engn, Toulouse, France.; Combemale, B (corresponding author), INRIA, Toulouse, France.
EM gunter.mussbacher@mcgill.ca; benoit.combemale@inria.fr;
   kienzle@mcgill.ca; sabrahao@dsic.upv.es; hyacinth.ali@mail.mcgill.ca;
   nelly@acm.org; marton.bur@mail.mcgill.ca; lburguenoc@uoc.edu;
   engels@upb.de; pierre.jeanjean@inria.fr; jezequel@irisa.fr;
   kuehn@kit.edu; mosser.sebastien@uqam.ca; sahraouh@iro.umontreal.ca;
   syriani@iro.umontreal.ca; daniel.varro@mcgill.ca;
   martin.weyssow@umontreal.ca
RI Varro, Daniel/AAC-4234-2022; Jezequel, Jean-Marc/AAF-3854-2019; Abrahão,
   Silvia/AAK-6976-2020; Bencomo, Nelly/GZL-1379-2022
OI Varro, Daniel/0000-0002-8790-252X; Jezequel,
   Jean-Marc/0000-0002-0582-9745; Abrahão, Silvia/0000-0003-3580-2014;
   Mosser, Sebastien/0000-0001-9769-216X
CR Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   AI4AUI: Workshop on AI Methods for Adaptive User Interfaces, 2020, AI4AUI WORKSH AI MET, DOI [10.1145/3306307.3328180, DOI 10.1145/3306307.3328180]
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 2016, AICCSA 2016
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Baki I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2904904
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Combemale B, 2021, IEEE SOFTWARE, V38, P71, DOI 10.1109/MS.2020.2995125
   Danylenko A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P80, DOI 10.1109/RSSE.2012.6233417
   Derakhshanmanesh M, 2019, SOFTW SYST MODEL, V18, P2557, DOI 10.1007/s10270-018-0682-5
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   Hartmann T, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P180, DOI 10.1109/MODELS.2017.32
   Josifovska K., 2019, HUMAN COMPUTER INTER, P398, DOI DOI 10.1007/978-3-030-22636-7_30
   KAISER GE, 1988, IEEE SOFTWARE, V5, P40, DOI 10.1109/52.2023
   KARIMI J, 1988, IEEE T SOFTWARE ENG, V14, P194, DOI 10.1109/32.4638
   Kery MB, 2017, S VIS LANG HUM CEN C, P25, DOI 10.1109/VLHCC.2017.8103446
   Kienzle J, 2020, COMMUN ACM, V63, P80, DOI 10.1145/3371906
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Kögel S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1026, DOI 10.1145/3106237.3119874
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   Liew A., 2013, Business Management Dynamics, V2, P49, DOI DOI 10.12735/jbm.v2i4p49
   Liu C, 2018, IEEE ACCESS, V6, P52082, DOI 10.1109/ACCESS.2018.2869207
   Mazak A., 2019, NEED DATA BASED MODE, P103, DOI [10.1007/978-3-030-25312-7_5, DOI 10.1007/978-3-030-25312-7_5]
   McDirmid S, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P623
   Mussbacher G., 2014, RELEVANCE MODEL DRIV, DOI [10.1007/978-3-319-11653-2_12, DOI 10.1007/978-3-319-11653-2_12]
   Perez-Soler S., 2020, P INT C EXPL MOD MET
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Rocha T, 2010, CONTEMPORARY MICROENTERPRISE: CONCEPTS AND CASES, P193
   Rovatsos M., AUTONOMOUS SOFTWARE, P63, DOI [10.1142/9789812775245_0003, DOI 10.1142/9789812775245_0003]
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Shapiai MI, 2010, 2010 SECOND INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE, COMMUNICATION SYSTEMS AND NETWORKS (CICSYN), P28, DOI 10.1109/CICSyN.2010.10
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Subramaniam K., 2004, SEKE
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Timm IJ, 2007, AUTONOMY SOFTWARE SY, P255
   Tran Q, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P284, DOI 10.1109/ASSET.1999.756782
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 42
TC 36
Z9 37
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1045
EP 1053
DI 10.1007/s10270-020-00814-5
EA JUL 2020
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000549380700001
DA 2024-07-18
ER

PT J
AU Rutle, A
   Iovino, L
   König, H
   Diskin, Z
AF Rutle, Adrian
   Iovino, Ludovico
   Koenig, Harald
   Diskin, Zinovy
TI A query-retyping approach to model transformation co-evolution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Migration; Co-evolution; Graph transformations
ID GRAPH; EVOLUTION
AB In rule-based approaches, a model transformation definition tells how an instance of a source metamodel should be transformed to an instance of a target metamodel. As these metamodels undergo changes, model transformations defined over these metamodels may get out of sync. Restoring conformance between model transformations and the metamodels is a complex and error-prone task. In this paper, we propose a formal approach to automatically co-evolve model transformations according to the evolution of the metamodels. The approach is based on encoding the model transformation definition as a query-retyping combination and the evolution of the metamodels as applications of graph transformation rules. These rules are used to obtain an evolved query over the evolved metamodel together with a new retyping from the target metamodel. We will identify the criteria which need to be fulfilled in order to make this automatic co-evolution possible. We provide a tool support for this procedure, in which, from a traceability model that represents the original model transformation definition, we derive a co-evolved traceability model that represents the evolved transformation definition. Moreover, we use a case study to evaluate the approach with a set of commonly performed metamodel evolutions.
C1 [Rutle, Adrian] Western Norway Univ Appl Sci, Dept Comp Sci Elect Engn & Math Sci, Bergen, Norway.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Comp Sci Sci Area, Laquila, Italy.
   [Koenig, Harald] FHDW Hannover, Univ Appl Sci, Comp Sci, Hannover, Germany.
   [Diskin, Zinovy] McMaster Univ, Hamilton, ON, Canada.
C3 Western Norway University of Applied Sciences; Gran Sasso Science
   Institute (GSSI); McMaster University
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Comp Sci Sci Area, Laquila, Italy.
EM aru@hvl.no; ludovico.iovino@gssi.it; harald.koenig@fhdw.de;
   diskinz@mcmaster.ca
OI Iovino, Ludovico/0000-0001-6552-2609
CR [Anonymous], ECEASST
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Bettini L., 2017, ME WORKSH MODELS
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Czarnecki K, 2009, ICMT 2009, P193
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Di Rocco J., 2014, ME WORKSH MODELS, P22
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Di Ruscio D., 2011, P 2 INT WORKSH MOD C, P30
   Di Ruscio D., 2016, ECMFA
   Di Ruscio D, 2017, LECT NOTES COMPUT SC, V10376, P71, DOI 10.1007/978-3-319-61482-3_5
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   Diskin Z, 2017, LECT NOTES COMPUT SC, V10202, P247, DOI 10.1007/978-3-662-54494-5_14
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Diskin Z, 2012, LECT NOTES COMPUT SC, V7212, P163, DOI 10.1007/978-3-642-28872-2_12
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Freund M, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P284, DOI 10.1145/2976767.2976777
   Garcia Jokin., 2013, Software Language Engineering, Lecture Notes in Computer Science, P144
   Hassam K., 2010, BENEVOL
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Hermann F, 2008, ELECTRON NOTES THEOR, V211, P261, DOI 10.1016/j.entcs.2008.04.048
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Hu ZJ, 2011, SIGMOD REC, V40, P35, DOI 10.1145/2007206.2007217
   Iovino L, 2019, TRACEABILITY MODEL M
   Iovino L, 2019, TRACEABILITY EVALUAT
   Iovino L, 2019, EUROMICRO CONF PROC, P458, DOI 10.1109/SEAA.2019.00074
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kessentini W, 2018, LECT NOTES COMPUT SC, V11036, P229, DOI 10.1007/978-3-319-99241-9_12
   Khelladi DE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P404, DOI 10.1145/3239372.3239380
   Khelladi DE, 2017, ASIA PAC SOFWR ENG, P576, DOI 10.1109/APSEC.2017.68
   Khelladi DE, 2017, J SYST SOFTWARE, V134, P242, DOI 10.1016/j.jss.2017.09.010
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kruse S, 2015, COEVOLUTION METAMODE
   Kruse S., 2011, ME WORKSH MODELS
   Kusel A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P116, DOI 10.1109/MODELS.2015.7338242
   Levendovszky T, 2010, LECT NOTES COMPUT SC, V5969, P23
   Lopes D, 2006, INTEROPERABILITY OF ENTERPRISE SOFTWARE AND APPLICATIONS, P253, DOI 10.1007/1-84628-152-0_23
   Mantz F, 2014, THESIS
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   Marschall F., 2003, TECHNICAL REPORT
   Mendez D., 2010, ME WORKSH MODELS
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   MOLABO Research Group, MET REFACT CAT
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rose LM, 2009, IEEE INT CONF AUTOM, P545, DOI 10.1109/ASE.2009.57
   Rutle A, 2018, LECT NOTES COMPUT SC, V10890, P80, DOI 10.1007/978-3-319-92997-2_6
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Cuadrado JS, 2014, LECT NOTES COMPUT SC, V8568, P186
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P., 2007, A Landscape of Bidirectional Model Transformations, Generative and Transformational Techniques in Software Engineering II: International Summer School, P408
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Wagelaar D., 2012, LNCS, V7303
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
NR 60
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1107
EP 1138
DI 10.1007/s10270-020-00805-6
EA JUN 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000538974800002
DA 2024-07-18
ER

PT J
AU Pullonen, P
   Tom, J
   Matulevicius, R
   Toots, A
AF Pullonen, Pille
   Tom, Jake
   Matulevicius, Raimundas
   Toots, Aivo
TI Privacy-enhanced BPMN: enabling data privacy analysis in business
   processes models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Privacy; Business process model and notation (BPMN); Privacy-enhancing
   technology (PET); Information disclosure
ID SECURITY REQUIREMENTS; EXTENSION
AB Privacy-enhancing technologies play an important role in preventing the disclosure of private data as information is transmitted and processed. Although business process model and notation (BPMN) is well suited for expressing stakeholder collaboration and business processes support by technical solutions, little is done to depict and analyze the flow of private information and its technical safeguards as it is disclosed to process participants. This gap motivates the development of privacy-enhanced BPMN (PE-BPMN)-a BPMN language for capturing PET-related activities in order to study the flow of private information and ease the communication of privacy concerns and requirements among stakeholders. We demonstrate its feasibility in a mobile app scenario and present techniques to analyze information disclosures identified by models enriched with PE-BPMN.
C1 [Pullonen, Pille; Toots, Aivo] Cybernetica, Tartu, Estonia.
   [Tom, Jake] Univ Tartu, Inst Comp Sci, Tartu, Estonia.
   [Matulevicius, Raimundas] Univ Tartu, Informat Secur Posit, Tartu, Estonia.
C3 Cybernetica; University of Tartu; University of Tartu
RP Tom, J (corresponding author), Univ Tartu, Inst Comp Sci, Tartu, Estonia.
EM pille.pullonen@cyber.ee; jaketom@ut.ee; rma@ut.ee; aivo.toots@cyber.ee
RI Matulevicius, Raimundas/J-1871-2019
OI Matulevicius, Raimundas/0000-0002-1829-4794; Pullonen-Raudvere,
   Pille/0000-0002-3255-7001
FU Air Force Research laboratory (AFRL); Defense Advanced Research Projects
   Agency (DARPA) [FA8750-16-C-0011]; European Regional Development Fund
   through the Excellence in IT in Estonia (EXCITE); Estonian Research
   Council [IUT27-1]
FX The authors would like to thank Prof. Marlon Dumas, Peeter Laud,
   DanBogdanov and othermembers of theNAPLES project for discussions,
   comments and feedback concerning this study. This research was, in part,
   funded by the Air Force Research laboratory (AFRL) and Defense Advanced
   Research Projects Agency (DARPA) under contract FA8750-16-C-0011. The
   views expressed are those of the authors and do not reflect the official
   policy or position of the Department of Defense or the U.S. Government.
   This work was also supported by the European Regional Development Fund
   through the Excellence in IT in Estonia (EXCITE) and by the Estonian
   Research Council under Institutional Research Grant IUT27-1.
CR Accorsi R, 2015, INFORM SYST, V47, P244, DOI 10.1016/j.is.2013.12.006
   Altuhhova O, 2013, INT J INF SYST MODEL, V4, P93, DOI 10.4018/ijismd.2013100105
   [Anonymous], 2016, PRIV MAN REF MOD MET
   [Anonymous], 2013, NIST SPECIAL PUBLICA, pB
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], BUS PROC MOD NOT BPM
   [Anonymous], 2013, Em: Proceedings of the 2nd international workshop on hardware and architectural support for security and privacy
   [Anonymous], 2016, Wired
   [Anonymous], 2004, PRIVACY ENHANCING TE
   [Anonymous], 2015, TECHNICAL REPORT
   Argyropoulos N, 2017, CONF BUS INFORM, V1, P43, DOI 10.1109/CBI.2017.37
   Ayed G. B., 2012, P ASONAM 2012
   Blakley G. R., 1979, P 1979 AFIPS NAT COM, P313
   Braun R, 2014, LECT NOTES BUS INF P, V197, P42
   Brucker A.D., 2012, Proceedings of the 17th ACM symposium on access control models and technologies (SACMAT '12), P123, DOI [DOI 10.1145/2295136.2295160, 10.1145/2295136.2295160]
   Cherdantseva Y, 2012, LECT NOTES BUS INF P, V125, P107
   Chergui M. E. A., 2018, LNCS, V11163, P216
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Dumas M., 2018, 5 INT WORKSH GRAPH M
   Dumas M, 2016, LECT NOTES COMPUT SC, V9987, P62, DOI 10.1007/978-3-319-46263-9_4
   Gentry C, 2009, ACM S THEORY COMPUT, P169, DOI 10.1145/1536414.1536440
   Heurix J, 2015, COMPUT SECUR, V53, P1, DOI 10.1016/j.cose.2015.05.002
   International Organization for Standardization, 2016, 29134 ISOIEC DIS
   Islam Shareeful, 2012, International Journal of Secure Software Engineering, V3, P1, DOI 10.4018/jsse.2012070101
   Labda W., 2014, P 29 ANN ACM S APPL, P1399, DOI 10.1145/2554850.2555014
   Lepinski M, 2016, L N INST COMP SCI SO, V166, P66, DOI 10.1007/978-3-319-33681-7_6
   Maines CL, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P1757, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.265
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Mulle J., 2011, KARLSRUHE REPORTS IN, V2011, P9
   Pullonen P, 2017, LECT NOTES COMPUT SC, V10445, P40, DOI 10.1007/978-3-319-65000-5_3
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Saleem M. Q., 2012, ADV INF SCI SERV SCI, V4
   Salnitri M., 2014, Enterprise, Business-Process and Information and Information Systems Modeling, V175, P200, DOI [DOI 10.1007/978-3-662-43745-2_14, 10.1007/978-3-662]
   Sang KS, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P2344, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.346
   SHAMIR A, 1979, COMMUN ACM, V22, P612, DOI 10.1145/359168.359176
   Solove DJ, 2006, U PENN LAW REV, V154, P477, DOI 10.2307/40041279
   Souza ARR, 2009, LECT NOTES COMPUT SC, V5900, P373, DOI 10.1007/978-3-642-10383-4_27
   Su J, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1261, DOI 10.1145/3038912.3052714
   Tom Jake, 2018, Perspectives in Business Informatics Research. 17th International Conference, BIR 2018. Proceedings. Lecture Notes in Business Information Processing (LNBIP 330), P18, DOI 10.1007/978-3-319-99951-7_2
   Weiss M.A., 2016, US-EU data privacy: from safe harbor to privacy shield
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
NR 42
TC 26
Z9 26
U1 0
U2 28
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3235
EP 3264
DI 10.1007/s10270-019-00718-z
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600004
DA 2024-07-18
ER

PT J
AU Reineke, J
   Stergiou, C
   Tripakis, S
AF Reineke, Jan
   Stergiou, Christos
   Tripakis, Stavros
TI Basic problems in multi-view modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal methods; System modeling; Views; Verification; Synthesis;
   Consistency; Automata; Symbolic transition systems; Projection; Inverse
   projection
ID INCONSISTENCY
AB Modeling all aspects of a complex system within a single model is a difficult, if not impossible, task. Multi-view modeling is a methodology where different aspects of the system are captured by different models, or views. A key question then is consistency: if different views of a system have some degree of overlap, how can we guarantee that they are consistent, i.e., that they do not contradict each other? In this paper we formulate this and other basic problems in multi-view modeling within an abstract formal framework. We then instantiate this framework onto several discrete system settings: languages and automata over finite and infinite words, and symbolic transition systems; and study how checking view consistency and other problems can be solved in these settings.
C1 [Reineke, Jan] Saarland Univ, Saarbrucken, Germany.
   [Stergiou, Christos] Univ Penn, Philadelphia, PA 19104 USA.
   [Tripakis, Stavros] Aalto Univ, Espoo, Finland.
   [Tripakis, Stavros] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 Saarland University; University of Pennsylvania; Aalto University;
   University of California System; University of California Berkeley
RP Tripakis, S (corresponding author), Aalto Univ, Espoo, Finland.; Tripakis, S (corresponding author), Univ Calif Berkeley, Berkeley, CA 94720 USA.
EM stavros.tripakis@gmail.com
FU Direct For Computer & Info Scie & Enginr [1139138] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations [1139138] Funding Source: National Science Foundation
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Amaral V., 2011, ELECT COMMUN EASST, V50, P10
   Amaral V, 2010, LECT NOTES COMPUT SC, V6002, P220
   [Anonymous], TOOLS ALGORITHMS CON
   [Anonymous], P 13 ACM IEEE INT C
   [Anonymous], 2011, 420102011 ISOIECIEEE
   Benveniste A, 2008, LECT NOTES COMPUT SC, V5382, P200, DOI 10.1007/978-3-540-92188-2_9
   Bhave A, 2011, ACM IEEE INT CONF CY, P151, DOI 10.1109/ICCPS.2011.17
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Broman D., 2012, MPM
   Broy M, 2003, LECT NOTES COMPUT SC, V2757, P207
   Broy M., 2012, CONQUERING COMPLEXIT, P309, DOI [10.1007/978-1-4471-2297-5_14, DOI 10.1007/978-1-4471-2297-5_14]
   Broy M., 2006, INTERACTIVE COMPUTAT, P41
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Diethers K, 2004, LECT NOTES COMPUT SC, V2988, P139
   Dijkman R.M, 2006, THESIS
   Doyen L., 2008, Proc. ACM IEEE Int. Conf. Embedded Software, P79, DOI DOI 10.1145/1450058.1450070
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Getir S, 2015, LECT NOTES COMPUT SC, V9152, P34, DOI 10.1007/978-3-319-21155-8_3
   GRANGER P, 1992, LECT NOTES COMPUT SC, V652, P68
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Henzinger Thomas A., 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P380, DOI 10.1007/978-3-642-34059-8_20
   Herzig SJI, 2014, PROCEDIA COMPUT SCI, V28, P354, DOI 10.1016/j.procs.2014.03.044
   Holzmann Gerard J., 2003, The SPIN Model Checker
   Jackson D, 1994, CMUCS94126
   Jackson E, 2009, SOFTW SYST MODEL, V8, P451, DOI 10.1007/s10270-008-0105-0
   Jackson EK, 2015, SOFTW SYST MODEL, V14, P271, DOI 10.1007/s10270-013-0315-y
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   Kao JY, 2009, THEOR COMPUT SCI, V410, P5010, DOI 10.1016/j.tcs.2009.07.049
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Maoz S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P95, DOI 10.1145/2568225.2568237
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P153, DOI 10.1007/978-3-642-24485-8_12
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Pittou M., 2016, INT C EMB COMP SYST
   Pittou M., 2016, 13 INT C FORM ASP CO
   Rajhans A., 2013, HSCC 13, P253
   Rajhans A, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P35
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   Sabetzadeh M., 2007, P INT WORKSH MOD SOF, P2
   SISTLA AP, 1987, THEOR COMPUT SCI, V49, P217, DOI 10.1016/0304-3975(87)90008-9
   Spanoudakis G, 1997, ANN SOFTW ENG, V3, P433, DOI 10.1023/A:1018998207415
   Tripakis S, 2016, P IEEE, V104, P960, DOI 10.1109/JPROC.2015.2510366
   Tripakis S, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1985342.1985345
   von Hanxleden R., 2012, LNCS
   ZAVE P, 1993, COMPUTER, V26, P20, DOI 10.1109/2.223539
   Zave P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P379, DOI 10.1145/158431.158438
   Zhao XP, 2006, LECT NOTES COMPUT SC, V4260, P440
NR 50
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1577
EP 1611
DI 10.1007/s10270-017-0638-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100003
DA 2024-07-18
ER

PT J
AU Bill, R
   Fleck, M
   Troya, J
   Mayerhofer, T
   Wimmer, M
AF Bill, Robert
   Fleck, Martin
   Troya, Javier
   Mayerhofer, Tanja
   Wimmer, Manuel
TI A local and global tour on MOMoT
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 12th European Conference on Modelling Foundations and Applications
   (ECMFA) / 9th International Conference on Theory and Practice of Model
   Transformations (ICMT) Held as Part of Software Technologies -
   Applications and Foundations (STAF) Conference
CY JUL 04-07, 2016
CL TU Wien, Vienna, AUSTRIA
HO TU Wien
DE Model-driven engineering; Model transformation; Search-based software
   engineering; Local search; Global search
ID MODEL TRANSFORMATION; OPTIMIZATION; ALGORITHM
AB Many model transformation scenarios require flexible execution strategies as they should produce models with the highest possible quality. At the same time, transformation problems often span a very large search space with respect to possible transformation results. Recently, different proposals for finding good transformation results without enumerating the complete search space have been proposed by using meta-heuristic search algorithms. However, determining the impact of the different kinds of search algorithms, such as local search or global search, on the transformation results is still an open research topic. In this paper, we present an extension to MOMoT, which is a search-based model transformation tool, for supporting not only global searchers for model transformation orchestrations, but also local ones. This leads to a model transformation framework that allows as the first of its kind multi-objective local and global search. By this, the advantages and disadvantages of global and local search for model transformation orchestration can be evaluated. This is done in a case-study-based evaluation, which compares different performance aspects of the local- and global-search algorithms available in MOMoT. Several interesting conclusions have been drawn from the evaluation: (1) local-search algorithms perform reasonable well with respect to both the search exploration and the execution time for small input models, (2) for bigger input models, their execution time can be similar to those of global-search algorithms, but global-search algorithms tend to outperform local-search algorithms in terms of search exploration, (3) evolutionary algorithms show limitations in situations where single changes of the solution can have a significant impact on the solution's fitness.
C1 [Bill, Robert; Mayerhofer, Tanja] TU Wien, Business Informat Grp, Vienna, Austria.
   [Fleck, Martin] EclipseSource Serv GmbH, Vienna, Austria.
   [Troya, Javier] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Wimmer, Manuel] TU Wien, CDL MINT, Vienna, Austria.
C3 Technische Universitat Wien; University of Sevilla; Technische
   Universitat Wien
RP Troya, J (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM bill@big.tuwien.ac.at; mfleck@eclipsesource.com; jtroya@us.es;
   mayerhofer@big.tuwien.ac.at; wimmer@big.tuwien.ac.at
RI Troya, Javier/B-6951-2017
OI Troya, Javier/0000-0002-1314-9694
FU European Commission (FEDER); Spanish R&D&I programme under project BELI
   [TIN2015-70560-R]; Andalusian R&D&I programme under project COPAS
   [P12-TIC-1867]; Austrian Federal Ministry of Science, Research and
   Economy; National Foundation for Research, Technology and Development;
   Austrian Science Fund (FWF) [P 28519-N31]
FX The work of Javier Troya is funded by the European Commission (FEDER)
   and the Spanish and the Andalusian R&D&I programmes under grants and
   projects BELI (TIN2015-70560-R) and COPAS (P12-TIC-1867). Finally, the
   work of ManuelWimmer is funded by the Austrian Federal Ministry of
   Science, Research and Economy and the National Foundation for Research,
   Technology and Development as well as by the Austrian Science Fund
   (FWF): P 28519-N31.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Agrawal A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ASE.2003.1240339
   [Anonymous], 2014, P AMT MODELS 14
   [Anonymous], P 1 INT WORKSH COMB
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Biermann E., 2010, Electron. Commun. Eur. Assoc. Softw. Sci. Technol, V26, P1, DOI [10.14279/tuj.eceasst.26.353, DOI 10.14279/TUJ.ECEASST.26.353]
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Brambilla M., 2012, MODEL DRIVEN SOFTWAR, DOI [10.1007/978-3-031-02546-4, DOI 10.1007/978-3-031-02546-4]
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Cohen W, 2014, MACH LEARN P 1994 P
   Darwin C., 1859, ORIGIN SPECIES MEANS
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2012, EVOLUTIONARY COMPUTA, P1
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Di Ruscio D, 2016, LECT NOTES COMPUT SC, V9764, P231, DOI 10.1007/978-3-319-42061-5_15
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   Drago ML, 2011, LECT NOTES COMPUT SC, V6981, P2, DOI 10.1007/978-3-642-24485-8_2
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Fatiregun D, 2003, LECT NOTES COMPUT SC, V2724, P2511
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Fleck M., 2015, P 1 N AM SEARCH BAS, P1
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Fleck M, 2016, LECT NOTES COMPUT SC, V9765, P79, DOI 10.1007/978-3-319-42064-6_6
   Fleck Martin, 2016, P TTC 2016 CEUR WORK, V1758, P1
   Fogel L.J., 1966, Intelligence through simulated evolution: forty years of evolutionary programming
   Fogel L.J., 1962, P INT FEDERATION INF, P395
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Gogolla Martin., 2014, Workshop on the Analysis of Model Transformations (AMT), P24
   Goldberg D. E., 1985, P 1 INT C GEN ALG TH, P154
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HOLLAND JH, 1962, J ACM, V9, P297, DOI 10.1145/321127.321128
   ISHIBUCHI H, 2004, INT J HYBRID INTELLI, V1, P22
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2010, LECT NOTES COMPUT SC, V6138, P156, DOI 10.1007/978-3-642-13595-8_14
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kleiner Mathias, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P54, DOI 10.1007/978-3-642-39013-5_5
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Laarhoven P. J. M., 1987, Simulated Annealing, DOI [10.1007/978-94-015-7744-1, DOI 10.1007/978-94-015-7744-1_2]
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   OMG, 2011, MET FAC MOF 2 0 QUER
   Rechenberg I., 1965, LIB TRANSLATION, V1112
   Rechenberg Ingo, 1973, EVOLUTIONSSTRATEGIE
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russell S., 2009, Artificial intelligence
   Saada H, 2013, IEEE INT CONF AUTOM, P688, DOI 10.1109/ASE.2013.6693134
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Talbi E-G, 2009, Metaheuristics: from Design to Implementation, DOI DOI 10.1002/9780470496916
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Visser E., 2001, Electronic Notes in Theoretical Computer Science, V57, DOI 10.1016/S1571-0661(04)00270-1
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E., 2001, 103 TIK ETH ZUR SWIS
NR 73
TC 19
Z9 19
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1017
EP 1046
DI 10.1007/s10270-017-0644-3
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Famelis, M
   Chechik, M
AF Famelis, Michalis
   Chechik, Marsha
TI Managing design-time uncertainty
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software methodology; Software modelling; Software design; Design space
   management; Uncertainty
ID SOFTWARE-DEVELOPMENT; PETRI NETS; MODEL; TOOL
AB Managing design-time uncertainty, i.e., uncertainty that developers have about making design decisions, requires creation of "uncertainty-aware" software engineering methodologies. In this paper, we propose a methodological approach for managing uncertainty using partial models. To this end, we identify the stages in the lifecycle of uncertainty-related design decisions and characterize the tasks needed to manage it. We encode this information in the Design-Time Uncertainty Management (DeTUM) model. We then use the DeTUM model to create a coherent, tool-supported methodology centred around partial model management. We demonstrate the effectiveness and feasibility of our methodology through case studies.
C1 [Famelis, Michalis] Univ Montreal, Dept Comp Sci & Operat Res, Montreal, PQ, Canada.
   [Chechik, Marsha] Univ Toronto, Software Engn, Dept Comp Sci, Toronto, ON, Canada.
C3 Universite de Montreal; University of Toronto
RP Famelis, M (corresponding author), Univ Montreal, Dept Comp Sci & Operat Res, Montreal, PQ, Canada.
EM famelis@iro.umontreal.ca; chechik@cs.toronto.edu
CR [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1962, Schriften des IIM
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1997, CRITICAL CHAIN BUSIN
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering
   Apvrille L, 2006, IEEE I C ELECT CIRC, P1272, DOI 10.1109/ICECS.2006.379694
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Auer M, 2003, EUROMICRO CONF PROC, P267
   Barrett C., 2010, P SMT 10
   Bernstein P. A, 2003, P CIDR 03
   Bezivin J., 2004, P OOPSLA GPCE 04
   Chechik M., 2016, Choices, Choices! Reasoning About Uncertainty and Variability
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Ehrig H., MONOGRAPHS THEORETIC
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Famelis M., 2011, Proc. of MoDeVVa11, P1
   Famelis M., 2012, P ICSE 12
   Famelis M., 2015, P ICMT 15
   Famelis M., 2015, P ICSE 15 FORM DEM
   Famelis M, 2013, LECT NOTES COMPUT SC, V8107, P673, DOI 10.1007/978-3-642-41533-3_41
   Fehling F., 1993, Advances in Petri Nets 1993, P148
   Fowler M., 2001, Software Development, V9, P28
   Goldsby HJ, 2010, LECT NOTES COMPUT SC, V6394, P316
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Grumberg O, 2004, LECT NOTES COMPUT SC, V3312, P275
   Guan SU, 1998, IEEE T COMPUT, V47, P477, DOI 10.1109/12.675716
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Hoos HH, 2012, COMMUN ACM, V55, P70, DOI 10.1145/2076450.2076469
   Ikonen M, 2010, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA.2010.40
   JENSEN K, 1987, LECT NOTES COMPUT SC, V254, P248
   Jensen K, 2015, COMMUN ACM, V58, P61, DOI 10.1145/2663340
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kang E, 2011, LECT NOTES COMPUT SC, V6662, P33
   Kastner C., 2012, Proc. of FOSD'12, P1
   Ladas C., 2009, Scrumban - Essays on Kanban Systems for Lean Software Development
   Mashiyat A., 2014, P RSSE 14
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T., 2007, P WADT 06
   Midtgaard J., 2014, Proceedings of the 13th International Conference on Modularity, P181, DOI DOI 10.1145/2577080.2577091
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   MOLLOY MK, 1982, IEEE T COMPUT, V31, P913, DOI 10.1109/TC.1982.1676110
   Monden Y., 2011, Toyota Production System: An Integrated Approach to Just-In-Time
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Petre M, 2009, P FSE 09
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Ramchandani C., 1974, THESIS
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Salay R., 2015, P MODELS 15
   Salay R., 2014, Proc. of ICSE'14, P673
   Salay R., 2012, P FASE 12
   Santosa S, 2013, P MISE 13
   Saxena T, 2010, LECT NOTES COMPUT SC, V6394, P46
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Thum T., 2012, FIN0042012 U MSGD SC
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Wüest D, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P685, DOI 10.1109/ICSE.2015.223
NR 70
TC 23
Z9 23
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1249
EP 1284
DI 10.1007/s10270-017-0594-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400024
DA 2024-07-18
ER

PT J
AU Sobrinho, A
   da Silva, LD
   Perkusich, A
   Cunha, P
   Cordeiro, T
   Lima, AMN
AF Sobrinho, Alvaro
   da Silva, Leandro Dias
   Perkusich, Angelo
   Cunha, Paulo
   Cordeiro, Thiago
   Nogueira Lima, Antonio Marcus
TI Formal modeling of biomedical signal acquisition systems: source of
   evidence for certification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Biomedical signal acquisition systems; Colored petri nets; Formal
   methods; Model checking; Frequency-domain approach
ID COLORED PETRI NETS; MEDICAL DEVICE; ELECTROCARDIOGRAPHY; VALIDATION
AB Biomedical signal acquisition systems are software-intensive medical systems composed of processors, transducers, amplifiers, filters, and converters. We present in this article a formal modeling methodology of biomedical signal acquisition systems using Colored Petri Nets (CPN) and based on a frequency-domain approach. In the methodology, a reference model represents the main features of these medium risk systems. We argue that this kind of model is useful to assist manufacturers to reduce the number of defects in systems and to generate safety and effectiveness evidence throughout certification. Therefore, we describe two main contributions in this article. We provide a reference model of biomedical signal acquisition systems and show how manufacturers can generate evidence by means of an electrocardiography (ECG) case study. We carried out the case study by extending the reference model to represent the behavior of an ECG system using a basic cardiac monitor configuration based on the single-lead, heart rate monitor front end (AD8232) and the low power precision analog microcontroller, ARM cortex M3 with dual sigma-delta converters (ADUCM360). We verified the model against safety requirements with the model checking technique (safety evidence) and validated it by comparing output signals with a filtered ECG record available on the PHYSIONET ECG-ID database in the frequency and time domains (effectiveness evidence). This methodology enables manufacturers to identify defects in systems earlier in the development process aiming to decrease costs and development time.
C1 [Sobrinho, Alvaro] Fed Rural Univ Semiarid, Rodovia BR-226 S-N, BR-59900000 Pau Dos Ferros, RN, Brazil.
   [da Silva, Leandro Dias; Cordeiro, Thiago] Univ Fed Alagoas, Ave Lourival Melo Mota, BR-57072900 Maceio, Alagoas, Brazil.
   [Perkusich, Angelo; Nogueira Lima, Antonio Marcus] Univ Fed Campina Grande, R Aprigio Veloso,882 Univ, BR-58429900 Campina Grande, Paraiba, Brazil.
   [Cunha, Paulo] Fed Inst Alagoas, R Engn Godilho de Castro,36 Ctr, Arapiraca, Alagoas, Brazil.
C3 Universidade Federal Rural do Semi-Arido (UFERSA); Universidade Federal
   de Alagoas; Universidade Federal de Campina Grande; Instituto Federal de
   Alagoas (IFAL)
RP Sobrinho, A (corresponding author), Fed Rural Univ Semiarid, Rodovia BR-226 S-N, BR-59900000 Pau Dos Ferros, RN, Brazil.
EM alvaro.sobrinho@ufersa.edu.br
RI Silva, Leandro/AAC-1416-2020; Perkusich, Angelo/I-2447-2013; Lima,
   Antonio M. N./F-9201-2014; Sobrinho, Alvaro/AAP-2644-2020; Perkusich,
   Angelo/O-1203-2018
OI Perkusich, Angelo/0000-0002-7377-1258; Lima, Antonio M.
   N./0000-0002-4568-9126; Sobrinho, Alvaro/0000-0002-1753-1890; Dias da
   Silva, Leandro/0000-0003-4352-1466
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES);
   Fundacao de Amparo a Pesquisa de Alagoas (FAPEAL); Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico (CNPq)
FX The authors would like to thank the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior (CAPES), Fundacao de Amparo a Pesquisa de
   Alagoas (FAPEAL) and Conselho Nacional de Desenvolvimento Cientifico e
   Tecnologico (CNPq) for supporting this research.
CR Alemzadeh H, 2013, IEEE SECUR PRIV, V11, P14, DOI 10.1109/MSP.2013.49
   Analog Devices, 2014, PREC AN MICR DUAL SI
   Analog Devices, 2013, SINGL LEAD HEART RAT
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 2006, A Designer's Guide to Instrumentation Amplifiers 3
   [Anonymous], 1997, The Definition of Standard ML
   Arney D, 2007, 2007 JOINT WORKSHOP ON HIGH CONFIDENCE MEDICAL DEVICES, SOFTWARE AND SYSTEMS AND MEDICAL DEVICE PLUG-AND PLAY INTEROPERABILITY, P23, DOI 10.1109/HCMDSS-MDPnP.2007.36
   BaekGyu Kim, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P155
   Barbosa PES, 2013, COMP MED SY, P4, DOI [10.1109/CBMS.2013.6627756, 10.1109/BSEC.2013.6618492]
   Chandrakar Bhumika., 2013, International Journal of Advanced Research in Computer and Communication Engineering, V2, P1354
   Chavan Mahesh S., 2008, WSEAS Transactions on Signal Processing, V4, P340
   Clarke EM, 1999, MODEL CHECKING, P1
   Desel J, 2015, SOFTW SYST MODEL, V14, P669, DOI 10.1007/s10270-014-0423-3
   FDA, MED DEV CLASS PROC
   Goldberger AL, 2000, CIRCULATION, V101, pE215, DOI 10.1161/01.CIR.101.23.e215
   Han JD, 2015, IEEE T IND ELECTRON, V62, P4267, DOI 10.1109/TIE.2014.2387337
   Hawkins R, 2013, SAFETY SCI, V59, P55, DOI 10.1016/j.ssci.2013.04.007
   Jensen K, 2015, COMMUN ACM, V58, P61, DOI 10.1145/2663340
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Jiang ZH, 2014, INT J SOFTW TOOLS TE, V16, P191, DOI 10.1007/s10009-013-0289-7
   Jiang ZH, 2012, P IEEE, V100, P122, DOI 10.1109/JPROC.2011.2161241
   Kim J, 2015, SOFTW SYST MODEL, V14, P839, DOI 10.1007/s10270-013-0342-8
   Kligfield P, 2007, CIRCULATION, V115, P1306, DOI 10.1161/CIRCULATIONAHA.106.180200
   Kloetzer M, 2010, IEEE T IND INFORM, V6, P460, DOI 10.1109/TII.2010.2050001
   Koch I., 2014, SOSYM, V14, P703
   Lee YS, 2011, IEEE T POWER SYST, V26, P2364, DOI 10.1109/TPWRS.2011.2118772
   Li SC, 2013, IEEE T IND INFORM, V9, P1764, DOI 10.1109/TII.2013.2245334
   Li T, 2014, IEEE T PARALL DISTR, V25, P642, DOI 10.1109/TPDS.2013.50
   Lin C.-L., 2015, STUDIES COMPUTATIONA, V566, P127
   Mashkoor A, 2016, SOFTWARE QUAL J, V24, P571, DOI 10.1007/s11219-015-9288-0
   Mery D, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2406336.2406351
   Mitros P, 2016, IEEE T CIRCUITS-II, V63, P131, DOI 10.1109/TCSII.2015.2483377
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Pajic M, 2014, IEEE T IND INFORM, V10, P3, DOI 10.1109/TII.2012.2226594
   Pelgrom M., 2010, Analog to Digital Conversion
   Qadir J, 2015, IEEE COMMUN SURV TUT, V17, P256, DOI 10.1109/COMST.2014.2345792
   Rao K. R., FAST FOURIER TRANSFO
   Razzaq N, 2016, IEEE ACCESS, V4, P1676, DOI 10.1109/ACCESS.2016.2548362
   Schlechtingen M, 2013, IEEE T SUSTAIN ENERG, V4, P671, DOI 10.1109/TSTE.2013.2241797
   Sedra AdelS., 2009, MICROELECTRONIC CIRC, V6
   Seifi Y, 2015, INT J INF SECUR, V14, P221, DOI 10.1007/s10207-014-0243-z
   Silva LC, 2015, SENSORS-BASEL, V15, P27625, DOI 10.3390/s151127625
   Sobrinho A, 2014, IEEE IND ELEC, P2645, DOI 10.1109/IECON.2014.7048879
   Sobrinho A, 2014, IEEE INTL CONF IND I, P221, DOI 10.1109/INDIN.2014.6945511
   Sun X., 2014, INT S COMP CONS CONT, P188
   Tran TV, 2014, BIO-MED MATER ENG, V24, P3503, DOI 10.3233/BME-141176
   Wolf K, 2015, SOFTW SYST MODEL, V14, P711, DOI 10.1007/s10270-014-0422-4
   Wu DH, 2018, SOFTW SYST MODEL, V17, P295, DOI 10.1007/s10270-016-0517-1
NR 48
TC 7
Z9 8
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1467
EP 1485
DI 10.1007/s10270-017-0616-7
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400031
DA 2024-07-18
ER

PT J
AU Mubeen, S
   Nolte, T
   Sjödin, M
   Lundbäck, J
   Lundbäck, KL
AF Mubeen, Saad
   Nolte, Thomas
   Sjodin, Mikael
   Lundback, John
   Lundback, Kurt-Lennart
TI Supporting timing analysis of vehicular embedded systems through the
   refinement of timing constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Distributed embedded systems; Component-based development; Timing model;
   Component model; End-to-end timing analysis
AB The collective use of several models and tools at various abstraction levels and phases during the development of vehicular distributed embedded systems poses many challenges. Within this context, this paper targets the challenges that are concerned with the unambiguous refinement of timing requirements, constraints and other timing information among various abstraction levels. Such information is required by the end-to-end timing analysis engines to provide pre-run-time verification about the predictability of these systems. The paper proposes an approach to represent and refine such information among various abstraction levels. As a proof of concept, the approach provides a representation of the timing information at the higher levels using the models that are developed with EAST-ADL and Timing Augmented Description Language. The approach then refines the timing information for the lower abstraction levels. The approach exploits the Rubus Component Model at the lower level to represent the timing information that cannot be clearly specified at the higher levels, such as trigger paths in distributed chains. A vehicular-application case study is conducted to show the applicability of the proposed approach.
C1 [Mubeen, Saad; Nolte, Thomas] Malardalen Univ, Vasteras, Sweden.
   [Mubeen, Saad] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Nolte, Thomas] Malardalen Univ, Leading Complex Real Time Embedded Syst Res Grp, Vasteras, Sweden.
   [Sjodin, Mikael] Malardalen Univ, Real Time Syst, Vasteras, Sweden.
   [Sjodin, Mikael] Malardalen Univ, Embedded Syst, Vasteras, Sweden.
   [Lundback, John; Lundback, Kurt-Lennart] Arcticus Syst AB, Jarfalla, Sweden.
C3 Malardalen University; Malardalen University; Malardalen University;
   Malardalen University; Malardalen University
RP Mubeen, S (corresponding author), Malardalen Univ, Vasteras, Sweden.; Mubeen, S (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM saad.mubeen@mdh.se; thomas.nolte@mdh.se; mikael.sjodin@mdh.se;
   john.lundback@arcticus-systems.com; kurt.lundback@arcticus-systems.com
RI Mubeen, Saad/HRB-4610-2023
FU Swedish Foundation for Strategic Research; ARTEMIS; Swedish Knowledge
   Foundation
FX The work in this paper is supported by the Swedish Foundation for
   Strategic Research, ARTEMIS and the Swedish Knowledge Foundation through
   the projects PRESS, CRYSTAL and PreView respectively. The authors would
   like to take the opportunity to thank the industrial partners Arcticus
   Systems, Volvo CE, Volvo GTT and BAE Systems Hagglunds, Sweden.
CR [Anonymous], 2012, TIMMO 2 USE BROCHURE
   [Anonymous], 1993, 118981 ISO
   AUDSLEY NC, 1995, REAL-TIME SYST, V8, P173, DOI 10.1007/BF01094342
   Bucaioni A., 2015, INT WORKSH MOD AUT S
   Carlson J., 2012, 15 INT ACM SIGSOFT S
   Chen DJ, 2013, COMPUTING, V95, P649, DOI 10.1007/s00607-013-0314-4
   Cicchetti A., 2012, 27 INT C AUT SOFTW E
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Feiertag N., 2008, INT WORKSHOP COMPOSI
   Feiler PH, 2004, INT FED INFO PROC, V176, P3
   Hanninen K., 2008, 3 IEEE INT S IND EMB
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Hill H, 2010, 32 ACM IEEE INT C SO
   ISO, 2011, 2626212011 ISO
   Ke X, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P199, DOI 10.1109/RTCSA.2007.29
   MAKITURJA J, 2005, INT C EMB SYST APPL
   Mubeen S., 2015, 21 INT C EMB REAL TI
   Mubeen S., 2014, 1 INT WORKSH MOD DRI
   Mubeen S., 2016, 13 INT C INF TECHN N
   Mubeen S., 2013, COMPUT SCI INF SYST, V1361-1384, P10
   Mubeen S., 2016, 19 INT S COMP BAS SO
   Mubeen S., 2014, INT C COMP BAS SOFTW
   Mubeen S., 2011, TIM AN MOD BAS DES F, P1
   Mubeen S, 2014, J SYST ARCHITECT, V60, P207, DOI 10.1016/j.sysarc.2013.10.008
   Ohno A., 2014, J INFORM PROCESSING, V22, P584
   Qureshi TN, 2011, LECT NOTES COMPUT SC, V6903, P328, DOI 10.1007/978-3-642-23798-0_35
   Sentilles S, 2008, LECT NOTES COMPUT SC, V5282, P310, DOI 10.1007/978-3-540-87891-9_21
   Thorngren P., 2013, E ADL OPEN WORKSH GO
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
NR 29
TC 20
Z9 21
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 39
EP 69
DI 10.1007/s10270-017-0579-8
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300004
OA hybrid
DA 2024-07-18
ER

PT J
AU Richa, E
   Borde, E
   Pautet, L
AF Richa, Elie
   Borde, Etienne
   Pautet, Laurent
TI Translation of ATL to AGT and application to a code generator for
   Simulink
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE ATL; Henshin; Algebraic graph transformation; OCL; Nested graph
   conditions; Analysis of model transformations
ID MODEL TRANSFORMATIONS
AB Analysing and reasoning on model transformations has become very relevant for various applications such as ensuring the correctness of transformations. ATL is a model transformation language with rich semantics and a focus on usability, making its analysis not straightforward. Conversely, algebraic graph transformation (AGT) is an approach with strong theoretical foundations allowing for formal analyses that would be valuable in the context of ATL. In this paper, we propose a translation of ATL to the AGT framework in the objective of bringing theoretical analyses of AGT to ATL transformations. We show that this transformation supports a sufficient subset of ATL to be used on an industrial application example: QGen, a qualifiable Simulink (R) to source code generator developed at AdaCore. In addition to this example, we validate our proposal by translating a set of feature-rich ATL transformations to the Henshin AGT framework. We execute the ATL and AGT versions on the same set of models and verify that the result is the same.
C1 [Richa, Elie] AdaCore, 46 Rue Amsterdam, F-75009 Paris, France.
   [Borde, Etienne; Pautet, Laurent] Univ Paris Saclay, LTCI, Telecom ParisTech, 46 Rue Barrault, F-75013 Paris, France.
C3 Universite Paris Saclay; Universite Paris Cite; IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom Paris
RP Borde, E (corresponding author), Univ Paris Saclay, LTCI, Telecom ParisTech, 46 Rue Barrault, F-75013 Paris, France.
EM richa@adacore.com; etienne.borde@telecom-paristech.fr;
   laurent.pautet@telecom-paristech.fr
OI Pautet, Laurent/0000-0003-0888-187X
CR [Anonymous], 2012, OMG OBJ CONSTR LANG
   Arendt T, 2014, LECT NOTES COMPUT SC, V8571, P97
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Clarisó R, 2016, J SYST SOFTWARE, V116, P113, DOI 10.1016/j.jss.2015.08.017
   Deckwerth F, 2014, LECT NOTES COMPUT SC, V8571, P81
   Ehrig H, 2006, FUNDAMENTALS ALGEBRA, V373
   Ehrig H, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000357
   Ehrig H, 2012, FUND INFORM, V118, P35, DOI 10.3233/FI-2012-705
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Habel A, 2006, LECT NOTES COMPUT SC, V4178, P445
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Pennemann K. H., 2009, THESIS
   Poskitt C. M, 2013, THESIS
   Poskitt ChristopherM., 2014, Workshop on the Analysis of Model Transformations (AMT), P70
   Radke H, 2015, LECT NOTES COMPUT SC, V9151, P155, DOI 10.1007/978-3-319-21145-9_10
   Richa E, 2015, THESIS
   Richa E., 2014, AMT 2014 WORKSH P, P34
   Richa E, 2015, LECT NOTES COMPUT SC, V9152, P183, DOI 10.1007/978-3-319-21155-8_14
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
NR 21
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 321
EP 344
DI 10.1007/s10270-017-0607-8
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300014
DA 2024-07-18
ER

PT J
AU Burattin, A
   Bernstein, V
   Neurauter, M
   Soffer, P
   Weber, B
AF Burattin, Andrea
   Bernstein, Vered
   Neurauter, Manuel
   Soffer, Pnina
   Weber, Barbara
TI Detection and quantification of flow consistency in business process
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Metrics; Visual layout; Qualitative empirical
   study; Consistency of flow
AB Business process models abstract complex business processes by representing them as graphical models. Their layout, as determined by the modeler, may have an effect when these models are used. However, this effect is currently not fully understood. In order to systematically study this effect, a basic set of measurable key visual features is proposed, depicting the layout properties that are meaningful to the human user. The aim of this research is thus twofold: first, to empirically identify key visual features of business process models which are perceived as meaningful to the user and second, to show how such features can be quantified into computational metrics, which are applicable to business process models. We focus on one particular feature, consistency of flow direction, and show the challenges that arise when transforming it into a precise metric. We propose three different metrics addressing these challenges, each following a different view of flow consistency. We then report the results of an empirical evaluation, which indicates which metric is more effective in predicting the human perception of this feature. Moreover, two other automatic evaluations describing the performance and the computational capabilities of our metrics are reported as well.
C1 [Burattin, Andrea; Neurauter, Manuel; Weber, Barbara] Univ Innsbruck, Innsbruck, Austria.
   [Weber, Barbara] Tech Univ Denmark, Software Engn Sect, Lyngby, Denmark.
   [Bernstein, Vered] Univ Haifa, Informat Syst, Haifa, Israel.
   [Soffer, Pnina] Univ Haifa, Informat Syst Dept, Haifa, Israel.
C3 University of Innsbruck; Technical University of Denmark; University of
   Haifa; University of Haifa
RP Burattin, A (corresponding author), Univ Innsbruck, Innsbruck, Austria.
EM andrea.burattin@uibk.ac.at
RI Burattin, Andrea/K-4485-2016; soffer, pnina/P-8893-2019
OI Burattin, Andrea/0000-0002-0837-0183; Weber, Barbara/0000-0002-6004-4860
FU Austrian Science Fund (FWF); Austrian Science Fund (FWF) project "The
   Modeling Mind: Behavior Patterns in Process Modeling" [P26609]; Austrian
   Science Fund (FWF) project "ModErARe" [P26140]; Austrian Science Fund
   (FWF) [P26609, P26140] Funding Source: Austrian Science Fund (FWF)
FX Open access funding provided by Austrian Science Fund (FWF). This work
   is partially funded by the Austrian Science Fund (FWF) projects "The
   Modeling Mind: Behavior Patterns in Process Modeling" (P26609) and
   "ModErARe" (P26140). We are also grateful to the anonymous reviewers who
   helped improving the paper.
CR [Anonymous], 2010, P C ER POIS 10
   [Anonymous], LECT NOTES INFORM LN
   [Anonymous], THESIS U INNSBRUCK
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   [Anonymous], THESIS U POTSDAM
   [Anonymous], 2015, LNBIP, DOI DOI 10.1007/978-3-319-19237-613
   [Anonymous], 3825 RZ IBM RES
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Effinger P, 2010, LECT NOTES BUS INF P, V67, P31
   Figl Kathrin, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P132
   Gschwind T, 2014, J VISUAL LANG COMPUT, V25, P117, DOI 10.1016/j.jvlc.2013.11.002
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   HIMSOLT M, 1995, J VISUAL LANG COMPUT, V6, P255, DOI 10.1006/jvlc.1995.1015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitzmann Ingo, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P391, DOI 10.1109/CEC.2009.28
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   Mayer RE, 2009, MULTIMEDIA LEARNING, 2ND EDITION, P1
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   MISUE K, 1995, J VISUAL LANG COMPUT, V6, P183, DOI 10.1006/jvlc.1995.1010
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Purchase H., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P248, DOI 10.1007/3-540-63938-1_67
   Purchase H. C., 2001, Graph Drawing. 8th International Symposium, GD 2000. Proceedings (Lecture Notes in Computer Science Vol.1984), P5
   Purchase HC, 2002, J VISUAL LANG COMPUT, V13, P501, DOI 10.1006/S1045-926X(02)00016-2
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Reichert M, 2013, LECT NOTES BUS INF P, V132, P725
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Rinderle S, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P204
   Schrepfer M, 2009, LECT NOTES BUS INF P, V39, P161
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Streit A, 2005, LECT NOTES COMPUT SC, V3649, P205, DOI 10.1007/11538394_14
   Taylor-Powell E., 2003, PROGRAM DEV EVALUATI
   Van der Feesten I., 2007, BPM and Workflow handbook, V144, P179
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
NR 37
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 633
EP 654
DI 10.1007/s10270-017-0576-y
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300014
PM 29706860
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Falkner, K
   Szabo, C
   Chiprianov, V
   Puddy, G
   Rieckmann, M
   Fraser, D
   Aston, C
AF Falkner, Katrina
   Szabo, Claudia
   Chiprianov, Vanea
   Puddy, Gavin
   Rieckmann, Marianne
   Fraser, Dan
   Aston, Cathlyn
TI Model-driven performance prediction of systems of systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE Performance prediction; Systems of systems; Model-driven engineering;
   System execution modelling
AB Systems of systems exhibit characteristics that pose difficulty in modelling and predicting their overall performance capabilities, including the presence of operational independence, emergent behaviour, and evolutionary development. When considering systems of systems within the autonomous defence systems context, these aspects become increasingly critical, as constraints on the performance of the final system are typically driven by hard constraints on space, weight and power. System execution modelling languages and tools permit early prediction of the performance of model-driven systems; however, the focus to date has been on understanding the performance of a model rather than determining whether it meets performance requirements, and only subsequently carrying out analysis to reveal the causes of any requirement violations. Moreover, such an analysis is even more difficult when applied to several systems cooperating to achieve a common goal-a system of systems. In this article, we propose an integrated approach to performance prediction of model-driven real-time embedded defence systems and systems of systems. Our architectural prototyping system supports a scenario-driven experimental platform for evaluating model suitability within a set of deployment and real-time performance constraints. We present an overview of our performance prediction system, demonstrating the integration of modelling, execution and performance analysis, and discuss a case study to illustrate our approach.
C1 [Falkner, Katrina; Szabo, Claudia; Rieckmann, Marianne; Fraser, Dan; Aston, Cathlyn] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Chiprianov, Vanea] Univ Pau & Pays Adour, LIUPPA, Pau, France.
   [Puddy, Gavin] Def Sci & Technol Org, Dept Def, Canberra, ACT, Australia.
C3 University of Adelaide; Universite de Pau et des Pays de l'Adour;
   Defence Australia; Defence Science & Technology
RP Szabo, C (corresponding author), Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
EM katrina.falkner@adelaide.edu.au; claudia.szabo@adelaide.edu.au;
   vanea.chiprianov@univ-pau.fr; gavin.puddy@defence.gov.au;
   marianne.rieckmann@adelaide.edu.au; daniel.fraser@adelaide.edu.au;
   cathlyn.aston@adelaide.edu.au
RI Szabo, Claudia/T-1439-2019; Chiprianov, Vanea/E-8335-2010
OI Falkner, Katrina/0000-0003-0309-4332; Aston, Cathlyn/0000-0002-9637-7405
FU Defence Science and Technology Organisation, Australia
FX This work was sponsored by the Defence Science and Technology
   Organisation, Australia.
CR [Anonymous], 2014, OMG VERS 1 4
   [Anonymous], 2007, 2 INT C SYSTEM SYSTE
   [Anonymous], P 1 INT WORKSH SOFTW
   [Anonymous], 2007, P 2014 EUR C SOFTW A, DOI DOI 10.1145/2642803.2642825
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], 2013, SESOS
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Balasubramanian K, 2005, RTAS 2005: 11th IEEE Real Time and Embedded Technology and Applications Symposium, Proceedings, P190
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Barbierato E, 2011, ELECTRON NOTES THEOR, V275, P37, DOI 10.1016/j.entcs.2011.09.004
   Beydeda S., 2010, MODEL DRIVEN SOFTWAR
   Boardman J., 2006, 2006 IEEESMC INT C S, DOI [10.1109/SYSOSE.2006.1652284, DOI 10.1109/SYSOSE.2006.1652284]
   Boehm B, 2011, FUTURE OF SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-15187-3_1
   Bowen R.M., 2010, System of Systems Engineering (SoSE), 2010 5th International Conference on, P1
   Bryans J., 2014, IEEE SYST SYST ENG C
   Chen B, 2014, J ZHEJIANG U-SCI C, V15, P13, DOI 10.1631/jzus.C1300121
   Chiprianov V, 2014, LECT NOTES COMPUT SC, V8627, P357, DOI 10.1007/978-3-319-09970-5_30
   Cook S.C., 2001, INCOSE INT S, V11, P383, DOI [10.1002/j.2334-5837.2001.tb02318.x, DOI 10.1002/J.2334-5837]
   DAGLI C, 2008, SYSTEM SYSTEMS ARCHI
   Denaro G., 2004, Software Engineering Notes, V29, P94, DOI 10.1145/974043.974059
   Deng C, 2005, LECT NOTES COMPUT SC, V3798, P67
   Edwards G, 2007, LECT NOTES COMPUT SC, V4422, P125
   Espinoza H, 2006, LECT NOTES COMPUT SC, V3844, P79
   Eusgeld I, 2011, RELIAB ENG SYST SAFE, V96, P679, DOI 10.1016/j.ress.2010.12.010
   Falkner K., 2016, MIL COMM INF SYST C, P1
   Falkner K, 2013, IEEE INT C ENG COMP, P155, DOI 10.1109/ICECCS.2013.29
   Farcas C, 2010, P IEEE, V98, P562, DOI 10.1109/JPROC.2009.2039630
   Franceschinis G., 2010, ICST, DOI [10.4108/ICST.VALUETOOLS2009.7677, DOI 10.4108/ICST.VALUETOOLS2009.7677]
   Gaonkar S., 2009, EVALUATION REV, V36, P16, DOI [10.1145/1530873.1530878, DOI 10.1145/1530873.1530878]
   Ge BF, 2013, SYSTEMS ENG, V16, P363, DOI 10.1002/sys.21253
   Gokhale A, 2008, SCI COMPUT PROGRAM, V73, P39, DOI 10.1016/j.scico.2008.05.005
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Groenda H., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P111
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Hata Y., 2007, System of Systems Engineering, P1
   Hill J., 2006, P 12 INT C EMB REAL
   Hill J., 2015, SYSTEM EXECUTION MOD, P335
   Hill JH, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P66, DOI 10.1109/ECBS.2008.20
   Hill JH, 2010, IEEE SOFTWARE, V27, P65, DOI 10.1109/MS.2009.197
   Ingram C., 2014, IEEE INT SYST C SYSC
   Jamshidi M, 2008, IEEE AERO EL SYS MAG, V23, P4, DOI 10.1109/MAES.2008.4523909
   Jasmine K., 2007, WORLD ACAD SCI ENG T, V30, P266
   Kampert D., 2014, TECHNICAL REPORT
   Kewley R, 2008, 2008 WINTER SIMULATION CONFERENCE, VOLS 1-5, P1121, DOI 10.1109/WSC.2008.4736181
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Klein J., 2013, P 9 INT ACM SIGSOFT, P13, DOI [10.1145/2465478.2465490, DOI 10.1145/2465478.2465490]
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Manthorpe WHJ, 1996, J HOPKINS APL TECH D, V17, P305
   Merola L., 2006, 5 INT C COMM OFF THE
   Michelson B., 2006, TECHNICAL REPORT
   Mustafiz S., 2012, Proceedings of the 6th International Workshop on Multi-Paradigm Modeling, P13
   Paunov S., 2006, 13 ANN IEEE INT S WO
   Pisano N., 1995, DEF ACQ U ACQ RES S
   Rieckmann M., 2014, P EUR C SOFTW ARCH W, DOI 10.1145/2642803.2642837
   Rieckmann M., 2014, P EUR C SOFTW ARCH W, P34
   Sage A. P., 2001, Information.Knowledge.Systems Management, V2, P325
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schneider J. P., 2014, P EUR C SOFTW ARCH W, DOI 10.1145/2642803.2642834
   Sharawi A, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P1028, DOI 10.1109/WSC.2006.323191
   SISO, 2008, SISOSTD0072008
   Smith CU, 2007, LECT NOTES COMPUT SC, V4486, P395
   Szabo C., 2013, P 22 AUSTR SOFTW ENG
   Trubiani C., 2013, P 9 INT ACM SIGS C Q, P69
   Vangheluwe H., 2002, AI, P9
   Volkert Richard, 2012, International Journal of Systems of Systems Engineering, V3, P76, DOI 10.1504/IJSSE.2012.046559
   Weiderman N.H., 1997, Approaches to Legacy System Evolution
   Wu Xiuping, 2003, P 6 ICSE WORKSH COMP
   You GR, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE 2014), P13, DOI 10.1109/SYSOSE.2014.6892456
NR 69
TC 11
Z9 12
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 415
EP 441
DI 10.1007/s10270-016-0547-8
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300005
DA 2024-07-18
ER

PT J
AU Ober, I
   Palyart, M
   Bruel, JM
   Lugato, D
AF Ober, Ileana
   Palyart, Marc
   Bruel, Jean-Michel
   Lugato, David
TI On the use of models for high-performance scientific computing
   applications: an experience report
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE HPC; High-performance calculus; MDE; Model-driven engineering;
   Architecture; Fortran
AB This paper reports on a four-year project that aims to raise the abstraction level through the use of model-driven engineering (MDE) techniques in the development of scientific applications relying on high-performance computing. The development and maintenance of high-performance scientific computing software is reputedly a complex task. This complexity results from the frequent evolutions of supercomputers and the tight coupling between software and hardware aspects. Moreover, current parallel programming approaches result in a mixing of concerns within the source code. Our approach relies on the use of MDE and consists in defining domain-specific modeling languages targeting various domain experts involved in the development of HPC applications, allowing each of them to handle their dedicated model in a both user-friendly and hardware-independent way. The different concerns are separated thanks to the use of several models as well as several modeling viewpoints on these models. Depending on the targeted execution platforms, these abstract models are translated into executable implementations by means of model transformations. To make all of these effective, we have developed a tool chain that is also presented in this paper. The approach is assessed through a multi-dimensional validation that focuses on its applicability, its expressiveness and its efficiency. To capitalize on the gained experience, we analyze some lessons learned during this project.
C1 [Ober, Ileana; Bruel, Jean-Michel] Univ Toulouse, IRIT, Toulouse, France.
   [Palyart, Marc] Univ British Columbia, Vancouver, BC, Canada.
   [Lugato, David] CEA CESTA, Le Barp, France.
C3 Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite de
   Toulouse; Institut National Polytechnique de Toulouse; Universite
   Toulouse III - Paul Sabatier; University of British Columbia; CEA
RP Ober, I (corresponding author), Univ Toulouse, IRIT, Toulouse, France.
EM ileana.ober@irit.fr; mpalyart@cs.ubc.ca; bruel@irit.fr;
   david.lugato@cea.fr
RI Bruel, Jean-Michel/ABD-5184-2020
OI Bruel, Jean-Michel/0000-0002-3653-0148; Ober, Ileana/0000-0001-9338-8187
CR Allan BA, 2006, INT J HIGH PERFORM C, V20, P163, DOI 10.1177/1094342006064488
   Allen E., 2007, TECHNICAL REPORT
   [Anonymous], P 4 EUR C MOD DRIV A
   [Anonymous], 2007, ISMM
   [Anonymous], 2005, LBNL59208
   [Anonymous], 2003, TECHNICAL REPORT
   Aranda Jorge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P692, DOI 10.1007/978-3-642-33666-9_44
   ARKIN E, 2013, MODELS, V8107, P757
   Augonnet C, 2011, CONCURR COMP-PRACT E, V23, P187, DOI 10.1002/cpe.1631
   Bauer M, 2014, ACM SIGPLAN NOTICES, V49, P119, DOI [10.1145/2692916.2555258, 10.1145/2555243.2555258]
   Bigot J., 2011, ADV PARALLEL COMPUTI, V20, P182
   Bodin Francois, 2009, High Performance Embedded Architectures and Compilers. Proceedings Fourth International Conference, HiPEAC 2009, P2
   Bourgoin M, 2014, INT J PARALLEL PROG, V42, P583, DOI 10.1007/s10766-013-0261-x
   Breu R., 2011, INT J SOFTWARE INFOR, V5, P267
   Cantonnet Francois., 2004, IPDPS
   Chamberlain BL, 2007, INT J HIGH PERFORM C, V21, P291, DOI 10.1177/1094342007078442
   Charles P, 2005, ACM SIGPLAN NOTICES, V40, P519, DOI 10.1145/1103845.1094852
   Chi-Keung Luk, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P45
   Clark T, 2012, SOFTW SYST MODEL, V11, P481, DOI 10.1007/s10270-012-0260-1
   Clark Tony., 2013, Dagstuhl Reports, V3, P188
   Clayberg E., 2006, ECLIPSE BUILDING COM, V2nd
   Colton D., 1983, INTEGRAL EQUATION ME
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   DeVito Z., 2011, P 2011 INT C HIGH PE
   Dongarra J. J., 2014, SIGARCH COMPUT ARCHI, V20, P22
   Foxy G., 1996, 2 PAS WORKSH SYST SO
   Gamatié A, 2011, ACM T EMBED COMPUT S, V10, DOI 10.1145/2043662.2043663
   Gonnord J., 2006, RECHERCHE, V393, P39
   Gorden M, 1965, Electronics, V38, P114, DOI [DOI 10.1109/N-SSC.2006.4785860, DOI 10.1109/JPROC.1998.658762]
   Grospellier G., 2009, POOSC 09 ACM
   Group O. M, 2006, TECHNICAL REPORT
   Group O.M., 2011, TECHNICAL REPORT
   Hanson Robert., 2007, GWT in Action: Easy Ajax with the Google Web Toolkit
   Harrington R., 2001, IEEE Press Series on Electromagnetic Wave Theory)
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kalliamvakou E., 2015, 2015 IEEE ACM 7 INT
   Kepner J, 2004, INT J HIGH PERFORM C, V18, P393, DOI 10.1177/1094342004048533
   KhronosGroup, 2011, TECHNICAL REPORT
   Kiczales G., 1997, ASPECT ORIENTED PROG
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Larus J, 2009, COMMUN ACM, V52, P62, DOI 10.1145/1506409.1506425
   Merali Z, 2010, NATURE, V467, P775, DOI 10.1038/467775a
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nanthaamornphong A., 2013, P 1 INT WORKSH SOFTW, P9
   Nassiet Didier, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P69, DOI 10.1007/978-3-642-25264-8_7
   Northover S., 2004, THE ECLIPSE SERIES
   Oudin H., 2008, METHODE ELEMENTS FIN
   Palyart M., 2012, 1 INT WORKSH MOD DRI
   Palyart M., 2012, THESIS
   Palyart M., 2011, 15 SYSTEM DESIGN LAN
   Palyart M, 2011, LECT NOTES COMPUT SC, V6981, P213, DOI 10.1007/978-3-642-24485-8_16
   Reid J., 2010, SIGPLAN FORTRAN FORU, V29
   Shan HZ, 2001, INT J PARALLEL PROG, V29, P283, DOI 10.1023/A:1011120120698
   Shankland S., 2014, CNET
   Snir Marc., 1996, MPI: The Complete Reference
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Stone JE, 2010, COMPUT SCI ENG, V12, P66, DOI 10.1109/MCSE.2010.69
   Weiland M., 2007, TECHNICAL REPORT
   [No title captured]
NR 59
TC 5
Z9 5
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 319
EP 342
DI 10.1007/s10270-016-0518-0
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100016
DA 2024-07-18
ER

PT J
AU Semeráth, O
   Barta, A
   Horváth, A
   Szatmári, Z
   Varró, D
AF Semerath, Oszkar
   Barta, Agnes
   Horvath, Akos
   Szatmari, Zoltan
   Varro, Daniel
TI Formal validation of domain-specific languages with derived features and
   well-formedness constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language validation; Derived features; Partial snapshots; Model queries;
   SMT solvers
AB Despite the wide range of existing tool support, constructing a design environment for a complex domain-specific language (DSL) is still a tedious task as the large number of derived features and well-formedness constraints complementing the domain metamodel necessitate special handling. Such derived features and constraints are frequently defined by declarative techniques (such graph patterns or OCL invariants). However, for complex domains, derived features and constraints can easily be formalized incorrectly resulting in inconsistent, incomplete or ambiguous DSL specifications. To detect such issues, we propose an automated mapping of EMF metamodels enriched with derived features and well-formedness constraints captured as graph queries in EMF-IncQuery or (a subset of) OCL invariants into an effectively propositional fragment of first-order logic which can be efficiently analyzed by back-end reasoners. On the conceptual level, the main added value of our encoding is (1) to transform graph patterns of the EMF-IncQuery framework into FOL and (2) to introduce approximations for complex language features (e.g., transitive closure or multiplicities) which are not expressible in FOL. On the practical level, we identify and address relevant challenges and scenarios for systematically validating DSL specifications. Our approach is supported by a tool, and it will be illustrated on analyzing a DSL in the avionics domain. We also present initial performance experiments for the validation using Z3 and Alloy as back-end reasoners.
C1 [Semerath, Oszkar; Barta, Agnes; Horvath, Akos; Szatmari, Zoltan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Varró, D (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM semerath@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Szatmári, Zoltán/I-6052-2012; Semeráth,
   Oszkár/AAD-2125-2022
OI Varro, Daniel/0000-0002-8790-252X; Semeráth, Oszkár/0000-0002-3592-5105
FU CERTIMOT (Design and Analysis Techniques for Certifiable Model
   Transformations) project [ERC_HU-09-01-2010-0003, ART-2012-333053];
   TAMOP project [4.2.2.C-11/1/KONV-2012-0001]
FX This work was motivated by the FP7 ARTEMIS CONCERTO (ART-2012-333053)
   project, partially supported by the CERTIMOT (Design and Analysis
   Techniques for Certifiable Model Transformations,
   ERC_HU-09-01-2010-0003) project, the TAMOP (4.2.2.C-11/1/KONV-2012-0001)
   project, a collaborative project with Embraer, the ARTEMIS JU and the
   Hungarian National Research, Development and Innovation Fund in the
   frame of the R5-COP (Reconfigurable ROS-based Resilient Reasoning
   Robotic Cooperating Systems) project.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], LNCS
   [Anonymous], ACM IEEE 17 INT C MO
   [Anonymous], P VERIFY WORKSH FED
   [Anonymous], 2013, Technical report
   [Anonymous], 2010, 3 INT C SOFTW LANG E, DOI DOI 10.1007/978-3-642-19440-5_7
   [Anonymous], DIG AV SYST C DASC
   [Anonymous], OBJ CONSTR LANG V2 0
   Antkiewicz M., 2013, SPLC
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Brucker A.D., 2007, HOL OCL TOOL 2007
   Buttner Fabian, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P244, DOI 10.1007/978-3-642-31491-9_19
   Buttner F., 2012, LNCS, V7590
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot J, 2010, SOFTW SYST MODEL, V9, P335, DOI 10.1007/s10270-009-0129-0
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Clavel M., 2008, ITP OCL TOOL
   Clavel M., 2009, ECEASST, V24
   Cunha A, 2015, SOFTW SYST MODEL, V14, P5, DOI 10.1007/s10270-013-0353-5
   Dania Carolina., 2013, OCL@MoDELS, CEUR Workshop Proceedings, V1092, P53
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Grönniger H, 2009, LECT NOTES COMPUT SC, V5522, P152, DOI 10.1007/978-3-642-02138-1_10
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson Ethan K., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P399, DOI 10.1007/978-3-642-33666-9_26
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   Kuhlmann M., 2012, P 15 INT C MODEL DRI, V7590, P415, DOI DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Liang Jia., 2012, Solving clafer models with choco
   Lúcio L, 2010, LECT NOTES COMPUT SC, V6394, P136
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Olaechea R., 2012, INT WORKSH NONF SYST
   PISKAC R., 2008, MSRTR2008181
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Rath Istvan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P102, DOI 10.1007/978-3-642-31491-9_10
   RTCA S.C., 2011, DO178C RTCA SC
   SAE International, 2009, AS5506A SAE
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Semeráth O, 2013, LECT NOTES COMPUT SC, V8107, P538, DOI 10.1007/978-3-642-41533-3_33
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Shah SeyyedM. A., 2009, P 6 INT WORKSHOP MOD, P1
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Willink E D., 2012, Proc. of the 12th Workshop on OCL and Textual Modelling, P13
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
NR 51
TC 22
Z9 24
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 357
EP 392
DI 10.1007/s10270-015-0485-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Cortes-Cornax, M
   Dupuy-Chessa, S
   Rieu, D
   Mandran, N
AF Cortes-Cornax, Mario
   Dupuy-Chessa, Sophie
   Rieu, Dominique
   Mandran, Nadine
TI Evaluating the appropriateness of the BPMN 2.0 standard for modeling
   service choreographies: using an extended quality framework
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service choreographies; Language quality framework; BPMN 2.0; Evaluation
ID METRICS
AB The concept of choreography has emerged over the past years as a foundational concept for capturing and managing collaborative business processes. The latest version of the Business Process Modeling Notation (BPMN 2.0) adopts choreography as a first-class citizen. However, it remains an open question whether BPMN 2.0 is actually appropriate for capturing this concept. In this paper, we extend an existing language evaluation framework in order to evaluate the support for choreographies in BPMN 2.0. The framework provides a means of identifying the strengths and weaknesses of BPMN 2.0 for choreographies. We also give potential solutions that may be taken into account in future extensions or improvements to BPMN 2.0.
C1 [Cortes-Cornax, Mario; Dupuy-Chessa, Sophie; Rieu, Dominique] Univ Grenoble Alpes, SIGMA Team, Lab Informat Grenoble, 220 Rue Chim,BP 53, F-38041 Grenoble 9, France.
   [Mandran, Nadine] Univ Grenoble Alpes, PIMLIG Team, Lab Informat Grenoble, 220 Rue Chim,BP 53, F-38041 Grenoble 9, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Cortes-Cornax, M (corresponding author), Univ Grenoble Alpes, SIGMA Team, Lab Informat Grenoble, 220 Rue Chim,BP 53, F-38041 Grenoble 9, France.
EM Mario.Cortes-Cornax@imag.fr
OI CORTES-CORNAX, Mario/0000-0003-2635-319X
FU ANR MOANO project
FX We should like to thank Andreas Schonberger for valuable discussions on
   choreography integration requirements. We are also grateful to Marlon
   Dumas and Alistar Barros for useful feedback in the analysis of BPMN
   2.0. This work was supported by the ANR MOANO project. All URLs were
   checked on November 15, 2013.
CR Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   [Anonymous], 2004, XML Schema Part 2: Datatypes
   [Anonymous], 2003, UML UNIFIED PROCESS, DOI DOI 10.4018/978-1-93177-744-5.CH001
   [Anonymous], BUS PROC MOD NOT BPM
   [Anonymous], 2010, 92412102009 DIS I IS
   [Anonymous], P 16 AUSTR C INF SYS
   Barker A, 2009, IEEE T SERV COMPUT, V2, P152, DOI 10.1109/TSC.2009.8
   Barros A, 2005, LECT NOTES COMPUT SC, V3649, P302, DOI 10.1007/11538394_20
   Barros A., 2005, BPTrends Newsletter, V3, P1
   Barros A., 2007, P WORKSH SOFTW ENG M, V244
   Barros A, 2007, LECT NOTES COMPUT SC, V4422, P245
   Barros A, 2010, INT HANDB INFORM SYS, P257, DOI 10.1007/978-3-642-00416-2_12
   Cook T., 1979, UML, V1
   Cornax MC, 2011, IFIP ADV INF COMM TE, V351, P190
   Cortes-Cornax M, 2011, 2011 5 INT C RES CHA, P1
   Cortes-Cornax M., 2012, P 4 CENTR EUR WORKSH, V847, P50
   Cortes-Cornax M, 2011, LECT NOTES BUS INF P, V95, P103
   D'Ambrogio A., 2007, P 6 INT WORKSHOP SOF, P78
   Decker G, 2008, LECT NOTES COMPUT SC, V5074, P79
   Decker G, 2011, INFORM SYST, V36, P292, DOI 10.1016/j.is.2010.06.005
   Decker G, 2008, IT-INF TECHNOL, V50, P122, DOI 10.1524/itit.2008.0473
   Decker G, 2009, DATA KNOWL ENG, V68, P946, DOI 10.1016/j.datak.2009.04.003
   Decker G, 2007, LECT NOTES COMPUT SC, V4803, P24
   Dijkman R, 2004, INT J COOP INF SYST, V13, P337, DOI 10.1142/S0218843004001012
   Dobson G, 2005, EUROMICRO-SEAA 2005: 31st EUROMICRO Conference on Software Engineering and Advanced Applications, Proceedings, P80
   DUBRAY JJ, 2006, EBXML BUSINESS PROCE
   Dupuy-Chessa S, 2009, INT CONF RES CHAL, P343, DOI 10.1109/RCIS.2009.5089298
   Evitts P, 2000, UML PATTERN LANGUAGE
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Hafner M., 2005, REALIZING MODEL DRIV, P39
   Harel D., 2004, MESSAGE SEQUENCE CHA
   ISO/IEC, 2001, Technical Report, V1st
   Koliadis G, 2006, LECT NOTES COMPUT SC, V4303, P25
   Kopp O., 2011, EMISA HAMB SEPT, P225
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Krogstie J., 2005, INFORM MODELING METH, P63, DOI DOI 10.4018/978-1-59140-375-3.CH004
   Le Pallec X., 2013, GMLD GRAPH MOD LANG
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mancioppi M, 2010, LECT NOTES COMPUT SC, V6275, P435
   Mandran N., 2013, INGENIERIE SYSTEMES, V18
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Nysetvold A.G., 2005, Workshop on Exploring Modeling Methods in Systems Analysis, P545
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Recker J., 2006, EUR C INF SYST
   Rossi M, 1996, INFORM SYST, V21, P209, DOI 10.1016/0306-4379(96)00012-9
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schonberger A., 2009, TECHNICAL REPORT
   Schonberger A, 2011, P 4 IEEE INT C SERV
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Silver Bruce., 2009, BPMN Method and Style: A levels-based methodology for BPM process modeling and improvement using BPMN 2.0. s.l
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Wahl T., 2006, ADV TOPICS DATABASE, V5, DOI 10.4018/978-1-59140-935-9.ch006
   Weidlich M, 2009, LECT NOTES BUS INF P, V29, P71
   Wetzstein B., 2010, P 2010 ACM S APPL CO, P2485
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Zaha JM, 2006, LECT NOTES COMPUT SC, V4275, P145
NR 58
TC 9
Z9 10
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 219
EP 255
DI 10.1007/s10270-014-0398-0
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200009
DA 2024-07-18
ER

PT J
AU Eshuis, R
   Van Gorp, P
AF Eshuis, Rik
   Van Gorp, Pieter
TI Synthesizing object life cycles from business process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process models; State machines; UML; Model transformation
ID PETRI NETS; UML; STATECHARTS; BEHAVIOR; FLOW
AB Unified modeling language (UML) activity diagrams can model the flow of stateful business objects among activities, implicitly specifying the life cycles of those objects. The actual object life cycles are typically expressed in UML state machines. The implicit life cycles in UML activity diagrams need to be discovered in order to derive the actual object life cycles or to check the consistency with an existing life cycle. This paper presents an automated approach for synthesizing a UML state machine modeling the life cycle of an object that occurs in different states in a UML activity diagram. The generated state machines can contain parallelism, loops, and cross-synchronization. The approach makes life cycles that have been modeled implicitly in activity diagrams explicit. The synthesis approach has been implemented using a graph transformation tool and has been applied in several case studies.
C1 [Eshuis, Rik] Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
   [Van Gorp, Pieter] Eindhoven Univ Technol, Sch Ind Engn, POB 513, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology
RP Eshuis, R (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM h.eshuis@tue.nl; p.m.e.v.gorp@tue.nl
RI Van Gorp, Pieter/L-9144-2013; Eshuis, Rik/D-7042-2011
OI Van Gorp, Pieter/0000-0001-5197-3986; Eshuis, Rik/0000-0003-2314-7155
CR [Anonymous], UN BUS LANG VERS 2 1
   [Anonymous], HDB ARCHITECTURES IN
   [Anonymous], FORMAL20110103 OMG B
   [Anonymous], FORMAL20100505 OMG U
   [Anonymous], FORMAL20030301 OMG U
   [Anonymous], 1 WORKSH COMP EV MOD
   [Anonymous], ROS
   [Anonymous], ADDISON WESLEY OBJEC
   [Anonymous], 2011, P DES AUT TEST EUR U
   [Anonymous], COOP INFORMAT SYST
   [Anonymous], OBJECT ORIENTED LIFE
   Börger E, 2000, LECT NOTES COMPUT SC, V1816, P293
   Cabanillas Cristina, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P352, DOI 10.1007/978-3-642-21640-4_27
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Dumas M, 2005, LECT NOTES COMPUT SC, V3649, P236, DOI 10.1007/11538394_16
   Engels G., 2001, Software Engineering Notes, V26, P186, DOI 10.1145/503271.503235
   Engels G, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P85
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Eshuis Rik, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P307, DOI 10.1007/978-3-642-34002-4_24
   Eshuis R, 2013, FORM ASP COMPUT, V25, P659, DOI 10.1007/s00165-011-0204-5
   Eshuis R, 2009, LECT NOTES COMPUT SC, V5850, P239, DOI 10.1007/978-3-642-05089-3_16
   ESPARZA J, 1994, INFORM COMPUT, V114, P50, DOI 10.1006/inco.1994.1080
   Giese H, 1999, LECT NOTES COMPUT SC, V1723, P534
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D, 2004, LECT NOTES COMPUT SC, V3147, P325
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   HECHT MS, 1974, J ACM, V21, P367, DOI 10.1145/321832.321835
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4714, P165
   Kumaran S, 2008, LECT NOTES COMPUT SC, V5074, P32
   Lin CP, 2005, INT J COMPUT INTEG M, V18, P107, DOI 10.1080/0951192052000288242
   Liu R, 2005, LECT NOTES COMPUT SC, V3649, P268, DOI 10.1007/11538394_18
   Massink M, 2006, J LOGIC ALGEBR PROGR, V69, P1, DOI 10.1016/j.jlap.2006.03.001
   Mendling J, 2008, J ENTERP INF MANAG, V21, P525, DOI 10.1108/17410390810904274
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Cardona PAN, 2015, CUAD ACT, P154
   Redding G, 2008, INFORM SYST MANAGE, V25, P319, DOI 10.1080/10580530802384324
   Van Gorp P, 2010, LECT NOTES COMPUT SC, V6395, P258
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Whittle J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656252
NR 40
TC 8
Z9 9
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 281
EP 302
DI 10.1007/s10270-014-0406-4
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200011
DA 2024-07-18
ER

PT J
AU Ab Rahim, L
   Whittle, J
AF Ab Rahim, Lukman
   Whittle, Jon
TI A survey of approaches for verifying model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformations; Verification; Survey
ID SPECIFICATION; VERIFICATION; SEMANTICS; CONSTRUCTION; VALIDATION; PROOF
AB As with other software development artifacts, model transformations are not bug-free and so must be systematically verified. Their nature, however, means that transformations require specialist verification techniques. This paper brings together current research on model transformation verification by classifying existing approaches along two dimensions. Firstly, we present a coarse-grained classification based on the technical details of the approach (e.g., testing, theorem proving, model checking). Secondly, we present a finer-grained classification which categorizes approaches according to criteria such as level of formality, transformation language, properties verified. The purpose of the survey is to bring together research in model transformation verification to act as a resource for the community. Furthermore, based on the survey, we identify a number of trends in current and past research on model transformation verification.
C1 [Ab Rahim, Lukman] Univ Teknol PETRONAS, Dept Comp & Informat Sci, Tronoh 31750, Perak, Malaysia.
   [Whittle, Jon] Univ Lancaster, Sch Comp & Commun, InfoLab21, Lancaster LA1 4WA, England.
C3 Universiti Teknologi Petronas; Lancaster University
RP Ab Rahim, L (corresponding author), Univ Teknol PETRONAS, Dept Comp & Informat Sci, Tronoh 31750, Perak, Malaysia.
EM lukmanrahim@petronas.com.my; j.n.whittle@lancaster.ac.uk
OI Ab. Rahim, Lukman/0000-0002-7320-7980
FU Universiti Teknologi PETRONAS; Lancaster University; ORSAS grant
   (Overseas Research Students Award Scheme)
FX The research described in this paper was part of a Ph.D. research
   project sponsored by Universiti Teknologi PETRONAS, Lancaster University
   and an ORSAS grant (Overseas Research Students Award Scheme).
CR Ab Rahim L, 2010, LECT NOTES COMPUT SC, V6394, P166
   Amelunxen C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P807, DOI 10.1145/1368088.1368206
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   [Anonymous], 1980, To H. B. Curry: Essays on Combinatory Logic, -calculus and Formalism
   [Anonymous], 1992, TECHNICAL REPORT
   [Anonymous], P 3 WORKSH BEH MOD
   Asztalos M., 2009, MODEVVA 09, P1
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P70
   Balser M, 2000, LECT NOTES COMPUT SC, V1783, P363
   Barbosa P, 2009, J UNIVERS COMPUT SCI, V15, P2196
   Barbosa PES, 2009, IEEE ANNU SOFTW ENG, P33, DOI 10.1109/SEW.2008.8
   Baudry B., 2006, ECMDA WORKSH INT MOD
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blech J., 2005, FUJABA DAYS 2005, P49
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   Bouhoula A, 2000, THEOR COMPUT SCI, V236, P35, DOI 10.1016/S0304-3975(99)00206-6
   Brooks F. P, 1995, MYTHICAL MAN MONTH A
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   BUTH B, 1992, LECT NOTES COMPUT SC, V641, P141
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Cariou E., 2004, WORKSH OCL MOD DRIV
   Caspi P, 2003, ACM SIGPLAN NOTICES, V38, P153, DOI 10.1145/780731.780754
   Chaki S, 2007, LECT NOTES COMPUT SC, V4735, P666
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Clavel M, 2006, LECT NOTES COMPUT SC, V4019, P368
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Darabos Andrea., 2006, Proceedings of the 5th International Workshop on Graph Transformations and Visual Modeling Techniques, P69
   Denney E., 2005, P 2005 IEEE AEROSPAC, P1
   Denney E, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P77
   Egea M, 2010, INNOV SYST SOFTW ENG, V6, P73, DOI 10.1007/s11334-009-0108-1
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Fleurey F, 2004, SIVOES-MODEVA 2004, PROCEEDINGS, P29, DOI 10.1109/MODEVA.2004.1425846
   Fleurey F., 2007, SOFTWARE SYSTEM MODE, P1026
   Garcia M., 2007, SOFTWARE ENG, P107
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Goos G, 2002, ELECT NOTES THEOR CO, V65, P1
   Harrison R, 1995, INFORM SOFTWARE TECH, V37, P701, DOI 10.1016/0950-5849(96)81747-2
   Hermann F, 2011, LECT NOTES COMPUT SC, V6981, P668, DOI 10.1007/978-3-642-24485-8_49
   Hoare T, 2003, LECT NOTES COMPUT SC, V2622, P262
   Holten D, 2008, COMPUT GRAPH FORUM, V27, P759, DOI 10.1111/j.1467-8659.2008.01205.x
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Izerrouken N., 2008, EL P 4 EUR C REAL TI
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Jayaraman P, 2007, LECT NOTES COMPUT SC, V4735, P151
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   KAPOVA L, 2010, P 6 INT C QUAL SOFTW, V6093, P151
   Karsai G, 2007, LECT NOTES COMPUT SC, V4888, P1
   Kolovos D., 2009, THE EPSILON BOOK
   Kolovos D., 2006, GAMMA 06, P13, DOI DOI 10.1145/1138304.1138308
   Kübler J, 2009, LECT NOTES COMPUT SC, V5562, P50, DOI 10.1007/978-3-642-02674-4_5
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   Küster JM, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P145
   Lamari M, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P998, DOI 10.1145/1244002.1244220
   Lamport L, 2006, LECT NOTES COMPUT SC, V4167, P151
   Lamport L, 2009, LECT NOTES COMPUT SC, V5684, P36, DOI 10.1007/978-3-642-03466-4_2
   Lano Kevin, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P47, DOI 10.1007/978-3-642-21732-6_4
   Lano K, 2008, INT CONF QUAL SOFTW, P45, DOI 10.1109/QSIC.2008.38
   Lano KV, 2010, LECT NOTES COMPUT SC, V6396, P199, DOI 10.1007/978-3-642-16265-7_15
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   Lin YH, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P219, DOI 10.1007/3-540-28554-7_10
   Lúcio L, 2010, LECT NOTES COMPUT SC, V6394, P136
   Mottu Jean-Marie, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P105, DOI 10.1109/ICSTW.2008.27
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4199, P589
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Namjoshi KS, 2001, LECT NOTES COMPUT SC, V2102, P2
   Narayanan A, 2008, ELECTRON NOTES THEOR, V211, P191, DOI 10.1016/j.entcs.2008.04.041
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Orejas F, 2009, LECT NOTES COMPUT SC, V5700, P140
   Pnueli A., 1998, International Journal on Software Tools for Technology Transfer, V2, P192, DOI 10.1007/s100090050027
   Poernomo I, 2008, LECT NOTES COMPUT SC, V5063, P214, DOI 10.1007/978-3-540-69927-9_15
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Rahimi S. Kolahdouz, 2011, 2011 CSI International Symposium on Computer Science and Software Engineering (CSSE 2011), P129, DOI 10.1109/CSICSSE.2011.5964000
   Reynoso L., 2005, SOFTW METR 2005 11 I, P10
   Saeki M., 2007, P INT C ADV INF SYST, P77
   Schumann J., 2003, P 36 ANN HAW INT C S, P1
   Sen Sagar, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P328, DOI 10.1109/ICST.2008.62
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Staats M, 2008, LECT NOTES COMPUT SC, V5256, P226, DOI 10.1007/978-3-540-88194-0_15
   Stenzel K, 2011, LECT NOTES COMPUT SC, V6981, P533, DOI 10.1007/978-3-642-24485-8_39
   Strecker M, 2008, ELECTRON NOTES THEOR, V203, P135, DOI 10.1016/j.entcs.2008.03.039
   Stürmer I, 2007, IEEE T SOFTWARE ENG, V33, P622, DOI 10.1109/TSE.2007.70708
   Sturmer I., 2006, P 2006 INT WORKSH SO, P45, DOI DOI 10.1145/1138474.1138483
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   van Amstel M., 2010, TECHNICAL REPORT
   van Amstel M., 2008, P 12 ECOOP WORKSH QU, P41
   van Amstel Marcel F., 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P108, DOI 10.1007/978-3-642-21732-6_8
   van Amstel M. F., 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P69, DOI 10.1109/COMPSACW.2010.22
   van Amstel MF, 2009, LECT NOTES COMPUT SC, V5563, P239, DOI 10.1007/978-3-642-02408-5_17
   Van Baalen J, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/ASE.1998.732661
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Varro Daniel., 2003, Critical Systems Development workshop in UML03: 6th International Conference on the Unified Modeling Language, LNCS, V2863, P63
   Vignaga A, 2009, MEASURING ATL TRANSF
   Vignaga A, 2009, TECHNICAL REPORT
   Wang J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P432, DOI 10.1109/ASWEC.2008.42
   Wang JH, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P270
   Whitaker J., 2005, Media Methods, P32
   Whittle J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P395, DOI 10.1109/ASE.2001.989837
   Wimmer M., 2009, P 9 OOPSLA WORKSH DO
   Zelenov S., 2006, 2 INT S LEV APPL FOR, P75
NR 108
TC 56
Z9 59
U1 2
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 1003
EP 1028
DI 10.1007/s10270-013-0358-0
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400027
DA 2024-07-18
ER

PT J
AU Ernst, G
   Schellhorn, G
   Reif, W
AF Ernst, Gidon
   Schellhorn, Gerhard
   Reif, Wolfgang
TI Verification of B trees by integration of shape analysis and interactive
   theorem proving
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Theorem proving; Shape analysis; B+ trees; Pointer structures
AB Interactive proofs of correctness of pointer-manipulating programs tend to be difficult. We propose an approach that integrates shape analysis and interactive theorem proving, namely three-valued logic analyzer (TVLA) and KIV. The approach uses shape analysis to automatically discharge proof obligations for various data structure properties, such as "acyclicity". To this purpose, we define a mapping between typed algebraic heaps and TVLA. We verify the main operations of B trees by decomposing the problem into three layers: The top-level is an interactive proof of the main recursive procedures. The actual modifications of the data structure are verified with shape analysis. TVLA itself relies on problem-specific constraints and lemmas, that were proven in KIV as a foundation for an overall correct analysis.
C1 [Ernst, Gidon; Schellhorn, Gerhard; Reif, Wolfgang] Univ Augsburg, D-86159 Augsburg, Germany.
C3 University of Augsburg
RP Ernst, G (corresponding author), Univ Augsburg, D-86159 Augsburg, Germany.
EM ernst@informatik.uni-augsburg.de; schellhorn@informatik.uni-augsburg.de;
   reif@informatik.uni-augsburg.de
OI Reif, Wolfgang/0000-0002-4086-0043; Ernst, Gidon/0000-0002-3289-5764
CR [Anonymous], 2010, J AUTOM REASONING, V45, P354
   Bayer R., 1972, Acta Informatica, V1, P173, DOI 10.1007/BF00288683
   Blanchette JC, 2010, LECT NOTES COMPUT SC, V6172, P131, DOI 10.1007/978-3-642-14052-5_11
   Bogudlov I, 2007, LECT NOTES COMPUT SC, V4590, P221
   Chang BYE, 2008, ACM SIGPLAN NOTICES, V43, P247, DOI 10.1145/1328897.1328469
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Distefano D, 2008, ACM SIGPLAN NOTICES, V43, P213, DOI 10.1145/1449955.1449782
   Ernst G., 2011, KIV TVLA PROOFS B TR
   Ernst G, 2011, LECT NOTES COMPUT SC, V7041, P188, DOI 10.1007/978-3-642-24690-6_14
   Fielding E., 1980, TECHNICAL REPORT
   Gallier J.H., 1985, Logic for computer science: foundations of automatic theorem proving
   Gopan D, 2005, ACM SIGPLAN NOTICES, V40, P338, DOI 10.1145/1047659.1040333
   GULWANI S, 2009, P 36 ANN S PRINC PRO, V44, P239
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Herter J., 2008, THESIS U SAARBRUCKEN
   Loginov A, 2006, LECT NOTES COMPUT SC, V4134, P261
   Malecha G, 2010, ACM SIGPLAN NOTICES, V45, P237, DOI 10.1145/1707801.1706329
   Reif W, 1998, APPL LOG SER, V9, P13
   Reineke J., 2006, WORKSH TRUSTW SOFTW
   Rinetzky N, 2005, LECT NOTES COMPUT SC, V3672, P284
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   Sexton A, 2008, ELECTRON NOTES THEOR, V218, P355, DOI 10.1016/j.entcs.2008.10.021
   Yorsh G, 2004, LECT NOTES COMPUT SC, V2988, P530
NR 23
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 27
EP 44
DI 10.1007/s10270-013-0320-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100004
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
AF Guerra, Esther
   de lara, Juan
TI Colouring: execution, debug and analysis of QVT-relations
   transformations through coloured Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model-to-model transformations; QVT-relations;
   Coloured Petri nets; Validation and verification
ID MODELS
AB QVT is the standard language sponsored by the OMG to specify model-to-model transformations. It includes three different languages, being QVT-relations (QVT-R) the one with higher-level of abstraction. Unfortunately, there is scarce tool support for it nowadays, with incompatibilities and disagreements between the few tools implementing it, and lacking support for the analysis and verification of transformations. Part of this situation is due to the fact that the standard provides only a semi-formal semantics for QVT-R. In order to alleviate this situation, this paper provides a semantics for QVT-R through its compilation into coloured Petri nets. The theory of coloured Petri nets provides useful techniques to analyse transformations (e.g. detecting relation conflicts, or checking whether certain structures are generated or not in the target model) as well as to determine their confluence and termination given a starting model. Our semantics is flexible enough to permit the use of QVT-R specifications not only for transformation and check-only scenarios, but also for model matching and model comparison, not covered in the original standard. As a proof of concept, we report on the use of CPNTools for the execution, debugging, verification and validation of transformations, and on a tool chain (named Colouring) to transform QVT-R specifications and their input models into the input format of CPNTools, as well as to export and visualize the transformation results back as models.
C1 [Guerra, Esther; de lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM esther.guerra@uam.es; juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity (project "Go Lite")
   [TIN2011-24139]; R&D programme of the Madrid Region (project "e-Madrid")
   [S2009/TIC-1650]
FX This work was funded by the Spanish Ministry of Economy and
   Competitivity (project "Go Lite" TIN2011-24139) and the R&D programme of
   the Madrid Region (project "e-Madrid" S2009/TIC-1650).
CR [Anonymous], 2007, THESIS U POLITECNICA
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], 2007, LNCS
   Barkaoui K., 1993, Applications and Theory of Petri Nets 1993. 14th International Conference Proceedings, P69
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Clarke EM, 1999, MODEL CHECKING, P1
   de Lara J, 2009, LECT NOTES COMPUT SC, V5795, P256, DOI 10.1007/978-3-642-04425-0_19
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Evangelista S, 2005, LECT NOTES COMPUT SC, V3707, P202
   Garcia M., 2008, P 2 WORKSHOP MDSD TO, P21
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra E., 2011, SOFTW SYST IN PRESS
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Heng A., 1996, P INT WORKSHOP DISCR, P169
   Jensen K., 1997, MONOGRAPHS THEORETIC
   Jouault F., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1188, DOI 10.1145/1141277.1141561
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   LANDWEBER LH, 1978, J ACM, V25, P352, DOI 10.1145/322077.322079
   Lucas F. J., 2008, CEUR P, P41
   Mellor S.J., 2004, ADDISON WESLEY OBJEC
   Ohta A, 2004, 2004 47TH MIDWEST SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL III, CONFERENCE PROCEEDINGS, P395
   Petter A, 2009, LECT NOTES COMPUT SC, V5563, P132, DOI 10.1007/978-3-642-02408-5_10
   Romeikat R, 2008, LECT NOTES COMPUT SC, V5063, P137, DOI 10.1007/978-3-540-69927-9_10
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P., 2012, SOFTW SYST IN PRESS
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   WIMMER M, 2009, ASE 09 IEEE CS, P3
NR 37
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1447
EP 1472
DI 10.1007/s10270-012-0292-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300012
DA 2024-07-18
ER

PT J
AU Mäder, P
   Cleland-Huang, J
AF Maeder, Patrick
   Cleland-Huang, Jane
TI A visual language for modeling and executing traceability queries
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Visual traceability queries; Requirements traceability; Visual query
   language; Traceability information model (TIM)
AB Current software and systems engineering tools provide only basic trace features, and as a result users are often compelled to construct non-trivial traceability queries using generic query languages such as SQL. In this paper, we present an alternative approach which defines traceability strategies for a project using UML class diagrams and then constructs trace queries as constraints upon subsets of the model. The visual trace modeling language (VTML) allows users to model a broad range of trace queries while hiding underlying technical details and data structures. The viability and expressiveness of VTML for use in a real project are demonstrated through modeling a broadly representative set of queries for a web-based health-care system. It is then evaluated through an experiment with human users to assess the readability and writability of VTML queries in comparison to generic SQL queries. We found that users read and constructed traceability queries considerably faster using VTML than using SQL. Furthermore, visually constructed traceability queries were substantially more correct compared to the same queries constructed with SQL.
C1 [Maeder, Patrick] Depaul Univ, Software & Requirements Engn Ctr, Chicago, IL 60604 USA.
   [Cleland-Huang, Jane] Depaul Univ, Sch Comp, Syst & Requirements Engn Ctr, Chicago, IL 60604 USA.
C3 DePaul University; DePaul University
RP Mäder, P (corresponding author), Depaul Univ, Software & Requirements Engn Ctr, Chicago, IL 60604 USA.
EM pmader@cdm.depaul.edu; jhuang@cs.depaul.edu
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
FU National Science Foundation [CCF: 0810924]
FX The authors would like to thank all participants of the experiment for
   their dedicated work. Furthermore, the authors would also like to thank
   the anonymous reviewers of an earlier version of this paper for their
   useful suggestions for improving the final paper. This work was
   partially funded by the National Science Foundation grant #CCF: 0810924.
CR [Anonymous], P 4 EUR C MOD DRIV A
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   de Leon DC, 2006, IEEE T SOFTWARE ENG, V32, P790, DOI 10.1109/TSE.2006.103
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Gotel O., 2012, Software and Systems Traceability, P343, DOI DOI 10.1007/978
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Hendrickson SA, 2005, PROG COMPREHEN, P227, DOI 10.1109/WPC.2005.6
   Jaakkola H, 2003, LECT NOTES COMPUT SC, V2814, P129
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   Jirapanthong W, 2009, SOFTW SYST MODEL, V8, P117, DOI 10.1007/s10270-007-0066-8
   KIM HJ, 1988, SOFTWARE PRACT EXPER, V18, P169, DOI 10.1002/spe.4380180302
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Mader P., 2009, P 17 INT REQ ENG C R
   Mäder P, 2010, LECT NOTES COMPUT SC, V6394, P226
   Maletic JI, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P16, DOI 10.1109/TEFSE.2009.5069577
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Schwarz H, 2010, IEEE INT C ENG COMP, P183, DOI [10.1109/ICECCS.2010.27, 10.1109/ICECCS.2010.66]
   SHERBA SA, 2003, 2 INT WORKSH TRAC EM
   Störrle H, 2011, J VISUAL LANG COMPUT, V22, P3, DOI 10.1016/j.jvlc.2010.11.004
   WIERINGA R, 1995, IR389 FAC MATH COMP
   Yin R.K., 2011, Qualitative research from start to finish
   Zhang Y, 2006, 3 INT WORKSH MET SCH
   ZLOOF MM, 1977, IBM SYST J, V16, P324, DOI 10.1147/sj.164.0324
   [No title captured]
   [No title captured]
   [No title captured]
NR 28
TC 22
Z9 22
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 537
EP 553
DI 10.1007/s10270-012-0237-0
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300009
DA 2024-07-18
ER

PT J
AU Bergmann, G
   Ráth, I
   Varró, G
   Varró, D
AF Bergmann, Gabor
   Rath, Istvan
   Varro, Gergely
   Varro, Daniel
TI Change-driven model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Incremental model transformation; Change models; Change-driven
   transformations
ID DIFFERENCE; GRAMMARS; PATTERN
AB In this paper, we investigate change-driven model transformations, a novel class of transformations, which are directly triggered by complex model changes carried out by arbitrary transactions on the model (e.g. editing operation, transformation, etc). After a classification of relevant change scenarios, we identify challenges for change-driven transformations. As the main technical contribution of the current paper, we define an expressive, high-level language for specifying change-driven transformations as an extension of graph patterns and graph transformation rules. This language generalizes previous results on live model transformations by offering trigger events for arbitrarily complex model changes, and dedicated reactions for specific kinds of changes, making this way the concept of change to be a first-class citizen of the transformation language. We discuss how the underlying transformation engine needs to be adapted in order to use the same language uniformly for different change scenarios. The technicalities of our approach will be discussed on a (1) model synchronization case study with non-materialized target models and (2) a case study on detecting the violation of evolutionary (temporal) constraints in the security requirements engineering domain.
C1 [Bergmann, Gabor; Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1117 Budapest, Hungary.
   [Varro, Gergely] Tech Univ Darmstadt, Real Time Syst Lab, D-64283 Darmstadt, Germany.
C3 Budapest University of Technology & Economics; Technical University of
   Darmstadt
RP Ráth, I (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM rath@mit.bme.hu
RI Varro, Daniel/G-8963-2012; Bergmann, Gábor/Q-6400-2019; Varro,
   Daniel/AAC-4234-2022; Rath, Istvan/E-4846-2013
OI Bergmann, Gábor/0000-0002-2556-2582; Varro, Daniel/0000-0002-8790-252X;
   Rath, Istvan/0000-0002-5516-696X; Perez del Campo,
   Lorenzo/0000-0002-4647-5453
FU EU [ICT-FET-231101]; Alexander von Humboldt Foundation; Center for
   Advanced Security Research Darmstadt; Janos Bolyai Scholarship
FX We would like to thank the anonymous reviewers for their insightful
   advice. This work was partially supported by EU project SecureChange
   (ICT-FET-231101). The third author was partially supported by the
   Postdoctoral Research Fellowship of the Alexander von Humboldt
   Foundation and associated with the Center for Advanced Security Research
   Darmstadt. The fourth author was partially supported by the Janos Bolyai
   Scholarship.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Becker Simon M., 2005, SOFTWARE SYSTEMS MOD, V4, P123
   Bergmann G., 2008, ICGT2008 4 INT C GRA
   Bergmann Gabor., 2008, GRAMOT 08
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Dittrich K.R., 1995, LNCS, V985, P1
   Ducasse S., 1999, FAMOOS OBJE IN PRESS
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Fabro M.D.D., 2005, P 1 JOURN ING DIR MO
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Garcia-Molina H., 2001, Database Systems: The Complete Book
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Gruschko B., 2007, P INT WORKSH MOD DRI
   Guerra E, 2004, LECT NOTES COMPUT SC, V3256, P54
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Haley C. B., 2005, VALIDATING SECURITY
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Hegedus A., 2010, P 8 INT C S IN PRESS
   HORVATH A, 2007, P 6 INT WORKSH GRAPH, P57
   Jimenez A.M., 2005, THESIS U QUEENSLAND
   Klar Felix., 2007, P THE 6 JOINT M EURO, P285
   KOTH O, 2000, GRATRA 2000 JOINT AP, P32
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mouratidis H., 2002, AG OR METH WORKSH OB
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Olsson T., 2002, P 2002 IASTED INT C
   OMG, 2008, MOF QUER VIEW TRANSF
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   RATH I, 2008, 2008 IEEE S VIS LANG
   Rath I., 2009, P MODELS 09
   Rath I., 2009, J SOFTW SYS IN PRESS
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   SCHURR A, 1994, SPECIFICATION GRAPH
   Seibel A., 2009, SOFTW SYST MODEL, V009
   Seiriö M, 2005, LECT NOTES COMPUT SC, V3791, P98, DOI 10.1007/11580072_9
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Thein Than Tun, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P88, DOI 10.1109/SSIRI.2010.36
   Tichelaar S, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P296, DOI 10.1109/WCRE.2000.891485
   Tratt L, 2008, J OBJECT TECHNOL, V7, P107, DOI 10.5381/jot.2008.7.3.a3
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 51
TC 29
Z9 33
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 431
EP 461
DI 10.1007/s10270-011-0197-9
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600010
DA 2024-07-18
ER

PT J
AU Tran, H
   Zdun, U
   Dustdar, S
AF Tran, Huy
   Zdun, Uwe
   Dustdar, Schahram
TI VbTrace: using view-based and model-driven development to support
   traceability in process-driven SOAs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software traceability; View-based; Model-driven; Process-driven SOA;
   Tool support
ID LINKS; CODE
AB In process-driven, service-oriented architectures, there are a number of important factors that hinder the traceability between design and implementation artifacts. First of all, there are no explicit links between process design and implementation languages not only due to the differences of syntax and semantics but also the differences of granularity. The second factor is the complexity caused by tangled process concerns that multiplies the difficulty of analyzing and understanding the trace dependencies. Finally, there is a lack of adequate tool support for establishing and maintaining the trace dependencies between process designs and implementations. We present in this article a view-based, model-driven traceability approach that tackles these challenges. Our approach supports (semi-)automatically eliciting and (semi-)formalizing trace dependencies among process development artifacts at different levels of granularity and abstraction. A proof-of-concept tool support has been realized, and its functionality is illustrated via an industrial case study.
C1 [Tran, Huy; Zdun, Uwe; Dustdar, Schahram] Vienna Univ Technol, Inst Informat Syst, Distributed Syst Grp, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Tran, H (corresponding author), Vienna Univ Technol, Inst Informat Syst, Distributed Syst Grp, Argentinier Str 8-184-1, A-1040 Vienna, Austria.
EM htran@infosys.tuwien.ac.at; zdun@infosys.tuwien.ac.at;
   dustdar@infosys.tuwien.ac.at
RI Dustdar, Schahram/G-9877-2015; Zdun, Uwe/AFR-2161-2022
OI Dustdar, Schahram/0000-0001-6872-8821; Assouline Dayan,
   Yehudith/0000-0002-2851-6629
FU European Union [215175]
FX This work was supported by the European Union FP7 project COMPAS, grant
   no. 215175. We are grateful to anonymous reviewers for their
   constructive and truly helpful comments.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   ALEKSY M, 2008, PRIMIUM
   ALEXANDER I, 2003, TEFSE 03
   [Anonymous], P 2 EUR C MOD DRIV A
   [Anonymous], 2003, MOD DRIV ARCH MDA GU
   [Anonymous], WEB SERV DESCR LANG
   [Anonymous], UN MOD LANG UML 2 0
   [Anonymous], P 2006 C PATT LANG P
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   BONDE L, 2006, TRACEABILITY INTEROP, P263
   Constantopoulos P, 1995, VLDB J, V4, P1, DOI DOI 10.1007/BF01232471
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   *ECL, 2006, ECL MOD FRAM
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   EVENSON M, 2007, SEMBIZ DELIVERABLE D
   Frankel David., 2002, Model Driven Architecture: Applying MDA to Enterprise Computing
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gotel O., 1995, International Symposium on Requirements Engineering, P100
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Holmes T, 2008, LECT NOTES COMPUT SC, V5095, P246, DOI 10.1007/978-3-540-69100-6_17
   *IBM, 2006, TRAV BOOK PROC
   *INT INC, 2006, ECL STP BPMN MOD
   Kindler E, 2004, LECT NOTES COMPUT SC, V3080, P82
   Kozlenkov A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P145, DOI 10.1109/ICRE.2002.1048517
   LETELIER P, 2001, P 1 INT WORKSH TRAC, P32
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   LUCIA AD, 2008, ICSE 08, P839, DOI DOI 10.1145/1368088.1368216
   MADER P, 2007, SNPD, P700
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   MALETIC JI, 2003, TEFSE 03
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MAYR C, 2008, SERVICE WAVE, P62
   MENDLING J, 2008, OTM WORKSH, P506, DOI DOI 10.1007/11575863_70
   MENDLING J, 2005, JM20051010 WU VIENN
   MENDLING J, 2005, P 4 GI WORKSH EV DRI, V167, P41
   NASLAVSKY L, 2007, A MOST 07, P105, DOI DOI 10.1145/1291535.1291546
   *OASIS, 2007, BUS PROC EX LANG WSB
   *OMG, 2006, OBJ CONSTR LANG OCL
   *OMG, 2005, 2 REV SUBM MOF MOD T
   *OMG, 2008, BUS PROC MOD NOT BPM
   *OPENARCHITECTUREW, 2002, OPENARCHITECTUREWARE
   Ouyang C, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P285
   POHL K, 1996, ICRE, P76
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Recker J.C., 2006, Proceedings of the 18th International Conference on Advanced Information Systems Engineering, Workshops and Doctoral Consortium, P521
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   SPANOUDAKIS G, 2006, HDB SOFTWARE ENG KNO, V3, P395
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   TRAN H, 2007, LNI, V116, P105
   TRAN H, 2009, INFORM SCI REFERENCE, pCH2
   Tran H, 2008, LECT NOTES COMPUT SC, V5030, P233, DOI 10.1007/978-3-540-68073-4_23
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   *W3C, 1999, XML PATH LANG XPATH
   WALDERHAUG S, 2008, TRACEABILITY MODEL D, P133
   ZIEMANN J, 2005, P 7 INT C MOD INF TE
   Zisman A, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P448
   ZISMAN A, 2003, P ACIS 4 INT C SOFTW, P128
NR 59
TC 8
Z9 8
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 5
EP 29
DI 10.1007/s10270-009-0137-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400002
DA 2024-07-18
ER

PT J
AU Hemel, Z
   Kats, LCL
   Groenewegen, DM
   Visser, E
AF Hemel, Zef
   Kats, Lennart C. L.
   Groenewegen, Danny M.
   Visser, Eelco
TI Code generation by model transformation: a case study in transformation
   modularity
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Transformation; Transformation engineering; Term rewriting;
   Webapplication DSL; Combination of analysis and transformation
ID PROGRAM TRANSFORMATION; LANGUAGE; STRATEGIES; TOM
AB The realization of model-driven software development requires effective techniques for implementing code generators for domain-specific languages. This paper identifies techniques for improving separation of concerns in the implementation of generators. The core technique is code generation by model transformation, that is, the generation of a structured representation (model) of the target program instead of plain text. This approach enables the transformation of code after generation, which in turn enables the extension of the target language with features that allow better modularity in code generation rules. The technique can also be applied to 'internal code generation' for the translation of high-level extensions of a DSL to lower-level constructs within the same DSL using model-to-model transformations. This paper refines our earlier description of code generation by model transformation with an improved architecture for the composition of model-to-model normalization rules, solving the problem of combining type analysis and transformation. Instead of coarse-grained stages that alternate between normalization and type analysis, we have developed a new style of type analysis that can be integrated with normalizing transformations in a fine-grained manner. The normalization strategy has a simple extension interface and integrates non-local, context-sensitive transformation rules. We have applied the techniques in a realistic case study of domain-specific language engineering, i.e. the code generator for WebDSL, using Stratego, a high-level transformation language that integrates model-to-model, model-to-code, and code-to-code transformations.
C1 [Hemel, Zef; Kats, Lennart C. L.; Groenewegen, Danny M.; Visser, Eelco] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
C3 Delft University of Technology
RP Visser, E (corresponding author), Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
EM Z.Hemel@tudelft.nl; L.C.L.Kats@tudelft.nl; D.M.Groenewegen@tudelft.nl;
   visser@acm.org
OI Groenewegen, Danny/0000-0003-3400-4416; Visser,
   Eelco/0000-0002-7384-3370
CR *ANDROMDA ORG, ANDROMDA DOC
   [Anonymous], LNCS
   [Anonymous], 2006, MET FAC MOF COR SPEC
   [Anonymous], ICFP 04
   [Anonymous], JAVA SERVLET SPECIFI
   *AP FDN, 2007, VEL US GUID
   Balland E, 2007, LECT NOTES COMPUT SC, V4533, P36
   Balland E, 2008, ELECTRON NOTES THEOR, V203, P3, DOI 10.1016/j.entcs.2008.03.030
   BAST W, 2005, PTC051101 OMG
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   BRAMBILLA PFM, 2007, COMPUTER INTERACTION
   Bravenboer M, 2006, FUND INFORM, V69, P123
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   BUDINSKY F, 2003, ECLIPSE SERIES
   Burns E., 2006, JAVASERVER FACES SPE
   CACERES BVP, 2003, P WORKSH SOFTW MOD E
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   DeMichiel L., 2006, JSR 220 ENTERPRISE J
   DEURSEN A, 1993, J SYMB COMPUT, V15, P523
   Efftinge S., 2006, MOD S ECL SUMM
   Efftinge Sven, 2007, OPENARCHITECTUREWARE
   Ekman T, 2004, LECT NOTES COMPUT SC, V3086, P144
   *GOOGL COD, 2008, GOOGL APP ENG
   GRAY RW, 1992, COMMUN ACM, V35, P121, DOI 10.1145/129630.129637
   GROENEWEGEN DM, 2008, 8 INT C WEB ENG ICWE, P175
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5063, P183, DOI 10.1007/978-3-540-69927-9_13
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5301, P113, DOI 10.1007/978-3-540-87875-9_8
   HUANG SS, 2006, ICSE 06, P865
   JANSSENN N, 2005, THESIS I INFORM COMP
   Jones SLP, 1998, SCI COMPUT PROGRAM, V32, P3, DOI 10.1016/S0167-6423(97)00029-4
   JONES SP, 2003, HASKELL98 LANGUAGE L
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   KATS LCL, 2008, P 23 ACM SIGPLAN C O, P91
   KATS LCL, 2009, ELECT NOTES IN PRESS
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kelly S., 2008, Domain-Specific Modeling
   KITTOLI S, 2008, SEAM CONTEXTUAL COMP
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   KRAUS A, 2007, MODEL DRIVEN WEB ENG
   Kulkarni V, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P181
   Kurtev I., 2006, COMPANION 21 ANN ACM, P602, DOI DOI 10.1145/1176617.1176632
   MENS T, 2006, GRAPH MODEL TRANSFOR, V152, P125
   MULLER FFP, 2005, SOFTWARE SYSTEMS MOD, V4, P424
   *OMG, 2003, OMGRFPQVT MOF 2 0 QU
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   PARR TJ, 2004, WWW 04, P224, DOI DOI 10.1145/988672.988703
   PASTOR VOP, 2003, WEB ORIENTED SOFTWAR, P65
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Stahl Thomas., 2005, Model-Driven Software Development: Technology, Engineering, Management
   SUZUKI J, 1999, LECT NOTES COMPUTER, P299
   van den Brand MGJ, 2000, SOFTWARE PRACT EXPER, V30, P259, DOI 10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y
   Van Wyk E, 2007, LECT NOTES COMPUT SC, V4609, P575
   VANWIJNGAARDEN J, 2003, UUCS2003048 UTR U I
   Visser E, 2005, J SYMB COMPUT, V40, P831, DOI 10.1016/j.jsc.2004.12.011
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   Visser E, 2002, LECT NOTES COMPUT SC, V2487, P299
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
   Visser Eelco, 1998, ACM INT C FUNCT PROG, DOI DOI 10.1145/289423.289425
   Visser Eelco, 1997, Syntax Definition for Language Prototyping
   VOELTER M, 2007, DOMAIN SPECIFIC MODE
   WARMER JB, 2006, DOMAIN SPECIFIC MODE, P15
   Zook D, 2004, LECT NOTES COMPUT SC, V3286, P1
NR 66
TC 24
Z9 28
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 375
EP 402
DI 10.1007/s10270-009-0136-1
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Cimatti, A
   Geatti, L
   Gigante, N
   Montanari, A
   Tonetta, S
AF Cimatti, Alessandro
   Geatti, Luca
   Gigante, Nicola
   Montanari, Angelo
   Tonetta, Stefano
TI Fairness, assumptions, and guarantees for extended bounded response LTL
   plus P synthesis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reactive synthesis; Temporal logics; Safety reductions; Expressiveness
AB Realizability and reactive synthesis from temporal logics are fundamental problems in formal verification. The complexity of these problems for linear temporal logic with past (LTL+P) led to the identification of fragments with lower complexities and simpler algorithms. Recently, the logic of extended bounded response LTL+P (LTLEBR+P for short) has been introduced. It allows one to express safety languages definable in LTL+P and it is provided with an efficient, fully symbolic algorithm for reactive synthesis. This paper features four related contributions. First, we introduce GR-EBR, an extension of LTLEBR+P with fairness conditions, assumptions, and guarantees that, on the one hand, allows one to express properties beyond the safety fragment and, on the other, it retains the efficiency of LTLEBR+P in practice. Second, we the expressiveness of GR-EBR starting from the expressiveness of its fragments. In particular, we prove that: (1) LTLEBR+P is expressively complete with respect to the safety fragment of LTL+P, (2) the removal of past operators from LTLEBR+P results into a loss of expressive power, and (3) GR-EBR is expressively equivalent to the logic GR(1) of Bloem et al. Third, we provide a fully symbolic algorithm for the realizability problem from GR-EBR specifications, that reduces it to a number of safety subproblems. Fourth, to ensure soundness and completeness of the algorithm, we propose and exploit a general framework for safety reductions in the context of realizability of (fragments of) LTL+P. The experimental evaluation shows promising results.
C1 [Cimatti, Alessandro; Tonetta, Stefano] Fdn Bruno Kessler, Embedded Syst Unit, Via Sommar, 18, I-38123 Trento, Italy.
   [Geatti, Luca; Montanari, Angelo] Univ Udine, Dept Comp Sci, Via Sci 206, I-33100 Udine, Italy.
   [Gigante, Nicola] Free Univ Bozen Bolzano, Dept Comp Sci, Piazza Univ 1, I-39100 Bolzano, Italy.
C3 Fondazione Bruno Kessler; University of Udine; Free University of
   Bozen-Bolzano
RP Geatti, L (corresponding author), Univ Udine, Dept Comp Sci, Via Sci 206, I-33100 Udine, Italy.
EM cimatti@fbk.eu; luca.geatti@uniud.it; gigante@inf.unibz.it;
   angelo.montanari@uniud.it; tonettas@fbk.eu
RI Tonetta, Stefano/AAP-3546-2020
OI GEATTI, Luca/0000-0002-7125-787X
FU Universita degli Studi di Udine
FX Open access funding provided by Universita degli Studi di Udine within
   the CRUI-CARE Agreement.
CR [Anonymous], 1962, Proc. Internat. Congr. Mathematicians (Stockholm)
   [Anonymous], 1960, Z. Math. Logik Grundlag. Math., DOI [DOI 10.1002/MALQ.19600060105, https://doi.org/10.1002/malq.19600060105]
   [Anonymous], 1992, Ph.D. thesis
   Babiak T, 2012, LECT NOTES COMPUT SC, V7214, P95, DOI 10.1007/978-3-642-28756-5_8
   Biere A., 2011, Inst. Formal Models Verif.
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   Bloem R, 2014, LECT NOTES COMPUT SC, V8318, P1, DOI 10.1007/978-3-642-54013-4_1
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Bloem R, 2010, LECT NOTES COMPUT SC, V6174, P410, DOI 10.1007/978-3-642-14295-6_36
   BUCHI J., 1960, P INT C LOGIC METHOD
   Buchi J.R., 1990, COLLECTED WORKS JR B, P525, DOI [10.1016/S0019-9958(66)80013-X, DOI 10.1007/978-1-4613-8928-6]
   Casares A., 2021, 48 INT C AUT LANG PR, V198, P123
   Cavezza DG, 2020, FME WORKS FORM, P66, DOI 10.1145/3372020.3391557
   CHANG E, 1992, LECT NOTES COMPUT SC, V623, P474
   Cimatti Alessandro, 2020, 2020 Formal Methods in Computer Aided Design (FMCAD), P83, DOI 10.34727/2020/isbn.978-3-85448-042-6_15
   Cimatti A, 2021, ELECTRON P THEOR COM, P152, DOI 10.4204/EPTCS.346.10
   Cimatti A, 2021, LECT NOTES COMPUT SC, V13085, P351, DOI 10.1007/978-3-030-92124-8_20
   Cimatti A, 2021, FORM METHOD SYST DES, DOI 10.1007/s10703-021-00383-3
   Claessen K, 2012, Proceedings of the 12th Conference on Formal Methods in Computer-Aided Design (FMCAD 2012), P52
   de Alfaro L, 2000, IEEE S LOG, P141, DOI 10.1109/LICS.2000.855763
   de Alfaro L, 2007, THEOR COMPUT SCI, V386, P188, DOI 10.1016/j.tcs.2007.07.008
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ehlers Rudiger, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P39, DOI 10.1007/978-3-642-31424-7_9
   Ehlers R, 2016, LECT NOTES COMPUT SC, V9780, P333, DOI 10.1007/978-3-319-41540-6_18
   Ehlers R, 2010, LECT NOTES COMPUT SC, V6174, P365, DOI 10.1007/978-3-642-14295-6_33
   Faymonville P, 2017, LECT NOTES COMPUT SC, V10205, P354, DOI 10.1007/978-3-662-54577-5_20
   Faymonville P, 2017, LECT NOTES COMPUT SC, V10427, P325, DOI 10.1007/978-3-319-63390-9_17
   Filiot E, 2009, LECT NOTES COMPUT SC, V5643, P263, DOI 10.1007/978-3-642-02658-4_22
   Finkbeiner B, 2018, LECT NOTES COMPUT SC, V10981, P289, DOI 10.1007/978-3-319-96145-3_16
   Gabbay D, 1980, P 7 ACM SIGPLAN SIGA, P163, DOI DOI 10.1145/567446.567462
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   Jacobs S., 2018, 5 REACTIVE SYNTHESIS
   Jacobs S, 2017, INT J SOFTW TOOLS TE, V19, P367, DOI 10.1007/s10009-016-0416-3
   Kretínsky J, 2018, LECT NOTES COMPUT SC, V11138, P543, DOI 10.1007/978-3-030-01090-4_34
   Kupferman O, 2005, ANN IEEE SYMP FOUND, P531, DOI 10.1109/SFCS.2005.66
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Lichtenstein O., 1985, Logics of Programs. Proceedings, P196
   Luttenberger M, 2020, ACTA INFORM, V57, P3, DOI 10.1007/s00236-019-00349-3
   Maler O, 2007, LECT NOTES COMPUT SC, V4590, P95
   MANNA Z, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P377, DOI 10.1145/93385.93442
   Maoz S, 2021, SOFTW SYST MODEL, V20, P1553, DOI 10.1007/s10270-021-00868-z
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Markey N., 2003, TEMPORAL LOGIC IS EX
   McMillan KL., 1999, SMV LANGUAGE, P1
   McNaughton R., 1971, MIT RES MONOGRAPH
   Meyer PJ, 2018, LECT NOTES COMPUT SC, V10981, P578, DOI 10.1007/978-3-319-96145-3_31
   Morgenstern A, 2011, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.50.3
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   PNUELI A, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P179, DOI 10.1145/75277.75293
   Prasad Sistla A., 1994, Formal Aspects of Computing, V6, P495, DOI 10.1007/BF01211865
   Safra S., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P319, DOI 10.1109/SFCS.1988.21948
   Schewe S, 2007, LECT NOTES COMPUT SC, V4762, P474
   Thomas W., 1988, BANACH CTR PUBLICATI, V1, P403, DOI DOI 10.4064/-21-1-403-417
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Zhu S., 2017, LECT NOTES COMPUTER, V629, P147, DOI [DOI 10.1007/978-3-319-70389-3, 10.1007/978-3-319-70389-3_10, DOI 10.1007/978-3-319-70389-3_10]
NR 56
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2024
VL 23
IS 2
BP 427
EP 453
DI 10.1007/s10270-023-01122-4
EA AUG 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN0W0
UT WOS:001047233300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zschaler, S
   Polack, FAC
AF Zschaler, Steffen
   Polack, Fiona A. C.
TI Trustworthy agent-based simulation: the case for domain-specific
   modelling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB Simulation is a key tool for researching complex system behaviour. Agent-based simulation has been applied across domains, such as biology, health, economics and urban sciences. However, engineering robust, efficient, maintainable, and reliable agent-based simulations is challenging. We present a vision for engineering agent simulations comprising a family of domain-specific modelling languages (DSMLs) that integrates core software engineering, validation and simulation experimentation. We relate the vision to examples of principled simulation, to show how the DSMLs would improve robustness, efficiency, and maintainability of simulations. Focusing on how to demonstrate the fitness for purpose of a simulator, the envisaged approach supports bi-directional transparency and traceability between the original domain understanding to the implementation, interpretation of results and evaluation of hypotheses.
C1 [Zschaler, Steffen] Kings Coll London, Dept Informat, London, England.
   [Polack, Fiona A. C.] Univ Hull, Sch Comp Sci, Kingston Upon Hull, England.
C3 University of London; King's College London; University of Hull
RP Zschaler, S (corresponding author), Kings Coll London, Dept Informat, London, England.
EM szschaler@acm.org; f.a.polack@hull.ac.uk
OI Zschaler, Steffen/0000-0001-9062-6637
CR Alden K., 2016, WATER AIR SOIL POLL, V14, P422
   Alden K, 2015, J R SOC INTERFACE, V12, DOI 10.1098/rsif.2014.1059
   Alden K, 2013, PLOS COMPUT BIOL, V9, DOI 10.1371/journal.pcbi.1002916
   Alden K, 2012, FRONT IMMUNOL, V3, DOI 10.3389/fimmu.2012.00172
   Alden Kieran, 2016, Ph. D. Dissertation
   Assurance Case Working Group (ACWG), 2021, GOAL STRUCT NOT COMM
   Barat S., 2020, PRACTICE ENTERPRISE, DOI [10.1007/978-3-030-63479-7_11, DOI 10.1007/978-3-030-63479-7_11]
   Chacon S., 2014, Pro Git
   Crutchfield, 199306035 SANT FE I
   Denil J., 2017, P S THEORY MODELING, P1
   Denney E, 2018, AUTOMAT SOFTW ENG, V25, P435, DOI 10.1007/s10515-017-0230-5
   Ewald R, 2014, ACM T MODEL COMPUT S, V24, DOI 10.1145/2567895
   Fuentes-Fern├a┬indez R., 2010, ADV INTEL SOFT COMPU
   Gallina B, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P204, DOI 10.1109/ISSREW.2014.30
   Gell-Mann M., 1995, QUARK JAGUAR
   Ghorbani A, 2013, JASSS-J ARTIF SOC S, V16, DOI 10.18564/jasss.2166
   Greaves RB, 2013, BIOSYSTEMS, V112, P107, DOI 10.1016/j.biosystems.2013.03.007
   Hawkins R., 2015, IEEE HI ASS SYS ENGR, DOI [10.5281/zenodo.47984, DOI 10.5281/ZENODO.47984]
   Hawkins R, 2015, IEEE HI ASS SYS ENGR, P110, DOI 10.1109/HASE.2015.25
   Herd Benjamin, 2018, International Journal of AgentOriented Software Engineering, V6, P156
   Iba T., 2004, 9 WORKSHOP EC HETERO, P1
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Kelly T.P., 1997, INT C COMPUTER SAFET, V97, P55
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kwok R, 2018, NATURE, V560, P269, DOI 10.1038/d41586-018-05895-3
   Leonov German, 2015, Ph.D. Dissertation
   Lloyd S., 2006, Programming the Universe: a Quantum Computer Scientist Takes on the Cosmos
   Luke S, 2005, SIMUL-T SOC MOD SIM, V81, P517, DOI 10.1177/0037549705058073
   Meng BL, 2021, LECT NOTES COMPUT SC, V12852, P101, DOI 10.1007/978-3-030-83903-1_7
   Mertens J, 2022, PROCEEDINGS OF THE 2022 ANNUAL MODELING AND SIMULATION CONFERENCE (ANNSIM'22), P416, DOI 10.23919/ANNSIM55834.2022.9859307
   Meyers B., 2014, EUROMICRO CONF PROC
   Miles S, 2008, COMPUT SCI ENG, V10, P38, DOI 10.1109/MCSE.2008.82
   Moore JWJ, 2013, FRONT IMMUNOL, V4, DOI 10.3389/fimmu.2013.00035
   Muñoz P, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a8
   North MJ, 2013, COMPLEX ADAPT SYST M, V1, DOI 10.1186/2194-3206-1-3
   Object Management Group, 2021, STRUCT ASS CAS MET V
   Parunak H.V.D., 2021, 22 INT WORKSHOP MULT
   Polack F, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a6
   Ruscheinski A, 2019, PROCEEDINGS OF THE 2019 ACM SIGSIM CONFERENCE ON PRINCIPLES OF ADVANCED DISCRETE SIMULATION (SIGSIM-PADS'19), P185, DOI 10.1145/3316480.3325514
   Rushby J, 2010, MAKING SYSTEMS SAFER, P3, DOI 10.1007/978-1-84996-086-1_1
   Santos F, 2018, SIMUL MODEL PRACT TH, V83, P162, DOI 10.1016/j.simpat.2017.11.006
   Scherer S, 2015, JASSS-J ARTIF SOC S, V18, DOI 10.18564/jasss.2834
   Shaked A, 2021, IEEE SYST J, V15, P435, DOI 10.1109/JSYST.2020.2990488
   Stepney S., 2018, ENG SIMULATIONS SCI, DOI [10.1007/978-3-030-01938-9, DOI 10.1007/978-3-030-01938-9]
   Troya J, 2021, SOFTW SYST MODEL, V20, P1183, DOI 10.1007/s10270-020-00842-1
   Voelter M, 2019, SOFTW SYST MODEL, V18, P2507, DOI 10.1007/s10270-018-0679-0
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Wassyng A, 2015, IEEE DES TEST, V32, P45, DOI 10.1109/MDAT.2015.2462720
   Williams RA, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-S6-S9
   Yan F., 2021, P 11 INT C PERFORMAN
   Zeigler B. P., 2018, Theory of modeling and simulation: discrete event & iterative system computational foundations
   Zschaler S., 2009, 2 INT C SOFTWARE LAN
   Zschaler S., 2020, LECT NOTES COMPUT SC
NR 53
TC 4
Z9 4
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 455
EP 470
DI 10.1007/s10270-023-01082-9
EA FEB 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4J2
UT WOS:000930591600001
PM 36776402
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Martens, J
   Groote, JF
   van den Haak, LB
   Hijma, P
   Wijs, A
AF Martens, Jan
   Groote, Jan Friso
   van den Haak, Lars B.
   Hijma, Pieter
   Wijs, Anton
TI Linear parallel algorithms to compute strong and branching bisimilarity
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Strong bisimulation; Branching bisimulation; RCPP; Parallel algorithms;
   PRAM
ID MINIMIZATION; TIME
AB We present the first parallel algorithms that decide strong and branching bisimilarity in linear time. More precisely, if a transition system has n states, m transitions and |Act| action labels, we introduce an algorithm that decides strong bisimilarity in O(n + |Act|) time on max(n, m) processors and an algorithm that decides branching bisimilarity in O(n + |Act|) time using up to max(n(2), m, |Act|n) processors.
C1 [Martens, Jan; Groote, Jan Friso; van den Haak, Lars B.; Hijma, Pieter; Wijs, Anton] Eindhoven Univ Technol, Groene Loper 5, NL-5612 AE Eindhoven, Netherlands.
   [Hijma, Pieter] Vrije Univ Amsterdam, Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
C3 Eindhoven University of Technology; Vrije Universiteit Amsterdam
RP Martens, J (corresponding author), Eindhoven Univ Technol, Groene Loper 5, NL-5612 AE Eindhoven, Netherlands.
EM j.j.m.martens@tue.nl; j.f.groote@tue.nl; l.b.v.d.haak@tue.nl;
   pieter@cs.vu.nl; a.j.wijs@tue.nl
RI ; Wijs, Anton/A-9694-2019
OI van den Haak, Lars B./0000-0002-0330-5016; Wijs,
   Anton/0000-0002-2071-9624; Groote, Jan Friso/0000-0003-2196-6587; Hijma,
   Pieter/0000-0002-5716-1118; Martens, Jan/0000-0003-4797-7735
FU NWO AVVA project; NWO TTW ChEOPS project [612.001751];  [17249]
FX This work is carried out in the context of the NWO AVVA project
   612.001751 and the NWO TTW ChEOPS project 17249. We thank the reviewers
   for their careful reviews and helpful comments.
CR [Anonymous], 1978, P 10 ANN ACM S THEOR, DOI 10.1145/800133.804339
   Balcazar J., 1992, Formal Aspects of Computing, V4, P638, DOI 10.1007/BF03180566
   Björklund J, 2021, ACTA INFORM, V58, P177, DOI 10.1007/s00236-019-00363-5
   Blom S., 2003, ELECT NOTES THEORETI, V89, P99, DOI DOI 10.1016/S1571-0661(05)80099-4
   Blom S, 2009, ELECTRON P THEOR COM, P32, DOI 10.4204/EPTCS.14.3
   Bosnacki D, 2012, BMC BIOINFORMATICS, V13, DOI 10.1186/1471-2105-13-281
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   Bunte Olav, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25th International Conference, TACAS 2019. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019. Proceedings: Lecture Notes in Computer Science (11428), P21, DOI 10.1007/978-3-030-17465-1_2
   COLE R, 1988, SIAM J COMPUT, V17, P770, DOI 10.1137/0217049
   De Nicola Rocco., 1990, Proc. of the LITP Spring school on theoretical computer science on Semantics of systems of concurrent processes, P407, DOI [10.1007/3-540-53479-2_17, DOI 10.1007/3-540-53479-2_17]
   Groote J.F., 2022, ARXIV
   GROOTE JF, 1990, LECT NOTES COMPUT SC, V443, P626
   Han Y., 1992, SPAA '92. 4th Annual ACM Symposium on Parallel Algorithms and Architectures, P353, DOI 10.1145/140901.141913
   JAJA JF, 1994, THEOR COMPUT SCI, V129, P293, DOI 10.1016/0304-3975(94)90030-2
   Jansen David N., 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P3, DOI 10.1007/978-3-030-45237-7_1
   Jeong C., 1998, P INT COMP S
   KANELLAKIS PC, 1990, INFORM COMPUT, V86, P43, DOI 10.1016/0890-5401(90)90025-D
   Lee I., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P404
   Leiserson CE, 2020, SCIENCE, V368, P1079, DOI 10.1126/science.aam9744
   Martens J, 2021, LECT NOTES COMPUT SC, V13077, P115, DOI 10.1007/978-3-030-90636-8_7
   Milner R., 1980, Lecture Notes in Computer Science, V92, DOI DOI 10.1007/3-540-10235-3
   PAIGE R, 1985, THEOR COMPUT SCI, V40, P67, DOI 10.1016/0304-3975(85)90159-8
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   Rajasekaran S, 1998, IEEE T PARALL DISTR, V9, P687, DOI 10.1109/71.707548
   Reniers MA, 2014, COMPUT J, V57, P73, DOI 10.1093/comjnl/bxs156
   Sengupta S., 2011, SCI COMPUTING MULTIC, P413, DOI [DOI 10.1201/B10376, 10.1201/b10376, DOI 10.1201/B10376-29]
   STOCKMEYER L, 1984, SIAM J COMPUT, V13, P409, DOI 10.1137/0213027
   Tewari A, 2002, LECT NOTES COMPUT SC, V2552, P34
   Valmari A, 2010, FUND INFORM, V105, P319, DOI 10.3233/FI-2010-369
   VanGlabbeek RJ, 1996, J ACM, V43, P555, DOI 10.1145/233551.233556
   Wijs Anton, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P368, DOI 10.1007/978-3-662-46681-0_29
   Wijs A, 2016, FORM METHOD SYST DES, V48, P274, DOI 10.1007/s10703-016-0246-7
NR 32
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 521
EP 545
DI 10.1007/s10270-022-01060-7
EA DEC 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4H8
UT WOS:000894746800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Piedade, B
   Dias, JP
   Correia, FF
AF Piedade, Bruno
   Dias, Joao Pedro
   Correia, Filipe F.
TI Visual notations in container orchestrations: an empirical study with
   Docker Compose
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Container orchestrations; Infrastructure as code; Empirical study;
   Visual programming; Docker; Docker Compose
ID USER ACCEPTANCE; INFRASTRUCTURE; CODE
AB Container orchestration tools supporting infrastructure-as-code allow new forms of collaboration between developers and operatives. Still, their text-based nature permits naive mistakes and is more difficult to read as complexity increases. We can find few examples of low-code approaches for defining the orchestration of containers, and there seems to be a lack of empirical studies showing the benefits and limitations of such approaches. We hypothesize that a complete visual notation for Docker-based orchestrations could reduce the effort, the error rate, and the development time. Therefore, we developed a tool featuring such a visual notation for Docker Compose configurations, and we empirically evaluated it in a controlled experiment with novice developers. The results show a significant reduction in development time and error-proneness when defining Docker Compose files, supporting our hypothesis. The participants also thought the prototype easier to use and useful, and wanted to use it in the future.
C1 [Piedade, Bruno] Univ Porto, Fac Engn, Porto, Portugal.
   [Dias, Joao Pedro] Univ Porto, Fac Engn, BUILT CoLAB, Porto, Portugal.
   [Correia, Filipe F.] Univ Porto, Fac Engn, INESC TEC, Porto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC; Universidade do
   Porto
RP Correia, FF (corresponding author), Univ Porto, Fac Engn, INESC TEC, Porto, Portugal.
EM up201505668@fe.up.pt; jpmdias@fe.up.pt; filipe.correia@fe.up.pt
RI Correia, Filipe F/A-4727-2009; Dias, João Pedro/IYS-8266-2023; Dias,
   João Pedro/O-4128-2018
OI Dias, João Pedro/0000-0001-9066-6436
FU Integrated Masters in Informatics and Computing Engineering of the
   Faculty of Engineering, University of Porto (FEUP)
FX Thank you to David Reis, Jessica Diaz, and the participants and
   anonymous reviewers of the LowCode 2020 workshop [43] for discussing
   earlier versions of this work with us. Also, we thank the anonymous
   reviewers of the SoSym journal who, through their comments and
   suggestions, have helped considerably to improve the article's clarity.
   This work was partially funded by the Integrated Masters in Informatics
   and Computing Engineering of the Faculty of Engineering, University of
   Porto (FEUP).
CR Aguiar A., 2019, P C COMP 3 INT C ART
   Angyal L, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P463, DOI 10.1109/ECBS.2008.33
   Baltes S., 2020, Empirical Software Engineering, V27, P1
   Bolton W., 2006, J SPORTS SCI MED
   Boshernitsan M., 2004, Visual programming languages: A survey
   Burnett M.M., 1999, WILEY ENCY ELECT ELE, P275, DOI DOI 10.1002/047134608X.W1707
   Correia F P., 2013, Microwave Optoelectronics Conference (IMOC), 2013 SBMO/IEEE MTT-S International, IEEE, P1
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dias JP, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P276, DOI 10.1109/QUATIC.2018.00049
   Guerra E., 2020, MODELS 20 ACM IEEE 2
   Hidaka S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P480, DOI 10.1109/ASE.2011.6100104
   Hoisl Bernhard., 2015, Communications in Computer and Information Science, page, P15
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Ihirwe F., 2020, P 23 ACMIEEE INT C M, P1, DOI [10.1145/3417990.3420208, DOI 10.1145/3417990.3420208]
   Joy AM, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENGINEERING AND APPLICATIONS (ICACEA), P342, DOI 10.1109/ICACEA.2015.7164727
   Kumara I, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106593
   loof N.D., 2021, DOCKER COMPOSE SPECI
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McKendrick R., 2017, MASTERING DOCKER
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Ozkaya M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106275
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pandey S., 2012, THESIS U OSLO
   Paraiso F, 2016, IEEE INT CONF CLOUD, P718, DOI [10.1109/CLOUD.2016.98, 10.1109/CLOUD.2016.0100]
   Piedade B., 2020, P 23 ACMIEEE INT C M
   Piedade B., 2020, DOCKER COMPOSER RES
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Ray PP, 2017, SCI PROGRAMMING-NETH, V2017, DOI 10.1155/2017/1231430
   Reis D, 2022, IEEE ACCESS, V10, P2318, DOI 10.1109/ACCESS.2021.3137671
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sandobalin J, 2020, IEEE ACCESS, V8, P17734, DOI 10.1109/ACCESS.2020.2966597
   Sandobalin J, 2018, LECT NOTES COMPUT SC, V10797, P393, DOI 10.1007/978-3-319-91764-1_37
   Sousa T.B., 2015, P 22 C PATT LANG PRO
   Sousa TB, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI 10.1145/3282308.3282316
   Sousa Tiago Boldt., 2016, Proceedings of the 11th Latin-American Conference on Pattern Languages of Programming, P1
   Stevens P, 2007, LECT NOTES COMPUT SC, V4735, P1
   Tanimoto SL, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P31, DOI 10.1109/LIVE.2013.6617346
   Torres D, 2020, IEEE ACM DIS SIM, P92, DOI 10.1109/ds-rt50469.2020.9213544
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 43
TC 1
Z9 1
U1 4
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1983
EP 2005
DI 10.1007/s10270-022-01027-8
EA SEP 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000854702100001
DA 2024-07-18
ER

PT J
AU López, JAH
   Izquierdo, JLC
   Cuadrado, JS
AF Hernandez Lopez, Jose Antonio
   Canovas Izquierdo, Javier Luis
   Sanchez Cuadrado, Jesus
TI ModelSet: a dataset for machine learning in model-driven engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Dataset; Machine learning; Model-driven engineering
AB The application of machine learning (ML) algorithms to address problems related to model-driven engineering (MDE) is currently hindered by the lack of curated datasets of software models. There are several reasons for this, including the lack of large collections of good quality models, the difficulty to label models due to the required domain expertise, and the relative immaturity of the application of ML to MDE. In this work, we present ModelSet, a labelled dataset of software models intended to enable the application of ML to address software modelling problems. To create it we have devised a method designed to facilitate the exploration and labelling of model datasets by interactively grouping similar models using off-the-shelf technologies like a search engine. We have built an Eclipse plug-in to support the labelling process, which we have used to label 5,466 Ecore meta-models and 5,120 UML models with its category as the main label plus additional secondary labels of interest. We have evaluated the ability of our labelling method to create meaningful groups of models in order to speed up the process, improving the effectiveness of classical clustering methods. We showcase the usefulness of the dataset by applying it in a real scenario: enhancing the MAR search engine. We use ModelSet to train models able to infer useful metadata to navigate search results. The dataset and the tooling are available at and a live version at http://modelset.github.io..
C1 [Hernandez Lopez, Jose Antonio; Sanchez Cuadrado, Jesus] Univ Murcia, Fac Informat, Murcia, Spain.
   [Canovas Izquierdo, Javier Luis] UOC IN3, Castelldefels, Spain.
C3 University of Murcia
RP López, JAH (corresponding author), Univ Murcia, Fac Informat, Murcia, Spain.
EM joseantonio.hernandez6@um.es; jcanovasi@uoc.edu; jesusc@um.es
RI Hernández López, José Antonio/AGQ-7597-2022; Sanchez Cuadrado,
   Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616; Hernandez Lopez, Jose
   Antonio/0000-0003-2439-2136
FU Ramon y Cajal [RYC-2017-237]; MINECO (Spain); European Social Fund;
   Universidad de Murcia
FX Work funded by a Ramon y Cajal 2017 Grant (RYC-2017-237) funded by
   MINECO (Spain) and co-funded by the European Social Fund. Jose Antonio
   Hernandez Lopez enjoys a FPU grant funded by the Universidad de Murcia.
CR Agt-Rickauer H., 2020, THESIS
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Alon U., 2020, INT C MACHINE LEARNI, P245
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], LUC
   Babur Ö, 2019, J COMPUT LANG, V51, P57, DOI 10.1016/j.cola.2018.12.002
   Babur Ö, 2016, LECT NOTES COMPUT SC, V9764, P3, DOI 10.1007/978-3-319-42061-5_1
   Barriga A., 2020, P 23 ACM IEEE INT C, P1
   Basciani F, 2016, LECT NOTES COMPUT SC, V9694, P342, DOI 10.1007/978-3-319-39696-5_21
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Izquierdo JLC, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P292, DOI 10.1109/MODELS.2017.19
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Ciancone A, 2014, SOFTW SYST MODEL, V13, P1269, DOI 10.1007/s10270-013-0334-8
   Clarke Robin O.S., 2018, Insecta Mundi, V637, P1
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Giraldo FD, 2015, LECT NOTES BUS INF P, V204, P199, DOI 10.1007/978-3-319-19270-3_13
   Härtel J, 2018, INT C PROGRAM COMPRE, P233, DOI 10.1145/3196321.3196344
   Härtel J, 2018, LECT NOTES COMPUT SC, V10890, P216, DOI 10.1007/978-3-319-92997-2_14
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Heinze Thomas S., 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P193, DOI 10.1007/978-3-030-49418-6_13
   IOVINO L, J OBJECT TECHNOL
   Izurieta C, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P31, DOI 10.1145/2737182.2737193
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   King DB, 2015, ACS SYM SER, V1214, P1
   Kögel S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1026, DOI 10.1145/3106237.3119874
   Kolovos DS, 2015, OSS4MDE MODELS, P20
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mengerink JGM, 2019, EMPIR SOFTW ENG, V24, P1574, DOI 10.1007/s10664-018-9641-6
   Segura AM, 2016, IEEE INT ENTERP DIST, P79
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Object Management Group (OMG), 2017, OMG® Unified Modeling Language® (OMG UML®) Version 2.5.1
   Osman MH, 2018, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2018.00070
   Perez-Soler Sara, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P257, DOI 10.1007/978-3-030-49418-6_17
   Pérez-Soler S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a5
   Project T.E., 2020, ECLIPSE MODELING FRA
   Rajpurkar P., 2016, P 2016 C EMP METH NA, V2016, P2383
   Rios E, 2006, LECT NOTES COMPUT SC, V4066, P78
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Roh Y, 2021, IEEE T KNOWL DATA EN, V33, P1328, DOI 10.1109/TKDE.2019.2946162
   Seifer P, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P152, DOI 10.1145/3357766.3359541
   Shafiq S., 2020, ARXIV PREPRINT ARXIV
   Tsoumakas G., 2007, INT J DATA WAREHOUS, V3, P1, DOI DOI 10.4018/JDWM.2007070101
   Tunkelang Daniel, 2009, Synthesis Lectures on Information Concepts, Retrieval, and Services, V1, P1, DOI 10.1007/978-3-031-02262-3
   Weyssow M., 2021, ARXIV PREPRINT ARXIV
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 55
TC 17
Z9 17
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 967
EP 986
DI 10.1007/s10270-021-00929-3
EA OCT 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000707851200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Semeráth, O
   Babikian, AA
   Chen, BQ
   Li, CN
   Marussy, K
   Szárnyas, G
   Varró, D
AF Semerath, Oszkar
   Babikian, Aren A.
   Chen, Boqi
   Li, Chuning
   Marussy, Kristof
   Szarnyas, Gabor
   Varro, Daniel
TI Automated generation of consistent, diverse and structurally realistic
   graph models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model generation; Domain-specific languages; Test generation; Graph
   metrics
ID ENVIRONMENT
AB In this paper, we present a novel technique to automatically synthesize consistent, diverse and structurally realistic domain-specific graph models. A graph model is (1) consistent if it is metamodel-compliant and it satisfies the well-formedness constraints of the domain; (2) it is diverse if local neighborhoods of nodes are highly different; and (1) it is structurally realistic if a synthetic graph is at a close distance to a representative real model according to various graph metrics used in network science, databases or software engineering. Our approach grows models by model extension operators using a hill-climbing strategy in a way that (A) ensures that there are no constraint violation in the models (for consistency reasons), while (B) more realistic candidates are selected to minimize a target metric value (wrt. the representative real model). We evaluate the effectiveness of the approach for generating realistic models using multiple metrics for guidance heuristics and compared to other model generators in the context of three case studies with a large set of real human models. We also highlight that our technique is able to generate a diverse set of models, which is a requirement in many testing scenarios.
C1 [Semerath, Oszkar; Marussy, Kristof; Szarnyas, Gabor; Varro, Daniel] Budapest Univ Technol & Econ, MTA BME Lendulet Cyber Phys Syst Res Grp, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Babikian, Aren A.; Chen, Boqi; Li, Chuning; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, 3480 Rue Univ, Montreal, PQ H3A 0E9, Canada.
C3 Budapest University of Technology & Economics; McGill University
RP Semeráth, O (corresponding author), Budapest Univ Technol & Econ, MTA BME Lendulet Cyber Phys Syst Res Grp, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM semerath@mit.bme.hu; aren.babikian@mail.mcgill.ca;
   boqi.chen@mail.mcgill.ca; chuning.li@mail.mcgill.ca; marussy@mit.bme.hu;
   szarnyas@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Semeráth, Oszkár/AAD-2125-2022; Marussy,
   Kristóf/AAE-9008-2022
OI Varro, Daniel/0000-0002-8790-252X; Semeráth, Oszkár/0000-0002-3592-5105;
   Marussy, Kristóf/0000-0002-9135-8256
FU NSERC [RGPIN-04573-16, PGSD3-546810-2020]; McGill Grad Excellence Award
   [90025]; Fonds de recherche du Quebec - Nature et technologies (FRQNT)
   B1X scholarship [272709]; New National Excellence Program of the
   Ministry for Innovation and Technology from the National Research,
   Development and Innovation Fund [uNKP-20-4]; NRDI under the Ministry for
   Innovation and Technology; EFOP [4.2.1-16-2017-00021]
FX We would like to thank all three reviewers for their detailed and
   insightful feedback. This paper was partially supported by the NSERC
   RGPIN-04573-16 project, the NSERC PGSD3-546810-2020 scholarship, the
   McGill Grad Excellence Award- 90025, the Fonds de recherche du Quebec -
   Nature et technologies (FRQNT) B1X scholarship (file number: 272709),
   the uNKP-20-4 New National Excellence Program of the Ministry for
   Innovation and Technology from the source of the National Research,
   Development and Innovation Fund, and by the NRDI Fund based on the
   charter of bolster issued by the NRDI Office under the auspices of the
   Ministry for Innovation and Technology. We would like to thank the
   Department of Electrical and Computer Engineering, and the School of
   Computer Science of McGill University for providing resources to run our
   measurements. During the development of the achievements, we took into
   consideration the goals set by the Balatonfured System Science
   Innovation Cluster and the plans of the "BME Balatonfured Knowledge
   Center," supported by EFOP 4.2.1-16-2017-00021.
CR Akoglu L, 2009, DATA MIN KNOWL DISC, V19, P194, DOI 10.1007/s10618-009-0140-7
   Al-Refai M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P55, DOI 10.1109/MODELS.2017.17
   Ali S, 2016, EMPIR SOFTW ENG, V21, P2459, DOI 10.1007/s10664-015-9392-6
   [Anonymous], 2019, ECLIPSE PROJECT ECLI
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2014, OBJECT MANAGEMENT GR
   [Anonymous], LNCS
   [Anonymous], 2019, YAKINDU STATECHART T
   ArkhangelSkii AV, 2012, GEN TOPOLOGY BASIC C, V17
   Atkinson T, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P968, DOI 10.1145/3321707.3321788
   Atkinson T, 2018, LECT NOTES COMPUT SC, V10781, P35, DOI 10.1007/978-3-319-77553-1_3
   AtlanMod Team (Inria Mines-Nantes Lina), 2019, EMF RAND INST
   Bagan G, 2017, IEEE T KNOWL DATA EN, V29, P856, DOI 10.1109/TKDE.2016.2633993
   Battaglia P.W., 2018, ARXIV180303324 CORR
   Battiston F, 2014, PHYS REV E, V89, DOI 10.1103/PhysRevE.89.032804
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Berlingerio M, 2013, WORLD WIDE WEB, V16, P567, DOI 10.1007/s11280-012-0190-4
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Callaghan M., 2013, P 2013 ACM SIGMOD IN, P1185, DOI DOI 10.1145/2463676.2465296
   Chakrabarti D, 2004, SIAM PROC S, P442
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cunha A, 2014, LECT NOTES COMPUT SC, V8411, P17
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Edunov S., 2018, INT CON DISTR COMP S, P567, DOI [10.1109/ICDCS.2018.00062, DOI 10.1109/ICDCS.2018.00062]
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   ERDOS P, 1960, B INT STATIST INST, V38, P343
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gómez-Abajo P, 2018, SCI COMPUT PROGRAM, V163, P85, DOI 10.1016/j.scico.2018.01.008
   GonzalezPerez C.A., 2012, FORMAL METHODS SOFTW
   Gordon A, 1983, J ROY STAT SOC D-STA, V32, P355
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guerra E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P78, DOI 10.1109/MODELS.2019.00-13
   Hao W, 2013, THESIS NATL U IRELAN
   Hautamäki V, 2004, INT C PATT RECOG, P430, DOI 10.1109/ICPR.2004.1334558
   Hocevar T, 2014, BIOINFORMATICS, V30, P559, DOI 10.1093/bioinformatics/btt717
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Izsó B, 2013, IEEE INT CONF AUTOM, P421, DOI 10.1109/ASE.2013.6693100
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson E.K., 2006, EMSOFT, P53
   Jackson EK, 2013, 2013 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT)
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Kepner J, 2018, IEEE SYM PARA DISTR, P279, DOI 10.1109/IPDPSW.2018.00055
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Kipf T.N., 2016, ARXIV161107308 CORR
   Kolda TG, 2014, SIAM J SCI COMPUT, V36, pC424, DOI 10.1137/130914218
   Kosiol Jens, 2020, Graph Transformation. 13th International Conference, ICGT 2020 Held as Part of STAF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12150), P239, DOI 10.1007/978-3-030-51372-6_14
   Leskovec J, 2005, LECT NOTES ARTIF INT, V3721, P133
   Leskovec J, 2010, J MACH LEARN RES, V11, P985
   Leskovec Jure, 2006, P ACM SIGKDD INT C K, P631
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Milicevic A, 2007, PROC INT CONF SOFTW, P771
   Miller JF, 2020, GENET PROGRAM EVOL M, V21, P129, DOI 10.1007/s10710-019-09360-6
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Nassar N, 2020, LECT NOTES COMPUT SC, V12076, P224, DOI 10.1007/978-3-030-45234-6_11
   Nicosia V, 2015, PHYS REV E, V92, DOI 10.1103/PhysRevE.92.032805
   Pinar A., 2011, ARXIV11123644 CORR
   Prat-Perez A., 2017, GRADES at SIGMOD, P6
   Purohit S., 2017, ARXIV170902339 CORR
   Rensink A, 2004, LECT NOTES COMPUT SC, V2986, P401
   Rensink A., 2007, Graph-Based Tools (GraBaTs). European Association of Software Science and Technology, no. LNCS4549 in Electronic Communications of the EASST, DOI [10.14279/tuj.eceasst.1.77, DOI 10.14279/TUJ.ECEASST.1.77]
   Rensink A, 2006, ELECTRON NOTES THEOR, V157, P39, DOI 10.1016/j.entcs.2006.01.022
   Reps TW, 2004, LECT NOTES COMPUT SC, V3114, P15
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Semerath O., 2020, P 23 ACMIEEE INT C M, P187
   Semeráth O, 2020, INT J SOFTW TOOLS TE, V22, P57, DOI 10.1007/s10009-019-00530-6
   Semeráth O, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P43, DOI 10.1109/ICSE-Companion.2019.00034
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2018, LECT NOTES COMPUT SC, V10802, P227, DOI 10.1007/978-3-319-89363-1_13
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Simonovsky M, 2018, LECT NOTES COMPUT SC, V11139, P412, DOI 10.1007/978-3-030-01418-6_41
   Soltana G., 2019, ABS190200397 CORR
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Staudt Christian L, 2017, Appl Netw Sci, V2, P36, DOI 10.1007/s41109-017-0054-z
   Szárnyas G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P87, DOI 10.1145/2976767.2976786
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Wang JH, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P270
   Wang YQ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3386252
   Wu H, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P175, DOI 10.1109/TASE.2013.31
   Yazdi HS, 2016, J SYST SOFTWARE, V118, P176, DOI 10.1016/j.jss.2016.05.010
   Yazdi HS, 2015, COMPUT SCI-RES DEV, V30, P231, DOI 10.1007/s00450-014-0255-y
   You JX, 2018, PR MACH LEARN RES, V80
   Zhang J.W., 2016, **DATA OBJECT**, P53, DOI [10.5441/002/edbt.2016.08, DOI 10.5441/002/EDBT.2016.08]
NR 88
TC 6
Z9 6
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1713
EP 1734
DI 10.1007/s10270-021-00884-z
EA MAY 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000655942200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Priefer, D
   Rost, W
   Struber, D
   Taentzer, G
   Kneisel, P
AF Priefer, Dennis
   Rost, Wolf
   Struber, Daniel
   Taentzer, Gabriele
   Kneisel, Peter
TI Applying MDD in the content management system domain Scenarios, tooling,
   and a mixed-method empirical assessment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Content management systems; Empirical
   assessment
ID MODEL-DRIVEN DEVELOPMENT; LANGUAGE
AB Content management systems (CMSs) such as Joomla and WordPress dominate today's web. Enabled by standardized extensions, administrators can build powerful web applications for diverse customer demands. However, developing CMS extensions requires sophisticated technical knowledge, and the complex code structure of an extension gives rise to errors during typical development and migration scenarios. Model-driven development (MDD) seems to be a promising paradigm to address these challenges; however, it has not found adoption in the CMS domain yet. Systematic evidence of the benefit of applying MDD in this domain could facilitate its adoption; however, an empirical investigation of this benefit is currently lacking. In this paper, we present a mixed-method empirical investigation of applying MDD in the CMS domain, based on an interview suite, a controlled experiment, a field experiment, and case studies. During the experiments, we used JooMDD, an MDD infrastructure instantiation for CMS extensions. This infrastructure, which is also presented in this work, consists of a DSL with model editors, code generators, and reverse engineering facilities. We consider three scenarios of developing new (both independent and dependent) CMS extensions and of migrating existing ones to a new major platform version. The experienced developers in our interviews acknowledge the relevance of these scenarios and report on experiences that render them suitable candidates for a successful application of MDD. We found a particularly high relevance of the migration scenario. Our experiments largely confirm the potentials and limits of MDD as identified for other domains. In particular, we found a productivity increase up to factor 11.7 and a quality increase up to factor 2.4 during the development of CMS extensions. Furthermore, our observations highlight the importance of good tooling that seamlessly integrates with already used tool environments and processes.
C1 [Priefer, Dennis; Rost, Wolf; Kneisel, Peter] Tech Hsch Mittelhessen, Inst Informat Sci, Giessen, Germany.
   [Struber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Taentzer, Gabriele] Philipps Univ Marburg, Marburg, Germany.
C3 Radboud University Nijmegen; Philipps University Marburg
RP Priefer, D (corresponding author), Tech Hsch Mittelhessen, Inst Informat Sci, Giessen, Germany.
EM Dennis.Priefer@mni.thm.de; Wolf.Rost@mni.thm.de; d.strueber@cs.ru.nl;
   taentzer@informatik.uni-marburg.de; Peter.Kneisel@mni.thm.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Alnasser M, 2019, JCCREATOR
   [Anonymous], 2019, SIMPLY OPEN SOURCE
   [Anonymous], 2019, BOILERPLATE CONTRIBU
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], 2019, VAST DEV METHOD
   [Anonymous], 2012, INT C RES CHALL INF
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Barker Deane., 2016, WEB CONTENT MANAGEME
   Becker S., SOFTW ENG 2007 BEITR, P169
   Bergmann S, 2020, PHPLOC
   Bernardi ML, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P250, DOI 10.1109/ICACCI.2014.6968522
   Bigendako B, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P552, DOI 10.5220/0006664405520559
   Brambilla M., 2015, INTERACTION FLOW MOD
   Bunse C, 2009, LECT NOTES COMPUT SC, V5421, P66, DOI 10.1007/978-3-642-01648-6_8
   Burden H., 2014, P 8 ACMIEEE INT S EM, P1
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Ceri S, 2010, DESIGNING DATA INTEN
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Filipe P, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P535
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hegedus P, 2013, PROC IEEE INT CONF S, P578, DOI 10.1109/ICSM.2013.99
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Hettmansperger TP., 2010, Robust Nonparametric Statistical Methods, DOI [10.1201/b10451, DOI 10.1201/B10451]
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jensen Technologies SL, 2019, COMPONENT CREATOR
   Joomla, 2021, JOOML EXT DIR
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kahani N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P227, DOI 10.1145/2976767.2976773
   Karg S, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P238, DOI 10.1145/2976767.2976811
   Katsimpa T., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1250, DOI 10.1145/1141277.1141570
   Kehrer T., 2015, INT WORKSH OCL TEXT, P62
   Knapp A., 2007, INT WORKSH MOD DRIV
   Kneisel P., 2020, ONLINE APPENDIX MODE
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Martinez Salvador, 2013, Current Trends in Web Engineering. ICWE 2013 International Workshops ComposableWeb, QWE, MDWE, DMSSW, EMotions, CSE, SSN, and PhD Symposium. Revised Selected Papers: LNCS 8295, P148, DOI 10.1007/978-3-319-04244-2_14
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   McKeever S, 2003, IND MANAGE DATA SYST, V103, P686, DOI 10.1108/02635570310506106
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Montgomery DC., 2001, Design and Analysis of Experiments
   Open Source Matters Inc, 2019, JOOML 4 IS HOR ALPH
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Papotti Paulo Eduardo, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P321, DOI 10.1007/978-3-642-38709-8_21
   PHP Framework Interop Group, 2020, PSR 2 CODING STYLE G
   Priefer D, 2017, LECT NOTES COMPUT SC, V10376, P142, DOI 10.1007/978-3-319-61482-3_9
   Priefer D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P633, DOI 10.1145/2889160.2889176
   Rodriguez-Echeverria R, 2018, SCI COMPUT PROGRAM, V168, P165, DOI 10.1016/j.scico.2018.09.004
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Ramón OS, 2014, AUTOMAT SOFTW ENG, V21, P147, DOI 10.1007/s10515-013-0130-2
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Skyline Software, 2019, MOD CREAT
   Sousa V., 2017, S APPL COMP, P1190
   SousaSaraiva J, 2013, DEV CMS BASED WEB AP
   Spacedog ApS, 2019, COMPONENT GENERATOR
   Squiz Labs, 2020, PHP DOC 12PT MIN US
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Torres J, 2014, J KING SAUD UNIV-COM, V26, P17, DOI 10.1016/j.jksuci.2013.10.004
   Trias F, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P810, DOI 10.1145/2695664.2696049
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaupel S., 2015, INT WORKSH FLEX MOD, P12
   Vaupel S, 2018, SOFTW SYST MODEL, V17, P35, DOI 10.1007/s10270-016-0559-4
   Vermolen SD, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P83
   Vlaanderen K, 2009, LECT NOTES BUS INF P, V19, P226
   W3Techs, 2020, US STAT MARK SHAR CO
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   xdsoft, 2019, JOOML MOD GEN RA
NR 66
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1919
EP 1943
DI 10.1007/s10270-021-00872-3
EA FEB 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000621270300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Farheen, S
   Day, NA
   Vakili, A
   Abbassi, A
AF Farheen, Sabria
   Day, Nancy A.
   Vakili, Amirhossein
   Abbassi, Ali
TI Transitive-closure-based model checking (TCMC) in Alloy
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Symbolic model checking; Alloy; Declarative models
AB We present transitive-closure-based model checking (TCMC): a symbolic representation of the semantics of computational tree logic with fairness constraints (CTLFC) for finite models in first-order logic with transitive closure (FOLTC). TCMC is an expression of the complete model checking problem for CTLFC as a set of constraints in FOLTC without induction, iteration, or invariants. We implement TCMC in the Alloy Analyzer, showing how a transition system can be expressed declaratively and concisely in the Alloy language. Since the total state space is rarely representable due to the state-space explosion problem, we present scoped TCMC where the property is checked for state spaces of a size smaller than the total state space. We address the problem of spurious instances and carefully describe the meaning of results from scoped TCMC with respect to the complete model checking problem. Using case studies, we demonstrate scoped TCMC and compare it with bounded model checking, highlighting how TCMC can check infinite paths.
C1 [Farheen, Sabria; Day, Nancy A.; Vakili, Amirhossein; Abbassi, Ali] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Day, NA (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM sfarheen@uwaterloo.ca; nday@uwaterloo.ca; avakili@uwaterloo.ca;
   aabbassi@uwaterloo.ca
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   [Anonymous], FORMAL SPECIFICATION
   [Anonymous], 1992, THESIS
   [Anonymous], ULM62
   [Anonymous], 2016, THESIS
   [Anonymous], INF TECHN Z FORM SPE
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Börger E, 2005, LECT NOTES COMPUT SC, V3717, P264
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Chang F. S. H., 2006, 28th International Conference on Software Engineering Proceedings, P312, DOI 10.1145/1134285.1134329
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clarke EM, 1997, FORM METHOD SYST DES, V10, P47, DOI 10.1023/A:1008615614281
   Clarke EM, 1999, MODEL CHECKING, P1
   Cunha A, 2014, LECT NOTES COMPUT SC, V8477, P303, DOI 10.1007/978-3-662-43652-3_29
   Del Castillo G, 2000, LECT NOTES COMPUT SC, V1785, P331
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Een N., 2004, THEORY APPL SATISFIA, P333
   Farheen S., 2018, THESIS U WATERLOO
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   GRUMBERG O, 1991, LECT NOTES COMPUT SC, V527, P250
   Immerman N, 1997, LECT NOTES COMPUT SC, V1254, P291
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Kember M, 2019, IEEE ACM INT WORKS M, P47, DOI 10.1109/MiSE.2019.00015
   Krings S, 2018, SCI COMPUT PROGRAM, V158, P41, DOI 10.1016/j.scico.2017.08.013
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Regis G, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P969, DOI 10.1145/3106237.3122826
   Schellhorn G., 1997, J UNIVERS COMPUT SCI, V3, P377
   SELIC B, 2007, EUR C REAL TIM SYST
   Serna J, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P64, DOI 10.1109/REW.2017.70
   Vakili Amirhossein, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P150, DOI 10.1007/978-3-642-30885-7_11
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
NR 36
TC 4
Z9 4
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 721
EP 740
DI 10.1007/s10270-019-00763-8
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI A comparative study of students and professionals in syntactical model
   comprehension experiments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Statechart modeling; Use case modeling; Student-based experiments;
   Professional-based experiments
ID COGNITIVE EFFECTIVENESS; SECURITY REQUIREMENTS; ACTIVITY DIAGRAMS;
   SOFTWARE
AB Empirical evaluations can be conducted with students or professionals as subjects. Students are much more accessible than professionals and they are inexpensive, allowing a greater number of empirical studies to be conducted. Professionals are preferred over students due to concerns regarding the external validity of student-based experiments. Professionals are believed to perform differently, most likely better than students. But with respect to evaluating the cognitive effectiveness of software engineering notations, are professionals really better? The literature has suggested that the presentation of information is just as critical as the content it conveys, hence necessitating this type of empirical studies. If professionals are not much better than students, then such important finding can be a springboard to many much-needed empirical evaluations in this field. In this paper, we report on an experiment that compare the performances of professionals and students with respect to syntactical model comprehension, which is a core factor for evaluating the cognitive effectiveness of notations. The experiment involved two groups of professionals and two student groups, totaling 74 professionals and 75 students. The results of the experiment indicate that students can be used as an adequate replacement to professionals in such type of empirical studies.
C1 [El-Attar, Mohamed] Alfaisal Univ, Software Engn Dept, POB 50927, Riyadh 11533, Saudi Arabia.
RP El-Attar, M (corresponding author), Alfaisal Univ, Software Engn Dept, POB 50927, Riyadh 11533, Saudi Arabia.
EM melattar@alfaisal.edu
RI El-Attar, Mohamed/C-4329-2015
CR Amoroso EG., 1994, Fundamentals of computer security technology
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], ANN M AM ED RES ASS
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1996, P IFIP INT C ICT SYS
   [Anonymous], OBJECT ADVANTAGE
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Buhr R.J. A., 1996, USE CASE MAPS OBJECT
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Humphrey W S, 1995, A discipline for software engineering
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Karpati P, 2010, LECT NOTES COMPUT SC, V6182, P262, DOI 10.1007/978-3-642-14192-8_24
   Katta V, 2010, LECT NOTES BUS INF P, V68, P1
   Klaerding C., 2009, 42 HAW INT C SYST SC, P1
   Kromrey J.D., 1998, Mult. Linear Regres. Viewp., V25, P70
   Kromrey J.D., 2005, American Statistical Association 2005 Joint Statistical Meetings, P7
   Lehmann ErichL., 1998, NONPARAMETRICS STAT
   Lin L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P371
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rostad L., 2006, Proceedings of the Conference on Requirements Engineering: Foundation for Software Quality, Luxembourg, P33
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schneier B, 1999, DR DOBBS J, V24, P21
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Sindre Guttorm, 2002, P 3 S REQUIREMENTS E, P1, DOI [10.5555/2835417.2835420, DOI 10.5555/2835417.2835420]
   SJOBERG DIK, 2002, P 2002 INT S EMP SOF
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 62
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3283
EP 3329
DI 10.1007/s10270-019-00720-5
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IW9NO
UT WOS:000485320600006
DA 2024-07-18
ER

PT J
AU Schwäger, F
   Westfechtel, B
AF Schwaeger, Felix
   Westfechtel, Bernhard
TI Integrated revision and variation control for evolving model-driven
   software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model versioning; Model-driven product lines; Variation control systems;
   Tool integration; Integrated historical and logical versioning
AB Software engineering projects are faced with abstraction, which is achieved by software models, historical evolution, which is addressed by revision control, and variability, which is managed with the help of software product line engineering. Addressing these phenomena by separate tools ignores obvious overlaps and therefore fails at exploiting synergies between revision and variation control for models. In this article, we present a conceptual framework for integrated revision and variation control of model-driven software projects. The framework reuses the abstractions of revision graphs and feature models and follows an iterative, revision-control-like approach to software product line engineering called product-based product line development. A single version (i.e., a variant of a selected revision) is made available in a workspace, where the user may apply arbitrary modifications. Based on a user-provided specification of the affected variants, the changes are automatically written back to a transparent repository that relies on an internal multi-version storage. The uniform handling of revisions and variants of models is achieved by transparently mapping version concepts to a semantic base layer, which is defined upon propositional logic. At the heart of the conceptual framework is a dynamic filtered editing model, which allows that the versioned artifacts and the feature model co-evolve. We contribute algorithms for checkout and commit, which satisfy a set of consistency constraints referring to variant specifications in an evolving feature model. This article furthermore addresses the orchestration of collaborative development by distributed replication and the well formedness of text and model artifacts to be checked out into the workspace. The Eclipse-based tool SuperMod demonstrates the feasibility of the conceptual framework. It allows the user to reuse arbitrary editing tools for text-based programming and/or Ecore-based modeling languages. An evaluation based on three case studies investigates the properties of SuperMod with a specific focus on filtered editing. The evaluation demonstrates that the dynamic filtered editing model reduces the cognitive complexity and the amount of user interaction necessary for variation control when compared to unfiltered model-driven approaches to software product line engineering.
C1 [Schwaeger, Felix; Westfechtel, Bernhard] Univ Bayreuth, Appl Comp Sci 1, Bayreuth, Germany.
C3 University of Bayreuth
RP Westfechtel, B (corresponding author), Univ Bayreuth, Appl Comp Sci 1, Bayreuth, Germany.
EM felix.schwaegerl@uni-bayreuth.de; bernhard.westfechtel@uni-bayreuth.de
CR Altmanninger K., 2008, 1ST INTERNATIONAL WO
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2014, ACM SIGPLAN INT C GE
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Buchmann T., 2016, COMPUTER SCI RES DEV
   Buchmann Thomas., 2012, 4th International Workshop on Feature-Oriented Software Development, FOSD'12, Dresden, Germany - September 24 - 25, 2012, P37
   Buchmann Thomas., 2012, ICSOFT 2012 P 7 INT, P147, DOI DOI 10.5220/0004027401470157
   Buchmann Thomas., 2012, JOINT P COLOCATED EV, P59
   Chacon Scott., 2009, Pro Git, V1st, DOI DOI 10.1016/j.rse.2010.01.021
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Conradi R, 1997, LECT NOTES COMPUT SC, V1235, P1
   Czarnecki K., 2006, GPCE, P211
   Estublier J., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P118
   Estublier J., 1994, CONFIGURATION MANAGE, P99
   Fitting M., 1991, Journal of Logic and Computation, V1, P797, DOI 10.1093/logcom/1.6.797
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomaa H., 2005, DESIGNING SOFTWARE P
   Haugen 0., 2004, SOFTWARE ENG APPL, P709
   Heidenreich F., 2009, P 1 INT WORKSHOP FEA, P69
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Hofer Wanja., 2010, Proceedings of the 2nd International Workshop on Feature-Oriented Software Development, FOSD 2010, Eindhoven, Netherlands, October 10, 2010, P18, DOI DOI 10.1145/1868688.1868692
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2008, SOFTWARE PRODUCT LIN, V2, P303
   KRUSKAL V, 1984, IBM J RES DEV, V28, P74, DOI 10.1147/rd.281.0074
   Li Y, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P49, DOI 10.1145/3106195.3106216
   LIE A, 1989, LECT NOTES COMPUT SC, V387, P191
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Linsbauer L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P803, DOI 10.1145/2889160.2889262
   Lity Sascha, 2018, P 12 INT WORKSH VAR, P27, DOI [10.1145/3168365.3168369, DOI 10.1145/3168365.3168369]
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   McVoy L., 2015, P 19 INT C SOFTW PRO, P245, DOI DOI 10.1145/2791060.2791110
   Mitschke Ralf., 2008, ECMDA Traceability Workshop (ECMDA-TW), Berlin, Germany, 2008, Proceedings, P87
   Munch Bjorn P., 1993, THESIS
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Nieke Michael., 2017, P 11 INT WORKSHOP VA, P92, DOI DOI 10.1145/3023956.3023962
   Object Management Group (OMG), 2016, DOC ASS MET FAC MOF
   Pfofe Tristan, 2016, P 20 INT SYST SOFTW, DOI DOI 10.1145/2934466.2962726
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reichenberger C., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P61
   Sarnak N., 1988, Proceedings of the International Workshop on Software Version and Configuration Control, P264
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schwägerl F, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P15, DOI 10.5220/0006071800150028
   Schwägerl F, 2016, ICSOFT-PT: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 2, P83, DOI 10.5220/0005971300830094
   Schwägerl F, 2016, COMM COM INF SC, V586, P19, DOI 10.1007/978-3-319-30142-6_2
   Schwägerl F, 2016, IEEE INT CONF AUTOM, P822, DOI 10.1145/2970276.2970288
   Schwägerl F, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P5
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   Schwagerl Felix, 2018, Ph.D. Dissertation
   Schwgerl Felix., 2015, ICSOFT-PT 2015 - Proceedings of the 10th International Conference on Software Paradigm Trends, Colmar, Alsace, France, 20-22 July, 2015, P5, DOI [10.5220/0005506600050018, DOI 10.5220/0005506600050018]
   Seidl C, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P22, DOI 10.1145/2648511.2648514
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Stnciulescu S., 2016, 2016 IEEE INT C SOFT, P323
   Thao C, 2012, PROC INT CONF SOFTW, P1619, DOI 10.1109/ICSE.2012.6227224
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tichy W. F., 1988, Proceedings of the International Workshop on Software Version and Configuration Control, P1
   Volter Markus., 2006, Model-Driven Software Development: Technology, Engineering, Management
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
   Zeller A., 1997, ACM Transactions on Software Engineering and Methodology, V6, P398, DOI 10.1145/261640.261654
NR 66
TC 9
Z9 9
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3373
EP 3420
DI 10.1007/s10270-019-00722-3
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600008
DA 2024-07-18
ER

PT J
AU Al-Refai, M
   Ghosh, S
   Cazzola, W
AF Al-Refai, Mohammed
   Ghosh, Sudipto
   Cazzola, Walter
TI Supporting inheritance hierarchy changes in model-based regression test
   selection
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Executable UML models; Inheritance hierarchy; Model-based adaptation;
   Model-based regression test selection; Model validation; Runtime
   adaptation; UML activity diagram; UML class diagram
AB Models can be used to ease and manage the development, evolution, and runtime adaptation of a software system. When models are adapted, the resulting models must be rigorously tested. Apart from adding new test cases, it is also important to perform regression testing to ensure that the evolution or adaptation did not break existing functionality. Since regression testing is performed with limited resources and under time constraints, regression test selection (RTS) techniques are needed to reduce the cost of regression testing. Applying model-level RTS for model-based evolution and adaptation is more convenient than using code-level RTS because the test selection process happens at the same level of abstraction as that of evolution and adaptation. In earlier work, we proposed a model-based RTS approach called MaRTS to be used with a fine-grained model-based adaptation framework that targets applications implemented in Java. MaRTS uses UML models consisting of class and activity diagrams. It classifies test cases as obsolete, reusable, or retestable based on changes made to UML class and activity diagrams of the system being adapted. However, MaRTS did not take into account the changes made to the inheritance hierarchy in the class diagram and the impact of these changes on the selection of test cases. This paper extends MaRTS to support such changes and demonstrates that the extended approach performs as well as or better than code-based RTS approaches in safely selecting regression test cases. While MaRTS can generally be used during any model-driven development or model-based evolution activity, we have developed it in the context of runtime adaptation. We evaluated the extended MaRTS on a set of applications and compared the results with code-based RTS approaches that also support changes to the inheritance hierarchy. The results showed that the extended MaRTS selected all the test cases relevant to the inheritance hierarchy changes and that the fault detection ability of the selected test cases was never lower than that of the baseline test cases. The extended MaRTS achieved comparable results to a graph-walk code-based RTS approach (DejaVu) and showed a higher reduction in the number of selected test cases when compared with a static analysis code-based RTS approach (ChEOPSJ).
C1 [Al-Refai, Mohammed; Ghosh, Sudipto] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Cazzola, Walter] Univ Milan, Dept Comp Sci, Milan, Italy.
C3 Colorado State University; University of Milan
RP Al-Refai, M (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM al-refai@cs.colostate.edu; ghosh@cs.colostate.edu; cazzola@di.unimi.it
RI Alrefai, mohammed/GZK-4263-2022; Ghosh, Sudipto/ABI-4888-2020; Cazzola,
   Walter/AAA-3953-2019
OI Cazzola, Walter/0000-0002-4652-8113
FU National Science Foundation [CNS 1305381]
FX This material is based upon work supported by the National Science
   Foundation under Grant No. CNS 1305381. We would like to acknowledge the
   support of Quinten Soetens who helped us install and run ChEOPSJ.
CR Al-Refai M, 2016, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2016.24
   Al-Refai M, 2016, IEEE HI ASS SYS ENGR, P23, DOI 10.1109/HASE.2016.40
   [Anonymous], 1989, INSIGHTS REGRESSION
   Arcuri A, 2016, IEEE INT CONF SOFTW, P401, DOI 10.1109/ICST.2016.44
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Cazzola Walter, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P237
   Cazzola W, 2014, COMPUT LANG SYST STR, V40, P2, DOI 10.1016/j.cl.2014.02.002
   Cazzola W, 2013, LECT NOTES COMPUT SC, V8107, P271, DOI 10.1007/978-3-642-41533-3_17
   Cazzola W, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1275, DOI 10.1145/1244002.1244278
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Cottenier T, 2007, J OBJECT TECHNOL, V6, P51, DOI 10.5381/jot.2007.6.7.a3
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Farooq Qurat-ul-ann, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P41, DOI 10.1109/ECBS.2010.12
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Georgas JC, 2009, COMPUTER, V42, P52, DOI 10.1109/MC.2009.335
   Harrold MJ, 1999, J SYST SOFTWARE, V47, P173, DOI 10.1016/S0164-1212(99)00037-0
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Hsia P, 1997, J SOFTW MAINT-RES PR, V9, P217, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<217::AID-SMR152>3.0.CO;2-2
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Pukall M, 2013, SOFTWARE PRACT EXPER, V43, P153, DOI 10.1002/spe.2107
   Pukall M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P989, DOI 10.1145/1985793.1985970
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Skoglund M, 2007, INT J SOFTW ENG KNOW, V17, P359, DOI 10.1142/S0218194007003306
   Soetens Q.D., 2015, EMPIR SOFTW ENG, P1
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   White L.J., 1997, P 10 INT SOFTW QUAL
   Yenigün H, 2014, SOFTWARE QUAL J, V22, P701, DOI 10.1007/s11219-013-9213-3
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
NR 38
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 937
EP 958
DI 10.1007/s10270-017-0636-3
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400009
DA 2024-07-18
ER

PT J
AU Hubner, F
   Huang, WL
   Peleska, J
AF Hubner, Felix
   Huang, Wen-ling
   Peleska, Jan
TI Experimental evaluation of a novel equivalence class partition testing
   strategy
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based testing; Equivalence class partition testing; Adaptive
   random testing; SysML; SystemC; State transition systems
AB In this paper, a complete model-based equivalence class testing strategy recently developed by the authors is experimentally evaluated. This black-box strategy applies to deterministic systems with infinite input domains and finite internal state and output domains. It is complete with respect to a given fault model. This means that conforming behaviours will never be rejected, and all non-conforming behaviours inside a given fault domain will be uncovered. We investigate the question how this strategy performs for systems under test whose behaviours lie outside the fault domain. Furthermore, a strategy extension is presented, that is based on randomised data selection from input equivalence classes. While this extension is still complete with respect to the given fault domain, it also promises a higher test strength when applied against members outside this domain. This is confirmed by an experimental evaluation that compares mutation coverage achieved by the original and the extended strategy with the coverage obtained by random testing. For mutation generation, not only typical software errors, but also critical HW/SW integration errors are considered. The latter can be caused by mismatches between hardware and software design, even in the presence of totally correct software.
C1 [Hubner, Felix; Huang, Wen-ling; Peleska, Jan] Univ Bremen, Dept Math & Comp Sci, Bremen, Germany.
C3 University of Bremen
RP Peleska, J (corresponding author), Univ Bremen, Dept Math & Comp Sci, Bremen, Germany.
EM felixh@cs.uni-bremen.de; huang@cs.uni-bremen.de; jp@cs.uni-bremen.de
FU University of Bremen
FX The authors would like to thank the anonymous referees for the careful
   and constructive review of this article. The work presented in this
   paper has been elaborated within project Implementable Testing Theory
   for Cyber-physical Systems (ITTCPS) (see
   http://www.informatik.uni-bremen.de/agbs/projects/ittcps/index.html)
   which has been granted by the University of Bremen in the context of the
   German Universities Excellence Initiative (see
   http://en.wikipedia.org/wiki/German_Universities_Excellence_Initiative).
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2001, APPL INTERVAL ANAL
   [Anonymous], 2006, 16662005 IEEE
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Belinfante A, 2010, LECT NOTES COMPUT SC, V6015, P266, DOI 10.1007/978-3-642-12002-2_21
   Biere A, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:5)2006
   Braunstein C, 2014, TECHNICAL REPORT
   Braunstein C, 2014, LECT NOTES COMPUT SC, V8829, P380, DOI 10.1007/978-3-319-11737-9_25
   Cavalcanti A, 2011, ACTA INFORM, V48, P97, DOI 10.1007/s00236-011-0133-z
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1999, MODEL CHECKING, P1
   Cousot P., 2006, 11 ANN AS COMP SCI C, P1, DOI DOI 10.1007/978-3-540-77505-8
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   Dranidis Dimitris, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P352, DOI 10.1007/978-3-642-33826-7_25
   Ernits JP, 2006, LECT NOTES COMPUT SC, V4262, P85
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Huang WL, 2017, FORM ASP COMPUT, V29, P335, DOI 10.1007/s00165-016-0402-2
   Huang WL, 2016, INT J SOFTW TOOLS TE, V18, P265, DOI 10.1007/s10009-014-0356-8
   Hübner F, 2015, LECT NOTES COMPUT SC, V9154, P155, DOI 10.1007/978-3-319-21215-9_10
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Kosmatov N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ISSRE.2004.12
   Lapschies F., 2014, SONOLAR HOMEPAGE
   Lecomte T., 2016, LECT NOTES COMPUTER, V9707, DOI [10.1007/978-3-319-33951-1, DOI 10.1007/978-3-319-33951-1]
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mueller-Gritschneder D, 2014, INT SYMP INTEGR CIRC, P460, DOI 10.1109/ISICIR.2014.7029567
   Object Management Group, 2015, TECHNICAL REPORT
   OMG UML, 2011, TECHNICAL REPORT
   Peleska J., 1997, South African Computer Journal, P53
   Peleska J., 2016, TECHNICAL REPORT
   Peleska J., 2013, ELECT P THEORETICAL, V111, P3, DOI DOI 10.4204/EPTCS.111.1
   Peleska J, 2016, LECT NOTES COMPUT SC, V9707, P32, DOI 10.1007/978-3-319-33951-1_3
   Peleska J, 2011, LECT NOTES COMPUT SC, V6617, P298, DOI 10.1007/978-3-642-20398-5_22
   Perez Jon, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P221, DOI 10.1109/EDCC.2010.34
   Petrenko Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P383, DOI 10.1007/s10009-012-0240-3
   Petrenko A., 1996, Formal Description Techniques IX. Theory, Application and Tools. IFIP TC6/6.1 International Conference on Formal Description Techniques IX/Protocol Specification, Testing and Verification XVI, P163
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   UNISIG, 2012, ERTMS ETCS SYST REQ
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
NR 48
TC 13
Z9 13
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 423
EP 443
DI 10.1007/s10270-017-0595-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300018
DA 2024-07-18
ER

PT J
AU Westfechtel, B
AF Westfechtel, Bernhard
TI Case-based exploration of bidirectional transformations in QVT Relations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven software engineering; Bidirectional model transformations;
   QVT Relations
ID TRIPLE GRAPH-GRAMMARS; MODEL TRANSFORMATION
AB QVT Relations (QVT-R), a standard issued by the Object Management Group, is a language for the declarative specification of model transformations. This paper focuses on a particularly interesting feature of QVT-R: the declarative specification of bidirectional transformations. Rather than writing two unidirectional transformations separately, a transformation developer may provide a single relational specification which may be executed in both directions. This approach saves specification effort and ensures the consistency of forward and backward transformations. This paper explores QVT-R's support for bidirectional model transformations through a spectrum of transformation cases. The transformation cases vary with respect to several factors such as the size of the transformation definition or the relationships between the metamodels for source and target models. The cases are solved in QVT-R, but may be applied to other bidirectional transformation languages, as well; thus, they may be used as a benchmark for comparing bidirectional transformation languages. In our work, we focus on the following research questions: functionality of bidirectional transformations in terms of relations between source and target models, solvability (which problems may be solved by a single relational specification of a bidirectional transformation), variability (does a bidirectional transformation contain varying elements, i.e., elements being specific to one direction), comprehensibility (referring to the ease of understanding and constructing QVT-R transformations), and the semantic soundness of bidirectional transformations written in QVT-R.
C1 [Westfechtel, Bernhard] Univ Bayreuth, Appl Comp Sci 1, D-95440 Bayreuth, Germany.
C3 University of Bayreuth
RP Westfechtel, B (corresponding author), Univ Bayreuth, Appl Comp Sci 1, D-95440 Bayreuth, Germany.
EM bernhard.westfechtel@uni-bayreuth.de
CR Adamson I. T., 1998, SET THEORY WORKBOOK
   Anjorin A., 2014, P WORKSHOPS EDBTICDT, V1133, P82
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], 2014, IKV TECHNOLOGIES MED
   [Anonymous], MET FAC MOF 2 0 QUER
   [Anonymous], 2014, TATA RES MODELMORF H
   Bradfield J, 2013, LECT NOTES COMPUT SC, V7793, P282, DOI 10.1007/978-3-642-37057-1_21
   Bradfield J, 2012, LECT NOTES COMPUT SC, V7212, P194, DOI 10.1007/978-3-642-28872-2_14
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Calegari Daniel, 2013, Formal Methods: Foundations and Applications. 16th Brazilian Symposium, SBMF 2013. Proceedings: LNCS 8195, P34, DOI 10.1007/978-3-642-41071-0_4
   Cheney J., 2014, CEUR WORKSHOP P, V1133, P87
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Dan L, 2010, IEEE INT C ENG COMP, P349, DOI [10.1109/ICECCS.2010.47, 10.1109/ICECCS.2010.55]
   de Lara J., 2009, FORMAL SUPPORT QVT R, P256
   Diskin Z, 2014, LECT NOTES COMPUT SC, V8568, P57
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   Elasaar M., 2011, LECT NOTES COMPUTER, V8569, P180
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Garcia M., 2008, P 2 WORKSHOP MDSD TO, P21
   Giandini R, 2009, 12 C IB SOFTW ENG CI, P73
   Goldfinch T., 2008, Proceedings of the 2008 AaeE Conference, P1
   Greiner S, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P15
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Guerra E, 2012, FUND INFORM, V114, P73, DOI 10.3233/FI-2011-618
   Hachenberger D., 2008, MATH INFORM
   HALMOS P. R., 1974, Undergraduate Texts in Mathematics, Vsecond
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Kerzner Harold., 1998, PROJECT MANAGEMENT S
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   Kübler J, 2009, LECT NOTES COMPUT SC, V5562, P50, DOI 10.1007/978-3-642-02674-4_5
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Lamancha B. P., 2009, P 6 INT WORKSH MOD D, P6
   Lengyel L., 2006, P 2 INT WORKSH GRAPH, V4, P1
   Li D., 2011, SIGSOFT SOFTWARE ENG, V36, P1, DOI DOI 10.1145/1921532.1921563
   Ma K, 2011, J UNIVERS COMPUT SCI, V17, P1863
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Mens T., 2005, WORKSH GRAPH MOD TRA, V152, P125
   Mora B, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL DISI, P117
   Object Management Group, 2013, COR SPEC VERS 2 4 1
   Object Management Group, 2012, OBJ CONSTR LANG VERS
   Perez-Castillo R., 2014, LECT NOTES COMPUTER, V6142, P57
   Reddy S., 2006, TECH REP
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   Romeikat R, 2008, LECT NOTES COMPUT SC, V5063, P137, DOI 10.1007/978-3-540-69927-9_10
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr A., 2009, LECT NOTES COMPUTER, V5795
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Schwichtenberg S, 2014, LECT NOTES COMPUT SC, V8569, P180
   Steinberg D., 2009, ECLIPSE SERIES
   Stevens P, 2013, SOFTW SYST MODEL, V12, P175, DOI 10.1007/s10270-011-0198-8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Westfechtel B, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P141
   Westfechtel Bernhard., 2015, EVALUATION NOVEL APP, V599, P141, DOI DOI 10.1007/978-3-319-30243-0_8
   Willink E., 2015, QVT DECLARATIVE QVT
   Wimmer M., 2009, REVIVING QVT RELATIO, P727
NR 63
TC 20
Z9 20
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 989
EP 1029
DI 10.1007/s10270-016-0527-z
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ7YK
UT WOS:000435606000012
DA 2024-07-18
ER

PT J
AU Mashkoor, A
   Yang, FQ
   Jacquot, JP
AF Mashkoor, Atif
   Yang, Faqing
   Jacquot, Jean-Pierre
TI Refinement-based Validation of Event-B Specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal methods; Refinement; Model validation; Event-B
ID SOFTWARE-DEVELOPMENT
AB The validation of formal specifications is a challenging task. It is one of the factors that impede the penetration of formal methods into the common practices of software development. This paper discusses the issue of validating formal models by executing them in the context of Event-B. The most important problem lies in the non-determinism which often prevents purely automatic tools to execute models. In this paper, we first present and discuss the techniques we have created to allow the execution of models at all levels of abstraction. These techniques rely on users to overcome the barriers resulting from non-deterministic features by either modifying the model or providing ad hoc implementations. Then, we present our main contribution, the formal definition of the notion of fidelity, that guarantees that all the observable behaviors of the executable models are indeed specified by the original (non-deterministic) models. The notion of fidelity can be expressed in terms of proof obligations.
C1 [Mashkoor, Atif] Software Competence Ctr Hagenberg, Hagenberg Im Muhlkreis, Austria.
   [Jacquot, Jean-Pierre] LORIA, Lorraine, France.
   [Jacquot, Jean-Pierre] Univ Vandoeuvre Nancy, Lorraine, France.
C3 Softwarepark Hagenberg; Universite de Lorraine
RP Mashkoor, A (corresponding author), Software Competence Ctr Hagenberg, Hagenberg Im Muhlkreis, Austria.
EM Atif.Mashkoor@scch.at; philippeyang@gmail.com;
   Jean-Pierre.Jacquot@loria.fr
RI Jacquot, Jean-Pierre/A-1571-2012; Mashkoor, Atif/AAK-6747-2020
OI Mashkoor, Atif/0000-0003-1210-5953
CR Abrial J.-R., 2013, LNCS, V7940, P1, DOI DOI 10.1007/978-3-642-38613-8_
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J-R., 1996, The B Book
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   [Anonymous], 2003, ALAN APT SERIES
   Beizer B, 2000, ANN SOFTW ENG, V10, P293, DOI 10.1023/A:1018999919169
   Bendisposto Jens, 2008, Technique et Science Informatiques, V27, P1065, DOI 10.3166/TSI.27.1065-1084
   Bjorner D, 2010, LECT NOTES COMPUT SC, V5947, P2, DOI 10.1007/978-3-642-11486-1_2
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Boulanger J.-L, 2013, IND USE FORMAL METHO
   Broy M, 1999, LECT NOTES COMPUT SC, V1641, P44
   Cansell D, 2003, COMPUT INFORM, V22, P221
   Daviet P, 1996, PROCEEDINGS OF THE 1996 IEEE INTELLIGENT VEHICLES SYMPOSIUM, P41, DOI 10.1109/IVS.1996.566349
   DEITERS W, 1989, LECT NOTES COMPUT SC, V387, P100
   DEROEVER WP, 1999, DATA REFINEMENT MODE
   Egyed A, 2004, LECT NOTES COMPUT SC, V2984, P37
   ERASMY F, 1995, LECT NOTES COMPUTER, V891, P277
   Finney K, 1996, IEEE T SOFTWARE ENG, V22, P158, DOI 10.1109/32.485225
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Groslambert J, 2007, LECT NOTES COMPUT SC, V4355, P109
   Hoare C. A. R., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P1
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   ISO, 2013, ISO 9000 QUAL MAN
   Kossak Felix, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P184, DOI 10.1007/978-3-319-05843-6_14
   Kutzer P, 2011, P IEEE RAP SYST PROT, P128, DOI 10.1109/RSP.2011.5929986
   Mashkoor A., 2015, 16 IEEE S HIGH ASS S, P158
   Mashkoor A., 2015, LECT NOTES BUSINESS, V200, P120, DOI DOI 10.1007/978-3-319-13251-8_
   Mashkoor A., 2011, THESIS
   Mashkoor A, 2011, 18 AS PAC SOFTW ENG
   Mashkoor A, 2009, 2 INT WORKSH CERT SA
   Mashkoor A, 2011, REQUIR ENG, V16, P191, DOI 10.1007/s00766-011-0120-5
   Mentre D., 2010, 10 INT C INT TRANSP
   Mery D., 2011, P 2 S INF COMM TECHN, P179, DOI DOI 10.1145/2069216.2069252
   Milner R, 1982, CALCULUS COMMUNICATI
   Nakatani T, 2011, ASIA PAC SOFWR ENG, P357, DOI 10.1109/APSEC.2011.56
   Rushby J., 1993, CLS937 SRI INT CLS937 SRI INT
   Savicks V., 2014, ABZ 2014 LANDING GEA, V433, P148, DOI [10.1007/978-3-319-07512-9_11, DOI 10.1007/978-3-319-07512-9_11]
   Schneider S, 2014, FORM ASP COMPUT, V26, P251, DOI 10.1007/s00165-012-0265-0
   Servat T, 2007, LECT NOTES COMPUT SC, V4355, P274
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   Whalen M, 2008, LECT NOTES COMPUT SC, V4916, P68
   Wright S, 2011, FORM ASP COMPUT, V23, P73, DOI 10.1007/s00165-009-0142-7
   Yang F., 2013, THESIS
   Yang FQ, 2012, ASIA PAC SOFWR ENG, P85, DOI [10.1109/ICGPR.2012.6254838, 10.1109/APSEC.2012.66]
   Yang FQ, 2011, LECT NOTES COMPUT SC, V6617, P438, DOI 10.1007/978-3-642-20398-5_31
NR 46
TC 7
Z9 8
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 789
EP 808
DI 10.1007/s10270-016-0514-4
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800010
DA 2024-07-18
ER

PT J
AU Hebig, R
   Giese, H
AF Hebig, Regina
   Giese, Holger
TI On the complex nature of MDE evolution and its impact on changeability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Evolution; Empirical research
ID MODEL
AB In model-driven engineering (MDE), a particular MDE setting of employed languages and automated and manual activities has major impact on productivity. Furthermore, it has been observed that such MDE settings evolve over time. However, currently not much is known about this evolution and its impact on the MDE setting's maturity, i.e., on changeability and other productivity dimensions. Research so far focuses on evolution of separate building blocks, such as (modeling-) languages, tools, or transformation, only. In this article, we address the lack of knowledge about evolution of MDE settings by investigating case studies from different companies. The first results reveal (1) that there is evolution that affects the composition of an MDE setting (structural evolution) and has the potential to strongly impact aspects, such as changeability and (2) that this structural evolution actually occurs in practice. Based on these first results, we investigated (3) whether there are cases in practice, where structural evolution already altered the risks of changeability given by the respective MDE setting. Therefore, we search and identify examples for such evolution steps on MDE settings from practice and collected six case studies on evolution histories in detail. As a result, we show in this paper that structural evolution (a) is not seldom in practice and (b) sometimes leads to the introduction of changeability risks.
C1 [Hebig, Regina] UPMC Univ Paris 06, Sorbonne Univ, LIP6, UMR 7606, F-75005 Paris, France.
   [Giese, Holger] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
C3 Sorbonne Universite; University of Potsdam
RP Hebig, R (corresponding author), UPMC Univ Paris 06, Sorbonne Univ, LIP6, UMR 7606, F-75005 Paris, France.
EM rhebig@acm.org; holger.giese@hpi.uni-potsdam.de
RI Giese, Holger/W-5309-2019; Hebig, Regina/B-5284-2015
OI Giese, Holger/0000-0002-4723-730X; Hebig, Regina/0000-0002-1459-2081
FU HPI Research School on Service-Oriented Systems Engineering
FX First of all, the authors appreciate the valuable feedback of Florian
   Stallmann and Andreas Seibel, who co-authoredthe conference paper [14].
   We are also grateful to the participants of our studies with SAP,
   Carmeq, VCat, and Capgemini and especially Axel Uhl, Cafer Tosun, Gregor
   Engels, and Marion Kremer for their support in choosing the case studies
   and for making this research possible. We are thankful to Hannelore
   Liero and Hilmar Buchholz for hints and feedback on the statistical
   analysis. Further, we thank the HPI Research School on Service-Oriented
   Systems Engineering for funding parts of this research. Last but not
   least, we want to thank the anonymous reviewers of this article for
   their constructive feedback, which helped us to improve the paper.
CR [Anonymous], UML 2 0 SUP SPEC
   Appleton B, 1997, OBJECT MAG ONLINE, V3
   Aschauer T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P49, DOI 10.1145/1810295.1810304
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Correa C.K.F., 2011, P 15 SPLC, V2
   Deng G., 2003, P ACM OOPSLA WORKSH
   Favre JM, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P33, DOI 10.1109/IWPSE.2005.22
   Fleurey F, 2007, LECT NOTES COMPUT SC, V4735, P482
   Hebig R., 2011, PROC INT C SOFTWARE, P33
   Hebig R., 2012, 58 HASS PLATTN I U P
   Hebig R., 2012, 2012 INT C SOFTW SYS
   Hebig R., 2012, P 2012 INT C SOFTW S
   Hebig R., 2013, LNCS
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Johannes J, 2010, LECT NOTES COMPUT SC, V6138, P132, DOI 10.1007/978-3-642-13595-8_12
   Karaila M., 2009, P 9 OOPSLA WORKSH DO, P1
   Karanam M., 2009, P INT MULT ENG COMP, V1
   Khalil A., 2013, TECH REP
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   Mansurov N, 2005, LECT NOTES COMPUT SC, V3297, P219
   Martínez Y, 2011, LECT NOTES COMPUT SC, V6998, P233, DOI 10.1007/978-3-642-24606-7_18
   Mens T., 2007, 6 BELGIAN NETHERLAND
   Meyers B., 2009, 8 BELGAIN NETHERLAND
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Noy NF, 2004, KNOWL INF SYST, V6, P428, DOI 10.1007/s10115-003-0137-2
   Roddick J. F., 1992, SIGMOD Rec, V21, P35, DOI [DOI 10.1145/141818.141826, 10.1145/141818.14 1826, 10.1145/141818.141826]
   Sadovykh A, 2009, LECT NOTES COMPUT SC, V5562, P265, DOI 10.1007/978-3-642-02674-4_19
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shirtz D, 2007, LECT NOTES COMPUT SC, V4530, P172
   Stammel J., 2011, SOFTWARE EVOLUTION I
   van Deursen A., 2007, Proceedings of the Workshop on Model-Driven Software Evolution (MoDSE), P41
   Vogel R., 2009, MOD EV JOINT MODELS, P68
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Yie A, 2009, LECT NOTES COMPUT SC, V5795, P551, DOI 10.1007/978-3-642-04425-0_42
NR 40
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 333
EP 356
DI 10.1007/s10270-015-0464-2
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400004
DA 2024-07-18
ER

PT J
AU Mosterman, PJ
   Zander, J
AF Mosterman, Pieter J.
   Zander, Justyna
TI Industry 4.0 as a Cyber-Physical System study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-Physical Systems; Industry 4.0; Modeling and simulation;
   Industrial practice
AB Advances in computation and communication are taking shape in the form of the Internet of Things, Machine-to-Machine technology, Industry 4.0, and Cyber-Physical Systems (CPS). The impact on engineering such systems is a new technical systems paradigm based on ensembles of collaborating embedded software systems. To successfully facilitate this paradigm, multiple needs can be identified along three axes: (i) online configuring an ensemble of systems, (ii) achieving a concerted function of collaborating systems, and (iii) providing the enabling infrastructure. This work focuses on the collaborative function dimension and presents a set of concrete examples of CPS challenges. The examples are illustrated based on a pick and place machine that solves a distributed version of the Towers of Hanoi puzzle. The system includes a physical environment, a wireless network, concurrent computing resources, and computational functionality such as, service arbitration, various forms of control, and processing of streaming video. The pick and place machine is of medium-size complexity. It is representative of issues occurring in industrial systems that are coming online. The entire study is provided at a computational model level, with the intent to contribute to the model-based research agenda in terms of design methods and implementation technologies necessary to make the next generation systems a reality.
C1 [Mosterman, Pieter J.] MathWorks, 3 Apple Hill Dr, Natick, MA 01760 USA.
   [Zander, Justyna] Worcester Polytech Inst, Worcester, MA 01609 USA.
   [Mosterman, Pieter J.] McGill Univ, Sch Comp Sci, 3480 Univ St Montreal, Montreal, PQ H3A 2A7, Canada.
C3 MathWorks; Worcester Polytechnic Institute; McGill University
RP Zander, J (corresponding author), Worcester Polytech Inst, Worcester, MA 01609 USA.
EM pieter.mosterman@mathworks.com; justyna.zander@gmail.com
RI Zander, Justyna/C-8207-2013
OI Zander, Justyna/0000-0001-7215-0962
CR acatech Final report of the Industrie 4.0 Working Group, 2013, SEC FUT GERM MAN IND
   [Anonymous], CYB PHYS SYST DRIV F
   [Anonymous], 2008, INT S OBJ COMP SERV
   Arrieta Aitor, 2014, 6 INT C ADV SYST TES, P66
   Bringmann Eckard, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P485, DOI 10.1109/ICST.2008.45
   Di Natale M, 2010, IEEE T IND INFORM, V6, P637, DOI 10.1109/TII.2010.2072511
   France R, 2013, SOFTW SYST MODEL, V12, P223, DOI 10.1007/s10270-013-0346-4
   Gyrard A, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P559, DOI 10.1109/WF-IoT.2014.6803229
   Huhn M., 2004, FORMAL METHODS AUTOM, P161
   Kaiser B, 2010, LECT NOTES COMPUT SC, V6351, P452, DOI 10.1007/978-3-642-15651-9_33
   Levinson J, 2013, ROBOTICS SCI SYSTEMS
   Liu J., 2005, MSRTR200528
   Mosterman P, 2011, Model-based testing for embedded systems
   Mosterman P.J., 2015, GITHUB REPOSITORY TO, DOI [10.5281/zenodo.13977, DOI 10.5281/ZENODO.13977]
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P5, DOI 10.1007/s10270-015-0469-x
   Mosterman PJ, 2014, COMPUT SCI ENG, V16, P90, DOI 10.1109/MCSE.2014.58
   Mosterman Pieter J., 2013, P 1 WORKSH CPS ED PH
   Mosterman PJ, 2004, IEEE T CONTR SYST T, V12, P223, DOI 10.1109/TCST.2004.824280
   Mosterman PJ, 2000, PROCEEDINGS OF THE 2000 IEEE INTERNATIONAL SYMPOSIUM ON COMPUTER-AIDED CONTROL SYSTEM DESIGN, P65, DOI 10.1109/CACSD.2000.900188
   National Institute of Standards and Steering Committee Technology, 2013, STRAT VIS BUS DRIV 2
   Russell S., 2015, Research priorities for robust and beneficial artificial intelligence
   Samad T., 2011, IMPACT CONTROL TECHN
   Sanders JW, 2012, FORM ASP COMPUT, V24, P45, DOI 10.1007/s00165-011-0190-7
   SERS Consortium, SMART EM RESP SYST G, DOI [10.5281/zenodo.13978, DOI 10.5281/ZENODO.13978]
   Steering Committee for Foundations in Innovation for Cyber-Physical Systems, 2013, TECHNICAL REPORT
   Uhrmacher A. M, 2009, MULTIAGENT SYSTEMS S
   Vermessan O., 2014, RIVER PUBLISHERS SER
   Waibel M, 2011, IEEE ROBOT AUTOM MAG, V18, P69, DOI 10.1109/MRA.2011.941632
   Zander J, 2014, COMPUT ANAL SYNTH DE, P1
   Zander J., MODEL LOOP TEST EMBE, DOI [10.5281/zenodo.13983, DOI 10.5281/ZENODO.13983]
   Zander-Nowicka J, 2006, IEEE AUTOTESTCON, P770
   ZERGAINOH NE, 2004, P IEEE INT WORKSH SY, P296
NR 32
TC 143
Z9 154
U1 2
U2 218
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 17
EP 29
DI 10.1007/s10270-015-0493-x
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200003
DA 2024-07-18
ER

PT J
AU Posse, E
   Dingel, J
AF Posse, Ernesto
   Dingel, Juergen
TI An executable formal semantics for UML-RT
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML-RT; RTE; Modelling; Semantics
AB We propose a formal semantics for UML-RT, a UML profile for real-time and embedded systems. The formal semantics is given by mapping UML-RT models into a language called kiltera, a real-time extension of the -calculus. Previous attempts to formalize the semantics of UML-RT have fallen short by considering only a very small subset of the language and providing fundamentally incomplete semantics based on incorrect assumptions, such as a one-to-one correspondence between "capsules" and threads. Our semantics is novel in several ways: (1) it deals with both state machine diagrams and capsule diagrams; (2) it deals with aspects of UML-RT that have not been formalized before, such as thread allocation, service provision points, and service access points; (3) it supports an action language; and (4) the translation has been implemented in the form of a transformation from UML-RT models created with IBM's RSA-RTE tool, into kiltera code. To our knowledge, this is the most comprehensive formal semantics for UML-RT to date.
C1 [Posse, Ernesto; Dingel, Juergen] Queens Univ, Sch Comp, Modelling & Anal Software Engn, Kingston, ON, Canada.
C3 Queens University - Canada
RP Posse, E (corresponding author), Queens Univ, Sch Comp, Modelling & Anal Software Engn, Kingston, ON, Canada.
EM eposse@cs.queensu.ca
FU Malina Software; IBM Canada; Natural Sciences and Engineering Research
   Council of Canada (NSERC); Ontario Centres for Excellence (OCE)
FX We are indebted to Bran Selic for his support and his insights into the
   semantics of UML-RT. We also thank Malina Software, IBM Canada, and the
   Natural Sciences and Engineering Research Council of Canada (NSERC) and
   the Ontario Centres for Excellence (OCE), which provided financial
   support. We would also like to thank Eyrak Paen for his implementation
   of the transformation, which was instrumental in the proper definition
   of the mapping. Finally, Karolina Zurowska and Eric Rapos also provided
   very useful input on RoseRT and RSA-RTE.
CR Akhlaki KB, 2007, SCI COMPUT PROGRAM, V65, P41, DOI 10.1016/j.scico.2006.08.005
   [Anonymous], 2012, OMG SYST MOD LANG OM
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], UML PROF SCHED PERF
   BERGSTRA JA, 1984, INFORM CONTROL, V60, P109, DOI 10.1016/S0019-9958(84)80025-X
   Bertolino A., 2005, TECHNICAL REPORT
   Bezerra J. M, 2009, Adv. Softw. Eng., V2009, P1
   Boudol Gerard., 1992, Tech. Rep. 1702
   Cho SM, 2002, INFORM PROCESS LETT, V84, P125, DOI 10.1016/S0020-0190(02)00270-3
   Damm Werner, 2002, FMCO, V2852, P71, DOI [10.1007/978-3-540-39656-7-3, DOI 10.1007/978-3-540-39656-7-3]
   David A., 2003, LNCS, P218
   de Melo Bezerra J., 2007, P INT WORKSH RAP SYS
   Dingel J., 2010, P 2 INT WORKSH BEH M
   Douglass B. P., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P53
   Engels G., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P212
   Eshuis R., 2001, TECHNICAL REPORT
   Fecher H, 2006, ELECTRON NOTES THEOR, V156, P79, DOI 10.1016/j.entcs.2005.08.008
   Ferreira P, 2008, ELECTRON NOTES THEOR, V195, P57, DOI 10.1016/j.entcs.2007.08.026
   Fischer C., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P91
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Grosu R., 1999, BEHAV SPECIFICATION, P73
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HONDA K, 1991, LECT NOTES COMPUT SC, V512, P133
   IBM, 2005, GEN DESCR LANG
   IBM, 2010, IBM RAT ROS TECHN DE
   IBM, 2010, IBM RAT SOFTW ARCH R
   *IEEE COMP SOC, 2001, 13642001 IEEE COMP S
   IEEE Computer Society, 2009, 10762008 IEEE
   IEEE Computer Society, 2013, 18002012 IEEE
   JEFFERSON DR, 1985, ACM T PROGR LANG SYS, V7, P404, DOI 10.1145/3916.3988
   Lano K., 2009, UML 2 SEMANTICS APPL, P179
   Leue S, 2008, LECT NOTES BUS INF P, V11, P238
   Li XS, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P168
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   Milner R., 1989, LNCS
   Mrowka R, 2008, PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED COMPUTING, P459, DOI 10.1109/ISPDC.2008.60
   Muthiayen D, 2000, THESIS CONCORDIA U
   Ng MY, 2003, I C SOFTW ENG FORM M, P138
   Object Management Group, 2012, UML SUP SPEC
   Object Management Group, 2011, UML SUP SPCE
   Object Management Group, 2011, UML PROF MARTE MOD A
   Paltor I., 1999, TECHNICAL REPORT
   Posse E., 2010, P 14 IEEE ACM INT S
   Posse E., 2010, LNCS
   Posse E., 2009, 2009557 QUEENS U SCH
   Posse E., 2012, 2012591 QUEENS U SCH
   Posse E., 2007, P 40 ANN SIM S ANSS
   Posse E., 2008, THESIS MCGILL U
   Ramos R, 2005, LECT NOTES COMPUT SC, V3535, P99
   SAE International: Architecture Analysis & Design Language (AADL), 2012, AS5506B SAE INT
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 2012, COMMUNICATION
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
   Shankar S, 2003, LECT NOTES COMPUT SC, V2863, P60
   Storrle H., 2005, Software Engineering, P117
   Tunon ManuelI. Capel., 2006, Jornadas de Ingeniera del Software y Bases de Datos (JISBD), P283
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
   von der Beeck M, 2006, LECT NOTES COMPUT SC, V4199, P768
   Yeung WL, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P176, DOI 10.1109/APSEC.2005.70
   Zeigler B. P., 1976, Theory of Modeling and Simulation
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zhang T., 2009, P 4 INT C INT COMP S, P12
NR 63
TC 25
Z9 30
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 179
EP 217
DI 10.1007/s10270-014-0399-z
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bottoni, P
   Fish, A
   Presicce, FP
AF Bottoni, Paolo
   Fish, Andrew
   Presicce, Francesco Parisi
TI Spider Graphs: a graph transformation system for spider diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Diagrammatic reasoning; Graph transformations; Spider diagrams; Spider
   Graphs; Reasoning strategies
ID MODEL TRANSFORMATION; EULER DIAGRAMS; CONSTRAINTS; CHECKING; LOGIC
AB The use of diagrammatic logic as a reasoning mechanism to produce inferences on subsets of some universe could provide away to overcome the current limitations of visual modelling methods, which have to be integrated with textual languages to express complex constraints. Onthe other hand, graph transformations are becoming widespread as away to express formal semantics for visual modelling languages, so that a mechanisation of diagrammatic logic based on graph transformation would facilitate language integration, based on a common underlying machinery. In this paper, we propose such a mechanisation for spider diagrams (SDs), an established language for reasoning with diagrams modelling relations between sets and constraints on their cardinalities. The concrete syntax of SDs extends that of Euler diagrams that use closed curves and the enclosed regions to represent sets and their intersections. The language is augmented with reasoning rules, i.e. syntactic transformation rules corresponding to logical inference rules. However, these rules are typically defined in procedural terms, so that a completely formal specification and an adequate mechanisation of them has not been achieved yet. We propose an abstract syntax for SDs in terms of typed graphs and define the corresponding language of Spider Graphs (SGs), expressing reasoning rules for SDs as graph transformation units. This enables a direct realisation of the reasoning system via graph transformation tools without resorting to ad hoc implementations, and we provide an implementation in AGG. Techniques for static analysis become available to reason on proof strategies and on possible optimisations.
C1 [Bottoni, Paolo; Presicce, Francesco Parisi] Univ Roma La Sapienza, Dept Comp Sci, I-00185 Rome, Italy.
   [Fish, Andrew] Univ Brighton, Sch Comp Engn & Math, Brighton, E Sussex, England.
C3 Sapienza University Rome; University of Brighton
RP Fish, A (corresponding author), Univ Brighton, Sch Comp Engn & Math, Brighton, E Sussex, England.
EM bottoni@di.uniroma1.it; Andrew.fish@brighton.ac.uk;
   parisi@di.uniroma1.it
RI Bottoni, Paolo/AAE-5789-2020; Fish, Andrew/J-8460-2019
OI Fish, Andrew/0000-0003-3758-0128; Bottoni, Paolo/0000-0003-4662-2019
FU UK EPSRC [EP/E011160, EP/J010898/1]; EPSRC [EP/J010898/1] Funding
   Source: UKRI
FX We thank the anonymous referees for many insightful comments on the
   previous version which have helped us to greatly improve the paper.
   Thanks to John Taylor for comments on an early draft. Andrew Fish was
   partially funded by UK EPSRC grants EP/E011160: Visualisation with Euler
   Diagrams and EP/J010898/1: Automatic Diagram Generation. We also thank
   the AGG team, in particular Claudia Ermel and Olga Runge, for assistance
   with the implementation.
CR [Anonymous], 1984, Conceptual Structures: Information Processing in Mind and Machine
   [Anonymous], 2004, J SOFTWARE SYSTEM MO
   [Anonymous], ENTCS
   [Anonymous], MET FAC MOF 2 0 QUER
   [Anonymous], P DISTR MULT SYST IN
   [Anonymous], 1994, The logical status of diagrams
   [Anonymous], 2005, LMS Journal of Computation and Mathematics, DOI DOI 10.1112/S1461157000000942
   Barwise J., 1994, Hyperproof
   Barwise J., 1996, LOGICAL REASONING DI, P3
   Bottoni P, 2000, LECT NOTES COMPUT SC, V1939, P294
   Bottoni P, 2000, IEEE VISLANG, P59, DOI 10.1109/VL.2000.874351
   BOTTONI P, 2001, LNCS, V2185, P257
   Bottoni P, 2010, LECT NOTES ARTIF INT, V6170, P39, DOI 10.1007/978-3-642-14600-8_8
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Chow S. S., 2007, THESIS
   Cordasco G, 2009, S VIS LANG HUM CEN C, P185, DOI 10.1109/VLHCC.2009.5295265
   Corradini A, 2006, LECT NOTES COMPUT SC, V4178, P30
   de Lara J, 2004, LECT NOTES ARTIF INT, V2980, P182
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 1996, Handbook of Graph Grammars and Computing by Graph Transformation, V1, P247
   Ehrig H, 2006, FUND INFORM, V74, P135
   Ehrig H, 2006, FUND INFORM, V74, P31
   Ehrig K, 2006, LECT NOTES COMPUT SC, V4037, P156
   Ehrig K, 2006, ELECTRON NOTES THEOR, V152, P23, DOI 10.1016/j.entcs.2006.01.012
   Euler L, 1775, LETTERS, V2, P102
   Fish A, 2005, J VISUAL LANG COMPUT, V16, P541, DOI 10.1016/j.jvlc.2005.03.001
   Fish A., 2009, P GT VMT 2009 ECEASS, V18
   Fish A., 2005, P VIS LANG FORM METH, V127, P53
   Fish A, 2008, LECT NOTES ARTIF INT, V5223, P206, DOI 10.1007/978-3-540-87730-1_20
   Flower J, 2008, J VISUAL LANG COMPUT, V19, P675, DOI 10.1016/j.jvlc.2008.01.004
   Flower J, 2004, LECT NOTES ARTIF INT, V2980, P166
   Goedicke M, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P92, DOI 10.1109/ISRE.1999.777989
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hammer E, 1998, HIST PHILOS LOGIC, V19, P1, DOI 10.1080/01445349808837293
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Howse J, 2001, J VISUAL LANG COMPUT, V12, P299, DOI 10.1006/jvlc.2000.0210
   Jamnik M., 2001, CSLI
   Kent S, 1997, ACM SIGPLAN NOTICES, V32, P327, DOI 10.1145/263700.263756
   Kreowski HJ, 1997, INT J SOFTW ENG KNOW, V7, P479, DOI 10.1142/S0218194097000278
   Münch M, 2000, LECT NOTES COMPUT SC, V1764, P338
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P226
   Ruskey F., 1997, ELECT J COMB
   Stapleton G, 2005, J LOGIC COMPUT, V15, P975, DOI 10.1093/logcom/exi041
   Stapleton G, 2004, J LOGIC COMPUT, V14, P857, DOI 10.1093/logcom/14.6.857
   Stapleton G, 2007, J AUTOM REASONING, V39, P431, DOI 10.1007/s10817-007-9069-y
   Taentzer G., 1996, BERICHTE INFORM
   Thièvre J, 2005, ELECTRON NOTES THEOR, V134, P189, DOI 10.1016/j.entcs.2005.02.024
   Urbas Matej, 2012, Diagrammatic Representation and Inference. Proceedings 7th International Conference, Diagrams 2012, P163, DOI 10.1007/978-3-642-31223-6_19
   Warmer J., 1999, AW OBJ TECHNOL S
   Zykov A. A., 1974, Russ. Math. Surv., V29, P89, DOI [10.1070/RM1974v029n06ABEH001303, DOI 10.1070/RM1974V029N06ABEH001303]
NR 54
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1421
EP 1453
DI 10.1007/s10270-013-0381-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koch, I
AF Koch, Ina
TI Petri nets in systems biology
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Petri net; Systems biology; T-invariant; MCT-set; T-cluster; Citrate
   cycle
ID GENOME-SCALE RECONSTRUCTION; BIOCHEMICAL NETWORKS; ESCHERICHIA-COLI;
   METABOLIC NETWORKS; PATHWAY ANALYSIS; VALIDATION; SIMULATION
AB Petri nets are used in many areas. This article discusses the application of Petri nets in systems biology. Using an example from biochemistry, concepts for the automatic decomposition of biochemical systems are introduced. The article focuses on those concepts that fulfill steady-state conditions. Interestingly, all the concepts are based on minimal, semi-positive transition invariants. The article describes, which new definitions for network decomposition can be derived and how they can be interpreted in the context of biology. This is illustrated with the example of the citric acid cycle, for which a new metabolic pathway could be predicted with the help of such an analysis.
C1 Goethe Univ Frankfurt, Inst Comp Sci, Mol Bioinformat, D-60325 Frankfurt, Germany.
C3 Goethe University Frankfurt
RP Koch, I (corresponding author), Goethe Univ Frankfurt, Inst Comp Sci, Mol Bioinformat, Robert Mayer Str 11-15, D-60325 Frankfurt, Germany.
EM ina.koch@bioinformatik.uni-frankfurt.de
RI Koch, Ina/D-8899-2011
OI Koch, Ina/0000-0002-3621-003X
CR Ackermann J, 2012, J THEOR BIOL, V315, P71, DOI 10.1016/j.jtbi.2012.08.042
   Ackermann J., 2011, Modeling in Systems Biology: The Petri Net Approach, P153
   [Anonymous], 2000, Pac Symp Biocomput
   [Anonymous], HDB RES COMPUTATIONA
   [Anonymous], 1994, J BIOL SYSTEMS, DOI DOI 10.1142/S0218339094000131
   Backhaus K., 2003, MULTIVARIATE ANAL ME, V10th
   Bahi-Jaber N, 2003, MATH BIOSCI, V185, P1, DOI 10.1016/S0025-5564(03)00088-9
   Berg J. M., 2002, BIOCHEMISTRY
   Bortfeldt Ralf H., 2010, In Silico Biology, V10, P89, DOI 10.3233/ISB-2010-0419
   Chaouiya C, 2007, BRIEF BIOINFORM, V8, P210, DOI 10.1093/bib/bbm029
   CLARKE BL, 1988, CELL BIOPHYS, V12, P237, DOI 10.1007/BF02918360
   CLARKE BL, 1981, J CHEM PHYS, V75, P4970, DOI 10.1063/1.441885
   Doi Atsushi, 2006, In Silico Biology, V6, P1
   Einloft J, 2013, BIOINFORMATICS, V29, P1469, DOI 10.1093/bioinformatics/btt165
   Esparza J., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P374
   FIEBER M, 2004, THESIS BRANDENBURG U
   Finney A, 2003, BIOCHEM SOC T, V31, P1472
   Fischer E, 2003, J BIOL CHEM, V278, P46446, DOI 10.1074/jbc.M307968200
   Förster J, 2003, GENOME RES, V13, P244, DOI 10.1101/gr.234503
   Genrich H., 2001, International Journal on Software Tools for Technology Transfer, V3, P394, DOI 10.1007/s100090100058
   Grafahrend-Belau E, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-90
   GRAFAHRENDBELAU E, 2006, THESIS TU APPL SCI B
   Stefanie G, 2008, BIOSYSTEMS, V92, P189, DOI 10.1016/j.biosystems.2008.02.005
   HEINRICH R, 1974, EUR J BIOCHEM, V42, P89, DOI 10.1111/j.1432-1033.1974.tb03318.x
   Hoops S, 2006, BIOINFORMATICS, V22, P3067, DOI 10.1093/bioinformatics/btl485
   Kielbassa J, 2009, COMPUT BIOL CHEM, V33, P46, DOI 10.1016/j.compbiolchem.2008.07.022
   Klamt S, 2004, BIOINFORMATICS, V20, P226, DOI 10.1093/bioinformatics/btg395
   Koch I, 2005, BIOINFORMATICS, V21, P1219, DOI 10.1093/bioinformatics/bti145
   Koch I, 2011, COMPUT BIOL SER, V16, P3, DOI 10.1007/978-1-84996-474-6_1
   Larhlimi A, 2009, DISCRETE APPL MATH, V157, P2257, DOI 10.1016/j.dam.2008.06.039
   Lautenbach K, 1973, BERICHTE DER GMD, V82
   Liao JC, 1996, BIOTECHNOL BIOENG, V52, P129, DOI 10.1002/(SICI)1097-0290(19961005)52:1<129::AID-BIT13>3.0.CO;2-J
   MTZ-Stiftung, 2012, DEF SYST BIOL
   Mura I., 2011, MODELING SYSTEMS BIO, P121
   Nagasaki Masao, 2011, Stud Health Technol Inform, V162, P160
   Orth JD, 2011, MOL SYST BIOL, V7, DOI 10.1038/msb.2011.65
   Peleg M., 2005, J AM MED INFORM ASSN, V12, P369
   Pérès S, 2011, BIOSYSTEMS, V103, P410, DOI 10.1016/j.biosystems.2010.12.001
   Pfeiffer T, 1999, BIOINFORMATICS, V15, P251, DOI 10.1093/bioinformatics/15.3.251
   Popova-Zeugmann L, 2005, FUND INFORM, V67, P149
   Priami C, 2001, INFORM PROCESS LETT, V80, P25, DOI 10.1016/S0020-0190(01)00214-9
   Reddy V N, 1993, Proc Int Conf Intell Syst Mol Biol, V1, P328
   Reddy V.N., 1994, THESIS U MARYLAND US
   Reddy VN, 1996, COMPUT BIOL MED, V26, P9, DOI 10.1016/0010-4825(95)00042-9
   Regev A, 2001, Pac Symp Biocomput, P459
   SACKMANN A, 2005, THESIS EM ARNDT U GR
   Sackmann A, 2006, BMC BIOINFORMATICS, V7, DOI 10.1186/1471-2105-7-482
   Sackmann A, 2007, COMPUT BIOL CHEM, V31, P1, DOI 10.1016/j.compbiolchem.2006.09.005
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Schuster S, 1999, TRENDS BIOTECHNOL, V17, P53, DOI 10.1016/S0167-7799(98)01290-6
   Schuster S, 2002, BIOINFORMATICS, V18, P351, DOI 10.1093/bioinformatics/18.2.351
   Schuster S., 1996, BIOMED AND LIFE PHYS, P101
   Srivastava R, 2001, BIOTECHNOL BIOENG, V75, P120, DOI 10.1002/bit.1171
   Steinhausen D., 1977, Cluster analysis. An Introduction to methods for automatic classification
   Voss Klaus, 2003, In Silico Biology, V3, P367
   Wang L, 2011, ANAL CHIM ACTA, V687, P12, DOI 10.1016/j.aca.2010.11.056
   Wick LM, 2001, ENVIRON MICROBIOL, V3, P588, DOI 10.1046/j.1462-2920.2001.00231.x
   Windhager L., 2011, MODELING SYSTEMS BIO, P179
NR 58
TC 25
Z9 26
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 703
EP 710
DI 10.1007/s10270-014-0421-5
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400012
DA 2024-07-18
ER

PT J
AU Happe, L
   Buhnova, B
   Reussner, R
AF Happe, Lucia
   Buhnova, Barbora
   Reussner, Ralf
TI Stateful component-based performance models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Stateful components; Performance prediction; Prediction accuracy
ID PREDICTION; DESIGN
AB The accuracy of performance-prediction models is crucial for widespread adoption of performance prediction in industry. One of the essential accuracy-influencing aspects of software systems is the dependence of system behaviour on a configuration, context or history related state of the system, typically reflected with a (persistent) system attribute. Even in the domain of component-based software engineering, the presence of state-reflecting attributes (the so-called internal states) is a natural ingredient of the systems, implying the existence of stateful services, stateful components and stateful systems as such. Currently, there is no consensus on the definition or method to include state-related information in component-based prediction models. Besides the task to identify and localise different types of stateful information across component-based software architecture, the issue is to balance the expressiveness and complexity of prediction models via an effective abstraction of state modelling. In this paper, we identify and classify stateful information in component-based software systems, study the performance impact of the individual state categories, and discuss the costs of their modelling in terms of the increased model size. The observations are formulated into a set of heuristics-guiding software engineers in state modelling. Finally, practical effect of state modelling on software performance is evaluated on a real-world case study, the SPECjms2007 Benchmark. The observed deviation of measurements and predictions was significantly decreased by more precise models of stateful dependencies.
C1 [Happe, Lucia; Reussner, Ralf] Karlsruhe Inst Technol, D-76021 Karlsruhe, Germany.
   [Buhnova, Barbora] Masaryk Univ, Brno, Czech Republic.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Masaryk
   University Brno
RP Happe, L (corresponding author), Karlsruhe Inst Technol, D-76021 Karlsruhe, Germany.
EM kapova@kit.eud; buhnova@fi.muni.cz; reussner@kit.edu
RI Buhnova, Barbora/J-3364-2013
OI Buhnova, Barbora/0000-0003-4205-101X; Reussner,
   Ralf/0000-0002-9308-6290; Happe, Lucia/0000-0003-1117-6880
CR BAGRODIA RL, 1991, IEEE T SOFTWARE ENG, V17, P1042, DOI 10.1109/32.99192
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Becker S., 2006, P WORKSH COMP OR PRO
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P169
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bertolino A, 2004, LECT NOTES COMPUT SC, V3054, P233
   Bertolino A., 2003, ENTCS, V82, P158
   Diaconescu A., 2005, P C AUT SOFTW ENG AS
   Firus V, 2005, ELECTRON NOTES THEOR, V141, P73, DOI 10.1016/j.entcs.2005.04.036
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   Hamlet D., 2006, P S SOFTW TEST AN IS
   Hapner M., 2001, JAVA MESSAGE SERVICE
   Happe J, 2010, LECT NOTES COMPUT SC, V6093, P20, DOI 10.1007/978-3-642-13821-8_4
   Happe J, 2010, PERFORM EVALUATION, V67, P694, DOI 10.1016/j.peva.2009.07.006
   Hissam S, 2003, J SYST SOFTWARE, V65, P185, DOI 10.1016/S0164-1212(02)00038-9
   Kapova L., 2012, STATEFUL SOFTWARE PE
   Kapova L., 2010, P JOINT WOSP SIPEW I
   Kapova L, 2010, LECT NOTES COMPUT SC, V6342, P17
   Koziolek H., 2005, P WORKSH COMP OR PRO
   Koziolek H, 2007, LECT NOTES COMPUT SC, V4880, P145
   Koziolek H, 2006, LECT NOTES COMPUT SC, V4214, P163
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   Meyerhöfer M, 2005, ELECTRON NOTES THEOR, V114, P25, DOI 10.1016/j.entcs.2004.02.066
   Microsoft Corporation COM, COM COMP OBJ MOD TEC
   Mos A, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P227, DOI 10.1109/EDOC.2002.1137712
   Object Management Group, 2006, FORMAL060401 OBJ MAN
   Object Management Group, 2008, MOF 2 0 QUER VIEW TR
   Sentilles S, 2008, LECT NOTES COMPUT SC, V5282, P310, DOI 10.1007/978-3-540-87891-9_21
   Smith C.U., 2002, P INT CMG C COMP MEA
   Standard Performance Evaluation Corp, 2007, SPECJMS2007 BENCHM
   *SUN MICR, ENT JAVABEANS 3 0 SP
   Sun Microsystems, 2012, JAV SYST MESS QUEUE
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Westermann D, 2010, EUROMICRO CONF PROC, P31, DOI 10.1109/SEAA.2010.24
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Zimmerova B., 2008, THESIS MASARYK U CZE
   Zimmerova B, 2008, LECT NOTES COMPUT SC, V5153, P146
NR 38
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1319
EP 1343
DI 10.1007/s10270-013-0336-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300007
DA 2024-07-18
ER

PT J
AU Rose, LM
   Kolovos, DS
   Paige, RF
   Polack, FAC
   Poulding, S
AF Rose, Louis M.
   Kolovos, Dimitrios S.
   Paige, Richard F.
   Polack, Fiona A. C.
   Poulding, Simon
TI Epsilon Flock: a model migration language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model migration; Metamodel evolution; Model transformation
AB Model-driven engineering introduces additional challenges for controlling and managing software evolution. Today, tools exist for generating model editors and for managing models with transformation, validation, merging and weaving. There is limited support, however, for model migration-a development activity in which instance models are updated in response to metamodel evolution. In this paper, we propose conservative copy-a style of model transformation that we believe is well-suited to model migration-and Epsilon Flock-a compact model-to-model transformation language tailored for model migration. The proposed structures are evaluated by comparing the conciseness of model migration strategies written in different styles of transformation language, using several examples of evolution taken from UML and the graphical modelling framework.
C1 [Rose, Louis M.; Kolovos, Dimitrios S.; Paige, Richard F.; Polack, Fiona A. C.; Poulding, Simon] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Rose, LM (corresponding author), Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM louis@cs.york.ac.uk; dkolovos@cs.york.ac.uk; paige@cs.york.ac.uk;
   fiona@cs.york.ac.uk; smp@cs.york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; Rose, Louis M/L-8892-2014
OI Kolovos, Dimitris/0000-0002-1724-6563
FU European Commission via the INESS project; 7th Framework programme
   [218575]
FX The work in this article was supported by the European Commission via
   the INESS project, co-funded under the 7th Framework programme (grant
   #218575).
CR [Anonymous], GROOVY ACTION
   Balasubramanian D., 2009, P 9 OOPSLA WORKSH DO
   Banerjee J., 1987, SIGMOD Record, V16, P311, DOI 10.1145/38714.38748
   Bezivin J., SOFTW SYST MODEL
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Etien A., 2005, CONTEXT, V10, P125
   Galante RD, 2005, DATA KNOWL ENG, V53, P99, DOI 10.1016/j.datak.2004.07.001
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Gronback R., 2006, INTRO ECLIPSE GRAPHI
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Gruschko B, 2007, P WORKSH MOD DRIV SO
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Herrmannsdoerfer Markus, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P3
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kolovos D., 2011, EPSILON BOOK
   Kolovos D., 2009, THESIS U YORK UK
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Lammel R., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P550
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   Mens T., 2007, SOFTWARE EVOLUTION
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3748, P239
   OMG, 2007, UN MOD LANG 2 1 2 SP
   OMG, 2001, UN MOD LANG 1 4 SPEC
   OMG, 2007, XML MET INT 2 1 1 SP
   *OMG, 2005, MOF QVT FIN AD SPEC
   OMG, 2007, UN MOD LANG 2 2 SPEC
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Pizka M, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P305, DOI 10.1109/TASE.2007.13
   Rose L, 2009, P JOINT MOD DRIV SOF
   Rose L., 2011, THESIS U YORK UK
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   SJOBERG D, 1993, INFORM SOFTWARE TECH, V35, P35, DOI 10.1016/0950-5849(93)90027-Z
   Sprinkle J., 2003, THESIS VANDERBILT U
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
NR 42
TC 11
Z9 12
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 735
EP 755
DI 10.1007/s10270-012-0296-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300014
DA 2024-07-18
ER

PT J
AU Izadi, M
   Bonsangue, M
   Clarke, D
AF Izadi, Mohammad
   Bonsangue, Marcello
   Clarke, Dave
TI Buchi automata for modeling component connectors
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Buchi automata; Component connector; Reo; Constraint automata
ID REO
AB Reo is an exogenous coordination language for component connectors extending data flow networks with synchronization and context-dependent behavior. The first proposed formalism to capture the operational semantics of Reo is called constraint automaton. In this paper, we propose another operational model of Reo based on Buchi automata in which port synchronization is modeled by records labeling the transitions, whereas context dependencies are stored in the states. It is shown that constraint automata can be recast into our proposed Buchi automata of records. Also, we provide a composition operator which models the joining of two connectors and show that it can be obtained by using two standard operators: alphabet extension and automata product. Our semantics has the advantage over previous models in that it is based on standard automata theory, so that existing theories and tools can be easily reused. Moreover, it is the first formal model addressing all of Reo's features: synchronization, mutual exclusion, hiding, and context-dependency.
C1 [Bonsangue, Marcello] Leiden Univ, Leiden Inst Adv Comp Sci LIACS, Dept Comp Sci, Leiden, Netherlands.
   [Izadi, Mohammad] Inst Humanities & Cultural Studies IHCS, Tehran, Iran.
   [Clarke, Dave] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 Leiden University - Excl LUMC; Leiden University; KU Leuven
RP Bonsangue, M (corresponding author), Leiden Univ, Leiden Inst Adv Comp Sci LIACS, Dept Comp Sci, Leiden, Netherlands.
EM marcello@liacs.nl
OI Bonsangue, Marcello/0000-0003-3746-3618
CR [Anonymous], 1990, HDB THEORETICAL COMP
   Arbab F, 2005, LECT NOTES COMPUT SC, V3454, P236
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Arbab F, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P198, DOI 10.1109/SEFM.2004.1347521
   Arbab F, 2003, LECT NOTES COMPUT SC, V2755, P34
   Arbab F, 2007, LECT NOTES COMPUT SC, V4467, P286
   BAIER C, 2006, LNCS, V4037, P1
   Baier C, 2006, SCI COMPUT PROGRAM, V61, P75, DOI 10.1016/j.scico.2005.10.008
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bonsangue M, 2009, LECT NOTES COMPUT SC, V5521, P184, DOI 10.1007/978-3-642-02053-7_10
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke D, 2007, SCI COMPUT PROGRAM, V66, P205, DOI 10.1016/j.scico.2007.01.009
   Clarke D, 2008, LECT NOTES COMPUT SC, V5382, P226, DOI 10.1007/978-3-540-92188-2_10
   Clarke EM, 1999, MODEL CHECKING, P1
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Izadi M, 2008, LECT NOTES COMPUT SC, V5160, P156, DOI 10.1007/978-3-540-85762-4_11
   Izadi M, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P303, DOI 10.1109/SEFM.2008.24
   Kaplan D. M., 1969, J COMPUT SYST SCI, V3, P361, DOI 10.1016/S0022-0000(69)80027-9
   Kozen D., 2003, Matematica Contemporanea, V24, P117
   KUPFERMAN O, 1996, LNCS
   MOUSAVI MR, 2005, ENTCS, V154, P83
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   REMY D, 1994, P ACM SIGPLAN WORKSH, P12
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Vardi MY, 1995, LECT NOTES COMPUTER, P238, DOI DOI 10.1007/3-540-60915-6
NR 26
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 183
EP 200
DI 10.1007/s10270-010-0152-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500004
OA hybrid
DA 2024-07-18
ER

PT J
AU Atkinson, C
   Kühne, T
AF Atkinson, Colin
   Kuehne, Thomas
TI Reducing accidental complexity in domain models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain modeling; Model quality; Accidental complexity; Modeling
   languages; Modeling paradigm; Stereotypes; Powertypes; Deep
   instantiation
AB A fundamental principle in engineering, including software engineering, is to minimize the amount of accidental complexity which is introduced into engineering solutions due to mismatches between a problem and the technology used to represent the problem. As model-driven development moves to the center stage of software engineering, it is particularly important that this principle be applied to the technologies used to create and manipulate models, especially models that are intended to be free of solution decisions. At present, however, there is a significant mismatch between the "two level" modeling paradigm used to construct mainstream domain models and the conceptual information such models are required to represent-a mismatch that makes such models more complex than they need be. In this paper, we identify the precise nature of the mismatch, discuss a number of more or less satisfactory workarounds, and show how it can be avoided.
C1 [Kuehne, Thomas] TH Darmstadt, Darmstadt, Germany.
   [Atkinson, Colin] Univ Mannheim, Mannheim, Germany.
C3 Technical University of Darmstadt; University of Mannheim
RP Kühne, T (corresponding author), TH Darmstadt, Darmstadt, Germany.
EM atkinson@informatik.uni-mannheim.de; kuehne@informatik.tu-darmstadt.de
RI Kühne, Thomas/E-8867-2016
OI Kühne, Thomas/0000-0002-7674-2209; Atkinson, Colin/0000-0002-3164-5595
CR [Anonymous], 1997, Object-oriented software construction
   [Anonymous], SOFTWARE SYSTEM MODE
   [Anonymous], 1980, ENZYKLOP DIE PHILOSO
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   ATKINSON C, 2001, P 4 INT C UN MOD LAN
   ATKINSON C, 2005, P ACM IEEE 8 INT C M
   Atkinson Colin, 2000, INT WORKSH MOD ENG C
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   Engels G, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P85
   Frank U, 2002, LECT NOTES COMPUT SC, V2465, P444
   GOLDSTEIN RC, 1994, IEEE T KNOWL DATA EN, V6, P835, DOI 10.1109/69.317711
   GONZALEZPEREZ C, 2006, SOFTW SYSTE MODEL, V5
   HENDERSONSELLER.B, 2005, J OBJECT TECHNOL, V4
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Johnson Ralph, 1997, Pattern Languages of Program Design, V3, P47
   KUHNE T, 2006, J SOFTW SYST MODEL, V5
   Kuhne T., 2004, LNI, V45, P121
   LARMAN C, 2002, APPL UML PATTERNS
   LUDEWIG J, 2005, J SOFTW SYST MODEL, V2, P5
   Lyardet F.D., 1997, P C PATT LANG DES
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   ODELL J, 1994, J OBJECT ORIENTED PR
   *OMG, 2003, OMG030601 OMG
   *OMG, 1997, AD970804 OMG
   *OMG, 2005, FORMAL050704 OMG
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Riehle D., 2005, PATTERN LANGUAGES PR, V5
   Wand Y., 1993, Journal of Information Systems, P217
   Yoder J.W., 2002, P WORK IEEE IFIP C S
NR 31
TC 127
Z9 130
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 345
EP 359
DI 10.1007/s10270-007-0061-0
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 322NZ
UT WOS:000257383900008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Correa, A
   Werner, C
AF Correa, Alexandre
   Werner, Claudia
TI Refactoring object constraint language specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 7th Satellite Activities Conference on UML Modeling Languages and
   Applications
CY OCT 11-15, 2004
CL Lisbon, PORTUGAL
SP SINFIC, Springer, Mentor Graph, IBM, ACM SIGSOFT, IEEE Comp Soc, New Univ Lisbon, Turismo Lisboa, Object Management Grp
ID OCL
AB The object constraint language (OCL) plays an important role in the elaboration of precise models. Although OCL was designed to be both formal and simple, OCL specifications may be difficult to understand and evolve, particularly those containing complex or duplicated expressions. In this paper, we discuss how refactoring techniques can be applied in order to improve the understandability and maintainability of OCL specifications. In particular, we present several potentially bad constructions often found in OCL specifications and a collection of refactorings that can be applied to replace such constructions by better ones. We also briefly discuss how refactorings can be automated and how model regression testing can be used to increase our confidence that the semantics of an OCL specification has been preserved after manually performed refactorings.
C1 [Correa, Alexandre; Werner, Claudia] Univ Fed Rio de Janeiro, COPPE, BR-21945970 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP Correa, A (corresponding author), Univ Fed Rio de Janeiro, COPPE, BR-21945970 Rio De Janeiro, Brazil.
EM alexcorr@yahoo.com; werner@cos.ufrj.br
RI Werner, Claudia/JZE-5245-2024
OI Lima Werner, Claudia Maria/0000-0002-4231-9621
CR [Anonymous], ORMSC20010701 OMG
   [Anonymous], PTC031014 OMG
   BARESI L, 2002, LNCS, V2505
   Bauerdick H, 2004, LECT NOTES COMPUT SC, V3273, P188
   Beck K., 2000, EXTREME PROGRAMMING
   BECK K, JUNIT OPENSOURCE TES
   *BORL SOFTW CORP, MODELRUN TOOL
   CARIOU E, 2004, P UML 2004 WORKSH OC
   CHIOREAN D, 2003, P UML 2003 WORKSH OC
   Cook S, 2002, LECT NOTES COMPUT SC, V2263, P115
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   D'Souza D., 1998, OBJECTS COMPONENTS F
   Date C.J, 2000, WHAT NOT BUSINESS RU
   ERIKSON H, 1998, BUSINESS MODELING UM
   Fernández-Medina E, 2004, LECT NOTES COMPUT SC, V3273, P380
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GERBER A, 2002, LNCS, V2505
   GOGOLLA M, 2003, LNCS, V2863
   GRIWSWOLD WG, 1991, THESIS U WASHINGTON
   Halle B.V, 2001, BUSINESS RULES APPL
   HAUSTEIN S, 2004, P UML 2004 WORKSH OC
   JONES CB, 1989, SYSTMATIC SOFTWARE D
   *KAB TECHN INC, KAB ACT SEM
   *KENN CART LTD, ACT SPEC LANG
   LIEBERHERR KJ, 1989, SIGPLAN NOTICES, V24, P67, DOI 10.1145/66083.66089
   Liu Shaoying., 2004, Formal Engineering for Industrial Software Development
   MENS T, 2002, LNCS, V2505
   *OMG, 2002, FORMAL20020101 OMG
   OMG, 2003, Tech. rep. ptc/03-08-02
   *OMG, 2003, PTC030915 OMG
   *OMG, 2003, FORMAL20030301 OMG
   *OMG, 2002, AD020410 OMG
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   *PROJ TECHN INC, BRIDGEPOINT ACT LANG
   RICHTERS M, 2000, LNCS, V1939, P266
   ROBERTS DB, 2000, LNCS, V1939, P266
   ROBERTS DB, 1999, THESIS U ILLNOIS URB
   SENDALL S, 2002, THESIS SCH COMPUTER
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   TOVAL A, 2003, SOFTWARE SYSTEM MODE, V2, P248
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   [No title captured]
NR 45
TC 19
Z9 21
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2007
VL 6
IS 2
BP 113
EP 138
DI 10.1007/s10270-006-0023-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WR
UT WOS:000254667700002
DA 2024-07-18
ER

PT J
AU Ye, T
   Zhuang, Y
   Qiao, GZ
AF Ye, Tong
   Zhuang, Yi
   Qiao, Gongzhe
TI MBIPV: a model-based approach for identifying privacy violations from
   software requirements
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Software requirement modeling; Privacy violation; Formal modeling;
   Formal verification
ID SECURITY; INFORMATION; HEALTH
AB Nowadays, large-scale software systems in many domains, such as smart cities, involve multiple parties whose privacy policies may conflict with each other, and thus, data privacy violations may arise even without users being aware of it. In this context, identifying data security requirements and detecting potential privacy violations are crucial. In the area of model-based security requirements analysis, numerous research efforts have been done. However, few existing studies support automatic privacy violation identification from software requirements. To fill this gap, this paper presents MBIPV, a Model-Based approach for Identifying Privacy Violations from software requirements. First, this paper identifies six types of privacy violations in software requirements. Second, the MBIPV profile is proposed to support modeling software requirements using UML. Third, the MBIPV prototype tool is developed to generate formal models and corresponding privacy properties automatically. Then, the privacy properties are automatically verified by model checking. We evaluated the MBIPV method through case studies of four representative software systems from different domains: smart health, smart transportation, smart home, and e-commerce. The results show that MBIPV has high accuracy and efficiency in identifying the privacy violations from the software requirements. To the best of our knowledge, MBIPV is the first model-based approach that supports the automatic verification of privacy properties of UML software requirement models. The source code of the MBIPV tool and the experimental data are available online at https://github.com/YETONG1219/MBIPV.
C1 [Ye, Tong; Zhuang, Yi; Qiao, Gongzhe] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, 29 Jiangjun Ave, Nanjing 211100, Jiangsu, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Zhuang, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, 29 Jiangjun Ave, Nanjing 211100, Jiangsu, Peoples R China.
EM yetong@nuaa.edu.cn; zy16@nuaa.edu.cn; qgz@nuaa.edu.cn
RI Zhuang, Yi/W-8655-2018; Te, Tong/HIR-7900-2022
OI Ye, Tong/0000-0003-3812-3105
FU National Natural Science Foundation of China (General Program)
   [61572253]
FX This work is supported by the National Natural Science Foundation of
   China (General Program) under Grant No. 61572253.
CR Alhanahnah Mohannad, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P272, DOI 10.1145/3395363.3397347
   Ali S, 2021, IEEE SECUR PRIV, V19, P36, DOI 10.1109/MSEC.2021.3076150
   [Anonymous], 2022, 38022022 IEEE, P1, DOI [10.1109/IEEESTD.2022.9745865, DOI 10.1109/IEEESTD.2022.9745865]
   [Anonymous], Eclipse - papyrus
   Basin D., 2003, Proceedings 8th ACM Symposium on Access Control Models and Technologies (SACMAT '03), P100, DOI DOI 10.1145/775412.775425
   Bernardi S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110746
   Celik ZB, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P147
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   dom4j, US
   Edu JS, 2021, ACM COMPUT SURV, V53, DOI 10.1145/3412383
   Fang LM, 2021, ACM T MULTIM COMPUT, V16, DOI 10.1145/3408322
   Feng JC, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1376, DOI 10.1145/3368089.3417047
   Frustaci M, 2018, IEEE INTERNET THINGS, V5, P2483, DOI 10.1109/JIOT.2017.2767291
   Ghezzi C, 2014, REQUIR ENG, V19, P231, DOI 10.1007/s00766-013-0198-z
   Goutam S, 2019, PROCEEDINGS OF THE 2019 CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC '19), P215, DOI 10.1145/3317549.3323413
   Hale ML, 2019, REQUIR ENG, V24, P365, DOI 10.1007/s00766-017-0287-5
   Hazeyama A, 2018, P INT COMP SOFTW APP, P234, DOI 10.1109/COMPSAC.2018.10235
   Hu XW, 2020, COMPUT SECUR, V94, DOI 10.1016/j.cose.2020.101791
   Hu XW, 2020, COMPUT SECUR, V88, DOI 10.1016/j.cose.2019.101615
   Ismagilova E, 2022, INFORM SYST FRONT, V24, P393, DOI 10.1007/s10796-020-10044-1
   Varela-Vaca AJ, 2021, COMPUT IND, V132, DOI 10.1016/j.compind.2021.103524
   Escamilla-Ambrosio PJ, 2021, IEEE ACCESS, V9, P154112, DOI 10.1109/ACCESS.2021.3125979
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kavallieratos G, 2019, IEEE INT CONF DISTR, P234, DOI 10.1109/DCOSS.2019.00060
   Kitchin R, 2019, J URBAN TECHNOL, V26, P47, DOI 10.1080/10630732.2017.1408002
   Kreitz Mark, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3356773.3356798
   Kumar S, 2018, 2ND INTERNATIONAL CONFERENCE ON INTELLIGENT CIRCUITS AND SYSTEMS (ICICS 2018), P324, DOI 10.1109/ICICS.2018.00073
   Mahadewa K, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P2, DOI 10.1145/3460319.3464838
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   de Fuentes JM, 2018, COMPUTER, V51, P44, DOI 10.1109/MC.2018.3011042
   Mazeika D, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/5137625
   MBIPV, 2021, MBIPV
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Mohsin M, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P342, DOI 10.1109/QRS.2019.00051
   Ni SR, 2015, IEEE T DEPEND SECURE, V12, P190, DOI 10.1109/TDSC.2014.2320714
   NuSMV, NUSMV
   Parker L, 2019, INT J LAW PSYCHIAT, V64, P198, DOI 10.1016/j.ijlp.2019.04.002
   Pedroza G., 2020, P 23 ACMIEEE INT C M, P1, DOI DOI 10.1145/3417990.3420047
   Pedroza G, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2021), P332, DOI 10.1109/EuroSPW54576.2021.00042
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Ravi, 2020, STUDY COMP UML ER DI
   Rouland Q, 2019, IEEE INT C ENG COMP, P236, DOI 10.1109/ICECCS.2019.00033
   Rumbaugh James, 1999, The unified modeling language reference manual
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Solanas A, 2014, IEEE COMMUN MAG, V52, P74, DOI 10.1109/MCOM.2014.6871673
   Tangari G, 2021, BMJ-BRIT MED J, V373, DOI 10.1136/bmj.n1248
   Torre D, 2021, SOFTW SYST MODEL, V20, P2071, DOI 10.1007/s10270-021-00935-5
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Van Lamsweerde A., 2007, NATO SECURITY SCI SE, V9, P196
   Villamizar H, 2019, INT REQUIR ENG CONF, P86, DOI 10.1109/RE.2019.00020
   Vitunskaite M, 2019, COMPUT SECUR, V83, P313, DOI 10.1016/j.cose.2019.02.009
   Voigt P, 2017, A Practical Guide, V10, P10
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu SM, 2019, FUTURE GENER COMP SY, V97, P284, DOI 10.1016/j.future.2019.02.051
   Yefei Zhao, 2009, 2009 Canadian Conference on Electrical and Computer Engineering (CCECE 2009), P974, DOI 10.1109/CCECE.2009.5090274
   Zahoor, J HOMEPAGE
NR 57
TC 1
Z9 1
U1 6
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1251
EP 1280
DI 10.1007/s10270-022-01072-3
EA DEC 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000895688800001
DA 2024-07-18
ER

PT J
AU Parvizimosaed, A
   Sharifi, S
   Amyot, D
   Logrippo, L
   Roveri, M
   Rasti, A
   Roudak, A
   Mylopoulos, J
AF Parvizimosaed, Alireza
   Sharifi, Sepehr
   Amyot, Daniel
   Logrippo, Luigi
   Roveri, Marco
   Rasti, Aidin
   Roudak, Ali
   Mylopoulos, John
TI Specification and analysis of legal contracts with Symboleo
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Legal contracts; Software requirements specifications; Formal
   specification languages; Model checking; nuXmv; Smart contracts
ID BUSINESS CONTRACTS; FORMAL ANALYSIS; TEMPORAL LOGIC; REQUIREMENTS;
   COMMITMENTS; BLOCKCHAIN
AB Legal contracts specify the terms and conditions-in essence, requirements-that apply to business transactions. This paper proposes a formal specification language for legal contracts, called Symboleo, where contracts consist of collections of obligations and powers that define a legal contract's compliant executions. Symboleo offers execution time operations such as subcontracting, assignment, and substitution. Its formal semantics is defined in terms of logical axioms on statecharts that describe the lifetimes of contracts, obligations, and powers. We have implemented two tools to support the analysis of contract specifications. One is a conformance validation tool that enables checking that a specification is consistent with the expectations of contracting parties. The other tool enables model-checking of desired contract properties, expressed in temporal logic. We envision Symboleo with its associated tools as enablers for the formal verification of contracts to detect requirements-level issues. Our proposal includes an evaluation through the specification of two real life-inspired contracts.
C1 [Parvizimosaed, Alireza; Sharifi, Sepehr; Amyot, Daniel; Logrippo, Luigi; Rasti, Aidin; Mylopoulos, John] Univ Ottawa, Sch EECS, Ottawa, ON, Canada.
   [Logrippo, Luigi] Univ Quebec Outaouais, Gatineau, PQ, Canada.
   [Roveri, Marco] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
   [Roudak, Ali] Univ Duisburg Essen, Duisburg, Germany.
C3 University of Ottawa; University of Quebec; University Quebec Outaouais;
   University of Trento; University of Duisburg Essen
RP Amyot, D (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON, Canada.
EM aparv007@uottawa.ca; sshar190@uottawa.ca; damyot@uottawa.ca;
   logrippo@uottawa.ca; marco.roveri@unitn.it; Aidin.Rasti@uottawa.ca;
   aliroudak@yahoo.com; jmylopou@uottawa.ca
RI Amyot, Daniel/AAI-6948-2020; Roveri, Marco/U-7164-2019
OI Amyot, Daniel/0000-0003-2414-1791; Roveri, Marco/0000-0001-9483-3940
CR Alberti M, 2008, INT J ELECTRON COMM, V12, P9, DOI 10.2753/JEC1086-4415120401
   Allard MP., 2001, CAN TAX J, V49, P1726
   ALLEN JF, 1984, ARTIF INTELL, V23, P123, DOI 10.1016/0004-3702(84)90008-0
   Alqahtani Sarra M., 2020, 53 HAWAII INT C SYST, P1, DOI [10.24251/HICSS.2020.650, DOI 10.24251/HICSS.2020.650]
   Alt Leonardo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P376, DOI 10.1007/978-3-030-03427-6_28
   Alt L., 2020, ETHEREUM FORMAL VERI
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1994, The Bulletin of the European Association for Theoretical Computer Science
   [Anonymous], 2020, ERG
   Athan T., 2013, 14 INT C ART INT LAW, V13, P3
   Athan T, 2015, LECT NOTES COMPUT SC, V9203, P151, DOI 10.1007/978-3-319-21768-0_6
   Azzopardi S, 2016, ARTIF INTELL LAW, V24, P203, DOI 10.1007/s10506-016-9185-2
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Bix BH, 2012, CAMB INTROD PHILOS L, P1, DOI 10.1017/CBO9781139024877
   California Independent System Operator Corporation, 2016, APP B 21 DISTR EN RE
   Cardoso HL, 2010, LECT NOTES ARTIF INT, V6069, P225, DOI 10.1007/978-3-642-14962-7_15
   Carmo J., 2002, HDB PHILOS LOGIC, P265, DOI [DOI 10.1007/978-94-010-0387-2_4, 10.1007/978-94-010-0387-2_4]
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Chesani F, 2013, AUTON AGENT MULTI-AG, V27, P85, DOI 10.1007/s10458-012-9202-0
   Chlipala Adam., 2017, Certified Programming with Dependent Types
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Cimatti A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377659
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   CSM Lab, 2020, SYMB CONF CHECK
   CSM Lab and University of Trento, 2020, SYMB PROP CHECK NUXM
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Daskalopulu A, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P1074, DOI 10.1109/DEXA.2000.875160
   Daskalopulu A.K., 1999, THESIS
   Digital Asset Holdings, 2020, DAML
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   El Kholy W, 2015, IEEE INTELL SYST, V30, P36, DOI 10.1109/MIS.2015.6
   El Menshawy M, 2013, AUTON AGENT MULTI-AG, V27, P375, DOI 10.1007/s10458-012-9208-7
   El-Menshawy Mohamed., 2011, P 10 INT C AUTONOMOU, P483
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Cambronero ME, 2017, IEEE ACCESS, V5, P6735, DOI 10.1109/ACCESS.2017.2696577
   Ethereum Foundation, 2020, SOL
   Farmer W.M., 2016, 4 IEEE INT WORKSHOP, P190
   Farrell ADH, 2004, FIRST IEEE INTERNATIONAL WORKSHOP ON ELECTRONIC CONTRACTING, PROCEEDINGS, P17
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Governatori G, 2005, Ninth IEEE International EDOC Enterprise Computing Conference, Proceedings, P46, DOI 10.1109/EDOC.2005.13
   Governatori G, 2005, INT J COOP INF SYST, V14, P181, DOI 10.1142/S0218843005001092
   Governatori G, 2006, INT J COOP INF SYST, V15, P659, DOI 10.1142/S0218843006001529
   Governatori G, 2018, ARTIF INTELL LAW, V26, P377, DOI 10.1007/s10506-018-9223-3
   Greenspan S. J., 1982, Sixth International Conference on Software Engineering, P225
   Griffo C., 2015, P MULT WORKSH ART IN
   Griffo C, 2017, IEEE INT ENTERP DIST, P40, DOI 10.1109/EDOC.2017.15
   Guizzardi G, 2015, APPL ONTOL, V10, P259, DOI 10.3233/AO-150157
   Hashmi Mustafa, 2014, Rules on the Web. From Theory to Applications. 8th International Symposium, RuleML 2014 Co-located with the 21st European Conference on Artificial Intelligence, ECAI 2014. Proceedings. LNCS: 8620, P296, DOI 10.1007/978-3-319-09870-8_22
   Hohfeld WN, 1913, YALE LAW J, V23, P16, DOI 10.2307/785533
   Jones A., 1996, LOG J IGPL, V4, P427, DOI DOI 10.1093/JIGPAL/4.3.427
   Kirby J., 2000, Victoria University of Wellington Law Review, V31, P317
   Kowalski RobertA., 1985, FDN KNOWLEDGE BASE M, P23
   Jan L, 2019, LECT NOTES COMPUT SC, V11788, P323, DOI 10.1007/978-3-030-33223-5_27
   Lee R. M., 1988, Decision Support Systems, V4, P27, DOI 10.1016/0167-9236(88)90096-6
   Lethbridge TC, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102665
   Letia IA, 2006, LECT NOTES COMPUT SC, V4031, P91
   Levy KEC, 2017, ENGAG SCI TECHNOL SO, V3, P1, DOI 10.17351/ests2017.107
   Lloyd J. W., 1987, Foundations of logic programming
   Lomuscio A, 2017, INT J SOFTW TOOLS TE, V19, P9, DOI 10.1007/s10009-015-0378-x
   Meyer J-JC, 1993, DEONTIC LOGIC COMPUT, P3
   Mik E., 2017, LAW INNOVATION TECHN, V9, P8
   Montali M., 2016, JREC
   Monteiro PT, 2008, BIOINFORMATICS, V24, pI227, DOI 10.1093/bioinformatics/btn275
   Nehaï Z, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P980, DOI 10.1109/Cybermatics_2018.2018.00185
   Nelaturu K, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169428
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Pace G, 2007, LECT NOTES COMPUT SC, V4762, P82
   Parvizimosaed A., 2020, SYMBOLEO COMPLIANCE, V2, DOI [10.5281/zenodo.3840727, DOI 10.5281/ZENODO.3840727]
   Parvizimosaed A, 2020, LECT NOTES COMPUT SC, V12400, P271, DOI 10.1007/978-3-030-62522-1_20
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Pill I, 2006, DES AUT CON, P821, DOI 10.1109/DAC.2006.229231
   Prakken H., 1996, Studia Logica, V57, P91, DOI 10.1007/BF00370671
   Prisacariu C, 2007, LECT NOTES COMPUT SC, V4468, P174
   Reyna A, 2018, FUTURE GENER COMP SY, V88, P173, DOI 10.1016/j.future.2018.05.046
   Shanahan M., 1999, Artificial intelligence today. Recent trends and developments, P409
   Sharifi S., 2020, SYMBOLEO TEXT EDITOR, V1, DOI [10.5281/zenodo.3840773, DOI 10.5281/ZENODO.3840773]
   Sharifi S., 2020, 28 IEEE INT REQUIREM, P384, DOI [10.1109/RE48521.2020.00049, DOI 10.1109/RE48521.2020.00049]
   Sharifi S.S., 2020, Smart contracts: from formal specification to blockchain code, DOI [10.20381/ruor-25092, DOI 10.20381/RUOR-25092]
   Siano P, 2019, IEEE SYST J, V13, P3454, DOI 10.1109/JSYST.2019.2903172
   Soavi M., 2022, P INT C RES CHALL IN, P338
   Souri A, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3808
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Szabo N., 1997, First Monday, V2
   The British Standards Institution, 2020, 333 PAS BRIT STAND I
   The nuXmv team, 2020, NUXMV SYMB MOD CHECK
   Tikhomirov S., 2020, SMART CONTRACT LANGU
   Tolmach P, 2021, Arxiv, DOI arXiv:2008.02712
   van Binsbergen LT, 2020, GPCE '2020: PROCEEDINGS OF THE 19TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P124, DOI 10.1145/3425898.3426958
   Wikipedia contributors, 2019, ASS WIK FREE ENC
NR 90
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2395
EP 2427
DI 10.1007/s10270-022-01053-6
EA OCT 2022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000875585700003
DA 2024-07-18
ER

PT J
AU Khorram, F
   Bousse, E
   Mottu, JM
   Sunyé, G
AF Khorram, Faezeh
   Bousse, Erwan
   Mottu, Jean-Marie
   Sunye, Gerson
TI Advanced testing and debugging support for reactive executable DSLs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reactive executable DSL; Testing; Test description language; Debugging;
   Mutation analysis
AB Executable Domain-Specific Languages (xDSLs) allow the definition and the execution of behavioral models. Some behavioral models are reactive, meaning that during their execution, they accept external events and react by exposing events to the external environment. Since complex interaction may occur between the reactive model and the external environment, they should be tested as early as possible to ensure the correctness of their behavior. In this paper, we propose a set of generic testing facilities for reactive xDSLs using the standardized Test Description Language (TDL). Given a reactive xDSL, we generate a TDL library enabling the domain experts to write and run event-driven TDL test cases for conforming reactive models. To further support the domain expert, the approach integrates interactive debugging to help in localizing defects, and mutation analysis to measure the quality of test cases. We evaluate the level of genericity of the approach by successfully writing, executing, and analyzing 247 event-driven TDL test cases for 70 models conforming to two different reactive xDSLs.
C1 [Khorram, Faezeh; Bousse, Erwan; Mottu, Jean-Marie; Sunye, Gerson] Nantes Univ, IMT Atlantique, Ecole Cent Nantes CNRS, LS2N,UMR 6004, F-44000 Nantes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Nantes Universite; Ecole
   Centrale de Nantes
RP Khorram, F (corresponding author), Nantes Univ, IMT Atlantique, Ecole Cent Nantes CNRS, LS2N,UMR 6004, F-44000 Nantes, France.
EM faezeh.khorram@imt.atlantique.fr; erwan.bousse@ls2n.fr;
   jean-marie.mottu@ls2n.fr; gerson.sunye@ls2n.fr
OI Bousse, Erwan/0000-0003-0000-9219
FU European Union [813884]; Marie Curie Actions (MSCA) [813884] Funding
   Source: Marie Curie Actions (MSCA)
FX This project has received funding from the European Union's Horizon 2020
   research and innovation program under the Marie Skodowska Curie grant
   agreement No 813884. We would like to appreciate the great help of
   Dr.Pablo Gomez-Abajo for the integration of our work with the WODEL-Test
   framework.
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Arnaud M., 2015, COMPLEX SYSTEMS DESI, P269, DOI DOI 10.1007/978-3-319-11617-4_19
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Deantoni J, 2016, 2016 ARCHITECTURE-CENTRIC VIRTUAL INTEGRATION (ACVI), P12, DOI 10.1109/ACVI.2016.9
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   ETSI ES, 2020, 2031191 ETSI ES
   ETSI ES, 2020, 2031196 ETSI ES
   Fabbri S. C. P. F., 1999, Proceedings. SCCC'99 XIX International Conference of the Chilean Computer Science Society, P96, DOI 10.1109/SCCC.1999.810159
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Gomez-Abajo P., 2016, P SAC, P1968
   Gómez-Abajo P, 2021, SOFTW SYST MODEL, V20, P767, DOI 10.1007/s10270-020-00827-0
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Hili N, 2020, SOFTW SYST MODEL, V19, P959, DOI 10.1007/s10270-020-00780-y
   Iqbal J, 2019, LECT NOTES COMPUT SC, V11483, P96, DOI 10.1007/978-3-030-21290-2_7
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Khorram F., 2021, J. Object Technol., V6, P1
   King T.M., 2014, P 2014 INT S SOFTWAR, P409
   Kos T, 2016, J SYST SOFTWARE, V111, P74, DOI 10.1016/j.jss.2015.09.002
   Lazar I, 2010, ELECTRON NOTES THEOR, V264, P91, DOI 10.1016/j.entcs.2010.07.007
   Leroy D, 2020, SOFTW SYST MODEL, V19, P1015, DOI 10.1007/s10270-020-00798-2
   Li JH, 2009, PROCEEDINGS OF THE SECOND INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, VOL I, P620, DOI 10.1109/ISECS.2009.158
   Lübke D, 2017, LECT NOTES BUS INF P, V287, P119, DOI 10.1007/978-3-319-59466-8_8
   Makedonski P, 2019, SOFTWARE QUAL J, V27, P885, DOI 10.1007/s11219-018-9423-9
   Mens T, 2019, SOFTW SYST MODEL, V18, P837, DOI 10.1007/s10270-018-0676-3
   Meyers B, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P181, DOI 10.1145/2997364.2997367
   Mijatov S, 2015, LECT NOTES COMPUT SC, V9154, P173, DOI 10.1007/978-3-319-21215-9_11
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Object Management Group, 2013, Semantics of a Foundational Subset for Executable UML Models (FUML)
   Object Management Group, 2017, Unified modeling language (OMG UML)
   Object Management Group, 2016, MET OBJ FAC
   Object Management Group, 2019, Precise semantics of UML state machines
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Santiago D., 2013, CEUR WORKSHOP P, P43
   Siavashi F, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P301, DOI 10.1109/QRS.2018.00043
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Wu H, 2009, LECT NOTES COMPUT SC, V5658, P125, DOI 10.1007/978-3-642-03034-5_7
NR 41
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 819
EP 845
DI 10.1007/s10270-022-01025-w
EA SEP 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000858644700001
DA 2024-07-18
ER

PT J
AU Lu, LL
   Pan, MX
   Zhang, T
   Li, XD
AF Lu, Longlong
   Pan, Minxue
   Zhang, Tian
   Li, Xuandong
TI Improving timing analysis effectiveness for scenario-based
   specifications by combining SAT and LP techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Scenario-based specifications; Message sequence charts; Model checking;
   Reachability analysis
ID MODULO THEORIES; MODEL CHECKING
AB Open environmental software systems are often time-sensitive, as they need to respond to other entities within the systems and/or in the environments promptly. The timing requirements are therefore an essential part of the system correctness. Scenario-based specifications (SBS) such as message sequence charts and UML interaction models play an important role in specifying open environmental software systems since they intuitively model interactions between different entities. While modelling these systems, the timing requirements can be specified as timing constraints. In this paper, we study the problem of checking the timing consistency of SBS with timing constraints. Although this problem can be transformed into a reachability analysis problem, checking its reachability can still be time-consuming. Therefore, we propose a novel SAT and linear programming (LP) collaborative timing analysis approach named Tassat for the bounded timing analysis of SBS. Instead of using depth-first traversal algorithms, Tassat encodes the structures of the SBS into propositional formulas and adopts SAT solvers to find candidate paths. The timing analysis of candidate paths is then transformed to LP problems, where the irreducible infeasible set of the infeasible paths can be utilized to filter out candidate paths for checking. In addition, we propose an enhanced version of the approach that extends the bounded analysis results to the entire models if the infeasible path segments do not contain intermediate loops. The enhanced algorithm can prove that the given SBS satisfy the required properties on any bound condition. The experimental results show that Tassat is effective and has better performance than existing tools in terms of both time consumption and memory footprint.
C1 [Lu, Longlong; Pan, Minxue; Zhang, Tian; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Lu, Longlong; Pan, Minxue] Nanjing Univ, Software Inst, Nanjing, Peoples R China.
   [Zhang, Tian; Li, Xuandong] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing University; Nanjing University
RP Pan, MX (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Pan, MX (corresponding author), Nanjing Univ, Software Inst, Nanjing, Peoples R China.
EM mxp@nju.edu.cn
RI Pan, Minxue/AIC-5169-2022
FU National Natural Science Foundation of China [61972193]
FX We thank the anonymous reviewers for their constructive comments. This
   research is supported by the National Natural Science Foundation of
   China (No. 61972193).
CR Alur R., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P35
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Andoni A., 2003, EVALUATING SMALL SCO
   Andrade L, 2002, J SOFTW MAINT EVOL-R, V14, P353, DOI 10.1002/smr.260
   Auer M, 2003, EUROMICRO CONF PROC, P267
   Auer M, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P466
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Ben-Abdallah H., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P91
   Biere A, 2003, ADV COMPUT, V58, P117
   Bollobas B, 2001, Cambridge Studies in Advanced Mathematics, V2nd, DOI DOI 10.1017/CBO9780511814068
   Bouabana-Tebibel T, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P11, DOI 10.1109/DepCoS-RELCOMEX.2009.47
   Cimatti Alessandro, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P317, DOI 10.1007/978-3-642-22110-1_25
   Cimatti A, 2013, FORM METHOD SYST DES, V42, P46, DOI 10.1007/s10703-012-0158-0
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Fiadeiro JL, 2006, LECT NOTES COMPUT SC, V4037, P17
   GILBERT EN, 1959, ANN MATH STAT, V30, P1141, DOI 10.1214/aoms/1177706098
   Haugen O, 2005, LECT NOTES COMPUT SC, V3319, P65
   Henzinger TA, 2000, NATO ADV SCI I F-COM, V170, P265
   ITU-TS, 2011, ITUTS Recommendation Z. 120: Message Sequence Chart
   Jackson P, 2005, LECT NOTES COMPUT SC, V3542, P183
   Kleine Buning H., 1999, PROPOSITIONAL LOGIC
   Kluge O, 2003, LECT NOTES COMPUT SC, V2472, P197
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   Laborie P, 2018, CONSTRAINTS, V23, P210, DOI 10.1007/s10601-018-9281-x
   Ladkin Peter B, 1992, Interpreting message sequence charts
   Li XD, 2012, SOFTW TEST VERIF REL, V22, P121, DOI [10.1002/stv.434, 10.1002/stvr.434]
   Louati Aymen, 2013, International Journal of Soft Computing and Software Engineering, V3, P205, DOI 10.7321/jscse.v3.n3.31
   Loveland D. W., 2016, Automated theorem proving: A logical basis
   Minxue Pan, 2012, International Journal on Software Tools for Technology Transfer, V14, P639, DOI 10.1007/s10009-012-0239-9
   Nguyen Minh Chau, 2014, P 29 ANN ACM S APPL, P1140, DOI [10.1145/2554850.2555011, DOI 10.1145/2554850.2555011]
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Nobari Sadegh., 2011, P 14 INT C EXTENDING, P331, DOI DOI 10.1145/1951365.1951406
   Ohrimenko O, 2009, CONSTRAINTS, V14, P357, DOI 10.1007/s10601-008-9064-x
   Pan MX, 2009, LECT NOTES COMPUT SC, V5643, P689
   Parker David, 2012, Proceedings. Lecture Notes in Computer Science, P248, DOI [10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-019]
   Parker M, 1996, ANN MATH ARTIF INTEL, V17, P107, DOI 10.1007/BF02284626
   Pearce R., 2010, SC'10, P1, DOI DOI 10.1109/SC.2010.34
   Peled Doron A, 2013, Software reliability methods
   Sammut C., 2017, Encyclopedia of Machine Learning and Data Mining, DOI DOI 10.1007/978-1-4899-7687-1
   Sebastiani R., 2007, J SAT, V3, P141, DOI [DOI 10.3233/978-1-58603-929-5-825, 10.3233/SAT190034, 10.3233/sat190034, DOI 10.3233/SAT190034]
   Seemann J, 1999, LECT NOTES COMPUT SC, V1618, P240
   Specification O. A., 2007, Omg unified modeling language (omg uml), superstructure, v2. 1.2, V70
   Sridhar Srikrishna., 2013, NIPS 13 P 26 INT C N, P2895
   Swain RK, 2012, PROC TECH, V1, P136, DOI 10.1016/j.protcy.2012.10.017
   Tanner MW, 2010, EUR J OPER RES, V207, P290, DOI 10.1016/j.ejor.2010.04.019
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Whitesitt J Eldon, 2012, Boolean algebra and its applications
   Xie DB, 2014, FORM METHOD SYST DES, V45, P42, DOI 10.1007/s10703-014-0210-3
NR 51
TC 0
Z9 0
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1321
EP 1338
DI 10.1007/s10270-022-00980-8
EA FEB 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000753809500001
DA 2024-07-18
ER

PT J
AU García, NH
   Deshpande, H
   Santos, A
   Kahl, B
   Bordignon, M
AF Hammoudeh Garcia, Nadia
   Deshpande, Harshavardhan
   Santos, Andre
   Kahl, Bjoern
   Bordignon, Mirko
TI Bootstrapping MDE development from ROS manual code: Part 2-Model
   generation and leveraging models at runtime
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE ROS; Models; MDE; Robotics
AB Model-driven engineering (MDE) addresses central aspects of robotics software development. MDE could enable domain experts to leverage the expressiveness of models, while implementation details on different hardware platforms would be handled by automatic code generation. Today, despite strong MDE efforts in the robotics research community, most evidence points to manual code development being the norm. A possible reason for MDE not being accepted by robot software developers could be the wide range of applications and target platforms, which make all-encompassing MDE IDEs hard to develop and maintain. Therefore, we chose to leverage a large corpus of open-source software widely adopted by the robotics community to extract common structures and gain insight on how and where MDE can support the developers to work more efficiently. We pursue modeling as a complement, rather than imposing MDE as separate solution. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition. In this paper, we present two methods based on metamodels for automated generation of models from manually written artifacts: (1) through static code analysis and (2) by monitoring the execution of a running system. For both methods, we present tools that leverage the potentials of our contributions, with a special focus on their application at runtime to observe and diagnose a real system during its execution. A comprehensive example is provided as a walk-through for robotics software practitioners.
C1 [Hammoudeh Garcia, Nadia; Deshpande, Harshavardhan; Kahl, Bjoern] Fraunhofer IPA, Inst Mfg Engn & Automat, Stuttgart, Germany.
   [Santos, Andre] INESC, TEC, Braga, Portugal.
   [Santos, Andre] Univ Minho, Braga, Portugal.
   [Bordignon, Mirko] Google Germany GmbH, Munich, Germany.
C3 INESC TEC; Universidade do Minho; Universidade do Minho; Google
   Incorporated
RP García, NH (corresponding author), Fraunhofer IPA, Inst Mfg Engn & Automat, Stuttgart, Germany.
EM nadia.hammoudeh.garcia@ipa.fraunhofer.de;
   harshavardhan.deshpande@ipa.fraunhofer.de; andre.f.santos@inesctec.pt;
   bjoern.kahl@ipa.fraunhofer.de; mirko.bordignon@ieee.org
OI Santos, Andre/0000-0002-1985-8264
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Adam S, 2014, LECT NOTES COMPUT SC, V8810, P207, DOI 10.1007/978-3-319-11900-7_18
   Ando N, 2008, LECT NOTES ARTIF INT, V5325, P87
   [Anonymous], 2006, THESIS KATHOLIEKE U
   [Anonymous], 2010, J. Softw. Eng. Robot
   Bihlmaier A., 2014, Jahrestagung der Gesellschaft fur Informatik, V44, P1319
   Brugali D, 2018, INT J SEMANT COMPUT, V12, P89, DOI 10.1142/S1793351X18400056
   Brugali D, 2010, IEEE ROBOT AUTOM MAG, V17, P100, DOI 10.1109/MRA.2010.935798
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P84, DOI 10.1109/MRA.2009.934837
   Bruyninckx H., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1758, DOI [10.1145/2480362.2480693, DOI 10.1145/2480362.2480693]
   Bubeck A., 2014, INT S ROBOTICS ISRRO, P1
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Estévez E, 2018, INT J ADV MANUF TECH, V97, P1195, DOI 10.1007/s00170-018-1976-z
   Estévez E, 2016, INT J ADV MANUF TECH, V82, P737, DOI 10.1007/s00170-015-7396-4
   Foote T., 2019, ROS COMMUNITY METRIC
   Garcia NH, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P95, DOI 10.1109/MODELS.2019.00-11
   Garcia NH, 2019, 2019 THIRD IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC 2019), P329, DOI 10.1109/IRC.2019.00060
   Gerkey B., 2000, PLAYER ROBOT SERVER
   Gherardi L, 2014, IEEE INT CONF CLOUD, P745, DOI 10.1109/CLOUD.2014.104
   Hägele M, 2016, IEEE ROBOT AUTOM MAG, V23, P117, DOI 10.1109/MRA.2015.2512741
   Hammoudeh Garcia N., 2020, INT J ROBOT COMPUT I, V2
   Kilgo Paul, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P125, DOI 10.1007/978-3-642-34327-8_14
   Object Management Group Inc. (OMG), 2006, DEPL CONF COMP BAS D
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Reiser U., 2015, MENSCH COMPUTER 2015, P223, DOI 10.1515/9783110443929-024
   Santos A, 2019, 2019 THIRD IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC 2019), P62, DOI 10.1109/IRC.2019.00018
   Santos A, 2017, IEEE INT C INT ROBOT, P3855, DOI 10.1109/IROS.2017.8206237
   Santos A, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P4491, DOI 10.1109/IROS.2016.7759661
   Schlegel C., 1999, Proceedings 1999 IEEE/RSJ International Conference on Intelligent Robots and Systems. Human and Environment Friendly Robots with High Intelligence and Emotional Quotients (Cat. No.99CH36289), P1610, DOI 10.1109/IROS.1999.811709
   Stampfer D., 2016, Journal of Software Engineering for Robotics (JOSER), V7, P3
   Zaman S, 2013, IEEE INT CONF ROBOT, P482, DOI 10.1109/ICRA.2013.6630618
   Zhang L, 2017, SCI ROBOT, V2, DOI 10.1126/scirobotics.aar1868
NR 31
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2047
EP 2070
DI 10.1007/s10270-021-00873-2
EA APR 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000641243500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Porto, RC
   Genius, D
   Apvrille, L
AF Porto, Rodrigo Cortes
   Genius, Daniela
   Apvrille, Ludovic
TI Handling causality and schedulability when designing and prototyping
   cyber-physical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Virtual prototyping; Co-simulation
AB Cyber physical systems are built upon digital and analog circuits, making it necessary to handle different models of computation during their design and verification (e.g., by simulation). When designing these systems, an important aspect to consider is the causality between the different domains. For this, we introduce a new model-driven framework able to identify causality problems and to suggest a valid schedule between the analog and digital domains. Once a valid schedule has been computed, our framework can generate cycle and bit accurate virtual prototypes (in SystemC/SystemC AMS) from high-level SysML models.
C1 [Porto, Rodrigo Cortes; Genius, Daniela] Sorbonne Univ, LIP6, CNRS, F-75005 Paris, France.
   [Porto, Rodrigo Cortes] Tech Univ Kaiserslautern, Dept Elect Engn & Informat Technol, D-67663 Kaiserslautern, Germany.
   [Apvrille, Ludovic] Inst Polytech Paris, Telecom Paris, LTCI, Sophia Antipolis, France.
C3 Sorbonne Universite; Centre National de la Recherche Scientifique
   (CNRS); University of Kaiserslautern; IMT - Institut Mines-Telecom;
   Institut Polytechnique de Paris; Telecom Paris
RP Genius, D (corresponding author), Sorbonne Univ, LIP6, CNRS, F-75005 Paris, France.
EM daniela.genius@lip6.fr
OI Genius, Daniela/0000-0002-9410-6716
CR Andrade L, 2015, DES AUT TEST EUROPE, P1671
   AndradePorras, 2016, THESIS
   [Anonymous], 2015, H INCEPTION CONSORTI
   [Anonymous], 2011, DREAMS DESIGN REFINE
   [Anonymous], 2003, Tech. rep.
   [Anonymous], 2010, ACCELLERA SYSTEMS IN
   Apvrille L., 2017, MODELSWARD
   Apvrille L., 2018, SPRINGER COMMUN COMP, V880, P66
   Apvrille L., TTOOL OPEN SOURCE UM
   Attarzadeh Niaki Seyed Hosein, 2012, 2012 Forum on Specification & Design Languages (FDL), P160
   BenAoun C., 2017, PRINCIPLES REALIZATI
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Blochwitz T., 2011, P 8 INT EXCH SIM MOD
   Boulanger Frederic, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P114, DOI 10.1109/MEMCOD.2014.6961849
   CONCEPCION AI, 1988, IEEE T SOFTWARE ENG, V14, P228, DOI 10.1109/32.4640
   Cort?s Porto, 2018, INTEGRATION SYSTEMC
   Cortes Porto R., 2019, RAPIDO
   Cortes Porto R., 2019, MODELSWARD
   Dammann M, 2008, 2008 ROCS WORKSHOP, PROCEEDINGS, P25, DOI 10.1109/FDL.2008.4641416
   Davare A., 2007, C US HARDW DES VER L, V152
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   Einwich K, 2016, SYSTEMC AMS POC2 1 L
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   Herrera F, 2007, ACM T DES AUTOMAT EL, V12, DOI 10.1145/1255456.1255459
   IEEE, 2011, IEEE STANDARD 1666 2
   Jantsch A., 2003, Modeling Embedded Systems and SoC's
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   LEE EA, 1987, IEEE T COMPUT, V36, P24, DOI 10.1109/TC.1987.5009446
   LEE EA, 1987, P IEEE, V75, P1235, DOI 10.1109/PROC.1987.13876
   Lee EA, 2010, LECT NOTES COMPUT SC, V6395, P273
   Mallet F, 2008, INNOV SYST SOFTW ENG, V4, P309, DOI 10.1007/s11334-008-0055-2
   Patel HD, 2005, IEEE T COMPUT AID D, V24, P1261, DOI 10.1109/TCAD.2005.850819
   Pouzet M., 2014, 17 INT C HYBR SYST C, P71
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Syriani Eugene., 2013, Domain Engineering, P211, DOI DOI 10.1007/978-3-642-36654-3_9
   Taha S, 2010, IFIP ADV INF COMM TE, V329, P31
   Vachoux A, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL III, P914
   Zhao C., 2011, PROC AUTOMAT TEST EU, P1
   Zhu J., 2010, 2010 FOR SPEC DES LA, P1
NR 40
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 667
EP 683
DI 10.1007/s10270-021-00866-1
EA FEB 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000622675800002
DA 2024-07-18
ER

PT J
AU Seiger, R
   Kühn, R
   Korzetz, M
   Assmann, U
AF Seiger, Ronny
   Kuehn, Romina
   Korzetz, Mandy
   Assmann, Uwe
TI HoloFlows: modelling of processes for the Internet of Things in mixed
   reality
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process modelling; Mixed reality; Internet of Things; IoT processes;
   End-user development
ID AUGMENTED REALITY; VIRTUAL-REALITY; BPMN EXTENSION; IOT; DESIGN;
   EXECUTION; CONTEXT; SYSTEMS
AB Our everyday lives are increasingly pervaded by digital assistants and smart devices forming the Internet of Things (IoT). While user interfaces to directly monitor and control individual IoT devices are becoming more sophisticated and end-user friendly, applications to connect standalone IoT devices and create more complex IoT processes for automating and assisting users with repetitive tasks still require a high level of technical expertise and programming knowledge. Related approaches for process modelling in IoT mostly suggest extensions to complex modelling languages, require high levels of abstraction and technical knowledge, and rely on unintuitive tools. We present a novel approach for end-user oriented-no-code-IoT process modelling using Mixed Reality (MR) technology: HoloFlows. Users are able to explore the IoT environment and model processes among sensors and actuators as first-class citizens by simply "drawing" virtual wires among physical IoT devices. MR technology hereby facilitates the understanding of the physical contexts and relations among the IoT devices and provides a new and more intuitive way of modelling IoT processes. The results of a user study comparing HoloFlows with classical modelling approaches show an increased user experience and decrease in required modelling knowledge and technical expertise to create IoT processes.
C1 [Seiger, Ronny] Univ St Gallen, St Gallen, Switzerland.
   [Kuehn, Romina] Tech Univ Dresden, Dresden, Germany.
   [Korzetz, Mandy; Assmann, Uwe] Tech Univ Dresden, Software Technol Grp, Dresden, Germany.
C3 University of St Gallen; Technische Universitat Dresden; Technische
   Universitat Dresden
RP Seiger, R (corresponding author), Univ St Gallen, St Gallen, Switzerland.
EM ronny.seiger@unisg.ch; romina.kuehn@tu-dresden.de;
   mandy.korzetz@tu-dresden.de; uwe.assmann@tu-dresden.de
RI Seiger, Ronny/AAF-4765-2019
OI Seiger, Ronny/0000-0003-1675-2592; Assmann, Uwe/0000-0002-3513-6448;
   Korzetz, Mandy/0000-0002-1002-8440
FU Universitat St.Gallen
FX Open Access funding provided by Universitat St.Gallen
CR Albach J., 2015, BPM GO SUPPORTING BU
   Andrade Tiago, 2019, 2019 5th Experiment@ International Conference (exp.at'19). Proceedings, P107, DOI 10.1109/EXPAT.2019.8876559
   [Anonymous], 1985, TECHNOLOGY ACCEPTANC
   Appel S, 2014, INFORM SYST, V46, P140, DOI 10.1016/j.is.2014.04.002
   Armellin G., 2013, INT C BUS PROC MAN, P264
   Avila L, 2016, IEEE COMPUT GRAPH, V36, P6, DOI 10.1109/MCG.2016.17
   Azuma R, 2001, IEEE COMPUT GRAPH, V21, P34, DOI 10.1109/38.963459
   Balakrishna S., 2019, Handbook of IoT and Big Data, P23
   Barricelli BR, 2015, LECT NOTES COMPUT SC, V9083, P9, DOI 10.1007/978-3-319-18425-8_2
   Bauer Martin., 2013, Enabling Things to Talk: Designing IoT solutions with the IoT Architectural Reference Model, P113
   Baumgrass A, 2016, LECT NOTES BUS INF P, V256, P501, DOI 10.1007/978-3-319-42887-1_40
   Biggs G., 2003, Proceedings of the Australasian conference on robotics and automation, P27, DOI DOI 10.1109/ROBOT.2001.932554
   Bocciarelli P, 2017, IEEE INT C NETW SENS, P599, DOI 10.1109/ICNSC.2017.8000159
   Brouns N., 2018, ARXIV PREPRINT ARXIV
   Chaczko Z, 2017, INT CONF INFO TECH, DOI 10.1109/ITHET.2017.8067827
   Chang C, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3012000
   Clarke S., 2018, P INT C SERV OR COMP, P149
   Craft B, 2005, NINTH INTERNATIONAL CONFERENCE ON INFORMATION VISUALISATION, PROCEEDINGS, P110, DOI 10.1109/IV.2005.28
   Domingos D, 2014, J UNIVERS COMPUT SCI, V20, P1109
   Dumas M., 2013, Fundamentals of Business Process Management, DOI [10.1007/978-3-642-33143-5, DOI 10.1007/978-3-642-33143-5]
   Farshid M, 2018, BUS HORIZONS, V61, P657, DOI 10.1016/j.bushor.2018.05.009
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Fischer G, 2004, COMMUN ACM, V47, P33, DOI 10.1145/1015864.1015884
   Friedow C, 2018, LECT NOTES BUS INF P, V316, P265, DOI 10.1007/978-3-319-92898-2_22
   Fryling M., 2019, J. Comput. Sci. Colleges, V34, P119, DOI DOI 10.5555/3344051.3344061
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Giner P, 2010, IEEE PERVAS COMPUT, V9, P18, DOI 10.1109/MPRV.2010.14
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   HART S G, 1988, P139
   Hasic F., 2019, INT CONF RES CHAL
   Huber S, 2016, INT J SEMANT COMPUT, V10, P269, DOI 10.1142/S1793351X16400109
   Jacob RJK, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P201
   Jacobs T., 2019, REFERENCE ARCHITECTU
   Janiesch C., 2017, ARXIV PREPRINT ARXIV
   Jo D, 2016, IEEE T CONSUM ELECTR, V62, P334, DOI 10.1109/TCE.2016.7613201
   Johnson D.M., 2011, PROTOTYPE AUGMENTED
   Kammerer K, 2018, 2018 4TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING FOR SELF-ADAPTIVE, COLLABORATIVE, AND CYBER PHYSICAL SYSTEMS (RESACS 2018), P44, DOI 10.1109/RESACS.2018.00013
   Kawsar F, 2008, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING (UBICOMP 2008), P282, DOI 10.1145/1409635.1409673
   KOLLING M., 2004, Companion To the 19th Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications (Vancouver, BC, CANADA, October 24 - 28, P73, DOI DOI 10.1145/1028664.1028701
   Korzetz M, 2017, PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON INTERACTIVE SURFACES AND SPACES (ACM ISS 2017), P336, DOI 10.1145/3132272.3132273
   Krishnamurthi R., 2018, PREDICTION EQUATIONS, P1, DOI DOI 10.1109/EPETSG.2018.8658984
   Lakoff George, 1980, METAPHORS WE LIVE BY
   Lekic M., 2018, 2018 17th International Symposium Infoteh-Jahorina, P1, DOI [DOI 10.1109/INFOTEH.2018.8345544, 10.1109/infoteh.2018.8345544, 10.1109/INFOTEH.2018.8345544]
   Leotta F, 2019, LECT NOTES COMPUT SC, V11675, P16, DOI 10.1007/978-3-030-26619-6_3
   Leotta F, 2015, LECT NOTES BUS INF P, V215, P298, DOI 10.1007/978-3-319-19243-7_28
   Lewis JR, 2018, INT J HUM-COMPUT INT, V34, P577, DOI 10.1080/10447318.2018.1455307
   Marrella A, 2018, AI COMMUN, V31, P47, DOI 10.3233/AIC-170748
   Martinez WL, 2011, WILEY INTERDISCIP RE, V3, P119, DOI 10.1002/wics.150
   Martins F, 2017, PROCEDIA COMPUT SCI, V121, P1014, DOI 10.1016/j.procs.2017.11.131
   Mayer S, 2014, INT CONF PERVAS COMP, P163, DOI 10.1109/PerComW.2014.6815188
   Mendling J, 2017, DECIS SUPPORT SYST, V100, P1, DOI 10.1016/j.dss.2017.06.009
   Meroni G, 2018, INFORM SYST, V73, P61, DOI 10.1016/j.is.2017.12.009
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Meyer S, 2015, LECT NOTES BUS INF P, V215, P285, DOI 10.1007/978-3-319-19243-7_27
   MILGRAM P, 1994, P SOC PHOTO-OPT INS, V2351, P282
   MILGRAM P, 1994, IEICE T INF SYST, VE77D, P1321
   Montano L, 2000, INT J ROBOT RES, V19, P59, DOI 10.1177/02783640022066743
   Morrison J.P., 2010, Flow-Based Programming, 2nd Edition: A New Approach to Application Development
   Nielsen J., 2000, WHY YOU ONLY NEED TE
   Nolte A., 2015, P INT C INT TABL SUR, P379
   Norman DA, 2013, Basic Books
   OMG, 2011, BUS PROC MOD NOT BPM
   Oppl S, 2014, BEHAV INFORM TECHNOL, V33, P619, DOI 10.1080/0144929X.2013.833293
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Peña-Ríos A, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT ENVIRONMENTS (IE), P182, DOI 10.1109/IE.2014.34
   Peterson J, 1999, ICRA '99: IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION, VOLS 1-4, PROCEEDINGS, P1144, DOI 10.1109/ROBOT.1999.772516
   Petrasch R, 2016, INT JOINT CONF COMP, P275
   Poole ES, 2008, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING (UBICOMP 2008), P192
   Poppe E, 2017, INFORM SYST, V66, P59, DOI 10.1016/j.is.2017.01.004
   Recker J.C., 2008, BPTRENDS, V5, P1
   Repenning A, 2006, HUM COM INT, V9, P51
   Sauter T, 2005, ETFA 2005: 10TH IEEE INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION, VOL 2, PROCEEDINGS
   Schönig S, 2018, LECT NOTES BUS INF P, V318, P19, DOI 10.1007/978-3-319-91704-7_2
   Seiger R., 2016, Software & Systems Modeling, P1
   Seiger R, 2020, IEEE INT ENTERP, P20, DOI 10.1109/EDOCW49879.2020.00016
   Seiger R, 2019, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS ( IOT 2019), DOI 10.1145/3365871.3365909
   Seiger R, 2019, LECT NOTES BUS INF P, V352, P115, DOI 10.1007/978-3-030-20618-5_8
   Seiger R, 2017, 16TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2017), P495, DOI 10.1145/3152832.3157808
   Seiger R, 2016, UBICOMP'16 ADJUNCT: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P193, DOI 10.1145/2968219.2971410
   Seiger R, 2019, SOFTW SYST MODEL, V18, P1117, DOI 10.1007/s10270-017-0639-0
   Seiger R, 2015, J COMPUT SCI-NETH, V10, P137, DOI 10.1016/j.jocs.2014.07.001
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Standardization/International Electrotechnical Commission I.O., 2013, 195102013 ISOIEC
   Sungur C. Timurhan, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P109, DOI 10.1109/CBI.2013.24
   Suri K, 2017, 2017 IEEE 26TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P214, DOI 10.1109/WETICE.2017.54
   Tepper OM, 2017, PLAST RECONSTR SURG, V140, P1066, DOI 10.1097/PRS.0000000000003802
   Thomas U, 2013, IEEE INT CONF ROBOT, P461, DOI 10.1109/ICRA.2013.6630615
   Tomlein M., 2017, P 7 INT C INT THINGS, P25
   Tomlein M., 2018, P ACM HUM COMP INT 2, V2
   Tomlein M, 2017, IOT'17: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS, P63, DOI 10.1145/3131542.3131552
   Torres V, 2020, CONF BUS INFORM, P221, DOI 10.1109/CBI49978.2020.00031
   Tuysuz Gokhan, 2013, 2013 Seventh International Conference on Next-Generation Mobile Apps, Services and Technologies (NGMAST), P13, DOI 10.1109/NGMAST.2013.12
   vanDam A, 1997, COMMUN ACM, V40, P63, DOI 10.1145/253671.253708
   Vanderfeesten I., 2019, EMPIRICAL STUDIES DE, P113, DOI DOI 10.1007/978-3-030-17666-2_6
   Walch M, 2017, LECT NOTES COMPUT SC, V10371, P164, DOI 10.1007/978-3-319-61240-9_16
   Wang X, 2016, ADV MANUF, V4, P1, DOI 10.1007/s40436-015-0131-4
   Weber B., 2020, IEEE SMC MAG
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Weske M., 2017, IEEE T IND INF
   Widom J., 1996, ACTIVE DATABASE SYST
   Wilson C, 2015, PERS UBIQUIT COMPUT, V19, P463, DOI 10.1007/s00779-014-0813-0
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
NR 103
TC 23
Z9 23
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1465
EP 1489
DI 10.1007/s10270-020-00859-6
EA JAN 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000608076700001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Andaloussi, AA
   Zerbato, F
   Burattin, A
   Slaats, T
   Hildebrandt, TT
   Weber, B
AF Abbad Andaloussi, Amine
   Zerbato, Francesca
   Burattin, Andrea
   Slaats, Tijs
   Hildebrandt, Thomas T.
   Weber, Barbara
TI Exploring how users engage with hybrid process artifacts based on
   declarative process models: a behavioral analysis based on eye-tracking
   and think-aloud
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process models; Hybrid process artifacts; DCR graphs; Eye-tracking;
   Think-aloud; Behavioral analysis
ID MAINTAINABILITY; LANGUAGES; ISSUE
AB Process design artifacts have been increasingly used to guide the modeling of business processes. To support users in designing and understanding process models, different process artifacts have been combined in several ways leading to the emergence of the so-called "hybrid process artifacts". While many hybrid artifacts have been proposed in the literature, little is known about how they can actually support users in practice. To address this gap, this work investigates the way users engage with hybrid process artifacts during comprehension tasks. In particular, we focus on a hybrid representation of DCR Graphs (DCR-HR) combining a process model, textual annotations and an interactive simulation. Following a qualitative approach, we conduct a multi-granular analysis exploiting process mining, eye-tracking techniques, and verbal data analysis to scrutinize the reading patterns and the strategies adopted by users when being confronted with DCR-HR. The findings of the coarse-grained analysis provide important insights about the behavior of domain experts and IT specialists and show how user's background and task type change the use of hybrid process artifacts. As for the fine-grained analysis, user's behavior was classified into goal-directed and exploratory and different strategies of using the interactive simulation were identified. In addition, a progressive switch from an exploratory behavior to a goal-directed behavior was observed. These insights pave the way for an improved development of hybrid process artifacts and delineate several directions for future work.
C1 [Abbad Andaloussi, Amine; Burattin, Andrea] Tech Univ Denmark, Lyngby, Denmark.
   [Zerbato, Francesca; Weber, Barbara] Univ St Gallen, St Gallen, Switzerland.
   [Slaats, Tijs; Hildebrandt, Thomas T.] Univ Copenhagen, Copenhagen, Denmark.
C3 Technical University of Denmark; University of St Gallen; University of
   Copenhagen
RP Andaloussi, AA (corresponding author), Tech Univ Denmark, Lyngby, Denmark.
EM amab@dtu.dk; francesca.zerbato@unisg.ch; andbur@dtu.dk; slaats@di.ku.dk;
   hilde@di.ku.dk; barbara.weber@unisg.ch
RI Burattin, Andrea/K-4485-2016; Zerbato, Francesca/AAK-1670-2020
OI Burattin, Andrea/0000-0002-0837-0183; Zerbato,
   Francesca/0000-0001-7797-4602; Weber, Barbara/0000-0002-6004-4860;
   Abbad-Andaloussi, Amine/0000-0002-3404-7849
FU Innovation Fund Denmark project EcoKnow [7050-00034A]; Danish Council
   for Independent Research project Hybrid Business Process Management
   Technologies [DFF-6111-00337]
FX Work supported by the Innovation Fund Denmark project EcoKnow
   (7050-00034A); the fourth author additionally by the Danish Council for
   Independent Research project Hybrid Business Process Management
   Technologies (DFF-6111-00337).
CR Andaloussi AA, 2020, INFORM SYST, V91, DOI 10.1016/j.is.2020.101505
   Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   [Anonymous], 2012, CAISE FORUM CEUR
   [Anonymous], 2016, BUSINESS PROCESS MAN
   [Anonymous], 2016, 1849-2016, DOI [10.1109/IEEESTD.2016.7740858, DOI 10.1109/IEEESTD.2016.7740858]
   [Anonymous], 2011, WIKI BASED MATURING
   [Anonymous], 2015, BPM IND TRACK
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bera P, 2019, MIS QUART, V43, P1105, DOI 10.25300/MISQ/2019/14163
   Bergstrom J.R., 2014, Eye Tracking in User Experience Design
   Blascheck T, 2017, COMPUT GRAPH FORUM, V36, P260, DOI 10.1111/cgf.13079
   Burattin A, 2019, DATA KNOWL ENG, V121, P1, DOI 10.1016/j.datak.2019.04.001
   Buscher G., 2012, ACM Transactions on Interactive Intelligent Systems (TiiS), V1, P1
   López HGB, 2018, CPU-REV INVESTIG EDU, P66
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Claes J, 2015, INFORM SYST FRONT, V17, P1401, DOI 10.1007/s10796-015-9585-y
   Coombes K.R., 2019, J STAT SOFTW
   Costain G, 2008, THESIS
   CURTIS B, 1989, J SYST SOFTWARE, V9, P167, DOI 10.1016/0164-1212(89)90019-8
   De Smedt J, 2018, INFORM SYST, V74, P40, DOI 10.1016/j.is.2018.01.001
   De Smedt J, 2016, LECT NOTES COMPUT SC, V9694, P83, DOI 10.1007/978-3-319-39696-5_6
   De Smedt J, 2016, BUS INFORM SYST ENG+, V58, P19, DOI 10.1007/s12599-015-0416-y
   Debois S, 2015, SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE SER&IP 2015, P54, DOI 10.1109/SERIP.2015.18
   Debois Soren, 2016, BPM DEMO TRACK 2016, P7
   Duchowski A. T., 2017, EYE TRACKING METHODO, DOI [10.1007/978-3-319-57883-5, DOI 10.1007/978-3-319-57883-5]
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Ehmke C., 2007, Proceedings of the 21st british hci group annual conference on people and computers: Hci... but not as we know it-volume 1, P119, DOI [10.14236/ewic/HCI2007.12, DOI 10.14236/EWIC/HCI2007.12]
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   Friese Susanne., 2019, QUALITATIVE DATA ANA
   Garcia F, 2006, IEEE IMTC P, P1093, DOI 10.1109/IMTC.2006.328377
   Glaholt MG, 2010, J VISION, V10, DOI 10.1167/10.5.15
   Gulden J, 2020, SOFTW SYST MODEL, V19, P531, DOI 10.1007/s10270-019-00742-z
   Gulden J, 2017, LECT NOTES BUS INF P, V281, P474, DOI 10.1007/978-3-319-58457-7_35
   Haisjackl C, 2018, SOFTW SYST MODEL, V17, P655, DOI 10.1007/s10270-016-0563-8
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Haisjackl C, 2014, LECT NOTES BUS INF P, V178, P194
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hildebrandt TT, 2011, ELECTRON PROC THEOR, P59, DOI 10.4204/EPTCS.69.5
   Holmqvist K., 2012, P S EYE TRACK RES AP, P45, DOI [DOI 10.1145/2168556.2168563, 10.1145/2168556.2168563]
   Holmqvist K., 2011, Eye Tracking: A Comprehensive Guide To Methods And Measures
   Janiszewski C, 1998, J CONSUM RES, V25, P290, DOI 10.1086/209540
   Kalyuga S, 2003, EDUC PSYCHOL-US, V38, P23, DOI 10.1207/S15326985EP3801_4
   Keller G., 1992, Semantische Prozessmodellierung auf der Grundlage Ereignisgesteuerter Prozessketten (EPK) Veroffentlichungen des Instituts fur Wirtschaftsinformatik - Heft 98
   Kurzhals K., 2014, P 5 WORKSH TIM ERR N, P61, DOI DOI 10.1145/2669557.2669560
   Kurzhals K, 2016, INFORM VISUAL, V15, P340, DOI 10.1177/1473871615609787
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moher T.G., 1993, COMP COMPREHENSIBILI
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   NIELSEN J, 1994, INT J HUM-COMPUT ST, V41, P385, DOI 10.1006/ijhc.1994.1065
   Object Management Group OMG, 2006, BUS PROC MOD MOT V 2
   Olsen A, 2012, Tobii Technology, V21, P4
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Paivio A, 1991, DUAL CODING THEORY R
   Pesic M., 2008, THESIS
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Pfeiffer J., 2014, P INT C INF SYST
   Pinggera J., 2014, THESIS
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Richardson DC, 2005, COGNITIVE SCI, V29, P1045, DOI 10.1207/s15516709cog0000_29
   Roth WM, 2003, COGNITION INSTRUCT, V21, P429, DOI 10.1207/s1532690xci2104_3
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sapkota B, 2010, IEEE INT ENTERP, P177, DOI 10.1109/EDOCW.2010.44
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Slaats T, 2015, THESIS
   Slaats T, 2020, J DATA SEMANT, V9, P3, DOI 10.1007/s13740-020-00112-9
   Van Der Aalst WMP, 2010, PROCESS MINING DISCO
   Wang W, 2017, LECT NOTES COMPUT SC, V10445, P200, DOI 10.1007/978-3-319-65000-5_12
   Weber B., 2012, ENABLING FLEXIBILITY
   Weijters A., 2006, Tech. Rep. WP, V166, P1
   Zhao F., 2014, Frontline Learning Research, V2, P46, DOI [10.14786/flr.v2i4.98, DOI 10.14786/FLR.V2I4.98]
   Zimoch M, 2017, LECT NOTES BUS INF P, V287, P153, DOI 10.1007/978-3-319-59466-8_10
   Zugal S, 2013, THESIS
   Zugal S, 2013, INT J INF SYST MODEL, V4, P23, DOI 10.4018/jismd.2013040102
   Zugal S, 2012, LECT NOTES BUS INF P, V107, P16
   Zugal S, 2011, LECT NOTES BUS INF P, V81, P163
   Zugal S, 2012, J SOFTW-EVOL PROC, V24, P285, DOI 10.1002/smr.554
NR 82
TC 6
Z9 6
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1437
EP 1464
DI 10.1007/s10270-020-00811-8
EA JUL 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WH9YE
UT WOS:000545547700001
DA 2024-07-18
ER

PT J
AU Liu, YL
   Wang, T
   Zhang, HQ
   Cheutet, V
AF Liu, Yinling
   Wang, Tao
   Zhang, Haiqing
   Cheutet, Vincent
TI An improved approach on the model checking for an agent-based simulation
   system
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model checking; Agent-based simulation system; Global behaviours and
   operational behaviours; Model transformation
ID WEB-SERVICES; KNOWLEDGE; VERIFICATION; BEHAVIORS; FRAMEWORK; LOGIC
AB Model checking is an effective way to verify behaviours of an agent-based simulation system. Three behaviours are analysed: operational, control, and global behaviours. Global behaviours of a system emerge from operational behaviours of local components regulated by control behaviours of the system. The previous works principally focus on verifying the system from the operational point of view (operational behaviour). The satisfaction of the global behaviour of the system conforming to the control behaviour has not been investigated. Thus, in this paper, we propose a more complete approach for verifying global and operational behaviours of systems. To do so, these three behaviours are firstly formalized by automata-based techniques. The meta-transformation between automata theories and Kripke structure is then provided, in order to illustrate the feasibility for the model transformation between the agent-based simulation model and Kripke structure-based model. Then, a mapping between the models is proposed. Subsequently, the global behaviour of the system is verified by the properties extracted from the control behaviour and the operational behaviour is checked by general system performance properties (e.g. safety, deadlock freedom). Finally, a case study on the simulation system for aircraft maintenance has been carried out. A counterexample of signals sending between Flight agent and Plane agent has been produced by NuSMV model checker. Modifications for the NuSMV model and agent-based simulation model have been performed. The experiment results show that 9% out of 19% of flights have been changed to be serviceable.
C1 [Liu, Yinling; Wang, Tao; Cheutet, Vincent] Natl Inst Appl Sci Lyon INSA Lyon, Decis & Informat Sci Prod Syst Lab, Lyon, France.
   [Wang, Tao] Univ St Etienne, Ind Engn & Comp Sci, St Etienne, France.
   [Zhang, Haiqing] Chengdu Univ Informat Technol, Chengdu, Peoples R China.
C3 Institut National des Sciences Appliquees de Lyon - INSA Lyon;
   Universite Jean Monnet; Chengdu University of Information Technology
RP Liu, YL (corresponding author), Natl Inst Appl Sci Lyon INSA Lyon, Decis & Informat Sci Prod Syst Lab, Lyon, France.
EM yinling.liu@insa-lyon.fr
RI Tao, Wang/AAV-8161-2020; Zhang, Haiqing/KHU-5808-2024; Cheutet,
   Vincent/ABC-6162-2020
OI Tao, Wang/0000-0001-8100-6743; Cheutet, Vincent/0000-0003-1920-2609;
   Liu, Yinling/0000-0002-9711-2118
CR Abar S, 2017, COMPUT SCI REV, V24, P13, DOI 10.1016/j.cosrev.2017.03.001
   Al-Saqqar F, 2015, SIMUL MODEL PRACT TH, V51, P45, DOI 10.1016/j.simpat.2014.11.003
   [Anonymous], 2004, REASONING KNOWLEDGE, DOI DOI 10.7551/MITPRESS/5803.001.0001
   Bentahar J, 2013, EXPERT SYST APPL, V40, P508, DOI 10.1016/j.eswa.2012.07.069
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Bordini RH, 2006, AUTON AGENT MULTI-AG, V12, P239, DOI 10.1007/s10458-006-5955-7
   Cavada R., 2019, NUSMV 2 5 TUTORIAL
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Cousseau JE, 2004, INT CONF ACOUST SPEE, P661
   El Menshawy M, 2018, J SYST SOFTWARE, V138, P189, DOI 10.1016/j.jss.2017.12.042
   Fisher M, 2005, AUTON AGENT MULTI-AG, V10, P41, DOI 10.1007/s10458-004-3140-4
   Joo J, 2013, SIMUL MODEL PRACT TH, V32, P99, DOI 10.1016/j.simpat.2012.12.007
   Keshanchi B, 2017, J SYST SOFTWARE, V124, P1, DOI 10.1016/j.jss.2016.07.006
   Liu KM, 2004, ICCC2004: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATION VOL 1AND 2, P788
   Liu YL, 2019, COMPUT IND ENG, V137, DOI 10.1016/j.cie.2019.106041
   Maamar Z, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS: WAINA, VOLS 1 AND 2, P43, DOI 10.1109/WAINA.2009.65
   Macal CM, 2016, J SIMUL, V10, P144, DOI 10.1057/jos.2016.7
   Macal CM, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P2, DOI 10.1109/WSC.2005.1574234
   Meski A, 2014, AUTON AGENT MULTI-AG, V28, P558, DOI 10.1007/s10458-013-9232-2
   Navimipour NJ, 2015, COMPUT IND, V68, P65, DOI 10.1016/j.compind.2014.12.007
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Raimondi F, 2006, MODEL CHECKING MULTI
   Serrano-Hernandez A, 2018, SIMUL MODEL PRACT TH, V85, P47, DOI 10.1016/j.simpat.2018.04.002
   Sheng QZ, 2010, IEEE INTERNET COMPUT, V14, P68, DOI 10.1109/MIC.2010.78
   Song W, 2018, SIMUL MODEL PRACT TH, V86, P187, DOI 10.1016/j.simpat.2018.05.009
   Souri A, 2014, EXPERT SYST APPL, V41, P3831, DOI 10.1016/j.eswa.2013.11.042
   Vardi MY, 1995, LECT NOTES COMPUT SC, V1000, P471
   Yahyaoui H, 2010, INT J WEB GRID SERV, V6, P95, DOI 10.1504/IJWGS.2010.033787
NR 28
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 429
EP 445
DI 10.1007/s10270-020-00807-4
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000539929600001
DA 2024-07-18
ER

PT J
AU De Vito, G
   Ferrucci, F
   Gravino, C
AF De Vito, Gabriele
   Ferrucci, Filomena
   Gravino, Carmine
TI Design and automation of a COSMIC measurement procedure based on UML
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Functional size measurement; Automation tool; COSMIC-ISO 19761; Unified
   modeling language
ID FUNCTIONAL SIZE; FFP
AB Context. Many organizations are adopting the COSMIC method to size software products for estimating and controlling their development costs and performances. Using a functional size measurement method requires specialized expertise and can be time-consuming. Objectives. Since UML is the de facto industrial modeling language standard for object-oriented systems, it is very useful to understand how to exploit UML models for measuring software systems and for developing tools that can automatically derive the COSMIC size from them. This paper provides an answer to these needs. Method. We present a measurement procedure to derive the COSMIC functional size from UML software artifacts and a tool, named J-UML COSMIC, for the automation of the procedure. Based on the observation that different development processes are characterized by the use of different UML models, the tool has been designed to work with different UML artifacts (such as use case models, package diagrams, component diagrams, class diagrams, activity diagrams, and sequence diagrams) and to adapt to the specific employed process. To assess the measurement procedure and J-UML COSMIC, we have carried out two case studies and compared the measurement results provided by the tool with the ones obtained by experts applying the standard COSMIC method. Results. Using the proposed measurement procedure the tool is able to identify from UML software models all the COSMIC concepts and data movements identified by the experts. Moreover, the tool allows us to obtain incremental accurate measurements when new models are considered or existing ones are detailed. Conclusions. The designed approach is able to automatically measure the functional size starting from UML artifacts and providing higher accurate results when more data is available.
C1 [De Vito, Gabriele; Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Via Giovanni Paolo 2,132, Fisciano, SA, Italy.
C3 University of Salerno
RP Ferrucci, F; Gravino, C (corresponding author), Univ Salerno, Via Giovanni Paolo 2,132, Fisciano, SA, Italy.
EM fferrucci@unisa.it; gravino@unisa.it
RI De Vito, Gabriele/AEX-3144-2022
OI De Vito, Gabriele/0000-0002-1153-1566; FERRUCCI,
   Filomena/0000-0002-0975-8972
CR Abrahao S., 2010, P INT WORKSH ADV FUN
   Abrahao S, 2018, INFORM SOFTWARE TECH, V104, P144, DOI 10.1016/j.infsof.2018.07.012
   Abran A., 2015, COSMIC FUNCTIONAL SI
   Albrecht A.J., 1979, Proceedings IBM Application Development Symposium, Monterey, CA, October, P8392
   [Anonymous], 2007, 1414312007 ISOIEC
   Azzouz S., 2004, SOFTWARE MEASUREMENT
   Barkallah S., COMMUNICATIONS COMPU, V257
   Bevo V., 1999, INT WORKSH SOFTW MEA
   Bevo V., 2005, THESIS
   Cheung Y., 1999, Benchmarking: An International Journal, V6, P269, DOI DOI 10.1108/14635779910288532
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Conallen J., 1999, BUILDING WEB APPL UM
   Condori-Fernández N, 2007, J COMPUT SCI TECH-CH, V22, P358, DOI 10.1007/s11390-007-9050-6
   COSMIC Group, 2007, COSMIC FUNCT SIZ MEA
   COSMIC Group, COSMIC FUNCT SIZ MEA
   COSMIC Group, RIC COOK COSM GROUP
   Costagliola G, 2006, J WEB ENG, V5, P93
   De Vito G, 2014, EUROMICRO CONF PROC, P69, DOI 10.1109/SEAA.2014.30
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Diab H, 2005, INFORM SOFTWARE TECH, V47, P151, DOI 10.1016/j.infsof.2004.06.007
   Fetcke T., 1999, 199920 U QUEB DEP IN
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Habela P., 2005, 15 INT WORKSHOP SOFT, P195
   Jenner M.S., 2001, 4 EUROPEAN C SOFTWAR, P173
   Jenner MalcolmS., 2002, The 12th International Workshop Software Measurement, P43
   Khelifi A., PROPOSED MEASUREMENT
   Kruchten P., 2000, RATIONAL UNIFIED PRO, P298
   Lavazza L., 2009, CASE STUDY COSMIC FU, P101
   Levesque G., 2008, Proceedings of the 2008 C3S2E Conference, P81
   Lind K., 2011, MODEL DRIVEN ENG LAN
   Lind K, 2009, PROCEEDINGS OF THE 12TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, P244, DOI 10.1109/ISORC.2009.15
   Luckson V., 17 INT C SOFTW SYST
   Marin B., 9 INT C PROD FOC SOF, P215
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Rollo T., 2000, P ACOSM 2000 AUSTR C
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Sommerville I., 2010, SOFTWARE ENG
   Soubra H., P JOINT C INT WORKSH, P23
   Soubra H., 2012, 22 IWSM MENSURA
   Soubra H., 2011, 21 IWSM MENSURA
   Symons C., 2007, ADV FUNCTIONAL SIZE
   Timp A., 2008, FPA APPL UML USE CAS
   Timp Adri, 2015, UTIP EARLY FUNCTION
   Ungan E., FUNCTIONAL SOFTWARE, P176
   Van den Berg K., 2005, the 2nd Software Measurement European Forum, P69
   Vazquez C., 2016, IFPUG METRICVIEWS, V10
   Vogelezang F, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P112, DOI 10.1109/IWSM-MENSURA.2012.24
NR 47
TC 7
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 171
EP 198
DI 10.1007/s10270-019-00731-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900009
DA 2024-07-18
ER

PT J
AU Stevens, P
AF Stevens, Perdita
TI Maintaining consistency in networks of models: bidirectional
   transformations in the large
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Bidirectional transformation; Consistency;
   Megamodel; Model decomposition; Non-interference
ID TRIPLE GRAPH-GRAMMARS
AB The model-driven development of systems involves multiple models, metamodels and transformations, and relationships between them. A bidirectional transformation (bx) is usually defined as a means of maintaining consistency between "two (or more)" models. This includes cases where one model may be generated from one or more others, as well as more complex ("symmetric") cases where models record partially overlapping information. In recent years, binary bx, those relating two models, have been extensively studied. Multiary bx, those relating more than two models, have received less attention. In this paper, we consider how a multiary consistency relation may be defined in terms of binary consistency relations and how consistency restoration may be carried out on a network of models and relationships between them. In particular, we consider the circumstances under which we can prove non-interference between several bidirectional transformations that impact on the same model and how the use of a more refined notion of consistency can help in cases where this is not possible. In the process, we develop an abstract theory of parts of a model that are read or modified by a bidirectional transformation. We relate the work to megamodelling and discuss further research that is needed.
C1 [Stevens, Perdita] Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
C3 University of Edinburgh
RP Stevens, P (corresponding author), Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
EM perdita@inf.ed.ac.uk
CR Anjorin A., 2018, PROGRAM J, V2, P7, DOI [10.22152/programming-journal.org/2018/2/7, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2018/2/7]
   [Anonymous], 2004, P BEST PRACT MOD DRI
   [Anonymous], 2014, EDBT ICDT 2014
   Bacchus F, 2002, ARTIF INTELL, V140, P1, DOI 10.1016/S0004-3702(02)00210-2
   Boiten E.A., COMPUT STAND INTERFA, V35, P269
   Bonchi F, 2008, LECT NOTES COMPUT SC, V5214, P226, DOI 10.1007/978-3-540-87405-8_16
   Boubakir M, 2016, LECT NOTE NETW SYST, P327, DOI 10.1007/978-3-319-33410-3_23
   Cheney J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.1.a3
   Cicchetti A., 2019, SOFTWARE SYSTEM MODE
   Cleve A., 2019, DAGSTUHL REPORTS, V8, P12
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Garcia M., 2008, DSML, V8, P7
   Hebig R., 2015, DEV AUTOSAR STANDARD
   Konigs Alexander, 2006, Softw. Syst. Model., V5, P349, DOI [10.1007/s10270-006-0016-x, DOI 10.1007/S10270-006-0016-X]
   Lano K, 2008, INFORM SOFTWARE TECH, V50, P406, DOI 10.1016/j.infsof.2007.04.003
   Lano K., 2016, P VOLT, V1693, P28
   Luenberger DG, 1984, LINEAR NONLINEAR PRO
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Matsuda K, 2015, PROCEEDINGS OF THE 20TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING (ICFP'15), P62, DOI 10.1145/2784731.2784750
   Matsuda K, 2007, ICFP'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P47
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   OMG, 2016, MOF2 0 QUER VIEW TRA
   OMG, 2016, MET FAC VERS 2 5 1
   Plump Detlef, 2018, GRAPH TRANSFORMATION, V10800, P231, DOI [DOI 10.1007/978-3-319-75396-6_13, 10.1007/978-3-319-75396-6\_13, DOI 10.1007/978-3-319-75396-6]
   Rossi F., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P550
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Shah AA, 2010, LECT NOTES COMPUT SC, V5765, P580, DOI 10.1007/978-3-642-17322-6_25
   Stevens P, 2018, ACM IEEE 21 INT C MO
   Stevens P., 2014, LNCS, P32
   Stevens P, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P1, DOI 10.1109/MODELS.2017.8
   Trollmann F, 2016, LECT NOTES COMPUT SC, V9765, P91, DOI 10.1007/978-3-319-42064-6_7
   Trollmann F, 2015, LECT NOTES COMPUT SC, V9152, P214, DOI 10.1007/978-3-319-21155-8_16
   Xiong YF, 2013, SOFTW SYST MODEL, V12, P89, DOI 10.1007/s10270-010-0187-3
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 37
TC 14
Z9 15
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 39
EP 65
DI 10.1007/s10270-019-00736-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900005
OA Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Franconi, E
   Mosca, A
   Oriol, X
   Rull, G
   Teniente, E
AF Franconi, Enrico
   Mosca, Alessandro
   Oriol, Xavier
   Rull, Guillem
   Teniente, Ernest
TI OCLFO: first-order expressive OCL constraints for efficient integrity
   checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE OCL; Relational algebra; Integrity checking
ID UML/OCL
AB OCL is the standard language for defining constraints in UML class diagrams. Unfortunately, as we show in this paper, full OCL is so expressive that it is not possible to check general OCL constraints efficiently. In particular, we show that checking general OCL constraints is not only not polynomial, but not even semidecidable. To overcome this situation, we identify OCLFO, a fragment of OCL which is expressively equivalent to relational algebra (RA). By equivalent we mean that any OCLFO constraint can be checked through a RA query (which guarantees that OCLFO checking is efficient, i.e., polynomial), and any RA query encoding some constraint can be written as an OCLFO constraint (which guarantees expressiveness of OCLFO). In this paper we define the syntax of OCLFO, we concisely determine its semantics through set theory, and we prove its equivalence to RA. Additionally, we identify the core of this language, i.e., a minimal subset of OCLFO equivalent to RA.
C1 [Franconi, Enrico] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Mosca, Alessandro] SIRIS Acad, SIRIS LAB, R&D Div, Barcelona, Spain.
   [Oriol, Xavier] Univ Politecn Cataluna, InLab FIB, Barcelona, Spain.
   [Teniente, Ernest] Univ Politecn Cataluna, Dept Serv & Informat Syst Engn, Barcelona, Spain.
   [Rull, Guillem] Univ Barcelona, Barcelona, Spain.
C3 Free University of Bozen-Bolzano; Universitat Politecnica de Catalunya;
   Universitat Politecnica de Catalunya; University of Barcelona
RP Oriol, X (corresponding author), Univ Politecn Cataluna, InLab FIB, Barcelona, Spain.
EM franconi@inf.unibz.it; a.mosca@sirisacademic.com; xoriol@essi.upc.edu;
   grull@essi.upc.edu; teniente@essi.upc.edu
RI Teniente, Ernest/L-4313-2014; Franconi, Enrico/B-7080-2012
OI Franconi, Enrico/0000-0002-7814-515X; Oriol, Xavier/0000-0002-8845-8504;
   Mosca, Alessandro/0000-0003-2323-3344
FU Ministerio de Economia y Competitividad [TIN2017-87610-R]; Secreteria
   d'Universitats i Recerca de la Generalitat de Catalunya [2017 SGR 1749]
FX This work has been partially supported by the Ministerio de Economia y
   Competitividad, under Project TIN2017-87610-R, and by the Secreteria
   d'Universitats i Recerca de la Generalitat de Catalunya under 2017 SGR
   1749.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1992, STAND SQL 92 STAND
   [Anonymous], P VERIFY WORKSH FED
   [Anonymous], UN MOD LANG UML SUP
   Assmann U, 2014, SOFTW SYST MODEL, V13, P133, DOI 10.1007/s10270-012-0284-6
   Balsters H, 2003, LECT NOTES COMPUT SC, V2863, P295
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Brucker Achim D., 2014, P 14 INT WORKSH OCL, V1285, P83
   Brucker Achim D., 2014, FEATHERWEIGHT OCL PR
   Clavel M., 2009, P WORKSH PRAGM OCL O, V24
   Cunha A, 2015, SOFTW SYST MODEL, V14, P5, DOI 10.1007/s10270-013-0353-5
   Demuth B, 1999, LECT NOTES COMPUT SC, V1723, P598
   Egea M., 2010, ECEASST, V36, P1
   Egea M, 2019, SOFTW SYST MODEL, V18, P769, DOI 10.1007/s10270-017-0597-6
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Franconi E, 2014, LECT NOTES ARTIF INT, V8761, P657, DOI 10.1007/978-3-319-11558-0_49
   HALPIN T., 1998, HDB ARCHITECTURES IN, P81
   Hamann Lars, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P235, DOI 10.1007/978-3-642-33666-9_16
   Hilken F, 2015, LECT NOTES COMPUT SC, V9152, P149, DOI 10.1007/978-3-319-21155-8_12
   Immerman N., 2012, Descriptive complexity
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   LINZ P, 1990, INTRO FORMAL LANGUAG
   Mandel L, 1999, LECT NOTES COMPUT SC, V1708, P854
   Markovi S., 2006, OCL SEMANTICS SPECIF, P661
   OMG, 2014, OBJ CONTR LANG
   Oriol X, 2017, LECT NOTES COMPUT SC, V10650, P354, DOI 10.1007/978-3-319-69904-2_28
   Oriol X, 2015, LECT NOTES COMPUT SC, V9381, P199, DOI 10.1007/978-3-319-25264-3_15
   Oriol X, 2015, DATA KNOWL ENG, V99, P39, DOI 10.1016/j.datak.2015.06.006
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Planas E, 2006, DBLP CASE STUDY
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Ramírez JLR, 2012, CPU-REV INVESTIG EDU, P44
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Tort A, OSCOMMERCE CASE STUD
NR 37
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2655
EP 2678
DI 10.1007/s10270-018-0688-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900012
DA 2024-07-18
ER

PT J
AU Bliudze, S
   Furic, S
   Sifakis, J
   Viel, A
AF Bliudze, Simon
   Furic, Sebastien
   Sifakis, Joseph
   Viel, Antoine
TI Rigorous design of cyber-physical systems: Linking physicality and
   computation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems design; Structural equational modeling; Modelica;
   Linear graphs; Bond graphs; Idealization; Abstraction; Hybrid dataflow
   networks; Discretization; Language embedding
AB Cyber-physical systems have developed into a very active research field, with a broad range of challenges and research directions going from requirements, to implementation and simulation, as well as validation and verification to guarantee essential properties. In this survey paper, we focus exclusively on the following fundamental issue: how to link physicality and computation, continuous time-space dynamics with discrete untimed ones? We consider that cyber-physical system design flow involves the following three main steps: (1)cyber-physical systems modeling; (2)discretization for executability; and (3)simulation and implementation. We reviewand strive to provide insight into possible approaches for addressingthe key issues, for each of these three steps.
C1 [Bliudze, Simon] INRIA Lille Nord Europe, Parc Sci Haute Borne,40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Furic, Sebastien] INRIA Ctr Paris, 2 Rue Simone Iff, F-75589 Paris, France.
   [Sifakis, Joseph] Verimag, Batiment IMAG,700 Ave Cent, F-38401 St Martin Dheres, France.
   [Viel, Antoine] Siemens Ind Software SAS, 14 Blvd Valmy, F-42300 Roanne, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Siemens AG
RP Bliudze, S (corresponding author), INRIA Lille Nord Europe, Parc Sci Haute Borne,40 Ave Halley, F-59650 Villeneuve Dascq, France.
EM simon.bliudze@inria.fr; sebastien.furic@inria.fr;
   joseph.sifakis@univ-grenoble-alpes.fr; antoine.viel@siemens.com
RI Bliudze, Simon/ABD-8558-2021
OI Bliudze, Simon/0000-0002-7900-5271
CR Alur R, 2015, PRINCIPLES OF CYBER-PHYSICAL SYSTEMS, P1
   [Anonymous], 2004, Mastering Simulink
   [Anonymous], 2014, P 10 INT MODELICACON
   [Anonymous], 2009, ACM INT C EMB SOFTW, DOI DOI 10.1145/1629335.1629347
   ASCHER UM, 1995, MECH STRUCT MACH, V23, P135, DOI 10.1080/08905459508905232
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Baumgarte J., 1972, Computer Methods in Applied Mechanics and Engineering, V1, P1, DOI 10.1016/0045-7825(72)90018-7
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Benveniste A., 2013, CYBER PHYS SYSTEMS C
   Benveniste A, 2012, J COMPUT SYST SCI, V78, P877, DOI 10.1016/j.jcss.2011.08.009
   Berger C., 2015, P LECT NOTES COMPUTE, V9361, DOI [10.1007/978-3-319-25141-7, DOI 10.1007/978-3-319-25141-7]
   Bliudze S., 2009, FUNDAMENTA INFORM, V91, P1
   Bliudze Simon., 2007, Proceedings of the 7th ACM/IEEE International Conference on Embedded Software, EMSOFT '07, P11, DOI DOI 10.1145/1289927.1289935
   Blochwitz T., 2011, Proc. 8th Int. Modelica Conf., Dresden, P105, DOI [10.3384/ecp11063105, DOI 10.3384/ECP11063105]
   Bornot S, 2000, INFORM COMPUT, V163, P172, DOI 10.1006/inco.2000.2999
   Broman D, 2013, PROCEEDINGS OF THE 2013 ELECTRONIC SYSTEM LEVEL SYNTHESIS CONFERENCE (ESLSYN)
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Cellier F. E., 2006, Continuous System Simulation
   Cellier F.E., 2008, Proc. GCMS'08, Grand Challenges in Modeling and Simulation part of SCSC'08, Summer Computer Simulation Conference, Edinburgh, P504
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Fitzgerald J, 2015, FME WORKS FORM, P40, DOI 10.1109/FormaliSE.2015.14
   Fritzson P., 2011, Introduction to modeling and simulation of technical and physical systems with Modelica
   Furic S, 2015, FMI DES M 9 10 FEB
   Furic S., 2013, CONNECTION SEM UNPUB
   Furic S, 2015, WORKSH SIM SL
   Gear C. W, 1980, TECHNICAL REPORT
   Geisberger E., 2015, Living in a networked world: Integrated research agenda Cyber-Physical Systems (agendaCPS)
   Henzinger T.A., 2000, THEORY HYBRID AUTOMA
   Hogan N, 2002, MECHATRONICS HDB, P1
   Karnopp D. C., 2012, ENGINEERINGPRO COLLE
   Konecny M, 2016, NONLINEAR ANAL-HYBRI, V20, P1, DOI 10.1016/j.nahs.2015.10.004
   Kübler R, 2000, MATH COMP MODEL DYN, V6, P93, DOI 10.1076/1387-3954(200006)6:2;1-M;FT093
   LAMB JD, 1993, SIMUL SERIES, V25, P85
   Lee EA, 2005, LECT NOTES COMPUT SC, V3414, P25
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee EA, 2014, IEEE ACCESS, V2, P797, DOI 10.1109/ACCESS.2014.2345759
   Lelarasmee E., 1982, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, VCAD-1, P131, DOI 10.1109/TCAD.1982.1270004
   LindstrOm T, 1988, LONDON MATH SOC STUD, V10
   Matsikoudis Eleftherios, 2013, Formal Modeling and Analysis of Timed Systems. Proceedings of 11th International Conference (FORMATS 2013): LNCS 8053, P183, DOI 10.1007/978-3-642-40229-6_13
   Mattsson S.E., 2000, P MOD WORKSH 2020 P, P61
   PERELSON AS, 1976, J FRANKLIN I, V302, P159, DOI 10.1016/0016-0032(76)90021-1
   Rajkumar R, 2010, DES AUT CON, P731
   Robinson Abraham, 1966, NONSTANDARD ANAL
   Rust H., 2005, LNCS, V3456, DOI [10.1007/978-3-540-32008-1, DOI 10.1007/978-3-540-32008-1]
   Sfyrla Vassiliki, 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P217, DOI 10.1109/SIES.2010.5551374
   Sifakis J, 2015, P IEEE, V103, P2093, DOI 10.1109/JPROC.2015.2484060
   Sztipanovits J, 2015, DES AUT CON, DOI 10.1145/2744769.2747922
   TELLEGEN BDH, 1952, PHILIPS RES REP, V7, P259
   TRENT HM, 2003, SOC AM, V27, P500, DOI DOI 10.1121/1.1907949
   Tripakis S, 2015, PROCEEDINGS INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS - ARCHITECTURES, MODELING AND SIMULATION (SAMOS XV), P60, DOI 10.1109/SAMOS.2015.7363660
   Vladimirescu A, 1993, SPICE BOOK
   Walther M., 2014, LINKOPING ELECT C P, P1213, DOI [10.3384/ECP140961213, DOI 10.3384/ECP140961213]
   Wolf W, 2009, COMPUTER, V42, P88, DOI 10.1109/MC.2009.81
   Zeigler BP, 1998, P SOC PHOTO-OPT INS, V3369, P49, DOI 10.1117/12.319354
   Zheng HY, 2006, LECT NOTES COMPUT SC, V3927, P568
NR 56
TC 11
Z9 13
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1613
EP 1636
DI 10.1007/s10270-017-0642-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100004
DA 2024-07-18
ER

PT J
AU Dadeau, F
   Fourneret, E
   Bouchelaghem, A
AF Dadeau, Frederic
   Fourneret, Elizabeta
   Bouchelaghem, Abir
TI Temporal property patterns for model-based testing from UML/OCL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Behavioural model; Property patterns; Coverage measure; Test generation;
   Property design
AB This article describes a new property- and model-based testing approach using UML/OCL models, driven by temporal property patterns and a tool for assisting the temporal properties formalization. The patterns are expressed in the TOCL language, an adaptation of Dwyer's property patterns to OCL. The patterns are used to formalize temporal requirements without having to learn a complex temporal logics such as LTL or CTL. From these properties, automata are automatically computed. These can be used for two purposes. First, it is possible to evaluate the quality of a test suite by measuring the coverage of a property using its associated automaton. Second, the automaton can be used to drive the test generation in order to produce complementary test cases. To this end, we defined dedicated coverage criteria, targeting specific events of the property, and aiming either at illustrating the expected behaviour of the system, or checking its robustness w.r.t. the property. However, it was observed that the semantics of the property language may be more subtle that it seems. To facilitate the adoption of the language by industrials, we have proposed a tool-supported assistant for property design, aiming to help the validation engineer choosing which constructs faithfully correspond to his intention. This approach has been experimented on several case studies with industrial partners. It has shown its interest for software validation, providing useful information thanks to adequate traceability features.
C1 [Dadeau, Frederic; Fourneret, Elizabeta; Bouchelaghem, Abir] Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, UMR 6174, 16 Route Gray, F-25030 Besancon, France.
   [Fourneret, Elizabeta] Smartesting Solut & Serv, 18 Rue Alain Savary, F-25000 Besancon, France.
C3 Universite de Technologie de Belfort-Montbeliard (UTBM); Centre National
   de la Recherche Scientifique (CNRS); CNRS - Institute for Engineering &
   Systems Sciences (INSIS); Universite de Franche-Comte
RP Dadeau, F (corresponding author), Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, UMR 6174, 16 Route Gray, F-25030 Besancon, France.
EM frederic.dadeau@femto-st.fr; elizabeta.fourneret@femto-st.fr
FU French National Research Agency (ANR) [ANR13-ASMA-0003]
FX This article is an extension of a 2014 paper published at the
   Model-Based Testing workshop. The extension consists in the experiments
   section, and the complement on the assistance on properties modelling.
   This work has been partially funded by the French National Research
   Agency (ANR) under Grant ANR13-ASMA-0003.
CR Aertryck L. V., 2003, AFADL 2003
   Aichernig BK, 2016, IEEE ICST WORKSHOP, P219, DOI 10.1109/ICSTW.2016.24
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ammann P, 2001, IEEE INT C ENG COMP, P212, DOI 10.1109/ICECCS.2001.930180
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   [Anonymous], 1960, IRE transactions on Electronic Computers, DOI [DOI 10.1109/TEC.1960.5221603, 10.1109/TEC.1960.5221603]
   [Anonymous], 2009, Common criteria information technology security evaluation
   Auguston Mikhail., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Benattou M., 2002, P ECOOP WORKSH INT T
   Botella J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P192, DOI 10.1109/ICST.2013.42
   Bouquet F., 2007, Proceedings of the 3rd International Workshop on Advances in Modelbased Testing, P95
   Brucker AD., 2011, International conference models in software engineering, P334
   Carvalho G., 2014, INT WORKSHOP FORMAL, P19, DOI DOI 10.1007/978-3-319-05416-2_3
   Castillos K.C., 2013, IFM 2013, V7940, P316, DOI [10.1007/978-3-642-38613-822, DOI 10.1007/978-3-642-38613-822]
   DeMillo R. A., 1989, SOFTW ENG 1989 11 IN, P355, DOI DOI 10.1109/ICSE.1989.714449
   Dou W, 2014, LECT NOTES COMPUT SC, V8569, P51
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Falcone Y, 2008, ELECTRON NOTES THEOR, V220, P29, DOI 10.1016/j.entcs.2008.11.004
   Fraser G, 2008, SOFTWARE QUAL J, V16, P161, DOI 10.1007/s11219-007-9031-6
   Gargantini A., 1999, P JOINT 7 EUR SOFTW
   Hallal H, 2003, LECT NOTES COMPUT SC, V2644, P180
   Huang J. C., 1975, Computing Surveys, V7, P113, DOI 10.1145/356651.356652
   Kanso B, 2014, SCI COMPUT PROGRAM, V96, P527, DOI 10.1016/j.scico.2014.02.029
   MASSON Pierre-Alain., 2010, JIAS, Journal of Information Assurance and Security, V5, P335
   Peleska J, 2011, LECT NOTES COMPUT SC, V6617, P298, DOI 10.1007/978-3-642-20398-5_22
   Rouillard D., 2012, TECH REP
   Rusu V., 2005, LNCS
   Ryser J., 1999, 3 SOFTWARE QUALITY W
   Taha S, 2015, FORM ASP COMPUT, V27, P641, DOI 10.1007/s00165-014-0328-5
   Tan L, 2004, IRI 2004 IEEE INT C, P413, DOI DOI 10.1109/IRI.2004.1431509
   Tsai WT, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.103
   Tsai WT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P410, DOI 10.1109/QSIC.2003.1319129
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wittevrongel J, 2001, PROCEEDINGS OF THE TENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P41, DOI 10.1109/ENABL.2001.953386
NR 38
TC 3
Z9 4
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 865
EP 888
DI 10.1007/s10270-017-0635-4
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nikaj, A
   Weske, M
   Mendling, J
AF Nikaj, Adriatik
   Weske, Mathias
   Mendling, Jan
TI Semi-automatic derivation of RESTful choreographies from business
   process choreographies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Business process choreographies; RESTful choreographies; Natural
   language analysis
AB Enterprises reach out for collaborations with other organizations in order to offer complex products and services to the market. Such collaboration and coordination between different organizations, for a good share, is facilitated by information technology. The BPMN process choreography is a modeling language for specifying the exchange of information and services between different organizations at the business level. Recently, there is a surging use of the REST architectural style for the provisioning of services on the web, but few systematic engineering approach to design their collaboration. In this paper, we address this gap in a comprehensive way by defining a semi-automatic method for the derivation of RESTful choreographies from process choreographies. The method is based on natural language analysis techniques to derive interactions from the textual information in process choreographies. The proposed method is evaluated in terms of effectiveness resulting in the intervention of a web engineer in only about 10% of all generated RESTful interactions.
C1 [Nikaj, Adriatik] Univ Potsdam, Hasso Plattner Inst, Business Proc Technol Res Grp, Digital Engn Fac, Potsdam, Germany.
   [Weske, Mathias] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Mendling, Jan] WU Vienna, Inst Informat Business, Vienna, Austria.
C3 University of Potsdam; University of Potsdam
RP Nikaj, A (corresponding author), Univ Potsdam, Hasso Plattner Inst, Business Proc Technol Res Grp, Digital Engn Fac, Potsdam, Germany.
EM adriatik.nikaj@hpi.de; mathias.weske@hpi.de; jan.mendling@wu.ac.at
CR Alonso G., 2004, Web Services
   [Anonymous], EFFECTIVE COMMUNICAT
   [Anonymous], 2008, P KONVENS 2008
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 5 JORN CIENT TECN SE
   [Anonymous], 2009, ELECTRONICALLY
   Cohen William W., 2004, PROCS 2004 C EMPIRIC, P309
   Decker G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P296
   Denger C, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/SWSTE.2003.1245428
   Jordan D., 2007, Language, V11, P1
   Kavantzas N., 2004, WEB SERVICES CHOREOG
   Laitkorpi M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P173, DOI 10.1109/ICWS.2009.63
   Leopold Henrik, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P64, DOI 10.1007/978-3-642-31095-9_5
   Leopold H, 2014, IEEE T SOFTWARE ENG, V40, P818, DOI 10.1109/TSE.2014.2327044
   Leopold H, 2013, DECIS SUPPORT SYST, V56, P310, DOI 10.1016/j.dss.2013.06.014
   Leopold H, 2012, LECT NOTES COMPUT SC, V7481, P319, DOI 10.1007/978-3-642-32885-5_25
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Masse Mark., 2012, REST API Design Rulebook
   Medina-Mora R., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P281, DOI 10.1145/143457.143530
   Mendling Jan, 2008, International Journal of Business Process Integration and Management, V3, P96, DOI 10.1504/IJBPIM.2008.020973
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J., J ENTERP INF MANAG J, V21, P506
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Navigli R, 2012, ARTIF INTELL, V193, P217, DOI 10.1016/j.artint.2012.07.001
   Nikaj A., 2016, 16 INT C WEB ENG ICW
   Nikaj A, 2016, LECT NOTES BUS INF P, V248, P141, DOI 10.1007/978-3-319-39429-9_10
   Nikaj A, 2016, LECT NOTES COMPUT SC, V9936, P547, DOI 10.1007/978-3-319-46295-0_34
   Nikaj A, 2016, LECT NOTES COMPUT SC, V9586, P3, DOI 10.1007/978-3-662-50539-7_1
   OMG, 2013, Business process model and notation (BPMN 2.0)
   Omohundro Steve., 2014, AI MATTERS, V1, P19, DOI [10.1145/2685328.2685334, DOI 10.1145/2685328.2685334]
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Palma F., 2015, LECT NOTES COMPUTER
   Pautasso C, 2011, LECT NOTES BUS INF P, V95, P74
   Pautasso C, 2011, LECT NOTES COMPUT SC, V7084, P32, DOI 10.1007/978-3-642-25535-9_3
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Reiter E., 1997, Natural Language Engineering, V3, P57, DOI 10.1017/S1351324997001502
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Schreier S., 2011, Proceedings of the Second International Workshop on RESTful Design, P15, DOI [DOI 10.1145/1967428, 10.1145/1967428]
   Weber I, 2016, LECT NOTES COMPUT SC, V9850, P329, DOI 10.1007/978-3-319-45348-4_19
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Zhibiao Wu, 1994, 32nd Annual Meeting of the Association for Computational Linguistics. Proceedings of the Conference, P133
   ZIEMANN J, 2005, INT C MOD INF TECHN
NR 42
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1195
EP 1208
DI 10.1007/s10270-017-0653-2
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400022
DA 2024-07-18
ER

PT J
AU AbuHassan, A
   Alshayeb, M
AF AbuHassan, Amjad
   Alshayeb, Mohammad
TI A metrics suite for UML model stability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model stability; Software metrics; Metrics suite
ID DESIGN INSTABILITY; SOFTWARE
AB Software metrics have become an essential part of software development because of their importance in estimating cost, effort, and time during the development phase. Many metrics have been proposed to assess different software quality attributes, including stability. A number of software stability metrics have been proposed at the class, architecture, and system levels. However, these metrics typically target the source code. This paper proposes a software stability metrics suite at the model level for three UML diagrams: class, use case, and sequence. These three diagrams represent the most common diagrams in the three UML views: structural, functional, and behavioral. We introduce a client-master assessment approach to avoid measurement duplication. We also theoretically and empirically validate the proposed metrics suite. We also provide examples to demonstrate the use of the proposed metrics and their application as indicators of software stability.
C1 [AbuHassan, Amjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM g201205560@kfupm.edu.sa; alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099
FU King Abdul-Aziz City for Science and Technology (KACST) through the
   Science & Technology Unit at King Fahd University of Petroleum &
   Minerals (KFUPM) [12-INF3012-04]; National Science, Technology and
   Innovation Plan
FX The authors would like to acknowledge the support provided by King
   Abdul-Aziz City for Science and Technology (KACST) through the Science &
   Technology Unit at King Fahd University of Petroleum & Minerals (KFUPM)
   for funding this work through project no. 12-INF3012-04 as part of the
   National Science, Technology and Innovation Plan.
CR Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Alshayeb M, 2011, IET SOFTW, V5, P415, DOI 10.1049/iet-sen.2010.0050
   Alshayeb M, 2014, ARAB J SCI ENG, V39, P7865, DOI 10.1007/s13369-014-1372-4
   Alshayeb M, 2013, IET SOFTW, V7, P339, DOI 10.1049/iet-sen.2013.0030
   [Anonymous], FORMAL20110806 OMG
   [Anonymous], NCRERC1076
   [Anonymous], 2011, 250102011 ISOIEC
   [Anonymous], 1995, ISERN9503
   Aversano L, 2013, WORK CONF REVERSE EN, P417, DOI 10.1109/WCRE.2013.6671317
   Azar D, 2010, J COMPUT METHODS SCI, V10, pS39, DOI 10.3233/JCM-2010-0266
   Bansiya J., 2000, ACM Comput. Surv, V32, P1, DOI DOI 10.1145/351936.351954
   Berner S., 1999, P 2 INT C UN MOD LAN
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P43, DOI 10.1109/METRIC.1997.637164
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Elish MO, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P183, DOI 10.1109/SEW.2005.28
   Elish MO, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P193, DOI 10.1109/CSMR.2003.1192427
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   Farias K, 2014, SOFTW SYST MODEL, V13, P1473, DOI 10.1007/s10270-012-0308-2
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Galorath D. D, 2008, SOFTW TECH NEWS, V11, P23
   Grosser D, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/METRIC.2003.1232472
   Grosser D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P295, DOI 10.1109/ASE.2002.1115033
   Hassan Y., 2007, THESIS
   Hennicker R., 2001, Unified modeling language, ed, P1
   Jazayeri M, 2002, LECT NOTES COMPUT SC, V2361, P13
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   Li W, 2000, IEEE POTENTIALS, V18, P24, DOI 10.1109/45.807276
   Ma HH, 2004, LECT NOTES COMPUT SC, V3273, P12
   Martin R., 2006, Agile Principles, Patterns, and Practices in C#
   Mattsson M, 2000, J SOFTW MAINT-RES PR, V12, P79, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<79::AID-SMR204>3.0.CO;2-A
   Mattsson M, 1999, TOOLS, V29, P118, DOI 10.1109/TOOLS.1999.779005
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Molesini A, 2010, J SYST SOFTWARE, V83, P711, DOI 10.1016/j.jss.2009.05.022
   Olague HM, 2006, J SOFTW MAINT EVOL-R, V18, P237, DOI 10.1002/smr.332
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sethi K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P269, DOI 10.1109/WICSA.2009.5290817
   Srinivasan K.P., 2014, INT J SOFTWARE ENG A, V5, P87, DOI [10.5121/ijsea.2014.5606, DOI 10.5121/IJSEA.2014.5606]
   Tonu SubrinaAnjum., 2006, Software Maintenance and Reengineering, P10
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
NR 46
TC 11
Z9 13
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 557
EP 583
DI 10.1007/s10270-016-0573-6
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300023
DA 2024-07-18
ER

PT J
AU Tikhonova, U
AF Tikhonova, Ulyana
TI Reusable specification templates for defining dynamic semantics of DSLs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific language; Dynamic semantics; Specification template;
   Generic programming; Aspect-oriented programming
ID MODELS; REUSE
AB In the context of model-driven engineering, the dynamic (execution) semantics of domain-specific languages (DSLs) is usually not specified explicitly and stays (hard)coded in model transformations and code generation. This poses challenges such as learning, debugging, understanding, maintaining, and updating a DSL. Facing the lack of supporting tools for specifying the dynamic semantics of DSLs (or programming languages in general), we propose to specify the architecture and the detailed design of the software that implements the DSL, rather than requirements for the behavior expected from DSL programs. To compose such a specification, we use specification templates that capture software design solutions typical for the (application) domain of the DSL. As a result, on the one hand, our approach allows for an explicit and clear definition of the dynamic semantics of a DSL, supports separation of concerns and reuse of typical design solutions. On the other hand, we do not introduce (yet another) specification formalism, but we base our approach on an existing formalism and apply its extensive tool support for verification and validation to the dynamic semantics of a DSL.
C1 [Tikhonova, Ulyana] Tech Univ Eindhoven, POB 513, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Tikhonova, U (corresponding author), Tech Univ Eindhoven, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM ulyana.tihonova@gmail.com
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial JR, 2007, FUND INFORM, V77, P1
   [Anonymous], FOAL WORKSH FDN ASP
   [Anonymous], MODELING EVENT B SYS
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], 2015, LIPICS, DOI DOI 10.4230/LIPICS.RTA.2015.365
   [Anonymous], 2014, CONCRETE SEMANTICS
   [Anonymous], 2012, THESIS
   [Anonymous], PRENTICE HALL INT SE
   [Anonymous], P 5 WORKSH PROGR LAN
   [Anonymous], SOFTWARE LANGUAGE EN
   [Anonymous], P WORKSH MOD DRIV EN
   [Anonymous], 2010, 9 INT S FORMAL METHO
   [Anonymous], WORKSH TOOL BUILD FO
   [Anonymous], 2015, MET FAC MOF 2 0 QUER
   [Anonymous], THESIS
   [Anonymous], DESIGN PATTERN FORMA
   [Anonymous], UNOFFICIAL LEGO TECH
   [Anonymous], PROPER PROTOCOL
   [Anonymous], 2013, WORKSH MOD DRIV ENG
   [Anonymous], 1992, Semantics with applications: a formal introduction
   [Anonymous], 1988, INT S SYMB ALG COMP
   [Anonymous], 2011, P COMP COL WORKSH DS
   [Anonymous], P 10 WORKSH DOM SPEC
   [Anonymous], P 8 OOPSLA ACM SIGPL
   Berg Henning, 2013, System Analysis and Modeling: Theory and Practice. 7th International Workshop, SAM 2012. Revised Selected Papers, P160, DOI 10.1007/978-3-642-36757-1_10
   Blazy S, 2003, LECT NOTES COMPUT SC, V2651, P40
   Chen K, 2005, LECT NOTES COMPUT SC, V3748, P115
   Chen K, 2009, INT J SEMANT COMPUT, V3, P31, DOI 10.1142/S1793351X09000628
   Delaware B, 2013, ACM SIGPLAN NOTICES, V48, P319, DOI [10.1145/2500365.2500587, 10.1145/2544174.2500587]
   Delaware B, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P595
   Gamma Erich., 1994, DESIGN PATTERNS
   Hoare CAR., 1985, Communicating Sequential Processes
   Kellomäki P, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P481, DOI 10.1109/ICDCSW.2002.1030815
   Kellomäki P, 2000, LECT NOTES COMPUT SC, V1850, P277
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Ladenberger L, 2009, LECT NOTES COMPUT SC, V5825, P202, DOI 10.1007/978-3-642-04570-7_17
   Levin MY, 2003, J FUNCT PROGRAM, V13, P295, DOI 10.1017/S0956796802004550
   Meyers B., 2012, P 6 INT WORKSHOP MUL, P31, DOI 10.1145/2508443.2508449
   Mosses PD, 2004, J LOGIC ALGEBR PROGR, V60-1, P195, DOI 10.1016/j.jlap.2004.03.008
   Mosses PD, 1996, LECT NOTES COMPUT SC, V1113, P37
   Cardona PAN, 2015, CUAD ACT, P154
   Pedro L, 2009, LECT NOTES COMPUT SC, V5611, P889, DOI 10.1007/978-3-642-02577-8_97
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Scheidgen M, 2007, LECT NOTES COMPUT SC, V4530, P157
   Silva R, 2009, LECT NOTES COMPUT SC, V5885, P466, DOI 10.1007/978-3-642-10373-5_24
   Hoang TS, 2013, SOFTW SYST MODEL, V12, P229, DOI 10.1007/s10270-010-0183-7
   Tikhonova U, 2016, LECT NOTES COMPUT SC, V9946, P179, DOI 10.1007/978-3-319-50230-4_13
   Tikhonova U, 2015, 2015 10TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), VOL 1, P401
   van Amstel M., 2010, P JOINT ERCIM WORKSH, P48
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
NR 56
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 691
EP 720
DI 10.1007/s10270-017-0590-0
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300027
OA hybrid
DA 2024-07-18
ER

PT J
AU Chatzikonstantinou, G
   Kontogiannis, K
AF Chatzikonstantinou, George
   Kontogiannis, Kostas
TI Efficient parallel reasoning on fuzzy goal models for run time
   requirements verification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Goal models reasoning; Fuzzy reasoning; Parallel reasoning; Software
   systems; Verification
ID LOGIC
AB As software applications become highly interconnected in dynamically provisioned platforms, they form the so-called systems-of-systems. Therefore, a key issue that arises in such environments is whether specific requirements are violated, when these applications interact in new unforeseen ways as new resources or system components are dynamically provisioned. Such environments require the continuous use of frameworks for assessing compliance against specific mission critical system requirements. Such frameworks should be able to (a) handle large requirements models, (b) assess system compliance repeatedly and frequently using events from possibly high velocity and high frequency data streams, and (c) use models that can reflect the vagueness that inherently exists in big data event collection and in modeling dependencies between components of complex and dynamically re-configured systems. In this paper, we introduce a framework for run time reasoning over medium and large-scale fuzzy goal models, and we propose a process which allows for the parallel evaluation of such models. The approach has been evaluated for time and space performance on large goal models, exhibiting that in a simulation environment, the parallel reasoning process offers significant performance improvement over a sequential one.
C1 [Chatzikonstantinou, George] Natl Tech Univ Athens, Dept Elect & Comp Engn, Athens, Greece.
   [Kontogiannis, Kostas] Western Univ, Dept Comp Sci, London, ON, Canada.
C3 National Technical University of Athens; Western University (University
   of Western Ontario)
RP Chatzikonstantinou, G (corresponding author), Natl Tech Univ Athens, Dept Elect & Comp Engn, Athens, Greece.
EM gchatzik@cslab.ece.ntua.gr; kostas@csd.uwo.ca
FU European Union (European Social Fund ESF); Greek national funds through
   the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF)-Research Funding Program:
   Heracleitus II
FX This research has been co-financed by the European Union (European
   Social Fund ESF) and Greek national funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF)-Research Funding Program: Heracleitus II.
   Investing in knowledge society through the European Social Fund. We
   would also like to thank Dr. Jennifer Horkoff for providing us with a
   set of real-life requirement's models.
CR Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], IEC6113172000
   [Anonymous], SCHEMA INDEPENDENT R
   [Anonymous], TASK SPECIFICATION R
   [Anonymous], 2010, ISTAR
   [Anonymous], 2010, SYSTEMS OF SYSTEMS
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], ULTRA LARGE SCALE SY
   [Anonymous], 2012, P 9 INT S FORM ASP C
   [Anonymous], 2014, PROC RCIS 14
   [Anonymous], FUZZY CAUSAL PROBABI
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   Chatzikonstantinou George, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P546, DOI 10.1007/978-3-642-38709-8_35
   Chatzikonstantinou G, 2016, INFORM SOFTWARE TECH, V75, P105, DOI 10.1016/j.infsof.2016.04.005
   Chieu TC, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ICEBE.2009.45
   Chopra AmitK., 2010, P 9 INT C AUTONOMOUS, V1, P457
   Cingolani P, 2012, IEEE INT CONF FUZZY
   Dalpiaz Fabiano., 2013, RES CHALLENGES INFOR, P1, DOI DOI 10.1109/RCIS.2013.6577674
   Falcone Y, 2011, LECT NOTES COMPUT SC, V7041, P204, DOI 10.1007/978-3-642-24690-6_15
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   HOMAIFAR A, 1995, IEEE T FUZZY SYST, V3, P129, DOI 10.1109/91.388168
   Horkoff J., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P675
   Horkoff J, 2015, INT J INF SYST MODEL, V6, P1, DOI 10.4018/IJISMD.2015040101
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Ingolfo S, 2011, LECT NOTES COMPUT SC, V6998, P47, DOI 10.1007/978-3-642-24606-7_5
   Jin Shao, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P313, DOI 10.1109/CLOUD.2010.31
   Jing Bi, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P370, DOI 10.1109/CLOUD.2010.53
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Liaskos S., 2013, iStar, P37
   Liaskos S, 2012, INFORM SYST, V37, P767, DOI 10.1016/j.is.2012.05.006
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nekvi Md Rashed I., 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629432
   PASSINO K.M. S. YURKOVICH., 1997, FUZZY CONTROL, V1st
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 2009, LECT NOTES COMPUT SC, V5600, P380, DOI 10.1007/978-3-642-02463-4_20
   Wnuk Krzysztof, 2012, Advances in Conceptual Modeling. Proceedings ER 2012 Workshops: CMS, ECDM-NoCoDA, MoDIC, MORE-BI, RIGiM, SeCoGIS, WISM, P141, DOI 10.1007/978-3-642-33999-8_17
   Wnuk K, 2009, LECT NOTES COMPUT SC, V5512, P118, DOI 10.1007/978-3-642-02050-6_10
   ZADEH LA, 1995, TECHNOMETRICS, V37, P271, DOI 10.2307/1269908
NR 48
TC 4
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1339
EP 1364
DI 10.1007/s10270-016-0562-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000012
DA 2024-07-18
ER

PT J
AU Albert, E
   Bubel, R
   Genaim, S
   Hähnle, R
   Puebla, G
   Román-Díez, G
AF Albert, Elvira
   Bubel, Richard
   Genaim, Samir
   Haehnle, Reiner
   Puebla, German
   Roman-Diez, Guillermo
TI A formal verification framework for static analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Cost analysis; Closed-form upper bounds; Resource analysis; Resource
   guarantees
ID VERIFIER; TERMINATION
AB Static analysis tools, such as resource analyzers, give useful information on software systems, especially in real-time and safety-critical applications. Therefore, the question of the reliability of the obtained results is highly important. State-of-the-art static analyzers typically combine a range of complex techniques, make use of external tools, and evolve quickly. To formally verify such systems is not a realistic option. In this work, we propose a different approach whereby, instead of the tools, we formally verify the results of the tools. The central idea of such a formal verification framework for static analysis is the method-wise translation of the information about a program gathered during its static analysis into specification contracts that contain enough information for them to be verified automatically. We instantiate this framework with costa, a state-of-the-art static analysis system for sequential Java programs, for producing resource guarantees and KeY, a state-of-the-art verification tool, for formally verifying the correctness of such resource guarantees. Resource guarantees allow to be certain that programs will run within the indicated amount of resources, which may refer to memory consumption, number of instructions executed, etc. Our results show that the proposed tool cooperation can be used for automatically producing verified resource guarantees.
C1 [Albert, Elvira; Genaim, Samir] Univ Complutense Madrid, DSIC, E-28040 Madrid, Spain.
   [Bubel, Richard; Haehnle, Reiner] Tech Univ Darmstadt, CSD, D-64289 Darmstadt, Germany.
   [Puebla, German; Roman-Diez, Guillermo] Tech Univ Madrid, DLSIIS, Madrid 28660, Spain.
C3 Complutense University of Madrid; Technical University of Darmstadt;
   Universidad Politecnica de Madrid
RP Román-Díez, G (corresponding author), Tech Univ Madrid, DLSIIS, Madrid 28660, Spain.
EM elvira@sip.ucm.es; bubel@cs.tu-darmstadt.de; samir.genaim@fdi.ucm.es;
   haehnle@cs.tu-darmstadt.de; german@fi.upm.es; groman@fi.upm.es
RI Roman-Diez, Guillermo/AAS-4445-2020
OI Hahnle, Reiner/0000-0001-8000-7613; Roman-Diez,
   Guillermo/0000-0002-5427-8855; Genaim, Samir/0000-0002-7176-1881
CR Albert E., 2014, TECHNICAL REPORT
   ALBERT E, 2007, LNCS, V4421
   Albert E., 2011, P 20 ACM SIGPLAN WOR, P73
   Albert E, 2008, LECT NOTES COMPUT SC, V5051, P2, DOI 10.1007/978-3-540-68863-1_2
   Albert E, 2012, THEOR PRACT LOG PROG, V12, P283, DOI 10.1017/S1471068410000487
   Albert E, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499943
   Albert E, 2012, LECT NOTES COMPUT SC, V7212, P130, DOI 10.1007/978-3-642-28872-2_10
   Albert E, 2012, THEOR COMPUT SCI, V413, P142, DOI 10.1016/j.tcs.2011.07.009
   Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Albert E, 2010, ACM SIGPLAN NOTICES, V45, P121
   Albert E, 2009, LECT NOTES COMPUT SC, V5850, P370, DOI 10.1007/978-3-642-05089-3_24
   Alberta E, 2014, SCI COMPUT PROGRAM, V92, P2, DOI 10.1016/j.scico.2013.04.006
   Ball T, 2010, LECT NOTES COMPUT SC, V6174, P119, DOI 10.1007/978-3-642-14295-6_11
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Beckert B., 2006, LNCS, V4334
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Blazy S., 2013, Verified software: Theories, tools, experiments, P281, DOI DOI 10.1007/978-3-642-54108-7_15
   Brockschmidt Marc, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P413, DOI 10.1007/978-3-642-39799-8_28
   Bubel R, 2008, ELECTRON NOTES THEOR, V199, P107, DOI 10.1016/j.entcs.2007.11.015
   Crary K., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P184, DOI 10.1145/325694.325716
   de Dios Javier, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P184, DOI 10.1007/978-3-642-21437-0_16
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Hoffmann J, 2010, LECT NOTES COMPUT SC, V6012, P287, DOI 10.1007/978-3-642-11957-6_16
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   LINDHOLM T, 1996, JAVA VIRTUAL MACHINE
   Mauborgne L, 2005, LECT NOTES COMPUT SC, V3444, P5
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Secci S, 2005, LECT NOTES COMPUT SC, V3672, P320
   Smans J, 2008, LECT NOTES COMPUT SC, V4961, P261, DOI 10.1007/978-3-540-78743-3_19
   Spoto F., 2006, P EAAI 06
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
   Weiss B., 2011, THESIS
NR 36
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 987
EP 1012
DI 10.1007/s10270-015-0476-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800005
DA 2024-07-18
ER

PT J
AU Lohrmann, M
   Reichert, M
AF Lohrmann, Matthias
   Reichert, Manfred
TI Effective application of process improvement patterns to business
   processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Business process modeling; Business process design; Business process
   optimization; Business process intelligence; Business process quality
ID INFORMATION-SYSTEMS; EMPIRICAL-RESEARCH; SCIENCE; DESIGN
AB Improving the operational effectiveness and efficiency of processes is a fundamental task of business process management (BPM). There exist many proposals of process improvement patterns (PIPs) as practices that aim at supporting this goal. Selecting and implementing relevant PIPs are therefore an important prerequisite for establishing process-aware information systems in enterprises. Nevertheless, there is still a gap regarding the validation of PIPs with respect to their actual business value for a specific application scenario before implementation investments are incurred. Based on empirical research as well as experiences from BPM projects, this paper proposes a method to tackle this challenge. Our approach toward the assessment of process improvement patterns considers real-world constraints such as the role of senior stakeholders or the cost of adapting available IT systems. In addition, it outlines process improvement potentials that arise from the information technology infrastructure available to organizations, particularly regarding the combination of enterprise resource planning with business process intelligence. Our approach is illustrated along a real-world business process from human resource management. The latter covers a transactional volume of about 29,000 process instances over a period of 1 year. Overall, our approach enables both practitioners and researchers to reasonably assess PIPs before taking any process implementation decision.
C1 [Lohrmann, Matthias; Reichert, Manfred] Univ Ulm, Databases & Informat Syst Inst, D-89069 Ulm, Germany.
C3 Ulm University
RP Lohrmann, M (corresponding author), Univ Ulm, Databases & Informat Syst Inst, D-89069 Ulm, Germany.
EM mlohrmann@kpmg.com; manfred.reichert@uni-ulm.de
RI Reichert, Manfred U/ABB-4469-2020
CR Adam EE, 1997, INT J OPER PROD MAN, V17, P842, DOI 10.1108/01443579710171190
   [Anonymous], 2010, MODELLIERUNG
   [Anonymous], 1989, BENCHMARKING SEARCH
   [Anonymous], P 20 INT C COOP INF
   Balzert H., 2009, Lehrbuch der Softwaretechnik
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   Cao G., 2001, BUS PROCESS MANAG J, V7, P332, DOI 10.1108/EUM0000000005732
   Celonis Gmb H, CEL DISC OV
   Dale B.G., 2007, Managing Quality
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DAVENPORT TH, 1990, SLOAN MANAGE REV, V31, P11
   European Foundation for Quality Management, 2012, OV EFQM EXC MOD
   Fisher M., 1999, WORK STUDY, V48, P264, DOI [10.1108/00438029910294153, DOI 10.1108/00438029910294153]
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Gnther CW., 2012, BPM, V940, P40
   Gregor S, 2006, MIS QUART, V30, P611
   Grigori D, 2004, COMPUT IND, V53, P321, DOI 10.1016/j.compind.2003.10.007
   Hammer M., 1994, REENGINEERING CORPOR
   Heravizadeh M, 2009, LECT NOTES BUS INF P, V17, P80
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Ittner CD, 2001, J ACCOUNT ECON, V32, P349, DOI 10.1016/S0165-4101(01)00026-X
   Jedlitschka A., 2007, ADV TOPICS EMPIRICAL
   Jenkins A.M., 1985, RES METHODS INFORM S, P103
   Knuplesch D, 2013, LECT NOTES COMPUT SC, V8217, P106, DOI 10.1007/978-3-642-41924-9_10
   Li C, 2011, DATA KNOWL ENG, V70, P409, DOI 10.1016/j.datak.2011.01.005
   Lohrmann M., 2013, FINANCE BUNDLING FIN, P225
   Lohrmann M, 2013, LECT NOTES BUS INF P, V147, P230
   Lohrmann M, 2013, STUD COMPUT INTELL, V444, P41
   Lohrmann N, 2012, LECT NOTES BUS INF P, V104, P106
   Ly L.T., 2010, LNCS, V6412, P332
   Mans R., 2013, EUR C INF SYST
   Mansar SL, 2007, BUS PROCESS MANAG J, V13, P193, DOI 10.1108/14637150710740455
   Mansar SL, 2009, EXPERT SYST APPL, V36, P3248, DOI 10.1016/j.eswa.2008.01.008
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Muehlen M.zur., 2008, P 41 ANN HAWAII INT, P372, DOI DOI 10.1109/HICSS.2008.388
   Mutschler B, 2008, IEEE T SYST MAN CY C, V38, P280, DOI 10.1109/TSMCC.2008.919197
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   OMG, 2011, BUS PROC MOD NOT BPM
   Pyzdek T., 2009, The Six Sigma Handbook, V3rd
   Reichert M., 2012, ENABLING FELXIBILITY
   Reijers HA, 2007, INT J COOP INF SYST, V16, P155, DOI 10.1142/S0218843007001615
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Reijiers HA, 2005, OMEGA-INT J MANAGE S, V33, P283, DOI 10.1016/j.omega.2004.04.012
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Soffer P, 2005, BUS PROCESS MANAG J, V11, P663, DOI 10.1108/14637150510630837
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2001, DECIS SUPPORT SYST, V30, P451, DOI 10.1016/S0167-9236(00)00136-6
   van der Geer S, 2010, J DTSCH DERMATOL GES, V8, P15, DOI [10.1111/j.1610-0387.2009.07121_supp.x, 10.1111/j.1610-0387.2009.07121.x]
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Vanderfeesten I, 2008, COMPUT IND, V59, P420, DOI 10.1016/j.compind.2007.12.007
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Wieringa R, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P361, DOI 10.1109/RE.2009.17
   Yu E. S. K., 1996, International Journal of Intelligent Systems in Accounting, Finance and Management, V5, P1, DOI 10.1002/(SICI)1099-1174(199603)5:1<1::AID-ISAF99>3.0.CO;2-C
NR 58
TC 15
Z9 17
U1 3
U2 45
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 353
EP 375
DI 10.1007/s10270-014-0443-z
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800005
OA hybrid
DA 2024-07-18
ER

PT J
AU Sun, Y
   Gray, J
   White, J
AF Sun, Yu
   Gray, Jeff
   White, Jules
TI A demonstration-based model transformation approach to automate model
   scalability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model evolution; Model scalability; Model transformation by
   demonstration
AB An important aspect during software development is the ability to evolve and scale software models in order to handle design forces, such as enlarging and upgrading system features, or allocating more resources to handle additional users. Model scalability is the ability to refactor a base model, by adding or replicating the base model elements, connections or substructures, in order to build a larger and more complex model to satisfy new design requirements. Although a number of modeling tools have been developed to create and edit models for different purposes, mechanisms to scale models have not been well supported. In most situations, models are manually scaled using the basic point-and-click editing operations provided by the modeling environment. Manual model scaling is often tedious and error-prone, especially when the model to be scaled has hundreds or thousands of elements and the scaling process involves entirely manual operations. Although model scaling tasks can be automated by using model transformation languages, writing model transformation rules requires learning a model transformation language, as well as possessing a great deal of knowledge about the metamodel. Model transformation languages and metamodel concepts are often difficult for domain experts to understand. This requirement to learn a complex model transformation language exerts a negative influence on the usage of models by domain experts in software development. For instance, domain experts may be prevented from contributing to model scalability tasks from which they have significant domain experience. This paper presents a demonstration-based approach to automate model scaling. Instead of writing model transformation rules explicitly, users demonstrate how to scale models by directly editing the concrete model instances and simulate the model replication processes. By recording a user's operations, an inference engine analyzes the user's demonstration and generalizes model transformation patterns automatically, which can be reused to scale up other model instances. Using this approach, users are able to automate scaling tasks without learning a complex model transformation language. In addition, because the demonstration is performed on model instances, users are isolated from the underlying abstract metamodel definitions.
C1 [Sun, Yu] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
   [Gray, Jeff] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [White, Jules] Virginia Tech, Dept Elect & Comp Engn, Blacksburg, VA USA.
C3 University of Alabama System; University of Alabama Birmingham;
   University of Alabama System; University of Alabama Tuscaloosa; Virginia
   Polytechnic Institute & State University
RP Sun, Y (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
EM yu.sun.cs@gmail.com; gray@cs.ua.edu; julesw@vt.edu
OI Gray, Jeff/0000-0003-0082-6753
FU NSF CAREER Award [CCF-1052616]
FX This work was supported by NSF CAREER Award CCF-1052616.
CR Agrawal Aditya., 2003, Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), P8
   [Anonymous], 1994, Communications in Reliability, Maintainability and Serviceability
   Balasubramanian D, 2006, ELECT COMMUN EUR ASS, V1, P8
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Bondi A. B., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P195, DOI 10.1145/350391.350432
   Brosch P., 2009, LNCS, V5795, P271
   Brosch P., 2009, OOPSLA COMPANION, P791
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Edwards G, 2004, LECT NOTES COMPUT SC, V3286, P337
   Gray J, 2006, COMPUTER, V39, P51, DOI 10.1109/MC.2006.45
   Gray J, 2005, LECT NOTES COMPUT SC, V3713, P295, DOI 10.1007/11557432_22
   Gray J, 2004, LECT NOTES COMPUT SC, V3286, P361
   Gray J., 2007, HDB DYNAMIC SYSTEM M
   Hayes B, 2008, COMMUN ACM, V51, P9, DOI 10.1145/1364782.1364789
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kang Kyo C, 1990, Technical Report
   Kappel G, 2006, LECT NOTES COMPUT SC, V4199, P528
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Lin YH, 2008, SOFTWARE PRACT EXPER, V38, P1475, DOI 10.1002/spe.876
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Object Management Group, 2012, OBJ CONSTR LANG SPEC
   OMG, 2005, AD20050701 OMG
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Strommer M, 2008, LECT NOTES BUS INF, V11, P372
   Sun Y., 2009, MODEL DRIVEN ANAL SO
   Sun Y., 2013, LNCS, V7949, P86
   Sun Y., 2012, LNCS, V7590
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Varró D, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P978, DOI 10.1145/1244002.1244217
   White J, 2007, IEEE INT ENTERP DIST, P301, DOI 10.1109/EDOC.2007.22
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
NR 35
TC 3
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1245
EP 1271
DI 10.1007/s10270-013-0374-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200010
DA 2024-07-18
ER

PT J
AU Branco, MC
   Xiong, YF
   Czarnecki, K
   Küster, J
   Völzer, H
AF Branco, Moises Castelo
   Xiong, Yingfei
   Czarnecki, Krzysztof
   Kuester, Jochen
   Voelzer, Hagen
TI A case study on consistency management of business and IT process models
   in banking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business processes; Consistency management; Process refinement patterns;
   Empirical study
ID SIMILARITY; SOA
AB Organizations that adopt process modeling often maintain several co-existing models of the same business process. These models target different abstraction levels and stakeholder perspectives. Maintaining consistency among these models has become a major challenge for such organizations. Although several academic works have discussed this challenge, little empirical investigation exists on how people perform process model consistency management in practice. This paper aims to address this lack by presenting an in-depth empirical study of a business-driven engineering process deployed at a large company in the banking sector. We analyzed more than 70 business process models developed by the company, including their change history, with over 1,000 change requests. We also interviewed 9 business and IT practitioners and surveyed 23 such practitioners to understand concrete difficulties in consistency management, the rationales for the specification-to-implementation refinements found in the models, strategies that the practitioners use to detect and fix inconsistencies, and how tools could help with these tasks. Our contribution is a set of eight empirical findings, some of which confirm or contradict previous works on process model consistency management found in the literature. The findings provide empirical evidence of (1) how business process models are created and maintained, including a set of recurrent patterns used to refine business-level process specifications into IT-level models; (2) what types of inconsistencies occur; how they are introduced; and what problems they cause; and (3) what stakeholders expect from tools to support consistency management.
C1 [Branco, Moises Castelo; Czarnecki, Krzysztof] Univ Waterloo, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
   [Xiong, Yingfei] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Xiong, Yingfei] Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
   [Kuester, Jochen; Voelzer, Hagen] IBM Res Zurich, Ruschlikon, Switzerland.
C3 University of Waterloo; Peking University; Peking University;
   International Business Machines (IBM)
RP Branco, MC (corresponding author), Univ Waterloo, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
EM mcbranco@gsd.uwaterloo.ca; y6xiong@gsd.uwaterloo.ca;
   kczarnec@gsd.uwaterloo.ca
OI Xiong, Yingfei/0000-0001-8991-747X
FU IBM PhD CAS Fellow Scholarship; Ontario Research Fund's Research
   Excellence Project on Model-Integrated Software Service Engineering;
   National Natural Science Foundation of China [61202071, 61121063]
FX We would like to thank the Bank of the Northeast of Brazil (Banco do
   Nordeste, BNB) for granting us full access to people and artifacts,
   fundamental for conducting this study. This work was partially supported
   by an IBM PhD CAS Fellow Scholarship, the Ontario Research Fund's
   Research Excellence Project on Model-Integrated Software Service
   Engineering, and the National Natural Science Foundation of China under
   Grant No. 61202071 and No. 61121063.
CR Amelunxen C, 2008, LECT NOTES COMPUT SC, V5088, P313
   Bieberstein N.B., 2005, SERVICE ORIENTED ARC
   Bobrik R, 2007, LECT NOTES COMPUT SC, V4714, P88
   Branco M.C., 2012, SER MODELS 2012
   Buchwald S., 2011, SERVICE LIFE CYCLE T, P124
   Chen H.-M., 2008, Proceedings of the 41st Annual Hawaii International Conference on System Sciences (HICSS 2008)Presented at the 41st Annual Hawaii International Conference on System Sciences (HICSS 2008), Waikoloa, HI, USA, P114, DOI [10.1109/ HICSS.2008.462, DOI 10.1109/HICSS.2008.462]
   Davenport T.H., 1993, PROCESS INNOVATION R
   Decker G., 2005, P 1 INT WORKSH DES S, P17
   Delgado A., 2010, Journal of Systems Integration, V1, P45
   Dijkman R., 2007, P 11 IEEE INT ENT DI
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Dijkman RM, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P187
   Diskin Z., 2010, INT WORKSHOP MODEL D, P42
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Emmerich W, 1999, IEEE T SOFTWARE ENG, V25, P836, DOI 10.1109/32.824413
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Finkelstein A, 1996, SOFTWARE ENG J, V11, P2, DOI 10.1049/sej.1996.0001
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gerth C, 2010, LECT NOTES COMPUT SC, V6395, P93
   Hegedus A., 2011, P IEEE S VIS LANG HU
   HENKEL M, 2004, P 2 INT C SERV OR CO, P21
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   International Organization for Standardization, FIN T CARD OR MES  1
   Koehler J, 2008, ELECTRON NOTES THEOR, V211, P5, DOI 10.1016/j.entcs.2008.04.025
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Kuster J., 2012, SUPPORTING DIFFERENT
   Kuster J., 2004, THESIS U PADERBORN
   Kuster J.M., 2004, ELECTRON NOTES THEOR, V109, P57, DOI DOI 10.1016/J.ENTCS.2004.02.056
   KUSTER JM, 2007, MODELS, V4735, P136
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Miers Derek., 2008, BPMN Modeling and Reference Guide
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   *OASIS, WEB SERV BUS PROC EX
   *OBJ MAN GROUP, BUS PROC MOD NOT BPM
   Pinna Puissant J., 2010, Proceedings of the 3rd Workshop on Living with Inconsistencies in Software Development, P8
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Rolland C., 2000, Requirements Engineering, V5, P180, DOI 10.1007/PL00010350
   Soffer P, 2005, J DATABASE MANAGE, V16, P21, DOI 10.4018/jdm.2005070102
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Tran H, 2008, COMM COM INF SC, V8, P55
   van Dongen B, 2008, LECT NOTES COMPUT SC, V5074, P450
   Vanhatalo J, 2008, LECT NOTES COMPUT SC, V5240, P100, DOI 10.1007/978-3-540-85758-7_10
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Weidlich M., 2010, IEEE T SOFTW ENG PRE, V99
   Weidlich M., 2008, VERTICAL ALIGNMENT P
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6336, P78, DOI 10.1007/978-3-642-15618-2_8
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   Weidlich M, 2009, LECT NOTES BUS INF P, V29, P71
   Werth D, 2007, LECT NOTES COMPUT SC, V4652, P3
   XING Z, 2010, P IEEE ACM INT C AUT, P135, DOI DOI 10.1145/1858996.1859020
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Zapf M, 2000, LECT NOTES COMPUT SC, V1806, P83
   Zerguini L., 2004, T SOC DESIGN PROCESS, V8, P65
NR 56
TC 9
Z9 12
U1 1
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 913
EP 940
DI 10.1007/s10270-013-0318-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600002
DA 2024-07-18
ER

PT J
AU Yskout, K
   Scandariato, R
   Joosen, W
AF Yskout, Koen
   Scandariato, Riccardo
   Joosen, Wouter
TI Change patterns Co-evolving requirements and architecture
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Co-evolution; Model-driven engineering; Security requirements; Software
   architecture
ID SECURITY; EVOLUTION
AB Change, such as in the requirements or the assumptions of a system, has a far-reaching impact across several software artifacts. This paper argues that patterns of co-evolution (or change patterns) can be observed between intertwined pairs of artifacts, like the requirements specification and the architectural design. The paper introduces change patterns as a precise framework to systematically capture and handle change. The approach is based on model-driven engineering concepts and is accompanied by a tool-supported process. Changing trust assumptions are presented as an example of security-related evolution, and are used to illustrate the approach. The approach is empirically validated by means of a controlled experiment involving 12 subjects, and a case study involving an industrial partner.
C1 [Yskout, Koen; Scandariato, Riccardo; Joosen, Wouter] Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
C3 KU Leuven
RP Yskout, K (corresponding author), Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
EM koen.yskout@cs.kuleuven.be
OI Yskout, Koen/0000-0002-9192-9100
FU Interuniversity Attraction Poles Programme Belgian State, Belgian
   Science Policy; Research Fund KU Leuven; EU FP7 project SecureChange; EU
   FP7 project NESSoS
FX The authors would like to express their gratitude towards the anonymous
   reviewers for their valuable comments and suggestions. This research is
   partially funded by the Interuniversity Attraction Poles Programme
   Belgian State, Belgian Science Policy, by the Research Fund KU Leuven,
   and by the EU FP7 projects SecureChange and NESSoS.
CR Barais O., 2008, SOFTWARE EVOLUTION, P262
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Chung L., 1996, Requirements Engineering, V1, P238, DOI 10.1007/BF01587102
   Compagna L, 2009, ARTIF INTELL LAW, V17, P1, DOI 10.1007/s10506-008-9067-3
   Côté I, 2007, INT J COOP INF SYST, V16, P341, DOI 10.1142/S0218843007001688
   Ecklund EF, 1996, ACM SIGPLAN NOTICES, V31, P342, DOI 10.1145/236338.236372
   Ernst NA, 2009, LECT NOTES BUS INF P, V14, P186
   European Commission, 7 FRAM PROGR FP7 ICT
   Garlan D, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P131, DOI 10.1109/WICSA.2009.5290799
   Garlan D, 2009, PROC INT CONF SOFTW, P591, DOI 10.1109/ICSE.2009.5070563
   Giorgini P, 2005, LECT NOTES COMPUT SC, V3655, P237
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Han J, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/STEP.1997.615479
   Heyman T, 2011, LECT NOTES COMPUT SC, V6542, P167, DOI 10.1007/978-3-642-19125-1_13
   KINDLER E, 2007, TRRI07284 U PAD DEP
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Nhlabatsi A., 2009, INT J SECURE SOFTW E, V1, P54
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Object Management Group, 2011, MET FAC MOF 2 0 QUER
   Object Management Group, 2010, UN MOD LANG SUP VERS
   Object Management Group, 2006, MET FAC MOF COR SPEC
   Ráth I, 2009, LECT NOTES COMPUT SC, V5795, P342, DOI 10.1007/978-3-642-04425-0_26
   Runeson P, 2003, INT C EMP ASS SOFTW
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tamzalit Dalila, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P69, DOI 10.1109/ECBS.2010.15
   The OSGi Alliance, OSGI DYN MOD SYST JA
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Yskout K., 2012, COMMUNICATIONS COMPU, V255
NR 33
TC 3
Z9 7
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 625
EP 648
DI 10.1007/s10270-012-0276-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300010
DA 2024-07-18
ER

PT J
AU Sen, S
   Moha, N
   Mahé, V
   Barais, O
   Baudry, B
   Jézéquel, JM
AF Sen, Sagar
   Moha, Naouel
   Mahe, Vincent
   Barais, Olivier
   Baudry, Benoit
   Jezequel, Jean-Marc
TI Reusable model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Adaptation; Aspect weaving; Genericity; Metamodel pruning; Model typing;
   Model transformation; Refactoring
AB Model transformations written for an input metamodel may often apply to other metamodels that share similar concepts. For example, a transformation written to refactor Java models can be applicable to refactoring UML class diagrams as both languages share concepts such as classes, methods, attributes, and inheritance. Deriving motivation from this example, we present an approach to make model transformations reusable such that they function correctly across several similar metamodels. Our approach relies on these principal steps: (1) We analyze a transformation to obtain an effective subset of used concepts. We prune the input metamodel of the transformation to obtain an effective input metamodel containing the effective subset. The effective input metamodel represents the true input domain of transformation. (2) We adapt a target input metamodel by weaving it with aspects such as properties derived from the effective input metamodel. This adaptation makes the target metamodel a subtype of the effective input metamodel. The subtype property ensures that the transformation can process models conforming to the target input metamodel without any change in the transformation itself. We validate our approach by adapting well known refactoring transformations (Encapsulate Field, Move Method, and Pull Up Method) written for an in-house domain-specific modeling language (DSML) to three different industry standard metamodels (Java, MOF, and UML).
C1 [Sen, Sagar; Moha, Naouel; Mahe, Vincent; Barais, Olivier; Baudry, Benoit; Jezequel, Jean-Marc] Univ Rennes 1, INRIA Rennes, Bretagne Atlantique IRISA, Triskell Team, F-35042 Rennes, France.
C3 Universite de Rennes
RP Sen, S (corresponding author), Univ Rennes 1, INRIA Rennes, Bretagne Atlantique IRISA, Triskell Team, Campus Beaulieu, F-35042 Rennes, France.
EM ssen@irisa.fr; moha@irisa.fr; vmahe@irisa.fr; barais@irisa.fr;
   bbaudry@irisa.fr; jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; Barais, Olivier/KIH-2583-2024; Sen,
   Sagar/H-3126-2017
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Barais,
   Olivier/0000-0002-4551-8562; Sen, Sagar/0000-0002-5784-7355
CR Amelunxen C, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P211, DOI 10.1109/VLHCC.2008.4639088
   [Anonymous], 2002, SIGPLAN WORKSHOP RUL, DOI [10.1145/570186.570188, DOI 10.1145/570186.570188]
   [Anonymous], 1999, ENTCS
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Biggerstaff TedJ., 1989, Software reusability: vol. 1, V1
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Blanc X., 2005, ACM IEEE 8 INT C MOD, P661
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   Engels G, 2005, LECT NOTES COMPUT SC, V3393, P38
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gibbons J., 2003, P IFIP TC2 WG2 1 WOR
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   HECKEL R, 1999, HDB GRAPH GRAMMARS C, V2, P639
   Hoffman B., 2008, 4 INT WORKSH GRAPH B
   Janssens D., 2003, ELECT NOTES THEORET, V72
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2005, 27 INT C SOFTW ENG I, P49
   Lahire P, 2007, LECT NOTES COMPUT SC, V4735, P498
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Moha N., 2009, ACM IEEE 12 INT C MO
   Moha N., 2010, INT J SOFTW IN PRESS
   Muller P.A., 2005, ACM IEEE 8 INT C MOD, P264
   Munch M., 2003, THESIS RWTH AACHEN A
   Odersky M., 2004, IC200464 EPFL LAUS
   Oliveira BCDS, 2008, WGP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN WORKSHOP ON GENERIC PROGRAMMING, P25
   OMG, 2007, FORMAL20071104 OMG
   *OMG, 2006, FORMAL060101 OMG
   OMG, 2003, AD030107 OMG
   OMG, 2009, PTC090706 OMG
   Ramos R, 2007, LECT NOTES COMPUT SC, V4735, P121
   Sen S., 2009, ACM IEEE 12 INT C MO
   Steel J., 2007, THESIS U RENNES 1, P1
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
NR 34
TC 18
Z9 19
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 111
EP 125
DI 10.1007/s10270-010-0181-9
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500009
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Zoughbi, G
   Briand, L
   Labiche, Y
AF Zoughbi, Gregory
   Briand, Lionel
   Labiche, Yvan
TI Modeling safety and airworthiness (RTCA DO-178B) information: conceptual
   model and UML profile
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; UML profile; Conceptual model; Meta-model; Airworthiness; RTCA
   DO-178B; Safety; Safety-critical; Safety assessment; Certification
AB Several safety-related standards exist for developing and certifying safety-critical systems. System safety assessments are common practice and system certification according to a standard requires submitting relevant system safety information to appropriate authorities. The RTCA DO-178B standard is a software quality assurance, safety-related standard for the development of software aspects of aerospace systems. This research introduces an approach to improve communication and collaboration among safety engineers, software engineers, and certification authorities in the context of RTCA DO-178B. This is achieved by utilizing a Unified Modeling Language (UML) profile that allows software engineers to model safety-related concepts and properties in UML, the de facto software modeling standard. A conceptual meta-model is defined based on RTCA DO-178B, and then a corresponding UML profile, which we call SafeUML, is designed to enable its precise modeling. We show how SafeUML improves communication by, for example, allowing monitoring implementation of safety requirements during the development process, and supporting system certification per RTCA DO-178B. This is enabled through automatic generation of safety and certification-related information from UML models. We validate this approach through a case study on developing an aircraft's navigation controller subsystem.
C1 [Zoughbi, Gregory; Labiche, Yvan] Carleton Univ, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel] Simula Res Lab, N-1325 Lysaker, Norway.
   [Briand, Lionel] Univ Oslo, N-1325 Lysaker, Norway.
C3 Carleton University; University of Oslo
RP Labiche, Y (corresponding author), Carleton Univ, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM greg@zoughbi.com; briand@simula.no; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
FU Canada Research Chair (CRC); NSERC
FX This work was performed within the framework of Gregory Zoughbi's
   Master's thesis. Gregory Zoughbi was partly supported by General
   Dynamics Canada employee educational tuition assistance. This work was
   partly supported by a Canada Research Chair (CRC) grant. Lionel Briand
   and Yvan Labiche were further supported by NSERC discovery grants.
CR [Anonymous], 1992, SOFTW CONS AIRB SYST
   [Anonymous], 2005, UML PROF SCHED PERF
   Balasubramanian K, 2006, INT J EMBED SYST, V2, P142, DOI 10.1504/IJES.2006.014851
   *CENELEC EN, 1997, 50128 CENELEC EN EUR
   *ECL FDN, ECL MOD FRAM
   Gomaa H., 2000, DESIGNING CONCURRENT
   HAMID B, 2008, P IFIP WORKSH SOFTW, P9
   Hansen K. T., 2002, P WORKSH CRIT SYST D
   HAYHURST KJ, 2001, P ANN NASA GODD SOFT
   Heinrich M, 2007, LECT NOTES COMPUT SC, V4849, P15
   Herrmann D.S., 2000, SOFTWARE SAFETY RELI, VFirst
   *IBM, RHAPS
   *IBM RAT, RAT SOFTW ARCH
   *IEC, 1998, 61508 IEC
   *INC AS, ARTISAN STUD
   Jürjens J, 2003, LECT NOTES COMPUT SC, V2863, P360
   Lagarde F, 2008, LECT NOTES COMPUT SC, V4961, P116, DOI 10.1007/978-3-540-78743-3_10
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lewis R, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P183, DOI 10.1007/978-1-84882-349-5_12
   MEUNIER JN, 2003, P WORKSH SPEC VAL UM
   Monin Anne-Elodie, 2009, Cognition, Technology & Work, V11, P267, DOI 10.1007/s10111-008-0114-3
   Nilsen K., 2004, RTC MAGAZINE
   Ober I, 2008, INNOV SYST SOFTW ENG, V4, P301, DOI 10.1007/s11334-008-0066-z
   OMG, 2009, UML profile for MARTE: Modeling and analysis of real-time embedded systems
   *OMG, 2003, OCL 2 0 SPEC
   *OMG, 2009, UN MOD LANG SUP AD S
   OMG, 2007, MOF 2 0 XMI MAPP SPE
   OMG, 2008, UML PROF MOD QUAL SE
   *OMG, 2009, UN MOD LANG INFR AD
   Pender T., 2003, UML BIBLE
   *SPARX SYST, ENT ARCH
   *WORLD WID WEB CON, 2009, EXT STYL LANG FAM XS
   ZOUGHBI G., 2006, SCE0519 CARL U
   Zoughbi G, 2007, LECT NOTES COMPUT SC, V4735, P574
NR 34
TC 33
Z9 36
U1 0
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 337
EP 367
DI 10.1007/s10270-010-0164-x
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800005
DA 2024-07-18
ER

PT J
AU Höfner, P
   Khedri, R
   Möller, B
AF Hoefner, Peter
   Khedri, Ridha
   Moeller, Bernhard
TI An algebra of product families
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Product family; Product line; Idempotent semiring; Multi-view
   reconciliation; Formal family specification; Feature modelling
ID REQUIREMENTS; SCENARIOS; MODELS
AB Experience from recent years has shown that it is often advantageous not to build a single product but rather a family of similar products that share at least one common functionality while having well-identified variabilities. Such product families are built from elementary features that reach from hardware parts to software artefacts such as requirements, architectural elements or patterns, components, middleware, or code. We use the well established mathematical structure of idempotent semirings as the basis for a product family algebra that allows a formal treatment of the above notions. A particular application of the algebra concerns the multi-view reconciliation problem that arises when complex systems are modelled. We use algebraic integration constraints linking features in one view to features in the same or a different view and show in several examples the suitability of this approach for a wide class of integration constraint formulations. Our approach is illustrated with a Haskell prototype implementation of one particular model of product family algebra.
C1 [Moeller, Bernhard] Univ Augsburg, Inst Informat, Augsburg, Germany.
   [Khedri, Ridha] McMaster Univ, Dept Comp & Software, Hamilton, ON, Canada.
   [Hoefner, Peter] Univ Augsburg, Inst Comp Sci, Augsburg, Germany.
C3 University of Augsburg; McMaster University; University of Augsburg
RP Möller, B (corresponding author), Univ Augsburg, Inst Informat, Augsburg, Germany.
EM hoefner@informatik.uni-augsburg.de; khedri@mcmaster.ca;
   moeller@informatik.uni-augsburg.de
RI Hoefner, Peter/G-9118-2018
OI Hofner, Peter/0000-0002-2141-5868
CR [Anonymous], 1980, Principles of Artificial Intelligence
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Avgeriou P, 2005, LECT NOTES COMPUT SC, V3412, P248
   BATORY D, 2003, DAGST SEM DOM SPEC P
   BATORY D, 2002, C AUT SOFTW ENG SEPT
   BATORY D, 2005, P 9 INT SOFTW PROD L, P26
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Clements P., 2002, Software product lines
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   Desharnais J, 1998, IEEE T SOFTWARE ENG, V24, P695, DOI 10.1109/32.713325
   Desharnais J., 2004, J RELATIONAL METHODS, V1, P93
   GILANI W, 2004, P 3 WORKSH AD REFL M, P207
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Hebisch U., 1998, Series in Algebra, DOI [DOI 10.1142/3903, 10.1142/3903]
   Höfner P, 2008, ELECTRON NOTES THEOR, V201, P197, DOI 10.1016/j.entcs.2008.02.021
   Höfner P, 2007, LECT NOTES ARTIF INT, V4603, P279
   Höfner P, 2006, LECT NOTES COMPUT SC, V4085, P300
   Höfner P, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P85, DOI 10.1109/SEFM.2008.36
   HOFNER P, 2007, 200713 U AUGSB I COM
   HOFNER P, 2006, 200604 U AUGSB I COM
   *IEEE COMP SOC SOF, 2007, 8301998 IEEE COMP SO
   Jacobs B. E, 1985, APPL DATABASE LOGIC
   Kang K.C., 1990, CMUSEI90TR021
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KHEDRI R, 2008, CAS0803RK MCMAST U D
   McCune W., PROVER9 MACE4
   NACE W, 2000, P IFIP WG10 3 WG10 4, P131
   PALKOVICS L, 1991, IDENTIFICATION CONTR
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Riva C, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P161, DOI 10.1109/IWPSE.2003.1231223
   ROBAK S, 2003, 10 IEEE INT C WORKSH, P305
   Savolainen J, 2005, P INT COMP SOFTW APP, P186
   SHELTON CP, 2002, WORKSH ARCH DEP SYST, P267
   STREITFERDT D, 2004, THESIS TU ILMENAU
   STREITFERDT D, 2003, 10 IEEE INT C WORKSH
   THOMPSON JM, 2000, 00004 TR U MINN DEP
   THOMPSON JM, 2002, REQUIR ENG J
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Wang A.J. A., 2005, COMPONENT ORIENTED P
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Wirsing M, 2004, LECT NOTES COMPUT SC, V2941, P341
NR 41
TC 23
Z9 24
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 161
EP 182
DI 10.1007/s10270-009-0127-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500003
DA 2024-07-18
ER

PT J
AU Peña, J
   Rouff, CA
   Hinchey, M
   Ruiz-Cortés, A
AF Pena, Joaquin
   Rouff, Christopher A.
   Hinchey, Mike
   Ruiz-Cortes, Antonio
TI Modeling NASA swarm-based systems: using agent-oriented software
   engineering and formal methods
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Swarms; Emergent behavior; Agent-oriented software engineering; Formal
   methods
AB The need to collect new data and perform new science is causing the complexity of NASA missions to continually increase. This complexity needs to be controlled via new technological advancements and balanced with a reduction in mission and operation costs. Planned and hypothesized missions involve self-management, biological-inspiration based on swarms, and autonomous operation as a means of achieving these goals. We consider a tailored software engineering approach to developing such systems based on agent-oriented software engineering and formal methods. We report on advances in modeling, implementing, and testing NASA swarm-based concept missions.
C1 [Hinchey, Mike] Univ Limerick, Lero, Limerick, Ireland.
   [Pena, Joaquin; Ruiz-Cortes, Antonio] Univ Seville, Seville, Spain.
   [Rouff, Christopher A.] Lockheed Martin Corp, Adv Technol Labs, Arlington, VA USA.
C3 University of Limerick; University of Sevilla; Lockheed Martin
RP Hinchey, M (corresponding author), Univ Limerick, Lero, Limerick, Ireland.
EM joaquinp@us.es; christopher.rouff@lmco.com; mike.hinchey@lero.ie;
   aruiz@us.es
RI Cortés, Antonio Ruiz/B-9056-2008; Peña, Joaquin/K-8217-2012; Rouff,
   Christopher/AAF-8275-2020
OI Cortés, Antonio Ruiz/0000-0001-9827-1834; Rouff,
   Christopher/0000-0002-8975-3898; Hinchey, Mike/0000-0001-5110-561X
FU Spanish Research Projects [TIN2006-00472, TIN2009-07366, P07-TIC-02533];
   NASA Software Engineering Laboratory; NASA Goddard Space Flight Center,
   Greenbelt, MD, USA; NASA Office of Safety and Mission Assurance (OSMA);
   Science Foundation Ireland [03/CE2/I303-1]
FX The work reported in this article was supported by the Spanish Research
   Projects TIN2006-00472, TIN2009-07366 and P07-TIC-02533, by the NASA
   Software Engineering Laboratory, NASA Goddard Space Flight Center,
   Greenbelt, MD, USA, and by the NASA Office of Safety and Mission
   Assurance (OSMA) Software Assurance Research Program (SARP) and by
   Science Foundation Ireland grant number 03/CE2/I303-1 to Lero-the Irish
   Software Engineering Research Centre.
CR [Anonymous], UN MOD LANG SUP VERS
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 1989, P 7 ANN M ROB SOC JA
   CURTIS SA, 2000, P INT ASTR FED 51 C
   CURTIS SA, 2003, P IEEE AER C BIG SKY
   Hinchey MG, 2007, COMPUTER, V40, P111, DOI 10.1109/MC.2007.144
   Kendall EA, 2000, IEEE CONCURR, V8, P34, DOI 10.1109/4434.846192
   MICHAEL W, 1986, CS864 SHEFF U
   Parunak H. V. D., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P100, DOI 10.1145/375735.376008
   PENA J, 2006, LNCS IN PRESS
   PENA J, 2005, THESIS U SEVILLE
   Pena J., 2003, ACM S APPL COMP SAC, P45
   PENA J, 2006, 5 INT WORKS IN PRESS
   Peña J, 2006, COMMUN ACM, V49, P82, DOI 10.1145/1183236.1183272
   ROUFF CA, 2006, INT J SOFTWARE TOOLS, V8
   Sumpter DJT, 2001, B MATH BIOL, V63, P951, DOI 10.1006/bulm.2001.0252
   Truszkowski WF, 2006, IEEE T SYST MAN CY C, V36, P279, DOI 10.1109/TSMCC.2006.871600
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
NR 18
TC 12
Z9 13
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 55
EP 62
DI 10.1007/s10270-009-0135-2
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sassolas, M
   Chechik, M
   Uchitel, S
AF Sassolas, Mathieu
   Chechik, Marsha
   Uchitel, Sebastian
TI Exploring inconsistencies between modal transition systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Labelled transition systems; Inconsistency identification and
   resolution; mu-Calculus; Distinguishing property; Graphical feedback
ID MODEL; COUNTEREXAMPLES; VERIFICATION; FRAMEWORK; TOOL
AB It is commonplace to have multiple behaviour models that describe the same system but have been produced by different stakeholders or synthesized from different sources. Although in practice, such models frequently exhibit inconsistencies, there is a lack of tool support for analyzing them. There are two key difficulties in explaining why two behavioural models are inconsistent: (1) explanations often require branching structures rather than linear traces, or scenarios; and (2) there can be multiple sources of inconsistency and many different ways of explaining each one. In this paper, we present an approach that supports exploration of inconsistencies between modal transition systems, an extension to labelled transition systems. We show how to produce sound graphical explanations for inconsistencies, how to compactly represent all possible explanations in a composition of the models being compared, and how modelers can use this composition to explore the explanations encoded therein.
C1 [Chechik, Marsha] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
   [Sassolas, Mathieu] Univ Paris 06, CNRS, MoVe LIP6, UMR 7606, Paris, France.
   [Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, FCEN, Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, London, England.
C3 University of Toronto; Sorbonne Universite; Centre National de la
   Recherche Scientifique (CNRS); University of Buenos Aires; Imperial
   College London
RP Chechik, M (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
EM chechik@cs.toronto.edu
OI Uchitel, Sebastian/0000-0001-9352-1478
FU CONICET; ERC [StG 204853-2]; PICT [11-32440]; UBACYT [X021]; NSERC; ENS
   Cachan, France
FX We thank anonymous SoSyM referees for their comments on an earlier
   version of the journal paper. We gratefully acknowledge the support of
   CONICET, ERC StG 204853-2, PICT 11-32440, UBACYT X021 and NSERC. This
   work was carried out when the first author was studying at and being
   supported by ENS Cachan, France.
CR [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], 2008, P 16 ACM SIGSOFT INT
   Ball T., 2003, International Journal on Software Tools for Technology Transfer, V5, P49, DOI 10.1007/s10009-002-0095-0
   Broadfoot P, 2000, LECT NOTES COMPUT SC, V1885, P322
   Brunet G, 2006, LECT NOTES COMPUT SC, V4085, P98
   Chechik M., 2007, INT J SOFTW TOOLS TE, V9
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 1995, DES AUT CON, P427
   CLEAVELAND R, 1993, ACM T PROGR LANG SYS, V15, P36, DOI 10.1145/151646.151648
   Copty F., 2003, International Journal on Software Tools for Technology Transfer, V4, P335, DOI 10.1007/s10009-002-0097-y
   D'IPPOLITO N., 2008, P 23 IEEE ACM INT C, P475
   Dong YF, 2003, LECT NOTES COMPUT SC, V2725, P215
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Giannakopoulou D., 2003, P 9 JOINT M EUR SOFT, P257
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hoare CAR., 1985, Communicating Sequential Processes
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Huth M, 2001, LECT NOTES COMPUT SC, V2028, P155
   Huth M., 2001, ELECT NOTES THEORET, V45
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Larsen K.G., 1988, P 3 ANN S LOG COMP S, P203
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Li Tan, 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P455
   Namjoshi K. S., 2001, LNCS, V2102
   Nejati S., 2005, P 20 INT C AUT SOFTW, P287
   Nejati S., 2007, P 29 INT C SOFTW ENG, P54
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Sabetzadeh M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ASE.2003.1240290
   Sassolas M., 2009, PSEUDOMERGE PROTOTYP
   Uchitel S., 2004, Software Engineering Notes, V29, P43, DOI 10.1145/1041685.1029904
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
NR 37
TC 7
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 117
EP 142
DI 10.1007/s10270-010-0148-x
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400007
DA 2024-07-18
ER

PT J
AU Katara, M
   Katz, S
AF Katara, Mika
   Katz, Shmuel
TI A concern architecture view for aspect-oriented software design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE aspect orientation; design concepts; UML
ID SYSTEMS
AB Although aspect-oriented programming is becoming popular, support for the independent description of aspect designs and for the incremental design of aspects themselves has been neglected. A conceptual framework for the design of aspects is presented, where aspects are viewed as augmentations that map an existing design into a new one with changes or additions. The principles of a Concern Architecture model are defined both to group designs of aspects, and to make explicit their dependencies and potential interferences in the design of a system with multiple aspects. The aspects are described generically, where any design element can be either required or provided. The required elements resemble formal parameters, and their binding to an existing design shows the context in which the provided parts are to modify that design. Overlap and a partial order among aspects and concerns are visualized in a Concern Architecture Diagram. An instantiation of the ideas as a UML profile is outlined, and the design of a digital sound recorder is used to demonstrate the utility of the approach.
C1 [Katara, Mika] Tampere Univ Technol, Inst Software Syst, FIN-33101 Tampere, Finland.
   [Katz, Shmuel] Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
C3 Tampere University; Technion Israel Institute of Technology
RP Katara, M (corresponding author), Tampere Univ Technol, Inst Software Syst, FIN-33101 Tampere, Finland.
EM mika.katara@tut.fi; katz@cs.technion.ac.il
CR AALTONEN T, 2002, P 8 IEEE INT C ENG C
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   *AOSD EUR, SURV ASP OR AN DES A
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Clements P., 2002, DOCUMENTING SOFTWARE
   Cuesta CE, 2005, LECT NOTES COMPUT SC, V3527, P247
   DIJKSTRA EW, 1980, INFORM PROCESS LETT, V11, P1, DOI 10.1016/0020-0190(80)90021-6
   Grundy J, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P127, DOI 10.1109/ASWEC.2001.948506
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   Hammouda I, 2005, LECT NOTES COMPUT SC, V3527, P113
   Hammouda I., 2004, P 8 EUR C SOFTW MAIN
   HAMMOUDA I, 2004, P 19 IEEE INT C AUT
   HARRISON W, 2002, WORKSH ASP OR MOD UM
   Harrison W. H., 2002, RC22685 IBM TJ WATS
   *IBM RAT SOFW, RAT ROS
   Ichisugi Y, 2002, LECT NOTES COMPUT SC, V2374, P62
   JARVINEN HM, 1990, P 12 INT C SOFTW ENG, P63
   KANDE MM, 2003, THESIS ECOLE POLYTEC
   KATARA M, 2003, P 2 INT C ASP OR SOF, P1
   KATZ S, 1993, ACM T PROGR LANG SYS, V15, P337, DOI 10.1145/169701.169682
   KATZ S, 1999, ECOOP 1999 WORKSH AS
   KELLOMAKI P, 2000, ECOOP 2000 WORKSH AS
   KELLOMAKI P, 2001, LECT NOTES COMPUTER, V2152, P281
   *OBJ MAN GROUP, OMG UN MOD LANG SPEC
   Ossher H., 2001, SOFTWARE ARCHITECTUR
   PALTOR IP, 234 TUCS
   Reinhartz-Berger I, 2002, P INT COMP SOFTW APP, P19, DOI 10.1109/CMPSAC.2002.1044528
   Sihman M, 2003, COMPUT J, V46, P529, DOI 10.1093/comjnl/46.5.529
   SIHMAN M, 2002, P 1 INT C ASP OR SOF, P28
   SUTTON SM, 2002, AOSD 2002 WORKSH ASP
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
NR 33
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2007
VL 6
IS 3
BP 247
EP 265
DI 10.1007/s10270-006-0032-x
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WT
UT WOS:000254667900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pinciroli, R
   Smith, CU
   Trubiani, C
AF Pinciroli, Riccardo
   Smith, Connie U.
   Trubiani, Catia
TI Modeling more software performance antipatterns in cyber-physical
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Software modeling; Software performance antipatterns; Model-based
   performance analysis; Cyber-physical systems
ID OPTIMIZATION; FRAMEWORK; TIME
AB The design of cyber-physical systems (CPS) is challenging due to the heterogeneity of software and hardware components that operate in uncertain environments (e.g., fluctuating workloads), hence they are prone to performance issues. Software performance antipatterns could be a key means to tackle this challenge since they recognize design problems that may lead to unacceptable system performance. This manuscript focuses on modeling and analyzing a variegate set of software performance antipatterns with the goal of quantifying their performance impact on CPS. Starting from the specification of eight software performance antipatterns, we build a baseline queuing network performance model that is properly extended to account for the corresponding bad practices. The approach is applied to a CPS consisting of a network of sensors and experimental results show that performance degradation can be traced back to software performance antipatterns. Sensitivity analysis investigates the peculiar characteristics of antipatterns, such as the frequency of checking the status of resources, that provides quantitative information to software designers to help them identify potential performance problems and their root causes. Quantifying the performance impact of antipatterns on CPS paves the way for future work enabling the automated refactoring of systems to remove these bad practices.
C1 [Pinciroli, Riccardo; Trubiani, Catia] Gran Sasso Sci Inst, Laquila, Italy.
   [Smith, Connie U.] L&S Comp Technol Inc, Performance Engn Serv, Austin, TX USA.
C3 Gran Sasso Science Institute (GSSI)
RP Trubiani, C (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM riccardo.pinciroli@gssi.it; catia.trubiani@gssi.it
OI Trubiani, Catia/0000-0002-7675-6942; Pinciroli,
   Riccardo/0000-0003-3375-7256
FU Ministero dell'Universit e della Ricerca [20228FT78M, ECS00000041];
   Spoke 2 ASTRA - Advanced Space Technologies and Research Alliance
FX The authors would like to thank the Editor and the anonymous reviewers
   for their constructive comments and valuable feedback. This work has
   been partially funded by MUR PRIN project 20228FT78M DREAM (modular
   software design to reduce uncertainty in ethics-based cyber-physical
   systems) and the PNRR MUR project VITALITY (ECS00000041), Spoke 2 ASTRA
   - Advanced Space Technologies and Research Alliance.
CR Aceto L, 2007, REACTIVE SYSTEMS MOD, DOI DOI 10.1017/CBO9780511814105
   Aceto L, 2021, LECT NOTES COMPUT SC, V12649, P3, DOI 10.1007/978-3-030-71500-7_1
   Alasmari N, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111275
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Alladi T, 2020, COMPUT COMMUN, V155, P1, DOI 10.1016/j.comcom.2020.03.007
   Argaw ST, 2020, BMC MED INFORM DECIS, V20, DOI 10.1186/s12911-020-01161-7
   Audrito G, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110908
   Bai Y, 2021, IEEE T IND INFORM, V17, P5175, DOI 10.1109/TII.2020.3027645
   Bakirtzis G, 2022, SOFTW SYST MODEL, V21, P113, DOI 10.1007/s10270-021-00892-z
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   Bondi A.B., 2015, Foundations of software and system performance engineering: process, performance modeling, requirements, testing, scalability, and practice
   Bures T, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P37, DOI 10.1145/3185768.3186306
   Calinescu R, 2020, LECT NOTES COMPUT SC, V12076, P357, DOI 10.1007/978-3-030-45234-6_18
   Capota EA, 2019, J SYST SOFTWARE, V156, P204, DOI 10.1016/j.jss.2019.06.099
   Chen C, 2020, FUTURE GENER COMP SY, V105, P894, DOI 10.1016/j.future.2017.06.006
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Connell W, 2021, IEEE T DEPEND SECURE, V18, P205, DOI 10.1109/TDSC.2018.2882825
   Cortellessa V, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P224, DOI 10.1109/SEAA53835.2021.00036
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   DALLERY Y, 1990, PERFORM EVALUATION, V11, P209, DOI 10.1016/0166-5316(90)90013-9
   Feitosa D, 2019, INFORM SOFTWARE TECH, V105, P1, DOI 10.1016/j.infsof.2018.07.014
   Giaimo F, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110781
   Gil M, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106349
   Gómez A, 2018, LECT NOTES COMPUT SC, V11150, P105, DOI 10.1007/978-3-030-01042-3_7
   Gong HF, 2020, IEEE T SYST MAN CY-S, V50, P4746, DOI 10.1109/TSMC.2018.2861918
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hassan HH, 2023, I W S E ADAP SM SYS, P157, DOI 10.1109/SEAMS59076.2023.00029
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heinzemann C, 2019, SOFTW SYST MODEL, V18, P157, DOI 10.1007/s10270-017-0583-z
   Kattepur A, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P189, DOI 10.1145/3297663.3309671
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Larsen KG, 2017, LECT NOTES COMPUT SC, V10205, P3, DOI 10.1007/978-3-662-54577-5_1
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li C, 2017, LECT NOTES COMPUT SC, V10503, P295, DOI 10.1007/978-3-319-66335-7_18
   Lu Y, 2022, IEEE T INTELL TRANSP, V23, P24636, DOI 10.1109/TITS.2022.3202494
   Mandrioli C, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3617170
   Matalonga S, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106937
   Mo YL, 2016, IEEE T AUTOMAT CONTR, V61, P2618, DOI 10.1109/TAC.2015.2498708
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nuzzo P, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3243216
   Palma F, 2019, IEEE T SOFTWARE ENG, V45, P1024, DOI 10.1109/TSE.2018.2819180
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Pinciroli R., 2022, Replication package: Modeling more software performance antipatterns in cyber-physical systems, DOI [10.6084/m9.figshare.15101925, DOI 10.6084/M9.FIGSHARE.15101925]
   Pinciroli R, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P93, DOI 10.1145/3427921.3450251
   Schranz M, 2021, SWARM EVOL COMPUT, V60, DOI 10.1016/j.swevo.2020.100762
   Smith CU, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P173, DOI 10.1145/3358960.3379138
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   SMITH CU, 2002, PERFORMANCE SOLUTION
   STANKOVIC JA, 1988, COMPUTER, V21, P10, DOI 10.1109/2.7053
   Stecklein J.M., 2004, NASA technical report
   Svogor I, 2019, INFORM SOFTWARE TECH, V105, P30, DOI 10.1016/j.infsof.2018.08.003
   Talcott Carolyn, 2008, Software-Intensive Systems and New Computing Paradigms, P101
   Tavcar J, 2019, IEEE T SYST MAN CY-S, V49, P145, DOI 10.1109/TSMC.2018.2814539
   Higuera-Toledano MT, 2017, IEEE T IND INFORM, V13, P1249, DOI 10.1109/TII.2017.2693365
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   van Dinten I., 2023, The slow and the furious? Performance antipattern detection in cyber-physical systems
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Zhang H, 2016, IEEE NETWORK, V30, P62, DOI 10.1109/MNET.2016.7437026
   Zhang ZK, 2014, SIMUL MODEL PRACT TH, V43, P16, DOI 10.1016/j.simpat.2014.01.001
   Zhu Y, 2021, IEEE INTERNET THINGS, V8, P7126, DOI 10.1109/JIOT.2020.3038691
NR 61
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 DEC 20
PY 2023
DI 10.1007/s10270-023-01137-x
EA DEC 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CS9O8
UT WOS:001127349800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Curty, S
   Härer, F
   Fill, HG
AF Curty, Simon
   Harer, Felix
   Fill, Hans-Georg
TI Design of blockchain-based applications using model-driven engineering
   and low-code/no-code platforms: a structured literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Blockchain; Low-code; No-code; Model-driven engineering; Software
   development
ID SMART CONTRACTS; GENERATION; LANGUAGE; RELIABILITY; MANAGEMENT;
   EXECUTION; AGREEMENT; SYSTEMS; FUTURE; STATE
AB The creation of blockchain-based software applications requires today considerable technical knowledge, particularly in software design and programming. This is regarded as a major barrier in adopting this technology in business and making it accessible to a wider audience. As a solution, low-code and no-code approaches have been proposed that require only little or no programming knowledge for creating full-fledged software applications. In this paper we extend a review of academic approaches from the discipline of model-driven engineering as well as industrial low-code and no-code development platforms for blockchains. This includes a content-based, computational analysis of relevant academic papers and the derivation of major topics. In addition, the topics were manually evaluated and refined. Based on these analyses we discuss the spectrum of approaches in this field and derive opportunities for further research.
C1 [Curty, Simon; Harer, Felix; Fill, Hans-Georg] Univ Fribourg, Digitalizat & Informat Syst Grp, Bd Perolles 90, CH-1700 Fribourg, Switzerland.
C3 University of Fribourg
RP Curty, S (corresponding author), Univ Fribourg, Digitalizat & Informat Syst Grp, Bd Perolles 90, CH-1700 Fribourg, Switzerland.
EM simon.curty@unifr.ch; felix.haerer@unifr.ch; hans-georg.fill@unifr.ch
OI Fill, Hans-Georg/0000-0001-5076-5341; Curty, Simon/0000-0002-2868-9001;
   Harer, Felix/0000-0002-2768-2342
FU Swiss National Science Foundation project Domain-Specific Conceptual
   Modeling for Distributed Ledger Technologies [196889]
FX AcknowledgementsThis work was supported by the Swiss National Science
   Foundation project Domain-Specific Conceptual Modeling for Distributed
   Ledger Technologies [196889].
CR Abbasi M, 2023, IETE J RES, V69, P1842, DOI 10.1080/03772063.2021.1875891
   Abid A, 2020, LECT NOTES COMPUT SC, V12026, P325, DOI 10.1007/978-3-030-41568-6_21
   Alam MT, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2021), P499, DOI [10.1109/Blockchain53845.2021.00076, 10.1109/BLOCKCHAIN53845.2021.00076]
   Garcia-Garcia JA, 2020, IEEE ACCESS, V8, P142312, DOI 10.1109/ACCESS.2020.3013911
   Allouche M, 2021, ICT EXPRESS, V7, P274, DOI 10.1016/j.icte.2021.08.009
   Almakhour M, 2020, PERVASIVE MOB COMPUT, V67, DOI 10.1016/j.pmcj.2020.101227
   Alves P.H.C., P 22 INT C ENT INF S
   Amato F, 2021, IEEE T IND INFORM, V17, P7752, DOI 10.1109/TII.2021.3057595
   Andrychowicz Marcin, 2014, Formal Modeling and Analysis of Timed Systems. 12th International Conference, FORMATS 2014. Proceedings. LNCS: 8711, P7, DOI 10.1007/978-3-319-10512-3_2
   [Anonymous], 2018, INTR HYP
   [Anonymous], 2008, Petri Net
   [Anonymous], 2006, Object Constraint Language
   Antonopoulos Andreas M, 2018, Mastering Ethereum: Building Smart Contracts and DApps
   Aparício M, 2020, PROCEEDINGS OF THE 12TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT (KEOD), VOL 2, P283, DOI 10.5220/0010147602830290
   Aparício M, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P762, DOI 10.5220/0009417907620769
   Asawa K., 2021, 26 INT C AUT COMP IC, P1, DOI [10.23919/ICAC50006.2021.9594235, DOI 10.23919/ICAC50006.2021.9594235]
   Astigarraga T, 2018, LECT NOTES COMPUT SC, V11236, P111, DOI 10.1007/978-3-030-03596-9_8
   Azzopardi S., 2021, 9 IPM INT C FUND SOF, V12818, P142, DOI 10.1007/978-3-030-89247-0_10
   Azzopardi S., 2020, COMMUN COMPUT PHYS, V1361, P323, DOI [10.1007/978-3-030-67445-8_, DOI 10.1007/978-3-030-67445-8]
   Babkin Eduard, 2020, Advances in Enterprise Engineering XIII. 9th Enterprise Engineering Working Conference, EEWC 2019, Revised Papers. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 374), P167, DOI 10.1007/978-3-030-37933-9_11
   Bagozi A, 2021, LECT NOTES COMPUT SC, V13080, P59, DOI 10.1007/978-3-030-90888-1_5
   Bagozi A, 2019, LECT NOTES COMPUT SC, V11877, P440, DOI 10.1007/978-3-030-33246-4_28
   Bai XM, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P322, DOI 10.1145/3185089.3185138
   Baresi L., 2022, ARXIV
   Barisic A, 2021, 2021 3RD CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P37, DOI 10.1109/BRAINS52497.2021.9569809
   Barnett J., 2015, STATE CHART XML SCXM
   Bella G, 2022, STUD COMPUT INTELL, V1026, P249, DOI 10.1007/978-3-030-96627-0_23
   Besancon L., 2021, 2020 INT C HIGH PERF
   Besancon L, 2022, IEEE ACCESS, V10, P49905, DOI 10.1109/ACCESS.2022.3173313
   Biryukov Alex, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P453, DOI 10.1007/978-3-319-70278-0_28
   Bistarelli S., 2022, CEUR WORKSHOP PROC, V3166, P94
   Bistarelli S, 2022, LECT NOTES COMPUT SC, V13098, P219, DOI 10.1007/978-3-031-06156-1_18
   Bistarelli S, 2021, 2021 THIRD INTERNATIONAL CONFERENCE ON BLOCKCHAIN COMPUTING AND APPLICATIONS (BCCA), P164, DOI 10.1109/BCCA53669.2021.9656987
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bock AC, 2021, BUS INFORM SYST ENG+, V63, P733, DOI 10.1007/s12599-021-00726-8
   Bollen P, 2020, LECT NOTES COMPUT SC, V11878, P117, DOI 10.1007/978-3-030-40907-4_12
   Bore N, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P112, DOI [10.1109/BLOC.2019.8751446, 10.1109/bloc.2019.8751446]
   Boubeta-Puig J, 2021, EXPERT SYST APPL, V184, DOI 10.1016/j.eswa.2021.115578
   Boychenko OV, 2019, COMM COM INF SC, V1141, P612, DOI 10.1007/978-3-030-36625-4_49
   Brahem A, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P89, DOI 10.1109/ICWS49710.2020.00019
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brandt S, 2017, AAAI CONF ARTIF INTE, P1070
   Cano-Benito J, 2021, IEEE ACCESS, V9, P140156, DOI 10.1109/ACCESS.2021.3115577
   Cao LB, 2022, IEEE INTELL SYST, V37, P6, DOI 10.1109/MIS.2022.3181504
   Cardano Foundation, 2022, CARD
   Cardoso J., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P602, DOI 10.1109/SCC.2010.93
   Carminati B, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P58, DOI 10.1109/ICWS.2018.00015
   Casalaro GL, 2022, SOFTW SYST MODEL, V21, P19, DOI 10.1007/s10270-021-00908-8
   Chauhan U, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3462478
   Chen E, 2022, IEEE T SERV COMPUT, V15, P3061, DOI 10.1109/TSC.2021.3077291
   Choudhury O, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P963, DOI 10.1109/Cybermatics_2018.2018.00183
   Churchill R, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3507900
   Clohessy T., 2019, Business Transformation through Blockchain, Vol, V1, P47, DOI [DOI 10.1007/978-3-319-98911-2_2, 10.1007/978-3-319-98911-2, DOI 10.1007/978-3-319-98911-22]
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Conchon Sylvain, 2020, Formal Methods. FM 2019 International Workshops. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12232), P312, DOI 10.1007/978-3-030-54994-7_23
   Corneli A., 2021, 38 INT S AUT ROB CON, P1, DOI [10.22260/ISARC2021/0118, DOI 10.22260/ISARC2021/0118]
   Corneli A., 2021, P 2021 EUR C COMP CO, V2, P34, DOI [10.35490/EC3.2021.204, DOI 10.35490/EC3.2021.204]
   Corradini Flavio, 2022, 2022 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops), P255, DOI 10.1109/PerComWorkshops53856.2022.9767513
   Corradini F, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1470, DOI 10.1145/3341105.3373988
   Corradini F., 2021, PROC 1 ITALIAN FORUM, P26
   Corradini F, 2022, ACM TRANS MANAG INF, V13, DOI 10.1145/3505225
   Corradini F, 2021, BLOCKCHAIN-RES APPL, V2, DOI 10.1016/j.bcra.2021.100018
   Curty S., 2023, DESIGN BLOCKCHAIN BA, DOI [10.5281/zenodo.7839834, DOI 10.5281/ZENODO.7839834]
   Curty S., 2021, CEUR WORKSHOP PROC, V2958, P31
   Curty S, 2022, LECT NOTES BUS INF P, V450, P205, DOI 10.1007/978-3-031-07475-2_14
   de Kruijff J.T., 2019, CEUR WORKSHOP PROC, V2383
   de Kruijff J, 2017, LECT NOTES COMPUT SC, V10253, P29, DOI 10.1007/978-3-319-59536-8_3
   de Kruijff Joost T., 2018, Proceedings of the 12th International Workshop on Value Modeling and Business Ontologies, VMBO 2018, Amsterdam, The Netherlands, February 26th - 27th, 2018, V2239, P149
   de Sousa VA, 2021, 2021 THIRD INTERNATIONAL CONFERENCE ON BLOCKCHAIN COMPUTING AND APPLICATIONS (BCCA), P195, DOI 10.1109/BCCA53669.2021.9657015
   de Sousa VA, 2020, LECT NOTES COMPUT SC, V12127, P117, DOI 10.1007/978-3-030-49435-3_8
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Dharanikota Samvid, 2021, 2021 Formal Methods in Computer Aided Design (FMCAD), P133, DOI 10.34727/2021/isbn.978-3-85448-046-4_22
   Di Ciccio C, 2018, LECT NOTES BUS INF P, V319, P56, DOI 10.1007/978-3-319-94214-8_4
   Di Ruscio D., 2022, SOFTW SYST MODEL
   Dietz J.L. G., 2006, Enterprise ontology, DOI DOI 10.1007/3-540-33149-2
   Dietz JLG, 1999, LECT NOTES COMPUT SC, V1728, P188
   Dittmann G, 2020, LECT NOTES COMPUT SC, V12019, P181, DOI 10.1007/978-3-030-45989-5_15
   Dwivedi Vimal, 2022, Intelligent Data Engineering and Analytics: Proceedings of the 9th International Conference on Frontiers in Intelligent Computing: Theory and Applications (FICTA 2021). Smart Innovation, Systems and Technologies (266), P549, DOI 10.1007/978-981-16-6624-7_54
   Dwivedi V, 2021, COMM COM INF SC, V1440, P660, DOI 10.1007/978-3-030-81462-5_58
   Dwivedi V, 2021, IEEE ACCESS, V9, P76069, DOI 10.1109/ACCESS.2021.3081926
   Dwivedi V, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3453475
   Ellervee A., 2017, ER FORUM DEMOS, V1979, P320
   European Law Institute (ELI), 2022, ELI PRINC BLOCKCH TE
   Evermann J., 2021, SN Computer Science, V2, DOI DOI 10.1007/S42979-020-00387-6
   Fahmideh M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3530813
   Fairley P, 2019, IEEE SPECTRUM, V56, P29, DOI [10.1109/MSPEC.2019.8594790, 10.1109/mspec.2019.8594790]
   Falazi G, 2019, SICS SOFTWARE, V34, P105, DOI 10.1007/s00450-019-00399-5
   Falazi G, 2019, IEEE INT ENTERP DIST, P77, DOI 10.1109/EDOC.2019.00019
   Fayyad U, 2001, RELATIONAL DATA MINING, P28
   Ferstl O. K., 2006, International Handbooks on Information Systems, P347
   Fettke P., 2007, REFERENCE MODELING B, P1, DOI [10.4018/978-1-59904-054-7.ch001, DOI 10.4018/978-1-59904-054-7.CH001]
   Fill H-G., 2020, BLOCKCHAIN GRUNDLAGE, DOI [10.1007/978-3-658-28006-2, DOI 10.1007/978-3-658-28006-2]
   Fill H-G., 2020, BLOCKCHAIN KOMPAKT, DOI [10.1007/978-3-658-27461-0, DOI 10.1007/978-3-658-27461-0]
   Fill H-G., 2020, ENTERP MODELLING INF, V15, P16, DOI [10.18417/emisa.15.16, DOI 10.18417/EMISA.15.16]
   Fill HG, 2021, LECT NOTES BUS INF P, V422, P343, DOI 10.1007/978-3-030-79976-2_22
   FOX MS, 1992, LECT NOTES ARTIF INT, V604, P25, DOI 10.1007/BFb0024952
   Fox MS, 1998, AI MAG, V19, P109
   Frantz CK, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P210, DOI 10.1109/FAS-W.2016.53
   Franz F, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC)
   Fraternali P, 2022, LECT NOTES COMPUT SC, V13248, P104, DOI 10.1007/978-3-031-11217-1_8
   Garamvölgyi P, 2018, I C DEPENDABLE SYST, P134, DOI 10.1109/DSN-W.2018.00052
   García-Bañuelos L, 2017, LECT NOTES COMPUT SC, V10445, P130, DOI 10.1007/978-3-319-65000-5_8
   Gogolla M., 1994, LECT NOTES COMPUTER, V767, DOI [10.1007/3-540-57648-7, DOI 10.1007/3-540-57648-7]
   Gomez C., 2021, HAW INT C SYST SCI H, DOI [10.24251/HICSS.2021.254, DOI 10.24251/HICSS.2021.254]
   Gonczol P, 2020, IEEE ACCESS, V8, P11856, DOI 10.1109/ACCESS.2020.2964880
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Gorski Tomasz, 2020, Computer Aided Systems Theory - EUROCAST 2019. 17th International Conference. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12013), P507, DOI 10.1007/978-3-030-45093-9_61
   Górski T, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12115339
   Górski T, 2020, INT J ELECTRON TELEC, V66, P619, DOI 10.24425/ijet.2020.134020
   Górski T, 2020, IEEE ACCESS, V8, P118245, DOI 10.1109/ACCESS.2020.3005519
   Górski T, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P255, DOI [10.1109/SoSE50414.2020.9130492, 10.1109/sose50414.2020.9130492]
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Guerreiro S, 2020, ENTERP MODELLING INF, V15, DOI 10.18417/emisa.15.15
   Haarmann S., 2021, BLOCKCHAIN ROBOTIC P, P43, DOI [10.1007/978-3-030-81409-0_4, DOI 10.1007/978-3-030-81409-0_4]
   Haarmann S, 2019, LECT NOTES BUS INF P, V361, P119, DOI 10.1007/978-3-030-30429-4_9
   Haarmann S, 2018, LECT NOTES COMPUT SC, V10816, P327, DOI 10.1007/978-3-319-91563-0_20
   Hamadi Y.B., 2020, RES INN FOR 2020 DIS, P495, DOI [10.1007/978-3-030-62066-0_38, DOI 10.1007/978-3-030-62066-0_38]
   Hamdaqa Mohammad, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P34, DOI 10.1145/3419804.3421454
   Hamdaqa M, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106762
   Harer F., 2019, 22 INT LEG INF S IRI, P527
   Harer F., 2020, 39 INT C CONC MOD ER
   Härer F, 2020, ENTERP MODELLING INF, V15, DOI 10.18417/emisa.15.13
   Hayes PatrickJ., 2014, W3C Recommendation
   He X, 2018, P INT COMP SOFTW APP, P132, DOI 10.1109/COMPSAC.2018.00025
   He XD, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P108, DOI 10.1109/QRS-C51114.2020.00029
   Hearn M., 2021, CORDA DISTRIBUTED LE
   Heckel R, 2022, LECT NOTES COMPUT SC, P137, DOI 10.1007/978-3-031-09843-7_8
   Hector U-R., 2020, CORR
   Henry T, 2021, LECT NOTES COMPUT SC, V13121, P81, DOI 10.1007/978-3-030-91431-8_6
   Holotiuk F., 2018, Organizational adoption of digital innovation: The case of blockchain technology (Research Papers No. 202)
   Hsain YA, 2021, PROCEDIA COMPUT SCI, V184, P785, DOI 10.1016/j.procs.2021.03.097
   Hu B, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2020.100179
   Varela-Vaca AJ, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3423166
   Jiang Shanshan, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P375, DOI 10.1145/3530019.3531346
   Jovanovic M, 2022, TECHNOL FORECAST SOC, V184, DOI 10.1016/j.techfore.2022.121981
   Jurgelaitis Mantas, 2021, Trends and Applications in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1368), P63, DOI 10.1007/978-3-030-72654-6_7
   Jurgelaitis M., 2019, CEUR WORKSHOP P, V2470, P43
   Jurgelaitis M, 2022, IEEE ACCESS, V10, P33465, DOI 10.1109/ACCESS.2022.3162227
   Kherbouche M, 2022, APPL SYST INNOV, V5, DOI 10.3390/asi5010010
   Kim HM, 2018, INTELL SYST ACCOUNT, V25, P18, DOI 10.1002/isaf.1424
   Klinger P., 2020, ENTWICKLUNG ENCHANC, P893, DOI [10.30844/wi_2020_i2, DOI 10.30844/WI_2020_I2]
   Kolb J., 2020, UCBEECS2020178
   Kruijff Joost, 2017, On the Move to Meaningful Internet Systems. OTM 2017 Conferences. Confederated International Conferences: CoopIS, C&TC, and ODBASE 2017. Proceedings: LNCS 10574, P383, DOI 10.1007/978-3-319-69459-7_26
   Ladleif Jan, 2020, Business Information Systems. 23rd International Conference, BIS 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 389), P184, DOI 10.1007/978-3-030-53337-3_14
   Ladleif J, 2019, LECT NOTES COMPUT SC, V11675, P69, DOI 10.1007/978-3-030-26619-6_7
   Jan L, 2019, LECT NOTES COMPUT SC, V11788, P323, DOI 10.1007/978-3-030-33223-5_27
   Lallai G., 2020, P 3 DISTR LEDG TECHN, V2580
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Levasseur O., 2021, P FORUM PRACTICE ENT, V3045, P11
   LiBin MT., 2021, JOIV INT J INFORM VI, V5, P248, DOI [10.30630/joiv.5.3.670, DOI 10.30630/JOIV.5.3.670]
   Liu C., 2021, P 2021 3 ACM INT S B, P103, DOI [10.1145/3457337.3457848, DOI 10.1145/3457337.3457848]
   Liu C, 2021, 2021 7TH INTERNATIONAL CONFERENCE ON ENGINEERING AND EMERGING TECHNOLOGIES (ICEET 2021), P797, DOI [10.1109/ICEET53442.2021.9659771, 10.1109/ICME51207.2021.9428266]
   Liu CG, 2022, J ADV INFORM TECHNOL, V13, P213, DOI 10.12720/jait.13.3.213-223
   Liu J, 2019, IEEE ACCESS, V7, P77894, DOI 10.1109/ACCESS.2019.2921624
   Liu Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1601, DOI 10.1145/3368089.3417939
   Lopez-Pintado O., 2017, P INT C BUS PROC MAN
   López-Pintado O, 2022, INFORM SYST, V104, DOI 10.1016/j.is.2020.101622
   López-Pintado O, 2019, IEEE INT ENTERP DIST, P206, DOI 10.1109/EDOC.2019.00033
   López-Pintado O, 2019, LECT NOTES COMPUT SC, V11483, P399, DOI 10.1007/978-3-030-21290-2_25
   López-Pintado O, 2019, SOFTWARE PRACT EXPER, V49, P1162, DOI 10.1002/spe.2702
   Loukil F, 2021, WORLD WIDE WEB, V24, P1645, DOI 10.1007/s11280-021-00901-7
   Lu QH, 2021, SOFTWARE PRACT EXPER, V51, P1059, DOI 10.1002/spe.2931
   Madsen M.F., 2018, FAB, P8
   Mao DH, 2019, IEEE ACCESS, V7, P73131, DOI 10.1109/ACCESS.2019.2920776
   Marchesi L, 2022, IEEE ACCESS, V10, P50363, DOI 10.1109/ACCESS.2022.3171045
   Marchesi L, 2020, BLOCKCHAIN-RES APPL, V1, DOI 10.1016/j.bcra.2020.100002
   Marchesi M, 2018, CEE-SECR'18: PROCEEDINGS OF THE 14TH CENTRAL AND EASTERN EUROPEAN SOFTWARE ENGINEERING CONFERENCE RUSSIA, DOI 10.1145/3290621.3290627
   MARTIN CF, 1988, IEEE SOFTWARE, V5, P46, DOI 10.1109/52.2010
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10957, P523, DOI 10.1007/978-3-662-58387-6_28
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10804, P270, DOI 10.1007/978-3-319-89722-6_11
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Meng B., 2020, CEUR WORKSHOP P, V2749, P35
   Merlec MM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2021), P90, DOI 10.1109/Blockchain53845.2021.00023
   Milani F, 2021, BUS PROCESS MANAG J, V27, P638, DOI 10.1108/BPMJ-06-2020-0263
   Mirkovic A., 2019, ISOS C P SERIES, P10
   Morales-Sandoval M, 2021, PEERJ COMPUT SCI, V7, DOI 10.7717/peerj-cs.731
   Muff F., 2022, 55 HAW INT C SYST SC
   MURRAY Y, 2019, 10 IFIP INT C NEW TE, P1, DOI DOI 10.1109/NTMS.2019.8763832
   Naha RT, 2022, LECT NOTES BUS INF P, V459, P21, DOI 10.1007/978-3-031-16168-1_2
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nakamura H, 2018, LECT NOTES COMPUT SC, V11233, P3, DOI 10.1007/978-3-030-02922-7_1
   Nelaturu K, 2023, IEEE T DEPEND SECURE, V20, P3110, DOI 10.1109/TDSC.2022.3200840
   Nelaturu K, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169428
   Newman D, 2009, J MACH LEARN RES, V10, P1801
   Nguyen CT, 2019, IEEE ACCESS, V7, P85727, DOI 10.1109/ACCESS.2019.2925010
   Nissl M., 2022, CEUR WORKSHOP PROC, V3203, P68
   Norcini JJ, 1999, ACAD MED, V74, P1088, DOI 10.1097/00001888-199910000-00010
   Nousias N., 2022, LECT NOTES BUSINESS, V447
   OASIS Web Services Business Process Execution Language (WSBPEL), 2007, BUS PROC EX LANG
   Olivé A, 2020, LECT NOTES COMPUT SC, V12400, P418, DOI 10.1007/978-3-030-62522-1_31
   Pande C., 2022, EPIC SERIES COMPUTIN, DOI [10.29007/lh9r, DOI 10.29007/LH9R]
   Panduwinata F, 2019, PROCEEDINGS OF 2019 5TH INTERNATIONAL CONFERENCE ON NEW MEDIA STUDIES (CONMEDIA 2019), P89, DOI [10.1109/conmedia46929.2019.8981845, 10.1109/CONMEDIA46929.2019.8981845]
   Park WS, 2021, INT CONF ADV COMMUN, P48, DOI 10.23919/ICACT51234.2021.9370462
   Perrelet S., 2022, HAW INT C SYST SCI H, DOI [10.24251/HICSS.2022.558, DOI 10.24251/HICSS.2022.558]
   Petri C. A, 1962, Kommunikation mit Automaten
   Petrovic N., 2020, Facta Univ. Ser. Automat. Control Robot., V19, P021
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pinna A, 2022, EUR CON SFTWR MTNCE, P1207, DOI 10.1109/SANER53432.2022.00142
   Poels G, 2019, LECT NOTES COMPUT SC, V11787, P70, DOI 10.1007/978-3-030-34146-6_7
   Purnell K, 2022, LECT NOTES ARTIF INT, V13151, P291, DOI 10.1007/978-3-030-97546-3_24
   Qasse IA., 2021, ARXIV
   Qasse I, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P35, DOI 10.1109/BotSE52550.2021.00015
   Regnath Emanuel, 2018, 2018 Forum on Specification & Design Languages (FDL), P5, DOI 10.1109/FDL.2018.8524068
   Rocha H, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P52, DOI 10.1145/3194113.3194123
   Rokis Karlis, 2022, Perspectives in Business Informatics Research: 21st International Conference on Business Informatics Research, BIR 2022, Proceedings. Lecture Notes in Business Information Processing (462), P3, DOI 10.1007/978-3-031-16947-2_1
   Rosa Righi, 2020, BLOCKCHAIN TECHNOLOG, P73, DOI DOI 10.1007/978-981-15-1137-0_4
   Rosa-Bilbao J, 2023, COMPUT STAND INTER, V84, DOI 10.1016/j.csi.2022.103676
   Roussille H, 2022, BIG DATA COGN COMPUT, V6, DOI 10.3390/bdcc6010001
   Rule Markup Initiative, 2005, RULEML W3C RIF WG WI
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Sánchez-Gómez N, 2019, WEBIST: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P445, DOI 10.5220/0008386004450453
   Sánchez-Gómez N, 2020, IEEE ACCESS, V8, P164556, DOI 10.1109/ACCESS.2020.3021502
   Sato N, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P945, DOI 10.1109/Cybermatics_2018.2018.00181
   Schindelmann M., 2020, ZENTRALE TRACKS, P1844, DOI [10.30844/wi_2020_r13-schindelmann, DOI 10.30844/WI_2020_R13-SCHINDELMANN]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Scrocca M., 2022, CORR
   Seebacher S, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P3487
   Seijas Pablo Lamela, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P356, DOI 10.1007/978-3-030-03427-6_27
   Seijas PL, 2020, LECT NOTES COMPUT SC, V12063, P496, DOI 10.1007/978-3-030-54455-3_35
   Sergey I., 2018, CORR
   Shi YW, 2022, SCI PROGRAMMING-NETH, V2022, DOI 10.1155/2022/7792943
   Silva Diogo, 2019, Advances in Enterprise Engineering XII. 8th Enterprise Engineering Working Conference (EEWC 2018). Proceedings. Lecture Notes in Business Information Processing (LNBIP 334), P69, DOI 10.1007/978-3-030-06097-8_5
   Singh A, 2020, COMPUT SECUR, V88, DOI 10.1016/j.cose.2019.101654
   Six Nicolas, 2021, INSIGHT, V24, P25, DOI 10.1002/inst.12358
   Skotnica Marek, 2020, Advances in Enterprise Engineering XIII. 9th Enterprise Engineering Working Conference, EEWC 2019, Revised Papers. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 374), P149, DOI 10.1007/978-3-030-37933-9_10
   Skotnica M., 2020, P 20 CIAO DOCT CONS, V2825
   Skotnica M, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P65, DOI 10.5220/0010229000650075
   Souei WB, 2021, 2021 IEEE 30TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE 2021), P57, DOI 10.1109/WETICE53228.2021.00022
   Spalazzi L, 2023, CONCURR COMP-PRACT E, V35, DOI 10.1002/cpe.6740
   Sterling LS, 2009, ART OF AGENT-ORIENTED MODELING, P1, DOI 10.1080/17482960903207997
   Sturm Christian, 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P261, DOI 10.1007/978-3-030-63479-7_18
   Sturm C., 2018, INT C BUSINESS PROCE, P361
   Sturm C, 2019, FUTURE GENER COMP SY, V100, P19, DOI 10.1016/j.future.2019.05.006
   Suvorov D., 2019, CORR
   Syahputra H., 2019, P 1 ESA C, V9, P229, DOI DOI 10.1007/978-3-030-13693-219
   Tan S, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2713, DOI 10.1145/3318464.3384687
   Teruel MA, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10124280
   The Object Management Group® (OMG), 2016, CAS MAN MOD NOT SPEC
   The Object Management Group® (OMG), BUSINESS PROCESS MOD
   The Object Management Group® (OMG), 2015, UNIFIED MODELING LAN
   The Object Management Group® (OMG), 2022, DEC MOD NOT SPEC
   The Object Management Group® (OMG), INTERACTION FLOW MOD
   The Open Group, 2022, ARCHIMATE 3 1 SPEC
   Tisi M., 2019, STAF 2019, V2405
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Tran A.B., 2018, BPM 2018 DISSERTATIO, P56
   Trebbau S, 2021, LECT NOTES BUS INF P, V426, P167, DOI 10.1007/978-3-030-88583-0_16
   Tsai WT, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P134, DOI 10.1109/SOSE.2019.00028
   Tsiounis K, 2022, EUR CON SFTWR MTNCE, P1227, DOI 10.1109/SANER53432.2022.00145
   Udokwu Chibuzor, 2021, International Journal of Information Technology, P2245, DOI 10.1007/s41870-021-00816-6
   Udokwu C, 2021, ARAB J SCI ENG, V46, P8397, DOI [10.1145/3456126.3456134, 10.1007/s13369-020-05245-4]
   Udokwu C, 2020, 4TH INTERNATIONAL CONFERENCE ON ALGORITHMS, COMPUTING AND SYSTEMS, ICACS 2020, P55, DOI 10.1145/3423390.3426724
   Van den Heuvel WJ, 2021, LECT NOTES BUS INF P, V422, P374, DOI 10.1007/978-3-030-79976-2_25
   Vingerhoets A. S., 2021, COMPLEX SYST INFORM, V149, P26
   Vingerhouts A.S., 2020, CEUR WORKSHOP PROC, V2749, P23
   vom Brocke J, 2015, COMMUN ASSOC INF SYS, V37, P205
   W3C OWL Working Group, 2012, OWL 2 Web Ontology Language Document Overview
   Watson RT, 2020, J DECIS SYST, V29, P129, DOI 10.1080/12460125.2020.1798591
   Weber I, 2016, LECT NOTES COMPUT SC, V9850, P329, DOI 10.1007/978-3-319-45348-4_19
   Webster J, 2002, MIS QUART, V26, pXIII
   Weingärtner T, 2018, 2018 CRYPTO VALLEY CONFERENCE ON BLOCKCHAIN TECHNOLOGY (CVCBT), P55, DOI 10.1109/CVCBT.2018.00012
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wickramarachchi VU, 2019, INT CONF ADV ICT, DOI 10.1109/icter48817.2019.9023652
   Wieland M., 2020, P MOD 2020, VP-302, P45
   Winter R., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1561, DOI 10.1145/1141277.1141638
   Wöhrer M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169399
   Wöhrer M, 2020, IEEE SOFTWARE, V37, P37, DOI 10.1109/MS.2020.2993470
   Wood D.G., 2022, ETHEREUM SECURE DECE
   Yao LM, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P937
   Yu E., 1995, MODELING STRATEGIC R
   YU ESK, 1994, PROC INT CONF SOFTW, P159, DOI 10.1109/ICSE.1994.296775
   Yu ESK., 2010, SOCIAL MODELING REQU
NR 277
TC 5
Z9 5
U1 11
U2 24
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1857
EP 1895
DI 10.1007/s10270-023-01109-1
EA JUN 2023
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001003020000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Sunkle, S
   Saxena, K
   Patil, A
   Kulkarni, V
AF Sunkle, Sagar
   Saxena, Krati
   Patil, Ashwini
   Kulkarni, Vinay
TI AI-driven streamlined modeling: experiences and lessons learned from
   multiple domains
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE AI-driven; Domain modeling; Natural language processing; Information
   extraction; Knowledge graphs
AB Model-driven technologies (MD*), considered beneficial through abstraction and automation, have not enjoyed widespread adoption in the industry. In keeping with the recent trends, using AI techniques might help the benefits of MD* outweigh their costs. Although the modeling community has started using AI techniques, it is, in our opinion, quite limited and requires a change in perspective. We provide such a perspective through five industrial case studies where we use AI techniques in different modeling activities. We discuss our experiences and lessons learned, in some cases evolving purely modeling solutions with AI techniques, and in others considering the AI aids from the beginning. We believe that these case studies can help the researchers and practitioners make sense of various artifacts and data available to them and use applicable AI techniques to enhance suitable modeling activities.
C1 [Sunkle, Sagar; Saxena, Krati; Patil, Ashwini; Kulkarni, Vinay] Tata Consultancy Serv Res, Pune 411013, Maharashtra, India.
C3 Tata Sons; Tata Consultancy Services Limited (TCS)
RP Sunkle, S (corresponding author), Tata Consultancy Serv Res, Pune 411013, Maharashtra, India.
EM sagar.sunkle@tcs.com
RI Patil, Ashwini/ACS-3413-2022
OI Patil, Ashwini/0000-0002-0225-9011; Saxena, Krati/0000-0001-7049-9685
CR Agt Henning, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P610, DOI 10.1007/978-3-642-38709-8_39
   Agt-Rickauer H., 2018, INT C MOD DRIV ENG S, V991, P134
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Alspaugh S, 2019, IEEE T VIS COMPUT GR, V25, P22, DOI 10.1109/TVCG.2018.2865040
   Aβmann U., 2006, Ontologies for Software Engineering and Software Technology, P249, DOI DOI 10.1007/3-540-34518-3_9
   Angel MS, 2018, COMPUT LANG SYST STR, V53, P90, DOI 10.1016/j.cl.2018.02.002
   Annett M, 2017, IEEE COMPUT GRAPH, V37, P92, DOI 10.1109/MCG.2017.1
   Arora C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293454
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Barat Souvik, 2019, 2019 Winter Simulation Conference (WSC), P157, DOI 10.1109/WSC40007.2019.9004694
   Barat Souvik, 2020, Multi-Agent-Based Simulation XX. 20th International Workshop, MABS 2019. Revised Selected Papers. Lecture Notes in Artificial Intelligence Subseries of Lecture Notes in Computer Science (LNAI 12025), P26, DOI 10.1007/978-3-030-60843-9_3
   Barat S., 2021, T INDIAN NATL ACAD E, DOI 10.1007/s41403-020-00197-5
   Barat S, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1802
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Bikakis A, 2008, LECT NOTES ARTIF INT, V5138, P345, DOI 10.1007/978-3-540-87881-0_31
   Bill Robert, 2019, Software & Systems Modeling, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Black D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P252, DOI 10.1109/MODELS-C.2019.00040
   Bordea G, 2020, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2020), P2341
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brambilla M, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P129, DOI 10.1145/3136014.3136033
   Burdusel A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P12, DOI 10.1145/3270112.3270130
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Combemale B, 2021, IEEE SOFTWARE, V38, P71, DOI 10.1109/MS.2020.2995125
   Daniel G, 2020, IEEE ACCESS, V8, P15332, DOI 10.1109/ACCESS.2020.2966919
   Devlin J., 2018, BERT PRE TRAINING DE
   Duan YC, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P327, DOI 10.1109/SERA.2017.7965747
   Eisenberg M, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P82, DOI 10.1109/MODELS50736.2021.00017
   Goldberg Y., 2013, TECHNICAL REPORT
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   He X, 2021, KNOWL-BASED SYST, V212, DOI 10.1016/j.knosys.2020.106622
   Hildebrandt C, 2018, IEEE INT CON AUTO SC, P1079, DOI 10.1109/COASE.2018.8560465
   Hossayni H, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10186325
   John S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a6
   Karam N, 2020, LECT NOTES COMPUT SC, V12124, P129, DOI 10.1007/978-3-030-62327-2_22
   Kharlamov E, 2016, LECT NOTES COMPUT SC, V9982, P325, DOI 10.1007/978-3-319-46547-0_30
   Kholkar D, 2016, ICSOFT-PT: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 2, P60, DOI 10.5220/0006002600600071
   Kuhne T., 2004, DAGSTUHL SEMINAR P, V4101
   Kulkarni V., 2013, EUR C MOD FDN APPL S, P220, DOI DOI 10.1007/978-3-642-39013-5_16
   Lano K., 2020, P 23 ACM IEEE INT C, P1
   Liu Y, 2018, P 2018 C N AM CHAPTE, V1, P965, DOI DOI 10.18653/V1/N18-1088
   Lopes J., 2018, Em: MODELS Workshops, P762
   Matthes F., 2016, 20 IEEE INT ENT DIST
   Mihalcea R., 2004, P 2004 C EMPIRICAL M, P404, DOI DOI 10.3115/1219044.1219064
   Moin A., 2020, P 23 ACM IEEE INT C, P1
   Segura AM, 2016, IEEE INT ENTERP DIST, P79
   García MAM, 2018, ARTIF INTELL MED, V88, P37, DOI 10.1016/j.artmed.2018.04.007
   Mussbacher, 2020, P 23 ACM IEEE INT C, P1
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nityasya MN, 2018, INT CONF ASIAN LANG, P285, DOI 10.1109/IALP.2018.8629216
   Patil A, 2020, IEEE INT ENTERP DIST, P165, DOI 10.1109/EDOC49727.2020.00028
   Pérez-Soler S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a5
   Perianez-Pascual J, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P126, DOI 10.1145/3426425.3426937
   Perzylo A, 2020, IEEE INT C EMERG, P164, DOI 10.1109/ETFA46521.2020.9211943
   Petersen N, 2017, LECT NOTES COMPUT SC, V10588, P350, DOI 10.1007/978-3-319-68204-4_31
   Ringsquandl M, 2017, IEEE INT CONF BIG DA, P1676, DOI 10.1109/BigData.2017.8258105
   Roychoudhury S, 2018, LECT NOTES BUS INF P, V335, P288, DOI 10.1007/978-3-030-02302-7_18
   Roychoudhury S, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P175, DOI 10.1145/3136014.3136018
   Roychoudhury S, 2017, IEEE INT ENTERP DIST, P73, DOI 10.1109/EDOC.2017.19
   Roychoudhury S, 2016, IEEE INT ENTERP DIST, P139
   Roychoudhury S, 2014, IEEE INT ENTERP, P72, DOI 10.1109/EDOCW.2014.19
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Saini R, 2020, INT REQUIR ENG CONF, P334, DOI 10.1109/RE48521.2020.00044
   Saxena K., 2021, P 2 WORKSH DAT SCI H, P1, DOI [10.18653/v1/2021.dash-1.1, DOI 10.18653/V1/2021.DASH-1.1]
   Saxena K., 2021, ISEC 2021 14 INN SOF
   Saxena K, 2020, INT CONF DAT MIN WOR, P589, DOI 10.1109/ICDMW51313.2020.00084
   Steinberger C., 2020, CEUR WORKSHOP PROC, V2716, P3
   streamlined, 2021, MERRIAM WEBSTER DICT
   Sunkle S., 2013, ICSOFT
   Sunkle S., 2020, 26 ACM SIGKDD C KNOW
   Sunkle S., 2015, CSIMQ, V5, P39, DOI [10.7250/csimq.2015-5.04, DOI 10.7250/CSIMQ.2015-5.04]
   Sunkle S., 2020, CEUR WORKSHOP PROC, V2716, P31
   Sunkle S., 2020, ADV DIGITAL ARCHITEC, P223
   Sunkle S, 2021, DATA INTELLIGENCE, V3, P340, DOI 10.1162/dint_a_00096
   Sunkle S, 2020, LECT NOTES COMPUT SC, V12127, P433, DOI 10.1007/978-3-030-49435-3_27
   Sunkle S, 2016, IEEE INT ENTERP DIST, P129
   Sunkle S, 2016, LECT NOTES COMPUT SC, V9974, P381, DOI 10.1007/978-3-319-46397-1_29
   Sunkle S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P436, DOI 10.1109/MODELS.2015.7338275
   Sunkle S, 2015, LECT NOTES COMPUT SC, V9202, P388, DOI 10.1007/978-3-319-21542-6_25
   Sunkle S, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P267, DOI 10.5220/0004435502670274
   Sunkle S, 2013, LECT NOTES COMPUT SC, V8107, P622, DOI 10.1007/978-3-642-41533-3_38
   Tran T., 2017, ABS170407287 CORR
   Vo NH, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P899
   Weigelt S, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4280
   Weikum Gerhard, 2019, Computing and Software Science: State of the Art and Perspectives. Lecture Notes in Computer Science (LNCS 10000), P217, DOI 10.1007/978-3-319-91908-9_13
   Wongsuphasawat Kanit., 2019, Goals, process, and challenges of exploratory data analysis: An interview study
   Yu HZ, 2021, J INF SCI, V47, P783, DOI 10.1177/0165551520932510
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 90
TC 1
Z9 1
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1
EP 23
DI 10.1007/s10270-022-00982-6
EA FEB 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000757918200001
PM 35221860
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Samin, H
   Bencomo, N
   Sawyer, P
AF Samin, Huma
   Bencomo, Nelly
   Sawyer, Peter
TI Decision-making under uncertainty: be aware of your priorities
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Self-Adaptive systems; Priorities; Non-functional requirements;
   Decision-making
ID INTERNET
AB Self-adaptive systems (SASs) are increasingly leveraging autonomy in their decision-making to manage uncertainty in their operating environments. A key problem with SASs is ensuring their requirements remain satisfied as they adapt. The trade-off analysis of the non-functional requirements (NFRs) is key to establish balance among them. Further, when performing the trade-offs it is necessary to know the importance of each NFR to be able to resolve conflicts among them. Such trade-off analyses are often built upon optimisation methods, including decision analysis and utility theory. A problem with these techniques is that they use a single-scalar utility value to represent the overall combined priority for all the NFRs. However, this combined scalar priority value may hide information about the impacts of the environmental contexts on the individual NFRs' priorities, which may change over time. Hence, there is a need for support for runtime, autonomous reasoning about the separate priority values for each NFR, while using the knowledge acquired based on evidence collected. In this paper, we propose Pri-AwaRE, a self-adaptive architecture that makes use of Multi-Reward Partially Observable Markov Decision Process (MR-POMDP) to perform decision-making for SASs while offering awareness of NFRs' priorities. MR-POMDP is used as a priority-aware runtime specification model to support runtime reasoning and autonomous tuning of the distinct priority values of NFRs using a vector-valued reward function. We also evaluate the usefulness of our Pri-AwaRE approach by applying it to two substantial example applications from the networking and IoT domains.
C1 [Samin, Huma; Sawyer, Peter] Aston Univ, Birmingham, W Midlands, England.
   [Bencomo, Nelly] Univ Durham, Durham, England.
C3 Aston University; Durham University
RP Samin, H (corresponding author), Aston Univ, Birmingham, W Midlands, England.
EM h.samin@aston.ac.uk; nelly.bencomo@durham.ac.uk; p.sawyer@aston.ac.uk
RI Bencomo, Nelly/GZL-1379-2022
OI Sawyer, Peter Harvey/0000-0001-8044-2738
FU Lerverhulme Trust [RF2019-548/9]; EPSRC Research Project Twenty20Insight
   [EP/T017627/1]; EPSRC [EP/T017627/1] Funding Source: UKRI
FX We thank LuisH. Garcia Paucar for support on the use and experiments'
   design of the RDMcase study. Thiswork has been partially sponsored by
   The Lerverhulme Trust Fellowship "QuantUn: quantification of uncertainty
   using Bayesian surprises" (Grant No. RF2019-548/9) and the EPSRC
   Research Project Twenty20Insight (Grant No. EP/T017627/1).
CR Abundo M., 2011, 2011 IEEE 19 IEEE IN, P1
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bencomo N., P 19 INT C REQUIREME, P221
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bencomo N, 2013, INT WORK REAL ARTIF, P7, DOI 10.1109/RAISE.2013.6615198
   Bernat G, 2001, IEEE T COMPUT, V50, P308, DOI 10.1109/12.919277
   Bowers KM, 2018, LECT NOTES COMPUT SC, V11036, P182, DOI 10.1007/978-3-319-99241-9_9
   Camara J, 2016, SCI COMPUT PROGRAM, V127, P50, DOI 10.1016/j.scico.2015.12.006
   Chen BH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P676, DOI 10.1145/2568225.2568310
   Cheng Hsien-Te, 1988, PhDthesis
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   de Lemos Rogerio, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P3, DOI 10.1007/978-3-319-74183-3_1
   Edwards R, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P12, DOI 10.1145/3194133.3194142
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   FILIERI A, 2013, ASSURANCES SELF ADAP, V7740, P30, DOI DOI 10.1007/978-3-642-36249-1
   Fredericks E.M., 2015, Mitigating Uncertainty at Design Time and Run Time to Address Assurance for Dynamically Adaptive Systems
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Iftikhar M. Usman, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P76, DOI 10.1109/SEAMS.2017.21
   Ji MW, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P253
   Johnson SR, 2010, J CLIN EPIDEMIOL, V63, P370, DOI 10.1016/j.jclinepi.2009.08.005
   Keeton K, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P59
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Le T.T., 2016, P GRID DISTRIB COMPU, P22
   Le TT, 2017, International Journal of Control and Automation, V10, P233, DOI DOI 10.14257/IJCA.2017.10.5.22
   Lemos R. d., 2013, LECT NOTES COMPUTER
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Liu CM, 2015, IEEE T SYST MAN CY-S, V45, P385, DOI 10.1109/TSMC.2014.2358639
   Maggio M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/3106237.3106247
   Moreno GA, 2018, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3149180
   Morris DE, 2014, ENVIRON MODELL SOFTW, V52, P1, DOI 10.1016/j.envsoft.2013.10.010
   Nguyen TN, 2019, INT SYMP ELECTR ELEC, P141, DOI [10.1109/ISEE2.2019.8921357, 10.1109/isee2.2019.8921357]
   O'Hagan A, 2012, ENVIRON MODELL SOFTW, V36, P35, DOI 10.1016/j.envsoft.2011.03.003
   Parra-Ullauri J.M., 2020, P 12 SYSTEM ANAL MOD, P155
   Paucar LHG, 2019, INT CONF SELF SELF, P11, DOI 10.1109/SASO.2019.00011
   Paucar LHG, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1584, DOI 10.1145/3297280.3299743
   Paucar LHG, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P19, DOI 10.1145/3194133.3195537
   Ramirez AJ, 2011, LECT NOTES COMPUT SC, V6981, P501, DOI 10.1007/978-3-642-24485-8_37
   Roijers D., 2016, OCLC, Patent No. 6893481195
   Roijers DM, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1666
   Roijers DM, 2013, J ARTIF INTELL RES, V48, P67, DOI 10.1613/jair.3987
   Ross S, 2008, J ARTIF INTELL RES, V32, P663, DOI 10.1613/jair.2567
   Roush F.W., 1992, MATH SOC SCI
   Roy B., 1996, Multicriteria Methodology Goes Decision Aiding, DOI DOI 10.1007/978-1-4757-2500-1
   Samin H., 2021, 36 ACM SIGAPP S APPL
   Samin H, 2020, REMOTE DATA MIRRORIN
   Samin H, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P238, DOI 10.1109/SEAMS51251.2021.00039
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Shanavas J, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1770, DOI 10.1109/ICACCI.2014.6968247
   Shani G, 2013, AUTON AGENT MULTI-AG, V27, P1, DOI 10.1007/s10458-012-9200-2
   Soh H., 2011, Proceedings of the 13th annual conference companion on genetic and evolutionary computation, P471
   Soh H, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P713
   Spaan MTJ, 2012, ADAPT LEARN OPTIM, V12, P387
   Spaan MTJ, 2005, J ARTIF INTELL RES, V24, P195, DOI 10.1613/jair.1659
   Sutcliffe A, 2020, REQUIR ENG, V25, P1, DOI 10.1007/s00766-018-0301-6
   Weyns D, 2016, PR INT CONF AUTONOM, P364, DOI 10.1109/ICAC.2016.67
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Xia F, 2012, INT J COMMUN SYST, V25, P1101, DOI 10.1002/dac.2417
   Xin Peng, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P104, DOI 10.1109/RE.2010.22
   Yuen KKF, 2014, APPL SOFT COMPUT, V14, P109, DOI 10.1016/j.asoc.2013.06.028
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 63
TC 7
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2213
EP 2242
DI 10.1007/s10270-021-00956-0
EA JAN 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000746282800001
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Akhigbe, O
   Amyot, D
   Richards, G
   Lessard, L
AF Akhigbe, Okhaide
   Amyot, Daniel
   Richards, Gregory
   Lessard, Lysanne
TI GoRIM: a model-driven method for enhancing regulatory intelligence
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data analytics; Evidence-based decision-making; Goal-oriented modelling;
   GRL; Regulations modelling; Regulatory intelligence
ID DESIGN SCIENCE RESEARCH; SYSTEMS; REQUIREMENTS; FRAMEWORK
AB Regulators are under constant pressure to demonstrate if and how the regulations they administer, which impose many requirements on various systems and processes, achieve intended societal outcomes. Traditionally, regulators have relied on impact assessments, risk analysis, and cost-benefit analysis to assess compliance with regulations. These methods, however, are effort and time intensive and focus on the efficiency of regulatory processes rather than on the effectiveness of the regulatory initiatives meant to improve compliance to regulations and the latter's impact on intended societal outcomes. Goal-oriented modelling and data analytics approaches provide the basis for the development of more sophisticated methods and tools to better address the needs of regulators. This paper introduces the goal-oriented regulatory intelligence method (GoRIM), which enables effective management of regulations through modelling and data analytics. Through continuous monitoring, assessing, and reporting on efficiency and effectiveness aspects, GoRIM is meant to facilitate the analysis of feedback loops between regulations, regulatory initiatives, and societal outcomes. To demonstrate the applicability and perceived usefulness of GoRIM in addressing the first feedback loop between regulations and initiatives, we evaluated it through three case studies involving regulators from different contexts, with positive results. GoRIM extends the concept of regulatory intelligence beyond the analysis of compliance. It also provides practical guidelines and tools to regulators for making, in a timely way, evidence-based decisions related to the addition, modification, or repeal of regulations and related regulatory initiatives. In addition, GoRIM helps better identify software and information needs for enabling such decisions.
C1 [Richards, Gregory; Lessard, Lysanne] Univ Ottawa, Telfer Sch Management, Ottawa, ON, Canada.
   [Amyot, Daniel] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Akhigbe, Okhaide] Univ Ottawa, Govt Canada, Ottawa, ON, Canada.
C3 University of Ottawa; University of Ottawa; University of Ottawa
RP Amyot, D (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
EM oakhigbe@uottawa.ca; damyot@uottawa.ca; richards@telfer.uottawa.ca;
   lysanne.lessard@telfer.uOttawa.ca
RI Amyot, Daniel/AAI-6948-2020; Richards, Gregory/KDN-9655-2024
OI Amyot, Daniel/0000-0003-2414-1791; Richards,
   Gregory/0000-0002-5903-6310; Lessard, Lysanne/0000-0003-3013-0044;
   Richards, Gregory/0000-0001-6585-4152
FU Natural Sciences and Engineering Research Council of Canada's (NSERC);
   University of Ottawa; Interis Consulting/BDO
FX This work was supported by Natural Sciences and Engineering Research
   Council of Canada's (NSERC) through its Discovery Grant Program, Interis
   Consulting/BDO, and the University of Ottawa.
CR Akhigbe, 2018, THESIS U OTTAWA CANA, DOI 10.20381/ruor-22507
   Akhigbe O, 2019, REQUIR ENG, V24, P459, DOI 10.1007/s00766-018-0294-1
   Akhigbe O, 2017, LECT NOTES COMPUT SC, V10650, P77, DOI 10.1007/978-3-319-69904-2_7
   Akhigbe O, 2017, INT CONF RES CHAL, P57, DOI 10.1109/RCIS.2017.7956518
   Akhigbe O, 2015, LECT NOTES BUS INF P, V209, P89, DOI 10.1007/978-3-319-17957-5_6
   Akhigbe O, 2014, LECT NOTES COMPUT SC, V8824, P466, DOI 10.1007/978-3-319-12206-9_40
   Amyot Daniel, 2012, Advances in Conceptual Modeling. Proceedings ER 2012 Workshops: CMS, ECDM-NoCoDA, MoDIC, MORE-BI, RIGiM, SeCoGIS, WISM, P201, DOI 10.1007/978-3-642-33999-8_25
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Amyot D, 2009, LECT NOTES COMPUT SC, V5833, P254, DOI 10.1007/978-3-642-04947-7_31
   [Anonymous], 2013, 6 INT I WORKSH ISTAR
   Aparicio M., 2015, Communication design quarterly review, V3, P7, DOI DOI 10.1145/2721882.2721883
   Badreddin O, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P1, DOI 10.1109/RELAW.2013.6671340
   Barone Daniele, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P502, DOI 10.1007/978-3-642-31095-9_33
   Berg S, 2000, ELECT J, V13, P11, DOI DOI 10.1016/S1040-6190(00)00120-2
   Berg SV, 2016, UTIL POLICY, V43, P4, DOI 10.1016/j.jup.2016.04.013
   Bider I, 2015, SOFTW SYST MODEL, V14, P1159, DOI 10.1007/s10270-014-0412-6
   Boella Guido, 2014, AI Approaches to the Complexity of Legal Systems. AICOL 2013 International Workshops, AICOL-IV@IVR. Revised Selected Papers: LNCS 8929, P130, DOI 10.1007/978-3-662-45960-7_10
   Braatz B, 2014, SOFTW SYST MODEL, V13, P109, DOI 10.1007/s10270-012-0271-y
   Braun E., RELAW 2012, P1, DOI 10.1109/RELAW.2012.6347802
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Burnay C, 2016, SOFTW SYST MODEL, V15, P531, DOI 10.1007/s10270-014-0417-1
   Coglianese Cary., 2012, Measuring Regulatory Performance evaluating the impact of regulation and regulatory policy
   Crain W.M., 2014, The Cost of Federal Regulation to the US Economy, Manufacturing and Small Business
   El Kharbili M., 2012, P 8 AS PAC C CONC MO, V130, P23
   Elgammal A, 2016, SOFTW SYST MODEL, V15, P119, DOI 10.1007/s10270-014-0395-3
   Ellig J., 2011, REGULATION WHATS PRO
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Fan YX, 2018, LECT NOTES COMPUT SC, V11150, P144, DOI 10.1007/978-3-030-01042-3_9
   Fekete D, 2015, FGDB 2015, P409
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Felgate, 2013, WHAT IS REGULATORY I
   Gasmi F., 2008, SO AFRICAN J INFORM, V9, P4, DOI DOI 10.23962/10539/19776
   Gasmi F., 2011, INFRASTRUCTURE REGUL, P61, DOI [10.1142/9789814335744_0003, DOI 10.1142/9789814335744_0003]
   Ghanavati Sepideh, 2010, International Journal of Electronic Business, V8, P260, DOI 10.1504/IJEB.2010.034171
   Ghanavati S., 2007, 10th Workshop of Requirement Engineering, P149
   Ghanavati S, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON TECHNICAL AND LEGAL ASPECTS OF DATA PRIVACY AND SECURITY TELERISE 2015, P26, DOI 10.1109/TELERISE.2015.13
   Ghanavati S, 2014, LECT NOTES COMPUT SC, V8824, P415, DOI 10.1007/978-3-319-12206-9_35
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Griffo C., 2020, ONTOBRAS 2020, P75
   Hahn R.W., 1991, The Yale Journal on Regulation, V8, P233
   Hassine J, 2017, SOFTW SYST MODEL, V16, P279, DOI 10.1007/s10270-015-0460-6
   Head BW, 2008, AUST J PUBL ADMIN, V67, P1, DOI 10.1111/j.1467-8500.2007.00564.x
   Henderson-Sellers B., 2014, Situational Method Engineering
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   Hynes, 2014, REGULATORY INTELLIGE
   IBM, 2016, IBM COGN AN
   Ingolfo S, 2014, LECT NOTES COMPUT SC, V8824, P275, DOI 10.1007/978-3-319-12206-9_22
   International Telecommunication Union, 2018, REC Z 151 10 18 US R
   Islam S, 2011, SOFTW SYST MODEL, V10, P369, DOI 10.1007/s10270-010-0154-z
   Jiang J, 2015, AI SOC, V30, P393, DOI 10.1007/s00146-014-0536-9
   Johnsen SO, 2018, SAFETY AND RELIABILITY - SAFE SOCIETIES IN A CHANGING WORLD, P1791
   Kampars J, 2020, SOFTW SYST MODEL, V19, P371, DOI 10.1007/s10270-019-00756-7
   Knowlton LW., 2012, The logic model guidebook: Better strategies for great results
   Lavalle A, 2019, INT REQUIR ENG CONF, P109, DOI 10.1109/RE.2019.00022
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Mazur, 2010, OECD ENV WORKING PAP, V18, DOI 10.1787/5kmd9j75cf44-en
   Mills A.J., 2010, Encyclopedia of case study research
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nielsen V., 2006, IS IT POSSIBLE MEASU
   OECD, 2014, OCSD ILIBRARY, DOI 10.1787/23116013
   *OMG, 2008, SOFTW SYST PROC ENG
   Parker D., 2012, MEASURING REGULATORY
   Payne G., 2004, KEY CONCEPTS SOCIAL
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Plantin, 2016, INSURERS GO BUST EC
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Rabinia A, 2020, LECT NOTES COMPUT SC, V12045, P124, DOI 10.1007/978-3-030-44429-7_9
   Radaelli C, 2012, 2 OECD
   Rashidi-Tabrizi R, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P34, DOI 10.1109/RELAW.2013.6671344
   Roberts TC, 2020, NAT REV DRUG DISCOV, V19, P673, DOI 10.1038/s41573-020-0075-7
   SAATY TL, 1977, J MATH PSYCHOL, V15, P234, DOI 10.1016/0022-2496(77)90033-5
   Savaya R, 2005, ADMIN SOC WORK, V29, P85, DOI 10.1300/J147v29n02_06
   Shamsaei, 2012, THESIS U OTTAWA CANA, DOI 10.20381/ruor-6171
   Sharifi S., 2020, P 13 INT ISTAR WORKS, V2641, P73
   Soltana G, 2018, SOFTW SYST MODEL, V17, P851, DOI 10.1007/s10270-016-0542-0
   Tawhid R., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P267, DOI 10.1109/RE.2012.6345813
   Trinkenreich B, 2018, INFORM SOFTWARE TECH, V100, P147, DOI 10.1016/j.infsof.2018.04.006
   Venable J, 2016, EUR J INFORM SYST, V25, P77, DOI 10.1057/ejis.2014.36
   vom Brocke J, 2020, J ASSOC INF SYST, V21, P520, DOI 10.17705/1jais.00611
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 86
TC 4
Z9 4
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1613
EP 1641
DI 10.1007/s10270-021-00949-z
EA NOV 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000722970000002
DA 2024-07-18
ER

PT J
AU Besnard, V
   Teodorov, C
   Jouault, F
   Brun, M
   Dhaussy, P
AF Besnard, Valentin
   Teodorov, Ciprian
   Jouault, Frederic
   Brun, Matthias
   Dhaussy, Philippe
TI Unified verification and monitoring of executable UML specifications A
   transformation-free approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-checking; Monitoring; Model interpretation; Embedded systems;
   Observation Language; Synchronous Composition; Model-driven software
   engineering; Software verification; Model checking; Interpreters;
   Embedded software
ID MODEL CHECKING; REACHABILITY; SYSTEMS; LTL
AB The increasing complexity of embedded systems renders software verification more complex, requiring monitoring and formal techniques, like model-checking. However, to use such techniques, system engineers usually need formal expertise to express the software requirements in a formal language. To facilitate the use of model-checking tools by system engineers, our approach uses a UML model interpreter through which the software requirements can directly be expressed in UML as well. Formal requirements are encoded as UML state machines with the transition guards written in a specific observation language, which expresses predicates on the execution of the system model. Each such executable UML specification can model either a Buchi automaton or an observer automaton, and is synchronously composed with the system, to follow its execution during model-checking. Formal verification can continue at runtime for all deterministic observer automata used during offline verification by deploying them on real embedded systems. Our approach has been evaluated on multiple case studies and is illustrated, in this paper, through the user interface model of a cruise-control system. The automata-based verification results are in line with the verification of the equivalent LTL properties. The runtime overhead during monitoring is proportional to the number of monitors.
C1 [Besnard, Valentin; Jouault, Frederic; Brun, Matthias] ESEO TECH, ERIS, Angers, France.
   [Teodorov, Ciprian; Dhaussy, Philippe] Lab STICC UMR CNRS 6285 ENSTA Bretagne, Brest, France.
RP Besnard, V (corresponding author), ESEO TECH, ERIS, Angers, France.
EM valentin.besnard@eseo.fr; ciprian.teodorov@ensta-bretagne.fr;
   frederic.jouault@eseo.fr; matthias.brun@eseo.fr;
   philippe.dhaussy@ensta-bretagne.fr
FU Davidson Consulting; French Directorate General of Armaments (DGA);
   European Regional Development Fund (ERDF) of the EU; Brittany Region;
   Departmental Council of Finistere and Brest Metropole, Cyber-SSI project
FX This work has been partially funded by Davidson Consulting. The authors
   especially thank David Olivier for his advice and industrial feedback.
   This project has been supported by the French Directorate General of
   Armaments (DGA), the European Regional Development Fund (ERDF) of the
   EU, the Brittany Region, the Departmental Council of Finistere and Brest
   Metropole as part of the Cyber-SSI project within the framework of the
   Brittany 2015-2020 State-Region Contract (CPER).
CR [Anonymous], 2017, SEM FDN SUBS EX UML
   [Anonymous], 2017, PREC SEM UML STAT MA
   [Anonymous], 2014, OCL MODELS
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Babiak T, 2012, LECT NOTES COMPUT SC, V7214, P95, DOI 10.1007/978-3-642-28756-5_8
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barringer H., 2003, CSPP25
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Besnard V., 2017, 3 INT WORKSHOP EXECU
   BESNARD V, 2018, ACM IEEE 21TH INT C
   Besnard V, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P161, DOI 10.1109/MODELS.2019.000-5
   Besnard V, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P211, DOI 10.1109/MODELS-C.2019.00035
   Besnard V, 2018, LECT NOTES COMPUT SC, V11176, P519, DOI 10.1007/978-3-030-04771-9_38
   Bochot T, 2009, PROC INT CONF SOFTW, P18, DOI 10.1109/ICSE-COMPANION.2009.5070960
   Bodden E, 2010, LECT NOTES COMPUT SC, V6418, P183, DOI 10.1007/978-3-642-16612-9_15
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Brumbulli M., 2020, 10 EUR C EMB REAL TI
   Chen F, 2004, LECT NOTES COMPUT SC, V3308, P357
   Ciccozzi F., 2014, MODELS CODE BACK ROU
   Ciccozzi F., 2018, Software and Systems Modeling
   de Moura L, 2015, LECT NOTES ARTIF INT, V9195, P378, DOI 10.1007/978-3-319-21401-6_26
   Dhaussy P., 2014, GENIE LOGICIEL, V109
   Diot C., 1994, COMMUNICATION PROTOC
   Drusinsky D, 2000, LECT NOTES COMPUT SC, V1885, P323
   Duret-Lutz A, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P76, DOI 10.1109/MASCOT.2004.1348184
   Ferretti J, 2017, HARDWAREX, V2, P61, DOI 10.1016/j.ohx.2017.09.001
   Gaiser A., OPENACCESS SERIES IN, V13, P18, DOI 10.4230/DROPS.MEMICS.2009.2349
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Halbwachs Nicolas., 1994, Algebraic Methodology and Software Technology (AMAST'93), P83, DOI DOI 10.1007/978-1-4471-3227-1_8
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Hili N, 2020, SOFTW SYST MODEL, V19, P959, DOI 10.1007/s10270-020-00780-y
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Iyenghar P., 2017, MODEL BASED DEBUGGIN, P107, DOI [10.1007/978-1-4614-2266-2_5, DOI 10.1007/978-1-4614-2266-2_5]
   Jouault F., 2020, ACM IEEE 23 INT C MO, DOI 10.1145/3365438.3410967
   Jouault F., 2014, GENIE LOGICIEL, V109, P21
   Kane A., 2015, RUNTIME MONITORING S
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   Kripke Saul A., 1963, Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, V9, P67, DOI DOI 10.1002/MALQ.19630090502
   Leroux L., 2014, GENIE LOGICIEL, V109
   Liu S., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P623
   Mekki Ahmed, 2009, VECOS, P112
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   Ober I, 2004, LECT NOTES COMPUT SC, V2989, P127
   OMG, 2017, UNIFIED MODELING LAN
   OMG, 2017, ACT LANG FDN UML AIF
   Pike L, 2010, LECT NOTES COMPUT SC, V6418, P345, DOI 10.1007/978-3-642-16612-9_26
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Reger G., 2015, TACAS, volume 9035 of LNCS, P596, DOI [10.1007/978-3-662-46681-055, DOI 10.1007/978-3-662-46681-055]
   Rosu G, 2006, LECT NOTES COMPUT SC, V4144, P263, DOI 10.1007/11817963_25
   Rosu G, 2008, LECT NOTES COMPUT SC, V5289, P51
   Tan L, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P487
   Teodorov C, 2017, INT J SOFTW TOOLS TE, V19, P229, DOI 10.1007/s10009-015-0401-2
   Teodorov C, 2016, SOFTW TEST VERIF REL, V26, P516, DOI 10.1002/stvr.1611
   Torres Lopez C., 2019, MULTIVERSE DEBUGGING, DOI 10.4230/LIPIcs.ECOOP.2019.27
NR 58
TC 4
Z9 4
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1825
EP 1855
DI 10.1007/s10270-021-00923-9
EA NOV 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000720806500001
DA 2024-07-18
ER

PT J
AU Van Landuyt, D
   Joosen, W
AF Van Landuyt, Dimitri
   Joosen, Wouter
TI A descriptive study of assumptions in STRIDE security threat modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Threat modeling; Security architecture; Secure development life-cycle
   (SDLC); STRIDE; Security assumptions; Architecture knowledge management
AB Security threat modeling involves the systematic elicitation of plausible threat scenarios, and leads to the identification and articulation of the security requirements in the early stages of software development. Although they are an important source of architectural knowledge, assumptions made in this context are in practice left implicit or at best, documented informally in an unstructured textual format. As guidelines and best practices are lacking, the nature, purpose and impact of assumptions made in this context is generally not well understood. We present a descriptive study of in total 640 textual assumptions made in 96 STRIDE threat models of the same system. The study mainly focuses on the diversity in how assumptions are used in practice, in terms of (i) the role or function of these assumptions in the threat modeling process, (ii) the degree of coupling between the assumptions and the system under analysis, and (iii) the extent to which these assumptions are exclusively specific to security. We observe large differences on all three investigated aspects: practitioners use the mechanism of assumption-making for diverse purposes, but predominantly to exclude certain threats from further analysis, i.e. to scope the analysis effort by steering it away from threat scenarios that are considered less relevant up front. Based on our findings, we argue against the exclusive use of Data Flow Diagrams as the main basis for threat analysis, and in favor of integrating more expressive attacker and trust models which can co-evolve with the threat model and the system.
C1 [Van Landuyt, Dimitri; Joosen, Wouter] Katholieke Univ Leuven, Dept Comp Sci, Imec DistriNet, Heverlee, Belgium.
C3 KU Leuven
RP Van Landuyt, D (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Imec DistriNet, Heverlee, Belgium.
EM dimitri.vanlanduyt@cs.kuleuven.be
OI Van Landuyt, Dimitri/0000-0001-6597-2271
CR [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Basili V. R., 1992, Technical Report
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bazarhanova A., 2020, P 53 HAW INT C SYST
   Bulusu ST, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3098996
   Chandra P., 2009, Software assurance maturity model. a guide to building security into software development. version - 1.0
   Chen Y, 2018, INFORM SOFTWARE TECH, V94, P82, DOI 10.1016/j.infsof.2017.10.003
   Dhillon D, 2011, IEEE SECUR PRIV, V9, P41, DOI 10.1109/MSP.2011.47
   Feilkas M, 2009, INT C PROGRAM COMPRE, P188, DOI 10.1109/ICPC.2009.5090042
   FRANCE RB, 1992, IEEE T SOFTWARE ENG, V18, P329, DOI 10.1109/32.129221
   GARLAN D, 1995, PROC INT CONF SOFTW, P179, DOI 10.1145/225014.225031
   Grimes DA, 2002, LANCET, V359, P145, DOI 10.1016/S0140-6736(02)07373-7
   Haley CB, 2006, REQUIR ENG, V11, P138, DOI 10.1007/s00766-005-0023-4
   Heyman T, 2011, LECT NOTES COMPUT SC, V6542, P167, DOI 10.1007/978-3-642-19125-1_13
   Howard M., 2006, SECURITY DEV LIFECYC
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Lago P, 2005, PROC INT CONF SOFTW, P206
   Lewis G.A., 2004, CMUSEI2004TN021
   Mamun M.A.A., 2011, REV CHALLENGES ASSUM
   Microsoft, 2019, MICR THREAT MOD TOOL
   OWASP, 2017, APPL THREAT MOD
   Piasecki S., 2019, DEFENCE DARK ARTEFAC
   Ramkumar M., 2016, NATL CYBER SUMMIT NC, P8
   Roeller R, 2006, J SYST SOFTWARE, V79, P552, DOI 10.1016/j.jss.2005.10.017
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Shevchenko N., 2018, Tech. rep.
   Shostack A., 2014, Threat Modeling: Designing for Security
   Shostack A., 2008, MODSEC, V413
   Sion L., 2020, AUTOMATED THREAT ANA
   Sion L, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1425, DOI 10.1145/3167132.3167285
   Sion L, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P89, DOI 10.1109/ICSA-C.2018.00032
   Soudani Nadia, 2009, 2009 Fourth International Conference on Risks and Security of Internet and Systems (CRiSIS 2009), P131, DOI 10.1109/CRISIS.2009.5411965
   Steingruebl A, 2009, IEEE SECUR PRIV, V7, P84, DOI 10.1109/MSP.2009.107
   TAO YL, 1991, J SYST SOFTWARE, V16, P29, DOI 10.1016/0164-1212(91)90029-6
   Torr P, 2005, IEEE SECUR PRIV, V3, P66, DOI 10.1109/MSP.2005.119
   Türpe S, 2017, INT REQUIR ENG CONF, P122, DOI 10.1109/RE.2017.13
   Tuma K, 2018, LECT NOTES COMPUT SC, V11048, P347, DOI 10.1007/978-3-030-00761-4_23
   Tuma K, 2018, LECT NOTES COMPUT SC, V10683, P47, DOI 10.1007/978-3-319-72817-9_4
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   Van Landuyt D., SUPPORTING MAT CONSI
   Van Landuyt D, 2014, LECT NOTES COMPUT SC, V8411, P170
   VanLanduyt D., 2019, DESCRIPTIVE STUDY AS
   Viega J., 2005, SESS 05, P1, DOI DOI 10.1145/1082983.1083207
   Williams L, 2018, IEEE SOFTWARE, V35, P76, DOI 10.1109/MS.2018.290110854
   Wuyts K, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1175, DOI 10.1145/3167132.3167414
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
   Yang C, 2017, J SYST SOFTWARE, V134, P190, DOI 10.1016/j.jss.2017.09.007
   Yang C, 2016, J SYST SOFTWARE, V113, P362, DOI 10.1016/j.jss.2015.12.016
NR 50
TC 8
Z9 8
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2311
EP 2328
DI 10.1007/s10270-021-00941-7
EA NOV 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000719682600002
DA 2024-07-18
ER

PT J
AU Henriksson, A
   Zdravkovic, J
AF Henriksson, Aron
   Zdravkovic, Jelena
TI Holistic data-driven requirements elicitation in the big data era
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data-driven requirements engineering; Big data; Requirements modeling;
   Machine learning; Natural language processing
AB Digital transformation stimulates continuous generation of large amounts of digital data, both in organizations and in society at large. As a consequence, there have been growing efforts in the Requirements Engineering community to consider digital data as sources for requirements acquisition, in addition to human stakeholders. The volume, velocity and variety of the data make requirements discovery increasingly dynamic, but also unstructured and complex, which current elicitation methods are unable to consider and manage in a systematic and efficient manner. We propose a framework, in the form of a conceptual metamodel and a method, for continuous and automated acquisition, analysis and aggregation of heterogeneous digital sources that aims to support data-driven requirements elicitation and management. The usability of the framework is partially validated by an in-depth case study from the business sector of video game development.
C1 [Henriksson, Aron; Zdravkovic, Jelena] Stockholm Univ, Dept Comp & Syst Sci, POB 7003, S-16407 Kista, Sweden.
C3 Stockholm University
RP Henriksson, A (corresponding author), Stockholm Univ, Dept Comp & Syst Sci, POB 7003, S-16407 Kista, Sweden.
EM aronhen@dsv.su.se; jelenaz@dsv.su.se
OI Zdravkovic, Jelena/0000-0002-0870-0330
FU Stockholm University
FX Open access funding provided by Stockholm University.
CR Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Cambria E, 2017, IEEE INTELL SYST, V32, P74, DOI 10.1109/MIS.2017.4531228
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Dabrowski J, 2020, LECT NOTES COMPUT SC, V12127, P401, DOI 10.1007/978-3-030-49435-3_25
   Dalpiaz F, 2020, IEEE SOFTWARE, V37, P7, DOI 10.1109/MS.2020.2986047
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Franch X, 2021, INT REQUIR ENG CONF, P402, DOI 10.1109/RE51729.2021.00045
   Franch X, 2018, LECT NOTES COMPUT SC, V10816, P603, DOI 10.1007/978-3-319-91563-0_37
   Franch X, 2018, LECT NOTES COMPUT SC, V10816, P587, DOI 10.1007/978-3-319-91563-0_36
   Henriksson Aron, 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P351, DOI 10.1007/978-3-030-63479-7_24
   Henriksson A, 2015, INT J DATA MIN BIOIN, V13, P395, DOI 10.1504/IJDMB.2015.072766
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Kirikova M, 2017, P INT C COMP SYST TE, P1, DOI DOI 10.1145/3134302.3134304
   Koutsopoulos G., 2020, P PRACT ENT MOD POEM, P40
   Lim S., 2021, SN Computer Science, V2, P1
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Malej W., 2019, P INT C SOFTW ENG SO
   Manrique-Losada B, 2016, LECT NOTES COMPUT SC, V9612, P376, DOI 10.1007/978-3-319-41754-7_37
   Meth H, 2013, INFORM SOFTWARE TECH, V55, P1695, DOI 10.1016/j.infsof.2013.03.008
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Morales-Ramirez I, 2017, LECT NOTES COMPUT SC, V10253, P159, DOI 10.1007/978-3-319-59536-8_11
   Nogueira FA, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P40, DOI 10.5220/0006280400400051
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Oriol M, 2020, SOFTWARE QUAL J, V28, P931, DOI 10.1007/s11219-020-09509-y
   Oriol M, 2018, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2018.00030
   Pastor O, 2017, LECT NOTES COMPUT SC, V10139, P405, DOI 10.1007/978-3-319-51963-0_31
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Quer C, 2018, LECT NOTES BUS INF P, V335, P205, DOI 10.1007/978-3-030-02302-7_13
   van Vliet M, 2020, LECT NOTES COMPUT SC, V12045, P143, DOI 10.1007/978-3-030-44429-7_11
   Voet H, 2019, J MANUF SCI E-T ASME, V141, DOI 10.1115/1.4041948
   Wang ZX, 2019, ADV ENG INFORM, V42, DOI 10.1016/j.aei.2019.100983
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Wüest D, 2019, LECT NOTES COMPUT SC, V11412, P209, DOI 10.1007/978-3-030-15538-4_16
   Xiao M, 2015, COMM COM INF SC, V558, P64, DOI 10.1007/978-3-662-48634-4_5
   Xie HH, 2017, J SYST SOFTWARE, V132, P147, DOI 10.1016/j.jss.2017.06.071
   Zdravkovic J, 2014, LECT NOTES BUS INF P, V197, P193
NR 36
TC 6
Z9 6
U1 0
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1389
EP 1410
DI 10.1007/s10270-021-00926-6
EA OCT 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000706559600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Seymour, LF
   Koopman, A
AF Seymour, Lisa F.
   Koopman, Ashley
TI Analysing factors impacting BPMS performance: a case of a challenged
   technology adoption
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business Process Management; Business Process Management Suites; BPM
   adoption; Information systems performance
ID BUSINESS PROCESS REDESIGN; CRITICAL SUCCESS FACTORS; INNOVATION
   ADOPTION; SYSTEMS; MODEL; ERP; ENTERPRISE; FRAMEWORK; FAILURE; LEGACY
AB Business Process Management Suites (BPMSs) have been adopted in organisations to model, improve and automate business processes as they aim to increase the quality, efficiency and agility of their business processes. Yet, many organisations struggle to achieve the benefits they expected from a BPMS. This interpretive case study in a large South African financial services organisation explains factors found to negatively impact successful BPMS adoption. The paper describes how an IT team struggled to increase process agility with a BPMS in a large legacy application landscape. The dominant factors causing the struggle were the difficulty of integrating with other applications and a lack of governance around BPM. Interesting findings on the difficulties in resourcing BPM IT teams are presented. The impact of BPM strategy, culture and governance on BPM methods, resourcing, data and technology is explained. The BPM literature lacks empirical qualitative case studies and theoretical models. This paper aimed to contribute to both needs. The theoretical contribution of this paper is two models. The first inductively derived explanatory contextual model should be useful for practitioners wanting to adopt a BPMS. Using this study's findings and models from the literature, a second, more generic explanatory model of information system performance is derived for a BPMS.
C1 [Seymour, Lisa F.; Koopman, Ashley] Univ Cape Town, Dept Informat Syst, CITANDA, Private Bag, ZA-7700 Rondebosch, South Africa.
C3 University of Cape Town
RP Seymour, LF (corresponding author), Univ Cape Town, Dept Informat Syst, CITANDA, Private Bag, ZA-7700 Rondebosch, South Africa.
EM Lisa.seymour@uct.ac.za
RI Seymour, Lisa F/AFT-0028-2022
OI Seymour, Lisa F/0000-0001-6704-0021
CR Alter S., 2018, 26 EUR C INF SYST PO
   Alter S, 2013, J ASSOC INF SYST, V14, P72
   André M, 2011, INFORM SOFTWARE TECH, V53, P259, DOI 10.1016/j.infsof.2010.11.011
   Anfara V.A., 2002, Educational Researcher, V31, P28, DOI DOI 10.3102/0013189X031007028
   Anney V.N., 2014, J EMERGING TRENDS ED, V5, P272, DOI DOI 10.3109/08941939.2012.723954
   Asare AK, 2016, J BUS IND MARK, V31, P1, DOI 10.1108/JBIM-02-2015-0022
   Attride-Stirling J., 2016, Qualitative Research, V1, DOI [DOI 10.1177/146879410100100307, 10.1177/146879410100100307]
   Awa HO, 2017, INT J HUM-COMPUT INT, V33, P609, DOI 10.1080/10447318.2016.1265828
   Bagozzi RP, 2007, J ASSOC INF SYST, V8, P243
   Baird A, 2017, J MANAGE INFORM SYST, V34, P664, DOI 10.1080/07421222.2017.1373003
   Bartis E, 2008, EUR J INFORM SYST, V17, P112, DOI 10.1057/ejis.2008.3
   Beckett C, 2018, PAC ASIA J ASSOC INF, V10, P37, DOI 10.17705/1PAIS.10102
   Bloomberg, 2019, WHATEVER HAPPENED BU
   Boell SK, 2014, COMMUN ASSOC INF SYS, V34, P257
   BOWERS J, 1995, ECSCW '95 - PROCEEDINGS OF THE FOURTH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P51
   Brooks Frederick P., 1995, The mythical man-month
   Checkland P., 1998, INFORM SYSTEMS INFOR
   CHEN Y, 2017, EUR J INFORM SYST, V23
   Chindove H, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P483, DOI 10.5220/0006383604830492
   Davenport TH., 2015, HDB BUSINESS PROCESS, V17, P35
   Davison, 2019, EUR C INF SYST ECIS
   De Bruin Tonia., 2005, ECIS 2005 Proceedings of the Thirteenth European Conference on Information Systems, P1
   Depietro R., 1990, PROCESSES TECHNOLOGI, V199, P151
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Dunie D., 2019, GARTNER RES
   Engwall M., 2003, International Journal of Project Management, V21, P403, DOI 10.1016/S0263-7863(02)00113-8
   Frambach RT, 2002, J BUS RES, V55, P163, DOI 10.1016/S0148-2963(00)00152-1
   Gabryelczyk R, 2018, FED CONF COMPUT SCI, P761, DOI 10.15439/2018F211
   Gabryelczyk R, 2018, INFORM SYST MANAGE, V35, P234, DOI 10.1080/10580530.2018.1477299
   Gargeya VB, 2005, BUS PROCESS MANAG J, V11, P501, DOI 10.1108/14637150510619858
   Geeling, 2020, 28 EUR C INF SYST EC
   Gray J, 2016, SOFTW SYST MODEL, V15, P929, DOI 10.1007/s10270-016-0558-5
   Harmon P., 2015, HDB BUSINESS PROCESS, V37, P80
   Harmon P., 2019, BUSINESS PROCESS CHA
   Herrmann T., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P399, DOI 10.1007/s10606-005-9006-8
   Hill J.B., 2007, G152906 GARTN GAS CO
   Houghton Catherine, 2013, Nurse Res, V20, P12
   Jeyaraj A, 2006, J INF TECHNOL-UK, V21, P1, DOI 10.1057/palgrave.jit.2000056
   Kettinger WJ, 1997, MIS QUART, V21, P55, DOI 10.2307/249742
   Kidwell DS., 2016, Financial institutions, markets, and money, V12th
   Kirchmer Mathias., 2017, Strategy Execution in a Digital World
   Koopman Ashley, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P55, DOI 10.1007/978-3-030-49418-6_4
   Kryvinska Natalia, 2012, Journal of Service Science Research, V4, P235, DOI 10.1007/s12927-012-0010-5
   Santana AFL, 2011, LECT NOTES BUS INF P, V81, P46
   Lyytinen K, 2008, EUR J INFORM SYST, V17, P589, DOI 10.1057/ejis.2008.50
   MacLennan E, 2014, INF SYST E-BUS MANAG, V12, P71, DOI 10.1007/s10257-012-0212-x
   Mansar SL, 2007, BUS PROCESS MANAG J, V13, P193, DOI 10.1108/14637150710740455
   Mansar SL, 2005, COMPUT IND, V56, P457, DOI 10.1016/j.compind.2005.01.001
   Marshall MN, 1996, FAM PRACT, V13, P522, DOI 10.1093/fampra/13.6.522
   McGregor, 2020, BUSINESS PROCESS MAN
   Mueller B, 2017, COMMUN ASSOC INF SYS, V41, P349, DOI 10.17705/1CAIS.04117
   Ngai EWT, 2008, COMPUT IND, V59, P548, DOI 10.1016/j.compind.2007.12.001
   Niehaves B, 2014, BUS PROCESS MANAG J, V20, P90, DOI 10.1108/BPMJ-07-2012-0068
   Nijssen M, 2012, INT J HUM RESOUR MAN, V23, P3315, DOI 10.1080/09585192.2012.689160
   Nqampoyi V, 2016, LECT NOTES BUS INF P, V268, P207, DOI 10.1007/978-3-319-49944-4_16
   Oliveira T., 2011, Electronic journal of information systems evaluation, V14, P110
   Perlman Y., 2013, Journal of Management and Strategy, V4, P70, DOI DOI 10.5430/JMS.V4N1P70
   Ram J, 2013, INT J PROD ECON, V144, P157, DOI 10.1016/j.ijpe.2013.01.032
   Recker J, 2019, LECT NOTES BUS INF P, V362, pVII
   Reijers H, 2016, INT J INFORM MANAGE, V36, P126, DOI 10.1016/j.ijinfomgt.2015.08.003
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Rosemann M., 2015, Handbook on Business Process Management 1: Introduction, Methods, and Information Systems, P105, DOI [DOI 10.1007/978-3-642-45100-3_5, https://doi.org/10.1007/978-3-642-45100-3_5]
   Sarker S, 2019, MIS QUART, V43, P695, DOI 10.25300/MISQ/2019/13747
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Saxena, 2018, 26 EUR C INF SYST EC
   Saxena, 2017, UK AC INF SYST UK AC
   Schmiedel T., 2015, Handbook on Business Process Management 2
   Seddon PB., 2015, FORMULATING RES METH, P179, DOI [10.1057/9781137509857_8, DOI 10.1057/9781137509857_8]
   Staehr L, 2012, J ASSOC INF SYST, V13, P424
   Stemberger MI, 2018, BUS PROCESS MANAG J, V24, P425, DOI 10.1108/BPMJ-02-2017-0023
   Tallon PP, 2008, INFORM TECHNOL MANAG, V9, P21, DOI 10.1007/s10799-007-0024-8
   Tanriverdi H, 2007, INFORM SYST RES, V18, P280, DOI 10.1287/isre.1070.0129
   Taudes A, 2000, MIS QUART, V24, P227, DOI 10.2307/3250937
   Thompson G, 2009, LECT NOTES BUS INF P, V29, P1
   THONG JYL, 1995, OMEGA-INT J MANAGE S, V23, P429, DOI 10.1016/0305-0483(95)00017-I
   Trkman P, 2010, INT J INFORM MANAGE, V30, P125, DOI 10.1016/j.ijinfomgt.2009.07.003
   Tumbas, 2013, WIRTSCHAFTSINF, P115
   van der Aalst WMP, 2016, BUS INFORM SYST ENG+, V58, P1, DOI 10.1007/s12599-015-0409-x
   van Oosterhout M., 2017, J INF SYST, V15, P145, DOI [10.1057/palgrave.ejis.3000601, DOI 10.1057/PALGRAVE.EJIS.3000601]
   Vom Brocke J., 2015, Handbook on business process management 1 introduction, methods, and information systems, V2nd
   von Rosing M., 2015, Applying Agile Principles to BPM
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Westland J., 2007, The Project Management Life Cycle: A Complete Step-by-step Methodology
   Witold A., 2012, SEMANTIC TECHNOLOGIE, P259, DOI DOI 10.4018/978-1-60960-126-3.CH013
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 86
TC 4
Z9 4
U1 1
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 869
EP 890
DI 10.1007/s10270-021-00922-w
EA SEP 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0U0DM
UT WOS:000693504300002
DA 2024-07-18
ER

PT J
AU Burdusel, A
   Zschaler, S
   John, S
AF Burdusel, Alexandru
   Zschaler, Steffen
   John, Stefan
TI Automatic generation of atomic multiplicity-preserving search operators
   for search-based model engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven optimisation; Search-based software engineering;
   Multi-objective optimisation
ID ALGORITHMS
AB Recently, there has been increased interest in combining model-driven engineering and search-based software engineering. Such approaches use meta-heuristic search guided by search operators (model mutators and sometimes breeders) implemented as model transformations. The design of these operators can substantially impact the effectiveness and efficiency of the meta-heuristic search. Currently, designing search operators is left to the person specifying the optimisation problem. However, developing consistent and efficient search-operator rules requires not only domain expertise but also in-depth knowledge about optimisation, which makes the use of model-based meta-heuristic search challenging and expensive. In this paper, we propose a generalised approach to automatically generate atomic multiplicity-preserving search operators for a given optimisation problem. This reduces the effort required to specify an optimisation problem and shields optimisation users from the complexity of implementing efficient meta-heuristic search mutation operators. We evaluate our approach with a set of case studies and show that the automatically generated rules are comparable to, and in some cases better than, manually created rules at guiding evolutionary search towards near-optimal solutions.
C1 [Burdusel, Alexandru; Zschaler, Steffen] Kings Coll London, Dept Informat, 30 Aldwych, London WC2B 4BG, England.
   [John, Stefan] Philipps Univ Marburg, Dept Informat, Hans Meerwein Str 6, D-35043 Marburg, Germany.
C3 University of London; King's College London; Philipps University Marburg
RP Burdusel, A (corresponding author), Kings Coll London, Dept Informat, 30 Aldwych, London WC2B 4BG, England.
EM alexandru.burdusel@kcl.ac.uk; szschaler@acm.org;
   stefan.john@uni-marburg.de
FU Engineering and Physical Sciences Research Council (EPSRC) [1805606]
FX This work has been supported by the Engineering and Physical Sciences
   Research Council (EPSRC) under Grant No. 1805606.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Aleti A, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996355
   Alhwikem F.H.M., 2016, MODEVVA MODELS 2016, P54
   [Anonymous], 1998, Technical Report IMM-REP-1998-7
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Burdusel A., AUTOMATIC GENERATION, DOI 10.6084/m9.figshare.12284468
   Burdusel A., 2016, TTC STAF, P33
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P106, DOI 10.1109/MODELS.2019.00-10
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P189, DOI 10.1109/MODELS-C.2019.00032
   Cohen J., 1988, STAT POWER ANAL BEHA
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Doerr B, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1115, DOI 10.1145/2908812.2908891
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Fleck Martin, 2016, P TTC 2016 CEUR WORK, V1758, P1
   Fouquet Francois, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P87, DOI 10.1007/978-3-642-33666-9_7
   Frisch AM, 2008, CONSTRAINTS, V13, P268, DOI 10.1007/s10601-008-9047-y
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hegedus Abel, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P173, DOI 10.1109/ASE.2011.6100051
   Hong LB, 2018, APPL SOFT COMPUT, V62, P162, DOI 10.1016/j.asoc.2017.10.002
   John S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a6
   Kehrer, 2015, THESIS U SIEGEN
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI [10.1145/3239372.3239375, DOI 10.1145/3239372.3239375]
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kosiol J, 2020, LECT NOTES COMPUT SC, V12150, P239, DOI 10.1007/978-3-030-51372-6_14
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mengerink J. G. M., 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P144, DOI 10.1109/ICSME.2016.32
   Moawad Assaad, 2015, 2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD), P1
   Murphy J, 2018, FRONT ARTIF INTEL AP, V305, P221, DOI 10.3233/978-1-61499-906-5-221
   Nagy A.S., 2016, P 9 TRANSF TOOL CONT, P39
   Nassar N, 2017, LECT NOTES COMPUT SC, V10374, P171, DOI 10.1007/978-3-319-61473-1_12
   Rubin K.S., 2012, ESSENTIAL SCRUM
   Schneider S, 2017, LECT NOTES COMPUT SC, V10202, P226, DOI 10.1007/978-3-662-54494-5_13
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Strüber D, 2017, LECT NOTES COMPUT SC, V10374, P121, DOI 10.1007/978-3-319-61473-1_9
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zschaler S, 2016, LECT NOTES COMPUT SC, V9946, P317, DOI 10.1007/978-3-319-50230-4_24
NR 46
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1857
EP 1887
DI 10.1007/s10270-021-00914-w
EA AUG 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000685372300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Almonte, L
   Guerra, E
   Cantador, I
   de Lara, J
AF Almonte, Lissette
   Guerra, Esther
   Cantador, Ivan
   de Lara, Juan
TI Recommender systems in model-driven engineering A systematic mapping
   review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Recommender systems; Systematic mapping review
ID GENERATION; ASSISTANCE
AB Recommender systems are information filtering systems used in many online applications like music and video broadcasting and e-commerce platforms. They are also increasingly being applied to facilitate software engineering activities. Following this trend, we are witnessing a growing research interest on recommendation approaches that assist with modelling tasks and model-based development processes. In this paper, we report on a systematic mapping review (based on the analysis of 66 papers) that classifies the existing research work on recommender systems for model-driven engineering (MDE). This study aims to serve as a guide for tool builders and researchers in understanding the MDE tasks that might be subject to recommendations, the applicable recommendation techniques and evaluation methods, and the open challenges and opportunities in this field of research.
C1 [Almonte, Lissette; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
   [Cantador, Ivan] Univ Autonoma Madrid, Informat Retrieval Grp, Madrid, Spain.
C3 Autonomous University of Madrid; Autonomous University of Madrid
RP Almonte, L (corresponding author), Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
EM lissette.almonte@uam.es; esther.guerra@uam.es; ivan.cantador@uam.es;
   juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Cantador, Ivan/B-9777-2014; Guerra,
   Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278; Almonte,
   Lissette/0000-0002-2448-5570
FU European Union's Horizon 2020 research and innovation programme under
   the Marie Sklodowska-Curie Grant [813884]; Spanish Ministry of Science
   [RTI2018-095255-B-I00, PID2019-108965GB-I00]; R&D programme of Madrid
   [P2018/TCS-4314]
FX We thank the reviewers for their useful comments. This work has been
   funded by the European Union's Horizon 2020 research and innovation
   programme under the Marie Sklodowska-Curie Grant Agreement No. 813884
   (Lowcomote [134]), by the Spanish Ministry of Science (projects MASSIVE,
   RTI2018-095255-B-I00, and FIT, PID2019-108965GB-I00) and by the R&D
   programme of Madrid (Project FORTE, P2018/TCS-4314).
CR Abid SB, 2019, 31 INT C SOFTW ENG K, P355
   Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Adomavicius G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P217, DOI 10.1007/978-0-387-85820-3_7
   Agt-Rickauer H., 2018, INT C MOD DRIV ENG S, V991, P134
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Almonte, 2020, 1 LOWCODE WORKSH LOW
   Angel MS, 2018, COMPUT LANG SYST STR, V53, P90, DOI 10.1016/j.cl.2018.02.002
   Anguel F, 2015, IFIP ADV INF COMM TE, V456, P563, DOI 10.1007/978-3-319-19578-0_46
   [Anonymous], 2017, UML 2 5 1
   [Anonymous], 2016, QVT 1 3
   [Anonymous], 2016, MOF 251
   Aquino ER, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P227, DOI 10.5220/0008938002270236
   Avazpour I, 2015, J VISUAL LANG COMPUT, V28, P195, DOI 10.1016/j.jvlc.2015.02.005
   Barriga A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a13
   Batot E, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P210, DOI 10.1109/MODELS.2017.25
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bellogín A, 2013, INFORM SCIENCES, V221, P142, DOI 10.1016/j.ins.2012.09.039
   Berkovsky Shlomo., 2018, COLLABORATIVE RECOMM
   Bobek S, 2013, AIBP AI IA SPRING, P41
   Borg M, 2017, IEEE T SOFTWARE ENG, V43, P675, DOI 10.1109/TSE.2016.2620458
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Brosch P., 2010, ACM SIGPLAN C OBJ OR, P43
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Burke R., 2000, ENCY LIB INFORM S32, V69, P175, DOI DOI 10.1007/S10115-015-0897-5
   Cai CH, 2019, AUTOMAT SOFTW ENG, V26, P653, DOI 10.1007/s10515-019-00264-4
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Cerqueira ThacianaG. O., 2016, SEKE, P644
   Chowdhury SR, 2014, ACM T INTERNET TECHN, V14, P275, DOI 10.1145/2663500
   Clarisó R, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P74, DOI 10.1109/QUATIC.2018.00020
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   de Oliveira MC, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110420
   Deng SG, 2017, IEEE T CYBERNETICS, V47, P1380, DOI 10.1109/TCYB.2016.2545688
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dyck A., 2013, MDEBE, P12
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P282
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P291
   Elkamel A, 2016, I C COMP SYST APPLIC
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Florez H., 2012, P 6 INT WORKSH MOD E, P27
   France RB, 2012, PROC INT CONF SOFTW, P1471, DOI 10.1109/ICSE.2012.6227059
   Garbe, 2012, INTELLIGENT ASSISTAN
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Gomes P, 2004, LECT NOTES COMPUT SC, V3155, P184
   Grosskopf A, 2010, LECT NOTES BUS INF, V43, P525
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Gunawardana Asela, 2015, Recommender Systems Handbook, P265, DOI [DOI 10.1007/978-1-0716-2197-415, 10.1007/978-1-0716-2197-4_15, DOI 10.1007/978-1-0716-2197-4_15]
   Guy, 2015, RECOMMENDER SYSTEMS, P511, DOI DOI 10.1007/978-1-4899-7637-6_15
   Hayashi S, 2004, LECT NOTES COMPUT SC, V3273, P395
   He XN, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P173, DOI 10.1145/3038912.3052569
   Heinemann L., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P16, DOI 10.1109/RSSE.2012.6233402
   Hornung, 2009, INF TECHNOL SYST, V47, P1380
   Hornung T, 2008, LECT NOTES COMPUT SC, V5231, P265, DOI 10.1007/978-3-540-87877-3_20
   Huh J, 2009, IEEE AUS SOFT ENGR, P111, DOI 10.1109/ASWEC.2009.21
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jannach D, 2016, ACM T INTERACT INTEL, V6, DOI 10.1145/2852082
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahloun F, 2018, PROCEDIA COMPUT SCI, V126, P39, DOI 10.1016/j.procs.2018.07.207
   Kang K. C., 1990, Technical Report
   Kelly S., 2008, Domain-Specific Modeling
   Khider H, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P65, DOI 10.5220/0009155600650075
   Khider H, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P106, DOI 10.1109/SNAMS.2018.8554581
   Kim MC, 2015, SCIENTOMETRICS, V104, P239, DOI 10.1007/s11192-015-1595-5
   Kluza, 2013, CEUR WORKSHOP PROC, V1070
   Knijnenburg Bart P., 2015, Evaluating Recommender Systems with User Experiments, P309, DOI [DOI 10.1007/978-1-4899-7637-69, 10.1007/978-0-387-85820-3, DOI 10.1007/978-1-4899-7637-6_9]
   Kögel S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1026, DOI 10.1145/3106237.3119874
   Kogel S., 2016, CEUR WORKSHOP PROC, V1706, P14
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Koren Y, 2011, RECOMMENDER SYSTEMS HANDBOOK, P145, DOI 10.1007/978-0-387-85820-3_5
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Kuschke T, 2017, 39 INT C SOFTW ENG I, P303
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Ledeczi, 2001, WORKSH INT SIGN PROC, V17, P1
   Li Y, 2014, IEEE T IND INFORM, V10, P502, DOI 10.1109/TII.2013.2258677
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Lops P, 2011, RECOMMENDER SYSTEMS HANDBOOK, P73, DOI 10.1007/978-0-387-85820-3_3
   Maki S., 2015, CONTEXT EXTRACTION R, P151
   Mani S., 2010, P IEEEACM INT C AUTO, P195
   Masthoff J, 2011, RECOMMENDER SYSTEMS HANDBOOK, P677, DOI 10.1007/978-0-387-85820-3_21
   Matikainen P, 2013, IEEE INT CONF ROBOT, P4545, DOI 10.1109/ICRA.2013.6631223
   Mazanek S, 2009, LECT NOTES COMPUT SC, V5795, P322, DOI 10.1007/978-3-642-04425-0_24
   Mendez D., 2020, Contemporary Empirical Methods in Software Engineering, P477
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moha Naouel, 2010, International Journal on Software Tools for Technology Transfer, V12, P273, DOI 10.1007/s10009-010-0150-1
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Segura AM, 2016, IEEE INT ENTERP DIST, P79
   Muram FUL, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P65, DOI 10.1109/QUATIC.2018.00019
   Muslu K, 2012, ACM SIGPLAN NOTICES, V47, P669, DOI 10.1145/2398857.2384665
   Mussbacher, 2020, 23 INT C MOD DRIV EN
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nassar N, 2017, LECT NOTES COMPUT SC, V10374, P171, DOI 10.1007/978-3-319-61473-1_12
   Nechypurenko A., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P143
   Neubauer P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P127, DOI 10.1109/SANER.2017.7884615
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Pati T, 2017, SOFTW SYST MODEL, V16, P499, DOI 10.1007/s10270-015-0465-1
   Paydar S, 2015, AUTOMAT SOFTW ENG, V22, P241, DOI 10.1007/s10515-014-0144-4
   Paydar S, 2015, INFORM SOFTWARE TECH, V57, P543, DOI 10.1016/j.infsof.2014.06.007
   Pazzani MJ, 1999, ARTIF INTELL REV, V13, P393, DOI 10.1023/A:1006544522159
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Quijano-Sánchez L, 2020, INFORM SYST, V92, DOI 10.1016/j.is.2020.101545
   Rabbi F., 2015, P 4 WORKSH AN MOD TR, V1500, P56
   Rabbi F, 2016, INT J INF SYST MODEL, V7, P93, DOI 10.4018/IJISMD.2016070105
   Rangiha M.E., 2015, ENTERPRISE BUSINESS, P68
   Reimann J, 2013, SOFTW SYST MODEL, V12, P579, DOI 10.1007/s10270-012-0243-2
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Saini R, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P714, DOI 10.1109/MODELS-C.2019.00108
   Cuadrado JS, 2018, PROC IEEE ACM INT C, P85, DOI 10.1145/3183440.3183479
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Savary-Leblanc M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P648, DOI 10.1109/MODELS-C.2019.00099
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen S, 2008, LECT NOTES COMPUT SC, V5002, P259
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Sipio, 2020, 1 LOWCODE WORKSH LOW
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Tintarev N, 2012, USER MODEL USER-ADAP, V22, P399, DOI 10.1007/s11257-011-9117-5
   Tisi M., 2019, STAF 2019 COLOCATED
   Tsunoda M., 2005, 17 INT C SOFTW ENG K, P491
   Witt S, 2014, INT REQUIR ENG CONF, P333, DOI 10.1109/RE.2014.6912283
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
NR 135
TC 18
Z9 19
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 249
EP 280
DI 10.1007/s10270-021-00905-x
EA JUL 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000679022500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Abrahao, S
   Insfran, E
   Sluÿters, A
   Vanderdonckt, J
AF Abrahao, Silvia
   Insfran, Emilio
   Sluyters, Arthur
   Vanderdonckt, Jean
TI Model-based intelligent user interface adaptation: challenges and future
   directions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context of use; Intelligent user interface; Machine learning;
   Model-based software engineering; Model-driven engineering; User
   interface adaptation; Conceptual reference framework
AB Adapting the user interface of a software system to the requirements of the context of use continues to be a major challenge, particularly when users become more demanding in terms of adaptation quality. A considerable number of methods have, over the past three decades, provided some form of modelling with which to support user interface adaptation. There is, however, a crucial issue as regards in analysing the concepts, the underlying knowledge, and the user experience afforded by these methods as regards comparing their benefits and shortcomings. These methods are so numerous that positioning a new method in the state of the art is challenging. This paper, therefore, defines a conceptual reference framework for intelligent user interface adaptation containing a set of conceptual adaptation properties that are useful for model-based user interface adaptation. The objective of this set of properties is to understand any method, to compare various methods and to generate new ideas for adaptation. We also analyse the opportunities that machine learning techniques could provide for data processing and analysis in this context, and identify some open challenges in order to guarantee an appropriate user experience for end-users. The relevant literature and our experience in research and industrial collaboration have been used as the basis on which to propose future directions in which these challenges can be addressed.
C1 [Abrahao, Silvia; Insfran, Emilio] Univ Politecn Valencia, Valencia, Spain.
   [Sluyters, Arthur; Vanderdonckt, Jean] Catholic Univ Louvain, Ottignies, Belgium.
C3 Universitat Politecnica de Valencia; Universite Catholique Louvain
RP Abrahao, S (corresponding author), Univ Politecn Valencia, Valencia, Spain.
EM sabrahao@dsic.upv.es
RI Abrahão, Silvia/AAK-6976-2020; Sluÿters, Arthur/GRJ-8000-2022; Insfran,
   Emilio/O-6934-2015; Vanderdonckt, Jean/Q-5854-2018
OI Abrahão, Silvia/0000-0003-3580-2014; Insfran,
   Emilio/0000-0003-0855-5564; Sluyters, Arthur/0000-0003-0804-0106;
   Vanderdonckt, Jean/0000-0003-3275-3333
FU Spanish Ministry of Science, Innovation, and Universities
   [TIN2017-84550-R]; Generalitat Valenciana [AICO/2020/113]; Fonds de la
   Recherche Scientifique - FNRS [n40001931]
FX This work is supported by the Spanish Ministry of Science, Innovation,
   and Universities under Grant No.: TIN2017-84550-R, Adapt@Cloud Project
   and by the Generalitat Valenciana under Grant No.: AICO/2020/113,
   UX-Adapt Project. Arthur Sluyters is funded by the "Fonds de la
   Recherche Scientifique - FNRS" under Grant n40001931.
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Akiki PA, 2016, IEEE T SOFTWARE ENG, V42, P1118, DOI 10.1109/TSE.2016.2553035
   Akiki PA, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2597999
   Alvarez-Cortes Victor., 2009, Human-Computer Interaction, page, P49, DOI DOI 10.5772/7745
   [Anonymous], 1994, ADAPTIVE USER INTERF
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Bouillon L, 2005, THIRD LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P3
   Bouzit S, 2017, INT CONF RES CHAL, P353, DOI 10.1109/RCIS.2017.7956559
   Browne Dermot., 1990, ADAPTIVE USER INTERF
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   CALVARY G., 2002, 1 INT WORKSHOP TASK, P127
   Coutaz J, 2007, LECT NOTES COMPUT SC, V4385, P1
   Dessart Charles-Eric, 2011, P 3 ACM SIGCHI S ENG, P95, DOI 10.1145/1996461.1996501
   Gajos KZ, 2017, IUI'17: PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P301, DOI 10.1145/3025171.3025192
   GARCIAFREY A, 2013, LECT NOTES COMPUTER, V8119, P144
   Horvitz Eric, 1999, P SIGCHI C HUM FACT, P159
   Hui B., 2009, Proceedings of Intelligent User Interfaces (IUI), P287
   ISO, 2019, ISO/IEC 25010-Software Quality Product Standard. standard
   Lavie T, 2010, INT J HUM-COMPUT ST, V68, P508, DOI 10.1016/j.ijhcs.2010.01.004
   López-Jaquero V, 2009, IET SOFTW, V3, P14, DOI 10.1049/iet-sen:20070108
   López-Jaquero V, 2008, LECT NOTES COMPUT SC, V4940, P374
   Martínez-Ruiz FJ, 2006, LA-WEB 06: FOURTH LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P32
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Melchior J, 2012, INT J HUM-COMPUT INT, V28, P760, DOI 10.1080/10447318.2012.715544
   Mezhoudi N, 2021, INT J HUM-COMPUT INT, V37, P445, DOI 10.1080/10447318.2020.1824742
   Motti VG, 2013, INT CONF RES CHAL
   Nicholas J, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0068008
   NIERSTRASZ O, 1995, ACM COMPUT SURV, V27, P262, DOI 10.1145/210376.210389
   Nivethika M, 2013, 2013 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1913, DOI 10.1109/ICACCI.2013.6637474
   Paramythis A, 2010, USER MODEL USER-ADAP, V20, P383, DOI 10.1007/s11257-010-9082-4
   Parasuraman R, 1997, HUM FACTORS, V39, P230, DOI 10.1518/001872097778543886
   Schlee M., 2004, Proceedings of the Working Conference on Advanced Visual Interfaces, AVI '04, P403
   Schneider-Hufschmidt M., 1992, P IFIP WG2 7 WORK C, P225, DOI 10.5555/647103.717564
   Sottet JS, 2008, LECT NOTES COMPUT SC, V4940, P140
   Teevan J, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P237
   Todi Kashyap, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445497
   Van Velsen L, 2008, KNOWL ENG REV, V23, P261, DOI 10.1017/S0269888908001379
   Vanderdonckt J, 2008, LECT NOTES COMPUT SC, V5247, P181, DOI 10.1007/978-3-540-85992-5_16
   Vanderdonckt Q, 2001, P INT WORKSH MULT US
   Vatavu RD, 2012, J AMB INTEL SMART EN, V4, P79, DOI 10.3233/AIS-2012-0137
   Vatavu RD, 2021, PROC ACM HUM COMPUT, DOI [10.1145/3457147, DOI 10.1145/3457147]
   Yigitbas E, 2020, SOFTW SYST MODEL, V19, P1057, DOI 10.1007/s10270-020-00777-7
   Yigitbas E, 2016, LECT NOTES COMPUT SC, V9856, P281, DOI 10.1007/978-3-319-44902-9_18
NR 43
TC 10
Z9 10
U1 3
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1335
EP 1349
DI 10.1007/s10270-021-00909-7
EA JUL 2021
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WH9YE
UT WOS:000673276200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Selic, B
AF Selic, Bran
TI Specifying dynamic software system architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Architectural description languages; Dynamic system structure;
   Architectural design patterns
AB The inexorable penetration of software into practically every facet of modern society calls for sophisticated architectural styles, including ones that can support architectures with dynamically shifting structures, which are required to cope with the dynamics of their applications. With the advent of modern Internet-based systems operating in real time, these types of systems are becoming more widespread. Unfortunately, to date there has been insufficient theoretical work on suitable architectural design patterns for such systems. This work describes two such patterns: the dynamic part pattern and the dynamic role pattern, both of which have been proven in earlier-generation dynamic real-time systems. In addition to describing the form and semantics of these design patterns, this work proposes a notational form suitable for specifying them in component-and-connector-style architecture description languages in a clear and unambiguous manner. The practical application of the two patterns is illustrated using a running example.
C1 [Selic, Bran] Malina Software Corp, Nepean, ON K2J 2J3, Canada.
   [Selic, Bran] Monash Univ, Clayton, Vic 3800, Australia.
C3 Monash University
RP Selic, B (corresponding author), Malina Software Corp, Nepean, ON K2J 2J3, Canada.; Selic, B (corresponding author), Monash Univ, Clayton, Vic 3800, Australia.
EM selic@acm.org
RI Selic, Bran/AAV-7565-2021
OI Selic, Bran/0000-0002-3703-8593
CR Gray J, 2020, SOFTW SYST MODEL, V19, P527, DOI 10.1007/s10270-020-00793-7
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Object Management Group:, 2014, PREC SEM UML COMP ST
   Object Management Group, 2015, OMG document formal/ 2015- 03-01
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
NR 10
TC 3
Z9 3
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 595
EP 605
DI 10.1007/s10270-021-00875-0
EA MAR 2021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000627717800001
DA 2024-07-18
ER

PT J
AU Font, J
   Arcega, L
   Haugen, O
   Cetina, C
AF Font, Jaime
   Arcega, Lorena
   Haugen, Oystein
   Cetina, Carlos
TI Handling nonconforming individuals in search-based model-driven
   engineering: nine generic strategies for feature location in the
   modeling space of the meta-object facility
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering (MDE); Search-based software engineering
   (SBSE); Feature location (FL); Evolutionary algorithm (EA)
ID ALGORITHMS; FAMILIES; TESTS
AB Lately, the model-driven engineering community has been paying more attention to the techniques offered by the search-based software engineering community. However, even though the conformance of models and metamodels is a topic of great interest for the modeling community, the works that address model-related problems through the use of search metaheuristics are not taking full advantage of the strategies for handling nonconforming individuals. The search space can be huge when searching in model artifacts (magnitudes of around 10(150) for models of 500 elements). By handling the nonconforming individuals, the search space can be drastically reduced. In this work, we present a set of nine generic strategies for handling nonconforming individuals that are ready to be applied to model artifacts. The strategies are independent from the application domain and only include constraints derived from the meta-object facility. In addition, we evaluate the strategies with two industrial case studies using an evolutionary algorithm to locate features in models. The results show that the use of the strategies presented can reduce the number of generations needed to reach the solution by 90% of the original value. Generic strategies such as the ones presented in this work could lead to the emergence of more complex fitness functions for searches in models or even new applications for the search metaheuristics in model-related problems.
C1 [Font, Jaime; Arcega, Lorena; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Haugen, Oystein] Ostfold Univ Coll, Dept Informat Technol, Halden, Norway.
C3 Universidad San Jorge; Ostfold University College
RP Font, J (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM jfont@usj.es; larcega@usj.es; oystein.haugen@hiof.no; ccetina@usj.es
RI Arcega, Lorena/AAA-8929-2022; Font, Jaime/S-1243-2018; Cetina,
   Carlos/P-8682-2017
OI Arcega, Lorena/0000-0002-2464-8894; Font, Jaime/0000-0002-2980-5596;
   Cetina, Carlos/0000-0001-8542-5515
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+D+i Plan and
   ERDF funds under the Project ALPS (RTI2018-096411-B-I00). We thank
   William B. Langdon and Justyna Petke because their feedback while Carlos
   stayed at University College London inspired this work.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   [Anonymous], 2016, ENGLISH PORTER2 STEM
   [Anonymous], 2016, APACHE OPENNLP TOOLK
   [Anonymous], 2013, OMG MET FAC MOF VERS
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Back T., 1995, Artificial Evolution, 1063 of Lecture Notes in Computer Science, P320
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Bean J. C., 1994, ORSA Journal on Computing, V6, P154, DOI 10.1287/ijoc.6.2.154
   Bill Robert, 2019, Software & Systems Modeling, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P106, DOI 10.1109/MODELS.2019.00-10
   Cetina C, 2017, J SYST SOFTWARE, V134, P261, DOI 10.1016/j.jss.2017.09.022
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Chootinan P, 2006, COMPUT OPER RES, V33, P2263, DOI 10.1016/j.cor.2005.02.002
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Colanzi TE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P28, DOI 10.1109/CMSBSE.2013.6604433
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dyer, 2016, WATCHMAKER FRAMEWORK
   Faunes M, 2013, LECT NOTES COMPUT SC, V8107, P187, DOI 10.1007/978-3-642-41533-3_12
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleck M, 2016, LECT NOTES COMPUT SC, V9765, P79, DOI 10.1007/978-3-319-42064-6_6
   Font, 2017, THESIS U OSLO NORWAY
   Font Jaime, 2018, IEEE Transactions on Evolutionary Computation, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, SOURCE CODE FEATURE
   Font J., 2015, P 19 INT C SOFTW PRO, P46, DOI DOI 10.1145/2791060.2791085
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Font J, 2017, COMPUT LANG SYST STR, V48, P20, DOI 10.1016/j.cl.2016.08.003
   Font J, 2016, LECT NOTES COMPUT SC, V9679, P39, DOI 10.1007/978-3-319-35122-3_3
   Font Jaime., 2015, P 19 INT C SOFTWARE, P411, DOI [DOI 10.1145/2791060.2793678, 10.1145/2791060.2793678]
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Goldberg D. E., 1985, P 1 INT C GEN ALG TH, P154
   Gomez Juan Jose Cadavid, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P131, DOI 10.1109/ICST.2012.93
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   Johnson D. S., 2002, Data structures, near neighbor searches, and methodology: Fifth and sixth DIMACS implementation challenges. Papers related to the DIMACS challenge on dictionaries and priority queues (1995-1996) and the DIMACS challenge on near neighbor searches (1998-1999), P215
   Joines J. A., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P579, DOI 10.1109/ICEC.1994.349995
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Michalewicz, 1995, P 4 INT INF SYST WOR, P110
   Michalewicz Z, 1995, IEEE C EVOL COMPUTAT, P647, DOI 10.1109/ICEC.1995.487460
   MICHALEWICZ Z, 1995, FROM ANIM ANIMAT, P135
   Moore B, 2004, ECLIPSE DEV USING GR, DOI [10.5555/14076091, DOI 10.5555/14076091]
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Orvosh D., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P548, DOI 10.1109/ICEC.1994.350001
   ORVOSH D, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P650
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Pérez F, 2018, DATA KNOWL ENG, V116, P159, DOI 10.1016/j.datak.2018.06.001
   Polack F.A, 2012, SEARCH BASED MODEL D
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Runarsson TP, 2000, IEEE T EVOLUT COMPUT, V4, P284, DOI 10.1109/4235.873238
   Salton G., 1986, INTRO MODERN INFORM
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Silva D, 2005, J OPER RES SOC, V56, P615
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wille D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P44
   Williams J.R, 2013, THESIS U YORK
   Williams JR, 2011, LECT NOTES COMPUT SC, V6956, P112, DOI 10.1007/978-3-642-23716-4_13
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Yeniay O., 2005, Mathematical & Computational Applications, V10, P45
   Zhang XR, 2012, ASIA PAC SOFWR ENG, P766, DOI 10.1109/APSEC.2012.76
   Zhang YS, 2020, IEEE T MULTIMEDIA, V22, P2844, DOI 10.1109/TMM.2020.2966887
   Zschaler S.:, 2016, ACT 17 C AS ESP INT
NR 89
TC 5
Z9 5
U1 3
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1653
EP 1688
DI 10.1007/s10270-021-00870-5
EA MAR 2021
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000625710800001
DA 2024-07-18
ER

PT J
AU Pilarski, S
   Staniszewski, M
   Bryan, M
   Villeneuve, F
   Varró, D
AF Pilarski, Sebastian
   Staniszewski, Martin
   Bryan, Matthew
   Villeneuve, Frederic
   Varro, Daniel
TI Predictions-on-chip: model-based training and automated deployment of
   machine learning models at runtime For multi-disciplinary design and
   operation of gas turbines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Prediction-at-runtime; Machine learning; Neural networks; Automated
   deployment; Code generation; Gas turbine engines
ID LOAD PREDICTION; CODE GENERATION; NEURAL-NETWORKS
AB The design of gas turbines is a challenging area of cyber-physical systems where complex model-based simulations across multiple disciplines (e.g., performance, aerothermal) drive the design process. As a result, a continuously increasing amount of data is derived during system design. Finding new insights in such data by exploiting various machine learning (ML) techniques is a promising industrial trend since better predictions based on real data result in substantial product quality improvements and cost reduction. This paper presents a method that generates data from multi-paradigm simulation tools, develops and trains ML models for prediction, and deploys such prediction models into an active control system operating at runtime with limited computational power. We explore the replacement of existing traditional prediction modules with ML counterparts with different architectures. We validate the effectiveness of various ML models in the context of three (real) gas turbine bearings using over 150,000 data points for training, validation, and testing. We introduce code generation techniques for automated deployment of neural network models to industrial off-the-shelf programmable logic controllers.
C1 [Pilarski, Sebastian; Varro, Daniel] McGill Univ, Montreal, PQ, Canada.
   [Staniszewski, Martin] Siemens Canada Ltd, Montreal, PQ, Canada.
   [Bryan, Matthew] Siemens Energy Inc, Charlotte, NC USA.
   [Villeneuve, Frederic] Siemens Energy Inc, Orlando, FL USA.
C3 McGill University; Siemens AG; Siemens AG; Siemens AG
RP Pilarski, S (corresponding author), McGill Univ, Montreal, PQ, Canada.
EM sebastian.pilarski@mail.mcgill.ca; martin.staniszewski@siemens.com;
   matthew.bryan@siemens.com; frederic.villeneuve@siemens.com;
   daniel.varro@mcgill.ca
RI Varro, Daniel/AAC-4234-2022
OI Varro, Daniel/0000-0002-8790-252X; Pilarski,
   Sebastian/0000-0002-4942-0757
FU Digital Multidisciplinary Analysis and Design Optimization Platform for
   Aeroderivative GasTurbines [Siemens Ca CRDPJ 513922-17 X-247371, NSERC
   CRDPJ 513922-17 X-247323]
FX This work was partially supported by the Digital Multidisciplinary
   Analysis and Design Optimization Platform for Aeroderivative GasTurbines
   (Siemens Ca CRDPJ 513922-17 X-247371 and NSERC CRDPJ 513922-17 X-247323
   funds).
CR Abadi M., 2015, TENSORFLOW LARGE SCA
   Alexopoulos K, 2020, INT J COMPUT INTEG M, V33, P429, DOI 10.1080/0951192X.2020.1747642
   Ashley T.A.:, 1996, ASME 1996 INT GAS TU, pV005T15A023
   Bencomo N, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P216, DOI 10.1109/MODELS.2019.00005
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Boschert S., 2016, Mechatronic Futures: Challenges and Solutions for Mechatronic Systems and Their Designers, P59, DOI [DOI 10.1007/978-3-319-32156-1_5, DOI 10.1007/978-3-319-32156-15]
   Breuker D, 2014, P ANN HICSS, P758, DOI 10.1109/HICSS.2014.101
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Darvas D, 2016, IEEE INTL CONF IND I, P389, DOI 10.1109/INDIN.2016.7819191
   Fan C, 2017, APPL ENERG, V195, P222, DOI 10.1016/j.apenergy.2017.03.064
   Fast M., 2010, Artificial Neural Networks for Gas Turbine Monitoring
   Huyck B, 2012, MATH PROBL ENG, V2012, DOI 10.1155/2012/912603
   Ibrahem IMA, 2019, ICINCO: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON INFORMATICS IN CONTROL, AUTOMATION AND ROBOTICS, VOL 1, P738, DOI 10.5220/0007928907380745
   Kiakojoori S, 2016, NEURAL COMPUT APPL, V27, P2157, DOI 10.1007/s00521-015-1990-0
   Kingma D. P., 2014, arXiv
   Kusiak A, 2010, APPL ENERG, V87, P925, DOI 10.1016/j.apenergy.2009.09.004
   Kusmenko E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P283, DOI 10.1109/MODELS.2019.00012
   Lafdani EK, 2013, J HYDROL, V478, P50, DOI 10.1016/j.jhydrol.2012.11.048
   Lazzaretto A., 2010, International Journal of Thermodynamics, V4, P173
   Lee EA, 2014, IEEE DES TEST, V31, P8, DOI 10.1109/MDAT.2014.2314600
   Li Q, 2009, APPL ENERG, V86, P2249, DOI 10.1016/j.apenergy.2008.11.035
   Luo WC, 2019, J AMB INTEL HUM COMP, V10, P1129, DOI 10.1007/s12652-018-0946-5
   Madni AM, 2019, SYSTEMS-BASEL, V7, DOI 10.3390/systems7010007
   Mathioudakis K., 1997, ASME 1997 INT GAS TU, pV004T15A011
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Ogaji S, 2006, ADV INFO KNOW PROC, P179
   Pilarski S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P170, DOI 10.1109/MODELS-C.2019.00029
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Püschel M, 2005, P IEEE, V93, P232, DOI 10.1109/JPROC.2004.840306
   Qiao QZ, 2019, PROC CIRP, V81, P1388, DOI 10.1016/j.procir.2019.04.049
   Rauber TW, 2015, IEEE T IND ELECTRON, V62, P637, DOI 10.1109/TIE.2014.2327589
   Sacha K, 2005, LECT NOTES COMPUT SC, V3688, P303
   Sobie C, 2018, MECH SYST SIGNAL PR, V99, P403, DOI 10.1016/j.ymssp.2017.06.025
   Steinberger Markus., 2012, Innovative Parallel Computing, DOI DOI 10.1109/INPAR.2012.6339604
   Thapa D, 2009, INT J CONTROL AUTOM, V7, P165, DOI [10.1007/s12555-009-0202-z, 10.1007/S12555-009-0202-z]
   Thomas G., 2005, LHC GCS MODEL DRIVEN
   Tipping ME, 2001, J MACH LEARN RES, V1, P211, DOI 10.1162/15324430152748236
   TONG SS, 1992, J TURBOMACH, V114, P1, DOI 10.1115/1.2927986
   Torngren M, 2013, CYPHERS CYBER PHYS E
   Viana F.A., 2019, ARXIV PREPRINT ARXIV
   Wang Z, 2020, APPL ENERG, V263, DOI 10.1016/j.apenergy.2020.114683
   Widodo A, 2009, EXPERT SYST APPL, V36, P7252, DOI 10.1016/j.eswa.2008.09.033
NR 42
TC 2
Z9 2
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 685
EP 709
DI 10.1007/s10270-020-00856-9
EA MAR 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000624407100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prasetya, ISWB
   Klomp, R
AF Prasetya, I. S. W. B.
   Klomp, Rick
TI Test model coverage analysis under uncertainty: extended version
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Probabilistic model based testing; Probabilistic test coverage; Testing
   non-deterministic systems
AB In model-based testing, we may have to deal with a non-deterministic model, e.g. because abstraction was applied, or because the software under test itself is non-deterministic. The same test case may then trigger multiple possible execution paths, depending on some internal decisions made by the software. Consequently, performing precise test analyses, e.g. to calculate the test coverage, are not possible.. This can be mitigated if developers can annotate the model with estimated probabilities for taking each transition. A probabilistic model checking algorithm can subsequently be used to do simple probabilistic coverage analysis. However, in practice developers often want to know what the achieved aggregate coverage is, which unfortunately cannot be re-expressed as a standard model checking problem. This paper presents an extension to allow efficient calculation of probabilistic aggregate coverage, and also of probabilistic aggregate coverage in combination with k-wise coverage.
C1 [Prasetya, I. S. W. B.; Klomp, Rick] Univ Utrecht, Utrecht, Netherlands.
C3 Utrecht University
RP Prasetya, ISWB (corresponding author), Univ Utrecht, Utrecht, Netherlands.
EM s.w.b.prasetya@uu.nl
RI Prasetya, Wishnu/AEE-6932-2022
OI Prasetya, Wishnu/0000-0002-3421-4635
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Arnold A., 1994, Finite transition systems
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Belinfante A., 2014, THESIS U TWENTE
   Bringmann Eckard, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P485, DOI 10.1109/ICST.2008.45
   Brinksma, 2003, 1 EUR C MOD DRIV SOF
   Cheung L, 2007, J ACM, V54, DOI 10.1145/1314690.1314693
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Denise A, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P25, DOI 10.1109/ISSRE.2004.2
   Gerhold M, 2018, FORM ASP COMPUT, V30, P77, DOI 10.1007/s00165-017-0440-4
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Heerink L, 2000, INT FED INFO PROC, V48, P211
   Heuillard T, 2003, P 1 EUR C MOD DRIV S, P129
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hwang I, 2010, COMPUT NETW, V54, P1108, DOI 10.1016/j.comnet.2009.10.014
   Jacquemont S, 2009, MACH LEARN, V75, P91, DOI 10.1007/s10994-008-5098-y
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Kanstren T, 2012, ELECTRON P THEOR COM, P58, DOI 10.4204/EPTCS.80.5
   Klomp R, 2019, INT C SOFTW ENG FOR
   Kwiatkowska M., 2002, Process Algebra and Probabilistic Methods. Performance Modeling and Verification. Second Joint International Workshop PAPM-PROBMIV 2002 Proceedings (Lecture Notes in Computer Science Vol.2399), P169
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Nachmanson L., 2004, Software Engineering Notes, V29, P55, DOI 10.1145/1013886.1007520
   Peleska J, 2013, ELECTRON P THEOR COM, P3, DOI 10.4204/EPTCS.111.1
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Prasetya ISWB, 2018, J SYST SOFTWARE, V136, P223, DOI 10.1016/j.jss.2017.07.014
   Prasetya ISWB, 2017, HARDWARE SOFTWARE VE, P241, DOI DOI 10.1007/978-3-319-70389-3
   Pretschner A, 2005, LECT NOTES COMPUT SC, V3472, P281
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Stoelinga M., 2002, Bulletin of the European Association for Theoretical Computer Science, P176
   Stoelinga M, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P251, DOI 10.1109/TASE.2009.26
   Tervoort T., APSL
   Tretmans G.J., 1992, THESIS TWENTE U
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vos T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P407, DOI 10.1109/CSMR-WCRE.2014.6747206
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 40
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 383
EP 403
DI 10.1007/s10270-020-00848-9
EA FEB 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000616465400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Brdjanin, D
   Ilic, S
   Banjac, G
   Banjac, D
   Maric, S
AF Brdjanin, Drazen
   Ilic, Stefan
   Banjac, Goran
   Banjac, Danijela
   Maric, Slavko
TI Automatic derivation of conceptual database models from differently
   serialized business process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE AMADEOS; BPMN; Business process model; Conceptual database model;
   Extractor; Robustness; Serialization; Structural differences
ID TRANSFORMATION; DESIGN; ASTERISK; BPMN
AB The existing tools that aim to derive data models from business process models are typically able to process the source models represented by one single notation and also serialized in one specific way. However, the standards (e.g., BPMN) enable different serialization formats and also provide serialization flexibility, which leads to various implementations of the standard in different modeling tools and results in differently serialized models in practice, which therefore significantly constraints usability of the existing model-driven tools. In this article, we present an approach to automatic derivation of conceptual database models from business process models represented by different notations, with particular focus on differently serialized process models. A deterministic rule-based approach is proposed to overcome the serialization specificities and to enable extraction of characteristic elements from differently serialized process models. Based on the proposed approach, we implemented an online web-based model-driven tool named AMADEOS, which is able to automatically derive conceptual database models from process models represented by different notations and also differently serialized. The experimental results show that the proposed approach and implemented tool enable successful extraction of specific elements from differently serialized process models and enable derivation of the target conceptual database models with very high completeness and precision.
C1 [Brdjanin, Drazen; Banjac, Goran; Banjac, Danijela; Maric, Slavko] Univ Banja Luka, Fac Elect Engn, Patre 5, Banja Luka 78000, Bosnia & Herceg.
   [Ilic, Stefan] Technikon Forschungs & Planungsgesell mbH, Burgpl 3A, A-9500 Villach, Austria.
C3 University of Banja Luka (UNIBL)
RP Brdjanin, D (corresponding author), Univ Banja Luka, Fac Elect Engn, Patre 5, Banja Luka 78000, Bosnia & Herceg.
EM drazen.brdjanin@etf.unibl.org; ilic.st@yandex.com;
   goran.banjac@etf.unibl.org; danijela.banjac@etf.unibl.org;
   slavko.maric@etf.unibl.org
RI Brdjanin, Drazen/AAD-3507-2019
OI Brdjanin, Drazen/0000-0002-0212-6569
CR ALENCAR F, 2003, P WER 2003, P109
   Alencar F.M.R., 2002, P WER 2002, P147
   Alencar F.M.R, 2006, P CIBSE 2006, P125
   Alencar F, 2009, LECT NOTES BUS INF P, V39, P99
   Aguilar JA, 2010, J UNIVERS COMPUT SCI, V16, P2475
   [Anonymous], 2014, DIAGRAM INTERCHANGEA
   [Anonymous], 2013, P 5 INT WORKSH ENT M
   [Anonymous], 2012, P ICSEA
   Banjac D, 2016, AISC, P134
   Becker L. B., 2000, Proceedings Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing (ISORC 2000) (Cat. No. PR00607), P198, DOI 10.1109/ISORC.2000.839529
   Bloomfield T, 2005, LECT NOTES COMPUT SC, V3748, P9
   Boccalatte A., 2000, Proceedings Academia/Industry Working Conference on Research Challenges '00. Next Generation Enterprises: Virtual Organizations and Mobile/Pervasive Technologies. AIWORC'00. (Cat. No.PR00628), P293, DOI 10.1109/AIWORC.2000.843307
   Brambilla M., 2010, ADV SOFTW ENG, V2010
   Brambilla M, 2007, LECT NOTES COMPUT SC, V4735, P375
   Brdjanin D., 2018, 8 INT C WEB INT MIN, P16
   Brdjanin D, 2012, AISC, V186, P31
   Brdjanin D., 2015, ICT INNOVATIONS 2014, V311, P145
   Brdjanin D., 2013, ELECTRONICS, V17, P130
   Brdjanin D., 2011, P EUR 2011, P1
   Brdjanin D, 2019, LECT NOTES BUS INF P, V352, P344, DOI 10.1007/978-3-030-20618-5_23
   Brdjanin D, 2019, COMPUT SCI INF SYST, V16, P657, DOI 10.2298/CSIS181010014B
   Brdjanin D, 2019, SOFTW SYST MODEL, V18, P1859, DOI 10.1007/s10270-018-0672-7
   Brdjanin D, 2017, LECT NOTES BUS INF P, V287, P289, DOI 10.1007/978-3-319-59466-8_18
   Brdjanin D, 2017, LECT NOTES COMPUT SC, V10563, P57, DOI 10.1007/978-3-319-66854-3_5
   Brdjanin D, 2012, COMPUT SCI INF SYST, V9, P249, DOI 10.2298/CSIS110318069B
   Brdjanin D, 2011, LECT NOTES COMPUT SC, V6999, P292, DOI 10.1007/978-3-642-24574-9_37
   Brdjanin D, 2010, LECT NOTES COMPUT SC, V6295, P117, DOI 10.1007/978-3-642-15576-5_11
   Brdjanin D, 2007, EUROCON 2007: THE INTERNATIONAL CONFERENCE ON COMPUTER AS A TOOL, VOLS 1-6, P538, DOI 10.1109/EURCON.2007.4400437
   Castro JF, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P146
   Cheng-Leong A, 1999, INT J PROD RES, V37, P3839, DOI 10.1080/002075499189790
   Cruz Estrela F., 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P49
   Cruz E. F., 2019, NEW PERSPECTIVES INF, P170, DOI DOI 10.4018/978-1-5225-7271-8.CH008
   Cruz EF, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P205, DOI 10.1109/QUATIC.2012.31
   de la Vara J. L., 2011, THESIS
   Dominguez E., 2018, P 20 INT C ENT INF S, P320
   Drozdova M., 2016, INFORM SYSTEMS ARCHI, P193
   Drozdová M, 2012, 10TH IEEE INTERNATIONAL CONFERENCE ON EMERGING ELEARNING TECHNOLOGIES AND APPLICATIONS (ICETA 2012), P81, DOI 10.1109/ICETA.2012.6418619
   Dujlovic I., 2019, IEEE EUROCON 2019, P1
   Espana S, 2011, THESIS
   Essebaa I., 2016, 2016 11 INT C INT SY, P1
   Fernandes J.M., 2006, SOFTW SYST MODEL, V5, P403
   Fouad A., 2011, THESIS
   Geiger M, 2017, ZEUS 2017, V1826, P4
   Geiger M, 2015, 9th IEEE International Symposium on Service-Oriented System Engineering (SOSE 2015), P21, DOI 10.1109/SOSE.2015.22
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Insfran E, 2003, THESIS
   Ivanov S., 2015, PROC BPM 15 DEMO SES, V1418, P35
   Jiang L, 2007, INT REQUIR ENG CONF, P195, DOI 10.1109/RE.2007.32
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khlif W, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P258, DOI 10.5220/0006704302580266
   Koch N., 2006, Proc. Sixth Int'l Conf. Web Eng, P281
   Koch N., 2006, P WORKSH ICWE 06
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Koskinen J, 2001, PROC INT CONF SOFTW, P819, DOI 10.1109/ICSE.2001.919189
   Kriouile A., 2015, Am. J. Softw. Eng. Appl, V4, P1, DOI 10.11648/j.ajsea.20150401.11
   Lingzhi L., 1996, EXPERT SYSTEMS APPL, V10, p373 
   Liu D, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P831
   Martinez Rebollar A, 2008, THESIS
   Nikiforova O, 2013, APPL COMPUT SYST, V14, P19, DOI 10.2478/acss-2013-0003
   Nikiforova O, 2010, LECT NOTES COMPUT SC, V5968, P185
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2015, DIAGR DEF DD V1 1
   OMG, 2015, UN MOD LANG OMG UML
   OMG, 2009, BUS PROC MOD NOT V1
   OMG, 2014, Documents Associated with BPMN 2.0.2
   OMG, 2008, MOF 2 0 QUERY VIEW T
   Rhazali Y., 2018, IAENG INT J COMPUTER, V45, P214
   Rodríguez A, 2007, LECT NOTES COMPUT SC, V4657, P104
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rodríguez A, 2008, LECT NOTES COMPUT SC, V5232, P103, DOI 10.1007/978-3-540-87991-6_15
   Rungworawut W, 2006, PROC WRLD ACAD SCI E, V12, P165
   Santos Maribel Yasmina, 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P107, DOI 10.1109/ICSEA.2010.24
   Santos MY, 2016, DATA WAREHOUSE MODEL, P241
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   Silva L.F, 2006, ELECTR COMMUN, V3, P1
   Srivastava S, 2014, INT J SOFT COMPUTING, V3, P66
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Storrle Harald, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P440
   Strüber D, 2019, SOFTW SYST MODEL, V18, P995, DOI 10.1007/s10270-017-0625-6
   Tan HBK, 2006, IEEE T SOFTWARE ENG, V32, P111, DOI 10.1109/TSE.2006.1599420
   Truscan D, 2004, P ECBS 04, P378
   W3C, 2010, XSL TRANSF XSLT V2 0
   W3C, 2017, XML PATH LANG XPATH
   WRYCZA S, 1990, INFORM SYST, V15, P603, DOI 10.1016/0306-4379(90)90063-U
   Zhang JF, 2010, INT J SOFTW ENG KNOW, V20, P289, DOI 10.1142/S0218194010004736
NR 85
TC 3
Z9 3
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 89
EP 115
DI 10.1007/s10270-020-00808-3
EA JUL 2020
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000544569700001
DA 2024-07-18
ER

PT J
AU Schönig, S
   Ackermann, L
   Jablonski, S
   Ermer, A
AF Schoenig, Stefan
   Ackermann, Lars
   Jablonski, Stefan
   Ermer, Andreas
TI IoT meets BPM: a bidirectional communication architecture for IoT-aware
   process execution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process Execution; Internet of Things; Wearables
ID BUSINESS PROCESSES; SCIENCE RESEARCH; DESIGN SCIENCE; INDUSTRY 4.0; BIG
   DATA; INTERNET; SYSTEMS; THINGS
AB Business processes are frequently executed within application systems that involve humans, computer systems as well as objects of the Internet of Things (IoT). Nevertheless, the usage of IoT technology for system supported process execution is still constrained by the absence of a common system architecture that manages the communication between both worlds. In this paper, we introduce an integrated approach for IoT-aware business process execution that exploits IoT for BPM by providing IoT data in a process-compatible way, providing an IoT data provenance framework, considering IoT data for interaction in a pre-defined process model, and providing wearable user interfaces with context-specific IoT data provision. The approach has been implemented on top of contemporary BPM modeling concepts and system technology. The introduced technique has evaluated extensively in different use cases in industry.
C1 [Schoenig, Stefan] Univ Regensburg, Inst Management Informat Syst, Regensburg, Germany.
   [Ackermann, Lars; Jablonski, Stefan] Univ Bayreuth, Inst Comp Sci, Bayreuth, Germany.
   [Ermer, Andreas] Maxsyma GmbH & Co KG, Floss, Germany.
C3 University of Regensburg; University of Bayreuth
RP Schönig, S (corresponding author), Univ Regensburg, Inst Management Informat Syst, Regensburg, Germany.
EM stefan.schoenig@ur.de; lars.ackermanri@uni-bayreuth.de;
   stefan.jablonski@uni-bayreuth.de; aermer@maxsyma.de
OI Schonig, Stefan/0000-0002-7666-4482
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Ackermann L, 2018, LECT NOTES COMPUT SC, V11230, P154, DOI 10.1007/978-3-030-02671-4_9
   [Anonymous], 2007, CAISE WORKSHOPS DOCT
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   Bousdekis A, 2015, LECT NOTES COMPUT SC, V9416, P137, DOI 10.1007/978-3-319-26138-6_17
   Campos J, 2009, INT J ADV MANUF TECH, V45, P71, DOI 10.1007/s00170-009-1942-x
   Chen HC, 2012, MIS QUART, V36, P1165
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   Dang KN, 2015, INT CONF AWARE SCI, P84, DOI 10.1109/ICAwST.2015.7314025
   Domingos D, 2014, J UNIVERS COMPUT SCI, V20, P1109
   George A.A, 2008, THESIS
   George A.A., 2008, C ADV STUD COLL RES
   Gil D, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16071069
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Heinzemann C, 2019, SOFTW SYST MODEL, V18, P157, DOI 10.1007/s10270-017-0583-z
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Irigaray AA, 2009, J QUAL MAINT ENG, V15, P151, DOI 10.1108/13552510910961101
   Janiesch Christian., 2017, The Internet-of-Things Meets Business Process Management: Mutual Benefits and Challenges
   Kufner T., 2017, DESTECH T ENG TECHNO
   Li Q, 2017, LECT NOTES COMPUT SC, V10034, P16, DOI 10.1007/978-3-319-55961-2_2
   Lu YY, 2017, J AM HEART ASSOC, V6, DOI 10.1161/JAHA.116.004168
   Mahdi R., 2018, ICEIS
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Mateo J.A., 2012, ARXIV12031760
   Meroni G, 2017, CAISE FORUM
   Meroni G., 2017, ICSOC
   Meroni G, 2018, INFORM SYST, V73, P61, DOI 10.1016/j.is.2017.12.009
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P17, DOI 10.1007/s10270-015-0493-x
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P5, DOI 10.1007/s10270-015-0469-x
   Muller A, 2008, RELIAB ENG SYST SAFE, V93, P1165, DOI 10.1016/j.ress.2007.08.006
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Petrasch R., 2015, MAN INN TECHN INT C
   Petrasch Roland, 2016, INT JOINT C COMP SCI
   Pistofidis P, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P390, DOI 10.1109/ICIT.2012.6209969
   Schmidt B, 2010, LECT NOTES BUS INF, V46, P257
   Schobel J, 2016, LECT NOTES COMPUT SC, V10033, P552, DOI 10.1007/978-3-319-48472-3_33
   Schönig S, 2018, LECT NOTES BUS INF P, V318, P19, DOI 10.1007/978-3-319-91704-7_2
   Schönig S, 2018, LECT NOTES BUS INF P, V317, P235, DOI 10.1007/978-3-319-92901-9_20
   Schonig Stefan, 2013, 9th IEEE International Conference on Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom 2013), P60, DOI 10.4108/icst.collaboratecom.2013.254071
   Schonig S., 2018, SIMULTECH, P307
   Schonig S., 2017, OTM WORKSH
   Schonig S., 2019, INFORM SPEKTRUM, V42, P130, DOI [10.1007/s00287-019-01140-x, DOI 10.1007/S00287-019-01140-X]
   Singh M, 2015, INT CONF COMM SYST, P746, DOI 10.1109/CSNT.2015.16
   Soffer P, 2019, INFORM SYST, V81, P181, DOI 10.1016/j.is.2017.11.002
   Sperner K, 2011, LECT NOTES BUS INF P, V95, P166
   van Rensburg SJ, 2015, LECT N MECH ENG, P285, DOI 10.1007/978-3-319-15536-4_24
   Wiemuth M, 2017, INT J COMPUT ASS RAD, V12, P1439, DOI 10.1007/s11548-017-1608-3
   Xu LD, 2018, INT J PROD RES, V56, P2941, DOI 10.1080/00207543.2018.1444806
   Xu LD, 2014, IEEE T IND INFORM, V10, P2233, DOI 10.1109/TII.2014.2300753
NR 49
TC 28
Z9 28
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1443
EP 1459
DI 10.1007/s10270-020-00785-7
EA MAR 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000521020400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Leserf, P
   de Saqui-Sannes, P
   Hugues, J
AF Leserf, Patrick
   de Saqui-Sannes, Pierre
   Hugues, Jerome
TI Trade-off analysis for SysML models using decision points and CSPs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MBSE; Optimization; SysML; CSP; Papyrus; System engineering; Optimal
   architecture design; Decision points
AB The expected benefits of model-based systems engineering (MBSE) include assistance to the system designer in finding the set of optimal architectures and making trade-off analysis. Design objectives such as cost, performance and reliability are often conflicting. The SysML-based methods OOSEM and the ARCADIA method focus on the design and analysis of one alternative of the system. They freeze the topology and the execution platform before optimization starts. Further, their limitation quickly appears when a large number of alternatives were evaluated. The paper avoids these problems and improves trade-off analysis in a MBSE approach by combining the SysML modeling language and so-called "decision points." An enhanced SysML model with decision points shows up alternatives for component redundancy and instance selection and allocation. The same SysML model is extended with constraints and objective functions using an optimization context and parametric diagrams. Then, a representation of a constraint satisfaction multi-criteria objective problem is generated and solved with a combination of solvers. A demonstrator implements the proposed approach into an Eclipse plug-in; it uses the Papyrus and CSP solvers, both are open-source tools. A case study illustrates the methodology: a mission controller for an Unmanned Aerial Vehicle that includes a stereoscopic camera sensor module.
C1 [Leserf, Patrick] ESTACALab, F-53000 Laval, France.
   [de Saqui-Sannes, Pierre; Hugues, Jerome] Univ Toulouse, ISAE SUPAERO, F-31055 Toulouse, France.
C3 Universite de Toulouse; Institut Superieur de l'Aeronautique et de
   l'Espace (ISAE-SUPAERO)
RP Leserf, P (corresponding author), ESTACALab, F-53000 Laval, France.
EM patrick.leserf@estaca.fr; pdss@isae-supaero.fr;
   jerome.hugues@isae-supaero.fr
RI Hugues, Jerome/X-3274-2019; de Saqui-Sannes, Pierre/L-2723-2017
OI Hugues, Jerome/0000-0003-0148-7175; de Saqui-Sannes,
   Pierre/0000-0002-1404-0148
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], 2015, OUT PAP CEA
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2007, OMG UN MOD LANG OMG
   Apt KR, 2006, LOGIC PROGRAMMING US
   CHERN MS, 1992, OPER RES LETT, V11, P309, DOI 10.1016/0167-6377(92)90008-Q
   CHOCO, 2016, CHOC SOLV EMN
   Coit D., 1995, 1995 Proceedings of the Fourth Industrial Engineering Research Conference, P342
   Das I, 1999, STRUCT OPTIMIZATION, V18, P30, DOI 10.1007/s001580050065
   eclipse, 2016, Eclipse Modeling Framework website
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Gent I. P., 2006, ECAI
   Granvilliers L, 2006, ACM T MATH SOFTWARE, V32, P138, DOI 10.1145/1132973.1132980
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Herrera F, 2014, J SYST ARCHITECT, V60, P55, DOI 10.1016/j.sysarc.2013.10.003
   How JP, 2009, IEEE ROBOT AUTOM MAG, V16, P43, DOI 10.1109/MRA.2009.932530
   INCOSE, 2007, SYST ENG HDB GUID SY
   Jussien Narendra., 2008, Open-Source Software for Integer and Contraint Programming, OSSICP'08, P1
   Kang K. C., 1990, Technical Report
   Leserf P., 2015, MDE SOFTWARE DEV CCI, V580
   Leserf P., 2015, P 2015 IEEE 20 C EM, P1
   Limbourg P, 2008, RELIAB ENG SYST SAFE, V93, P815, DOI 10.1016/j.ress.2007.03.032
   MARTE, 2011, UML PROF MARTE MOD A
   Min B.I., 2011, P INT DES ENG TECHN, VVolume 54792, P1361
   Niemeyer G., 2016, CONSTRAINT SOLVING P
   Perez RE, 2012, STRUCT MULTIDISCIP O, V45, P101, DOI 10.1007/s00158-011-0666-3
   Reinhartz-Berger I, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P42, DOI 10.1145/2648511.2648516
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Selic B., 2014, Modeling and Analysis of Real-Time and Embedded Systems with UML and MARTE: Developing Cyber-Physical Systems, P27, DOI [10.1016/B978-0-12-416619-6.00002-X, DOI 10.1016/B978-0-12-416619-6.00002-X]
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   SysML, 2017, SYSML OMG SYSTEMS MO
   Weatherington D., 2005, UNMANNED AIRCRAFT SY
   Wymore A.W., 1993, Model-based Systems Engineering, Vfirst
NR 34
TC 12
Z9 12
U1 2
U2 27
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3265
EP 3281
DI 10.1007/s10270-019-00717-0
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Sedaghatbaf, A
   Azgomi, MA
AF Sedaghatbaf, Ali
   Azgomi, Mohammad Abdollahi
TI SQME: a framework for modeling and evaluation of software architecture
   quality attributes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture; Software quality attributes; Evolutionary
   algorithms; Evidence theory; EV; TOPSIS
ID FUZZY TOPSIS METHODS; OPTIMIZATION; SECURITY; AHP
AB Designing a software architecture that satisfies all quality requirements is a difficult task. To determine whether the requirements are achieved, it is necessary to quantitatively evaluate quality attributes on the architecture model. A good evaluation process should have proper answers for these questions: (1) how to feedback the evaluation results to the architecture model (i.e., improve the architecture based on the evaluation results), (2) how to analyze uncertainties in calculations, and (3) how to handle conflicts that may exist between the quality preferences of stakeholders. In this paper, we introduce SQME as a framework for automatic evaluation of software architecture models. The framework uses evolutionary algorithms for architecture improvement, evidence theory for uncertainty handling, and EV/TOPSIS for making trade-off decisions. To validate the applicability of the framework, a case study is performed, and a software tool is developed to support the evaluation process.
C1 [Sedaghatbaf, Ali] Iran Univ Sci & Technol, Sch Comp Engn, Trustworthy Comp Lab, Tehran, Iran.
   [Azgomi, Mohammad Abdollahi] Iran Univ Sci & Technol, Sch Comp Engn, Hengam St,Resalat Sq, Tehran 1684613114, Iran.
C3 Iran University Science & Technology; Iran University Science &
   Technology
RP Azgomi, MA (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Hengam St,Resalat Sq, Tehran 1684613114, Iran.
EM ali_sedaghat@comp.iust.ac.ir; azgomi@iust.ac.ir
RI Abdollahi Azgomi, Mohammad/D-3734-2009
OI Abdollahi Azgomi, Mohammad/0000-0002-9605-8412; Sedaghatbaf,
   Ali/0000-0002-3424-0067
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], 2016, DICE PROFILES
   Autili M., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, P488, DOI [DOI 10.1145/2025113, 10.1145/2025113.2025199, DOI 10.1145/2025113.2025199]
   Becker S., 2013, ICPE 2013 P 2013 ACM, P311
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bernardi S, 2012, SCI WORLD J, DOI 10.1100/2012/614635
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardi S, 2009, IEEE T IND INFORM, V5, P168, DOI 10.1109/TII.2009.2017201
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Coello CAC, 2010, STUD COMPUT INTELL, V272, P1
   Cuenot P, 2007, IEEE INT C ENG COMP, P353, DOI 10.1109/ICECCS.2007.28
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Dubois D, 2006, COMPUT STAT DATA AN, V51, P47, DOI 10.1016/j.csda.2006.04.015
   Ertugrul I, 2008, INT J ADV MANUF TECH, V39, P783, DOI 10.1007/s00170-007-1249-8
   Esfahani N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P43, DOI 10.1109/ICSE.2013.6606550
   Etemaadi Ramin, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P267, DOI 10.1007/978-3-642-33119-0_20
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Gérard S, 2010, LECT NOTES COMPUT SC, V6100, P361, DOI 10.1007/978-3-642-16277-0_19
   Group O. M., 2009, UML PROF MARTE MOD A
   Halkidis ST, 2008, IEEE T DEPEND SECURE, V5, P129, DOI 10.1109/TDSC.2007.70240
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Lima FR, 2014, APPL SOFT COMPUT, V21, P194, DOI 10.1016/j.asoc.2014.03.014
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Meedeniya I., 2012, Proceedings 2012 2nd International Workshop on Software Engineering for Embedded Systems (SEES), P23, DOI 10.1109/SEES.2012.6225486
   Meedeniya I., 2011, QOSAISARCS, P85
   Meedeniya I, 2012, J SYST SOFTWARE, V85, P2340, DOI 10.1016/j.jss.2012.04.056
   MERLIN PM, 1976, IEEE T COMMUN, V24, P1036, DOI 10.1109/TCOM.1976.1093424
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Petriu Dorina C., 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P219, DOI 10.1007/978-3-642-30982-3_7
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Sedaghatbaf A., 2018, SQME TOOL WEB PAGE
   Sedaghatbaf A, 2018, IET SOFTW
   Sedaghatbaf A, 2016, ISECURE-ISC INT J IN, V8, P141
   Sentz K., 2002, COMBINATION EVIDENCE, V4015
   Shafer G., 2008, DEMPSTER SHAFER THEO, P330
   Shafer G, 1976, MATH THEORY EVIDENCE, DOI DOI 10.1080/00401706.1978.10489628
   Trubiani C., 2013, P 9 INT ACM SIGS C Q, P69
   Walker M, 2013, J SYST SOFTWARE, V86, P2467, DOI 10.1016/j.jss.2013.04.001
   Xu J, 2012, PERFORM EVALUATION, V69, P525, DOI 10.1016/j.peva.2009.11.003
NR 47
TC 6
Z9 6
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2609
EP 2632
DI 10.1007/s10270-018-0684-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900010
DA 2024-07-18
ER

PT J
AU Cabrera, O
   Franch, X
   Marco, J
AF Cabrera, Oscar
   Franch, Xavier
   Marco, Jordi
TI 3LConOnt: a three-level ontology for context modelling in context-aware
   computing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context-aware computing; Service-oriented computing; Context life cycle;
   Context modelling; Context reasoning; Context ontology
AB Context-aware computing is the ability of Services and applications to adapt and react to context changes. Context modelling is a core feature of context-aware computing. Although a lot of research has been made in the field of context modelling, most of the context-aware computing proposals prefer to design their own customized context model instead of reusing an existing one. The main reason for this behaviour is that current context models present some problems concerning reusability, extensibility and adaptation. To contribute solving these issues, in this paper we present 3LConOnt, a three-level context ontology that can be easily reused, extended and adapted for specific or generic purposes. The proposed context model consolidates the context knowledge already available from a modular perspective yielding a clear schema of knowledge reutilization. To do so, we gathered context knowledge pieces from different ontologies to be integrated into standardized and well-defined levels of abstraction and modules. The proposal has been validated considering: (1) reusability, extensibility and adaptation by instantiating different smart scenarios; (2) consistency and reasoning by triggering queries to the proposed model based on some competence questions; and (3) reusability in existing ontologies by importing the needed module or level of the model. Additionally, we also illustrate its usability in context-aware Services by modelling a context-aware framework architecture for supporting the whole context life cycle: acquisition, modelling, reasoning and distribution.
C1 [Cabrera, Oscar] Univ Politecn Cataluna, BarcelonaTech, GESSI, C Jordi Girona 1-3,Omega Bldg S-208, ES-08034 Barcelona, Spain.
   [Franch, Xavier] Univ Politecn Cataluna, BarcelonaTech, GESSI, C Jordi Girona 1-3,Omega Bldg Room 122, ES-08034 Barcelona, Spain.
   [Marco, Jordi] Univ Politecn Cataluna, BarcelonaTech, GESSI, C Jordi Girona 1-3,Omega Bldg Room 109, ES-08034 Barcelona, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Universitat Politecnica de Catalunya
RP Cabrera, O (corresponding author), Univ Politecn Cataluna, BarcelonaTech, GESSI, C Jordi Girona 1-3,Omega Bldg S-208, ES-08034 Barcelona, Spain.
EM ocabrera@essi.upc.edu; franch@essi.upc.edu; jmarco@cs.upc.edu
RI Marco, Jordi/AAA-7309-2021; Franch, Xavier/A-8588-2008
OI Marco, Jordi/0000-0002-0078-7929; 
FU Spanish Project [TIN2016-79269-R]; SUPERSEDE Project - European Union's
   Information and Communication Technologies Programme (H2020) [644018]
FX This work is partially supported by the Spanish Project TIN2016-79269-R
   and the SUPERSEDE Project, funded by the European Union's Information
   and Communication Technologies Programme (H2020) Under Grant Agreement
   No 644018.
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   [Anonymous], 1998, P FOIS
   [Anonymous], 2014, 8 INT C RES CHALL IN
   [Anonymous], CONTEXTUALISED AMBIE
   [Anonymous], 16 IJCAI WORKSH ONT
   [Anonymous], ENCY HUMAN COMPUTER
   [Anonymous], ONLINE ANNEXES 3LCON
   [Anonymous], 5 IJCAI WORKSH BAS O
   [Anonymous], 2007, EUROPEAN C AMBIENT I
   [Anonymous], THESIS
   [Anonymous], 1 WORKSH CONT INF ON
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2009, RADON REPAIR DIAGNOS
   [Anonymous], IEEE COMMUN SURV TUT
   Badidi E., 2011, 2011 International Conference on Innovations in Information Technology (IIT), P35, DOI 10.1109/INNOVATIONS.2011.5893849
   Bazire M, 2005, LECT NOTES ARTIF INT, V3554, P29
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Borst W. N, 1997, Construction of Engineering Ontologies for Knowledge Sharing and Reuse
   Brusa G, 2008, EXPERT SYST, V25, P484, DOI 10.1111/j.1468-0394.2008.00471.x
   Cabrera O, 2017, DATA KNOWL ENG, V110, P24, DOI 10.1016/j.datak.2017.03.008
   Cabrera O, 2015, LECT NOTES COMPUT SC, V9381, P148, DOI 10.1007/978-3-319-25264-3_11
   Cabrera O, 2014, COMPUT SIST, V18, P665, DOI 10.13053/CyS-18-4-2057
   Chen H, 2004, PROCEEDINGS OF MOBIQUITOUS 2004, P258
   Chen H, 2003, KNOWL ENG REV, V18, P197, DOI 10.1017/S0269888904000025
   Corcho O, 2003, DATA KNOWL ENG, V46, P41, DOI 10.1016/S0169-023X(02)00195-7
   Coutaz J, 2005, COMMUN ACM, V48, P49, DOI 10.1145/1047671.1047703
   Curtis J., 2006, FLAIRS C, P652
   De Nicola A, 2009, INFORM SYST, V34, P258, DOI 10.1016/j.is.2008.07.002
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Fernandez M., 1997, Methontology: From ontological art towards ontological engineering
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   Gu T., 2004, P CNDS, P270
   Hella L, 2010, LECT NOTES BUS INF P, V50, P220
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   Hu B, 2007, IEEE ICC, P326, DOI 10.1109/ICC.2007.61
   Kayes ASM, 2015, COMPUT J, V58, P3000, DOI 10.1093/comjnl/bxv034
   Kayes ASM, 2015, INFORM SYST, V53, P253, DOI 10.1016/j.is.2015.03.011
   Kim E, 2006, LECT NOTES COMPUT SC, V3983, P11
   Kishore Rajiv., 2004, Communications of the Association for Information Systems, V14, P158
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Ming Li, 2011, 2011 10th IEEE International Conference on Cognitive Informatics & Cognitive Computing (ICCI-CC 2011), P278, DOI 10.1109/COGINF.2011.6016153
   Niles I., 2001, Formal Ontology in Information Systems. Collected Papers from the Second International Conference, P2, DOI 10.1145/505168.505170
   Noy NF, 2004, SIGMOD REC, V33, P65, DOI 10.1145/1041410.1041421
   Paganelli F, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P838
   Pinto H. S., 2001, Proceedings of the First International Conference on Knowledge Capture, P131, DOI 10.1145/500737.500759
   Prekop P, 2003, COMPUT COMMUN, V26, P1168, DOI 10.1016/S0140-3664(02)00251-7
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Strang T., 2004, A Context Modeling Survey, Workshop on Advanced Context Modeling, Reasoning and Management as Part of UbiComp 2004 - The 6th International Conference on Ubiquitous Computing, P1
   Strimpakou MA, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 2, PROCEEDINGS, P775
   Sudhana KM, 2013, INT CONF COMP COMMUN
   Uschold M., 1995, Towards a methodology for building ontologies
   Wang XH, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P18
   Xiaomeng Su, 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P761
   Xiong ZT, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P13, DOI 10.1109/ITSC.2016.7795524
   Xynogalas S, 2004, J CIRCUIT SYST COMP, V13, P293, DOI 10.1142/S021812660400143X
   Yiwei Cao, 2008, 2008 9th International Conference on Mobile Data Management (MDM '08), P108, DOI 10.1109/MDM.2008.30
NR 59
TC 13
Z9 13
U1 1
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1345
EP 1378
DI 10.1007/s10270-017-0611-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400027
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Soltana, G
   Sannier, N
   Sabetzadeh, M
   Briand, LC
AF Soltana, Ghanem
   Sannier, Nicolas
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
TI Model-based simulation of legal policies: framework, tool support, and
   validation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Legal policies; Simulation; UML profiles; Model-driven code generation;
   Probabilistic data generation
AB Simulation of legal policies is an important decision-support tool in domains such as taxation. The primary goal of legal policy simulation is predicting how changes in the law affect measures of interest, e.g., revenue. Legal policy simulation is currently implemented using a combination of spreadsheets and software code. Such a direct implementation poses a validation challenge. In particular, legal experts often lack the necessary software background to review complex spreadsheets and code. Consequently, these experts currently have no reliable means to check the correctness of simulations against the requirements envisaged by the law. A further challenge is that representative data for simulation may be unavailable, thus necessitating a data generator. A hard-coded generator is difficult to build and validate. We develop a framework for legal policy simulation that is aimed at addressing the challenges above. The framework uses models for specifying both legal policies and the probabilistic characteristics of the underlying population. We devise an automated algorithm for simulation data generation. We evaluate our framework through a case study on Luxembourg's Tax Law.
C1 [Soltana, Ghanem; Sannier, Nicolas; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Soltana, G (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM ghanem.soltana@uni.lu; nicolas.sannier@uni.lu;
   mehrdad.sabetzadeh@uni.lu; lionel.briand@uni.lu
OI Sabetzadeh, Mehrdad/0000-0002-4711-8319
FU CTIE; FNR [FNR/P10/03, FNR9242479]
FX We thank members of Luxembourg's Inland Revenue Office (ACD) and
   National Centre for Information Technologies (CTIE), particularly T.
   Prommenschenkel, L. Balmer, and M. Blau for sharing their valuable time
   and insights with us. Financial support was provided by CTIE and FNR
   under Grants FNR/P10/03 and FNR9242479.
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], P 17 ACM IEEE INT C
   [Anonymous], TECH REP
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], TRSNT20143 U LUX INT
   [Anonymous], STAT AN SYST SAS
   [Anonymous], DIGITAL GOVT E GOVT
   [Anonymous], DEV TAX BENEFIT MODE
   [Anonymous], UML 2 2 SUP SPEC
   [Anonymous], SOFTWARE ABSTRACTION
   [Anonymous], HDB INCOME DISTRIB
   [Anonymous], CAM SIM TOOLK
   [Anonymous], I LEGAL FACTS LEGAL
   [Anonymous], P 17 ACM IEEE INT C
   [Anonymous], STAT AN SYST SAS EC
   [Anonymous], IBM RAT SOFTW ARCH S
   [Anonymous], P 6 IEEE INT C INF T
   [Anonymous], P 18 ACM IEEE INT C
   [Anonymous], JSSM
   [Anonymous], RAT RHAPS DES SYST E
   [Anonymous], 1997, P 1 LEGONT WORKSH LE
   Behjati R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581376
   Bench-Capon T, 2012, ARTIF INTELL LAW, V20, DOI 10.1007/s10506-012-9131-x
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cha S.-H., 2007, Int. J. Math. Models Methods Appl. Sci., V1, P300
   Corder G. W., 2014, Nonparametric statistics: a step-by-step approach, DOI DOI 10.1002/9781118165881
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Di Nardo D, 2015, IEEE ICST WORKSHOP
   Ghanavati S, 2007, LECT NOTES COMPUT SC, V4495, P218
   Hartmann T, 2014, INT CONF SMART GRID, P428, DOI 10.1109/SmartGridComm.2014.7007684
   Hermans F, 2015, EMPIR SOFTW ENG, V20, P549, DOI 10.1007/s10664-013-9296-2
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Islam S, 2011, SOFTW SYST MODEL, V10, P369, DOI 10.1007/s10270-010-0154-z
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Melz E, 2004, LECT NOTES COMPUT SC, V3292, P652
   Mijatov S, 2015, LECT NOTES COMPUT SC, V9154, P173, DOI 10.1007/978-3-319-21215-9_11
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Panko R. R., 1998, Journal of End User Computing, V10, P15
   RISSLAND EL, 1991, INT J MAN MACH STUD, V34, P839, DOI 10.1016/0020-7373(91)90013-W
   Utting M., 2007, PRACTICAL MODEL BASE
   van Engers T.M., 2001, PROC INT C ARTIFICIA, P157
NR 42
TC 10
Z9 10
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 851
EP 883
DI 10.1007/s10270-016-0542-0
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000007
DA 2024-07-18
ER

PT J
AU Fan, ZQ
   Yue, T
   Zhang, L
AF Fan, Zhiqiang
   Yue, Tao
   Zhang, Li
TI SAMM: an architecture modeling methodology for ship command and control
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Architecture modeling; Viewpoint; UML; SysML; Ship command and control
   systems
AB Ship command and control systems (SCCSs) are composed of large-scale, complex, real-time and software-intensive systems that complete tasks collaboratively. Open architecture has been introduced to design the architecture of SCCSs and has been refined into functional architecture (FA) and technical architecture (TA) to meet architectural requirements such as adapting fast-speed functional and technical changes. Thereby, specifying the architecture of SCCSs, based on FA and TA, becomes a key issue for stakeholders of the domain. In this paper, we propose an architecture modeling methodology (named as SAMM) for describing the architecture of SCCSs. SAMM is derived by following a systematic and generic framework-modeling Goal, domain-specific Conceptual model, architecture Viewpoint, and architecture description Language (GCVL), which guides domain experts to devise domain-specific architecture modeling methodologies of large-scale software-intensive systems. SAMM contains three viewpoints and 22 models, and a UML/SysML-based architecture description language. An industrial application of SAMM, along with the subsequent application of the derived SAMM architecture model (i.e., a deployed SCCS prototype) was conducted to evaluate SAMM. A questionnaire-based survey was also conducted to subjectively evaluate whether SAMM meets the modeling goals and its applicability. Results show that SAMM meets all modeling goals and is easy to apply.
C1 [Fan, Zhiqiang; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing 100191, Peoples R China.
   [Fan, Zhiqiang] North China Inst Comp Technol, Beijing 100083, Peoples R China.
   [Yue, Tao] Simula Res Lab, Certus Software V&V Ctr, POB 134, N-1325 Lysaker, Norway.
C3 Beihang University
RP Fan, ZQ (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing 100191, Peoples R China.
EM fanzhiqiang@cse.buaa.edu.cn; tao@simula.no; lily@buaa.edu.cn
RI yue, tao/H-6783-2013; Zhang, Li/AAA-9787-2020
OI Yue, Tao/0000-0003-3262-5577
FU State Key Laboratory of Software Development Environment, China
   [SKLSDE-2012ZX-13]; Research Council of Norway under the Certus SFI
   project; Ministry of Industry and Trade of Norway
FX Z. Q. Fan and L. Zhang acknowledge the support from the Project
   (SKLSDE-2012ZX-13) of the State Key Laboratory of Software Development
   Environment, China. T. Yue acknowledges the funding support from the
   Research Council of Norway under the Certus SFI project and the Ministry
   of Industry and Trade of Norway.
CR [Anonymous], OMG SYST MOD LANG OM
   [Anonymous], 1993, FED INF PRO IN PRESS
   [Anonymous], DAT DISTR SERV REAL
   [Anonymous], 2011, 420102011E ISOIECIEE
   Bohner S, 2007, COMPUTER, V40, P100, DOI 10.1109/MC.2007.191
   Chandhrasekaran Vignesh Kumar, 2009, 2009 9th International Symposium on Communications and Information Technology. ISCIT 2009, P1316, DOI 10.1109/ISCIT.2009.5341096
   Chang E, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P413, DOI 10.1109/ISORC.2001.922866
   Davis M. J., 1997, Software Engineering Notes, V22, P30, DOI 10.1145/258368.258380
   Feiler P. H., 2006, ARCHITECTURE ANAL DE
   France R., 2005, SOFTW SYST MODEL, V4, P1, DOI [10.1007/s10270-005-0078-1, DOI 10.1007/S10270-005-0078-1]
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Guertin N., 2007, NAVAL OPEN ARCHITECT
   Herzum P., 2000, BUSINESS COMPONENT F
   Hilliard R., 2000, IEEESTD14712000
   IBM, RAT SOFTW ARCH
   IBM, RAT TAU
   Ibrahim D, 2006, P IEEE I C SERV COMP, P230, DOI 10.1109/SCC.2006.91
   ISO, 10303112004 ISO
   ISO/ IEC, 1998, 1074611998 ISOIEC
   Jain H., 2003, DATA BASE ADV INF SY, V34, P48
   Karangelen N. E., 1995, Proceedings of the 1995 International Symposium and Workshop on Systems Engineering of Computer Based Systems (Cat. No.95TH8053), P409, DOI 10.1109/ECBS.1995.523970
   Karsai G., 2009, 9 OOPSLA WORKSH DOM
   Kennaley M, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P299, DOI 10.1109/WICSA.2008.27
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Ling S, 2000, IEEE SYS MAN CYBERN, P3039, DOI 10.1109/ICSMC.2000.884464
   Mayer R., 1995, INFORM INTEGRATION C
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mei H, 2002, LECT NOTES COMPUT SC, V2495, P38
   Ministry of Defence of the United Kingdom, MIN DEF ARCH FRAM MO
   Mylopoulos J., CONCEPTUAL MODELLING
   NASA, 1995, NASA SYST ENG HDB, P142
   NATO Consultation Command and Control Board, 2007, NATO ARCH FRAM V3
   OMG, 2006, COMM OBJ REQ BROK AR
   OMG, OBJ CONSTR LANG 2 0
   Park J, 2008, INT WKSHP FUT TR DIS, P37, DOI 10.1109/FTDCS.2008.24
   Sandia National Laboratories, 1992, SAND SOFTW GUID, V5
   Shames P., 2006, FRAMEWORK MODELING S
   Strei T., 2003, 6 ANN SYST ENG C
   Wohlin C., 2012, Experimentation in Software Engineering
   Zachman International, 2008, ZACHM FRAM OFF CONC
   Zachman J., 2008, The Zachman Framework: The Official Concise Definition
   Zhigiang Fan, 2013, Information Technology Journal, V12, P2111, DOI 10.3923/itj.2013.2111.2120
   Zhiqiang F., 2013, 28 S APPL C IN PRESS
NR 43
TC 1
Z9 1
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 71
EP 118
DI 10.1007/s10270-013-0393-x
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200005
DA 2024-07-18
ER

PT J
AU Soleimanifard, S
   Gurov, D
   Huisman, M
AF Soleimanifard, Siavash
   Gurov, Dilian
   Huisman, Marieke
TI Procedure-modular specification and verification of temporal safety
   properties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Temporal logic; Model checking; Maximal models
ID PROGRAMS
AB This paper describes ProMoVer, a tool for fully automated procedure-modular verification of Java programs equipped with method-local and global assertions that specify safety properties of sequences of method invocations. Modularity at the procedure-level is a natural instantiation of the modular verification paradigm, where correctness of global properties is relativized on the local properties of the methods rather than on their implementations. Here, it is based on the construction of maximal models for a program model that abstracts away from program data. This approach allows global properties to be verified in the presence of code evolution, multiple method implementations (as arising from software product lines), or even unknown method implementations (as in mobile code for open platforms). ProMoVer automates a typical verification scenario for a previously developed tool set for compositional verification of control flow safety properties, and provides appropriate pre- and post-processing. Both linear-time temporal logic and finite automata are supported as formalisms for expressing local and global safety properties, allowing the user to choose a suitable format for the property at hand. Modularity is exploited by a mechanism for proof reuse that detects and minimizes the verification tasks resulting from changes in the code and the specifications. The verification task is relatively light-weight due to support for abstraction from private methods and automatic extraction of candidate specifications from method implementations. We evaluate the tool on a number of applications from the domains of Java Card and web-based application.
C1 [Soleimanifard, Siavash; Gurov, Dilian] KTH Royal Inst Technol, Stockholm, Sweden.
   [Huisman, Marieke] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 Royal Institute of Technology; University of Twente
RP Soleimanifard, S (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM siavashs@csc.kth.se
RI Gurov, Dilian/ITU-2606-2023
OI Gurov, Dilian/0000-0002-0074-8786; Huisman, Marieke/0000-0003-4467-072X
FU ContraST project of the Swedish Research Council VR; EU FET
   [FP7-ICT-2009-3 HATS]; ERC [258405]; European Research Council (ERC)
   [258405] Funding Source: European Research Council (ERC)
FX Soleimanifard's work is funded by the ContraST project of the Swedish
   Research Council VR, and Gurov's work by the EU FET project
   FP7-ICT-2009-3 HATS. Huisman's work is partially funded by ERC grant
   258405 for the VerCors project.
CR Alur R, 2004, LECT NOTES COMPUT SC, V2988, P467
   Alur R, 2007, IEEE S LOG, P151, DOI 10.1109/LICS.2007.19
   Alur R, 2010, LECT NOTES COMPUT SC, V5944, P45, DOI 10.1007/978-3-642-11319-2_7
   Amighi Afshin, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P33, DOI 10.1007/978-3-642-33826-7_3
   Burkart O., 2000, HDB PROCESS ALGEBRA, P545
   Cleaveland R., 1990, INT S PROT SPEC TEST, P287
   Dam M., 1992, LNCS, V581, P145
   Das M, 2002, ACM SIGPLAN NOTICES, V37, P57, DOI 10.1145/543552.512538
   Gawell N., 2009, 2009128 TRITACSCE
   Goldman M, 2007, LECT NOTES COMPUT SC, V4424, P308
   Gurov D, 2008, INFORM COMPUT, V206, P840, DOI 10.1016/j.ic.2008.03.003
   Gurov D, 2009, LECT NOTES COMPUT SC, V5403, P136, DOI 10.1007/978-3-540-93900-9_14
   Hubbers E., 2004, NIIIR0438 RADB U NIJ
   Hubert L., 2010, LNCS, V6528
   Huisman M, 2011, LECT NOTES COMPUT SC, V6528, P107
   Huisman M, 2008, LECT NOTES COMPUT SC, V5256, P147, DOI 10.1007/978-3-540-88194-0_11
   Kiefer S., MOPED MODEL CHECKER
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Leavens G. T., 2007, JML REFERENCE MANUAL
   Muller P., 2002, LNCS, V2262
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rot J., 2010, INF PREPR FORM VER O
   Schaefer I., 2011, LNCS, V6957, P184
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Soleimanifard S., PROMOVER WEB INTERFA
   Soleimanifard S, 2011, LECT NOTES COMPUT SC, V7041, P366, DOI 10.1007/978-3-642-24690-6_25
   Stirling C, 2001, MODAL TEMPORAL LOGIC
NR 28
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 83
EP 100
DI 10.1007/s10270-013-0321-0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100007
DA 2024-07-18
ER

PT J
AU Frank, U
AF Frank, Ulrich
TI Multi-perspective enterprise modeling: foundational concepts, prospects
   and future research challenges
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise modeling; Domain-specific modeling language (DSML); Method
   engineering; Modeling tool; Reference model
AB The paper presents a method for multi- perspective enterprise modeling (MEMO) and a corresponding (meta-) modeling environment. An extensive analysis of requirements for enterprise modeling serves to motivate and assess the method. The method is based on an elaborate conception of multi-perspective enterprise models and on an extensible language architecture. The language architecture is comprised of a meta modeling language and an extensible set of integrated domain-specific modeling languages (DSML). The DSML are supplemented with process models and with guidelines for their reflective use. The corresponding modeling environment integrates editors for various DSML into multi-language model editors. It includes a meta model editor which enables the convenient use, development and extension of the set of supported DSML and supports the generation of respective graphical model editors. Thus, it also serves as a foundation for method engineering. MEMO covers both software engineering as well as social, managerial and economic aspects of the firm. The presentation of MEMO is supplemented with a comparative overview of other approaches to enterprise modeling. The paper concludes bys summarizing fundamental technical, epistemological and political challenges for enterprise modeling research and discusses potential paths for future research.
C1 Univ Duisburg Essen, Inst Comp Sci & Business Informat Syst ICB, Informat Syst & Enterprise Modelling Res Grp, Essen, Germany.
C3 University of Duisburg Essen
RP Frank, U (corresponding author), Univ Duisburg Essen, Inst Comp Sci & Business Informat Syst ICB, Informat Syst & Enterprise Modelling Res Grp, Essen, Germany.
EM ulrich.frank@uni-due.de
CR [Anonymous], 1999, SOFT SYSTEMS METHODO
   [Anonymous], 1977, ZWECKBEGRIFF SYSTEMR
   [Anonymous], 2006, TECHNICAL REPORT
   [Anonymous], HANDLUNGSRATIONALITA
   [Anonymous], 49 ICB U DUISB ESS
   [Anonymous], 2002, P 35 HAW INT C SYST
   [Anonymous], 7 ICB U DUISB ESS
   [Anonymous], 1994, MULTIPERSPEKTIVISCHE
   [Anonymous], 2018, Organizational culture and leadership
   Argyris C., 1990, Overcoming organizational defenses: Facilitating organizational learning
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Bunge Mario., 1979, Ontology II: A World of Systems, Treatise on Basic Philosophy
   Dietz JLG, 2005, LECT NOTES COMPUT SC, V3762, P688
   Frank Ulrich, 2007, Information Systems and e-Business Management, V5, P93, DOI 10.1007/s10257-006-0034-9
   Frank U, 2011, 43 ICB U DUISB ESS, V2nd
   Frank U., 2010, ICB Research Report 42
   Frank U., 2011, ICB Research Report 48
   Frank U., 2011, EMISA, P93
   Frank U., 2009, P 9 OOPSLA WORKSH DO
   Frank U, 2007, ENTERP MODELLING INF, V2, P32
   GRAUMANN CF, 1993, SPIEL, V12, P156
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Hallerbach A, 2010, INT HANDB INFORM SYS, P237, DOI 10.1007/978-3-642-00416-2_11
   Hammer M., 1994, REENGINEERING CORPOR
   Keen P. G., 1991, Shaping the future: Business design through information technology
   Kieser A., 2006, ORGANISATIONSTHEORIE
   Lawrence P., 1967, Organization and Environment: Managing Differentiation and Integration
   Luhmann Niklas, 1984, Soziale Systeme: Grundri Einer Allgemeinen Theorie
   Marshall C., 2000, ENTERPRISE MODELING
   Mintzberg H., 1979, The structuring of organizations
   Morgan G., 2006, Images of Organization
   O'Toole J., 1995, LEADING CHANGE
   OMG, 2007, TECHNICAL REPORT
   Pfeffer Jeffery., 1981, RES ORG BEHAV, V3, P1
   Pugh D.S., 1976, ORG STRUCTURE ITS CO
   SCHEER A., 1992, Architecture of Integrated Information Systems Foundations of Enterprise Modelling
   Scheer A.W., 1999, ARIS BUSINESS PROCES
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Searle J., 1969, Speech Acts
   SOWA JF, 1992, IBM SYST J, V31, P590, DOI 10.1147/sj.313.0590
   Stamper RK, 1993, SOCIAL NORMS REQUIRE
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Strecker S, 2011, ENTERP MODELLING INF, V6, P5
   Strecker S, 2012, INF SYST E-BUS MANAG, V10, P241, DOI 10.1007/s10257-011-0172-6
   Urbaczewski L., 2006, Issues Inf Syst, V7, P18, DOI [DOI 10.48009/2IIS, DOI 10.48009/2IIS200618-23]
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   von Wright von Wright Georg Henrik Georg Henrik, Explanation and understanding
   Weick K.E., 1969, SOCIAL PSYCHOL ORG
   Wittgenstein L., 1980, PHILOS UNTERSUCHUNGE
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 67
TC 110
Z9 116
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 941
EP 962
DI 10.1007/s10270-012-0273-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600003
DA 2024-07-18
ER

PT J
AU Xiong, YF
   Song, H
   Hu, ZJ
   Takeichi, M
AF Xiong, Yingfei
   Song, Hui
   Hu, Zhenjiang
   Takeichi, Masato
TI Synchronizing concurrent model updates based on bidirectional
   transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model synchronization; Bidirectional transformation; Concurrent updates;
   Model difference
AB Model-driven software development often involves several related models. When models are updated, the updates need to be propagated across all models to make them consistent. A bidirectional model transformation keeps two models consistent by updating one model in accordance with the other. However, it does not work when the two models are modified at the same time. In this paper we first examine the requirements for synchronizing concurrent updates. We view a synchronizer for concurrent updates as a function taking the two original models and the two updated models as input, and producing two new models where the updates are synchronized. We argue that the synchronizer should satisfy three properties that we define to ensure a reasonable synchronization behavior. We then propose a new algorithm to wrap any bidirectional transformation into a synchronizer with the help of model difference approaches. We show that synchronizers produced by our algorithm are ensured to satisfy the three properties if the bidirectional transformation satisfies the correctness property and the hippocraticness property. We also show that the history ignorance property contributes to the symmetry of our algorithm. An implementation of our algorithm shows that it worked well in a practical runtime management framework.
C1 [Takeichi, Masato] Univ Tokyo, Dept Math Informat, Tokyo, Japan.
   [Song, Hui] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Inst Software, Beijing 100871, Peoples R China.
   [Hu, Zhenjiang] Natl Inst Informat, GRACE Ctr, Tokyo, Japan.
   [Xiong, Yingfei] Univ Waterloo, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
C3 University of Tokyo; Peking University; Research Organization of
   Information & Systems (ROIS); National Institute of Informatics (NII) -
   Japan; University of Waterloo
RP Xiong, YF (corresponding author), Univ Waterloo, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
EM yingfei@gsd.uwaterloo.ca; songhui06@sei.pku.edu.cn; hu@nii.ac.jp;
   takeichi@mist.i.u-tokyo.ac.jp
OI Xiong, Yingfei/0000-0001-8991-747X
CR Abi-Antoun M, 2006, IEEE INT CONF AUTOM, P47
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Eclipse Consortium, 2008, ECL GRAPH MOD FRAM
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   *JONAS PROJ, JAV OP APPL SERV
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Kolovos Dimitrios S., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P356, DOI 10.1109/ICST.2008.23
   Lechtenborger J., 2003, P 22 ACM SIGMOD SIGA, P49, DOI DOI 10.1145/773153.773159
   Matsuda K, 2007, ACM SIGPLAN NOTICES, V42, P47, DOI 10.1145/1291220.1291162
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   PIERCE BC, 2003, MSCIS0342 U PENNS
   Saito Y., 2002, IIPL200233
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   SONG H, 2008, GRACETR200805 NAT I
   Song Hui, 2009, P 4 WORKSHOP MODELS, V509, P11, DOI [10.1007/978-3-642-12261-3_14http://link.springer, DOI 10.1007/978-3-642-12261-3_14HTTP://LINK.SPRINGER]
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
   Xiong YF, 2009, LECT NOTES COMPUT SC, V5563, P213, DOI 10.1007/978-3-642-02408-5_15
   [No title captured]
NR 28
TC 18
Z9 19
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 89
EP 104
DI 10.1007/s10270-010-0187-3
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800008
DA 2024-07-18
ER

PT J
AU Fleurey, F
   Baudry, B
   Muller, PA
   Le Traon, Y
AF Fleurey, Franck
   Baudry, Benoit
   Muller, Pierre-Alain
   Le Traon, Yves
TI Qualifying input test data for model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software testing; Model transformation; Test criteria; Test
   qualification; Metamodelling; Model-based testing
AB Model transformation is a core mechanism for model-driven engineering (MDE). Writing complex model transformations is error-prone, and efficient testing techniques are required as for any complex program development. Testing a model transformation is typically performed by checking the results of the transformation applied to a set of input models. While it is fairly easy to provide some input models, it is difficult to qualify the relevance of these models for testing. In this paper, we propose a set of rules and a framework to assess the quality of given input models for testing a given transformation. Furthermore, the framework identifies missing model elements in input models and assists the user in improving these models.
C1 [Fleurey, Franck; Baudry, Benoit; Muller, Pierre-Alain] IRISA, F-35042 Rennes, France.
   [Le Traon, Yves] ENST Bretagne, F-35576 Cesson Sevigne, France.
C3 Universite de Rennes; IMT - Institut Mines-Telecom; IMT Atlantique
RP Fleurey, F (corresponding author), IRISA, Campus Univ Beaulieu, F-35042 Rennes, France.
EM ffleurey@irisa.fr; bbaudry@irisa.fr; pierre-alain.muller@irisa.fr;
   yves.letraon@enst-bretagne.fr
RI LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861
CR ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   *AGEDIS, 2000, AUT GEN EX TEST SUIT
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], SOFTWARE
   [Anonymous], 2003, Eclipse Modeling Framework
   BALDAN P, 2004, P INT C GRAPH TRANSF, P194
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Baudry B., 2006, P IMDT WORKSH CONJ E
   Beizer B., 1995, BLACK BOX TESTING
   BEZIVIN J, 2005, MTIP WORKSH
   Boujarwah AS, 1997, INFORM SOFTWARE TECH, V39, P617, DOI 10.1016/S0950-5849(97)00017-7
   BROTTIER E, 2006, P ISSRE 06 INT S SOF
   Darabos Andrea., 2006, Proceedings of the 5th International Workshop on Graph Transformations and Visual Modeling Techniques, P69
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DINHTRONG T, 2005, P ICECCS 05 SHANGH C
   Duddy K, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/EDOC.2003.1233847
   France R., 2007, FUTURE SOFTWARE ENG
   GIESE H, 2006, P 3 WORKSH MOD DES V, P78
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Heckel R, 2005, LECT NOTES COMPUT SC, V3442, P34, DOI 10.1007/978-3-540-31984-9_4
   HECKEL R, 2003, ELECT NOTES THEORETI, V82
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   KUSTER JM, 2006, P MODE VA 06 MOD DES
   *MMCC, 2007, MET COV CHECK
   MOTTU JM, 2006, P MODELS 06 GEN IT O
   MOTTU JM, 2006, P ECMDA 06 EUR C MOD
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   *OMG, 2005, MOF 2 0 Q V T OMG RE
   OMG, 2004, MOF 2 0 COR FIN AD S
   *OMG, 2007, MET FAC
   *OMG, 2003, UML 2 0 OBJ CONSTR L
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Rutherford MJ, 2003, LECT NOTES COMPUT SC, V2830, P377
   SEN S, 2006, P MUT 06 WORKSH ASS
   STEEL J, 2004, P ISSRE 04 INT S SOF
   Utting M., 2007, PRACTICAL MODEL BASE
NR 37
TC 39
Z9 47
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 185
EP 203
DI 10.1007/s10270-007-0074-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300003
DA 2024-07-18
ER

PT J
AU Garousi, V
   Briand, LC
   Labiche, Y
AF Garousi, Vahid
   Briand, Lionel C.
   Labiche, Yvan
TI A UML-based quantitative framework for early prediction of resource
   usage and load in distributed real-time systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Resource usage prediction; Load analysis; Load forecasting; Resource
   overuse detection; Real-time systems; Distributed systems; UML
AB This paper presents a quantitative framework for early prediction of resource usage and load in distributed real-time systems (DRTS). The prediction is based on an analysis of UML 2.0 sequence diagrams, augmented with timing information, to extract timed-control flow information. It is aimed at improving the early predictability of a DRTS by offering a systematic approach to predict, at the design phase, system behavior in each time instant during its execution. Since behavioral models such as sequence diagrams are available in early design phases of the software life cycle, the framework enables resource analysis at a stage when design decisions are still easy to change. Though we provide a general framework, we use network traffic as an example resource type to illustrate how the approach is applied. We also indicate how usage and load analysis of other types of resources (e.g., CPU and memory) can be performed in a similar fashion. A case study illustrates the feasibility of the approach.
C1 [Garousi, Vahid] Univ Calgary, Software Qual Engn Res Grp, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
   [Briand, Lionel C.] Simula Res Lab, Lysaker, Norway.
   [Briand, Lionel C.] Univ Oslo, Lysaker, Norway.
   [Briand, Lionel C.; Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 University of Calgary; University of Oslo; Carleton University
RP Garousi, V (corresponding author), Univ Calgary, Software Qual Engn Res Grp, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca; briand@simula.no; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836; Garousi, Vahid/0000-0001-6590-7576
FU Siemens Corporate Research; Natural Sciences and Engineering Research
   Council of Canada (NSERC) [341511-07]; Alberta Ingenuity New Faculty
   Award [200600673]
FX This work was in part supported by Siemens Corporate Research,
   Princeton, NJ and a Canada research chair. Vahid Garousi was further
   supported by the Discovery Grant no. 341511-07 from the Natural Sciences
   and Engineering Research Council of Canada (NSERC), and also by the
   Alberta Ingenuity New Faculty Award no. 200600673.
CR [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 2006, P 1 INT C PERF EV ME, DOI DOI 10.1145/1190095.1190129
   [Anonymous], 1999, DOING HARD TIME DEV
   [Anonymous], 2005, UML PROF SCHED PERF
   AVRITZER A, 2004, ACM SIGSOFT SOFTW EN, V29, P1
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BENABDALLAH H, 1997, P INT C FORM DESCR T, P91
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Buttazzo G., 2005, S COMP SCI
   Byhlin S, 2005, EUROMICRO, P249, DOI 10.1109/ECRTS.2005.7
   Cáceres R, 2000, IEEE COMMUN MAG, V38, P144, DOI 10.1109/35.841839
   CACHERA D, 2005, P FORM METH C, P91
   Cortellessa V, 2001, PERFORM EVALUATION, V45, P81, DOI 10.1016/S0166-5316(01)00036-0
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DANEELS A, 1999, P INT C ACC LARG EXP, P339
   Dinda P. A., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P87, DOI 10.1109/HPDC.1999.805285
   DINDA PA, 1999, CMUCS99138 SCH COMP
   DOUGLASS BP, 2003, RHAPSODY 5 0 BREAKTH
   Feiler P., 2000, CMUSEI2000SR011
   Ganesh A. J., 2004, Lecture Notes in Mathematics
   Garousi V, 2005, LECT NOTES COMPUT SC, V3748, P160
   GAROUSI V, 2005, SCE0513 CARL U
   GAROUSI V, 2005, SCE0509 CARL U
   Garousi V., 2006, SCE0605 CARL U
   GAROUSI V, 2006, P INT C SOFTW ENG, P391
   GAROUSI V, 2008, P IEEE INT C SOFTW T
   Garousi V., 2006, THESIS CARLETON U, pNON
   Gomaa H., 2000, DESIGNING CONCURRENT
   HAKANSSON J, 2004, INT WORKSH SPEC VAL
   HAUGEN O, 2001, P 10 INT SDL FOR, P38
   HERZBERG D, 1999, P INT C UN MOD LANG, P331
   *HON INC, 1998, METAH PROD INF
   IGARASHI A, 2002, P ACM SIGPLAN SIGACT, P331
   Jones C, 1996, COMPUTER, V29, P80, DOI 10.1109/2.485858
   KABOUS L, 1999, P INT C UN MOD LANG, P339
   LANUSSE A, 1998, P INT C UN MOD LANG, P319
   Marriott K, 2003, LECT NOTES COMPUT SC, V2895, P212
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   MIRANDOLA R, 2000, P UN MOD LANG UML C, P178
   Muchnick S., 1997, ADV COMPILER DESIGN
   *NIC CUPP SOFTW, 2005, NETW TRAFF MON
   *OMG, 2007, UML 2 1 1 SUP SPEC
   *OMG, 2005, OCL 2 0 SPEC
   OMG-Object Management Group, 2007, UML PROF MOD AN REAL
   PALTOR IP, 1999, 234 FINL TUCS TURK C
   Pasaje JLM, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P245, DOI 10.1109/REAL.2001.990618
   PETRIU DC, 2004, INT C QUANT EV SYST
   Puschner P, 1998, REAL TIM SYST SYMP P, P134, DOI 10.1109/REAL.1998.739738
   RAK J, 2006, P INT C HIGH PERF CO, P863
   Smith C., 2002, ENCY SOFTWARE ENG
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Thane H., 2000, THESIS ROYAL I TECHN
   TINDELL K, 1994, MICROPROC MICROPROG, V40, P117, DOI 10.1016/0165-6074(94)90080-9
   Tsai J., 1996, DISTRIBUTED REAL TIM
   Wang YF, 2001, COMPUT ARTIF INTELL, V20, P67
   WOODSIDE CM, 2004, WORKSH US UML PROF S
   Yau SS, 2002, PROCEEDINGS OF THE SEVENTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P45, DOI 10.1109/WORDS.2002.1000035
NR 58
TC 3
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 275
EP 302
DI 10.1007/s10270-008-0099-7
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300008
DA 2024-07-18
ER

PT J
AU Abrahám, E
   Grüner, A
   Steffen, M
AF Abraham, Erika
   Gruener, Andreas
   Steffen, Martin
TI Heap-abstraction for an object-oriented calculus with thread classes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE class-based OO languages; thread-based concurrency; open systems; formal
   semantics; heap abstraction; observable behavior
AB This paper formalizes an open semantics for a calculus featuring thread classes, where the environment, consisting in particular of an overapproximation of the heap topology, is abstractly represented. From an observational point of view, considering classes as part of a component makes instantiation a possible interaction between com- ponent and environment or observer. For thread classes it means that a component may create external activity, which influences what can be observed. The fact that cross-border instantiation is possible requires that the connectivity of the objects needs to be incorporated into the semantics. We extend our prior work not only by adding thread classes, but also in that thread names may be communicated, which means that the semantics needs to account explicitly for the possible acquaintance of objects with threads. We show soundness of the abstraction.
C1 [Steffen, Martin] Univ Oslo, Dept Comp Sci, Oslo, Norway.
   [Gruener, Andreas] Univ Kiel, Kiel, Germany.
   [Abraham, Erika] Univ Freiburg, Freiburg, Germany.
C3 University of Oslo; University of Kiel; University of Freiburg
RP Steffen, M (corresponding author), Univ Oslo, Dept Comp Sci, Oslo, Norway.
EM eab@informatik.uni-freiburg.de; ang@informatik.uni-kiel.de;
   msteffen@ifi.uio.no
RI Abraham, Erika/G-5259-2012
OI Abraham, Erika/0000-0002-5647-6134
CR Abadi M., 1996, MONOGRAPHS COMPUTER
   ABRAHAM E, 2006, 0601 C ALBR U KIEL
   ABRAHAM E, 2003, 0307 C ALBR U KIEL
   *ACM, 2006, 35 ANN S PRINC PROGR
   Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Agha G., 1987, OBJECT ORIENTED CONC, P37
   America P., 1989, FORM ASP COMPUT, V1, P366
   BONSANGUE M, 2005, LECT NOTES COMPUTER, V3657
   Bonsangue M.M., 2007, LECT NOTES COMPUTER, V4468
   DEBOER FS, 2007, IN PRESS SPRINGER LN
   DEBOER FS, 2007, UNPUB C P
   *ECMA, 2002, ECMA334
   GORRIERI R, 2006, LECT NOTES COMPUTER, V4037
   Gosling J., 2000, The Java Language Specification
   *IEEE, 1998, 13 ANN S LOG COMP SC
   *IEEE, 2002, 17 ANN S LOG COMP SC
   JEFFREY A, LICS 02
   JEFFREY A, SAGIV, P423
   KOUTAVAS V, 2007, IN PRESS SESTOFT, P37
   KOUTAVAS V, 2007, INF WORKSH REC FOOL
   KOUTAVAS V, 2006, P 33 ACM SIGPLAN SIG, P141
   LI Z, 2004, LECT NOTES COMPUTER, V3407
   LONGLEY J, 2006, GAMES LOGIC PROGRAMM, V2
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   NESTMANN U, 1998, ELECT NOTES THEORECT
   OLDEROG ER, 1986, ACTA INFORM, V23, P9, DOI 10.1007/BF00268075
   POTTER BF, 1990, SERIES COMPUTER SCI
   SAGIV M, 2005, LECT NOTES COMPUTER, V3444
   Sangiorgi D., 2001, PHI CALCULUS THEORY
   SESTOFT P, 2005, LECT NOTES COMPUTER, V3924
   SMITH G, 1992, THESIS U QUEENSLAND
   Spivey J. M., 1989, INT SERIES COMPUTER
   STEFFEN M, 2006, THESIS C ALBR U KIEL
   VISWANATHAN R, LICS 98
   2007, CREOL LANGUAGE
NR 35
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 177
EP 208
DI 10.1007/s10270-007-0065-9
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298IE
UT WOS:000255680600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Petriu, DC
   Shen, H
   Sabetta, A
AF Petriu, Dorina C.
   Shen, Hui
   Sabetta, Antonino
TI Performance analysis of aspect-oriented UML models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
AB Aspect-Oriented Modeling (AOM) techniques allow software designers to isolate and address separately solutions for crosscutting concerns (such as security, reliability, new functional features, etc.). Current AOM research is concerned not only with the separate expression of concerns and their composition into a complete system model, but also with the analysis of different properties of such models. This paper proposes an approach for analyzing the performance effects of a given aspect on the overall system performance, after the composition of the aspect model with the system's primary model. Performance analysis of UML models is enabled by the "UML Performance Profile for Schedulability, Performance and Time" (SPT) standardized by OMG, which defines a set of quantitative performance annotations to be added to a UML model. The first step of the proposed approach is to add performance annotations to both the primary and the aspect models. An aspect model is generic at first, and therefore its performance annotations must be parameterized. A generic model is converted into a context-specific aspect model with concrete values assigned to its performance annotations. The latter is composed with the primary model, generating a complete annotated UML model. The composition is performed in both structural and behavioural views. A novel approach for composing activity diagrams based on graph-rewriting concepts is proposed in the paper. The next step is to transform automatically the composed model into a Layered Queueing Network (LQN) performance model, by using techniques developed in previous work. The proposed approach is illustrated with a case study system, whose primary model is enhanced with some security features by using AOM. The performance effects of the security aspect under consideration are analyzed in two design alternatives, by solving and analyzing the LQN model of the composed system.
C1 [Petriu, Dorina C.; Shen, Hui] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Sabetta, Antonino] Univ Roma Tor Vergata, Dept Informat Syst & Prod, Rome, Italy.
C3 Carleton University; University of Rome Tor Vergata
RP Petriu, DC (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM petriu@sce.carleton.ca; hshen@sce.carleton.ca; sabetta@acm.org
OI Petriu, Dorina/0000-0003-4688-9370
CR ALDAWUD O, 2003, 3 INT WORKSH ASP OR
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BARROS JP, 2003, 4 WORKSH ASP OR MOD
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   FRANKS G, 1995, PERFORM EVALUATION, V24, P117, DOI 10.1016/0166-5316(95)96869-T
   GEORG G, 2002, P WORKSH CRIT SYST D
   GEORG G, 2003, COMPOSING ASPECT MOD
   Gray J, 2003, LECT NOTES COMPUT SC, V2830, P151
   GU G, 2005, P 5 INT WORKSH SOFTW, P99
   Ho W.M., 2002, PROC 1 INT, P99
   Kande M. M., 2003, THESIS EPFL LAUSANNE
   KICZALES G, 2001, GETTING STARTED WITH, P59
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   MAHONEY M, 2004, P 5 WSH ASP OR MOD L
   MEKERKE F, 2002, ADV OBJECT ORIENTED
   *OBJ MAN GROUP, 2002, PTC020302 OMG
   PADBERG J, 2005, IN PRESS J LOGIC ALG
   Petriu D.C., 2005, MODEL DRIVEN ENG DIS, P205
   PETRIU DB, 2004, P UML 2004 MOD LANG
   Petriu DC, 2002, LECT NOTES COMPUT SC, V2324, P159
   PETRIU DC, 2003, PERFORMANCE ANAL UML, P221
   Rashid A., 2003, 2 INT C ASP OR SOFTW
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Reddy R., 2005, ASP OR MOD AOM WORKS
   Schmidt DouglasC., 2002, C++ Network Programming: Systematic Reuse with ACE and Frameworks, V2
   Shen H, 2005, LECT NOTES COMPUT SC, V3713, P156, DOI 10.1007/11557432_12
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Song Eunjee., 2005, SACMAT 05, P120
   STEIN D, 2003, 3 INT WORKSH ASP OR
   Stein D., 2002, AOSD '02: Proceedings of the 1st international conference on Aspect-oriented software development, P106
   Straw G, 2004, LECT NOTES COMPUT SC, V3273, P84
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   WOODSIDE CM, 2002, GREATSPN USER MANUAL, pCH5
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
NR 38
TC 7
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 453
EP 471
DI 10.1007/s10270-007-0053-0
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000008
DA 2024-07-18
ER

PT J
AU Mohammadi, H
   Ghardallou, W
   Brick, E
   Mili, A
AF Mohammadi, Hessam
   Ghardallou, Wided
   Brick, Elijah
   Mili, Ali
TI On the persistent rumors of the programmer's imminent demise
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Programming languages; Automatic programming; Programming profession;
   Large language models
AB Since the dawn of programming, several developments in programming language design and programming methodology have been hailed as the end of the profession of programmer; they have all proven to be exaggerated rumors, to echo the words attributed to Mark Twain. In this short paper, we ponder the question of whether the emergence of large language models finally realizes these prophecies? Also, we discuss why even if this prophecy is finally realized, it does not change the job of the researcher in programming.
C1 [Mohammadi, Hessam; Brick, Elijah; Mili, Ali] NJIT, CS Dept, Newark, NJ 07102 USA.
   [Ghardallou, Wided] Univ Sousse, Dept Comp Sci, Rue Khalifa Karoui, Sousse 4000, Tunisia.
C3 New Jersey Institute of Technology; Universite de Sousse
RP Mohammadi, H (corresponding author), NJIT, CS Dept, Newark, NJ 07102 USA.
EM hm385@njit.edu; wided.ghardallou@gmail.com; eb275@njit.edu; mili@njit.ed
CR [Anonymous], 1986, The C++ Programming Language
   [Anonymous], 1983, Smalltalk-80: The Interactive Programming Environment
   Brooks Fred, 1975, The Mythical Man-Month
   Dreibelbis E., 2023, PC Magazine
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ichbiah J.D., 1979, SIGPLAN NOTICES, V14, P1, DOI 10.1145/956650.956651
   Leveson NG, 2023, COMMUN ACM, V66, P22, DOI 10.1145/3615860
   Meyers PJ., 2020, J COMPUTING SCI COLL, V36, P53, DOI [DOI 10.5555/3447065.3447072, 10.5555/3447065.3447072]
   Mohammadi H., 2021, 10 INT C MODEL DATA
   Parnas DL., 1985, SOFTWARE ASPECTS STR
   REUBENSTEIN HB, 1991, IEEE T SOFTWARE ENG, V17, P226, DOI 10.1109/32.75413
   Rich C., 1988, Computer, V21, P10, DOI 10.1109/2.86782
   Welsh M, 2023, COMMUN ACM, V66, P34, DOI 10.1145/3570220
   Yellin DM, 2023, COMMUN ACM, V66, P41, DOI 10.1145/3555367
NR 14
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1969
EP 1976
DI 10.1007/s10270-023-01136-y
EA NOV 2023
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001102406400001
DA 2024-07-18
ER

PT J
AU Langford, MA
   Chan, KH
   Fleck, JE
   McKinley, PK
   Cheng, BHC
AF Langford, Michael Austin
   Chan, Kenneth H. H.
   Fleck, Jonathon Emil
   McKinley, Philip K.
   Cheng, Betty H. C.
TI MoDALAS: addressing assurance for learning-enabled autonomous systems in
   the face of uncertainty
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Goal-based modeling; Self-adaptive systems; Artificial intelligence;
   Machine learning; Models at run time; Cyber physical systems; Behavior
   oracles; Autonomous vehicles
ID MODEL
AB Increasingly, safety-critical systems include artificial intelligence and machine learning components (i.e., learning-enabled components (LECs)). However, when behavior is learned in a training environment that fails to fully capture real-world phenomena, the response of an LEC to untrained phenomena is uncertain and therefore cannot be assured as safe. Automated methods are needed for self-assessment and adaptation to decide when learned behavior can be trusted. This work introduces a model-driven approach to manage self-adaptation of a learning-enabled system (LES) to account for run-time contexts for which the learned behavior of LECs cannot be trusted. The resulting framework enables an LES to monitor and evaluate goal models at run time to determine whether or not LECs can be expected to meet functional objectives and enables system adaptation accordingly. Using this framework enables stakeholders to have more confidence that LECs are used only in contexts comparable to those validated at design time.
C1 [Langford, Michael Austin; Chan, Kenneth H. H.; Fleck, Jonathon Emil; McKinley, Philip K.; Cheng, Betty H. C.] Michigan State Univ, Dept Comp Sci & Engn, 428 S Shaw Ln, E Lansing, MI 48824 USA.
C3 Michigan State University
RP Chan, KH; Cheng, BHC (corresponding author), Michigan State Univ, Dept Comp Sci & Engn, 428 S Shaw Ln, E Lansing, MI 48824 USA.
EM langfo37@msu.edu; chanken1@msu.edu; fleckjo1@msu.edu; mckinle3@msu.edu;
   chengb@msu.edu
OI Chan, Kenneth/0000-0001-5014-3411
FU National Science Foundation (NSF) [DBI-0939454]; Air Force Research
   Laboratory (AFRL) [FA8750-16-2-0284, FA8750-19-2-0002]
FX AcknowledgementsWe greatly appreciate contributions from Robert Jared
   Clark on our preliminary work. This work has been supported in part by a
   grant from the National Science Foundation (NSF) (DBI-0939454) and by
   the Air Force Research Laboratory (AFRL) under agreements
   FA8750-16-2-0284 and FA8750-19-2-0002. The views and conclusions
   contained herein are those of the authors and should not be interpreted
   as necessarily representing the official policies or endorsements,
   either expressed or implied, of NSF, AFRL, or other sponsors.
CR Abdou MA, 2022, NEURAL COMPUT APPL, V34, P5791, DOI 10.1007/s00521-022-06960-9
   ACWG, 2018, GOAL STRUCT NOT COMM
   Aichernig BK, 2019, LECT NOTES COMPUT SC, V11812, P3, DOI 10.1007/978-3-030-31280-0_1
   Air Force Office of Scientific Research, 2018, CTR EXC ASS AUT CONT
   Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   [Anonymous], 2020, WORKSH ASS AUT SYST
   [Anonymous], 2022, 2022 IEEE C ASS AUT
   [Anonymous], 2019, OBST AV ROB FOOTPR M
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Asaadi Erfan, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P270, DOI 10.1007/978-3-030-54549-9_18
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Arrieta AB, 2020, INFORM FUSION, V58, P82, DOI 10.1016/j.inffus.2019.12.012
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bengio Y., 2020, ACMIEEE INT C MODEL
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Borg M., 2019, J AUTOMOT SOFTW ENG, V1, P1, DOI DOI 10.2991/JASE.D.190131.001
   Boursinos D, 2021, AI EDAM, V35, P251, DOI 10.1017/S089006042100010X
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Calikli G., 2010, P 6 INT C PRED MOD S
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Camara Javier., 2013, Assurances for Self-Adaptive Systems: Principles, Models, and Techniques
   Cheng, 23 INT C MODEL DRIVE
   Cheng S.-W., 2006, INT WORKSHOP SELF AD
   Cheng Shang-Wen, 2008, Ph.D. Dissertation
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   Cortés-Ciriano I, 2019, J CHEM INF MODEL, V59, P1269, DOI 10.1021/acs.jcim.8b00542
   cra, ASS AUT WORKSH SER
   Dalpiaz F, 2013, INT CONF RES CHAL
   deGrandis P, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P107
   Dersten S, 2016, 2016 11TH SYSTEMS OF SYSTEM ENGINEERING CONFERENCE (SOSE), IEEE
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   Ferreira RS, 2021, IEEE PAC RIM INT SYM, P7, DOI 10.1109/PRDC53464.2021.00012
   Fraser G, 2015, SOFTW TEST VERIF REL, V25, P749, DOI 10.1002/stvr.1575
   Fredericks EM, 2014, EMPIR SOFTW ENG, V19, P1466, DOI 10.1007/s10664-014-9305-0
   Gawlikowski J., 2021, ARXIV
   Goldfain B, 2019, IEEE CONTR SYST MAG, V39, P26, DOI 10.1109/MCS.2018.2876958
   Goodenough J., 2012, CMUSEI2012TR002
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow I. J., 2014, ARXIV
   Gu R, 2018, FME WORKS FORM, P74, DOI 10.1145/3193992.3193999
   Hajek P., 1998, Metamathematics of Fuzzy Logic
   Harteveld C, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON THE FOUNDATIONS OF DIGITAL GAMES (FDG'19), DOI 10.1145/3337722.3337731
   Hartley RI, 1997, COMPUT VIS IMAGE UND, V68, P146, DOI 10.1006/cviu.1997.0547
   Huang W., 2020, arXiv
   IBM, 2005, ARCH BLU AUT COMP
   Irfan MN, 2013, ADV COMPUT, V89, P89, DOI 10.1016/B978-0-12-408094-2.00003-5
   Jahan S, 2020, FUTURE GENER COMP SY, V109, P197, DOI 10.1016/j.future.2020.03.031
   Janai J., 2017, ARXIV
   Jiao LC, 2019, IEEE ACCESS, V7, P128837, DOI 10.1109/ACCESS.2019.2939201
   Jo J., 2017, ARXIV171111561
   Kawaguchi, 2018, GENERALIZATION DEEP
   Kephart JO, 2007, IEEE INTERNET COMPUT, V11, P40, DOI 10.1109/MIC.2007.2
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Knight, 2017, MIT TECHNOLOGY REV A
   Kocic J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19092064
   Koenig N., 2004, 2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566), P2149
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuutti S, 2021, IEEE T INTELL TRANSP, V22, P712, DOI 10.1109/TITS.2019.2962338
   Kuutti S, 2018, IEEE INTERNET THINGS, V5, P829, DOI 10.1109/JIOT.2018.2812300
   Langari Z, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON ASSURANCE CASES FOR SOFTWARE-INTENSIVE SYSTEMS (ASSURE), P1, DOI 10.1109/ASSURE.2013.6614263
   Langford, 2021, 16 INT S SOFTWARE EN
   Langford MA, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P115, DOI 10.1109/ICAC.2019.00023
   LAPOUCHNIAN A., 2005, Goal-oriented requirements engineering: An overview of the current research
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Liu L, 2020, INT J COMPUT VISION, V128, P261, DOI 10.1007/s11263-019-01247-4
   Liu ZY, 2017, IEEE DECIS CONTR P
   Lu RZ, 2019, APPL ENERG, V236, P937, DOI 10.1016/j.apenergy.2018.12.061
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Machin M, 2018, IEEE T SYST MAN CY-S, V48, P702, DOI 10.1109/TSMC.2016.2633291
   Malone David., 2019, Rovers Set to Invade Construction Jobsites
   Melenbrink N, 2020, AUTOMAT CONSTR, V119, DOI 10.1016/j.autcon.2020.103312
   Neema S, 2017, Assured autonomy
   Object Management Group, 2020, STRUCT ASS CAS MET S
   Odena A, 2019, PR MACH LEARN RES, V97
   Palmerino J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P949, DOI 10.1109/ASE.2019.00092
   Papadopoulos P, 2015, INT WORK REAL ARTIF, P19, DOI 10.1109/RAISE.2015.11
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Quigley M., 2009, INT C ROBOTICS AUTOM
   Ramirez, 2011, 14 INT C MODEL DRIVE
   Ramos Leonardo., 2019, Journal of Software Engineering Research and Development, V7, DOI DOI 10.5753/JSERD.2019.470
   Ravindran R, 2021, IEEE SENS J, V21, P5668, DOI 10.1109/JSEN.2020.3041615
   Rodriguez D, 2013, INFORM SOFTWARE TECH, V55, P1810, DOI 10.1016/j.infsof.2013.05.002
   Rushby J., 2015, Technical report. SRI-CSL-15-01
   Rusu RB, 2011, IEEE INT CONF ROBOT
   Schumann J., 2010, STUD COMPUT INTELL, DOI [10.1007/978-3-642-10690-3, DOI 10.1007/978-3-642-10690-3]
   Schwarting W, 2018, ANNU REV CONTR ROBOT, V1, P187, DOI 10.1146/annurev-control-060117-105157
   Smith Colin., 2020, Hazard Contribution Modes of Machine Learning Components
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tuncali CE, 2018, DES AUT CON, DOI 10.1145/3195970.3199852
   van Lamsweerde A, 2004, LECT NOTES COMPUT SC, V2941, P325
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   Weyns, 2021, 16 INT S SOFTWARE EN
   Weyns, 2008, APPL MULTIAGENT SYST
   Weyns D, 2016, PR INT CONF AUTONOM, P364, DOI 10.1109/ICAC.2016.67
   Whang SE, 2020, PROC VLDB ENDOW, V13, P3429, DOI 10.14778/3415478.3415562
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yao XQ, 2022, MATH EDUC RES J, V34, P241, DOI 10.1007/s13394-020-00343-w
   Yu Fuxun., 2019, P 28 INT JOINT C ART
   Zadeh, 1996, FUZZY SETS
   ZADEH LA, 1988, COMPUTER, V21, P83, DOI 10.1109/2.53
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
NR 112
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1543
EP 1563
DI 10.1007/s10270-023-01090-9
EA MAR 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000949387600001
PM 37363107
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Adhikari, B
   Rapos, EJ
   Stephan, M
AF Adhikari, Bhisma
   Rapos, Eric J.
   Stephan, Matthew
TI SimIMA: a virtual Simulink intelligent modeling assistant Simulink
   intelligent modeling assistance through machine learning and model
   clones
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID MUTATION
AB Intelligent virtual model assistance is a key challenge in cultivating model-driven engineering proliferation and growth. Such assistance will help improve the quality of software models, support education for students learning modeling, and lower the entry barriers to new modelers. We present SimIMA, an intelligent modeling assistant for Simulink, which is an extremely popular modeling language in both industry and academia. SimIMA provides modelers with two different forms of data-driven guidance using a knowledge base of configurable repositories and sources. The first form of guidance, SimGESTION, suggests to modelers single-step operations they can perform on their models as they edit them in their modeling environment. These suggestions are based on the machine learning technique of ensemble learning through association rule mining and frequency classification. The second form of guidance, SimXAMPLE, presents modelers with similar/related Simulink systems for modelers to either insert directly into their environments or to view for inspiration. SimXAMPLE accomplishes this through model clone detection. To validate SimIMA, we conduct experiments using an established, open, and curated large set of Simulink models coming from a variety of application domains. Our results show that both of SimIMA's forms of guidance are inferring the appropriate model and element suggestions given SimIMA's knowledge base and that SimIMA is both scalable and efficient. Through our evaluation, SimIMA demonstrates a prediction accuracy of 78.86% for block-level suggestions and 82.04% for full system suggestions.
C1 [Adhikari, Bhisma; Rapos, Eric J.; Stephan, Matthew] Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
C3 University System of Ohio; Miami University
RP Rapos, EJ (corresponding author), Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
EM rapose@miamioh.edu
OI Rapos, Eric J./0000-0002-2894-7824
FU National Science Foundation [1849632]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1849632] Funding Source: National Science Foundation
FX AcknowledgementsThis material is based upon work supported by the
   National Science Foundation under Grant No. 1849632.
CR Adhikari B, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P428, DOI 10.1109/MODELS-C53483.2021.00066
   Adocus AB, METAMODELAGENT CONCE
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Alalfi MH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P295, DOI 10.1109/ICSM.2012.6405285
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Anguita D., 2012, 20 EUROPEAN S ARTIFI, P441
   [Anonymous], 1998, P 4 INT C KNOWLEDGE
   Antony EP, 2013, WORK CONF REVERSE EN, P472, DOI 10.1109/WCRE.2013.6671325
   Asaduzzaman M, 2014, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME.2014.29
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Babur Ö, 2019, IEEE ACM INT WORKS M, P78, DOI 10.1109/MiSE.2019.00019
   Barath B., 2020, IMPROVING CODE COMPL
   Barrett S., 2008, PROC 2 WORKSHOP MODE
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Boll A, 2021, SOFTW SYST MODEL, V20, P2111, DOI 10.1007/s10270-021-00883-0
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burgueno L., 2020, NLP BASED ARCHITECTU
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Chowdhury SA, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P45, DOI 10.1145/3196478.3196484
   Cordy J.R., 2013, INT SOFTW PROD LIN C, P7, DOI DOI 10.1145/2491627.2492153
   Dean T.R., 2014, ELECTR COMMUN, V63
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   del Olmo FH, 2008, EXPERT SYST APPL, V35, P790, DOI 10.1016/j.eswa.2007.07.047
   Di Rocco J, 2023, SOFTW SYST MODEL, V22, P203, DOI 10.1007/s10270-022-00994-2
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P282
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P291
   Eclipse Foundation, 2017, COD REC
   Elkamel A, 2016, I C COMP SYST APPLIC
   Fushiki T, 2011, STAT COMPUT, V21, P137, DOI 10.1007/s11222-009-9153-8
   Gautam Pratiksha, 2020, Reliability and Risk Assessment in Engineering. Proceedings of INCRS 2018. Lecture Notes in Mechanical Engineering (LNME), P21, DOI 10.1007/978-981-15-3746-2_3
   GitHub, GITH COP YOUR PAIR P
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Kumar MA., 2014, J SOFTWARE ENG RES P, V4, P12
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   Mazanek S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P242, DOI 10.1109/VLHCC.2008.4639094
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Segura AM, 2016, IEEE INT ENTERP DIST, P79
   Mussbacher, 2020, P 23 ACM IEEE INT C, P1
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nair A, 2021, SOFTW SYST MODEL, V20, P1159, DOI 10.1007/s10270-020-00841-2
   Pati T., 2012, P 2012 WORKSH DOM SP, P7, DOI DOI 10.1145/2420918.2420921
   Petersen H, 2012, THESIS TU DENMARK
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Reicherdt R, 2012, PROC INT CONF SOFTW, P551, DOI 10.1109/ICSE.2012.6227161
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Roy, 2007, 2007541 QUEENS U
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Rubin Julia., 2013, P 2013 9 JOINT M FDN, P301, DOI DOI 10.1145/2491411.2491446
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Saini Rijul., 2020, P 23 ACMIEEE INT C M, DOI DOI 10.1145/3417990.3421385
   Schafer M., 2013, Effective smart completion for javascript
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Stephan M, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1669
   Stephan M, 2014, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2014.113
   Stephan M, 2014, IEEE ICST WORKSHOP, P206, DOI 10.1109/ICSTW.2014.17
   Störrle H, 2013, SOFTW SYST MODEL, V12, P307, DOI 10.1007/s10270-011-0217-9
   Voorhees Ellen M., 2001, Trec, V7, P361, DOI DOI 10.1017/S1351324901002789
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
NR 71
TC 2
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 29
EP 56
DI 10.1007/s10270-023-01093-6
EA MAR 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:000948756900001
DA 2024-07-18
ER

PT J
AU Kolovos, D
   de la Vega, A
AF Kolovos, Dimitris
   de la Vega, Alfonso
TI Flexmi: a generic and modular textual syntax for domain-specific
   modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; Generic textual syntaxes; Model-driven
   engineering
AB Domain-specific languages allow engineers and domain experts to express problems and design solutions using domain-focused vocabularies and abstractions, by means of graphical or textual syntaxes. In the case of textual syntaxes, language engineers can opt for creating a language-specific syntax by defining and maintaining a BNF-style grammar, or use an existing general-purpose reflective syntax such as the XML Metadata Interchange (XMI) or the Human Usable Textual Notation (HUTN), which do not require any development and maintenance effort, but which are more verbose and cannot be customised. We present Flexmi: a new general-purpose textual syntax for defining models that conform to Eclipse Modelling Framework's Ecore-based metamodels. Flexmi offers XML and YAML/JSON syntax flavours, it can be fuzzily parsed to reduce verbosity, and it includes a templating system to facilitate encapsulation of reusable composite model element structures, thus enabling more concise model specifications. We have evaluated Flexmi for verbosity and model loading performance against XMI, HUTN, and a bespoke (i.e. custom) textual syntax for Ecore (Emfatic). Our results indicate that the use of fuzzy parsing and templates allow Flexmi to achieve a significant reduction in the verbosity of models compared to XMI/HUTN and can become almost as concise as a bespoke textual syntax, with a moderate performance penalty.
C1 [Kolovos, Dimitris] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [de la Vega, Alfonso] Univ Cantabria, Software Engn & Real Time Grp, Santander, Spain.
C3 University of York - UK; Universidad de Cantabria
RP de la Vega, A (corresponding author), Univ Cantabria, Software Engn & Real Time Grp, Santander, Spain.
EM dimitris.kolovos@york.ac.uk; alfonso.delavega@unican.es
RI de la vega, Alfonso/B-6157-2017; Kolovos, Dimitrios/L-9830-2014
OI de la Vega, Alfonso/0000-0002-7109-4249
FU HICLASS InnovateUK project [113213]
FX The work presented in this paper has been funded through the HICLASS
   InnovateUK project (Contract No. 113213).
CR [Anonymous], YAML YAML AINT MARKU
   [Anonymous], 2011, INT SUMMER SCH GENER
   [Anonymous], Javascript Object Notation
   Barriga A., 2020, P 23 ACM IEEE INT C, P1
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Bettini L, 2016, J LOG ALGEBR METHODS, V85, P655, DOI 10.1016/j.jlamp.2015.11.005
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Foundation E., XCORE
   Foundation E., OCLINECORE
   Foundation E., EMFATIC
   Group O.M.., XML METADATA INTERCH
   Hillairet G., EMFJSON EMF BINDING
   Holldobler K., 2017, MONTICORE 5 LANGUAGE, V32
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kolovos D.S., 2016, CEUR WORKSHOP PROC, V1694, P22
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos Dimitris, 2018, CEUR WORKSHOP P, V2245, P223
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Rose LM, 2008, LECT NOTES COMPUT SC, V5301, P249, DOI 10.1007/978-3-540-87875-9_18
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
NR 24
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1197
EP 1215
DI 10.1007/s10270-022-01064-3
EA NOV 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000885209300001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Ruiz, A
   Martin, YS
   Martinez, J
   Quintans, J
   Mockly, G
   Gyrard, A
   Crepax, T
AF Ruiz, Alejandra
   Martin, Yod-Samuel
   Martinez, Jabier
   Quintans, Jacobo
   Mockly, Guillaume
   Gyrard, Amelie
   Crepax, Tommaso
TI Modeling ecosystems of reference frameworks for assurance: a case on
   privacy impact assessment regulation and guidelines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modelling; OpenCert; Reference frameworks; Privacy; GDPR; ISO 29134;
   Smart grid; Privacy impact assessment
AB To assure certain critical quality properties (e.g., safety, security, or privacy), supervisory authorities and industrial associations provide reference frameworks such as standards or guidelines that in some cases are enforced (e.g., regulations). Given the pace at which both technical advancements and risks appear, there is an increase in the number of reference frameworks. As several frameworks might apply for same systems, certain overlaps appear (e.g., regulations for different countries where the system will operate, or generic standards in conjunction with more concrete standards for a given industrial sector or system type). We propose the use of modelling for alleviating the complexity of these reference frameworks ecosystems, and we provide a tool-supported method to create them for the benefit of different stakeholders. The case study is based on privacy data protection, and more concretely on privacy impact assessment processes. The European GDPR regulates the movement and processing of personal data, and, contrary to available software engineering privacy guidelines, articles in legal texts are usually difficult to translate to the underlying processes, artefacts and roles that they refer to. To facilitate the mutual comprehension of legal experts and engineers, in this work we investigate how mappings can be created between these two domains of expertise. Notably, we rely on modelling as a central point. We modelled the legal requirements of the GDPR on data protection impact assessments, and then, we selected the ISO/IEC 29134, a mainstream engineering guideline for privacy impact assessment, and, taking a concrete sector as example, the EU Smart Grid Data Protection Impact Assessment template. The OpenCert tool was used for providing technical support to both the modelling and the creation of the mapping models in a systematic way. We provide a qualitative evaluation from legal experts and privacy engineering practitioners to report on the benefits and limitations of this approach.
C1 [Ruiz, Alejandra; Martinez, Jabier] Basque Res & Technol Alliance BRTA, Tecnalia, Derio, Spain.
   [Martin, Yod-Samuel; Quintans, Jacobo] Univ Politecn Madrid UPM, Madrid, Spain.
   [Mockly, Guillaume; Gyrard, Amelie] Trialog, Paris, France.
   [Crepax, Tommaso] Scuola Univ Super St Anna, Pisa, Italy.
C3 Universidad Politecnica de Madrid
RP Martinez, J (corresponding author), Basque Res & Technol Alliance BRTA, Tecnalia, Derio, Spain.
EM alejandra.ruiz@tecnalia.com; jabier.martinez@tecnalia.com;
   ys.martin@upm.es; j.quintans@upm.es; guillaume.mockly@trialog.com;
   amelie.gyrard@trialog.com; tommaso.crepax@santannapisa.it
RI García, Yod Samuel Martín/A-4086-2009
OI García, Yod Samuel Martín/0000-0002-0065-5117; Martinez,
   Jabier/0000-0001-8742-9640; Crepax, Tommaso/0000-0003-0379-7521
FU European Union [787034]; H2020 Societal Challenges Programme [787034]
   Funding Source: H2020 Societal Challenges Programme
FX This work has been conducted in the scope of the project PDP4E (Methods
   and tools for GDPR compliance through Privacy and Data Protection
   Engineering). This project has received funding from the European
   Union's Horizon 2020 research and innovation programme under grant
   agreement No 787034.
CR Agarwal Sushant, 2018, Privacy Technologies and Policy. 6th Annual Privacy Forum (APF 2018). Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11079), P131, DOI 10.1007/978-3-030-02547-2_8
   Agostinelli S, 2019, LECT NOTES BUS INF P, V350, P10, DOI 10.1007/978-3-030-21297-1_2
   AMASS Project, AMASS PROJ AMASS DEM
   [Anonymous], 2017, ART 29 WP ARTICLE 29
   Ardila JPC, 2018, EUROMICRO CONF PROC, P45, DOI 10.1109/SEAA.2018.00017
   C.. C.B. Architecture Capability TeamConsultation, 2020, NAT ARCH FRAM
   Christofi A., 2020, EROSION STANDARDISAT, P140
   de Hert P., 2020, COMPUT LAW SECUR REV
   De Hert P., 2016, EUROPEAN DATA PROTEC, V2, P461, DOI [10.21552/EDPL/2016/4/5, DOI 10.21552/EDPL/2016/4/5]
   Diskin Z., CORR
   Eclipse, 2021, OP PLATF
   Goal Structuring Notation Standard Working Group, 2017, GOAL STRUCTURING NOT
   Hansen M, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P159, DOI 10.1109/SPW.2015.13
   ISO/IEC, 2017, 291342017 ISOIEC
   ISO/IEC, 2014, 247442014 ISOIEC
   Lechner R., 2018, SUPPORTING GDPR IMPL
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Martinez J., 2020, ADV INFORM SYSTEMS D
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   North Atlantic Treaty Organization, 2017, AEP67 NAT
   Object Management Group Inc OMG Std., 2008, REV SOFTW SYST PROC
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Palmirani M., 2018, LEGAL KNOWLEDGE INFO
   Palmirani M., 2018, 18 EUROPEAN C DIGITA
   PDP4E consortium, 2020, PDP4E PRIV DAT PROT
   Ruiz A., 2015, SYSTEMS SOFTWARE SER, P29, DOI DOI 10.1007/978-3-319-24647-5_3
   Ruiz A., 2019, AMASS PLATFORM VALID
   Ruiz A., 2020, 10 EUROPEAN C EMBEDD
   Ruiz A, 2017, RELIAB ENG SYST SAFE, V158, P153, DOI 10.1016/j.ress.2016.08.017
   Ruiz A, 2016, LECT NOTES COMPUT SC, V9923, P311, DOI 10.1007/978-3-319-45480-1_25
   Ruiz A, 2015, DES AUT TEST EUROPE, P393
   Smart Grid Task Force 2012-14 Expert Group 2, 2018, REG REC PRIV DAT PRO
   The Open Group, 2022, OP GROUP ARCH FRAM T
   Tom Jake, 2018, Perspectives in Business Informatics Research. 17th International Conference, BIR 2018. Proceedings. Lecture Notes in Business Information Processing (LNBIP 330), P18, DOI 10.1007/978-3-319-99951-7_2
   Torre D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P1, DOI 10.1109/MODELS.2019.00-20
   Union E., 2016, REG EU 2016 679 EUR
   van Heugten M, 2016, LANG SPEECH, V59, P353, DOI 10.1177/0023830915600471
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 38
TC 0
Z9 0
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1175
EP 1196
DI 10.1007/s10270-022-01061-6
EA NOV 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000879691300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Proper, HA
   Wagter, R
   Bekel, J
AF Proper, Henderik A.
   Wagter, Roel
   Bekel, Joost
TI On enterprise coherence governance with GEA: a 15-year co-evolution of
   practice and theory
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture
ID SCIENCE RESEARCH; DESIGN SCIENCE; ARCHITECTURE; FRAMEWORK; ANATOMY
AB General Enterprise Architecting (GEA) is an enterprise architecture method which has emerged out of a need in practice, and has been developed and matured over the past 15 years. The GEA method differs from other enterprise architecture approaches in that it has a strong focus on enterprise coherence and the explicit governance thereof. This focus followed from the observed need to move beyond the Business-IT alignment and 'Business-to-IT' stack thinking that is embodied in most of the existing enterprise architecture approaches. The main objective of this paper is to report, and reflect on, the development of the GEA method (so-far), which involved a co-evolution between theory and practice. In doing so, we also present core elements of (the current version of) GEA, and illustrate these in terms of a real-world (social housing) case. We will, furthermore, also discuss some of the lessons learned in applying GEA across different organizations.
C1 [Proper, Henderik A.] Luxembourg Inst Sci & Technol LIST, Esch Sur Alzette, Luxembourg.
   [Proper, Henderik A.] TU Wien, Vienna, Austria.
   [Wagter, Roel] Solventa BV, Nieuwegein, Netherlands.
   [Bekel, Joost] Maastricht Univ, Maastricht, Netherlands.
C3 Luxembourg Institute of Science & Technology; Technische Universitat
   Wien; Maastricht University
RP Proper, HA (corresponding author), Luxembourg Inst Sci & Technol LIST, Esch Sur Alzette, Luxembourg.; Proper, HA (corresponding author), TU Wien, Vienna, Austria.
EM e.proper@acm.org; roel.wagter@solventa.nl; joost.bekel@casema.nl
OI Proper, Henderik Alex/0000-0002-7318-2496
FU TU Wien (TUW)
FX Open access funding provided by TU Wien (TUW).
CR [Anonymous], 2009, TOGAF VERS 9
   [Anonymous], 2009, Business Model Generation
   Bekel Joost, 2021, Advances in Enterprise Engineering XIV. 10th Enterprise Engineering Working Conference, EEWC 2020. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 411), P213, DOI 10.1007/978-3-030-74196-9_12
   Bekel J, 2020, CONF BUS INFORM, P57, DOI 10.1109/CBI49978.2020.10058
   Channon DF., 2015, Wiley encyclopedia of management, P1, DOI [DOI 10.1002/9781118785317.WEOM120005, DOI 10.1002/9781118785317.WEOM120048]
   Collins JC, 1996, HARVARD BUS REV, V74, P65
   Conklin J., 2005, Dialogue mapping: Building shared understanding of wicked problems
   Fdhila W, 2012, IEEE INT CONF SERV
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   Greefhorst D, 2011, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-20279-7
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Henderson J. C., 1999, IBM Systems Journal, V38, P472, DOI [10.1147/sj.382.0472, 10.1147/SJ.1999.5387096]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   Iacob M.E., 2009, ARCHIMATE 1 0 SPECIF
   Kaplan R S., 2008, Balanced Scorecard Report
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Koc H., 2021, ENTERPRISE BUSINESS, V421, DOI [10.1007/978-3-030-79186-5_15, DOI 10.1007/978-3-030-79186-5_15]
   Land O, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-540-85232-2
   Lankhorst M, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-01310-2
   Lankhorst M., 2017, Enterprise Architecture at Work, DOI DOI 10.1007/978-3-662-53933-0
   Lankhorst MM, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010092301
   Lantow B., 2022, Domain-Specific Conceptual Modeling, P95, DOI [10.1007/978-3-030-93547-4_5, DOI 10.1007/978-3-030-93547-4_5]
   Leinwand P., 2010, ESSENTIAL ADVANTAGE
   Leinwand P, 2010, HARVARD BUS REV, V88, P86
   Magalhaes R., 2017, ORG DESIGN ENTERPRIS, V1, P1, DOI [10.1007/s41251-016-0005-9, DOI 10.1007/S41251-016-0005-9]
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Nabukenya Josephine, 2009, 42ST HAWAII INT INTE, P1, DOI DOI 10.1109/HICSS.2009.44
   Nakakawa A, 2018, INT J COOP INF SYST, V27, DOI 10.1142/S0218843018500107
   Nakakawa A, 2011, INT J COOP INF SYST, V20, P83, DOI 10.1142/S021884301100216X
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2003, Tech. rep. ptc/03-08-02
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Plataniotis G, 2014, LECT NOTES BUS INF P, V197, P133
   Plataniotis G, 2013, LECT NOTES BUS INF P, V165, P24
   Proper H.A., 2018, The Enterprise Engineering Series, DOI [10.1007/978-3-319-69584-6, DOI 10.1007/978-3-319-69584-6]
   Proper HA, 2021, LECT NOTES BUS INF P, V432, P3, DOI 10.1007/978-3-030-91279-6_1
   Proper HA, 2014, ENTERP MODELLING INF, V9, P5, DOI 10.1007/s40786-014-0002-7
   Proper HA, 2014, LECT NOTES BUS INF P, V190, P16, DOI 10.1007/978-3-319-09492-2_2
   Schnelle E., 1978, NEUE WEGE KOMMUNIKAT, V10
   SOWA JF, 1992, IBM SYST J, V31, P590, DOI 10.1147/sj.313.0590
   Stovers R., 2021, GEA ENTERPRISE ARCHI
   TAFIM, 1996, ARCH CONC DES GUID
   Thenmozhi M., 2009, LECT NOTES
   vantWout J, 2010, INTEGRATED ARCHITECTURE FRAMEWORK EXPLAINED: WHY, WHAT, HOW, P1
   Wagter Roel, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P117, DOI 10.1109/CBI.2013.25
   Wagter R., COHERENCE MANAGEMENT, P183, DOI [10.1007/978-3-319-69584-6, DOI 10.1007/978-3-319-69584-6]
   Wagter R., 2013, SYSTEMATIC PERSPECTI
   Wagter R., 2007, GEA4 ORD
   Wagter R., 2007, GEA1 ORD
   Wagter R., PROPER ET, P99, DOI [10.1007/978-3-319-69584-6, DOI 10.1007/978-3-319-69584-6]
   Wagter R., 2009, STUREN SAMENHANG BAS
   Wagter R., 2013, THESIS RADBOUD U NIJ
   Wagter R., 2008, GEA8 ORD
   Wagter R., 2007, GEA2 ORD
   Wagter R., 2007, GEA5 ORD
   Wagter R, 2013, LECT NOTES BUS INF P, V148, P43
   Wagter R, 2012, LECT NOTES BUS INF P, V131, P218
   Wagter R, 2012, LECT NOTES BUS INF P, V112, P600
   Wagter R, 2012, LECT NOTES BUS INF P, V120, P77
   Wagter R, 2012, INT C COMMERCE BUS, P115, DOI 10.1109/CEC.2012.26
   Wagter R, 2012, INT C COMMERCE BUS, P1, DOI 10.1109/CEC.2012.11
   Wagter R, 2011, LECT NOTES BUS INF P, V89, P28
   Wagter Roel., 2005, Dynamic Enterprise Architecture: How to Make it Work
   Winter R., 2006, P IEEE INT ENTERPRIS, DOI [DOI 10.1109/EDOCW.2006.33, 10.1109/EDOCW.2006.33]
   Yin R. K., 2017, CASE STUDY RES DESIG
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 68
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 551
EP 571
DI 10.1007/s10270-022-01059-0
EA OCT 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4J5
UT WOS:000875585700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Reyes-Delgado, PY
   Duran-Limon, HA
   Mora, M
   Rodriguez-Martinez, LC
AF Reyes-Delgado, Paola Y.
   Duran-Limon, Hector A.
   Mora, Manuel
   Rodriguez-Martinez, Laura C.
TI SOCAM: a service-oriented computing architecture modeling method
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture; SOC; SOA; Web-based business systems
ID SOFTWARE ARCHITECTURE; MICROSERVICES; DESIGN; VIEWS; MBASE
AB Software architecture models are considered first-class artifacts in current software engineering best practices. Thus, usable and well-understood modeling methods are required for software architects. For this aim, several specific software architecture modeling methods as well as generic design methods included in software development methodologies are available. However, we believe, there is the lack of more specific guidance in current software architecture methods. One of the principal causes of such a lack of specific guidance is the general-purpose nature of these methods. Therefore, further efforts are required to define domain-specific software architecture methods. In this paper, we present SOCAM, a software architecture modeling method for Web Service-Oriented Systems. We illustrate the use of SOCAM with a customization of the well-known SOA test application case: the Sun Adventure Builder system. A comparative analysis of SOCAM with other methods reveals a number of benefits of our method over the other approaches. Also, a survey research method evaluation confirms some of these benefits such as the fact that SOCAM is perceived as more useful than certain general-purpose methods.
C1 [Reyes-Delgado, Paola Y.] Polytech Univ Aguascalientes, Aguascalientes, Aguascalientes, Mexico.
   [Duran-Limon, Hector A.] Univ Guadalajara, CUCEA, Guadalajara, Jalisco, Mexico.
   [Mora, Manuel] Autonomous Univ Aguascalientes, Aguascalientes, Aguascalientes, Mexico.
   [Rodriguez-Martinez, Laura C.] Tecnol Nacl Mexico IT Aguascalientes, Aguascalientes, Aguascalientes, Mexico.
C3 Universidad de Guadalajara; Universidad Autonoma de Aguascalientes
RP Duran-Limon, HA (corresponding author), Univ Guadalajara, CUCEA, Guadalajara, Jalisco, Mexico.
EM paola.reyes@upa.edu.mx; hduran@cucea.udg.mx; mmora@correo.uaa.mx;
   lrodriguez@mail.ita.mx
OI Duran-Limon, Hector/0000-0002-2069-4711; Reyes Delgado, Paola
   Yuritzy/0000-0002-4603-181X
FU CONACYT
FX We want to thank CONACYT for the scholarship provided to Paola Y.
   Reyes-Delgado.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Al-Shammari HQ, 2020, IEEE ACCESS, V8, P123571, DOI 10.1109/ACCESS.2020.3005936
   Allen I Elaine, 2007, QUAL PROG, V40, P64, DOI DOI 10.1111/J.1365-2929.2004.02012.X
   Andriyanto A, 2019, 2019 INTERNATIONAL CONFERENCE ON ELECTRICAL, ELECTRONICS AND INFORMATION ENGINEERING (ICEEIE), P282, DOI [10.1109/iceeie47180.2019.8981437, 10.1109/ICEEIE47180.2019.8981437]
   Angelov S, 2017, J SYST SOFTWARE, V127, P78, DOI 10.1016/j.jss.2017.01.029
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 1998, Modern Methods for Business Research
   [Anonymous], 1999, APPL SOFTWARE ARCHIT
   [Anonymous], 2007, CMUSEI2007TR015
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Barclay D., 1995, TECHNOL STUDIES, V2, P285
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bezivin J., 2003, 2 OOPSLA WORKSH GEN
   Bianco P., 2011, CMUSEI2011TN008
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   Bonham A, 2017, MICROSERVICES REACT
   Cabrera O, 2021, COMPUTING, V103, P1621, DOI 10.1007/s00607-021-00923-z
   Carroll, 2007, IBM RATIONAL UNIFIED, P1
   Centerfor SoftwareEngineering U.o.S.C, 2003, U O S C GUID MOD BAS
   Chin W.W., 2009, HDB PARTIAL LEAST SQ, P655, DOI DOI 10.1007/978-3-540-32827-8_29
   Clark K., 2016, MICROSERVICES SOA AP
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Corporation M., 2002, MSF PROC MOD V 3 1
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Falk R.F., 1992, PRIMER SOFT MODELING
   Fielding R. T., 2000, Ph.D. dissertation,
   Fornell C, 1987, SELECTING EMPIRICAL, P407
   Fowler M., 2001, Software Development, V9, P28
   Garlan D., 2014, WORKSH FUT SOFTW ENG, P29, DOI DOI 10.1145/2593882.2593886
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Hofmeister C, 2005, IEE P-SOFTW, V152, P187, DOI 10.1049/ip-sen:20045052
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   IEEE, 2018, 14712000IEEE ANSIIEE
   Ingole S, 2021, SN COMPUTER SCI, V2, P1, DOI [10.1007/s42979-021-00539-2, DOI 10.1007/S42979-021-00539-2]
   Josuttis N.M., 2007, SOA in Practice: the Art of Distributed System Design
   Karahanna E, 1999, MIS QUART, V23, P183, DOI 10.2307/249751
   Khalaf Mahdi, 2020, 2020 2nd Al-Noor International Conference for Science and Technology (NICST), P1, DOI 10.1109/NICST50904.2020.9280318
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Kruchten P., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P497, DOI 10.1145/1810295.1810448
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   Kurniawan NB, 2020, IEEE SYST J, V14, P3105, DOI 10.1109/JSYST.2019.2939433
   Lee D., 2001, 22 INT C INFORM SYST, P109
   Lewis James, 2014, Microservices
   Masood T, 2021, J INTELL INF SYST, V56, P255, DOI 10.1007/s10844-020-00617-6
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mendoza-Pitti L, 2021, IEEE ACCESS, V9, P26119, DOI 10.1109/ACCESS.2021.3057543
   Mora M., SOCAM METHOD COMPLEM
   Mora M, 2009, 200935 U AUT AG
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   Pautasso C, 2017, IEEE SOFTWARE, V34, P91, DOI 10.1109/MS.2017.24
   Pelochano P., 2020, J SOFTW ENG RES DEV, V8, DOI [10.5753/jserd.2020.457, DOI 10.5753/JSERD.2020.457]
   Petriu DC, 2014, SOFTW SYST MODEL, V13, P1237, DOI 10.1007/s10270-013-0373-1
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Reyes-Delgado PY, 2016, COMPUT STAND INTER, V47, P24, DOI 10.1016/j.csi.2016.02.005
   Rumez M, 2020, IEEE ACCESS, V8, P221852, DOI 10.1109/ACCESS.2020.3043070
   Selic B, 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P313, DOI 10.1109/ISORC.2006.54
   Selic B, 2021, SOFTW SYST MODEL, V20, P595, DOI 10.1007/s10270-021-00875-0
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Sievi-Korte O, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110400
   Singh R, 2019, MICROSERVICE ORCHEST
   Sánchez ES, 2020, IEEE ACCESS, V8, P93346, DOI 10.1109/ACCESS.2020.2993883
   Valerdi R, 2007, J SYST SOFTWARE, V80, P1185, DOI 10.1016/j.jss.2006.09.051
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Wang YT, 2021, 2021 ASIA-PACIFIC CONFERENCE ON COMMUNICATIONS TECHNOLOGY AND COMPUTER SCIENCE (ACCTCS 2021), P310, DOI 10.1109/ACCTCS52002.2021.00068
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Weinreich R, 2012, J SYST SOFTWARE, V85, P546, DOI 10.1016/j.jss.2011.05.036
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wojcik R., 2006, Tech. Rep. CMU/SEI- 2006-TR-023
   Wood G, 2007, CMUSEI2007TR005
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Zikmund W.G., 1997, BUSINESS RES METHODS
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 78
TC 1
Z9 1
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1551
EP 1581
DI 10.1007/s10270-021-00946-2
EA NOV 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000722970000001
DA 2024-07-18
ER

PT J
AU Burgueño, L
   Cabot, J
   Li, S
   Gérard, S
AF Burgueno, Loli
   Cabot, Jordi
   Li, Shuai
   Gerard, Sebastien
TI A generic LSTM neural network architecture to infer heterogeneous model
   transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model manipulation; Code generation; Model transformation; Artificial
   intelligence; Machine learning; Neural networks
AB Models capture relevant properties of systems. During the models' life-cycle, they are subjected to manipulations with different goals such as managing software evolution, performing analysis, increasing developers' productivity, and reducing human errors. Typically, these manipulation operations are implemented as model transformations. Examples of these transformations are (i) model-to-model transformations for model evolution, model refactoring, model merging, model migration, model refinement, etc., (ii) model-to-text transformations for code generation and (iii) text-to-model ones for reverse engineering. These operations are usually manually implemented, using general-purpose languages such as Java, or domain-specific languages (DSLs) such as ATL or Acceleo. Even when using such DSLs, transformations are still time-consuming and error-prone. We propose using the advances in artificial intelligence techniques to learn these manipulation operations on models and automate the process, freeing the developer from building specific pieces of code. In particular, our proposal is a generic neural network architecture suitable for heterogeneous model transformations. Our architecture comprises an encoder-decoder long short-term memory with an attention mechanism. It is fed with pairs of input-output examples and, once trained, given an input, automatically produces the expected output. We present the architecture and illustrate the feasibility and potential of our approach through its application in two main operations on models: model-to-model transformations and code generation. The results confirm that neural networks are able to faithfully learn how to perform these tasks as long as enough data are provided and no contradictory examples are given.
C1 [Burgueno, Loli; Cabot, Jordi] Open Univ Catalonia, IN3, Barcelona, Spain.
   [Burgueno, Loli; Li, Shuai; Gerard, Sebastien] Univ Paris Saclay, CEA, Inst LIST, Gif Sur Yvette, France.
   [Cabot, Jordi] ICREA, Barcelona, Spain.
C3 UOC Universitat Oberta de Catalunya; Universite Paris Saclay; CEA;
   Universite Paris Cite; ICREA
RP Burgueño, L (corresponding author), Open Univ Catalonia, IN3, Barcelona, Spain.; Burgueño, L (corresponding author), Univ Paris Saclay, CEA, Inst LIST, Gif Sur Yvette, France.
EM lburguenoc@uoc.edu; jordi.cabot@icrea.cat; shuai.li@cea.fr;
   sebastien.gerard@cea.fr
RI Cabot, Jordi/P-7723-2015; Burgueno, Lola/L-3817-2014
OI Gerard, Sebastien/0000-0003-0295-0520; Burgueno,
   Lola/0000-0002-7779-8810
FU Spanish Research project; CEA;  [TIN2016-75944-R]
FX This work is supported by Spanish Research project and TIN2016-75944-R
   and CEA in the context of the Modelia initiative.
CR Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   AtlanMod (Inria), CLASS REL TRANSF EX
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Baki I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2904904
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Bernstein P.A., 2007, SIGMOD 07, P1, DOI DOI 10.1145/1247480.1247482
   Bernstein PA, 2011, PROC VLDB ENDOW, V4, P695
   Bowles C., ARXIV181010863
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Burgueño L, 2019, SOFTW SYST MODEL, V18, P3193, DOI 10.1007/s10270-019-00746-9
   Burgueño L, 2016, INFORM SOFTWARE TECH, V79, P17, DOI 10.1016/j.infsof.2016.06.001
   Buttler D, 2004, IC'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P3
   Cetina C., J SYST SOFTW
   Chaudron M.R., 2014, P 21 AS PAC SOFTW EN
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Cho K., 2014, ARXIV14061078
   Chowdhury GG, 2003, ANNU REV INFORM SCI, V37, P51, DOI 10.1002/aris.1440370103
   Clarete RL, 2018, PHILIPPINE ECONOMY: NO LONGER THE EAST ASIAN EXCEPTION?, P1
   Derksen, 2020, AICOODOO
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Doddington G., 2002, P 2 INT C HUM LANG T, P138
   Elallaoui M, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS: THEORIES AND APPLICATIONS (SITA)
   Font J, 2016, LECT NOTES COMPUT SC, V9679, P39, DOI 10.1007/978-3-319-35122-3_3
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   García-Magariño I, 2009, LECT NOTES COMPUT SC, V5563, P52, DOI 10.1007/978-3-642-02408-5_5
   Gilson F, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P61, DOI 10.1109/ASWEC.2018.00016
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HUNT E, 1971, AM J PSYCHOL, V84, P445, DOI 10.2307/1420478
   Iovino L., 2019, P 22 ACM IEEE INT C
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Koehn P., 2017, ARXIV170603872, P28, DOI DOI 10.18653/V1/W17-3204
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lavrac N., 1994, P WLP 1994 ZUR SWITZ
   Merity S, 2019, ARXIV PREPRINT ARXIV
   Mkaouer MW, 2014, ADV COMPUT, V92, P161, DOI 10.1016/B978-0-12-420232-0.00004-0
   Montenegro, 2018, INT J PERF ENG, V14, P1308
   Object Management Group (OMG), 2005, PTC051101 OMG
   Olivas E.S., 2009, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, DOI 10.4018/978-1-6056-6766-9&BUYLINK=TRUE
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Russell S., 2016, Artificial intelligence a modern approach
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Semeráth O, 2018, LECT NOTES COMPUT SC, V10802, P227, DOI 10.1007/978-3-319-89363-1_13
   Smith L., 2018, DISCIPLINED APPROA 1
   Song D., ARXIV170601284
   Sutskever I, 2014, ADV NEUR IN, V27
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Svozil D, 1997, CHEMOMETR INTELL LAB, V39, P43, DOI 10.1016/S0169-7439(97)00061-0
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Terwilliger JF, 2010, LECT NOTES COMPUT SC, V6412, P146, DOI 10.1007/978-3-642-16373-9_11
   Touahni R., 2018, P 9 INT C AMB SYST N
   Pham VC, 2016, IEEE INT C ENG COMP, P3, DOI [10.1109/ICECCS.2016.15, 10.1109/ICECCS.2016.011]
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Vaswani A, 2017, ADV NEUR IN, V30
   Vidanage, 2016, P 16 INT C ADV ICT E
   Vogel-Heuser, 2014, P 18 INT SOFTW PROD, V2
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Yanqing Wang, 2008, Journal of Software Engineering and Applications, V1, P88, DOI 10.4236/jsea.2008.11013
   Yassipour-Tehrani S., 2020, P 23 ACM IEEE INT C
   Zhang X., 2011, 5 INT C SIGNAL PROCE
NR 71
TC 9
Z9 9
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 139
EP 156
DI 10.1007/s10270-021-00893-y
EA MAY 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000656381300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lukyanenko, R
   Storey, VC
   Pastor, O
AF Lukyanenko, Roman
   Storey, Veda C.
   Pastor, Oscar
TI Foundations of information technology based on Bunge's systemist
   philosophy of reality
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Ontology; Upper-level ontology; General ontology; Mario Bunge;
   Bunge-Wand-Weber ontology; Bunge's Systemist Ontology; Conceptual
   modeling; Software engineering; Database design; IT development; IT
   design; Realworld domains; Reality; Philosophy
ID DATA QUALITY; ONTOLOGY; KNOWLEDGE; SEMANTICS; GUIDELINES; MANAGEMENT;
   FRAMEWORK; INSTANCES; DESIGN; MODEL
AB General ontology is a prominent theoretical foundation for information technology analysis, design, and development. Ontology is a branch of philosophy which studies what exists in reality. A widely used ontology in information systems, especially for conceptual modeling, is the BWW (Bunge-Wand-Weber), which is based on ideas of the philosopher and physicist Mario Bunge, as synthesized by Wand and Weber. The ontology was founded on an early subset of Bunge's philosophy; however, many of Bunge's ideas have evolved since then. An important question, therefore, is: do the more recent ideas expressed by Bunge call for a new ontology? In this paper, we conduct an analysis of Bunge's earlier and more recent works to address this question. We present a new ontology based on Bunge's later and broader works, which we refer to as Bunge's Systemist Ontology (BSO). We then compare BSO to the constructs of BWW. The comparison reveals both considerable overlap between BSO and BWW, as well as substantial differences. From this comparison and the initial exposition of BSO, we provide suggestions for further ontology studies and identify research questions that could provide a fruitful agenda for future scholarship in conceptual modeling and other areas of information technology.
C1 [Lukyanenko, Roman] HEC Montreal, Montreal, PQ, Canada.
   [Storey, Veda C.] Georgia State Univ, Atlanta, GA 30303 USA.
   [Pastor, Oscar] Univ Politecn Valencia, Valencia, Spain.
C3 Universite de Montreal; HEC Montreal; University System of Georgia;
   Georgia State University; Universitat Politecnica de Valencia
RP Lukyanenko, R (corresponding author), HEC Montreal, Montreal, PQ, Canada.
EM roman.lukyanenko@mun.ca
RI Pastor Lopez, Oscar/S-4216-2016
OI Pastor Lopez, Oscar/0000-0002-1320-8471; Storey,
   Veda/0000-0002-8735-1553
CR Agazzi E., 2019, M BUNGE CENTENARY FE, P219
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Anderson Michael., 2013, CIDR
   [Anonymous], 1988, PROC INT CONF INFORM
   [Anonymous], 2012, LUCIANO FLORIDIS PHI, DOI DOI 10.1007/978-94-007-4292-5_13
   Batini C, 2015, J DATABASE MANAGE, V26, P60, DOI 10.4018/JDM.2015010103
   Beck J., 2010, P 18 EUR C INF SYST, P1
   Bengio Y., 2020, ACMIEEE INT C MODEL
   Bera P, 2014, INFORM SYST RES, V25, P401, DOI 10.1287/isre.2014.0515
   Bera P, 2011, MIS QUART, V35, P883
   Berners-Lee T., 2001, SCI AM MAG, V284, P28, DOI [10.1038/scientificamerican0501-28, DOI 10.1038/SCIENTIFICAMERICAN0501-28]
   Bishop Christopher M, 2006, PATTERN RECOGNITION, DOI DOI 10.1117/1.2819119
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Bonney R, 2009, BIOSCIENCE, V59, P977, DOI 10.1525/bio.2009.59.11.9
   BUNGE M, 1945, NATURE, V156, P301, DOI 10.1038/156301a0
   Bunge M., 2000, The Journal of Socio-Economics, V29, P147, DOI [DOI 10.1016/S1053-5357(00)00058-5, 10.1016/S1053-5357(00)00058-5]
   Bunge M., 1974, TREATISE BASIC PHILO, V8, DOI [10.1007/978-94-010-9920-2, DOI 10.1007/978-94-010-9920-2]
   Bunge M., 1998, Philosophy of science: From explanation to justification
   Bunge M., 2016, 2 WORLDS MEMOIRS SCI, DOI [10.1007/978-3-319-29251-9, DOI 10.1007/978-3-319-29251-9]
   Bunge M., 1979, TREATISE BASIC PHILO, V4, DOI DOI 10.1007/978-94-009-9392-1
   Bunge M., 1996, FINDING PHILOS SOCIA
   Bunge M. A., 2019, IMPACT CRITICAL RATI, P109
   Bunge M. A., 1989, TREATIES BASIC PHILO, DOI [10.1007/978-94-009-2601-1, DOI 10.1007/978-94-009-2601-1]
   Bunge M.A., 2003, Emergence and convergence: Qualitative novelty and the unity of knowledge
   Bunge MA., 2017, PHILOS SCI VOLUME 2, DOI [10.4324/9781315126388, DOI 10.4324/9781315126388]
   Bunge MA., 1983, TREATISE BASIC PHILO, V6, DOI [10.1007/978-94-015-6921-7, DOI 10.1007/978-94-015-6921-7]
   Bunge MA., 2018, CYBERNETICS APPL SYS, P23, DOI [10.1201/9781482277180-3, DOI 10.1201/9781482277180-3]
   Bunge MA., 2006, CHASING REALITY STRI, DOI [10.3138/9781442672857, DOI 10.3138/9781442672857]
   Bunge Mario, 1985, Philosophy of Science and Technology, VVII
   Bunge Mario, 1977, Treatise on Basic Philosophy: Ontology I: The Furniture of the World, V3, DOI [10.1007/978-94-010-9924-0, DOI 10.1007/978-94-010-9924-0]
   Burton Antoinette., 2002, After the Imperial Turn, P1
   Burton-Jones A, 2014, COMPUTING HDB INFORM, P316
   Burton-Jones A, 2017, MIS QUART, V41, P1307
   Castellanos A., 2018, AIS SIGSAND, P1
   Castellanos A, 2020, J ASSOC INF SYST, V21, P1001, DOI 10.17705/1jais.00627
   Cheng H, 2009, EXPERT SYST APPL, V36, P3614, DOI 10.1016/j.eswa.2008.02.047
   Conesa J, 2010, DATA KNOWL ENG, V69, P343, DOI 10.1016/j.datak.2009.08.002
   Daniel F, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148148
   Dosilovic FK, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P210, DOI 10.23919/MIPRO.2018.8400040
   Duarte BB, 2018, LECT NOTES COMPUT SC, V11157, P349, DOI 10.1007/978-3-030-00847-5_25
   Duboue P., 2020, ART FEATURE ENG ESSE, DOI DOI 10.1017/9781108671682
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Eveleigh A, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2985, DOI 10.1145/2556288.2557262
   Evermann J, 2006, J COMPUT INFORM SYST, V46, P14, DOI 10.1080/08874417.2006.11645922
   Fletcher G., 2013, ALTAS SUMMIT 2013
   Gangemi A, 2002, LECT NOTES ARTIF INT, V2473, P166
   Garzotto F., 1999, Advances in Conceptual Modeling. ER'99 Workshop on Evolution and Change in Data Management, Reverse Engineering in Information Systems, and the World Wide Web and Conceptual Modeling. Proceedings (Lecture Notes in Computer Science Vol.1727), P293
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Gonzalez-Perez C., 2015, INT SUMMER SCH GENER, P26
   Guarino N, 1995, INT J HUM-COMPUT ST, V43, P625, DOI 10.1006/ijhc.1995.1066
   Guerreiro Sergio, 2013, ICSOFT 2013. Proceedings of the 8th International Joint Conference on Software Technologies, P578
   Guizzardi G, 2015, APPL ONTOL, V10, P259, DOI 10.3233/AO-150157
   Guizzardi Giancarlo., 2005, CTIT PhD Thesis Series, P05, DOI [10.1007/978-3-642-31095-9_45, DOI 10.1007/978-3-642-31095-9_45]
   Gunning D, 2019, AI MAG, V40, P44, DOI 10.1609/aimag.v40i2.2850
   Gupta SK, 2019, COMPUT IND ENG, V127, P274, DOI 10.1016/j.cie.2018.12.002
   HACKING I, 1991, PHILOS STUD, V61, P109, DOI 10.1007/BF00385836
   Hempel Carl G., 1966, Philosophy of Natural Science
   Henderson-Sellers B, 2015, LECT NOTES COMPUT SC, V9381, P3, DOI 10.1007/978-3-319-25264-3_1
   Herre H, 2010, THEORY AND APPLICATIONS OF ONTOLOGY: COMPUTER APPLICATIONS, P297, DOI 10.1007/978-90-481-8847-5_14
   Hirst RJ., 2002, PROBLEMS PERCEPTION
   Itzik N, 2016, IEEE T SOFTWARE ENG, V42, P687, DOI 10.1109/TSE.2015.2512599
   Jonsson T, 2019, COMM COM INF SC, V1064, P176, DOI 10.1007/978-3-030-30278-8_21
   Lukyanenko R., 2019, INT C CONC MOD, P133
   Lukyanenko R, 2020, LECT NOTES COMPUT SC, V12584, P26, DOI 10.1007/978-3-030-65847-2_3
   Lukyanenko R, 2019, LECT NOTES BUS INF P, V350, P170, DOI 10.1007/978-3-030-21297-1_15
   Lukyanenko R, 2020, INFORM SYST FRONT, V22, P961, DOI 10.1007/s10796-019-09915-z
   Lukyanenko R, 2019, MIS QUART, V43, P623, DOI 10.25300/MISQ/2019/14439
   Lukyanenko R, 2019, EUR J INFORM SYST, V28, P68, DOI 10.1080/0960085X.2018.1488567
   Lukyanenko R, 2017, J ASSOC INF SYST, V18, P297, DOI 10.17705/1jais.00456
   Lukyanenko R, 2014, INFORM SYST RES, V25, P669, DOI 10.1287/isre.2014.0537
   March ST, 2014, COMMUN ASSOC INF SYS, V34, P1347
   Ferrandis AMM, 2013, LECT NOTES COMPUT SC, V8217, P471, DOI 10.1007/978-3-642-41924-9_40
   Matthews M., 2019, M BUNGE CENTENARY FE
   Mayr HC, 2021, SOFTW SYST MODEL, V20, P7, DOI 10.1007/s10270-020-00836-z
   Mcdaniel M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3329124
   Milton SK., 2007, SCAND J INF SYST, V19, P5
   Mylopoulos J, 1998, INFORM SYST, V23, P127, DOI 10.1016/S0306-4379(98)00005-2
   Nelson R.R., 2007, MIS Quarterly executive, V6
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Parsons J, 2000, ACM T DATABASE SYST, V25, P228, DOI 10.1145/357775.357778
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pastor O, 2008, LECT NOTES BUS INF, V5, P258
   Pastor O, 2016, LECT NOTES COMPUT SC, V9974, P18, DOI 10.1007/978-3-319-46397-1_2
   Purao S, 2005, APPL ONTOL, V1, P117
   Recker J, 2007, COMMUN ASSOC INF SYS, V20, P774
   Recker J, 2021, MIS QUART, V45, P269, DOI 10.25300/MISQ/2021/16027
   Recker J, 2011, MIS QUART, V35, P57
   Reinhartz-Berger I, 2014, LECT NOTES COMPUT SC, V8484, P150, DOI 10.1007/978-3-319-07881-6_11
   Reinhartz-Berger I, 2013, DATA KNOWL ENG, V87, P320, DOI 10.1016/j.datak.2012.09.005
   Rosemann M., 2005, BPTrends, V2, P1
   Saghafi A., 2014, HAWAII INT C SYSTEM, P1
   Samuel BM, 2018, MIS QUART, V42, P1187, DOI 10.25300/MISQ/2018/13255
   Searle J.R., 2007, CONSTRUCTION SOCIAL
   Seiden Abraham., 2005, Particle Physics: A Comprehensive Introduction
   Soffer P., 2001, Requirements Engineering, V6, P183, DOI 10.1007/PL00010359
   Soffer P, 2005, BUS PROCESS MANAG J, V11, P663, DOI 10.1108/14637150510630837
   Spreeuwenberg S., 2019, AIX ARTIFICIAL INTEL
   Stephanidis C, 2019, INT J HUM-COMPUT INT, V35, P1229, DOI 10.1080/10447318.2019.1619259
   Storey VC, 2002, IEEE T KNOWL DATA EN, V14, P1, DOI 10.1109/69.979969
   Sugumaran V, 2002, DATA KNOWL ENG, V42, P251, DOI 10.1016/S0169-023X(02)00048-4
   Sugumaran V, 2006, ACM T DATABASE SYST, V31, P1064, DOI 10.1145/1166074.1166083
   Verdonck M, 2019, INFORM SYST, V81, P92, DOI 10.1016/j.is.2018.11.009
   Veres C, 2004, LECT NOTES ARTIF INT, V2980, P26
   Vessey I., 2004, ACIS 2004 P, P78
   Voss K., 1999, FRAMEWORK INFORM SYS, V20
   WAND Y, 1995, INFORM SYST J, V5, P203, DOI 10.1111/j.1365-2575.1995.tb00108.x
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   WAND Y, 1995, DECIS SUPPORT SYST, V15, P285, DOI 10.1016/0167-9236(94)00043-6
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Wand Y, 1996, COMMUN ACM, V39, P86, DOI 10.1145/240455.240479
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Wand Y., 1990, Mario Bunge's Ontology as a formal foundation for information systems concepts, P123
   Wand Y, 2017, J DATABASE MANAGE, V28, P1, DOI 10.4018/JDM.2017010101
   Watson R, 2020, AMCIS 2020 PROCEEDINGS
   Weber R., 2003, Journal of Database Management, V14, P1, DOI 10.4018/jdm.2003070101
   Weber R., 2003, ANN S RES SYST AN DE
   Weber R., 1997, Ontological foundations of information systems: Coopers Lybrand and the Accounting Association of Australia and New
   Weber R., 1996, INT C INF SYST 1996
   Weber R., 2021, MIS QUART, P1
   Weinhardt C, 2020, BUS INFORM SYST ENG+, V62, P273, DOI 10.1007/s12599-020-00663-y
   Wyssusek B., 2006, Scandinavian Journal of Information Systems, V18, P63
   Yoo Y., 2005, Information and organization, V15, P91, DOI DOI 10.1016/J.INFOANDORG.2005.02.006
NR 122
TC 7
Z9 7
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 921
EP 938
DI 10.1007/s10270-021-00862-5
EA JAN 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UL2LY
UT WOS:000608386500001
PM 33488323
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Adamo, G
   Ghidini, C
   Di Francescomarino, C
AF Adamo, Greta
   Ghidini, Chiara
   Di Francescomarino, Chiara
TI What is a process model composed of? A systematic literature review of
   meta-models in BPM
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Business Process Modelling; Conceptual Modelling; Meta-Models
ID BUSINESS; WORKFLOW; KNOWLEDGE; LANGUAGE; MANAGEMENT; METAMODEL; PATTERNS
AB Business process modelling languages typically enable the representation of business process models by employing (graphical) symbols. These symbols can vary depending upon the verbosity of the language, the modelling paradigm, the focus of the language and so on. To make explicit different constructs and rules employed by a specific language, as well as bridge the gap across different languages, meta-models have been proposed in the literature. These meta-models are a crucial source of knowledge on what state-of-the-art literature considers relevant to describe business processes. The goal of this work is to provide the first extensive systematic literature review (SLR) of business process meta-models. This SLR aims to answer research questions concerning: (1) the kind of meta-models proposed in the literature, (2) the recurring constructs they contain, (3) their purposes and (4) their evaluations. The SRL was performed manually considering papers automatically retrieved from reference paper repositories as well as proceedings of the main conferences in the Business Process Management research area. Sixty-five papers were selected and evaluated against four research questions. The results indicate the existence of a reasonable body of work conducted in this specific area, but not a full maturity. In particular, in answering the research questions several challenges have (re-)emerged for the Business Process Community, concerning: (1) the type of elements that constitute a Business Process and their meaning, (2) the absence of a (or several) reference meta-model(s) for the community, (3) the purpose for which meta-models are introduced in the literature and (4) a framework for the evaluation of the meta-models themselves. Moreover, the classification framework devised to answer the four research questions can provide a reference structure for future descriptive categorizations.
C1 [Adamo, Greta; Ghidini, Chiara; Di Francescomarino, Chiara] Fdn Bruno Kessler, Via Sommar 18, I-38123 Povo, TN, Italy.
   [Adamo, Greta] Univ Genoa, DIBRIS, Via Dodecaneso 35, I-16146 Genoa, GE, Italy.
C3 Fondazione Bruno Kessler; University of Genoa
RP Adamo, G (corresponding author), Fdn Bruno Kessler, Via Sommar 18, I-38123 Povo, TN, Italy.; Adamo, G (corresponding author), Univ Genoa, DIBRIS, Via Dodecaneso 35, I-16146 Genoa, GE, Italy.
EM adamo@fbk.eu; ghidini@fbk.eu; dfmchiara@fbk.eu
RI Ghidini, Chiara/M-3931-2017
OI Adamo, Greta/0000-0001-8108-2383
CR Adamo G, 2020, LECT NOTES COMPUT SC, V12127, P384, DOI 10.1007/978-3-030-49435-3_24
   Adamo G, 2018, LECT NOTES ARTIF INT, V11298, P139, DOI 10.1007/978-3-030-03840-3_11
   Adamo G, 2017, LECT NOTES ARTIF INT, V10640, P215, DOI 10.1007/978-3-319-70169-1_16
   Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Ahn H., 2018, P 20 INT C ENT INF S, P690
   Albert P, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P285
   Amjad A, 2018, IEEE ACCESS, V6, P76198, DOI 10.1109/ACCESS.2018.2883610
   [Anonymous], 2006, WORKING GROUP I11 RE
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], 2002, LNCS
   Arevalo C, 2016, INFORM SOFTWARE TECH, V77, P17, DOI 10.1016/j.infsof.2016.05.004
   Axenath Bjorn, 2007, International Journal of Business Process Integration and Management, V2, P120, DOI 10.1504/IJBPIM.2007.015136
   Ben Hassen M., 2017, P 7 INT S BUS MOD SO
   Bernardi ML, 2012, PROCEEDINGS OF THE TWELFTH INTERNATIONAL WORKSHOP ON WEB INFORMATION AND DATA MANAGEMENT, P73
   Bessai K, 2009, LECT NOTES BUS INF, V29, P187
   Bhattacharya K., 2009, HDB FRESEARCH BUSINE, P503
   Bouchbout K., 2010, P 6 INT WORKSH ENT O, P42
   Bouneffa M, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P37, DOI 10.5220/0004441400370045
   Braun L, 2014, 2014 European Frequency and Time Forum (EFTF), P9, DOI 10.1109/EFTF.2014.7331414
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brings J, 2018, P 22 INT C EV ASS SO, P35, DOI DOI 10.1145/3210459.3210463
   Brüning J, 2011, IEEE INT ENTERP DIST, P97, DOI 10.1109/EDOC.2011.31
   Cherfi SSS, 2013, J DATA SEMANT, V2, P75, DOI 10.1007/s13740-013-0022-4
   Combemale B, 2008, LECT NOTES BUS INF P, V12, P286
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Damaggio E, 2013, INFORM SYST, V38, P561, DOI 10.1016/j.is.2012.09.002
   Davis, 2001, BUSINESS PROCESS MOD, DOI [10.1007/978-1-4471-0321-9, DOI 10.1007/978-1-4471-0321-9]
   De Giacomo G, 2015, LECT NOTES COMPUT SC, V9097, P84, DOI 10.1007/978-3-319-19069-3_6
   De Nicola Antonio, 2010, Database and Expert Systems Applications. Proceedings 21st International Conference, DEXA 2010, P76, DOI 10.1007/978-3-642-15364-8_6
   Dorndorfer J., 2017, THOUGHT LEADERSHIP D
   Eder J., 2002, Advances in Databases and Information Systems. 6th East European Conference, ADBIS 2002. Proceedings (Lecture Notes in Computer Science Vol.2435), P326
   Elgammal A, 2016, SOFTW SYST MODEL, V15, P119, DOI 10.1007/s10270-014-0395-3
   Fanesi D, 2015, 2015 INTERNATIONAL CONFERENCE ON ENTERPRISE SYSTEMS (ES), P21, DOI 10.1109/ES.2015.10
   Farrell ADH, 2007, GROUP DECIS NEGOT, V16, P213, DOI 10.1007/s10726-006-9064-4
   Friedenstab JP, 2012, P 45 HAW INT C SYST, P4158, DOI DOI 10.1109/HICSS.2012.276
   Gao S, 2010, LECT NOTES BUS INF P, V68, P162
   Gasevic D, 2004, LECT NOTES COMPUT SC, V3053, P284
   Goedertier S, 2007, LECT NOTES COMPUT SC, V4805, P603
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Groznik A, 2002, ITI 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY INTERFACES, P405, DOI 10.1109/ITI.2002.1024707
   Guizzardi G., 2005, GREEN PF, P345
   Guizzardi Giancarlo., 2005, CTIT PhD Thesis Series, P05, DOI [10.1007/978-3-642-31095-9_45, DOI 10.1007/978-3-642-31095-9_45]
   Haller A., 2006, P 15 INT C WORLD WID, P1055
   Hamri S., 2005, P 1 INT ACM WORKSH I, P31
   HASSEN M. B., 2016, INT C INTELLIGENT SY, P1015
   Heidari Farideh, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P216, DOI 10.1109/CBI.2013.38
   Heidari F, 2011, LECT NOTES BUS INF P, V88, P85
   Hua Z., 2010, P INT C INF SYST ICI
   Jannaber S., 2016, MODELLIERUNG 2016 P, VP-255, P13
   Johansson H.J., 1993, Business Process Reengineering: Break Point Strategies for Market Dominance
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Korherr B, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P287
   Krumeich J., 2016, TAGUNGSBAND ZURMULTI, P81
   Kunchala J., 2014, WEB INFORM SYSTEMS E, V9051, P117
   Kwan MM, 2003, DECIS SUPPORT SYST, V35, P467, DOI 10.1016/S0167-9236(02)00126-4
   La Rosa M, 2008, LECT NOTES COMPUT SC, V5231, P199, DOI 10.1007/978-3-540-87877-3_16
   List B, 2005, LECT NOTES COMPUT SC, V3770, P85, DOI 10.1007/11568346_10
   List B., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1532, DOI 10.1145/1141277.1141633
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Mahdi K, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P72, DOI 10.1109/ICCTA.2012.6523550
   Martins PV, 2015, PROCEDIA COMPUT SCI, V64, P314, DOI 10.1016/j.procs.2015.08.495
   Mertens S, 2017, EXPERT SYST APPL, V87, P316, DOI 10.1016/j.eswa.2017.06.024
   Meyer A., 2013, Business Process Management Workshops-BPM 2013 International Workshops, Beijing, China, August 26, 2013, Revised Papers, P167, DOI DOI 10.1007/978-3-319-06257-0_14
   Milanovic M., 2008, P 2008 12 ENT DISTR, P11, DOI DOI 10.1109/ED0CW.2008.23
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   Momotko M, 2004, LECT NOTES COMPUT SC, V3255, P306
   Muehlen M. Z., 2004, Information Technology & Management, V5, P271, DOI 10.1023/B:ITEM.0000031582.55219.2b
   Müller D, 2007, LECT NOTES COMPUT SC, V4803, P131
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Natschläger C, 2011, LECT NOTES BUS INF P, V95, P1
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Nicola A., 2007, Indian International Conference on Artificial Intelligence - IICAI, P1794
   Ouali S, 2016, PROCEDIA COMPUT SCI, V96, P654, DOI 10.1016/j.procs.2016.08.247
   Papadopoulos G, 2003, J HIGH ENERGY PHYS, DOI 10.1108/13673270310477261
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Ramdoyal R, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P243, DOI 10.5220/0004417002430250
   Ramon-Stroppi LJ, 2011, 14 IB C SOFTW ENG, P25
   Redding E, 2009, IEEE MILIT COMMUN C, P416
   Rittgen P, 2006, EUR J INFORM SYST, V15, P70, DOI 10.1057/palgrave.ejis.3000597
   Rosemann Michael, 2008, International Journal of Business Process Integration and Management, V3, P47, DOI 10.1504/IJBPIM.2008.019347
   Ruiz M, 2014, LECT NOTES COMPUT SC, V8484, P332, DOI 10.1007/978-3-319-07881-6_23
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N, 2016, INF SYST S, P1
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Santos P.Jr., 2010, P 2010 ACM S APPL CO, P124, DOI DOI 10.1145/1774088.1774114
   Santos Paulo S.  Jr., 2011, International Journal of Business Process Integration and Management, V5, P130, DOI 10.1504/IJBPIM.2011.040205
   Scheer AW, 2013, ARIS GESCHAFTSPROZES
   Sprovieri D, 2015, 2015 INTERNATIONAL CONFERENCE ON ENTERPRISE SYSTEMS (ES), P225, DOI 10.1109/ES.2015.30
   Stratigaki C, 2016, CONF BUS INFORM, P8, DOI 10.1109/CBI.2016.43
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Ter Hofstede A.H. M., 2010, Modern business process automation: YAWL and its support environment, DOI DOI 10.1007/978-3-642-03121-2
   Thabet D, 2015, INNOVATION MANAGEMENT AND SUSTAINABLE ECONOMIC COMPETITIVE ADVANTAGE: FROM REGIONAL DEVELOPMENT TO GLOBAL GROWTH, VOLS I - VI, 2015, P44
   Thom L.H., 2005, P 2 GI WORKSH XML4BP, V145, P65
   van der Aalst WMP, 2001, DATA KNOWL ENG, V38, P335, DOI 10.1016/S0169-023X(01)00034-9
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Weigand H, 2006, LECT NOTES COMPUT SC, V4001, P321, DOI 10.1007/11767138_22
   Weiss B., 2011, Proceedings of the 44th Hawaii International Conference on System Sciences (HICSS), P1, DOI DOI 10.1109/HICSS.2011.16
   Yahya F., 2016, P 18 INT C INF INT W, P345
   2008, LECT NOTES BUS INF P, V6, P17
NR 102
TC 1
Z9 1
U1 4
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1215
EP 1243
DI 10.1007/s10270-020-00847-w
EA JAN 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000606351200001
DA 2024-07-18
ER

PT J
AU Goncalves, E
   Almendra, C
   Goulao, M
   Araujo, J
   Castro, J
AF Goncalves, Enyo
   Almendra, Camilo
   Goulao, Miguel
   Araujo, Joao
   Castro, Jaelson
TI Using empirical studies to mitigate symbol overload in iStar extensions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering; Semiotic clarity principle; Symbol overload;
   Experiment; Modelling language extensions; iStar
ID FRAMEWORK; STEREOTYPY
AB Modelling languages are frequently extended to include new constructs to be used together with the original syntax. New constructs may be proposed by adding textual information, such as UML stereotypes, or by creating new graphical representations. Thus, these new symbols need to be expressive and proposed in a careful way to increase the extension's adoption. A method to create symbols for the original constructs of a modelling language was proposed and has been used to create the symbols when a new modelling language is designed. We argue this method can be used to recommend new symbols for the extension's constructs. However, it is necessary to make some adjustments since the new symbols will be used with the existing constructs of the modelling language original syntax. In this paper, we analyse the usage of this adapted method to propose symbols to mitigate the occurrence of overloaded symbols in the existing iStar extensions. We analysed the existing iStar extensions in an SLR and identified the occurrence of symbol overload among the existing constructs. We identified a set of fifteen overloaded symbols in existing iStar extensions. We used these concepts with symbol overload in a multi-stage experiment that involved users in the visual notation design process. The study involved 262 participants, and its results revealed that most of the new graphical representations were better than those proposed by the extensions, with regard to semantic transparency. Thus, the new representations can be used to mitigate this kind of conflict in iStar extensions. Our results suggest that next extension efforts should consider user-generated notation design techniques in order to increase the semantic transparency.
C1 [Goncalves, Enyo; Almendra, Camilo] Univ Fed Ceara, Av Jose de Freitas Queiroz 5003, BR-63900000 Quixada, CE, Brazil.
   [Goncalves, Enyo; Almendra, Camilo; Castro, Jaelson] Univ Fed Pernambuco, CIN, LER, Recife, PE, Brazil.
   [Goulao, Miguel; Araujo, Joao] Univ Nova Lisboa, FCT, NOVA LINCS, Lisbon, Portugal.
C3 Universidade Federal do Ceara; Universidade Federal de Pernambuco;
   Universidade Nova de Lisboa
RP Goncalves, E (corresponding author), Univ Fed Ceara, Av Jose de Freitas Queiroz 5003, BR-63900000 Quixada, CE, Brazil.; Goncalves, E (corresponding author), Univ Fed Pernambuco, CIN, LER, Recife, PE, Brazil.
EM enyo@ufc.br; camilo.almendra@ufc.br; mgoul@fct.unl.pt;
   joao.araujo@fct.unl.pt; jbc@cin.ufpe.br
RI Castro, Jaelson F B/C-8334-2009; Goulão, Miguel/AAB-8223-2020; Araujo,
   Joao/G-2108-2011; Araujo, Joao/M-3560-2013
OI Goulão, Miguel/0000-0002-5356-5203; Araujo, Joao/0000-0001-5914-1631
CR Ali R, 2014, SOFTW SYST MODEL, V13, P433, DOI 10.1007/s10270-012-0255-y
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   [Anonymous], INT C ADV INF SYST E
   [Anonymous], 2018, CADERNOS IME SERIE I
   [Anonymous], 11 INT I WORKSH COLL
   [Anonymous], INT I WORKSH
   [Anonymous], C CTR ADV STUD COLL
   [Anonymous], 37 INT C CONC MOD
   [Anonymous], INT C CONC MOD
   [Anonymous], 2001, ISO B
   [Anonymous], INT C ADV INF SYST E
   [Anonymous], 3 E EUR REG C ENG CO
   [Anonymous], 1 WORKSH SOC ASP SEC
   [Anonymous], ENTERPRISE
   [Anonymous], XIPHO EXTENDING TROP
   [Anonymous], INT C CONC MOD
   [Anonymous], J SYST SOFTW UNPUB
   [Anonymous], INT C CONC MOD
   [Anonymous], IEEE INT C REQ ENG
   [Anonymous], INT ISTAR WORKSH IEE
   [Anonymous], INT C ADV INF SYST E
   Brambilla M., 2012, MORGAN CLAYPOOL PUBL
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Dalpiaz F., 2016, ISTAR 20 LANGUAGE GU
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Estrada H, 2013, COMPUT SIST, V17, P625, DOI 10.13053/CyS-17-4-2013-013
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Ghanavati Sepideh, 2014, 6 INT WORKSH MOD SOF, P1
   Giorgini P., 2005, GOAL ORIENTED REQUIR
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Goncalves E., 2019, THESIS
   Gonçalves E, 2019, REQUIR ENG, V24, P55, DOI 10.1007/s00766-018-0302-5
   Gonçalves E, 2018, J SYST SOFTWARE, V137, P1, DOI 10.1016/j.jss.2017.11.023
   Goodman Nelson., 1968, LANGUAGE ART APPROAC
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Henriques H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P200, DOI 10.1145/3239372.3239387
   HOWELL WC, 1968, ORGAN BEHAV HUM PERF, V3, P310, DOI 10.1016/0030-5073(68)90012-3
   Islam Shareeful, 2012, International Journal of Secure Software Engineering, V3, P1, DOI 10.4018/jsse.2012070101
   JONES S, 1983, ERGONOMICS, V26, P605, DOI 10.1080/00140138308963379
   Juristo N., 2013, BASICS SOFTWARE ENG
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mellado D, 2014, COMPUT STAND INTER, V36, P711, DOI 10.1016/j.csi.2013.12.006
   Mendonça DF, 2016, INFORM SOFTWARE TECH, V80, P245, DOI 10.1016/j.infsof.2016.09.005
   Miles R., 2006, LEARNING UML 2 0
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Morandini M, 2017, REQUIR ENG, V22, P77, DOI 10.1007/s00766-015-0236-0
   Mouratidis H, 2013, J SYST SOFTWARE, V86, P2276, DOI 10.1016/j.jss.2013.03.011
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   YU E, 1997, P 3 IEEE INT C REQ E
   ZWAGA HJ, 1983, APPL ERGON, V14, P43, DOI 10.1016/0003-6870(83)90220-X
NR 51
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 763
EP 784
DI 10.1007/s10270-019-00770-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800013
DA 2024-07-18
ER

PT J
AU Munk, P
   Nordmann, A
AF Munk, Peter
   Nordmann, Arne
TI Model-based safety assessment with SysML and component fault trees:
   application and lessons learned
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based systems engineering; MBSE; Model-based safety analysis;
   MBSA; Fault trees; Fault tree analysis; FTA; Component fault tree; CFT;
   Failure mode and effects analysis; FMEA; Safety; Reliability;
   Dependability
ID OPTIMIZATION
AB Mastering the complexity of safety assurance for modern, software-intensive systems is challenging in several domains, such as automotive, robotics, and avionics. Model-based safety analysis techniques show promising results to handle this challenge by automating the generation of required artifacts for an assurance case. In this work, we adapt prominent approaches and propose to augment of SysML models with component fault trees (CFTs) to support the fault tree analysis and the failure mode and effects analysis. While most existing approaches based on CFTs are only targeting the system topology, e. g., UML class diagrams, we propose an integration of CFTs with SysML internal block diagrams as well as SysML activity diagrams. We realized our approach in a prototypical tool. We conclude with best practices and lessons learned that emerged from our case studies with an electronic power steering system and a boost recuperation system.
C1 [Munk, Peter; Nordmann, Arne] Robert Bosch GmbH, Corp Sect Res & Adv Engn, D-71272 Renningen, Germany.
C3 Bosch
RP Munk, P (corresponding author), Robert Bosch GmbH, Corp Sect Res & Adv Engn, D-71272 Renningen, Germany.
EM peter.munk@de.bosch.com; arne.nordmann@de.bosch.com
RI Munk, Peter/AAW-9132-2021
OI Munk, Peter/0000-0001-6674-9434; Nordmann, Arne/0000-0002-0179-1655
FU German Federal Ministry for Education and Research [16KIS0792]
FX We thank our anonymous reviewers for their helpful and detailed
   feedback. This work was partially funded within the project SecForCARs
   by the German Federal Ministry for Education and Research with funding
   ID 16KIS0792. The responsibility for the content remains with the
   authors.
CR Aizpurua JI, 2016, SAFETY, V2, DOI 10.3390/safety2020009
   Alshboul B., 2018, J. Softw. Eng. Appl, V11, P204, DOI [10.4236/jsea.2018.115013, DOI 10.4236/JSEA.2018.115013]
   Amarnath R., 2016, P INT S SOFTW REL EN
   [Anonymous], P 1 INT C MOD DRIV E
   [Anonymous], 2013, INT J ADV SECURITY
   [Anonymous], 2017, RECENT ADV EVOLUTION
   [Anonymous], 2010, P WORKSH CAARS
   [Anonymous], 2011, LECT NOTES COMPUTER
   Biggs Geoffrey, 2018, INCOSE International Symposium, V28, P1322, DOI 10.1002/j.2334-5837.2018.00551.x
   Choley JY, 2016, PROCEDIA COMPUT SCI, V95, P32, DOI 10.1016/j.procs.2016.09.290
   Clegg K, 2019, LECT NOTES COMPUT SC, V11698, P85, DOI 10.1007/978-3-030-26601-1_6
   Deng YL, 2015, PROG NUCL ENERG, V85, P192, DOI 10.1016/j.pnucene.2015.06.019
   Domis D, 2008, LECT NOTES COMPUT SC, V5219, P58, DOI 10.1007/978-3-540-87698-4_8
   Greiner Simon, 2019, Model-Based Safety and Assessment. 6th International Symposium, IMBSA 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11842), P125, DOI 10.1007/978-3-030-32872-6_9
   Grunske Lars, 2004, THESIS
   Helle P, 2013, PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MODEL BASED ARCHITECTING AND CONSTRUCTION OF EMBEDDED SYSTEMS (ACES'MB 2012), P19
   Höfig K, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P167, DOI 10.1109/SEAA.2015.26
   Hofig K., 2018, P ANN REL MAINT S RA
   IEC, IEC 60812: Analysis Techniques for System Reliability-Procedure for Failure Mode and Effects Analysis (FMEA)
   International Standardization Organization, 2018, 26262 ISO
   Junges Sebastian, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P299, DOI 10.1109/DSN.2016.35
   Kabir Sohag, 2017, Model-Based Safety and Assessment. 5th International Symposium, IMBSA 2017. Proceedings: LNCS 10437, P163, DOI 10.1007/978-3-319-64119-5_11
   Kaiser B., 2018, P ESREL
   Kaiser B, 2007, RELIAB ENG SYST SAFE, V92, P1521, DOI 10.1016/j.ress.2006.10.010
   Kaiser Bernhard., 2003, Safety Critical Systems and Software 2003, Eigth Australian Workshop on Safety-Related Programmable Systems, V33, P37
   Kaleeswaran Arut Prakash, 2019, Model-Based Safety and Assessment. 6th International Symposium, IMBSA 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11842), P47, DOI 10.1007/978-3-030-32872-6_4
   Lisagor O., 2011, Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety (ICRMS 2011), P625, DOI 10.1109/ICRMS.2011.5979344
   Mhenni F., 2014, P INT C ADV INT MECH
   Mhenni F, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (ISSE) PROCEEDINGS, P242, DOI 10.1109/SysEng.2015.7302764
   Mian ZB, 2015, ADV INTELL SYST, V307, P91, DOI 10.1007/978-3-319-08964-5_6
   Mohrle F., 2017, P INT S MOD BAS SAF
   Munk P., 2018, P DS AUT C DAC
   Nordmann A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P134, DOI 10.1145/3239372.3239373
   *OMG, 2015, SYST MOD LANG VERS 1
   Papadopoulos Y, 1999, LECT NOTES COMPUT SC, V1698, P139
   Papadopoulos Y, 2011, ENG FAIL ANAL, V18, P590, DOI 10.1016/j.engfailanal.2010.09.025
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Robert Bosch GmbH, BRS BOOST REC SYST I
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Sharvia S, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P251, DOI 10.1016/B978-0-12-802301-3.00012-0
   Verband der Automobilindustrie e. V, 2012, QUALITY MANAGEMENT A
   Voelter M., 2014, GEMOC MOD CEUR WORKS, V1236, P7
   Voelter M, 2019, SOFTW SYST MODEL, V18, P2507, DOI 10.1007/s10270-018-0679-0
   Voelter M, 2009, J OBJECT TECHNOL, V8, P79, DOI 10.5381/jot.2009.8.6.c6
   Walker M, 2013, J SYST SOFTWARE, V86, P2467, DOI 10.1016/j.jss.2013.04.001
   Walker M, 2009, SAE INT J PASSEN CAR, V2, P791, DOI 10.4271/2009-01-0738
   Zeller M., 2018, INT C SYST REL SAF I, DOI [10.1109/ICSRS.2018.8688854, DOI 10.1109/ICSRS.2018.8688854]
NR 47
TC 20
Z9 23
U1 6
U2 41
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 889
EP 910
DI 10.1007/s10270-020-00782-w
EA FEB 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000516792600001
DA 2024-07-18
ER

PT J
AU Ruiz-Rube, I
   Person, T
   Dodero, JM
   Mota, JM
   Sánchez-Jara, JM
AF Ruiz-Rube, Ivan
   Person, Tatiana
   Manuel Dodero, Juan
   Miguel Mota, Jose
   Merchan Sanchez-Jara, Javier
TI Applying static code analysis for domain-specific languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Text-based languages; Static analysis; Model-driven interoperability;
   Xtext; SonarQube
ID MODEL TRANSFORMATION; TECHNICAL DEBT
AB The use of code quality control platforms for analysing source code is increasingly gaining attention in the developer community. These platforms are prepared to parse and check source code written in a variety of general-purpose programming languages. The emergence of domain-specific languages enables professionals from different areas to develop and describe problem solutions in their disciplines. Thus, source code quality analysis methods and tools can also be applied to software artefacts developed with a domain-specific language. To evaluate the quality of domain-specific language code, every software component required by the quality platform to parse and query the source code must be developed. This becomes a time-consuming and error-prone task, for which this paper describes a model-driven interoperability strategy that bridges the gap between the grammar formats of source code quality parsers and domain-specific text languages. This approach has been tested on the most widespread platforms for designing text-based languages and source code analysis. This interoperability approach has been evaluated on a number of specific contexts in different domain areas.
C1 [Ruiz-Rube, Ivan; Person, Tatiana; Manuel Dodero, Juan; Miguel Mota, Jose] Univ Cadiz, Dept Comp Engn, Cadiz, Spain.
   [Merchan Sanchez-Jara, Javier] Univ Salamanca, E LECTRA Res Grp, Salamanca, Spain.
C3 Universidad de Cadiz; University of Salamanca
RP Ruiz-Rube, I (corresponding author), Univ Cadiz, Dept Comp Engn, Cadiz, Spain.
EM ivan.ruiz@uca.es
RI Ruiz-Rube, Iván/F-5824-2016; Dodero, Juan Manuel/D-4143-2009; Mota
   Macias, Jose Miguel/F-4707-2016
OI Ruiz-Rube, Iván/0000-0002-9012-700X; Dodero, Juan
   Manuel/0000-0002-4105-5679; Mota Macias, Jose Miguel/0000-0002-4980-0549
FU Spanish National Research Agency (AEI); ERDF funds [TIN2017-85797-R]
FX This work has been developed in the VISAIGLE project, funded by the
   Spanish National Research Agency (AEI) with ERDF funds under grant ref.
   TIN2017-85797-R.
CR Abran A, 2003, SOFTWARE QUAL J, V11, P325, DOI 10.1023/A:1025869312943
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Besova G, 2015, COMPUT LANG SYST STR, V43, P116, DOI 10.1016/j.cl.2015.05.003
   Boud D., 2000, STUD CONTIN EDUC, V22, P151, DOI [10.1080/713695728, DOI 10.1080/713695728]
   Brahmi A, 2016, PROCEEDINGS OF 2016 8TH INTERNATIONAL CONFERENCE ON MODELLING, IDENTIFICATION & CONTROL (ICMIC 2016), P707, DOI 10.1109/ICMIC.2016.7804203
   Brown NCC, 2017, ACM T COMPUT EDUC, V17, DOI 10.1145/2994154
   Chisnell D., 2008, Handbook of usability testing: How to plan, design, and conduct effective tests, V2nd
   Davies S., 2010, Effective Assessment in a Digital Age
   Ford B, 2004, ACM SIGPLAN NOTICES, V39, P111, DOI 10.1145/982962.964011
   Fowler M., 2010, Domain-specific languages
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gould Elaine., 2011, Behind Bars: The Definitive Guide to Music Notation
   Heinze TS, 2018, SOFTWARE PRACT EXPER, V48, P161, DOI 10.1002/spe.2523
   Hermans F, 2016, S VIS LANG HUM CEN C, P68, DOI 10.1109/VLHCC.2016.7739666
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P1, DOI 10.1007/978-1-4419-5653-8
   ISO/IEC, 1996, 14977 ISOIEC
   ISO/IEC, 2010, Technical report
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Mandal A, 2018, IEEE INT C EMERG, P27, DOI 10.1109/ETFA.2018.8502576
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nienhuys Han-Wen, 2003, P 14 C MUSICAL INFOR, P167
   Parr T, 2011, ACM SIGPLAN NOTICES, V46, P425, DOI 10.1145/1993316.1993548
   Prahofer H., 2012, 2012 IEEE 17 INT C E, P1
   Redziejowski RR, 2013, FUND INFORM, V128, P177, DOI 10.3233/FI-2013-940
   Rochimah S., 2015, International Journal of Software Engineering and Its Applications, V9, P197
   Rose K.H., 2005, Project Quality Management: Why, What and How, V1st
   Ruiz-Rube I., 2016, JORN ING SOFTW BAS D
   Saad C, 2013, LECT NOTES COMPUT SC, V8107, P707, DOI 10.1007/978-3-642-41533-3_43
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Stevenson A, 2014, SCI COMPUT PROGRAM, V96, P444, DOI 10.1016/j.scico.2014.05.008
   Syriani E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P929, DOI 10.1109/ICST.2012.198
   Tomas P, 2013, COMPUT STAND INTER, V36, P244, DOI 10.1016/j.csi.2013.08.006
NR 40
TC 4
Z9 7
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 95
EP 110
DI 10.1007/s10270-019-00729-w
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900007
DA 2024-07-18
ER

PT J
AU Shin, SS
AF Shin, Shin-Shing
TI Empirical study on the effectiveness and efficiency of model-driven
   architecture techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven architecture; Effectiveness; Efficiency; Model
   transformation; Unified Modeling Language; Query; view; transformation
ID INFORMATION-TECHNOLOGY; USABILITY MEASUREMENT; USER ACCEPTANCE;
   SOFTWARE; UML; LANGUAGES; OCL
AB Previous studies have reported conflicting opinions on the feasibility of model-driven architecture (MDA). Studies have investigated the mechanics of MDA, but few have examined its effectiveness and efficiency from a developer's perception. This study conducted empirical research in which a system was implemented by subjects using MDA; afterward, evaluated its perceived efficiency and effectiveness. In the model construction phase, Unified Modeling Language and Object Constraint Language were perceived as effective and efficient. In the model transformation phase, the query/view/transformation standard was perceived as marginally efficient rather than effective, and the round-trip engineering phase was not perceived as effective or efficient. These findings are explained using 12 themes identified in subjects' opinions. This study may help scholars understand the importance of efficiency and effectiveness on MDA techniques and facilitate the development of more acceptable and practical MDA.
C1 [Shin, Shin-Shing] Natl Taitung Univ, Dept Informat Sci & Management Syst, 369,Sec 2,Univ Rd, Taitung, Taiwan.
RP Shin, SS (corresponding author), Natl Taitung Univ, Dept Informat Sci & Management Syst, 369,Sec 2,Univ Rd, Taitung, Taiwan.
EM shing@nttu.edu.tw
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Abran A, 2003, SOFTWARE QUAL J, V11, P325, DOI 10.1023/A:1025869312943
   Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   Al-Qutaish RE, 2009, INT C COMP ELEC ENG, P275, DOI 10.1109/ICCEE.2009.83
   Albuquerque D, 2015, J SYST SOFTWARE, V101, P245, DOI 10.1016/j.jss.2014.11.051
   Alonso-Ríos D, 2010, INT J HUM-COMPUT INT, V26, P53, DOI 10.1080/10447310903025552
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2011, 25010 ISO
   [Anonymous], 2004, 91264 ISO
   [Anonymous], 1986, HDB PERCEPTION PERFO
   [Anonymous], 2014, MDA GUID REV 2 0
   Armonas A, 2009, INF TECHNOL CONTROL, V38, P283
   Asadi M, 2008, LECT NOTES COMPUT SC, V5095, P419, DOI 10.1007/978-3-540-69100-6_30
   Bajwa IS, 2011, LECT NOTES COMPUT SC, V6698, P132, DOI 10.1007/978-3-642-21470-7_10
   Barisic A., Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools (PLATEAU) at SPLASH. PLATEAU '11 (2011), P65, DOI DOI 10.1145/2089155.2089170
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Bennett J, 2010, SCI COMPUT PROGRAM, V75, P689, DOI 10.1016/j.scico.2009.05.005
   Berardinelli L, 2010, SOFTW SYST MODEL
   Berg K.E., 2008, Essentials of research methods in health, physical education, exercise science, and recreation
   BEVAN N, 1995, SOFTWARE QUAL J, V4, P115, DOI 10.1007/BF00402715
   Bevan N, 2016, LECT NOTES COMPUTER, P268
   Bhiri MT, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P149, DOI 10.1109/ECBS.2011.42
   Boehm B.W., 1978, Characteristics of Software Quality
   Braga C, 2012, IET SOFTW, V6, P16, DOI 10.1049/iet-sen.2011.0013
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Chen X, 2014, ENGINEERING TECHNOLOGY AND APPLICATIONS, P235
   Compeau D, 1999, MIS QUART, V23, P145, DOI 10.2307/249749
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   De Castro V, 2011, INFORM SOFTWARE TECH, V53, P87, DOI 10.1016/j.infsof.2010.09.002
   Diskin Z, 2014, LECT NOTES COMPUT SC, V8568, P57
   Domínguez-Mayo FJ, 2012, COMPUT STAND INTER, V34, P396, DOI 10.1016/j.csi.2012.01.004
   Fabra J, 2012, J SYST SOFTWARE, V85, P607, DOI 10.1016/j.jss.2011.09.022
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fouad A, 2011, SOFTWARE QUAL J, V19, P411, DOI 10.1007/s11219-010-9122-7
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gammaitoni L., 2017, SOFTW SYST MODEL, P1
   GOPHER D, 1984, HUM FACTORS, V26, P519, DOI 10.1177/001872088402600504
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hawkins J. L., 2013, U. S. Patent, Patent No. [8,418,125, 8418125]
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Panach JI, 2011, INT J SOFTW ENG KNOW, V21, P339, DOI 10.1142/S0218194011005311
   ISO, 2018, ERGONOMICS HUMAN SYS
   Kuhlmann M, 2013, MATH STRUCT COMP SCI, V23, P796, DOI 10.1017/S0960129512000266
   Lehman M. M., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P14
   Lewis JR, 2014, INT J HUM-COMPUT INT, V30, P663, DOI 10.1080/10447318.2014.930311
   Masood Zafar, 2014, Lecture Notes on Software Engineering, V2, P225, DOI 10.7763/LNSE.2014.V2.127
   Mattsson A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089120
   McCall J.A., 1977, Techreport ADA049014, VI
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   Mepham W., 2012, THESIS
   Meservy TO, 2005, COMPUTER, V38, P52, DOI 10.1109/MC.2005.316
   MOHAGHEGHI P, 2007, LNCS, V5002, P275
   MOHAGHEGHI P, 2007, P INT WORKSH MOD SOF
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Nielsen J., 1994, Heuristic evaluation
   PAAS FGWC, 1994, PERCEPT MOTOR SKILL, V79, P419, DOI 10.2466/pms.1994.79.1.419
   Pérez-Medina JL, 2007, LECT NOTES COMPUT SC, V4849, P84
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Saraiva Joao de Sousa., 2010, Principal Advancements in Database Management Technologies, P105, DOI DOI 10.4018/978-1-60566-904-5.CH005
   Seddon PB, 1997, INFORM SYST RES, V8, P240, DOI 10.1287/isre.8.3.240
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Shin SS, 2016, ACM T COMPUT EDUC, V16, DOI 10.1145/2914797
   Shin SS, 2015, IEEE T EDUC, V58, P117, DOI 10.1109/TE.2014.2334556
   Shu GH, 2010, IEEE INT SYMP CIRC S, P3016, DOI 10.1109/ISCAS.2010.5538002
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Sorokin L, 2007, LECT NOTES COMPUT SC, V4832, P447
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stoter J, 2011, INT J GEOGR INF SCI, V25, P739, DOI 10.1080/13658816.2010.490218
   THOMPSON RL, 1991, MIS QUART, V15, P125, DOI 10.2307/249443
   Uhl A, 2008, IEEE SOFTWARE, V25, P46, DOI 10.1109/MS.2008.12
   Vara JM, 2012, J SYST SOFTWARE, V85, P2368, DOI 10.1016/j.jss.2012.04.080
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wang SQ, 2010, INFORM SCIENCES, V180, P3894, DOI 10.1016/j.ins.2010.06.024
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Yeh RKJ, 2012, BEHAV INFORM TECHNOL, V31, P525, DOI 10.1080/0144929X.2010.517272
NR 84
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3083
EP 3096
DI 10.1007/s10270-018-00711-y
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IJ0OX
UT WOS:000475600500012
DA 2024-07-18
ER

PT J
AU Liebel, G
   Tichy, M
   Knauss, E
AF Liebel, Grischa
   Tichy, Matthias
   Knauss, Eric
TI Use, potential, and showstoppers of models in automotive requirements
   engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modelling; MDE; MBE; Requirements engineering; Empirical research; Case
   study; Automotive
ID DRIVEN; EXPERIENCES; SYSTEMS
AB Several studies report that the use of model-centric methods in the automotive domain is widespread and offers several benefits. However, existing work indicates that few modelling frameworks explicitly include requirements engineering (RE), and that natural language descriptions are still the status quo in RE. Therefore, we aim to increase the understanding of current and potential future use of models in RE, with respect to the automotive domain. In this paper, we report our findings from a multiple-case study with two automotive companies, collecting interview data from 14 practitioners. Our results show that models are used for a variety of different purposes during RE in the automotive domain, e.g. to improve communication and to handle complexity. However, these models are often used in an unsystematic fashion and restricted to few experts. A more widespread use of models is prevented by various challenges, most of which align with existing work on model use in a general sense. Furthermore, our results indicate that there are many potential benefits associated with future use of models during RE. Interestingly, existing research does not align well with several of the proposed use cases, e.g. restricting the use of models to informal notations for communication purposes. Based on our findings, we recommend a stronger focus on informal modelling and on using models for multi-disciplinary environments. Additionally, we see the need for future work in the area of model use, i.e. information extraction from models by non-expert modellers.
C1 [Liebel, Grischa; Knauss, Eric] Chalmers Univ Technol, Software Engn Div, Gothenburg, Sweden.
   [Liebel, Grischa; Knauss, Eric] Univ Gothenburg, Gothenburg, Sweden.
   [Tichy, Matthias] Univ Ulm, Inst Software Engn, Ulm, Germany.
C3 Chalmers University of Technology; University of Gothenburg; Ulm
   University
RP Liebel, G (corresponding author), Chalmers Univ Technol, Software Engn Div, Gothenburg, Sweden.; Liebel, G (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM grischa@chalmers.se; matthias.tichy@uni-ulm.de; eric.knauss@cse.gu.se
RI Liebel, Grischa/AAH-2721-2019
OI Liebel, Grischa/0000-0002-3884-815X; Knauss, Eric/0000-0002-6631-872X
FU European Union [332830]; Vinnova under DIARIENR [2012-04304]
FX The research leading to these results has received partial funding from
   the European Union's Seventh Framework Program (FP7/2007-2013) for
   CRYSTAL-Critical System Engineering Acceleration Joint Undertaking under
   Grant Agreement No 332830 and from Vinnova under DIARIENR 2012-04304.
CR [Anonymous], 2014, P 1 INT WORKSH SOFTW
   [Anonymous], Scaled agile framework
   [Anonymous], 2012, MODEL BASED ENG EMBE, DOI DOI 10.1007/978-3-642-34614-9
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Avgeriou P, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P1, DOI 10.1007/978-3-642-21001-3
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Berenbach B., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P285, DOI 10.1109/RE.2012.6345816
   Böhm W, 2014, PROCEDIA COMPUT SCI, V28, P187, DOI 10.1016/j.procs.2014.03.024
   Brandstetter V., 2015, Complex Systems Informatics and Modeling Quarterly, P50
   Braun P, 2014, COMPUT SCI-RES DEV, V29, P21, DOI 10.1007/s00450-010-0136-y
   Brings J., 2017, JOINT P REFSQ2017 WO
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Creswell J.W., 2003, RES DESIGN QUALITATI, V2
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Eliasson U, 2015, INT REQUIR ENG CONF, P372, DOI 10.1109/RE.2015.7320454
   Fernández DM, 2013, LECT NOTES COMPUT SC, V7983, P108, DOI 10.1007/978-3-642-39259-7_11
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   Fernández G, 2011, COLMENA, P104
   Ferreira DD, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P518, DOI 10.1109/ICSEA.2009.81
   Fockel M, 2014, IEEE INT WORKSH MODE, P67, DOI 10.1109/MoDRE.2014.6890827
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Glinz M, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P11, DOI 10.1109/IWSSD.2000.891122
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Haghighatkhah A, 2017, IEEE SOFTWARE, V34, P82, DOI 10.1109/MS.2017.3571571
   Hebisch E, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P16, DOI 10.1109/TwinPeaks.2015.11
   Heumesser N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P322
   Houdek F, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P983, DOI 10.1109/DEXA.2000.875146
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kirstan S, 2010, WORKSH C2M EEMDD COD
   Liebel G, 2016, SOFTW SYST MODEL
   Liebel G, 2018, REQUIR ENG, V23, P145, DOI 10.1007/s00766-016-0261-7
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Marko N, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P143, DOI 10.1109/SEAA.2015.11
   Mayring P., 2002, The Role of the Researcher in Qualitative Psychology, V2, P139
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   North D., 2006, BETTER SOFTWARE MAGA
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Paech B., 2002, Functional requirements, nonfunctional requirements, and architecture should not be separated: A position paper
   Penzenstadler B, 2009, LECT NOTES COMPUT SC, V5512, P212, DOI 10.1007/978-3-642-02050-6_18
   Runeson P, 2012, Case Study Research in Software Engineering: Guidelines and Examples, V1
   Rungta N., 2014, 4th International Workshop on Twin Peaks of Requirements and Architecture (TwinPeaks'14), P9
   Sikora E, 2011, LECT NOTES COMPUT SC, V6606, P151, DOI 10.1007/978-3-642-19858-8_16
   Torchiano M, 2011, INT SYMP EMP SOFTWAR, P372, DOI 10.1109/ESEM.2011.51
   van Akkeren E., 2016, Handbook of requirements modeling according to the IREB standard
   Vogelsang A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P587
   Weber M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P331, DOI 10.1109/ICRE.2002.1048546
   Weinstein M., TAMS ANAL
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Yin RK, 2009, CASE STUDY DESIGN ME, V4
NR 57
TC 9
Z9 11
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2587
EP 2607
DI 10.1007/s10270-018-0683-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900009
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Mayer, N
   Aubert, J
   Grandry, E
   Feltus, C
   Goettelmann, E
   Wieringa, R
AF Mayer, Nicolas
   Aubert, Jocelyn
   Grandry, Eric
   Feltus, Christophe
   Goettelmann, Elio
   Wieringa, Roel
TI An integrated conceptual model for information system security risk
   management supported by enterprise architecture management
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Risk management; Security; Enterprise architecture; ArchiMate
AB Risk management is today a major steering tool for any organisation wanting to deal with information system (IS) security. However, IS security risk management (ISSRM) remains a difficult process to establish and maintain, mainly in a context of multi-regulations with complex and inter-connected IS. We claim that a connection with enterprise architecture management (EAM) contributes to deal with these issues. A first step towards a better integration of both domains is to define an integrated EAM-ISSRM conceptual model. This paper is about the elaboration and validation of this model. To do so, we improve an existing ISSRM domain model, i.e. a conceptual model depicting the domain of ISSRM, with the concepts of EAM. The validation of the EAM-ISSRM integrated model is then performed with the help of a validation group assessing the utility and usability of the model.
C1 [Mayer, Nicolas; Aubert, Jocelyn; Grandry, Eric; Feltus, Christophe; Goettelmann, Elio] Luxembourg Inst Sci & Technol, 5 Ave Hauts Fourneaux, L-4362 Esch Sur Alzette, Luxembourg.
   [Wieringa, Roel] Univ Twente, Chair Informat Syst, Enschede, Netherlands.
C3 Luxembourg Institute of Science & Technology; University of Twente
RP Mayer, N (corresponding author), Luxembourg Inst Sci & Technol, 5 Ave Hauts Fourneaux, L-4362 Esch Sur Alzette, Luxembourg.
EM nicolas.mayer@list.lu; jocelyn.aubert@list.lu; eric.grandry@list.lu;
   christophe.feltus@list.lu; elio.goettelmann@list.lu;
   r.j.wieringa@utwente.nl
RI Mayer, Nicolas/AAF-6363-2020
OI Aubert, Jocelyn/0000-0003-1233-4043; Mayer, Nicolas/0000-0002-6021-3660
FU National Research Fund, Luxembourg; ENTRI project [C14/IS/8329158]
FX Supported by the National Research Fund, Luxembourg, and financed by the
   ENTRI project (C14/IS/8329158).
CR Altuhhova O, 2012, LECT NOTES BUS INF P, V112, P1
   [Anonymous], 2011, TOGAF VERS 9 1
   [Anonymous], 2005, P C DAT MIN DAT WAR
   [Anonymous], 1993, Usability Engineering
   [Anonymous], 2013, OPEN GROUP SERIES
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2016, INT SEC THREAT REP, V21
   [Anonymous], 2016, GLOB STAT INF SEC SU
   [Anonymous], 2018, Risk management: Guidelines
   [Anonymous], 2013, SYSTEMIC PERSPECTIVE
   [Anonymous], 2011, STATE OF THE ART ENT
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   [Anonymous], 2011, 270052011 ISOIEC
   [Anonymous], 2013, Information Security, Cybersecurity and Privacy Protection
   [Anonymous], 2009, THESIS
   [Anonymous], 2007, P 15 EUROPEAN C INFO
   Band I., 2015, Modeling enterprise risk management and security with the archimate
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barateiro J., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3297, DOI 10.1109/HICSS.2012.419
   Bernus P., 2003, Handbook on Enterprise Architecture, P21, DOI [10.1007/978-3-540-24744-9_2, DOI 10.1007/978-3-540-24744-9_2]
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Chowdhury Mohammad Jabed Morshed, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P132, DOI 10.1007/978-3-642-28714-5_11
   Cleeff A, 2015, PHYS DIGITAL SECURIT
   CSSF, 2012, 12544 CSSF
   Dubois E, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P289, DOI 10.1007/978-3-642-12544-7_16
   Ertaul L., 2005, P EURO MGOV 2005
   Genon N., 2007, MODELLING SECURITY E
   Goettelmann E, 2014, CONF BUS INFORM, P86, DOI 10.1109/CBI.2014.29
   Goldstein A, 2016, INF SYST E-BUS MANAG, V14, P101, DOI 10.1007/s10257-015-0276-5
   Goldstein A, 2013, LECT NOTES BUS INF P, V132, P636
   Grandry E, 2013, IEEE INT ENTERP, P114, DOI 10.1109/EDOCW.2013.19
   Innerhofer-Oberperfler F., 2006, INF SEC S AFR 6 ANN
   ISO/IEC/IEEE, 2015, 152882015 ISOIECIEEE
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lankhorst M., 2005, ENTERPRISE ARCHITECT
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Matulevicius R, 2008, LECT NOTES COMPUT SC, V5074, P541
   Matulevicius R, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P1397, DOI 10.1109/ARES.2008.88
   Mayer N, SOFTW PROC IMPR 17 E
   Mayer N., 2016, TECHNICAL REPORT
   Mayer N., 2015, ADV INF SYST ENG WOR
   Mayer N., 2008, MOD SEC WORKSH MODSE
   Mayer N, 2016, LECT NOTES BUS INF P, V267, P353, DOI 10.1007/978-3-319-48393-1_27
   Obrst Leo., 2007, Semantic Web, Part II, P139, DOI [10.1007/978-0-387-48438-9_8, DOI 10.1007/978-0-387-48438-9_8]
   Op 't Land M., ENTERPRISE ENG SERIE, P25
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Proper H. A., 2013, P 15 INT C ENT INF S
   Raymond K., 1995, Open Distributed Processing Experiences with Distributed Environments. Proceedings of the Third IFIP TC 6/WG 6.1 International Conference on Open Distributed Processing, P3
   Recker J.C., 2005, CAISE05 WORKSH PORT, P569
   Sauro Jef, 2011, A Practical Guide to the System Usability Scale: Background, Benchmarks, and Best Practices
   Schwartz L., 2015, 8 IFIP WG 8 1 WORK C, P1
   Sherwood J., 2010, SABSA ENTERPRISE SEC
   Solhaug B., 2014, SAFETY RELIABILITY R, P3155
   Tullis T., 2004, A Comparison of Questionnaires for Assessing Website usabiity Usability
   United States Department of Defense, DODAF ARCH FRAM VERS
   vantWout J, 2010, INTEGRATED ARCHITECTURE FRAMEWORK EXPLAINED: WHY, WHAT, HOW, P1
   Vernadat FB, 2014, INT J PROD MANAG ENG, V2, P57, DOI 10.4995/ijpme.2014.2326
   Wahe S., 2011, OPEN ENTERPRISE SECU
   Wynekoop JL, 1997, INFORM SYST J, V7, P47, DOI 10.1046/j.1365-2575.1997.00004.x
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 61
TC 32
Z9 40
U1 0
U2 32
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2285
EP 2312
DI 10.1007/s10270-018-0661-x
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100032
DA 2024-07-18
ER

PT J
AU Rivero, JM
   Grigera, J
   Distante, D
   Montero, F
   Rossi, G
AF Matias Rivero, Jose
   Grigera, Julian
   Distante, Damiano
   Montero, Francisco
   Rossi, Gustavo
TI DataMock: An Agile Approach for Building Data Models from User Interface
   Mockups
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data modeling; Agile methods; Mockups; Annotations; Requirements
   engineering; Requirements traceability; Model-driven development
ID REQUIREMENTS; DESIGN
AB In modern software development, much time is devoted and much attention is paid to the activity of data modeling and the translation of data models into databases. This has motivated the proposal of different approaches and tools to support this activity, such as semiautomatic approaches that generate data models from requirements artifacts using text analysis and sets of heuristics, among other techniques. However, these approaches still suffer from important limitations, including the lack of support for requirements traceability, the poor support for detecting and solving conflicts in domain-specific requirements, and the considerable effort required for manually checking the generated models. This paper introduces DataMock, an Agile approach that enables the iterative building of data models from requirements specifications, while supporting traceability and allowing inconsistencies detection in data requirements and specifications. The paper also describes how the approach effectively allows improving traceability and reducing errors and effort to build data models in comparison with traditional, state-of-the-art, data modeling approaches.
C1 [Matias Rivero, Jose; Grigera, Julian; Rossi, Gustavo] Univ La Plata, Fac Informat, LIFIA, La Plata, Buenos Aires, Argentina.
   [Matias Rivero, Jose] Consejo Nacl Invest Cient & Tecn, Natl Sci & Tech Res Council, La Plata, Argentina.
   [Rossi, Gustavo] Consejo Nacl Invest Cient & Tecn, La Plata, Argentina.
   [Distante, Damiano] Unitelma Sapienza Univ, Comp Sci, Rome, Italy.
   [Montero, Francisco] Univ Castilla La Mancha, Comp Sci, Albacete, Spain.
   [Montero, Francisco] Univ Castilla La Mancha, LoUISE Res Grp, Albacete, Spain.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Universita degli Studi di Roma
   Unitelma Sapienza; Universidad de Castilla-La Mancha; Universidad de
   Castilla-La Mancha
RP Distante, D (corresponding author), Unitelma Sapienza Univ, Comp Sci, Rome, Italy.
EM mrivero@lifia.info.unlp.edu.ar; julian.grigera@lifia.info.unlp.edu.ar;
   damiano.distante@unitelma.it; fmontero@dsi.uclm.es;
   gustavo@lifia.info.unlp.edu.ar
RI montero, francisco/U-4830-2019; Rossi, Gustavo/AAE-4736-2020; Distante,
   Damiano/ABE-2366-2020
OI montero, francisco/0000-0002-0902-9681; Distante,
   Damiano/0000-0002-8467-535X; Grigera, Julian/0000-0002-7962-4312
CR Bajwa IS, 2012, LECT NOTES BUS INF P, V102, P224
   Basili V., 1994, The Goal Question Metric Approach, P528
   Batra D., 2008, DATA WAREHOUSING MIN, P280
   Beijering K., 2008, LINGUISTICS NETHERLA, V25, P13, DOI DOI 10.1075/AVT.25.05BEI
   Brambilla M., 2014, INTERACTION FLOWMODE
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Constantine L., 2003, CANONICAL ABSTRACT P, DOI [10.1007/b13960, DOI 10.1007/B13960]
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Escalona MJ, 2013, J SYST SOFTWARE, V86, P3024, DOI 10.1016/j.jss.2013.05.045
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Fliedl G, 2007, DATA KNOWL ENG, V61, P433, DOI 10.1016/j.datak.2006.06.012
   Fortuna MH, 2008, INT REQUIR ENG CONF, P81, DOI 10.1109/RE.2008.43
   Forward A, 2012, SOFTWARE PRACT EXPER, V42, P781, DOI 10.1002/spe.1155
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghabi A, 2015, J SYST SOFTWARE, V108, P178, DOI 10.1016/j.jss.2015.06.037
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hussain Z, 2009, LECT NOTES COMPUT SC, V5889, P416
   Huzar Z, 2005, LECT NOTES COMPUT SC, V3297, P1
   Jwo JS, 2010, J SYST SOFTWARE, V83, P599, DOI 10.1016/j.jss.2009.10.042
   Koch N., 2008, WEB ENG MODELLING IM
   Kop C., 2010, P 1 INT WORKSH EV SU, P67
   Kulak D., 2004, Use cases: requirements in context
   LaRoche CS, 2010, INT PRO COM, P113, DOI 10.1109/IPCC.2010.5529821
   Limbourg Q., P ACM AVI 2004 WORKS
   Linehan MH, 2008, LECT NOTES COMPUT SC, V5321, P182, DOI 10.1007/978-3-540-88808-6_20
   Liu W., 2002, RULE BASED DETECTION, P106
   Luqi, 1998, J SYST SOFTWARE, V42, P125, DOI 10.1016/S0164-1212(98)10004-3
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Rivero JM, 2014, INFORM SOFTWARE TECH, V56, P670, DOI 10.1016/j.infsof.2014.01.011
   Rivero JM, 2013, IEEE INT WORKSH MODE, P20, DOI 10.1109/MoDRE.2013.6597260
   Rivero JM, 2011, LECT NOTES COMPUT SC, V6997, P257, DOI 10.1007/978-3-642-24434-6_20
   Rivero JM, 2010, LECT NOTES COMPUT SC, V6385s, P13, DOI 10.1007/978-3-642-16985-4_2
   Mukasa KS, 2008, INT REQUIR ENG CONF, P327, DOI 10.1109/RE.2008.55
   Muller M.J., 2003, HUM FAC ER, P1051
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   NIELSEN J, 1992, COMPUTER, V25, P12, DOI 10.1109/2.121503
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Ramdoyal R, 2011, LECT NOTES COMPUT SC, V6998, P247, DOI 10.1007/978-3-642-24606-7_19
   Ricca F., 2010 ACM IEEE INT S
   ROSENBERG D., 2005, Agile Development with ICONIX Process-People, Process, and Pragmatism
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Ton H, 2007, AGILE 2007, Proceedings, P279, DOI 10.1109/AGILE.2007.2
   Topi H., 2002, Journal of Database Management, V13, P3, DOI 10.4018/jdm.2002040101
   Usman M, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P57, DOI 10.1109/ASEA.2008.40
   Wills LM, 2004, J SYST SOFTWARE, V70, P225, DOI 10.1016/S0164-1212(03)00070-0
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang J, 2003, SOFTWARE PRACT EXPER, V33, P1251, DOI 10.1002/spe.547
NR 50
TC 1
Z9 3
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 663
EP 690
DI 10.1007/s10270-017-0586-9
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300026
DA 2024-07-18
ER

PT J
AU Méry, D
   Poppleton, M
AF Mery, Dominique
   Poppleton, Michael
TI Towards an integrated formal method for verification of liveness
   properties in distributed systems: with application to population
   protocols
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Refinement; Formal method; Distributed sytems; Verification; Liveness;
   Fairness
ID EVENT-B; NETWORKS; COMPUTATION; PROGRAMS; FAIRNESS
AB Statebased formal methods [e.g. Event-B/RODIN (Abrial in Modeling in EventBsystem and software engineering. Cambridge University Press, Cambridge, 2010; Abrial et al. in Int J Softw Tools Technol Transf (STTT) 12(6): 447466, 2010)] for critical system development and verification are now well established, with track records including tool support and industrial applications. The focus of proofbased verification, in particular, is on safety properties. Liveness properties, which guarantee eventual, or converging computations of some requirements, are less well dealt with. Inductive reasoning about liveness is not explicitly supported. Liveness proofs are often complex and expensive, requiring highskill levels on the part of the verification engineer. Fairnessbased temporal logic approaches have been proposed to address this, e.g. TLA Lamport (ACM Trans Program Lang Syst 16(3): 872923, 1994) and that of Manna and Pnueli (Temporal verification of reactive systemssafety. Springer, New York, 1995). We contribute to this technology need by proposing a fairness-based method integrating temporal and firstorder logic, proof and tools for modelling and verification of safety and liveness properties. The method is based on an integration of EventB and TLA. Building on our previous work (Mery and Poppleton in Integrated formal methods, 10th international conference, IFM 2013, Turku, Finland, pp 208-222, 2013. doi: 10.1007/978-3-642-38613-8_15), we present the method via three example population protocols Angluin et al. (Distrib Comput 18(4): 235-253, 2006). These were proposed as a theoretical framework for computability reasoning about Wireless Sensor Network and Mobile Ad-Hoc Network algorithms. Our examples present typical liveness and convergence requirements. We prove convergence results for the examples by integrated modelling and proof with Event-B/RODIN and TLA. We exploit existing proof rules, define and apply three new proof rules; soundness proofs are also provided. During the process we observe certain repeating patterns in the proofs. These are easily identified and reused because of the explicit nature of the reasoning.
C1 [Mery, Dominique] Univ Lorraine, LORIA, BP 239, F-54506 Vandoeuvre Les Nancy, France.
   [Poppleton, Michael] Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
C3 Universite de Lorraine; University of Southampton
RP Méry, D (corresponding author), Univ Lorraine, LORIA, BP 239, F-54506 Vandoeuvre Les Nancy, France.
EM dominique.mery@loria.fr; mrp@ecs.soton.ac.uk
CR ABADI M, 1991, THEOR COMPUT SCI, V82, P253, DOI 10.1016/0304-3975(91)90224-P
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J.R, 2013, COMMUNICATION
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   ABRIAL JR, 2006, LNCS, V4260
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   Angluin D, 2006, DISTRIB COMPUT, V18, P235, DOI 10.1007/s00446-005-0138-3
   Angluin D., 2008, TAAS, V3, P103
   Angluin D, 2007, DISTRIB COMPUT, V20, P279, DOI 10.1007/s00446-007-0040-2
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 1986, Fairness
   [Anonymous], LECT NOTES COMPUTER
   APT KR, 1983, SCI COMPUT PROGRAM, V3, P65, DOI 10.1016/0167-6423(83)90004-7
   Araki K., P 1 INT C INT FORM M
   BACK RJR, 1988, ACM T PROGR LANG SYS, V10, P513, DOI 10.1145/48022.48023
   BACK RJR, 1989, DISTRIB COMPUT, V3, P73, DOI 10.1007/BF01558665
   Banach Richard, 2013, Theoretical Aspects of Computing - ICTAC 2013. 10th International Colloquium. Proceedings: LNCS 8049, P76, DOI 10.1007/978-3-642-39718-9_5
   Banach Richard, 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P37, DOI 10.1007/978-3-642-39698-4_3
   Beauquier Joffroy, 2013, Principles of Distributed Systems. 17th International Conference, OPODIS 2013. Proceedings: LNCS 8304, P38, DOI 10.1007/978-3-319-03850-6_4
   Bjorner D., 2006, TEXTS THEORETICAL CO
   BJORNER D, 2007, EATCS TXB COMPUTER S
   Butler M., 2009, TECHNICAL REPORT
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   Cai SK, 2012, THEOR COMPUT SYST, V50, P433, DOI 10.1007/s00224-011-9313-z
   Cansell D, 2000, LECT NOTES COMPUT SC, V1945, P380
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   CHATZIGIANNAKIS I, 2009, FRONTSTR20093
   Cousineau D., 2012, LECT NOTES COMPUTER, V7436, P147, DOI 10.1007/978-3-642-32759-914
   Dijkstra RM, 2000, SCI COMPUT PROGRAM, V37, P3, DOI 10.1016/S0167-6423(99)00021-0
   Fathabadi Asieh Salehi, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P78, DOI 10.1007/978-3-642-33826-7_6
   Fischer M, 2006, LECT NOTES COMPUT SC, V4305, P395
   Gibson J.P., 1996, P WORKSH PROOF THEOR
   Gibson P., 1997, OT98 COTSR, P245
   Groslambert J, 2007, LECT NOTES COMPUT SC, V4355, P109
   Hallerstede S, 2008, LECT NOTES COMPUT SC, V5238, P125
   Hoare CAR., 1985, Communicating Sequential Processes
   Jackson Michael., 1983, SYSTEM DEV
   JARVINEN HM, 1991, 11TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS, P142, DOI 10.1109/ICDCS.1991.148656
   Jones C. B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P321
   Kansal A, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1274858.1274870
   LAMPORT L, 1989, COMMUN ACM, V32, P32, DOI 10.1145/63238.63240
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lamport Leslie., SPECIFYING SYSTEMS T
   Lamport Leslie., 2002, EW10 P 10 WORKSHOP A, P45, DOI DOI 10.1145/1133373.1133382
   Mavronicolas M, 2007, BULL EUR ASSOC THEOR, P98
   MERY D, 1986, LECT NOTES COMPUT SC, V233, P536, DOI 10.1007/BFb0016280
   Mery D, 2009, INT J SOFTWARE INFOR, V3, P197
   MERY D, 1999, IFM 99 INT FORM METH
   OLDEROG ER, 1988, ACM T PROGR LANG SYS, V10, P420, DOI 10.1145/44501.44504
   OWICKI S, 1982, ACM T PROGR LANG SYS, V4, P455, DOI 10.1145/357172.357178
   Park D, 1981, P 6 IBM S MATH FDN C, P257
   Picco G, 2010, FOSER 2010
   Rajagopalan R, 2006, IEEE COMMUN SURV TUT, V8, P48, DOI 10.1109/COMST.2006.283821
   Schneider S, 2014, LECT NOTES COMPUT SC, V8739, P221, DOI 10.1007/978-3-319-10181-1_14
   Spirakis PG, 2011, THEORETICAL ASPECTS OF DISTRIBUTED COMPUTING IN SENSOR NETWORKS, P109, DOI 10.1007/978-3-642-14849-1_5
   Stavvides A., 2004, WIRELESS SENSOR NETW
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   Yick J, 2008, COMPUT NETW, V52, P2292, DOI 10.1016/j.comnet.2008.04.002
NR 61
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1083
EP 1115
DI 10.1007/s10270-015-0504-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800008
DA 2024-07-18
ER

PT J
AU Queiroz, R
   Passos, L
   Valente, MT
   Hunsen, C
   Apel, S
   Czarnecki, K
AF Queiroz, Rodrigo
   Passos, Leonardo
   Valente, Marco Tulio
   Hunsen, Claus
   Apel, Sven
   Czarnecki, Krzysztof
TI The shape of feature code: an analysis of twenty C-preprocessor-based
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software families; Preprocessor; Feature-related metrics; Thresholds;
   Power-law distribution
ID POWER-LAWS; DISTRIBUTIONS
AB Feature annotations (e.g., code fragments guarded by #ifdef C-preprocessor directives) control code extensions related to features. Feature annotations have long been said to be undesirable. When maintaining features that control many annotations, there is a high risk of ripple effects. Also, excessive use of feature annotations leads to code clutter, hinder program comprehension and harden maintenance. To prevent such problems, developers should monitor the use of feature annotations, for example, by setting acceptable thresholds. Interestingly, little is known about how to extract thresholds in practice, and which values are representative for feature-related metrics. To address this issue, we analyze the statistical distribution of three feature-related metrics collected from a corpus of 20 well-known and long-lived C-preprocessor-based systems from different domains. We consider three metrics: scattering degree of feature constants, tangling degree of feature expressions, and nesting depth of preprocessor annotations. Our findings show that feature scattering is highly skewed; in 14 systems (70 %), the scattering distributions match a power law, making averages and standard deviations unreliable limits. Regarding tangling and nesting, the values tend to follow a uniform distribution; although outliers exist, they have little impact on the mean, suggesting that central statistics measures are reliable thresholds for tangling and nesting. Following our findings, we then propose thresholds from our benchmark data, as a basis for further investigations.
C1 [Queiroz, Rodrigo] Univ Fed Minas Gerais, Comp Sci, Belo Horizonte, MG, Brazil.
   [Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Passos, Leonardo; Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Hunsen, Claus] Univ Passau, Chair Software Prod Lines, Passau, Germany.
   [Apel, Sven] Univ Passau, Passau, Germany.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Minas
   Gerais; University of Waterloo; University of Passau; University of
   Passau
RP Queiroz, R (corresponding author), Univ Fed Minas Gerais, Comp Sci, Belo Horizonte, MG, Brazil.
EM rodrigoqueiroz@dcc.ufmg.br; lnrdpss@acm.org; mtov@dcc.ufmg.br;
   claus.hunsen@uni-passau.de; apel@uni-passau.de;
   kczarnec@gsd.uwaterloo.ca
OI Apel, Sven/0000-0003-3687-2233; Valente, Marco Tulio/0000-0002-8180-7548
FU CNPq; CAPES; FAPEMIG; German Research Foundation [AP 206/4, AP 206/5, AP
   206/6]
FX We thank CNPq, CAPES, FAPEMIG, and the German Research Foundation (AP
   206/4, AP 206/5, AP 206/6) for partially funding this project.
CR [Anonymous], 2015, EMPIR SOFTW ENG
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   de Souza LBL, 2013, IEEE WORK CONF MIN S, P217, DOI 10.1109/MSR.2013.6624030
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Favre JM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P287, DOI 10.1109/WCRE.1996.558940
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Gillespie C. S., 2014, POWERLAW PACKAGE GEN
   Gillespie ColinS., 2014, Fitting heavy tailed distributions: the poweRlaw package
   Hubert M, 2008, COMPUT STAT DATA AN, V52, P5186, DOI 10.1016/j.csda.2007.11.008
   Hunsaker C., 2015, Effects of Meadow Erosion and Restoration on Groundwater Storage and Baseflow in National Forests in the Sierra Nevada, California, P1
   Jbara A, 2013, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2013.6648179
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian, 2011, P INT WORKSH FEAT OR, P1
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krone M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P49, DOI 10.1109/ICSE.1994.296765
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Oliveira P. S. N., 2014, P 10 WORLD C GEN APP, P1, DOI DOI 10.3390/EN8054160
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L., 2015, P INT C MOD, P1
   Queiroz R, 2014, P INT WORKSH FEAT OR, P23
   Serebrenik Alexander., 2010, P 26 IEEE INT C SOFT, P1
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Zhang F, 2013, 2013 INTERNATIONAL CONFERENCE ON DIGITAL IMAGE COMPUTING: TECHNIQUES & APPLICATIONS (DICTA), P185
NR 38
TC 14
Z9 15
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 77
EP 96
DI 10.1007/s10270-015-0483-z
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500008
DA 2024-07-18
ER

PT J
AU Giachino, E
   Laneve, C
   Lienhardt, M
AF Giachino, Elena
   Laneve, Cosimo
   Lienhardt, Michael
TI A framework for deadlock detection in core ABS
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Type inference; Deadlock analysis; Asynchronous method invocation;
   Concurrent object groups
ID SYSTEM
AB We present a framework for statically detecting deadlocks in a concurrent object-oriented language with asynchronous method calls and cooperative scheduling of method activations. Since this language features recursion and dynamic resource creation, deadlock detection is extremely complex and state-of-the-art solutions either give imprecise answers or do not scale. In order to augment precision and scalability, we propose a modular framework that allows several techniques to be combined. The basic component of the framework is a front-end inference algorithm that extracts abstract behavioral descriptions of methods, called contracts, which retain resource dependency information. This component is integrated with a number of possible different back-ends that analyze contracts and derive deadlock information. As a proof-of-concept, we discuss two such back-ends: (1) an evaluator that computes a fixpoint semantics and (2) an evaluator using abstract model checking.
C1 [Giachino, Elena; Laneve, Cosimo; Lienhardt, Michael] Univ Bologna, INRIA, Focus Team, Dept Comp Sci & Engn, Bologna, Italy.
C3 University of Bologna
RP Giachino, E (corresponding author), Univ Bologna, INRIA, Focus Team, Dept Comp Sci & Engn, Bologna, Italy.
EM elena.giachino@unibo.it
RI Giachino, Elena/HLX-8107-2023
OI Giachino, Elena/0000-0001-8884-044X; Laneve, Cosimo/0000-0002-0052-4061
CR Abadi M, 2006, ACM T PROGR LANG SYS, V28, P207, DOI 10.1145/1119479.1119480
   BOYAPATI C, 2002, P 17 ACM SIGPLAN C O, P211
   Carlsson R., 1997, CYCLIC PROCESS DEPEN
   CAROMEL D, 1993, COMMUN ACM, V36, P90, DOI 10.1145/162685.162711
   Caromel D, 2004, ACM SIGPLAN NOTICES, V39, P123, DOI 10.1145/982962.964012
   Comtet L, 1974, Advanced Combinatorics. The Art of Finite and Infinite Expansions
   Coppo M., 2001, Foundations of Software Science and Computation Structures. 4th International Conference, FOSSACS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2030), P184
   de Boer F., 2012, LECT NOTES COMPUTER, V7684, P110
   de Boer FS, 2007, LECT NOTES COMPUT SC, V4421, P316
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Flores-Montoya AE, 2013, LECT NOTES COMPUT SC, V7892, P273
   Gay S, 2005, ACTA INFORM, V42, P191, DOI 10.1007/s00236-005-0177-z
   Giachino Elena, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P63, DOI 10.1007/978-3-662-44584-6_6
   Giachino Elena, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P26, DOI 10.1007/978-3-319-07317-0_2
   Giachino E., 2013, LNCS, V7940, P394
   Giachino E., 2013, LECT NOTES COMPUTER, V8191, P49
   Giachino E., 2012, P 13 ICTCS
   Giachino E, 2011, LECT NOTES COMPUT SC, V6722, P168, DOI 10.1007/978-3-642-21461-5_11
   HENGLEIN F, 1993, ACM T PROGR LANG SYS, V15, P253, DOI 10.1145/169701.169692
   Igarashi A, 2004, THEOR COMPUT SCI, V311, P121, DOI 10.1016/S0304-3975(03)00325-6
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   Johnsen EB, 2007, SOFTW SYST MODEL, V6, P39, DOI 10.1007/s10270-006-0011-2
   Kerfoot E., 2009, 5 INT WORKSH AL CONF
   Kobayashi N, 1998, ACM T PROGR LANG SYS, V20, P436, DOI 10.1145/276393.278524
   Kobayashi N., 2007, TYPICAL
   Kobayashi N, 2006, LECT NOTES COMPUT SC, V4137, P233
   Laneve C, 2007, LECT NOTES COMPUT SC, V4703, P212
   MILNER R, 1992, INFORM COMPUT, V100, P41, DOI 10.1016/0890-5401(92)90009-5
   Milner R, 1982, CALCULUS COMMUNICATI
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Pun K.I., 2013, THESIS
   Puntigam F, 2001, FUND INFORM, V48, P315
   Requirement elicitation, 2009, FP7231620 HATS REQ E
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vasconcelos V., 2009, PRE P WORKSH PROGR L, V17, P95
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   West S, 2010, LECT NOTES COMPUT SC, V6447, P597, DOI 10.1007/978-3-642-16901-4_39
   Wong Peter Y. H., 2012, International Journal on Software Tools for Technology Transfer, V14, P567, DOI 10.1007/s10009-012-0250-1
   YONEZAWA A, 1986, SIGPLAN NOTICES, V21, P258, DOI 10.1145/960112.28722
NR 40
TC 19
Z9 19
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1013
EP 1048
DI 10.1007/s10270-014-0444-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800006
DA 2024-07-18
ER

PT J
AU Graf, S
   Quinton, S
AF Graf, Susanne
   Quinton, Sophie
TI Knowledge-based construction of distributed constrained systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Distributed implementations; Knowledge; Controlled system;
   Correct-by-construction; Implementation relation; Knowledge preservation
ID DERIVING PROTOCOL SPECIFICATIONS; DECENTRALIZED SUPERVISORY CONTROL;
   SERVICE SPECIFICATIONS; MODEL; WRITTEN
AB The problem of deriving distributed implementations from global specifications has been extensively studied for a number of application domains. We explore it here from the knowledge perspective: A process may decide to take a local action when it has enough knowledge to do so. Such knowledge may be acquired by communication through primitives available on the platform or by static analysis. In this paper, we want to combine control and distribution, that is, we need to impose some global control constraint on a system executed in a distributed fashion. To reach that goal, we compare two approaches: either build a centralized controlled system, distribute its controller and then implement this controlled system on a distributed platform; or alternatively, directly enforce the control constraint while implementing the distributed system on the platform. We show how to achieve a solution following the second approach and explain why this is a pragmatic and more efficient strategy than the other, previously proposed one.
C1 [Graf, Susanne] Univ Grenoble 1, CNRS, VERIMAG, Grenoble, France.
   [Quinton, Sophie] INRIA Rhone Alpes, Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP Graf, S (corresponding author), Univ Grenoble 1, CNRS, VERIMAG, Grenoble, France.
EM Susanne.Graf@imag.fr
CR [Anonymous], 1974, PROC IFIP C 74
   [Anonymous], 1985, MONOGRAPHS THEORETIC
   BAGRODIA R, 1989, IEEE T SOFTWARE ENG, V15, P1053, DOI 10.1109/32.31364
   Basu A, 2009, LECT NOTES COMPUT SC, V5643, P79, DOI 10.1007/978-3-642-02658-4_10
   Ben-Hafaiedh I, 2011, J LOGIC ALGEBR PROGR, V80, P194, DOI 10.1016/j.jlap.2010.10.001
   Bensalem Saddek, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P118, DOI 10.1007/978-3-642-30793-5_8
   Bensalem S, 2010, LECT NOTES COMPUT SC, V6252, P52
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BOUSSINOT F, 1991, P IEEE, V79, P1293, DOI 10.1109/5.97299
   Caspi P., 1995, EURO-PAR '95 Parallel Processing. First International EURO-PAR Conference. Proceedings, P15
   Chu P.-Y. M., 1988, Proceedings of the Computer Networking Symposium (Cat. No.88CH2547-8), P173, DOI 10.1109/CNS.1988.4994
   Fagin R, 1995, Reasoning about knowledge
   GENRICH HJ, 1981, THEOR COMPUT SCI, V13, P109, DOI 10.1016/0304-3975(81)90113-4
   GOTZHEIN R, 1990, ACM T COMPUT SYST, V8, P255, DOI 10.1145/128733.128734
   Graf S., 2013, LECT NOTES COMPUTER, V7940, P77
   Graf S, 2011, LECT NOTES COMPUT SC, V6722, P183, DOI 10.1007/978-3-642-21461-5_12
   Graf S, 2010, LECT NOTES COMPUT SC, V6174, P396, DOI 10.1007/978-3-642-14295-6_35
   HALPERN JY, 1989, DISTRIB COMPUT, V3, P159, DOI 10.1007/BF01784885
   Kant C, 1996, DISTRIB COMPUT, V10, P29, DOI 10.1007/s004460050022
   Katz Gal, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P510, DOI 10.1007/978-3-642-22110-1_41
   KATZ S, 1992, DISTRIB COMPUT, V6, P107, DOI 10.1007/BF02252682
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   LIN F, 1988, INFORM SCIENCES, V44, P199, DOI 10.1016/0020-0255(88)90002-3
   Pérez JA, 2004, CONCURR COMP-PRACT E, V16, P1173, DOI 10.1002/cpe.903
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   PROBERT RL, 1991, IEEE T COMPUT, V40, P468, DOI 10.1109/12.88466
   Ricker SL, 2007, IEEE T AUTOMAT CONTR, V52, P428, DOI 10.1109/TAC.2007.892371
   Ricker SL, 2000, IEEE T AUTOMAT CONTR, V45, P1656, DOI 10.1109/9.880616
   RUDIE K, 1992, IEEE T AUTOMAT CONTR, V37, P1692, DOI 10.1109/9.173140
   von Bochmann G., 1986, Computer Communication Review, V16, P148, DOI 10.1145/1013812.18190
   Wong KC, 1998, DISCRETE EVENT DYN S, V8, P247, DOI 10.1023/A:1008210519960
   YAMAGUCHI H, 1995, INT CON DISTR COMP S, P510, DOI 10.1109/ICDCS.1995.500057
   Yamaguchi H, 2007, COMPUT NETW, V51, P258, DOI 10.1016/j.comnet.2006.03.011
   Yoo TS, 2002, DISCRETE EVENT DYN S, V12, P335, DOI 10.1023/A:1015625600613
   ZAFIROPULO P, 1980, IEEE T COMMUN, V28, P651, DOI 10.1109/TCOM.1980.1094687
NR 35
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1163
EP 1180
DI 10.1007/s10270-014-0451-z
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800012
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   Weber, B
   de Guzmán, IGR
   Piattini, M
   Pinggera, J
AF Perez-Castillo, Ricardo
   Weber, Barbara
   Garcia-Rodriguez de Guzman, Ignacio
   Piattini, Mario
   Pinggera, Jakob
TI Assessing event correlation in non-process-aware information systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process mining; Event correlation; Event model; Case study
AB Many present-day companies carry out a huge amount of daily operations through the use of their information systems without ever having done their own enterprise modeling. Business process mining is a well-proven solution which is used to discover the underlying business process models that are supported by existing information systems. Business process discovery techniques employ event logs as input, which are recorded by process-aware information systems. However, a wide variety of traditional information systems do not have any in-built mechanisms with which to collect events (representing the execution of business activities). Various mechanisms with which to collect events from non-process-aware information systems have been proposed in order to enable the application of process mining techniques to traditional information systems. Unfortunately, since business processes supported by traditional information systems are implicitly defined, correlating events into the appropriate process instance is not trivial. This challenge is known as the event correlation problem. This paper presents an adaptation of an existing event correlation algorithm and incorporates it into a technique in order to collect event logs from the execution of traditional information systems. The technique first instruments the source code to collect events together with some candidate correlation attributes. Based on several well-known design patterns, the technique provides a set of guidelines to support experts when instrumenting the source code. The event correlation algorithm is subsequently applied to the data set of events to discover the best correlation conditions, which are then used to create event logs. The technique has been semi-automated to facilitate its validation through an industrial case study involving a writer management system and a healthcare evaluation system. The study demonstrates that the technique is able to discover an appropriate correlation set and obtain well-formed event logs, thus enabling business process mining techniques to be applied to traditional information systems.
C1 [Perez-Castillo, Ricardo; Garcia-Rodriguez de Guzman, Ignacio; Piattini, Mario] Univ Castilla La Mancha, ITSI, E-13071 Ciudad Real, Spain.
   [Weber, Barbara; Pinggera, Jakob] Univ Innsbruck, A-6020 Innsbruck, Austria.
C3 Universidad de Castilla-La Mancha; University of Innsbruck
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, ITSI, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ricardo.perez.del.castillo@gmail.com; barbara.weber@uibk.ac.at;
   ignacio.grodriguez@uclm.es; mario.piattini@uclm.es;
   jakob.pinggera@uibk.ac.at
RI Piattini, Mario/F-6271-2013; Pérez-Castillo, Ricardo/A-3033-2011; de
   Guzmán, Ignacio García-Rodríguez/N-4489-2014
OI Piattini, Mario/0000-0002-7212-8279; Pérez-Castillo,
   Ricardo/0000-0002-9271-3184; de Guzmán, Ignacio
   García-Rodríguez/0000-0002-0038-0942; Weber, Barbara/0000-0002-6004-4860
CR Barn Balbir S., 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P229, DOI 10.1007/978-3-642-21640-4_18
   Buckl S, 2011, LECT NOTES BUS INF P, V81, P511
   Burattin A., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P176, DOI 10.1109/CIDM.2011.5949450
   de Medeiros AKA, 2007, DATA MIN KNOWL DISC, V14, P245, DOI 10.1007/s10618-006-0061-7
   Eckerson W, 1995, OPEN INFORM SYSTEMS, V10, P3
   Ferreira DR, 2009, LECT NOTES COMPUT SC, V5701, P143, DOI 10.1007/978-3-642-03848-8_11
   Fluxicon Process Laboratories, 2009, XES 1 0 STAND DEF EX
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Günther CW, 2006, LECT NOTES COMPUT SC, V4103, P81
   Hammoud N., 2009, Proceedings of the International Conference on Management of Emergent Digital EcoSystems - MEDES'09 p, P480, DOI DOI 10.1145/1643823.1643919
   Ingvaldsen JE, 2008, LECT NOTES COMPUT SC, V4928, P30
   Kato Koki, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P38, DOI 10.1007/978-3-642-23059-2_6
   McGarry K, 2005, KNOWL ENG REV, V20, P39, DOI 10.1017/S0269888905000408
   Motahari-Nezhad HR, 2011, VLDB J, V20, P417, DOI 10.1007/s00778-010-0203-9
   Myers J., 2010, P 6 ANN WORKSH CYB S, P1, DOI [10.1145/1852666.1852702, DOI 10.1145/1852666.1852702]
   Oracle Inc, 2001, CORE J2EE PATT DAT A
   Paradauskas B., 2006, Information Technology and Control, V35, P214
   Pérez-Castillo R, 2011, IET SOFTW, V5, P304, DOI 10.1049/iet-sen.2010.0103
   Perez-Castillo R., 2012, EXPT RESULTS ASSESSM
   Pérez-Castillo R, 2011, ENTERP INF SYST-UK, V5, P301, DOI 10.1080/17517575.2011.587545
   Pérez-Castillo R, 2011, LECT NOTES BUS INF P, V66, P201
   Rati'u D., 2009, International Workshop on Reverse Engineering Models from Software Artifacts (REM'09), P13
   Rozsnyai S., 2011, P 5 ACM INT C DISTR, P75, DOI DOI 10.1145/2002259.2002272
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   van der Aalst B. F., 2009, BPM, V489, P1
   van der Aalst W, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P235, DOI 10.1002/0471741442.ch10
   Yin R.K., 2011, Qualitative research from start to finish
   Zou Y, 2006, INT C PROGRAM COMPRE, P127
NR 28
TC 18
Z9 19
U1 1
U2 22
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1117
EP 1139
DI 10.1007/s10270-012-0285-5
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600011
DA 2024-07-18
ER

PT J
AU Reimann, J
   Seifert, M
   Assmann, U
AF Reimann, Jan
   Seifert, Mirko
   Assmann, Uwe
TI On the reuse and recommendation of model refactoring specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Generic model refactoring; Role-based refactoring; Refactoring reuse;
   Refactoring recommendation; Role modelling
ID TRANSFORMATION
AB Refactorings can be used to improve the structure of software artefacts while preserving the semantics of the encapsulated information. Various types of refactorings have been proposed and implemented for programming languages (e.g., Java or C#). With the advent of (MDSD), a wealth of modelling languages rises and the need for restructuring models similar to programs has emerged. Since parts of these modelling languages are often very similar, we consider it beneficial to reuse the core transformation steps of refactorings across languages. In this sense, reusing the abstract transformation steps and the abstract participating elements suggests itself. Previous work in this field indicates that refactorings can be specified generically to foster their reuse. However, existing approaches can handle certain types of modelling languages only and solely reuse refactorings once per language. In this paper, a novel approach based on role models to specify generic refactorings is presented. Role models are suitable for this problem since they support declaration of roles which have to be played in a certain context. Assigned to generic refactoring, contexts are different refactorings and roles are the participating elements. We discuss how this resolves the limitations of previous works, as well as how specific refactorings can be defined as extensions to generic ones. The approach was implemented in our tool Refactory based on the (EMF) and evaluated using multiple modelling languages and refactorings. In addition, this paper investigates on the recommendation of refactoring specifications. This is motivated by the fact that language designers have many possibilities to enable refactorings in their modelling languages with regard to the language structures. To overcome this problem and to support language designers in deciding which refactorings to enable, we propose a solution and a prototypical implementation.
C1 [Reimann, Jan; Assmann, Uwe] Tech Univ Dresden, Inst Software & Multimediatech, D-01062 Dresden, Germany.
   [Seifert, Mirko] DevBoost GmbH, D-10179 Berlin, Germany.
C3 Technische Universitat Dresden
RP Seifert, M (corresponding author), DevBoost GmbH, Rungestr 22-24, D-10179 Berlin, Germany.
EM jan.reimann@tu-dresden.de; mirko.seifert@devboost.de;
   uwe.assmann@tu-dresden.de
RI Reimann, Jan/Q-1984-2019
OI Reimann, Jan/0000-0002-2363-5856; Assmann, Uwe/0000-0002-3513-6448
FU European Social Fund; Federal State of Saxony within the project ZESSY
   QualiTune [0809518061]; European Commission within the FP6 project
   MODELPLEX [034081]; FP7 project MOST [216691]
FX This research has been co-funded by the European Social Fund and the
   Federal State of Saxony within the project ZESSY QualiTune
   (http://www.qualitune.org/) #0809518061, the European Commission within
   the FP6 project MODELPLEX #034081, and the FP7 project MOST #216691.
   Also, we would like to thank the research community and especially the
   anonymous reviewers for their constructive and helpful feedback. Their
   large effort in reviewing the paper helped us in enhancing the
   presentation of our work and to provide a more readable paper.
CR Åkesson J, 2008, ELECTRON NOTES THEOR, V203, P117, DOI 10.1016/j.entcs.2008.03.048
   [Anonymous], 2008, UCBEECS20088
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2008, ECLIPSE MODELING FRA
   Biermann E, 2006, LECT NOTES COMPUT SC, V4199, P425
   Brosch P., 2009, OOPSLA COMPANION, P791
   Brosch P, 2009, LECT NOTES COMPUT SC, V5795, P271, DOI 10.1007/978-3-642-04425-0_20
   Bürger C, 2011, LECT NOTES COMPUT SC, V6563, P22, DOI 10.1007/978-3-642-19440-5_3
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Ekman T, 2007, ACM SIGPLAN NOTICES, V42, P1, DOI 10.1145/1297105.1297029
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Heidenreich F., 2010, P WORKSH OCL TEXT MO
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Klein G., 2009, JFLEX USERS MANUAL V
   Kleppe AnnekeG., 2009, SOFTWARE LANGUAGE EN
   Kolovos D.S., 2009, INT WORKSH COMP VERS
   KURTEV I, 2002, INT S DISTR OBJ APPL
   LAMMEL R, 2002, P 3 ACM SIGPLAN WORK
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Mens T., 2007, P 1 WORKSH REF TOOLS
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Object Management Group, 2008, MET FAC MOF 2 0 QUER
   Object Management Group, 2010, OMG UN MOD LANG TM O
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Reimann J., 2010, LECT NOTES COMPUTER, V6395, P78
   Riehle D, 1998, ACM SIGPLAN NOTICES, V33, P117, DOI 10.1145/286942.286951
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Samlaus R., 2011, 8 INT MOD C DRESD
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Taentzer G, 2008, LECT NOTES COMPUT SC, V5088, P104
   Vermolen S, 2008, WORK CONF REVERSE EN, P323, DOI 10.1109/WCRE.2008.42
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Zhang J, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P199, DOI 10.1007/3-540-28554-7_9
NR 40
TC 14
Z9 16
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 579
EP 596
DI 10.1007/s10270-012-0243-2
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300011
DA 2024-07-18
ER

PT J
AU Hoang, TS
   Fürst, A
   Abrial, JR
AF Thai Son Hoang
   Fuerst, Andreas
   Abrial, Jean-Raymond
TI Event-B patterns and their tool support
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Event-B; Formal methods; Design patterns; Formal modelling; Model reuse
ID DESIGN PATTERNS; INSTANTIATION; DECOMPOSITION; REFINEMENT
AB Event-B has given developers the opportunity to construct models of complex systems that are correct-by-construction. However, there is no systematic approach, especially in terms of reuse, which could help with the construction of these models. We introduce the notion of design patterns within the framework of Event-B to shorten this gap. Our approach preserves the correctness of the models, which is critical in formal methods and also reduces the proving effort. Within our approach, an Event-B design pattern is just another model devoted to the formalisation of a typical sub-problem. As a result, we can use patterns to construct a model which can subsequently be used as a pattern to construct a larger model. We also present the interaction between developers and the tool support within the associated RODIN Platform of Event-B. The approach has been applied successfully to some medium-size industrial case studies.
C1 [Thai Son Hoang; Fuerst, Andreas] Swiss Fed Inst Technol, Zurich, Switzerland.
   [Abrial, Jean-Raymond] Swiss Fed Inst Technol, Zurich, Switzerland.
   [Abrial, Jean-Raymond] Swiss Fed Inst Technol, DEPLOY, Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; Swiss Federal
   Institutes of Technology Domain; ETH Zurich; Swiss Federal Institutes of
   Technology Domain; ETH Zurich
RP Hoang, TS (corresponding author), Swiss Fed Inst Technol, Zurich, Switzerland.
EM htson@inf.ethz.ch
RI Hoang, Thai Son/H-6159-2019
OI Hoang, Thai Son/0000-0003-4095-0732
FU DEPLOY
FX Part of this work is supported by the DEPLOY project
   (http://www.deploy-project.eu).
CR Abrial JR, 2008, LECT NOTES COMPUT SC, V5160, P1, DOI 10.1007/978-3-540-85762-4_1
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2007, FUND INFORM, V77, P1
   BACK RJ, 1989, LNCS, V430, P67
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   Decker G, 2007, LECT NOTES COMPUT SC, V4714, P305
   DEPLOY Project, 2009, DEL JD1 REP KNOWL TR
   Furst A., 2010, RODIN PLATFORM ARCH
   Furst A., 2010, DOCUMENTATION TOOL S
   Furst A., 2009, THESIS DEP COMPUTER
   Gamma E, 1995, Design Patterns: Elements of Reusable Object-Oriented Software
   Gasparis E, 2008, LECT NOTES ARTIF INT, V5223, P364, DOI 10.1007/978-3-540-87730-1_37
   Hoang TS, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P210, DOI 10.1109/SEFM.2009.17
   Lamport L., 1994, ACM T PROGR LANG SYS, V16, P872
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Requet A, 2008, LECT NOTES COMPUT SC, V5238, P345
   Silva R, 2009, LECT NOTES COMPUT SC, V5885, P466, DOI 10.1007/978-3-642-10373-5_24
   Spivey M., 1992, The Z Notation: A Reference Manual
   Taibi T, 2009, J OBJECT TECHNOL, V8, P137, DOI 10.5381/jot.2009.8.2.a3
   Wieczorek S., 2008, P 4 IEEE INT S SERV
NR 23
TC 27
Z9 28
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 229
EP 244
DI 10.1007/s10270-010-0183-7
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Steel, J
   Drogemuller, R
   Toth, B
AF Steel, Jim
   Drogemuller, Robin
   Toth, Bianca
TI Model interoperability in building information modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Building Information Modelling; Interoperability
AB The exchange of design models in the design and construction industry is evolving away from 2-dimensional computer-aided design (CAD) and paper towards semantically-rich 3-dimensional digital models. This approach, known as Building Information Modelling (BIM), is anticipated to become the primary means of information exchange between the various parties involved in construction projects. From a technical perspective, the domain represents an interesting study in model-based interoperability, since the models are large and complex, and the industry is one in which collaboration is a vital part of business. In this paper, we present our experiences with issues of model-based interoperability in exchanging building information models between various tools, and in implementing tools which consume BIM models, particularly using the industry standard IFC data modelling format. We report on the successes and challenges in these endeavours, as the industry endeavours to move further towards fully digitised information exchange.
C1 [Steel, Jim; Drogemuller, Robin; Toth, Bianca] Queensland Univ Technol, Brisbane, Qld 4001, Australia.
C3 Queensland University of Technology (QUT)
RP Steel, J (corresponding author), Queensland Univ Technol, Brisbane, Qld 4001, Australia.
EM james.steel@qut.edu.au; robin.drogemuller@qut.edu.au;
   bianca.toth@qut.edu.au
RI Steel, Jim/C-3946-2008
OI Steel, Jim/0000-0002-5694-1147; Drogemuller, Robin/0000-0001-5746-8980
FU Cooperative Research Centre (CRC) for Construction Innovation, through
   the Australian Federal Government's CRC (Department of Innovation,
   Industry, Science and Research); Cooperative Research Centre (CRC) for
   Construction Innovation, through Australian Research Council; Queensland
   Government Project Services in Brisbane
FX This paper was developed from research funded in part by the Cooperative
   Research Centre (CRC) for Construction Innovation, through the
   Australian Federal Government's CRC Programme (Department of Innovation,
   Industry, Science and Research), and also through the support of the
   Australian Research Council. We also acknowledge Queensland Government
   Project Services in Brisbane for the support and opportunities that they
   provide by extending their workplace to foster this research.
CR [Anonymous], 2004, 10303112004 ISO
   [Anonymous], 2007, IND FDN CLASS ED 3 T, P1
   Bettin J., 2009, KNOWLEDGE IND SURVIV
   Drogemuller R., 2005, 20050008C01 CRC CONS
   International Organization for Standardization, 2007, ISO 12006-3:2007
   *ISO, 1998, 10303221998 ISO
   ISO, 1994, 1030311994 ISO
   ISO, 2002, ISO 10303-21
   ISO, 2007, 10303282007 ISO
   Mahdavi A, 2004, BUILD ENVIRON, V39, P913, DOI 10.1016/j.buildenv.2004.01.016
   *OMG, 2007, FORMAL071102 OMG
   Penttila H., 2006, ITcon, V11, P395
   Succar B, 2009, AUTOMAT CONSTR, V18, P357, DOI 10.1016/j.autcon.2008.10.003
   Tucker S., 2003, CIB Rep, V284, P403
   Young N.W., 2008, BUILDING INFORM MODE
NR 15
TC 122
Z9 139
U1 7
U2 128
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 99
EP 109
DI 10.1007/s10270-010-0178-4
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Gilmore, S
   Gönczy, L
   Koch, N
   Mayer, P
   Tribastone, M
   Varró, D
AF Gilmore, Stephen
   Goenczy, Laszlo
   Koch, Nora
   Mayer, Philip
   Tribastone, Mirco
   Varro, Daniel
TI Non-functional properties in the model-driven development of
   service-oriented systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Non-functional properties; Service-oriented software; SOA; Modeling;
   Model-driven engineering
AB Systems based on the service-oriented architecture (SOA) principles have become an important cornerstone of the development of enterprise-scale software applications. They are characterized by separating functions into distinct software units, called services, which can be published, requested and dynamically combined in the production of business applications. Service-oriented systems (SOSs) promise high flexibility, improved maintainability, and simple re-use of functionality. Achieving these properties requires an understanding not only of the individual artifacts of the system but also their integration. In this context, non-functional aspects play an important role and should be analyzed and modeled as early as possible in the development cycle. In this paper, we discuss modeling of non-functional aspects of service-oriented systems, and the use of these models for analysis and deployment. Our contribution in this paper is threefold. First, we show how services and service compositions may be modeled in UML by using a profile for SOA (UML4SOA) and how non-functional properties of service-oriented systems can be represented using the non-functional extension of UML4SOA (UML4SOA-NFP) and the MARTE profile. This enables modeling of performance, security and reliable messaging. Second, we discuss formal analysis of models which respect this design, in particular we consider performance estimates and reliability analysis using the stochastically timed process algebra PEPA as the underlying analytical engine. Last but not least, our models are the source for the application of deployment mechanisms which comprise model-to-model and model-to-text transformations implemented in the framework VIATRA. All techniques presented in this work are illustrated by a running example from an eUniversity case study.
C1 [Koch, Nora] Cirquent GmbH, Munich, Germany.
   [Goenczy, Laszlo; Varro, Daniel] Budapest Univ Technol & Econ, H-1117 Budapest, Hungary.
   [Koch, Nora; Mayer, Philip] Univ Munich, Munich, Germany.
   [Gilmore, Stephen; Tribastone, Mirco] Univ Edinburgh, Edinburgh, Midlothian, Scotland.
C3 BMW AG; Budapest University of Technology & Economics; University of
   Munich; University of Edinburgh
RP Koch, N (corresponding author), Cirquent GmbH, Munich, Germany.
EM stg@staffmail.ed.ac.uk; gonczy@mit.bme.hu; kochn@pst.ifi.lmu.de;
   mayer@pst.ifi.lmu.de; mtribast@staffmail.ed.ac.uk; varro@mit.bme.hu
RI de Koch, Nora Parcus/AAM-2043-2020; Varro, Daniel/AAC-4234-2022; Varro,
   Daniel/G-8963-2012
OI de Koch, Nora Parcus/0000-0001-6404-0405; Varro,
   Daniel/0000-0002-8790-252X; Tribastone, Mirco/0000-0002-6018-5989;
   Gonczy, Laszlo/0000-0002-5317-2311
CR Alwagait E, 2004, 14TH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: WEB SERVICES FOR E-COMMERCE AND E-GOVERNMENT APPLICATIONS, PROCEEDINGS, P111, DOI 10.1109/RIDE.2004.1281710
   AMSDEN J, 2003, DRAFT UML 1 4 PROFIL
   [Anonymous], 2009, SERV OR ARCH MOD LAN
   [Anonymous], UN MOD LANG SUP VERS
   [Anonymous], J SOFTWARE SYSTEMS M
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   Borger E, 2003, ABSTRACT STATEMACHIN
   CACERES P, 2003, WORKSH SOFTW MOD ENG
   Canevet C., 2004, Software Engineering Notes, V29, P74, DOI 10.1145/974043.974055
   CORTELLESSA V, 2006, SAC 06, P1218
   DAMBROGIO A, 2007, WOSP 2007 P 6 INT WO, P78
   DUJMOVIC JJ, 2004, P 4 INT WORKSH SOFTW
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Ermagan V, 2007, LECT NOTES COMPUT SC, V4735, P360
   FOSTER H, 2010, D14B UML SERVICE ORI
   GONCZY L, 2008, P MOD DRIV WEB ENG M, V389
   GONCZY L, 2006, P WWW INT 2006 ICWI2
   Gronmo R, 2004, 2004 IEEE INTERNATIONAL CONFERNECE ON E-TECHNOLOGY, E-COMMERE AND E-SERVICE, PROCEEDINGS, P42
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   JOHNSON S, 2005, UML 20 PROFILE SOFTW
   JONKERS H, 2005, INTEGRATION ANAL FUN, P229
   Kelly S., 2008, Domain-Specific Modeling
   Li P, 2006, LECT NOTES COMPUT SC, V4328, P193
   Looker N, 2007, I C DEPEND SYS NETWO, P125, DOI 10.1109/DSN.2007.31
   Lopez-Grao Merseguer., 2004, P 4 INT WORKSHOP SOF, P25
   MANTELL K, 2005, FROMUMLTO BPEL SPECI
   MAYER P, 2008, SCC 2008, P1
   Mayer P, 2008, IEEE INT ENTERP DIST, P203, DOI 10.1109/EDOC.2008.55
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   *OBJ MAN GROUP, UML MOD QUAL SERV FA
   Object Management Group, 2005, UML PROF SCH PERF TI
   *OMG, 2008, UML PROF MAR TE BETA
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Röttger S, 2004, LECT NOTES COMPUT SC, V3273, P275
   Skogan D, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P47, DOI 10.1109/EDOC.2004.1342504
   TRIBASTONE M, 2008, P 7 INT WORKSH SOFT
   VARA JM, 2005, NWESP 2005
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Wada H, 2006, P IEEE I C SERV COMP, P222, DOI 10.1109/SCC.2006.74
   *WEB SERV SEC, 2004, SOAP MESS SEC 1 1
   WIRSING M, 2008, LNCS
   WOODSIDE CM, 2005, WOSP, P1
NR 45
TC 15
Z9 15
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 287
EP 311
DI 10.1007/s10270-010-0155-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bocciarelli, P
   D'Ambrogio, A
AF Bocciarelli, Paolo
   D'Ambrogio, Andrea
TI A model-driven method for describing and predicting the reliability of
   composite services
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE QoS; Service oriented architecture; WSDL; BPEL; UML; Model-driven
   prediction
AB Service-oriented computing is the prominent paradigm for viewing business processes as composed of functions provided by modular and standardized services. Web services are the building blocks for the application of service-oriented computing on the Web and provide the necessary support for the consolidation of multiple services into a single composite service corresponding to the overall process. In such a context, service providers are strategically interested in both describing the quality of service (QoS) characteristics of offered services, to better qualify their offer and gain a significant advantage in the global marketplace, and predicting the level of QoS that can be offered to service consumers when building composite web services that make use of services managed by various service providers. This paper illustrates a model-driven method to automatically describe and predict the QoS of composite web services specified by use of business process execution language (BPEL). The paper specifically addresses the reliability characteristic of the QoS. The proposed method is founded on Q-WSDL, a lightweight WSDL extension for the description of the QoS characteristics of a web service, and exploits Q-WSDL to annotate reliability data onto a BPEL-based UML model of the composite service. The UML model is then used to predict and describe the reliability of the composite web service. The proposed method is illustrated by use of an example application that deals with a composite web service for the migration of PSTN telephone numbers.
C1 [Bocciarelli, Paolo; D'Ambrogio, Andrea] Univ Roma Tor Vergata, Dept Comp Sci Syst & Prod, Rome, Italy.
C3 University of Rome Tor Vergata
RP D'Ambrogio, A (corresponding author), Univ Roma Tor Vergata, Dept Comp Sci Syst & Prod, Rome, Italy.
EM bocciarelli@info.uniroma2.it; dambro@info.uniroma2.it
RI D'Ambrogio, Andrea/AAN-9429-2021
OI bocciarelli, paolo/0000-0003-3656-5372; D'Ambrogio,
   Andrea/0000-0001-5711-1527
FU University of Roma TorVergata; University of Roma TorVergata CERTIA
   Research Center
FX The authors thank the anonymous referees for their observations that
   have contributed to improve the quality and the presentation of the
   paper. This work has been partially supported by funds from the FIRB
   project on "performance evaluation of complex systems", from the
   University of Roma TorVergata research on "performance modeling of
   service-oriented architectures" and from the University of Roma
   TorVergata CERTIA Research Center.
CR Alonso G., 2004, Web Services
   [Anonymous], 2004, Enterprise service bus
   [Anonymous], ACTIVEBPEL DESIGNER
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   [Anonymous], P 12 INT S SOFTW REL
   [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web, DOI DOI 10.1016/J.WEBSEM.2004.03.001
   Bordbar B., 2004, P 2 EUR WORKSH MOD D
   BOX D, 2003, WEB SERVICES POLICY
   Catania N., 2003, WEB SERVICES MANAGEM
   CLEMENS PL, 1993, FAULT TREE ANAL TUTO
   DAMBROGIO A, 2006, P IEEE INT C WEB SER
   DAMBROGIO A, 2005, P ACM 5 INT WORKSH S
   DAMBROGIO A, 2007, P ACM 6 INT WORKSH S
   *ECL, ECL BPEL PROJ
   GARDNER T, 2003, 1 EUR WORKSH OBJ OR
   *IBM, 2003, IBM BPEL BUS PROC EX
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   *ISO, 1998, ISOIECJTC1SC7N1996
   LAPLACE S, NOMS 2008, P951
   LEANGSUKSUN C, 2003, P 2003 INT C SOFTW E
   Ludwig H., 2003, WEB SERVICE LEVEL AG
   LUDWIG H, 2003, P 4 IEEE INT C WEB I
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   MARTIN D, 2004, DESCRIBING WEB SERVI
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   *OMGMDA OBJ MAN GR, 2003, MDA GUID VERS 1 0 1
   *OMGMOF OBJ MAN GR, 2002, MET OBJ FAC MOF SPEC
   *OMGQOS OBJ MAN GR, 2005, UML PROF MOD QUAL SE
   *OMGSPT OBJ MAN GR, 2005, UML PROF SCHED PERF
   *OMGUML OBJ MAN GR, 2005, UN MOD LANG UML SUP
   *OMGXMI OBJ MAN GR, 2003, XML MET INT XML SPEC
   *ORACL, ORACL BPEL PROC MAN
   OSULLIVAN J, 2003, FITTR200302 QUEENSL
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   ROBERTS NH, 1981, FAULT TREE HDB SYSTE
   SMITH RM, 1988, IEEE T COMPUT, V37, P406, DOI 10.1109/12.2184
   *TIGR ORG, 2006, ARGOUML US MAN V0 22
   Tosic V, 2003, ICWS'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON WEB SERVICES, P375
   TSAI WT, 2004, 8 IASTED INT C SOFTW, P144
   *W3C WWW CONS, 2006, WEB SERV DESCR LANG
   *W3C WWW CONS, 2001, WWW CONS XSL TRANSF
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   ZENG L, 2004, IEEE T SOFTW ENG, V30
   Zhang J, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P621
NR 47
TC 10
Z9 10
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 265
EP 280
DI 10.1007/s10270-010-0150-3
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500008
DA 2024-07-18
ER

PT J
AU Zha, HP
   van der Aalst, WMP
   Wang, JM
   Wen, LJ
   Sun, JG
AF Zha, Haiping
   van der Aalst, Wil M. P.
   Wang, Jianmin
   Wen, Lijie
   Sun, Jiaguang
TI Verifying workflow processes: a transformation-based approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Workflow; Model transformation; Process verification; Workflow
   verification; Petri net
ID PROCESS MODELS; PETRI NETS; VERIFICATION; SEMANTICS
AB Workflow modeling is a challenging activity and designers are likely to introduce errors, especially in complex industrial processes. Effective process verification is essential at design time because the cost of fixing errors during runtime is substantially higher. However, most user-oriented workflow modeling languages lack formal semantics that hinders such verification. In this paper, we propose a generic approach based on the model transformation to verify workflow processes. The model transformation includes two steps: first, it formalizes the desirable semantics of each modeling element; secondly, it translates a workflow process with clear semantics to an equivalent Petri net. Thus, we can verify the original workflow process using existing Petri net theory and analysis tools. As a comprehensive case study, verifying workflow processes in an industrial modeling language (TiPLM) is presented. Experimental evaluations on verifying real-world business processes validate our approach.
C1 [Zha, Haiping; Sun, Jiaguang] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
   [van der Aalst, Wil M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Zha, Haiping; Wang, Jianmin; Wen, Lijie; Sun, Jiaguang] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
   [Zha, Haiping] Inst Specificat & Stand, Shanghai 200235, Peoples R China.
C3 Tsinghua University; Eindhoven University of Technology; Tsinghua
   University
RP Zha, HP (corresponding author), Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
EM chp04@mails.tsinghua.edu.cn; W.M.P.v.d.Aalst@tm.tue.nl;
   jimwang@tsinghua.edu.cn; wenlj00@mails.tsinghua.edu.cn;
   sunjg@tsinghua.edu.cn
RI feng, chen/JLM-8296-2023; wang, jian/GVS-0711-2022; van der Aalst,
   Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940; Wen, Lijie/0000-0003-0358-3160;
   Wang, Jianmin/0000-0001-6841-7943
FU National Basic Research Program of China [2007CB310802, 2009CB320700];
   National 863 Program of China [2007AA040607, 2008AA042301]; Program for
   New Century Excellent Talents in University, Ministry of Education,
   China
FX We would like to thank the people that have implemented Woflan tool. We
   thank Tsinghua InfoTech Company and DongFang Steam Turbine Works Co.,
   Ltd. for providing us the workflow process models of their TiPLM
   systems. We are grateful to the anonymous reviewers for their valuable
   comments on a previous version of this paper. This work is partly
   supported by the Projects of the National Basic Research Program of
   China (No. 2007CB310802 and No. 2009CB320700), the Projects of the
   National 863 Program of China (No. 2007AA040607 and No. 2008AA042301),
   and by the Program for New Century Excellent Talents in University,
   Ministry of Education, China.
CR AALST WMP, 2003, FITTR200306 QUT
   [Anonymous], 2002, Workflow management: models, methods, and systems
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   Dehnert J, 2004, INT J COOP INF SYST, V13, P289, DOI 10.1142/S0218843004000973
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   FAHLAND D, 2008, INFORM BERICHTE, V226
   Ferrara A., 2004, Proceedings of the 2nd International Conference on Service-Oriented Computing, ICSOC '04, P242
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Kamath M., 1996, Distributed Systems Engineering, V3, P213, DOI 10.1088/0967-1846/3/4/002
   Karamanolis C, 2000, FOURTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE - PROCEEDINGS, P170, DOI 10.1109/EDOC.2000.882357
   Milner R., 1989, Communication and concurrency
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   POMELLO L, 1992, LECT NOTES COMPUT SC, V609, P410
   Puhlmann R, 2005, LECT NOTES COMPUT SC, V3649, P153, DOI 10.1007/11538394_11
   RUSSELL N, 2006, BPM0622 BPM CTR
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Salimifard K, 2001, EUR J OPER RES, V134, P664, DOI 10.1016/S0377-2217(00)00292-7
   ter Hofstede AHM, 1998, DATA KNOWL ENG, V24, P239, DOI 10.1016/S0169-023X(97)00032-3
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2000, INFORM SYST, V25, P43, DOI 10.1016/S0306-4379(00)00008-9
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3520, P372
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Zha HP, 2008, LECT NOTES COMPUT SC, V4928, P197
   2008, TIPLM INTRO INFOTECH
NR 28
TC 13
Z9 18
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 253
EP 264
DI 10.1007/s10270-010-0149-9
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500007
DA 2024-07-18
ER

PT J
AU Anquetil, N
   Kulesza, U
   Mitschke, R
   Moreira, A
   Royer, JC
   Rummler, A
   Sousa, A
AF Anquetil, Nicolas
   Kulesza, Uira
   Mitschke, Ralf
   Moreira, Ana
   Royer, Jean-Claude
   Rummler, Andreas
   Sousa, Andre
TI A model-driven traceability framework for software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Traceability; Software product line; Model driven engineering
AB Software product line (SPL) engineering is a recent approach to software development where a set of software products are derived for a well defined target application domain, from a common set of core assets using analogous means of production (for instance, through Model Driven Engineering). Therefore, such family of products are built from reuse, instead of developed individually from scratch. SPL promise to lower the costs of development, increase the quality of software, give clients more flexibility and reduce time to market. These benefits come with a set of new problems and turn some older problems possibly more complex. One of these problems is traceability management. In the European AMPLE project we are creating a common traceability framework across the various activities of the SPL development. We identified four orthogonal traceability dimensions in SPL development, one of which is an extension of what is often considered as "traceability of variability". This constitutes one of the two contributions of this paper. The second contribution is the specification of a metamodel for a repository of traceability links in the context of SPL and the implementation of a respective traceability framework. This framework enables fundamental traceability management operations, such as trace import and export, modification, query and visualization. The power of our framework is highlighted with an example scenario.
C1 [Anquetil, Nicolas; Royer, Jean-Claude] EMN INRIA, ASCOLA, Nantes, France.
   [Kulesza, Uira; Moreira, Ana; Sousa, Andre] Univ Nova Lisboa, CITI DI FCT, Caparica, Portugal.
   [Mitschke, Ralf] Tech Univ Darmstadt, Darmstadt, Germany.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Universidade Nova de
   Lisboa; Technical University of Darmstadt
RP Anquetil, N (corresponding author), EMN INRIA, ASCOLA, Nantes, France.
EM anquetil.nicolas@gmail.com
RI FCTUNL, CITI/G-6714-2011; Ines, INCT/J-9550-2013; Moreira,
   Ana/F-4770-2011
OI Anquetil, Nicolas/0000-0003-1486-8399; Moreira, Ana/0000-0003-2046-2766;
   Kulesza, Uira/0000-0002-5467-6458
FU European FP7 STREP
FX The authors wish to thank Vasco Amaral and Joao Araujo from Universidade
   Nova de Lisboa for their help in proof reading this article and for
   their suggestions to improve its writing. This work is funded by the
   European FP7 STREP project AMPLE. The authors thank the members of the
   European AMPLE project (www.ample-project.net) for their help in
   designing and developing the AMPLE Traceability Framework.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   Almeida JP, 2006, IEEE INT ENTERP DIST, P355
   AMAR B, 2008, ECMDA TRAC WORKSH EC
   [Anonymous], SAICSIT 05
   [Anonymous], ECMDA TRAC WORKSH EC
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Bayer J, 2002, LECT NOTES COMPUT SC, V2290, P409
   BERGE C, 1970, GRAPHES HYPERGRAPES
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ICRE.2002.1048540
   COLLINSSUSSMAN B, 2006, VERSION CONTROL SUBV
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   *ECL, EC ECL MOD FRAM PROJ
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Elmqvist N, 2008, IEEE PACIFIC VISUALISATION SYMPOSIUM 2008, PROCEEDINGS, P215
   FALLERI JR, 2006, ECMDA TRAC WORKSH EC, P31
   Fekete JD, 2008, LECT NOTES COMPUT SC, V4950, P1, DOI 10.1007/978-3-540-70956-5_1
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Harary F., 1994, Graph Theory
   Hartigan J. A., 1975, CLUSTERING ALGORITHM, V458, P468
   HEER J, PREFUSE VISUALIZATIO
   HUNT T, 2007, VERTICAL HORIZONTAL
   Jirapanthong W, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P506, DOI 10.1109/APSEC.2005.101
   JIRAPANTHONG W, 2007, J SOFTW SYST MODEL, V8, P117
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   *JUNG FRAM DEV TEA, 2008, JAV UN NETW GRAPH FR
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KHAN SS, 2008, P 20 INT C IN PRESS
   Krueger C. W., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P37
   LIMON AE, 2005, ECMDA TRAC WORKSH EC, P47
   Marcus A., 2005, P 3 INT WORKSH TRAC, P56, DOI DOI 10.1145/1107656.1107669
   MEGGINSON D, 2005, XML PERFORMANCE SIZE
   *MICR, VIS SOURC
   Mitschke Ralf., 2008, ECMDA Traceability Workshop (ECMDA-TW), Berlin, Germany, 2008, Proceedings, P87
   *MODELWARE PROJ, 2006, TRAC MET SYST SOL
   Mohan K., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P1309, DOI 10.1109/HICSS.2002.993995
   Mohan K, 2008, COMMUN ACM, V51, P59, DOI 10.1145/1342327.1342339
   Mohan K, 2007, COMMUN ACM, V50, P68, DOI 10.1145/1323688.1323697
   Moon M, 2006, LECT NOTES COMPUT SC, V4039, P115
   *OMG, 2006, MET FAC MOF 2 0
   Paige R., 2008, ECMDA TRAC WORKSH EC, P49
   Pfleeger S. L., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P320, DOI 10.1109/ICSM.1990.131381
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Riebisch M, 2004, 11TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P370, DOI 10.1109/ECBS.2004.1316721
   Sousa A, 2008, ECMDA TRAC WORKSH, P97
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Venn J., 1880, Dublin Philosophical Magazine and Journal of Science, V10, P1, DOI DOI 10.1080/14786448008626877
   Wieringa R, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P87, DOI 10.1109/IWSSD.1998.667923
NR 54
TC 60
Z9 68
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2010
VL 9
IS 4
BP 427
EP 451
DI 10.1007/s10270-009-0120-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 646SW
UT WOS:000281564100002
DA 2024-07-18
ER

PT J
AU Hassine, J
   Rilling, J
   Dssouli, R
AF Hassine, Jameleddine
   Rilling, Juergen
   Dssouli, Rachida
TI Use Case Maps as a property specification language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal verification; Temporal logic; Property specification; Use Case
   Maps; Temporal and architectural scope
ID REAL-TIME; LOGICS
AB Although a significant body of research in the area of formal verification and model checking tools of software and hardware systems exists, the acceptance of these tools by industry and end-users is rather limited. Beside the technical problem of state space explosion, one of the main reasons for this limited acceptance is the unfamiliarity of users with the required specification notation. Requirements have to be typically expressed as temporal logic formalisms and notations. Property specification patterns were successfully introduced to bridge this gap between users and model checking tools. They also enable non-experts to write formal specifications that can be used for automatic model checking. In this paper, we propose an abstract high level pattern-based approach to the description of property specifications based on Use Case Maps (UCM). We present a set of commonly used properties with their specifications that are described in terms of occurrence, ordering and temporal scopes of actions. Furthermore, our approach also supports the description of properties with respect to their architectural scope. We provide a mapping of our UCM property specification patterns in terms of CTL, TCTL and Architectural TCTL (ArTCTL), an extension to TCTL, introduced in this research that provides temporal logics with architectural scopes. We illustrate the use of our pattern system for requirement specifications of an IP Header compression feature.
C1 [Hassine, Jameleddine; Rilling, Juergen] Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
   [Dssouli, Rachida] Concordia Univ, Concordia Inst Informat Syst Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Hassine, J (corresponding author), Concordia Univ, Dept Comp Sci, Montreal, PQ H3G 1M8, Canada.
EM j_hassin@cs.concordia.ca; rilling@cs.concordia.ca;
   dssouli@ciise.concordia.ca
RI Hassine, Jameleddine/E-5940-2015
OI Hassine, Jameleddine/0000-0001-8170-9860
CR Alfonso A, 2004, PROC INT CONF SOFTW, P168, DOI 10.1109/ICSE.2004.1317439
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1993, INFORM COMPUT, V104, P35, DOI 10.1006/inco.1993.1025
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   Alur R., 1991, THESIS STANFORD U
   Amyot D, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P44, DOI 10.1109/ISRE.1999.777984
   AMYOT D, 1999, USE CASE MAPS QUICK
   AMYOT D, 1999, SBRC 99, P418
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   Bellini P, 2000, ACM COMPUT SURV, V32, P12, DOI 10.1145/349194.349197
   Braberman VictorA., 1999, ESECFSE 7, P494
   BUHR RFA, 1998, 31 ANN HAW INT C SYS
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   FLAKE S, 2002, P HAW INT C SYST SCI
   GRAF S, 2004, LNCS, V2989
   Gruhn V, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P189, DOI 10.1109/TIME.2005.33
   Hassine J, 2005, LECT NOTES COMPUT SC, V3731, P366
   HASSINE J, 2007, LNCS IN PRESS
   HASSINE J, 2006, 5 WORKSH SYST AN MOD
   *ITU T, 2002, URN FOC GROUP DRAFT
   JANSEN DN, J LOGIC COMPUT, V12, P607
   KONRAD S, 2005, P INT C SOFTW ENG IC
   KONRAD S, 2005, P IEEE INT REQ ENG C
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   MIGA A, 2001, LNCS, V2078, P268
   NAKAMURA N, 2000, 6 INT WORKSH FEAT IN
   Nicola R.D., 1990, LECT NOTES COMPUTER, V469, P407
   NICOLA RD, 1993, COMPUTER NETWORKS IS, V25, P761
   Ober I., 2001, SDL 2001: Meeting UML. 10th International SDL Forum. Proceedings (Lecture Notes in Computer Science Vol.2078), P182
   OLENDER KM, 1990, IEEE T SOFTWARE ENG, V16, P268, DOI 10.1109/32.48935
   PETRIU DC, 2002, P 12 INT C COMP PERF, P141
   RAMAKRISHNAN S, 1999, 21 INT C SOFTW ENG I
   *RFC, 1999, 2508 RFC
   *RFC, 1990, 1144 RFC
   *RFC, 1999, 2507 RFC
   *SANTOS LAB, SPEC PATT SANTOS LAB
   SCHAFER T, 2001, CAV 2001 WORKSH SOFT, V55
   Tsai W.T., 2005, SOFTWARE EVOLUTION U, P222
NR 42
TC 9
Z9 9
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 205
EP 220
DI 10.1007/s10270-007-0076-6
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300004
DA 2024-07-18
ER

PT J
AU Hooman, J
   Kugler, H
   Ober, I
   Votintseva, A
   Yushtein, Y
AF Hooman, Jozef
   Kugler, Hillel
   Ober, Iulian
   Votintseva, Anjelika
   Yushtein, Yuri
TI Supporting UML-based development of embedded systems by formal
   techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE formal methods; UML; embedded systems; real-time
ID VERIFICATION; MODELS; SEMANTICS; LSCS
AB We describe an approach to support UML-based development of embedded systems by formal techniques. A subset of UML is extended with timing annotations and given a formal semantics. UML models are translated, via XMI, to the input format of formal tools, to allow timed and non-timed model checking and interactive theorem proving. Moreover, the Play-Engine tool is used to execute and analyze requirements by means of live sequence charts. We apply the approach to a part of an industrial case study, the MARS system, and report about the experiences, results and conclusions.
C1 [Hooman, Jozef] Embedded Syst Inst, Eindhoven, Netherlands.
   [Hooman, Jozef] Radboud Univ Nijmegen, NL-6525 ED Nijmegen, Netherlands.
   [Kugler, Hillel] NYU, New York, NY USA.
   [Ober, Iulian] Univ Toulouse 2, Toulouse, France.
   [Votintseva, Anjelika] CT SE 1 Siemans AG, Munich, Germany.
   [Yushtein, Yuri] CIMSOLUTIONS BV, Vianen, Netherlands.
C3 Radboud University Nijmegen; New York University; Universite de
   Toulouse; Universite de Toulouse - Jean Jaures
RP Hooman, J (corresponding author), Embedded Syst Inst, Eindhoven, Netherlands.
EM hooman@cs.ru.nl
RI Hooman, Jozef/W-1613-2019; Kugler, Hillel/Z-4379-2019
OI Kugler, Hillel/0000-0001-7924-5665
CR [Anonymous], IEEE COMPUT
   [Anonymous], 2005, UML PROF SCHED PERF
   Arons T, 2004, LECT NOTES COMPUT SC, V3273, P335
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Bornot S, 1997, LECT NOTES COMPUT SC, V1201, P286, DOI 10.1007/BFb0014733
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   BOZGA M, 2002, LNCS, V2404, P343
   Burmester S, 2005, LECT NOTES COMPUT SC, V3748, P25
   Damm W, 2005, SCI COMPUT PROGRAM, V55, P81, DOI 10.1016/j.scico.2004.05.012
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DAMM W, 2003, OMEGA DELIVERABLE
   DEBOER FS, 2005, HICSS
   Douglass B., 2003, REAL TIME DESIGN PAT
   Graf S., 2006, International Journal on Software Tools for Technology Transfer, V8, P113, DOI 10.1007/s10009-005-0213-x
   Harel D, 2005, LECT NOTES COMPUT SC, V3466, P26
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D, 2002, LECT NOTES COMPUT SC, V2517, P378
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2003, LETS PLAY SCENARIO B
   HAREL D, 2004, C QUAL SOFTW QSIC, P2
   HAREL D, 2002, S MOD AN SIM COMP TE, P193
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   Hooman J., 2006, International Journal on Software Tools for Technology Transfer, V8, P97, DOI 10.1007/s10009-005-0207-8
   Hooman J, 1998, LECT NOTES COMPUT SC, V1536, P276
   KNAPP A, 2002, LECT NOTES COMPUTER, V2469, P395
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   Kwon G, 2000, LECT NOTES COMPUT SC, V1939, P528
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Larsen KG, 1997, LECT NOTES COMPUT SC, V1254, P456
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   LAVAZZA L, 2001, ACM SIGSOFT, P196
   Lilius J, 1999, LECT NOTES COMPUT SC, V1723, P430
   MARELLY R, 2002, C OBJ OR PROGR SYST, P83
   Mota E., 2004, Electronic Notes in Theoretical Computer Science, V95, P111
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   *OMG, 2005, UML 2 0 SUP
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   Pnueli A, 2003, LECT NOTES COMPUT SC, V2772, P598
   Reggio G, 2000, LECT NOTES COMPUT SC, V1783, P127
   Schinz I, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P174, DOI 10.1109/SEFM.2004.1347518
   Selic B., 1994, REAL TIME OBJECT ORI
   Shen WW, 2002, P INT COMP SOFTW APP, P147, DOI 10.1109/CMPSAC.2002.1044545
   Traoré I, 2004, INFORM SOFTWARE TECH, V46, P281, DOI 10.1016/j.infsof.2003.09.012
   Xie F, 2002, LECT NOTES COMPUT SC, V2306, P331
   YOVINE S, 1997, INT J SOFTW TOOLS TE, V1
NR 46
TC 16
Z9 18
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 131
EP 155
DI 10.1007/s10270-006-0043-7
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298IE
UT WOS:000255680600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Jézéquel, JM
AF Jezequel, Jean-Marc
TI Model driven design and aspect weaving
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB A model is a simplified representation of an aspect of the world for a specific purpose. In complex systems, many aspects are to be handled, from architectural aspects to dynamic behavior, functionalities, user-interface, and extra-functional concerns (such as security, reliability, timeliness, etc.). For software systems, the design process can then be characterized as the weaving of all these aspects into a detailed design model. Model Driven Design aims at automating this weaving process, that is automatically deriving software systems from theirs models. This paper explores the relationship between modeling and aspect weaving. It points out some of the challenges related to such automatic model weaving, illustrating them with the example of a weaving process for behavioral models represented as scenarios.
C1 [Jezequel, Jean-Marc] Univ Rennes 1, Rennes, France.
   [Jezequel, Jean-Marc] Irisa INRIA, Rennes, France.
C3 Universite de Rennes; Universite de Rennes; Universite Paris Saclay
RP Jézéquel, JM (corresponding author), Univ Rennes 1, Rennes, France.
EM jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745
CR [Anonymous], WORKSH INT SIGN PROC
   BANIASSAD E, 2004, ICSE, P158
   BARAIS O, 2008, 7 IEEE INT C COMP BA
   Bosch J, 2005, LECT NOTES COMPUT SC, V3714, P2
   CAZZOLA W, 2006, SPLAT 2006 SOFTW ENG
   CHAUVEL F, 2005, LNCS, V3713
   Clark T., 2004, APPL METAMODELLING F
   Filman R.E., 2000, ASPECT ORIENTED PROG
   FRANCE R, 2007, EDOC 07 ENT DISTR OB
   HO WM, 2002, P 1 ACM INT C ASP OR
   JACKSON A, 2006, MOD ASP WORKSH ECOOP
   JEZEQUEL JM, 2002, P WORKSH ASP OR MOD
   KICZALES G, 2003, FUN JUST BEGUN KEYNO
   KLEIN J, 2005, ASPECTS SOFTWARE PRO
   Klein J., 2006, P 5 INT C ASP OR SOF
   KLEIN J, 2007, T ASPECT ORIENTED SO, P85
   KLEIN J, 2004, 9 INT WORKSH FORM ME, P209
   Lahire P., 2007, P ACM IEEE 10 INT C
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Muller Pierre-Alain., 2005, MODEL TRANSFORMATION
   Pickin S, 2007, IEEE T SOFTWARE ENG, V33, P252, DOI 10.1109/TSE.2007.39
   POHJONEN R, 2002, C OBJ OR PROGR SYST
   Ramos R., 2007, P ACM IEEE 10 INT C
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
NR 27
TC 28
Z9 28
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 209
EP 218
DI 10.1007/s10270-008-0080-5
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298IE
UT WOS:000255680600006
DA 2024-07-18
ER

PT J
AU Bucaioni, A
   Ciccozzi, F
   Di Salle, A
   Sjödin, M
AF Bucaioni, Alessio
   Ciccozzi, Federico
   Di Salle, Amleto
   Sjodin, Mikael
TI From low-level programming to full-fledged industrial model-based
   development: the story of the Rubus Component Model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Component model; Model-based development; Vehicular embedded systems
   real-time systems
ID TIME
AB Developing distributed real-time systems is a complex task that has historically entailed specialized handcraft. In this paper, we propose a retrospective on the (r)evolutionary changes that led to the transition from low-level programming to industrial full-fledged model-based development embodied by the Rubus Component Model and its tool-ecosystem. We focus on the needs, challenges, and solutions of a 15-year-long evolution journey of a software development approach that has gone from low-level and manual programming to a highly automated environment offering modeling, analysis, and development of vehicular software systems with multi-criticality for deployment on single- and multi-core platforms.
C1 [Bucaioni, Alessio; Ciccozzi, Federico; Sjodin, Mikael] Malardalen Univ, Vasteras, Sweden.
   [Di Salle, Amleto] European Univ Rome, Rome, Italy.
C3 Malardalen University; European University of Rome
RP Bucaioni, A (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM alessio.bucaioni@mdu.se; federico.ciccozzi@mdu.se;
   amleto.disalle@unier.it; mikael.sjodin@mdu.se
OI DI SALLE, AMLETO/0000-0002-0163-9784
FU Maelardalen University
FX Open access funding provided by Maelardalen University.
CR [Anonymous], 2011, ISO 26262 1
   [Anonymous], 2005, Arinc specification 653-2 : Avionics application software standard interface part 1Required services
   Bucaioni A., 2014, P 1 INT WORKSH MOD D, V1281, P46
   Bucaioni A, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111106
   Bucaioni A, 2020, SOFTW SYST MODEL, V19, P1283, DOI 10.1007/s10270-020-00795-5
   Bucaioni A, 2018, IEEE ACCESS, V6, P6424, DOI 10.1109/ACCESS.2018.2789400
   Bucaioni A, 2017, IEEE ACCESS, V5, P9005, DOI 10.1109/ACCESS.2016.2641218
   Bucaioni A, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P595, DOI 10.1109/ITNG.2015.100
   Bucaioni A, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS (ITNG), P649, DOI 10.1109/ITNG.2014.72
   Ciccozzi F, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P425, DOI 10.1109/MODELS-C.2019.00068
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Dasari D, 2016, REAL-TIME SYST, V52, P272, DOI 10.1007/s11241-015-9229-9
   Dijkstra Edsger W., 1982, On the Role of Scientific Thought, P60, DOI [DOI 10.1007/978-1-4612-5695-3, 10.1007/978-1-4612-5695-3_12, 10.1007/978-1-4612-5695-312, DOI 10.1007/978-1-4612-5695-312]
   Fernandez G., 2014, 14 INT WORKSHOP WORS, V39
   Gaska T, 2010, DIGIT AVION SYST CON
   Hänninen K, 2008, INT SYM IND EMBED, P177, DOI 10.1109/SIES.2008.4577697
   Hansson H. A., 1995, Proceedings. Real-Time Technology and Applications Symposium (Cat. No.95TH8055), P220, DOI 10.1109/RTTAS.1995.516219
   Kelter T, 2014, REAL-TIME SYST, V50, P185, DOI 10.1007/s11241-013-9189-x
   Möller A, 2004, EUROMICRO CONF PROC, P56, DOI 10.1109/EURMIC.2004.1333356
   Mubeen S, 2019, EUROMICRO CONF PROC, P131, DOI 10.1109/SEAA.2019.00029
   Mubeen S, 2019, SOFTW SYST MODEL, V18, P39, DOI 10.1007/s10270-017-0579-8
   Mubeen S, 2014, J SYST ARCHITECT, V60, P207, DOI 10.1016/j.sysarc.2013.10.008
   Mubeen S, 2013, COMPUT SCI INF SYST, V10, P453, DOI 10.2298/CSIS120614011M
   Mubeen S, 2011, EUROMICRO CONF PROC, P229, DOI 10.1109/SEAA.2011.43
   Pop P, 2016, 19TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2016), P532, DOI 10.1109/DSD.2016.25
   Thorngren P., 2013, E ADL OPEN WORKSHOP
   VanderLeest SH, 2010, IEEEAAIA DIGIT AVION
NR 27
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1085
EP 1097
DI 10.1007/s10270-023-01107-3
EA MAY 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000990922800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Dubinsky, Y
   Soffer, P
   Hadar, I
AF Dubinsky, Yael
   Soffer, Pnina
   Hadar, Irit
TI Detecting cross-case associations in an event log: toward a
   pattern-based detection
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Cross-case patterns; Split-case workaround
AB Business process management, design, and analysis is mostly centered around a process model, which depicts the behavior of a process case (instance). As a result, behavior that associates several cases together has received less attention. Yet, it is important to understand and track associations among cases, as they bear substantial consequences for compliance with regulations, root cause analysis of performance issues, exception handling, and prediction. This paper presents a framework of cross-case association patterns, categorized as intended association patterns and contextual association patterns. It further conceptualizes two example patterns-one for each category, and proposes techniques for detecting these patterns in an event log. The "split-case" workaround is an example of a pattern in the intended association category, and its proposed detection method exemplifies how patterns in this category can be approached. The patterns of a shared entity and a shared resource are contextual association patterns, which we propose to detect by means of hidden concept drifts. Evaluation of the two detection approaches is reported, using simulated logs for assessing their internal validity as well as real-life ones for exploring their external validity.
C1 [Dubinsky, Yael; Soffer, Pnina; Hadar, Irit] Univ Hafa, Dept Informat Syst, Haifa, Israel.
RP Soffer, P (corresponding author), Univ Hafa, Dept Informat Syst, Haifa, Israel.
EM spnina@is.haifa.ac.il
FU Israel Science Foundation [669/17]
FX AcknowledgementsThe research was supported by the Israel Science
   Foundation under grant agreement 669/17.
CR Aamer H., 2022, BPM 2022 WORKSH
   Amin R., 2019, ABC Journal of Advanced Research, V8, P95, DOI [10.18034/abcjar.v8i2.522, DOI 10.18034/ABCJAR.V8I2.522]
   Arias M, 2016, LECT NOTES BUS INF P, V256, P458, DOI 10.1007/978-3-319-42887-1_37
   Carmona J., 2018, Conformance checking: Relating processes and models, relating processes and models, DOI DOI 10.1007/978-3-319-99414-7
   De Leoni M., 2013, P 28 ANN ACM S APPL, P1454
   Dubinsky Yael, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P47, DOI 10.1007/978-3-030-79186-5_4
   Fdhila W, 2016, LECT NOTES COMPUT SC, V9850, P348, DOI 10.1007/978-3-319-45348-4_20
   Ghahfarokhi AF, 2021, COMM COM INF SC, V1450, P169, DOI 10.1007/978-3-030-85082-1_16
   Grinvald Avihai, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P96, DOI 10.1007/978-3-030-79186-5_7
   Kim J., BUSINESS PROCESS IN
   Klijn EL, 2020, 2020 2ND INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2020), P25, DOI 10.1109/ICPM49681.2020.00015
   Klijn EL, 2019, LECT NOTES BUS INF P, V362, P172, DOI 10.1007/978-3-030-37453-2_15
   Martin N, 2021, INFORM SYST, V95, DOI 10.1016/j.is.2020.101642
   Martjushev J., 2015, LNBIP, V14, P161, DOI DOI 10.1007/978-3-319-21915-8_11
   Outmazgin N, 2020, LECT NOTES COMPUT SC, V12127, P368, DOI 10.1007/978-3-030-49435-3_23
   Outmazgin N, 2016, SOFTW SYST MODEL, V15, P309, DOI 10.1007/s10270-014-0420-6
   Pourbafrani M., 2021, 2 INT WORKSH LEV MAC
   Rinderle-Ma S., 2016, ARXIV
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Senderovich A, 2019, INFORM SYST, V84, P255, DOI 10.1016/j.is.2019.01.007
   Senderovich A, 2016, LECT NOTES BUS INF P, V256, P154, DOI 10.1007/978-3-319-42887-1_13
   Senderovich A, 2015, INFORM SYST, V53, P278, DOI 10.1016/j.is.2015.03.010
   Senthamarai Kannan K., 2015, INT J STAT SYSTEMS, V10, P231
   Steinau S, 2018, LECT NOTES COMPUT SC, V10816, P53, DOI 10.1007/978-3-319-91563-0_4
   Tsoury A, 2021, COMPUTING, V103, P3, DOI 10.1007/s00607-020-00857-y
   Van der Aalst W.M., 2009, BPM (Demos), V489, P2
   van der Aalst WMP, 2020, FUND INFORM, V175, P1, DOI 10.3233/FI-2020-1946
   van der Aalst WMP, 2019, LECT NOTES COMPUT SC, V11724, P3, DOI 10.1007/978-3-030-30446-1_1
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   Waibel P., 2020, INT C PROCESS MINING, P17
   Wen YP, 2013, CONCURR COMP-PRACT E, V25, P1928, DOI 10.1002/cpe.2991
   Wil van der Aalst M.P., 2011, LECT NOTES BUSINESS, P169, DOI [DOI 10.1007/978-3-642-28108-2_19, 10.1007/978-3-642-28108-2_19]
   Winter K, 2020, INFORM SYST, V89, DOI 10.1016/j.is.2019.101484
   Winter K, 2017, IEEE INT ENTERP DIST, P79, DOI 10.1109/EDOC.2017.20
NR 34
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1755
EP 1777
DI 10.1007/s10270-023-01100-w
EA APR 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:000961391600001
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Pinto, M
   Fuentes, L
AF Miguel Horcas, Jose
   Pinto, Monica
   Fuentes, Lidia
TI Empirical analysis of the tool support for software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Empirical analysis; Case studies analysis; Software product lines; State
   of the art; Tool support; Tooling road map; Variability modeling
ID MODELING VARIABILITY; SYSTEMS; CONFIGURATION; PERFORMANCE; FRAMEWORK;
   EVOLUTION; LANGUAGE; FEATURES
AB For the last ten years, software product line (SPL) tool developers have been facing the implementation of different variability requirements and the support of SPL engineering activities demanded by emergent domains. Despite systematic literature reviews identifying the main characteristics of existing tools and the SPL activities they support, these reviews do not always help to understand if such tools provide what complex variability projects demand. This paper presents an empirical research in which we evaluate the degree of maturity of existing SPL tools focusing on their support of variability modeling characteristics and SPL engineering activities required by current application domains. We first identify the characteristics and activities that are essential for the development of SPLs by analyzing a selected sample of case studies chosen from application domains with high variability. Second, we conduct an exploratory study to analyze whether the existing tools support those characteristics and activities. We conclude that, with the current tool support, it is possible to develop a basic SPL approach. But we have also found out that these tools present several limitations when dealing with complex variability requirements demanded by emergent application domains, such as non-Boolean features or large configuration spaces. Additionally, we identify the necessity for an integrated approach with appropriate tool support to completely cover all the activities and phases of SPL engineering. To mitigate this problem, we propose different road map using the existing tools to partially or entirely support SPL engineering activities, from variability modeling to product derivation.
C1 [Miguel Horcas, Jose; Pinto, Monica; Fuentes, Lidia] Univ Malaga, Andalucia Tech, ITIS Software, CAOSD Grp, Malaga, Spain.
C3 Universidad de Malaga
RP Horcas, JM (corresponding author), Univ Malaga, Andalucia Tech, ITIS Software, CAOSD Grp, Malaga, Spain.
EM horcas@lcc.uma.es; pinto@lcc.uma.es; lff@lcc.uma.es
RI Horcas Aguilera, José Miguel/R-3564-2018; Pinto, Monica/G-1891-2015
OI Horcas Aguilera, José Miguel/0000-0002-7771-0575; Pinto,
   Monica/0000-0002-5376-742X
FU project MEDEA [RTI2018-099213-B-I00]; FEDER funds; project LEIA
   [UMA18-FEDERIA-157]; project Rhea (MCI/AEI/FEDER, UE) [P18-FR-1081];
   project TASOVA MCIU-AEI [TIN2017-90644-REDT]; European Union [DAEMON
   101017109]
FX This work is supported by the projects MEDEA RTI2018-099213-B-I00
   (co-financed by FEDER funds), LEIA UMA18-FEDERIA-157, Rhea P18-FR-1081
   (MCI/AEI/FEDER, UE), TASOVA MCIU-AEI TIN2017-90644-REDT, and European
   Union's H2020 research and innovation program under grant agreement
   DAEMON 101017109.
CR AbdHalim S., 2012, APPROACH REPRESENTIN, DOI [10.5772/37704, DOI 10.5772/37704]
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Acher M, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P77, DOI 10.1109/ICECCS.2011.15
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Ali S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302345
   Allian AP, 2020, J UNIVERS COMPUT SCI, V26, P1282
   Alves Pereira Juliana, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P73, DOI 10.1007/978-3-319-14130-5_6
   [Anonymous], 2004, 19 ANN ACM SIGPLAN C, DOI DOI 10.1145/1028664.1028675
   [Anonymous], 2005, P WORKSHOP ECLIPSE T
   [Anonymous], 2018, THESIS U MLAGA
   [Anonymous], 2017, P 11 INT WORKSH VAR, DOI DOI 10.1145/3023956.3023959
   [Anonymous], 2015, Proceedings of the ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software Onward
   Antkiewicz M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P130
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Arrieta A., 2015, Cyber-physical systems product lines: Variability analysis and challenges
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P1763, DOI 10.1007/s10664-016-9462-4
   Ayala I, 2019, KNOWL-BASED SYST, V184, DOI 10.1016/j.knosys.2019.104883
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P3, DOI 10.1145/3109729.3109760
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2019, SOFTWARE ENG FORMAL
   Benavides D., 2007, INT WORKSHOP VARIABI
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P174, DOI 10.1145/3307630.3342403
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Beuche D., 2016, SPLC 16, P333
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Buccella A, 2018, LECT NOTES COMPUT SC, V10963, P435, DOI 10.1007/978-3-319-95171-3_34
   Cañete A, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111086
   Capilla R, 2002, LECT NOTES COMPUT SC, V2290, P319
   Capilla R., 2007, SOFTWARE SERVICE VAR, P3247
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Constantino K, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P164, DOI 10.5220/0005829801640171
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2319, P351
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Chacón-Luna AE, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106389
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Gamez Nadia, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P102, DOI 10.1007/978-3-642-21347-2_9
   Garcia S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302350
   Gherardi L, 2014, IEEE INT CONF CLOUD, P745, DOI 10.1109/CLOUD.2014.104
   Ghofrani J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P17, DOI 10.1145/3236405.3236407
   González-Baixauli B, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P198
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Haugen O, 2014, LECT NOTES COMPUT SC, V8769, P1, DOI 10.1007/978-3-319-11743-0_1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hellebrand R, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P53, DOI 10.1145/3109729.3109735
   Heradio R, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10102-5
   Horcas Jose Miguel, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P185, DOI 10.1109/SEAA.2013.20
   Horcas JM, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106910
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Horcas JM, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P32, DOI 10.1145/3109729.3109749
   Horcas JM, 2018, INFORM SOFTWARE TECH, V95, P147, DOI 10.1016/j.infsof.2017.10.018
   Horcas JM, 2016, IEEE INT ENTERP DIST, P99
   Horcas JM, 2016, LECT NOTES COMPUT SC, V9830, P19, DOI 10.1007/978-3-319-44341-6_2
   Horcas JM, 2016, J SYST SOFTWARE, V112, P78, DOI 10.1016/j.jss.2015.11.005
   Horcas JM, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P138
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   Kang Kyo C, 1990, Technical Report
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Krieter S, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P42, DOI 10.1145/3109729.3109751
   Krueger C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P1, DOI 10.1145/3236405.3236409
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P237, DOI 10.1145/3106195.3106217
   Krüger J, 2018, SOFTWARE PRACT EXPER, V48, P402, DOI 10.1002/spe.2525
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE, DOI [10.1007/978-3-319-61443-4, DOI 10.1007/978-3-319-61443-4]
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Horcas JM, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1926
   Munoz DJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P289, DOI 10.1145/3336294.3336297
   Munoz DJ, 2018, COMPUTING, V100, P1155, DOI 10.1007/s00607-018-0632-7
   Nadi S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P105, DOI 10.1145/2866614.2866629
   Narwane GK, 2016, ENTROPY-SWITZ, V18, DOI 10.3390/e18080269
   Ochoa L, 2018, J SYST SOFTWARE, V144, P511, DOI 10.1016/j.jss.2018.07.054
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Oztok U, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3141
   Pereira JA, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2058, DOI 10.1145/3167132.3167353
   Pereira JA, 2018, COMPUT LANG SYST STR, V54, P451, DOI 10.1016/j.cl.2018.01.003
   Pereira JA, 2013, P BRAZ SYMP SOFTW, P20, DOI 10.1109/SBCARS.2013.13
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Prudhomme C., 2017, TASCLS2NCNRSUMR6241
   Quinton Clement., 2013, P 17 INT SOFTWARE PR, P162
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rabiser R, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P14, DOI 10.1145/3233027.3233028
   Ralph P., 2020, ARXIV 201003525
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Rosenmuller Marko., 2010, VAMOS, P123
   Salinesi C., 2013, 17 INT SOFTW PROD LI
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmitt A, 2018, ADV TRANSDISCIPL ENG, V7, P665, DOI 10.3233/978-1-61499-898-3-665
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schroeter Julia, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P252, DOI 10.1007/978-3-642-33666-9_17
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   She S., 2010, 4 INT WORKSH VAR MOD
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Svendsen A., 2010, 14 INT C SOFTW PROD, P299
   Temple P, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P277, DOI 10.1145/3336294.3336309
   ter Beek MH, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P208, DOI 10.1145/3233027.3233046
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Tolvanen JP, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P155, DOI 10.1145/3336294.3336316
   Urli S., 2012, P 6 INT WORKSH MOD E, P2126, DOI [10.1145/2523599.2523604, DOI 10.1145/2523599.2523604]
   Vasilevskiy Anatoly, 2015, P 19 INT C SOFTW PRO, V8769, P380
   White J., 2009, P 13 INT SOFTW PROD, P11
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Ziadi T., 2016, J SOFTW ENG ROBOT, V7, P2035
NR 123
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 377
EP 414
DI 10.1007/s10270-022-01011-2
EA JUN 2022
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000807910700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Moin, A
   Challenger, M
   Badii, A
   Günnemann, S
AF Moin, Armin
   Challenger, Moharram
   Badii, Atta
   Guennemann, Stephan
TI A model-driven approach to machine learning and software modeling for
   the IoT Generating full source code for smart Internet of Things (IoT)
   services and cyber-physical systems (CPS)
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven software engineering; Domain-specific modeling; Analytics
   modeling; Machine learning; Internet of things; Cyber-physical systems
AB Models are used in both Software Engineering (SE) and Artificial Intelligence (AI). SE models may specify the architecture at different levels of abstraction and for addressing different concerns at various stages of the software development life-cycle, from early conceptualization and design, to verification, implementation, testing and evolution. However, AI models may provide smart capabilities, such as prediction and decision-making support. For instance, in Machine Learning (ML), which is currently the most popular sub-discipline of AI, mathematical models may learn useful patterns in the observed data and can become capable of making predictions. The goal of this work is to create synergy by bringing models in the said communities together and proposing a holistic approach to model-driven software development for intelligent systems that require ML. We illustrate how software models can become capable of creating and dealing with ML models in a seamless manner. The main focus is on the domain of the Internet of Things (IoT), where both ML and model-driven SE play a key role. In the context of the need to take a Cyber-Physical System-of-Systems perspective of the targeted architecture, an integrated design environment for both SE and ML sub-systems would best support the optimization and overall efficiency of the implementation of the resulting system. In particular, we implement the proposed approach, called ML-Quadrat, based on ThingML, and validate it using a case study from the IoT domain, as well as through an empirical user evaluation. It transpires that the proposed approach is not only feasible, but may also contribute to the performance leap of software development for smart Cyber-Physical Systems (CPS) which are connected to the IoT, as well as an enhanced user experience of the practitioners who use the proposed modeling solution.
C1 [Moin, Armin; Guennemann, Stephan] Tech Univ Munich, Dept Informat, Munich, Germany.
   [Challenger, Moharram] Univ Antwerp & Flanders Make, Dept Comp Sci, Flanders, Belgium.
   [Badii, Atta] Univ Reading, Dept Comp Sci, Reading, Berks, England.
   [Guennemann, Stephan] Tech Univ Munich, Munich Data Sci Inst, Munich, Germany.
C3 Technical University of Munich; University of Reading; Technical
   University of Munich
RP Moin, A (corresponding author), Tech Univ Munich, Dept Informat, Munich, Germany.
EM moin@in.tum.de; moharram.challenger@uantwerpen.be;
   atta.badii@reading.ac.uk; guennemann@in.turn.de
RI Moin, Armin/GQH-7870-2022; Moin, Armin/AHI-8097-2022; Moin,
   Armin/GPX-2700-2022; Challenger, Moharram/E-2164-2014
OI Moin, Armin/0000-0002-8484-7836; Moin, Armin/0000-0002-8484-7836; Moin,
   Armin/0000-0002-8484-7836; Challenger, Moharram/0000-0002-5436-6070
FU German Federal Ministry for Education and Research (BMBF) through the
   Software Campus initiative (project ML-Quadrat)
FX This work is partially funded by the German Federal Ministry for
   Education and Research (BMBF) through the Software Campus initiative
   (project ML-Quadrat). We are sincerely grateful to our external
   evaluators, Fatma Bozyigit from Izmir Bakircay University, Turkey, Burak
   Karaduman from University of Antwerp, Belgium, Andrei Mituca
   fromDriotData UG, Germany, as well as the anonymous evaluator. The
   authors would like to also thank Stephan Rossler from
   SoftwareAGandMarouane Sayih (alumnus of the Technical University of
   Munich) for their collaboration and support.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2013, P 1 INT WORKSH SOFTW, DOI DOI 10.1145/2489850.2489854
   [Anonymous], 2018, GREYCAT NEXT GEN LIV
   [Anonymous], 2011, ISO/IEC/IEEE 42010:2011
   [Anonymous], 2020, ML QUADRAT ML2
   [Anonymous], 2008, TIME CAUSALITY INTER
   [Anonymous], 2015, THINGS MODELING LANG
   Berners-Lee T, 2001, NATURE, V410, P1023, DOI 10.1038/35074206
   Berthold MR, 2008, STUD CLASS DATA ANAL, P319, DOI 10.1145/1656274.1656280
   Bishop CM, 2013, PHILOS T R SOC A, V371, DOI 10.1098/rsta.2012.0222
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Burns M., 2019, Cyber-Physical Systems and Internet of Things, DOI [10.6028/NIST.SP.1900-202, DOI 10.6028/NIST.SP.1900-202]
   CERN, BIRTH WEB
   Cheng T, 2016, AIDS BEHAV, V20, P377, DOI 10.1007/s10461-015-1101-3
   Chollet F, 2015, KERAS
   Combemale B, 2021, IEEE SOFTWARE, V38, P71, DOI 10.1109/MS.2020.2995125
   deBallePigem B., 2013, THESIS U POLITECNICA
   DiNucci D., 1999, Print Magazine, V53, P221
   Fleurey F, 2011, LECT NOTES COMPUT SC, V6981, P349, DOI 10.1007/978-3-642-24485-8_25
   Geisberger E., 2014, LIVING NETWORKED WOR
   Geron A., 2019, Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, V2
   Harrand N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P125, DOI 10.1145/2976767.2976812
   Hartmann T., 2018, ARXIV180309627
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hartmann T, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P180, DOI 10.1109/MODELS.2017.32
   HEADS, 2015, HET DISTR SERV FUT C
   Helwig N, 2015, IEEE IMTC P, P210, DOI 10.1109/I2MTC.2015.7151267
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation, DOI [10.1002/9780470249260, DOI 10.1002/9780470249260]
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Leskovec J, 2014, MINING OF MASSIVE DATASETS, 2ND EDITION, P1
   Minka T., 2018, Infer.NET 0.3
   Moin A., 2018, P MODELS 2018 WORKSH, P521
   Morin B., 2012, P 15 ACM SIGSOFT S C, P135, DOI [DOI 10.1145/2304736, 10.1145/2304736.2304759, DOI 10.1145/2304736.2304759]
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Morin B, 2016, PROCEEDINGS 2016 19TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING, P107, DOI 10.1109/CBSE.2016.12
   Murray D., 2015, PROC 8 INT C ENERGY, P1293
   NEWMAN W, 1994, HUMAN FACTORS IN COMPUTING SYSTEMS, CHI '94 CONFERENCE PROCEEDINGS - CELEBRATING INTERDEPENDENCE, P278
   ONNX, 2021, OP NEUR NETW EXCH
   Paszke Adam, 2017, NIPSW
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   PFA, 2021, PORT FORM AN
   Pivarski J, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P579, DOI 10.1145/2939672.2939731
   PMML, 2021, PRED MOD MARK LANG
   RapidMiner, Depth for Data Scientists, Simplified for Everyone Else
   REFIT, 2015, REFIT DAT
   Sayih, 2020, MODELS 20 ACM IEEE 2, DOI [10.1145/3417990.3420057, DOI 10.1145/3417990.3420057]
   Schaetz, 2014, CPS20 CPS 20 YEARS N
   TensorBoard, TensorFlow's visualization toolkit
   Theano Development Team, 2016, ARXIV160502688
   Wang H, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3409383
NR 50
TC 9
Z9 9
U1 3
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 987
EP 1014
DI 10.1007/s10270-021-00967-x
EA JAN 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000744412600005
OA hybrid
DA 2024-07-18
ER

PT J
AU Xiong, WJ
   Legrand, E
   Åberg, O
   Lagerström, R
AF Xiong, Wenjun
   Legrand, Emeline
   Aberg, Oscar
   Lagerstrom, Robert
TI Cyber security threat modeling based on the MITRE Enterprise ATT&CK
   Matrix
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Threat modeling; Domain-specific language; Attack simulations;
   Enterprise systems
ID DATA-COLLECTION; DESIGN SCIENCE; VULNERABILITY; SYSTEM; FRAMEWORK; RISK
AB Enterprise systems are growing in complexity, and the adoption of cloud and mobile services has greatly increased the attack surface. To proactively address these security issues in enterprise systems, this paper proposes a threat modeling language for enterprise security based on the MITRE Enterprise ATT&CK Matrix. It is designed using the Meta Attack Language framework and focuses on describing system assets, attack steps, defenses, and asset associations. The attack steps in the language represent adversary techniques as listed and described by MITRE. This entity-relationship model describes enterprise IT systems as a whole; by using available tools, the proposed language enables attack simulations on its system model instances. These simulations can be used to investigate security settings and architectural changes that might be implemented to secure the system more effectively. Our proposed language is tested with a number of unit and integration tests. This is visualized in the paper with two real cyber attacks modeled and simulated.
C1 [Xiong, Wenjun; Aberg, Oscar; Lagerstrom, Robert] KTH Royal Inst Technol, Stockholm, Sweden.
   [Legrand, Emeline] ENSTA ParisTech, Paris, France.
C3 Royal Institute of Technology; Institut Polytechnique de Paris; ENSTA
   Paris
RP Xiong, WJ (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM wenjx@kth.se; emeline.legrand@ensta-paristech.fr; noav@kth.se;
   robertl@kth.se
OI Lagerstrom, Robert/0000-0003-3089-3885
FU European Union [832907]; Swedish Governmental Agency for Innovation
   Systems (Vinnova); Swedish Energy Agency; H2020 Societal Challenges
   Programme [832907] Funding Source: H2020 Societal Challenges Programme
FX This project has received funding from the European Union's H2020
   research and innovation program under the Grant Agreement No. 832907,
   the Swedish Governmental Agency for Innovation Systems (Vinnova), and
   the Swedish Energy Agency.
CR Al-Fedaghi S., 2014, International Journal of Safety and Security Engineering, V4, P97, DOI [https://doi.org/10.2495/SAFE-V4-N2-97-115, DOI 10.2495/SAFE-V4-N2-97-115]
   [Anonymous], 2008, Journal of Computing Sciences in Colleges
   Applebaum, 2017, P SUMM SIM MULT, P1
   Baquero A.O., 2015, CROSSTALK
   Bedi P, 2013, SOFTWARE PRACT EXPER, V43, P1013, DOI 10.1002/spe.2133
   Burns AJ, 2019, J ORG COMP ELECT COM, V29, P24, DOI 10.1080/10919392.2019.1552745
   Butavicius M., 2016, arXiv:1606.00887
   Caputo DD, 2014, IEEE SECUR PRIV, V12, P28, DOI 10.1109/MSP.2013.106
   Chu M., 2010, Proceedings of the Seventh International Symposium on Visualization for Cyber Security, P22, DOI [10.1145/1850795.1850798, DOI 10.1145/1850795.1850798]
   Dahbul RN, 2017, J PHYS CONF SER, V801, DOI 10.1088/1742-6596/801/1/012057
   Dhillon D, 2011, IEEE SECUR PRIV, V9, P41, DOI 10.1109/MSP.2011.47
   Ek, 2020, ABSTRACTION MITRE AT
   Ekstedt M, 2015, IEEE INT ENTERP, P152, DOI 10.1109/EDOCW.2015.40
   Frydman M, 2014, SCI WORLD J, DOI 10.1155/2014/805856
   Ghosh N, 2015, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING AND NETWORKING, DOI 10.1145/2684464.2684494
   Hacks Simon, 2020, Energy Informatics, V3, DOI 10.1186/s42162-020-00134-4
   Harish P, 2007, LECT NOTES COMPUT SC, V4873, P197
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holm H, 2015, IEEE T DEPEND SECURE, V12, P626, DOI 10.1109/TDSC.2014.2382574
   Holm H, 2014, SOFTW SYST MODEL, V13, P825, DOI 10.1007/s10270-012-0252-1
   Homer J, 2013, J COMPUT SECUR, V21, P561, DOI 10.3233/JCS-130475
   Husari G, 2017, ANN COMPUT SECURITY, P103, DOI 10.1145/3134600.3134646
   Jasper R., 1999, IJCAI 99 Ontology Workshop, P16
   Johnson P, 2018, 13 INT C AVAILABILIT, P1
   Johnson P, 2018, IEEE T DEPEND SECURE, V15, P1002, DOI 10.1109/TDSC.2016.2644614
   Johnson P, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P278, DOI 10.1109/ARES.2016.77
   Kang D, 2010, EXPERT SYST APPL, V37, P1456, DOI 10.1016/j.eswa.2009.06.073
   Katsikeas Sotirios, 2020, Graphical Models for Security. 7th International Workshop, GraMSec 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12419), P67, DOI 10.1007/978-3-030-62230-5_4
   Katsikeas S, 2019, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY (ICISSP), P175, DOI 10.5220/0007247901750182
   Kordy B, 2011, LECT NOTES COMPUT SC, V6561, P80, DOI 10.1007/978-3-642-19751-2_6
   Lagerström R, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P248
   Lavrova DS, 2015, AUTOM CONTROL COMPUT, V49, P727, DOI 10.3103/S0146411615080106
   Ling, 2020, 15 INT C CRIT INF IN
   Maleki N, 2019, LECT NOTES COMPUT SC, V11879, P434, DOI 10.1007/978-3-030-34339-2_25
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Meszaros J, 2017, COMPUT SECUR, V65, P300, DOI 10.1016/j.cose.2016.12.008
   Musman S., 2018, International journal of safety and security engineering, V8, P212, DOI [10.2495/SAFE-V8-N2-212-222, DOI 10.2495/SAFE-V8-N2-212-222, 10.2495/safe-v8-n2-212-222]
   Närman P, 2009, ELECTRON NOTES THEOR, V233, P29, DOI 10.1016/j.entcs.2009.02.059
   Noel S, 2009, CATCH 2009: CYBERSECURITY APPLICATIONS AND TECHNOLOGY CONFERENCE FOR HOMELAND SECURITY, PROCEEDINGS, P124, DOI 10.1109/CATCH.2009.19
   Österlind M, 2013, IEEE INT ENTERP, P347, DOI 10.1109/EDOCW.2013.45
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Salter C, 1999, NEW SECURITY PARADIGMS WOEKSHOP, PROCEEDINGS, P2
   Schneier B, 1999, DR DOBBS J, V24, P21
   Shehod, 2016, THESIS MIT
   Sommestad T, 2013, IEEE SYST J, V7, P363, DOI 10.1109/JSYST.2012.2221853
   Sood, 2014, TARGETED CYBER ATTAC, P23
   Uschold M, 1998, KNOWL ENG REV, V13, P5, DOI 10.1017/S0269888998001040
   Uzunov AV, 2014, COMPUT STAND INTER, V36, P734, DOI 10.1016/j.csi.2013.12.008
   Välja M, 2020, CYBERSECURITY, V3, DOI 10.1186/s42400-020-00060-8
   Vernotte A., 2018, Energy Inform., V1, P1, DOI [10.1186/s42162-018-0010-x, DOI 10.1186/S42162-018-0010-X]
   Wang LY, 2014, IEEE T DEPEND SECURE, V11, P30, DOI 10.1109/TDSC.2013.24
   Weiss J.D., 2006, 14 NATL COMPUTER SEC, P572
   Winter R., 2006, P IEEE INT ENTERPRIS, DOI [DOI 10.1109/EDOCW.2006.33, 10.1109/EDOCW.2006.33]
   Xiong W, 2020, INFORM SYSTEMS SECUR, P272
   Xiong W., 2021, Complex Syst. Inform. Model. Q., V151, P55
   Xiong WJ, 2019, 2019 INTERNATIONAL CONFERENCE ON CYBER SITUATIONAL AWARENESS, DATA ANALYTICS AND ASSESSMENT (CYBER SA), DOI 10.1109/cybersa.2019.8899615
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 60
TC 40
Z9 50
U1 2
U2 31
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 157
EP 177
DI 10.1007/s10270-021-00898-7
EA JUN 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000663233900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Coronado, E
   Valero, V
   Orozco-Barbosa, L
   Cambronero, ME
   Pelayo, FL
AF Coronado, Estefania
   Valero, Valentin
   Orozco-Barbosa, Luis
   Cambronero, Maria-Emilia
   Pelayo, Fernando L.
TI Modeling and simulation of the IEEE 802.11e wireless protocol with
   hidden nodes using Colored Petri Nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE IEEE 802; 11; QoS; Colored Petri Nets; Simulation; Performance; Hidden
   terminal
ID PERFORMANCE; COMMUNICATION; NETWORKS; EDCA; QOS; MAC
AB Wireless technologies are continuously evolving, including features such as the extension to mid- and long-range communications and the support of an increasing number of devices. However, longer ranges increase the probability of suffering from hidden terminal issues. In the particular case of Wireless Local Area Networks (WLANs), the use of Quality of Service (QoS) mechanisms introduced in IEEE 802.11e compromises scalability, exacerbates the hidden node problem, and creates congestion as the number of users and the variety of services in the network grow. In this context, this paper presents a configurable Colored Petri Net (CPN) model for the IEEE 802.11e protocol with the aim of analyzing the QoS support in mid- and long-range WLANs The CPN model covers the behavior of the protocol in the presence of hidden nodes to examine the performance of the RTS/CTS exchange in scenarios where the QoS differentiation may involve massive collision chains and high delays. Our CPN model sets the basis for further exploring the performance of the various mechanisms defined by the IEEE 802.11 standard. We then use this CPN model to provide a comprehensive study of the effectiveness of this protocol by using the simulation and monitoring capabilities of CPN Tools.
C1 [Coronado, Estefania] Fdn Bruno Kessler, Smart Networks & Serv SENSE, Trento, Italy.
   [Valero, Valentin; Orozco-Barbosa, Luis; Cambronero, Maria-Emilia; Pelayo, Fernando L.] Univ Castilla La Mancha, Albacete Res Inst Informat, Comp Sci Dept, Albacete 02071, Spain.
C3 Fondazione Bruno Kessler; Universidad de Castilla-La Mancha
RP Coronado, E (corresponding author), Fdn Bruno Kessler, Smart Networks & Serv SENSE, Trento, Italy.
EM e.coronado@fbk.eu; valentin.valero@uclm.es; luis.orozco@uclm.es;
   memilia.cambronero@uclm.es; fernandol.pelayo@uclm.es
RI Pelayo, Fernando L./R-8369-2018; Valero, Valentín/G-8268-2015; Coronado,
   Estefanía/AAX-4400-2021
OI Pelayo, Fernando L./0000-0001-7849-087X; Orozco-Barbosa,
   Luis/0000-0003-1510-1608; Coronado, Estefania/0000-0002-9528-6974;
   Cambronero, Maria/0000-0003-2153-8830
FU Spanish Ministry of Science and Innovation; European Union FEDER funds
   [TIN2015-65845-C3-02-R, RTI2018-093608-B-C32]; Junta de Comunidades de
   Castilla-La Mancha project [SBPLY/17/180501/000276/01]; FEDER funds, EU
FX This work was supported by the Spanish Ministry of Science and
   Innovation (co-financed by European Union FEDER funds) projects "DArDOS
   (Formal development and analysis of complex systems in distributed
   contexts: foundations, tools and applications)", reference
   TIN2015-65845-C3-02-R and project "FAME (Formal modeling and advanced
   testing methods. Applications to medicine and computing systems)",
   reference RTI2018-093608-B-C32. There was also support from the Junta de
   Comunidades de Castilla-La Mancha project SBPLY/17/180501/000276/01
   (cofunded with FEDER funds, EU).
CR Ahmed FU, 2013, P INT CONF INTELL, P468, DOI 10.1109/ISMS.2013.52
   Alves RCA, 2017, ACM TRANS MODELING P, V2, DOI 10.1145/3115389
   [Anonymous], 2005, 80211 IEEE
   [Anonymous], 2006, PROC IEEE INT SOLID, DOI [DOI 10.1109/GLOCOM.2006.931, DOI 10.1109/ISSCC.2006.1696040]
   [Anonymous], 1997, The Definition of Standard ML
   Aust S, 2015, IEEE COMMUN SURV TUT, V17, P1761, DOI 10.1109/COMST.2015.2429311
   Bianchi G, 2007, IEEE INFOCOM SER, P1181, DOI 10.1109/INFCOM.2007.141
   Bianchi G, 2000, IEEE J SEL AREA COMM, V18, P535, DOI 10.1109/49.840210
   Boujnoui A, 2020, WIREL NETW, V26, P5047, DOI 10.1007/s11276-020-02364-6
   Chakraborty S, 2016, IEEE T WIREL COMMUN, V15, P3746, DOI 10.1109/TWC.2016.2527694
   Chang HT, 2002, IEEE T IMAGE PROCESS, V11, P1, DOI 10.1109/83.977877
   Cranley N, 2007, GLOB TELECOMM CONF, P2075
   Damayanti W, 2016, COMPUT NETW, V108, P296, DOI 10.1016/j.comnet.2016.09.006
   El Masr M, 2007, WINSYS 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON WIRELESS INFORMATION NETWORKS AND SYSTEMS, P76
   Cambronero ME, 2018, IEEE ACCESS, V6, P27356, DOI 10.1109/ACCESS.2018.2833213
   German R., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P44, DOI 10.1109/PNPM.1999.796531
   Gomez J, 2015, WIRELESS PERS COMMUN, V85, P2169, DOI 10.1007/s11277-015-2898-9
   Heindl A, 2001, PERFORM EVALUATION, V44, P139, DOI 10.1016/S0166-5316(00)00053-5
   Hu X., 2017, P IWQOS 17, P1, DOI [10.1109/IWQoS.2017.7969128, DOI 10.1109/EI2.2017.8245627]
   Hu X, 2016, COMPUT J, V59, P1563, DOI 10.1093/comjnl/bxw067
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Khiat A, 2017, INT SYM NETWO COMP
   LAN/MAN Standards Committee of the IEEE Computer Society, 2003, 80211G LAN MAN IEEE
   LAN/MAN Standards Committee of the IEEE Computer Society, 2016, 80211AH LANMAN IEEE
   Maity M, 2017, IEEE T MOBILE COMPUT, V16, P213, DOI 10.1109/TMC.2016.2540632
   Mokdad L, 2014, AD HOC NETW, V12, P86, DOI 10.1016/j.adhoc.2012.01.004
   Moraes R, 2006, C LOCAL COMPUT NETW, P389
   Pastrav AEI, 2012, 2012 10TH INTERNATIONAL SYMPOSIUM ON ELECTRONICS AND TELECOMMUNICATIONS, P139, DOI 10.1109/ISETC.2012.6408084
   Perez S, 2015, INT CONF ELECTR COMM, P8, DOI 10.1109/CONIELECOMP.2015.7086933
   Pérez S, 2013, IEEE LAT AM T, V11, P1134, DOI 10.1109/TLA.2013.6601760
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Prakash G., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P117, DOI 10.1109/ICECTECH.2011.5942063
   Prince SJD, 2007, IEEE I CONF COMP VIS, P1751
   Ramakristanaiah C., 2016, 2016 INT C EM TECHN, P1
   Somappa A.A.K., 2016, P IEEE PNSE TOR POL, P193
   Syed I., 2016, 2016 IEEE 35 INT PER
   TALEBI M, 2018, P IEEE PIMRC
   Tang J, 2014, IEEE T MOBILE COMPUT, V13, P146, DOI 10.1109/TMC.2012.227
   Tsertou A., 2006, PROC INT C WIRELESS, V2006, P767
   Vijayasankar Kumaran, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P385, DOI 10.1109/MASCOTS.2010.46
   Yang X, 2012, IEEE WCNC, P1496, DOI 10.1109/WCNC.2012.6214018
   Zairi S., 2011, IFAC P VOL, V44, P5395, DOI [10.3182/20110828-6-IT-1002.01652, DOI 10.3182/20110828-6-IT-1002.01652]
   Zairi S, 2015, LECT NOTES COMPUT SC, V9071, P381, DOI 10.1007/978-3-319-22572-2_28
NR 43
TC 10
Z9 10
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 505
EP 538
DI 10.1007/s10270-020-00817-2
EA JUL 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000552888600001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Vidal, JC
   Carreira, P
   Amaral, V
   Aguiam, J
   Sousa, J
AF Vidal, Juan C.
   Carreira, Paulo
   Amaral, Vasco
   Aguiam, Joao
   Sousa, Joao
TI Towards high-level fuzzy control specifications for building automation
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Ambient intelligence; Context-aware systems; Building automation; Fuzzy
   control systems; Domain-Specific Languages
ID COMFORT MANAGEMENT; THERMAL-COMFORT; AMBIENT-INTELLIGENCE;
   ENERGY-CONSERVATION; OPTIMIZATION; DESIGN; NETWORKS; MODEL
AB The control logic underlying building automation systems has consisted, traditionally, of embedded discrete programs created using either low-level or proprietary scripting languages, or using general purpose fourth-generation visual languages like Simulink. It is also well known that programs developed in this way are hard to evolve, test, and maintain. These difficulties are intensified when continuous control problems have to be tackled or when the actuation must vary continually subject to the sensor inputs. Such is the case in day-lighting or occupancy-based control applications. In this paper, we propose a declarative high-level Domain-Specific Language that aims to reduce the effort required to specify the control logic of building automation systems. Our language combines fuzzy logic and temporal logic, enabling to define the behaviour in terms of domain abstractions. Finally, the approach has been validated in two ways: (i) in a case study that simulates the control system of an automated office room and (ii) by means of an empirical study to confirm usability (with a System Usability Scale questionnaire) and effectiveness, here regarded from the perspective of correctness, of the proposed language with respect to a well-known language like Simulink.
C1 [Vidal, Juan C.] Univ Santiago de Compostela, Ctr Invest Tecnol Informac CiTIUS, Santiago De Compostela, Spain.
   [Carreira, Paulo; Aguiam, Joao] Univ Lisbon, INESC ID Inst Super Tech, Lisbon, Portugal.
   [Amaral, Vasco] Univ Nova Lisboa, FCT, NOVA LINCS, DI, Lisbon, Portugal.
   [Sousa, Joao] Inst Super Tecn, IDMEC, Lisbon, Portugal.
C3 Universidade de Santiago de Compostela; Universidade de Lisboa;
   Universidade Nova de Lisboa; Universidade de Lisboa
RP Amaral, V (corresponding author), Univ Nova Lisboa, FCT, NOVA LINCS, DI, Lisbon, Portugal.
EM juan.vidal@usc.es; paulo.carreira@tecnico.ulisboa.pt;
   vasco.amaral@fct.unl.pt; joao.aguiam@ist.utl.pt;
   jmsousa@tecnico.ulisboa.pt
RI Sousa, Joao M. C./M-7454-2019; Vidal, Juan C./L-7375-2014
OI Sousa, Joao M. C./0000-0002-8030-4746; Vidal, Juan
   C./0000-0002-8682-6772
FU Fundação para a Ciência e a Tecnologia [UID/CEC/04516/2013] Funding
   Source: FCT
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Ali S, 2013, INT J INNOV COMPUT I, V9, P2229
   Alvarez JD, 2013, ENERG BUILDINGS, V57, P361, DOI 10.1016/j.enbuild.2012.10.044
   [Anonymous], STUDIES FUZZINESS SO
   [Anonymous], 1993, INTRO FUZZY CONTROL, DOI DOI 10.1007/978-3-662-11131-4
   [Anonymous], J GREEN ENG
   [Anonymous], 2006, 152322006 CEN
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Boithias F, 2012, BUILD SIMUL-CHINA, V5, P95, DOI 10.1007/s12273-012-0059-6
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Calvino F, 2004, ENERG BUILDINGS, V36, P97, DOI 10.1016/j.enbuild.2003.10.004
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Dixon RK, 2010, ENERG POLICY, V38, P6398, DOI 10.1016/j.enpol.2010.01.038
   Doctor F, 2005, IEEE T SYST MAN CY A, V35, P55, DOI 10.1109/TSMCA.2004.838488
   Domingues P, 2016, COMPUT STAND INTER, V45, P1, DOI 10.1016/j.csi.2015.11.005
   DOUNIS AI, 1995, ENERG BUILDINGS, V22, P81, DOI 10.1016/0378-7788(94)00902-V
   Dounis AI, 2001, APPL ENERG, V69, P119, DOI 10.1016/S0306-2619(00)00065-9
   DUBOIS D, 1989, IEEE T SYST MAN CYB, V19, P729, DOI 10.1109/21.35337
   Dutta S., 1988, Proceedings of the Eighteenth International Symposium on Multiple-Valued Logic (Cat. No.88CH2546-0), P64, DOI 10.1109/ISMVL.1988.5151
   Ferreira PM, 2012, ENERG BUILDINGS, V55, P238, DOI 10.1016/j.enbuild.2012.08.002
   Frigeri A, 2014, ACM T COMPUT LOG, V15, DOI 10.1145/2629606
   FUKAMI S, 1980, FUZZY SET SYST, V4, P243, DOI 10.1016/0165-0114(80)90014-7
   Gomes R, 2017, WORLD SUSTAIN SER, P381, DOI 10.1007/978-3-319-47868-5_24
   Guillemin A, 2002, BUILD ENVIRON, V37, P1091, DOI 10.1016/S0360-1323(01)00113-5
   Hagras H, 2004, IEEE INTELL SYST, V19, P12, DOI 10.1109/MIS.2004.61
   Jang J-S R, 1997, PRENTICE HALL INT, p[42, 1482], DOI DOI 10.1109/TAC.1997.633847
   Jia RX, 2018, P IEEE, V106, P1680, DOI 10.1109/JPROC.2018.2856932
   Johnson-Laird PN, 2010, P NATL ACAD SCI USA, V107, P18243, DOI 10.1073/pnas.1012933107
   Kolokotsa D, 2002, ENG APPL ARTIF INTEL, V15, P417, DOI 10.1016/S0952-1976(02)00090-8
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Lamine K.B., 2006, IASTED INT C ROB APP, P116
   Mäntyjärvi J, 2003, INTERACT COMPUT, V15, P521, DOI 10.1016/S0953-5438(03)00038-9
   Meyer S., 2003, C RES PRACTICE INFOR, V21, P159, DOI 10.5555/827987.828005
   Milan C, 2012, ENERGY, V48, P118, DOI 10.1016/j.energy.2012.05.034
   Molina D., 2011, 2011 IEEE IND APPL S, P1
   Moon SI, 2004, IEEE T SYST MAN CY B, V34, P1045, DOI 10.1109/TSMCB.2003.819485
   Park HS, 2006, LECT NOTES COMPUT SC, V4223, P970
   Prahofer H., 2008, Softw. Eng, V121, P242
   Preuer S., 2007, SOFTWARE ENG 2007, P349
   Schmidt A, 2001, IEEE PERS COMMUN, V8, P66, DOI 10.1109/98.944006
   Shaikh PH, 2014, RENEW SUST ENERG REV, V34, P409, DOI 10.1016/j.rser.2014.03.027
   Soucek S, 2012, ELEKTROTECH INFORMAT, V129, P278, DOI 10.1007/s00502-012-0013-4
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strejek J, 2005, LINEAR TEMPORAL LOGI
   THIELE H, 1993, SECOND IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1 AND 2, P1027, DOI 10.1109/FUZZY.1993.327373
   Torunski E, 2012, PROCEDIA COMPUT SCI, V10, P205, DOI 10.1016/j.procs.2012.06.029
   Nguyen TA, 2013, ENERG BUILDINGS, V56, P244, DOI 10.1016/j.enbuild.2012.09.005
   Üçtug FG, 2012, ENERG BUILDINGS, V49, P200, DOI 10.1016/j.enbuild.2012.02.020
   Waide P., 2007, International Standards to Develop and Promote Energy Efficiency and Renewable Energy Sources, IEA information paper, prepared for the G8 Plan of Action
   Wang Z, 2010, ANN IEEE SYST CONF, P277
   Wang Z, 2013, IEEE T SMART GRID, V4, P686, DOI 10.1109/TSG.2012.2229474
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang R, 2012, SUSTAIN CITIES SOC, V2, P1, DOI 10.1016/j.scs.2011.09.001
   Zadeh L., 1979, MACHINE INTELLIGENCE, P149
   Zadeh LA, 1996, IEEE T FUZZY SYST, V4, P103, DOI 10.1109/91.493904
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   ZADEH LA, 1988, COMPUTER, V21, P83, DOI 10.1109/2.53
   ZADEH LA, 1973, IEEE T SYST MAN CYB, VSMC3, P28, DOI 10.1109/TSMC.1973.5408575
NR 60
TC 0
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 625
EP 646
DI 10.1007/s10270-019-00755-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Van Tendeloo, Y
   Van Mierlo, S
   Vangheluwe, H
AF Van Tendeloo, Yentl
   Van Mierlo, Simon
   Vangheluwe, Hans
TI A Multi-Paradigm Modelling approach to live modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Live programming; Live modelling; Debugging; Multi-Paradigm Modelling
AB To develop complex systems and tackle their inherent complexity, (executable) modelling takes a prominent role in the development cycle. But whereas good tool support exists for programming, tools for executable modelling have not yet reached the same level of functionality and maturity. In particular, live programming is seeing increasing support in programming tools, allowing users to dynamically change the source code of a running application. This significantly reduces the edit-compile-debug cycle and grants the ability to gauge the effect of code changes instantly, aiding in debugging and code comprehension in general. In the modelling domain, however, live modelling only has limited support for a few formalisms. In this paper, we propose a Multi-Paradigm Modelling approach to add liveness to modelling languages in a generic way, which is reusable across multiple formalisms. Live programming concepts and techniques are transposed to (domain-specific) executable modelling languages, clearly distinguishing between generic and language-specific concepts. To evaluate our approach, live modelling is implemented for three modelling languages, for which the implementation of liveness substantially differs. For all three cases, the exact same structured process was used to enable live modelling, which only required a sanitization operation to be defined.
C1 [Van Tendeloo, Yentl; Vangheluwe, Hans] Univ Antwerp, Antwerp, Belgium.
   [Van Mierlo, Simon] Univ Antwerp, Modelling Simulat & Design MSDL Res Lab, Antwerp, Belgium.
   [Vangheluwe, Hans] Flanders Make Vzw, Lommel, Belgium.
   [Vangheluwe, Hans] McGill Univ, Montreal, PQ, Canada.
C3 University of Antwerp; University of Antwerp; McGill University
RP Van Tendeloo, Y (corresponding author), Univ Antwerp, Antwerp, Belgium.
EM Yentl.VanTendeloo@uantwerpen.be; Simon.VanMierlo@uantwerpen.be;
   hv@cs.mcgill.ca
RI ; Vangheluwe, Hans/H-9884-2016
OI Van Mierlo, Simon/0000-0002-4043-6883; Vangheluwe,
   Hans/0000-0003-2079-6643
FU Research Foundation-Flanders (FWO); Agency for Innovation by Science and
   Technology in Flanders (IWT); Flanders Make vzw, the strategic research
   centre for the manufacturing industry
FX This work was partly funded by PhD fellowships from the Research
   Foundation-Flanders (FWO) and Agency for Innovation by Science and
   Technology in Flanders (IWT). This research was partially supported by
   Flanders Make vzw, the strategic research centre for the manufacturing
   industry.
CR [Anonymous], 2007, P 4 INT WORKSH SOFTW
   [Anonymous], ACM IEEE 9 INT C MOD
   [Anonymous], INTRO AUTOMATA THEOR
   [Anonymous], 2017, SERIOUS GAMES EDUTAI, DOI DOI 10.1007/978-3-319-51645-5
   [Anonymous], 2014, P S THEOR MOD SIM DE
   [Anonymous], P ACM STUD RES COMP
   [Anonymous], 11 EUR C MOD FDN APP
   [Anonymous], 1991, Continuous System Modeling
   [Anonymous], 2006, GAMMA 06, DOI DOI 10.1145/1138304.1138307
   [Anonymous], CSTR20145 MCGILL U
   Armstrong J, 1997, ACM SIGPLAN NOTICES, V32, P196, DOI 10.1145/258949.258967
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Burckhardt S, 2013, ACM SIGPLAN NOTICES, V48, P95, DOI 10.1145/2499370.2462170
   Burnett MM, 1998, 1998 IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P126, DOI 10.1109/VL.1998.706155
   Chis A, 2015, COMPUT LANG SYST STR, V44, P89, DOI 10.1016/j.cl.2015.08.005
   Czaplicki Evan, 2012, ELM CONCURRENT FRP F
   Devai Gergely, 2014, OCL MODELS, P3
   Edwards J, 2005, ACM SIGPLAN NOTICES, V40, P505, DOI 10.1145/1103845.1094851
   Fabry R. S., 1976, 2nd International Conference on Software Engineering, P470
   Favre JM, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P33, DOI 10.1109/IWPSE.2005.22
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   HANCOCK CM, 2003, THESIS
   Kelly S., 2008, Domain-Specific Modeling
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Lieberman H., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P480
   Lindeman RT, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P127
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Mannadiar R, 2011, LECT NOTES COMPUT SC, V6563, P276, DOI 10.1007/978-3-642-19440-5_17
   McDirmid S., 2013, P 2013 ACM INT S NEW, P53, DOI DOI 10.1145/2509578.2509585
   McDirmid S, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P623
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Pavletic Domenik, 2015, Reliable Software Technologies - Ada-Europe 2015. 20th Ada-Europe International Conference on Reliable Software Technologies. Proceedings: LNCS 9111, P33, DOI 10.1007/978-3-319-19584-1
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   SANDEWALL E, 1978, COMPUT SURV, V10, P35, DOI 10.1145/356715.356719
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sorensen A, 2010, ACM SIGPLAN NOTICES, V45, P822, DOI 10.1145/1932682.1869526
   Stewart L, 2005, TLS-TIMES LIT SUPPL, P27
   Tanimoto S. L., 1990, Journal of Visual Languages and Computing, V1, P127, DOI 10.1016/S1045-926X(05)80012-6
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   van der Storm T, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P35, DOI 10.1109/LIVE.2013.6617347
   Van Mierlo S, 2017, SIMUL-T SOC MOD SIM, V93, P285, DOI 10.1177/0037549716658360
   Van Mierlo Simon., 2015, P ACM STUDENT RES CO, P24
   Van Tendeloo Y, 2017, WINT SIMUL C PROC, P944, DOI 10.1109/WSC.2017.8247845
   Vangheluwe H., 2002, AI, P9
   Wu H, 2008, SOFTWARE PRACT EXPER, V38, P1073, DOI 10.1002/spe.863
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
NR 51
TC 8
Z9 9
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2821
EP 2842
DI 10.1007/s10270-018-0700-7
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dai, SY
   Zhang, ZK
   Koutsoukos, X
AF Dai, Siyuan
   Zhang, Zhenkai
   Koutsoukos, Xenofon
TI A model-based design approach for simulation and virtual prototyping of
   automotive control systems using port-Hamiltonian systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Model-based design; Port-Hamiltonian systems;
   Passivity; Automotive control software
ID PASSIVITY
AB Cyber-physical systems (CPS) such as automotive control systems consist of various interacting cyber and physical components. Heterogeneous domains, composition of multiple components, complex dynamics, and nonlinearities result in significant challenges for design, modeling, and simulation of CPS. Model-based design can be used to address such challenges, but it is very important to use physically accurate heterogeneous models that can be composed to represent the overall system behavior. Further, it is important to preserve the properties derived from analyses based on the mathematical models in the control system implementation in order to reduce costly testing and design changes late in the development cycle. This paper proposes a model-based design methodology for automotive control software using port-Hamiltonian systems (PHS). PHS are used to model the vehicle dynamics, speed and steering control systems, and the interactions between physical and cyber components. Passivity analysis is used to design the controllers and ensure system stability. More importantly, the proposed approach guarantees that passivity is preserved after time-discretization and quantization of the controllers. The models are then used for code generation and compilation, scheduling, and software deployment, ensuring that passivity is preserved by the control system implementation. We evaluate the methodology using an automotive control design case study implemented on a hardware-in-the-loop simulation platform and present simulation results to demonstrate its effectiveness.
C1 [Dai, Siyuan; Zhang, Zhenkai; Koutsoukos, Xenofon] Vanderbilt Univ, Inst Software Integrated Syst, 221 Kirkland Hall, Nashville, TN 37235 USA.
C3 Vanderbilt University
RP Dai, SY (corresponding author), Vanderbilt Univ, Inst Software Integrated Syst, 221 Kirkland Hall, Nashville, TN 37235 USA.
EM siyuandai@gmail.com; zhenkai.zhang@vanderbilt.edu;
   xenofon.koutsoukos@vanderbilt.edu
OI Zhang, Zhenkai/0000-0002-7934-7773
FU National Science Foundation [CNS-1035655, CNS-1739328]
FX The authors would like to acknowledge the partial support by the
   National Science Foundation under awards CNS-1035655 and CNS-1739328.
CR [Anonymous], 2013, MECH SIM
   [Anonymous], P INT C MATH ZUR 199
   [Anonymous], 2006, MECH ENG S
   [Anonymous], MATLAB VERS 7 10 0 R
   BYRNES CI, 1994, IEEE T AUTOMAT CONTR, V39, P83, DOI 10.1109/9.273341
   Cervera J, 2007, AUTOMATICA, V43, P212, DOI 10.1016/j.automatica.2006.08.014
   Costa-Castelló R, 2006, P AMER CONTR CONF, V1-12, P4373, DOI 10.1109/ACC.2006.1657407
   Dai S., 2015, INT C COMPL SYST ENG
   Dai S, 2016, THESIS
   Dai S., 2016, 19 ACM INT C HYBR SY
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Dirksz D., 2011, 18 IFAC WORLD C IT M
   Donaire A, 2009, SIMUL MODEL PRACT TH, V17, P137, DOI 10.1016/j.simpat.2008.02.007
   Duindam V, 2009, MODELING AND CONTROL OF COMPLEX PHYSICAL SYSTEMS: THE PORT-HAMILTONIAN APPROACH, P1, DOI 10.1007/978-3-642-03196-0
   Eyisi E, 2013, J CONTROL SCI ENG, V2013, DOI 10.1155/2013/678016
   Fujimoto K, 2001, SYST CONTROL LETT, V42, P217, DOI 10.1016/S0167-6911(00)00091-8
   Fujimoto K, 1996, IEEE DECIS CONTR P, P84, DOI 10.1109/CDC.1996.574260
   Golo G, 2003, NONLINEAR AND HYBRID SYSTEM IN AUTOMOTIVE CONTROL, P351
   Hooke R., 1969, J ASSOC COMPUT MACH, V8, P212
   Jiyang K. K., 1997, 2 SUIF COMP WORKSH
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Khalil H. K., 2002, Nonlinear systems
   Kirschke-Biller F, 2012, 4 AUTOSAR OP C PAR F
   Lee L, 2008, INT S OBJ COMP SERV
   Oishi Y, 2010, IEEE DECIS CONTR P, P7613, DOI 10.1109/CDC.2010.5717886
   Ortega R, 2004, EUR J CONTROL, V10, P432, DOI 10.3166/ejc.10.432-450
   Ortega R, 1997, P AMER CONTR CONF, P2633, DOI 10.1109/ACC.1997.611933
   Porter J, 2010, ISIS10109 VAND U
   Porter J., 2009, EMSOFT 09 P 7 ACM IN, P167
   Sakai S., 2007, IEEE INT C ROB AUT
   Simko G, 2013, THEORY CYBER PHYS SY
   Stramigioli S, 2005, IEEE T ROBOT, V21, P574, DOI 10.1109/TRO.2004.842330
   Sztipanovits J, 2007, P 14 ANN IEEE INT C
   Sztipanovits J, 2012, P IEEE, V100, P29, DOI 10.1109/JPROC.2011.2161529
   van der Schaft AJ, 2004, CISM COURSES LECT, P127
   vander Schaft A. J., 1995, P 3 IFAC S NONL CONT
   Wu P., 2013, EXPT DETERMINING PAS
   Yu H, 2010, IEEE DECIS CONTR P, P2186, DOI 10.1109/CDC.2010.5717648
   Zhang Z., 2013, P ACM IEEE 4 INT C C
   Zhao J, 2008, IEEE T AUTOMAT CONTR, V53, P941, DOI 10.1109/TAC.2008.920237
   Zhu F., 2012, C HYBR SYST COMP CON
NR 41
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1637
EP 1653
DI 10.1007/s10270-017-0646-1
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100005
DA 2024-07-18
ER

PT J
AU van der Linden, D
   Hadar, I
   Zamansky, A
AF van der Linden, Dirk
   Hadar, Irit
   Zamansky, Anna
TI What practitioners really want: requirements for visual notations in
   conceptual modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Visual notations; Requirements; Conceptual modeling
ID PHYSICS
AB This research was aimed at eliciting the requirements of practitioners who use conceptual modeling in their professional work for the visual notations of modeling languages. While the use of conceptual modeling in practice has been addressed, what practitioners in fact require of the visual notation of the modeling languages they use has received little attention. This work was thus motivated by the need to understand to what extent practitioners' requirements are acknowledged and accommodated by visual notation research efforts. A mixed-method study was conducted, with a survey being offered over the course of several months to LinkedIn professional groups. The requirements included in the survey were based on a leading design theory for visual notations, the Physics of Notations. After preprocessing, 104 participant responses were analyzed. Data analysis included descriptive coding and qualitative analysis of purposes for modeling and additional requirements beyond the scope of visual design. Statistical and factorial analysis was used to explore potential correlations between the importance of different requirements as perceived by practitioners and the demographic factors (e.g., domain, purpose, topics). The results indicate several correlations between demographic factors and the perceived importance of visual notation requirements, as well as differences in the perceived relative importance of different requirements for models used to communicate with modeling experts as compared to non-experts. Furthermore, the results show an evolution from trends identified in studies conducted in the previous decade. The identified correlations with practitioners' demographics reveal several research challenges that should be addressed, as well as the potential benefits of more purpose-specific tailoring of visual notation design. Furthermore, the shift in practitioner demographics as compared to those found in earlier work indicates that the research and development of conceptual modeling efforts needs to stay up-to-date with the way practitioners employ conceptual modeling.
C1 [van der Linden, Dirk] Univ Bristol, Dept Comp Sci, Bristol, Avon, England.
   [Hadar, Irit; Zamansky, Anna] Univ Haifa, Dept Informat Syst, Haifa, Israel.
C3 University of Bristol; University of Haifa
RP van der Linden, D (corresponding author), Univ Bristol, Dept Comp Sci, Bristol, Avon, England.
EM dirk.vanderlinden@bristol.ac.uk; hadari@is.haifa.ac.il;
   annazam@is.haifa.ac.il
OI Zamansky, Anna/0000-0001-8350-4068; van der Linden,
   Dirk/0000-0002-8597-3156
CR [Anonymous], 2015, CODING MANUAL QUALIT
   Baar T, 2006, LECT NOTES COMPUT SC, V4199, P111
   Braun R, 2015, IEEE INT ENTERP DIST, P60, DOI 10.1109/EDOC.2015.19
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   CRONBACH LJ, 1955, PSYCHOL BULL, V52, P281, DOI 10.1037/h0040957
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Dehnert J, 2004, INT J COOP INF SYST, V13, P289, DOI 10.1142/S0218843004000973
   Fettke P, 2009, COMMUN ASSOC INF SYS, V25, P571
   Figl K, 2011, LECT NOTES COMPUT SC, V6998, P78, DOI 10.1007/978-3-642-24606-7_7
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Genon N., 2010, Software Language Engineering, P377
   Granada D, 2014, LECT NOTES COMPUT SC, V8767, P535, DOI 10.1007/978-3-319-11653-2_33
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   He M., 2015, ECIS
   Ivanov V., 2017, ESEC FSE IND TRACK
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kleppe A., 2007, 4 INT WORKSH SOFTW L, P1
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Milton S. K., 2010, Proceedings of the 2010 5th International Conference on Information and Automation for Sustainability (ICIAfS), P533, DOI 10.1109/ICIAFS.2010.5715719
   Moody D., 2008, INT C SOFTW LANG ENG, P16
   Moody D.L., 2007, REV ARCHIMATE ROAD I, V77
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Müller W, 2006, SIXTH IEEE INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P98, DOI 10.1109/P2P.2006.8
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Object Management Group (OMG), 2015, OMG UN MOD LANG UML
   OMG, 2016, OMG MET FAC MOF VERS
   Recker J, 2012, INFORM SYST, V37, P213, DOI 10.1016/j.is.2011.10.007
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   van der Linden D., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/TSE.2018.2802910, DOI 10.1109/TSE.2018.2802910.F0RTHC0MING]
   van der Linden D, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P222, DOI 10.5220/0005895802220227
   van der Linden D, 2016, LECT NOTES BUS INF P, V249, P109, DOI 10.1007/978-3-319-39564-7_11
   van der Linden D, 2016, LECT NOTES BUS INF P, V248, P448, DOI 10.1007/978-3-319-39429-9_28
   van der Linden Dirk, 2015, CEUR WORKSHOP P, V1497, P21
   vander Linden D., 2016, CAISE RADAR 2016, P1
   vander Linden D., 2017, IEEE 25 INT REQ ENG
   vander Linden D., 2017, REQ ENG C RE
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Wanderley F, 2014, IEEE INT WORKSH MODE, P47, DOI 10.1109/MoDRE.2014.6890825
   Wiebring J., 2015, LNBIP, P129
   Wieringa RJ, 2006, REQUIR ENG, V11, P295, DOI 10.1007/s00766-006-0037-6
   Wilmont I, 2013, LECT NOTES COMPUT SC, V8217, P74, DOI 10.1007/978-3-642-41924-9_7
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 48
TC 12
Z9 13
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1813
EP 1831
DI 10.1007/s10270-018-0667-4
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HZ6XP
UT WOS:000468996100015
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Brant-Ribeiro, T
   Araújo, RD
   Mendonça, IE
   Soares, MS
   Cattelan, RG
AF Brant-Ribeiro, Taffarel
   Araujo, Rafael D.
   Mendonca, Igor E.
   Soares, Michel S.
   Cattelan, Renan G.
TI Interactive web interfaces modeling, simulation and analysis using
   Colored Petri Nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web interaction modeling; Human-computer interaction; Web interfaces;
   Formal methods; Colored Petri Nets
ID USER; FORMALISM
AB Interaction modeling is a relevant activity during software development processes. Created relying on Petri Nets theory and aiming to represent discrete time events, Colored Petri Nets (CPNs) are a graphical formal language developed and widely employed for system modeling. While traditional CPNs only have elements with ordinary stylization and behaviors, in this article we explore the key ideas behind Web Interaction Modeling Using Colored Petri Nets (wiCPN), a modeling style developed with focus on representing Web interactions as an incremental improvement of CPNs. We review wiCPN's refinements over CPNs and the modeling of the Web interface of Classroom eXperience (CX), a ubiquitous educational platform, thus verifying the model's properties to ensure it was able to represent the different access levels among its users and how wiCPN displayed suitability to comprehend this requirement on the generated model. We have also improved the originally developed model with the modification of elements to make it finite and fully analyzable. Also, we added temporization capabilities to the model and ran corresponding user simulation to observe the average time that users with different roles tend to spend during interactions. We compared wiCPN results with Unified Modeling Language (UML) Activity and Use Case diagrams, observing, as outcomes, that the generated model represented CX's interactive flow correctly and maintained a concise notation-a single wiCPN diagram was sufficient to depict the same interactive flow that, in UML, would require several diagrams, something that could overload the design team in actual software development scenarios. We also included new user experiments comprising qualitative results from experts. Finally, we created a reachability graph for the new model and generated a full state space report, analyzing Petri Nets properties such as boundedness, liveness and home marking.
C1 [Brant-Ribeiro, Taffarel] Fed Inst Southern Minas Gerais, Passos, MG, Brazil.
   [Araujo, Rafael D.; Mendonca, Igor E.; Cattelan, Renan G.] Univ Fed Uberlandia, Fac Comp, Uberlandia, MG, Brazil.
   [Soares, Michel S.] Univ Fed Sergipe, Dept Comp, Sao Cristovao, SE, Brazil.
C3 Instituto Federal do Sul de Minas Gerais; Universidade Federal de
   Uberlandia; Universidade Federal de Sergipe
RP Brant-Ribeiro, T (corresponding author), Fed Inst Southern Minas Gerais, Passos, MG, Brazil.
EM brant.ribeiro@ifsuldeminas.edu.br; rafael.araujo@ufu.br;
   igoremendonca@gmail.com; mics.soares@gmail.com; renan@ufu.br
RI Araújo, Rafael Dias/AAP-9282-2020; Brant-Ribeiro, Taffarel/N-3673-2015
OI Araújo, Rafael Dias/0000-0003-0545-2519; Brant-Ribeiro,
   Taffarel/0000-0001-9727-1656; Cattelan, Renan/0000-0001-9993-8469
FU FAPEMIG; CAPES; CNPq; PROPP/UFU; PET/SESu/MEC
FX We thank FAPEMIG, CAPES, CNPq, PROPP/UFU and PET/SESu/MEC for supporting
   this work.
CR [Anonymous], 1962, Schriften des IIM
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 2015, BOOK SOFTWARE ENG 10
   Araujo R., 2012, P INT C NETW, P215
   Araújo RD, 2013, IEEE SYS MAN CYBERN, P3955, DOI 10.1109/SMC.2013.675
   Banerjee P, 2015, 2015 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, MANAGEMENT AND TELECOMMUNICATIONS (COMMANTEL), P62, DOI 10.1109/ComManTel.2015.7394261
   Bowen J, 2007, P 21 BRIT HCI GROUP, P159
   Brant-Ribeiro Taffarel, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P37
   Ceri S., 2009, ESSAYS HONOR JOHNMYL, P273
   Choosang S, 2014, J COMPUT, V9, P243, DOI 10.4304/jcp.9.2.243-256
   Ciardelli L., 2011, 2011 IEEE International Multi-Disciplinary Conference on Cognitive Methods in Situation Awareness and Decision Support (CogSIMA 2011), P248, DOI 10.1109/COGSIMA.2011.5753453
   Clemmensen T, 2012, INFORM SYST J, V22, P151, DOI 10.1111/j.1365-2575.2011.00381.x
   Dix A., 2003, HUM FAC ER
   Dubberly Hugh, 2009, Interactions, V16, P69, DOI 10.1145/1456202.1456220
   Fan GS, 2013, J SYST SOFTWARE, V86, P1089, DOI 10.1016/j.jss.2012.11.037
   Fischer G, 2001, USER MODEL USER-ADAP, V11, P65, DOI 10.1023/A:1011145532042
   Gal-Chis C. E. N., 2013, INT J COMPUT TECHNOL, V11, P2314
   Gehlot V, 2010, WINT SIMUL C PROC, P104, DOI 10.1109/WSC.2010.5679170
   Gómez M, 2013, J SYST SOFTWARE, V86, P2394, DOI 10.1016/j.jss.2013.04.022
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Huang JL, 2012, J BUS PSYCHOL, V27, P99, DOI 10.1007/s10869-011-9231-8
   Iordache MV, 2009, P AMER CONTR CONF, P4994, DOI 10.1109/ACC.2009.5159987
   Jensen K., 1994, Decade of Concurrency. Reflections and Perspectives. REX School/Symposium Proceedings, P230
   Junior MNO, 2006, LECT NOTES COMPUT SC, V4024, P261
   Kim D., 2012, P 2012 WINT SIM C
   Kristensen L. M., 1998, International Journal on Software Tools for Technology Transfer, V2, P98, DOI 10.1007/s100090050021
   Longhua Ma, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P250, DOI 10.1109/UIC-ATC.2010.15
   Lopes Adriana, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P79
   Machado RJ, 2000, HARDWARE DESIGN AND PETRI NETS, P205
   Martinie C, 2014, INT J HUM-COMPUT ST, V72, P77, DOI 10.1016/j.ijhcs.2013.08.013
   Mirlacher T., 2012, P 4 ACM SIGCHI S ENG, P111
   Nguyen HaiQuang., 2012, Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering, ICPE'12, P229
   Pettit RG, 2007, 10TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P124, DOI 10.1109/ISORC.2007.20
   Rogers Yvonne, 2011, Interaction design: beyond humancomputer interaction
   Rossi G, 2013, IEEE INTERNET COMPUT, V17, P4, DOI 10.1109/MIC.2013.78
   Rumbaugh James., 2010, Unified Modeling Language Reference Manual, V2nd
   Sangiorgi UB, 2009, EICS'09: PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P303
   Silva M, 2013, ANNU REV CONTROL, V37, P191, DOI 10.1016/j.arcontrol.2013.09.001
   Tena S, 2013, INFORM SOFTWARE TECH, V55, P1580, DOI 10.1016/j.infsof.2013.02.012
   Vera P., 2015, P 7 COL COMP C, P1
   Weidlich Matthias, 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P270, DOI 10.1007/978-3-642-38697-8_15
   Weijters B, 2012, J MARKETING RES, V49, P737, DOI 10.1509/jmr.11.0368
NR 42
TC 8
Z9 8
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 721
EP 737
DI 10.1007/s10270-017-0593-x
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HN1GA
UT WOS:000459934300028
DA 2024-07-18
ER

PT J
AU Mariño, J
   Alborodo, RNN
   Fredlund, LÅ
   Herranz, A
AF Marino, Julio
   Alborodo, Raul N. N.
   Fredlund, Lars-Ake
   Herranz, Angel
TI Synthesis of verifiable concurrent Java components from formal models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE CSP; JCSP; KeY; Java; JML; Shared resources; Verification; Model-driven;
   Concurrency; Message passing
ID JML; VERIFICATION
AB Concurrent systems are hard to program, and ensuring quality by means of traditional testing techniques is often very hard as errors may not show up easily and reproducing them is hard. In previous work, we have advocated a model-driven approach to the analysis and design of concurrent, safety-critical systems. However, to take full advantage of these techniques, they must be supported by code generation schemes for concrete programming languages. Ideally, this translation should be traceable, automated and should support the verification of the generated code. In our work, we consider the problem of generating a concurrent Java component from a high-level model of inter-process interaction (i.e., communication + synchronization). We call our formalism shared resources. From the model, which can be represented in mathematical notation or written as a Java interface annotated using an extension of JML, a Java component can be obtained by a semiautomatic translation. We describe how to obtain shared memory (using a priority monitors library) and message passing (using the JCSP library) implementations. Focusing on inter-process interaction for formal development is justified by several reasons, e.g., mathematical models are language-independent and allow to analyze certain concurrency issues, such as deadlocks or liveness properties prior to code generation. Also, the Java components produced from the shared resource model will contain all the concurrency-related language constructs, which are often responsible for many of the errors in concurrent software. We follow a realistic approach where the translation is semiautomatic (schemata for code generation) and the programmer still retains the power of coding or modifying parts of the code for the resource. The code thus obtained is JML-annotated Java with proof obligations that help with code traceability and verification of safety and liveness properties. As the code thus obtained is not automatically correct, there is still the need to verify its conformance to the original specs. We illustrate the methodology by developing a concurrent control system and verifying the code obtained using the KeY program verification tool. We also show how KeY can be used to find errors resulting from a wrong use of the templates.
C1 [Marino, Julio; Fredlund, Lars-Ake; Herranz, Angel] Univ Politecn Madrid, Sch Comp Sci & Engn, E-28660 Madrid, Spain.
   [Alborodo, Raul N. N.] IMDEA Software Inst, Madrid 28223, Spain.
C3 Universidad Politecnica de Madrid; IMDEA Software Institute
RP Alborodo, RNN (corresponding author), IMDEA Software Inst, Madrid 28223, Spain.
EM jmarino@fi.upm.es; raul.alborodo@imdea.org; lfredlund@fi.upm.es;
   aherranz@fi.upm.es
RI Fredlund, Lars-Åke/AAA-9117-2019; Herranz, Ángel/AAB-1297-2019
OI Fredlund, Lars-Åke/0000-0002-8296-4609; Herranz,
   Ángel/0000-0002-6433-5681; Alborodo, Raul Nestor
   Neri/0000-0001-7688-1447; Marino, Julio/0000-0002-2665-7612
FU Comunidad de Madrid [S2013/ICE-2731]; Spanish MINECO
   [TIN2012-39391-C04-03]
FX This research has been partially funded by Comunidad de Madrid grant
   S2013/ICE-2731 (N-Greens Software) and Spanish MINECO grant
   TIN2012-39391-C04-03 (StrongSoft).
CR Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   Alborodo R. N. N., 2014, SHARED RESOURCES HOM
   [Anonymous], [No title captured]
   Araujo J. E., 2011, P 1 WORKSH MOD SYST, P7, DOI 10.1145/1960518.1960521
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Ball T., 2004, TECHNICAL REPORT
   Beckert Bernhard., 2007, LNCS, V4334
   BUHR PA, 1995, ACM COMPUT SURV, V27, P63, DOI 10.1145/214037.214100
   Carro M, 2004, LECT NOTES COMPUT SC, V3294, P85
   Carro M., 2013, ACM T COMPUT EDUC, V13
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   Fredlund L., 2015, J RISK RELIAB
   Hamie A, 2015, COMM COM INF SC, V506, P35, DOI 10.1007/978-3-319-25156-1_3
   HANSEN PB, 1972, COMMUN ACM, V15, P574, DOI 10.1145/361454.361473
   Herranz Angel, 2012, Formal Verification of Object-Oriented Software. International Conference, FoVeOOS 2011. Revised Selected Papers, P160, DOI 10.1007/978-3-642-31762-0_11
   Herranz A, 2009, LECT NOTES COMPUT SC, V5825, P102, DOI 10.1007/978-3-642-04570-7_9
   Hilderink G, 1997, CONCUR SYST ENGN SER, V50, P48
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   Klein J., 2015, CMUSEI2015TN005
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   Lopez Pombo C. G., 2010, INT S SOFTW TEST AN
   Marino J., 2015, COMMUNICATING PROCES, P85
   Pajic M, 2012, IEEE REAL TIME, P173, DOI 10.1109/RTAS.2012.25
   Robby, 2003, Software Engineering Notes, V28, P267, DOI 10.1145/949952.940107
   Rodríguez E, 2005, LECT NOTES COMPUT SC, V3586, P551
   Schaller N. C., 2000, Communicating Process Architectures 2000. WoTUG-23. Proceedings of the 23rd World occam and Transputer User Group Technical Meeting, P205
   Welch P. H., 2012, COMMUNICATING SEQUEN
NR 28
TC 1
Z9 1
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 71
EP 105
DI 10.1007/s10270-017-0581-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300005
DA 2024-07-18
ER

PT J
AU Liebel, G
   Marko, N
   Tichy, M
   Leitner, A
   Hansson, J
AF Liebel, Grischa
   Marko, Nadja
   Tichy, Matthias
   Leitner, Andrea
   Hansson, Jorgen
TI Model-based engineering in the embedded systems domain: an industrial
   survey on the state-of-practice
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering; Model-driven engineering; Embedded systems;
   Industry; Modeling; Empirical study; State-of-practice
ID SOFTWARE; UML; EXPERIENCES
AB Model-based engineering (MBE) aims at increasing the effectiveness of engineering by using models as important artifacts in the development process. While empirical studies on the use and the effects of MBE in industry exist, only few of them target the embedded systems domain. We contribute to the body of knowledge with an empirical study on the use and the assessment of MBE in that particular domain. The goal of this study is to assess the current state-of-practice and the challenges the embedded systems domain is facing due to shortcomings with MBE. We collected quantitative data from 113 subjects, mostly professionals working with MBE, using an online survey. The collected data spans different aspects of MBE, such as the used modeling languages, tools, notations, effects of MBE introduction, or shortcomings of MBE. Our main findings are that MBE is used by a majority of all participants in the embedded systems domain, mainly for simulation, code generation, and documentation. Reported positive effects of MBE are higher quality and improved reusability. Main shortcomings are interoperability difficulties between MBE tools, high training effort for developers and usability issues. Our study offers valuable insights into the current industrial practice and can guide future research in the fields of systems modeling and embedded systems.
C1 [Liebel, Grischa] Chalmers Univ Technol & Univ Gothenburg, Software Engn Div, Gothenburg, Sweden.
   [Marko, Nadja; Leitner, Andrea] Virtual Vehicle Res Ctr, Graz, Austria.
   [Tichy, Matthias] Univ Ulm, Inst Software Engn, Ulm, Germany.
   [Hansson, Jorgen] Univ Skovde, Sch Informat, Skovde, Sweden.
C3 Chalmers University of Technology; Ulm University; University of Skovde
RP Liebel, G (corresponding author), Chalmers Univ Technol & Univ Gothenburg, Software Engn Div, Gothenburg, Sweden.
EM grischa@chalmers.se; nadja.marko@v2c2.at; matthias.tichy@uni-ulm.de;
   andrea.leitner@v2c2.at; jorgen.hansson@his.se
RI Liebel, Grischa/AAH-2721-2019
OI Liebel, Grischa/0000-0002-3884-815X
FU European Union's Seventh Framework Program (FP7) for CRYSTAL-Critical
   System Engineering Acceleration Joint Undertaking [332830]; Vinnova
   [DIARIENR 2012-04304]; FFG Austria
FX The research leading to these results has received partial funding from
   the European Union's Seventh Framework Program (FP7/2007-2013) for
   CRYSTAL-Critical System Engineering Acceleration Joint Undertaking under
   Grant Agreement No. 332830 and from Vinnova under DIARIENR 2012-04304.
   Further, the authors gratefully acknowledge financial support from FFG
   Austria for the project in which the above presented research results
   were achieved. We would also like to thank Aleksander Lodwich, Jos
   Langen and Leon Bouwmeester for participating in the survey design and
   contributing to the final study.
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], P 2003 INT S EMP SOF
   [Anonymous], P 4 EUR C MOD DRIV A
   [Anonymous], P ACM IEEE 8 INT C M
   [Anonymous], 2004, 1003131998 IEEE
   [Anonymous], 2012, 625312012E IEC
   [Anonymous], OMG UN MOD LANG 2 5
   [Anonymous], P ACM IEEE 16 INT C
   [Anonymous], P 2011 INT S EMP SOF
   [Anonymous], 2014, P ACM IEEE 17 INT C
   [Anonymous], P WORKSH COD CENTR M
   [Anonymous], P 2008 INT WORKSH MO
   [Anonymous], STANDARD GLOSSARY CE
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], TECHNICAL REPORT
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Espinoza H, 2009, LECT NOTES COMPUT SC, V5562, P98, DOI 10.1007/978-3-642-02674-4_8
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hutchinson J., 2011, P 33 INT C SOFTW ENG
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Karsai G, 2008, SCI COMPUT PROGRAM, V73, P26, DOI 10.1016/j.scico.2008.05.006
   Leiner D. J., 2013, SSRN J, DOI DOI 10.2139/SSRN.2361661
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Object Management Group, 2011, UML PROF MARTE MOD A
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Stachowiak H., 1973, ALLGEMEINE MODELLTHE
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 33
TC 69
Z9 74
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 91
EP 113
DI 10.1007/s10270-016-0523-3
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100007
OA Bronze
DA 2024-07-18
ER

PT J
AU Gonçalves, RC
   Batory, D
   Sobral, JL
   Riché, TL
AF Goncalves, Rui C.
   Batory, Don
   Sobral, Joao L.
   Riche, Taylor L.
TI From software extensions to product lines of dataflow programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; PIM; PSM; Model transformations; Software extensions; Dataflow
   programs; Software product lines
ID MODEL; TOOL
AB Dataflow programs are widely used. Each program is a directed graph where nodes are computations and edges indicate the flow of data. In prior work, we reverse-engineered legacy dataflow programs by deriving their optimized implementations from a simple specification graph using graph transformations called refinements and optimizations. In MDE speak, our derivations were PIM-to-PSM mappings. In this paper, we show how extensions complement refinements, optimizations, and PIM-to-PSM derivations to make the process of reverse engineering complex legacy dataflow programs tractable. We explain how optional functionality in transformations can be encoded, thereby enabling us to encode product lines of transformations as well as product lines of dataflow programs. We describe the implementation of extensions in the ReFlO tool and present two non-trivial case studies as evidence of our work's generality.
C1 [Goncalves, Rui C.] INESC TEC, High Assurance Software Lab, Braga, Portugal.
   [Batory, Don] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
   [Sobral, Joao L.] Univ Minho, Dept Informat, Braga, Portugal.
   [Riche, Taylor L.] Natl Instruments, Austin, TX USA.
C3 INESC TEC; University of Texas System; University of Texas Austin;
   Universidade do Minho; National Instruments Corporation
RP Gonçalves, RC (corresponding author), INESC TEC, High Assurance Software Lab, Braga, Portugal.
EM rgoncalves@di.uminho.pt; batory@cs.utexas.edu; jls@di.uminho.pt;
   taylor.riche@ni.com
OI Sobral, Joao/0000-0002-1512-1126; Goncalves, Rui C./0000-0002-7203-8935
FU FCT-Fundacao para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) [SFRH/BD/47800/2008]; NSF [CCF-0724979,
   CCF-1421211, OCI-1148125]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1421211] Funding
   Source: National Science Foundation; Fundação para a Ciência e a
   Tecnologia [SFRH/BD/47800/2008] Funding Source: FCT
FX We gratefully acknowledge helpful feedback from B. Marker (U. Texas) and
   from the anonymous reviewers. This work was partially supported by
   FCT-Fundacao para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) grant SFRH/BD/47800/2008. We also gratefully
   acknowledge support for this work by NSF grant CCF-0724979, CCF-1421211,
   and OCI-1148125.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], 2010, TR1039 U TEX AUST DE
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 1974, PROC IFIP C 74
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 1991, Basic Category Theory for Computer Scientists
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Batory D, 2004, PROC INT CONF SOFTW, P702, DOI 10.1109/ICSE.2004.1317496
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D., 2004, IEEE TSE
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Bettini L, 2013, ACTA INFORM, V50, P77, DOI 10.1007/s00236-012-0173-z
   Borger E., 2003, ABSTRACT STATE MACHI
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bull J. M., 1999, Proceedings of the ACM 1999 Java Grande Conference, P81, DOI 10.1145/304065.304103
   Chambers C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1806596.1806638
   Clement A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P277
   Coppit D, 2007, PROC INT CONF SOFTW, P754
   CZARNECKI K, 2005, GPCE, V3676, P422, DOI DOI 10.1007/11561347_28
   Czarnecki K., 2006, GPCE, P211
   Darema Frederica., 2001, RECENT ADV PARALLEL, V2131
   DeWitt D. J., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P44, DOI 10.1109/69.50905
   Feigenspan J., 2011, SPLC 11
   Frenkel D., 1996, Understanding molecular dynamics simulation from algorithms to applications
   Goncalves R. S., 2015, THESIS
   Gonçalves RC, 2016, SOFTW SYST MODEL, V15, P377, DOI 10.1007/s10270-014-0403-7
   Gorlick M.M., ICSE 91, P23
   Haber A., 2013, Proc. 7th International Workshop on Variability Modelling of Software-intensive Systems (VaMoS), p4:1, DOI DOI 10.1145/2430502.2430508
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Jarzabek S, 2003, PROC INT CONF SOFTW, P810, DOI 10.1109/ICSE.2003.1201298
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kolb R, 2005, PROC IEEE INT CONF S, P369
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Marker B., 2012, IWAPT 12
   Marker B., 2014, ASE 14
   McNeile Ashley., 2003, J OBJECT TECHNOL, V2, P85
   Pawlak R., 2006, Distributed Systems Online, IEEE, V7, P1
   Prehofer C., 2004, SOFTWARE SYSTEM MODE, V3, P221, DOI DOI 10.1007/s10270-003-0040-z
   Riche TaylorL., 2012, GPCE 12 P 11 ACM INT, P84
   Silva R.A., 2011, VAMOS 11, P151
   Singh N., 2007, ACP4IS 07
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thies W, 2008, THESIS
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Trujillo Salvador., 2006, GPCE 06 P 5 INT C GE, P191
   VERLET L, 1967, PHYS REV, V159, P98, DOI 10.1103/PhysRev.159.98
   Wasowski A, 2004, LECT NOTES COMPUT SC, V3154, P73
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
NR 54
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 929
EP 947
DI 10.1007/s10270-015-0495-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800002
DA 2024-07-18
ER

PT J
AU Biggs, G
   Sakamoto, T
   Kotoku, T
AF Biggs, Geoffrey
   Sakamoto, Takeshi
   Kotoku, Tetsuo
TI A profile and tool for modelling safety information with design
   information in SysML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE SysML; UML/SysML profile; Safety analysis; System design
ID DEPENDABILITY ANALYSIS; REAL-TIME; UML
AB Communication both between development teams and between individual developers is a common source of safety-related faults in safety-critical system design. Communication between experts in different fields can be particularly challenging due to gaps in assumed knowledge, vocabulary and understanding. Faults caused by communication failures must be removed once found, which can be expensive if they are found late in the development process. Aiding communication earlier in development can reduce faults and costs. Modelling languages for design have been shown through practical experience to improve communication through better information presentation and increased information consistency. In this paper, we describe a SysML profile designed for modelling the safety-related concerns of a system. The profile models common safety concepts from safety standards and safety analysis techniques integrated with system design information. We demonstrate that the profile is capable of modelling the concepts through examples. We also show the use of supporting tools to aid the application of the profile through analysis of the model and generation of reports presenting safety information in formats appropriate to the target reader. Through increased traceability and integration, the profile allows for greater consistency between safety information and system design information and can aid in communicating that information to stakeholders.
C1 [Biggs, Geoffrey; Kotoku, Tetsuo] Natl Inst Adv Ind Sci & Technol, Intelligent Syst Res Inst, Tsukuba, Ibaraki, Japan.
   [Sakamoto, Takeshi] Global Assist Inc, Tokyo, Japan.
C3 National Institute of Advanced Industrial Science & Technology (AIST)
RP Biggs, G (corresponding author), Natl Inst Adv Ind Sci & Technol, Intelligent Syst Res Inst, Tsukuba, Ibaraki, Japan.
EM geoffrey.biggs@aist.go.jp
RI Biggs, Geoffrey/M-6424-2016; Sakamoto, Takeshi/R-3323-2016; KOTOKU,
   Tetsuo/L-9605-2016
OI KOTOKU, Tetsuo/0000-0003-4126-5622
CR Addouche N, 2004, IEEE SYS MAN CYBERN, P5209
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 13849 ISO 1
   [Anonymous], 2012, OMG Systems Modeling Language (OMG SysML) Version 1.3
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2007, P 2007 INT SYST SAF
   [Anonymous], UML PROF MOD QUAL SE
   [Anonymous], DOING HARD TIME DEV
   [Anonymous], 2007, TECHNICAL REPORT
   [Anonymous], RCL101115 U FLOR DIP
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], 2010, 615082010 IEC
   [Anonymous], P 26 ANN NASA GODD S
   [Anonymous], 2007, 2007 2 I ENG TECHN I
   [Anonymous], 2006, TECHNICAL REPORT
   [Anonymous], 2011, ISO 26262: Road vehicles-Functional Safety International Organization for Standardization
   [Anonymous], 61205 IEC
   Basin D, 2005, NATO SCI SER II-MATH, V195, P353
   Basin D., 2011, P 16 ACM S ACCESS CO, P1, DOI DOI 10.1145/1998441.1998443
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Biffl Stefan, 2007, Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007), DOI 10.1109/WOSQ.2007.1
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Briones JF, 2007, LECT NOTES COMPUT SC, V4761, P93
   de Miguel MA, 2008, IET SOFTW, V2, P260, DOI 10.1049/iet-sen:20070050
   Friedenthal S., 2009, PRACTICAL GUIDE SYSM
   Frolund S., 1998, Distributed Systems Engineering, V5, P179, DOI 10.1088/0967-1846/5/4/005
   Hatebur D, 2011, LECT NOTES COMPUT SC, V6603, P232, DOI 10.1007/978-3-642-19811-3_17
   Huhn M, 2010, LECT NOTES COMPUT SC, V6100, P201, DOI 10.1007/978-3-642-16277-0_8
   IEC, IEC 60812: Analysis Techniques for System Reliability-Procedure for Failure Mode and Effects Analysis (FMEA)
   ISO, 2010, ISO 12100:2010
   Iwu F, 2007, RELIAB ENG SYST SAFE, V92, P156, DOI 10.1016/j.ress.2005.11.060
   Jürjens J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P683, DOI 10.1145/1368088.1368186
   Jürjens J, 2005, PROC INT CONF SOFTW, P322
   Jurjens J., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P187
   Kelly T., P DEPENDABLE SYSTEMS
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson N.G., 2011, ENG SAFER WORLD
   Lipaczewski M., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P159, DOI 10.1109/HASE.2012.34
   Lutz R.R., 1993, 1993 P IEEE INT S RE, P126
   Montecchi L., 2011, 2011 IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops, P254, DOI 10.1109/ISORCW.2011.32
   Montella A, 2005, TRANSPORT RES REC, P62, DOI 10.3141/1922-09
   Mustafiz S, 2008, SOFTW SYST MODEL, V7, P487, DOI 10.1007/s10270-008-0084-1
   Pai GJ, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/ISSRE.2002.1173261
   Panesar-Walawege RK, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P30, DOI 10.1109/ISSRE.2011.11
   Panesar-Walawege RK, 2011, LECT NOTES COMPUT SC, V6998, P362, DOI 10.1007/978-3-642-24606-7_27
   Ritter T., 2003, 36th Hawaii International Conference on Systems Sciences
   Tambe S, 2007, LECT NOTES COMPUT SC, V4526, P127
   Wilson SP, 1995, COMPUT J, V38, P765, DOI 10.1093/comjnl/38.10.765
   Zoughbi G, 2011, SOFTW SYST MODEL, V10, P337, DOI 10.1007/s10270-010-0164-x
NR 49
TC 35
Z9 39
U1 1
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 147
EP 178
DI 10.1007/s10270-014-0400-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200007
DA 2024-07-18
ER

PT J
AU Iqbal, MZ
   Ali, S
   Yue, T
   Briand, L
AF Iqbal, Muhammad Zohaib
   Ali, Shaukat
   Yue, Tao
   Briand, Lionel
TI Applying UML/MARTE on industrial projects: challenges, experiences, and
   guidelines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; MARTE; Real-Time Embedded Systems; Architecture Modeling;
   Model-based Testing; Industrial Case Studies
ID SYSTEMS; UML; METHODOLOGY; PROFILE; DESIGN
AB Modeling and Analysis of Real-Time and Embedded Systems (MARTE) is a Unified Modeling Language (UML) profile, which has been developed to model concepts specific to Real-Time and Embedded Systems (RTES). In the last 5 years, we have applied UML/MARTE to three distinct industrial problems in three industry sectors: architecture modeling and configuration of large-scale and highly configurable integrated control systems, model-based robustness testing of communication-intensive systems, and model-based environment simulator generation of large-scale RTES for testing. In this paper, we report on our experience of solving these problems by applying UML/MARTE on four industrial case studies. We highlight the challenges we faced with respect to the industrial adoption of MARTE. Based on our combined experience, we derive a framework to guide practitioners for future applications of UML/MARTE in an industrial context. The framework provides a set of detailed guidelines that help reduce the gap between the modeling notations and real-world industrial application needs.
C1 [Iqbal, Muhammad Zohaib] Natl Univ Comp & Emerging Sci FAST NU, Software Qual Engn & Testing Lab QUEST, Islamabad, Pakistan.
   [Ali, Shaukat; Yue, Tao] Simula Res Lab, Certus Ctr & V&V, Lysaker, Norway.
   [Ali, Shaukat; Briand, Lionel] Univ Luxembourg, Software Verificat & Validat Lab, SnT Ctr, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Iqbal, MZ (corresponding author), Natl Univ Comp & Emerging Sci FAST NU, Software Qual Engn & Testing Lab QUEST, Islamabad, Pakistan.
EM zohaib.iqbal@nu.edu.pk
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577; Ali, Shaukat/0000-0002-9979-3519; Iqbal,
   Muhammad Zohaib Z/0000-0001-8190-5327
FU ICT R&D Fund, Pakistan [ICTRDF/MBTToolset/2013]; National Research Fund,
   Luxembourg [FNR/P10/03]
FX We are thankful to our industry partners from FMC Technologies, Cisco
   Systems, Tomra, and Westerngeco, all from Norway for their technical
   support. Muhammad Zohaib Iqbal was partly supported by ICT R&D Fund,
   Pakistan (ICTRDF/MBTToolset/2013) and by National Research Fund,
   Luxembourg (FNR/P10/03). Lionel Briand was supported by the National
   Research Fund, Luxembourg (FNR/P10/03).
CR Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   AMERICA P, 2001, INTRO DOMAIN ANAL
   [Anonymous], 6101219901990 IEEE
   [Anonymous], 2010, Unified Modeling Language (UML)
   [Anonymous], ISO912632003
   [Anonymous], 2006, IEEE Std 982.1-2005, P1
   [Anonymous], CONCR SYNT UML ACT L
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Artemis, 2013, ART JOINT UND PUBL P
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Belategi L, 2014, J SOFTW-EVOL PROC, V26, P419, DOI 10.1002/smr.1568
   Briand Lionel, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P793, DOI 10.1007/978-3-642-33666-9_50
   Choi J, 2012, COMM COM INF SC, V352, P107
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   Espinoza H., 2008, DESIGN AUTOMATION TE
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Heinecke H., 2006, EUR C
   Henia R., 2012, 4 INT WORKSH NONF SY, P7
   IBM, 2011, IBM RAT RHAPS
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Iqbal Muhammad Zohaib, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P136, DOI 10.1007/978-3-642-33119-0_11
   Iqbal M. Z., 2011, 201119 SIM RES LAB
   Iqbal M.Z., 2011, 201104 SIM RES LAB
   Iqbal M.Z., 2012, Proceedings of the International Symposium on Software Testing and Analysis, P199
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Kaufmann M., 2008, SYSMOD THE SYSTEMS M, P83
   Koudri A, 2011, LECT NOTES COMPUT SC, V6981, P243, DOI 10.1007/978-3-642-24485-8_18
   Lagarde F., 2008, FUNDAMENTAL APPROACH
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Medina JL, 2011, LECT NOTES COMPUT SC, V6652, P89, DOI 10.1007/978-3-642-21338-0_7
   Merseguer J, 2012, DISCRETE EVENT DYN S, V22, P163, DOI 10.1007/s10626-011-0111-1
   Middleton S. E., 2010, ECHALLENGES 2010, P1
   Mraidha C., 2011, ACM SIGSOFT Softw Eng Notes, V36, P1, DOI [10.1145/1921532.1921555, DOI 10.1145/1921532.1921555]
   Oldevik J., 2006, MOFSCRIPT USER GUIDE
   OMG, 2011, MOD AN REAL TIM EMB
   OMG, 2010, UML PROF SCHED PERF
   Peñil P, 2010, INNOV SYST SOFTW ENG, V6, P65, DOI 10.1007/s11334-009-0105-4
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Quadri IR, 2012, J SYST ARCHITECT, V58, P178, DOI 10.1016/j.sysarc.2012.01.001
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Software Assurance Standard, NASASTD873982005
   Sun Q., 2013, TRUSTWORTHY COMPUTIN, P474
   Suss J., 2008, WORKSH EQ BAS OBJ OR, P17
   Vidal J, 2009, DES AUT TEST EUROPE, P226
   Yue T., 2012, 201206 SIM RES LAB
NR 47
TC 8
Z9 11
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1367
EP 1385
DI 10.1007/s10270-014-0405-5
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900005
DA 2024-07-18
ER

PT J
AU Fürst, L
   Mernik, M
   Mahnic, V
AF Fuerst, Luka
   Mernik, Marjan
   Mahnic, Viljan
TI Converting metamodels to graph grammars: doing without advanced graph
   grammar features
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodel; UML; Graph grammar; Parsability; Parsing; Semantic
ID OPERATIONAL SEMANTICS; VISUAL LANGUAGES
AB In this paper, we present a method to convert a metamodel in the form of a UML class diagram into a context-sensitive graph grammar whose language comprises precisely the set of model graphs (UML object diagrams) that conform to the input metamodel. Compared to other approaches that deal with the same problem, we use a graph grammar formalism that does not employ any advanced graph grammar features, such as application conditions, precedence rules, and production schemes. Specifically, we use Rekers and Schurr's Layered Graph Grammars, which may be regarded as a pure generalization of standard context-sensitive string grammars. We show that elementary grammatical features, i.e., grammar labels and context-sensitive graph rewrite rules, suffice to represent metamodels with arbitrary multiplicities and inheritance. Inspired by attribute string grammars, we also propose a graph-grammar-based approach to the semantic analysis of model graphs.
C1 [Fuerst, Luka; Mahnic, Viljan] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
   [Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, Maribor 2000, Slovenia.
C3 University of Ljubljana; University of Maribor
RP Fürst, L (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Trzaska Cesta 25, Ljubljana 1000, Slovenia.
EM luka.fuerst@fri.uni-lj.si; marjan.mernik@uni-mb.si;
   viljan.mahnic@fri.uni-lj.si
RI Mernik, Marjan/A-1147-2008; Mahnic, Viljan/L-6206-2019
OI Mernik, Marjan/0000-0002-2775-0667; Mahnic, Viljan/0000-0002-4196-2084
CR ALANEN M, 2003, 606 TURK CTR COMP SC
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], SOFTW SYST MODEL
   Bottoni P, 2000, IEEE VISLANG, P59, DOI 10.1109/VL.2000.874351
   Bttner Fabian., 2004, Electmnic Notes in Theoretical Computer Science, V109, P31
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Chen K, 2007, DES AUT TEST EUROPE, P906
   Di Ruscio D., 2006, 0602 INRIALINA
   Dinh-Trong TT, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P95
   Drewes F, 2010, THEOR COMPUT SCI, V411, P3090, DOI 10.1016/j.tcs.2010.04.038
   EHRIG H, 1997, HDB GRAPH GRAMMARS C, V1
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Fürst L, 2011, IET SOFTW, V5, P246, DOI 10.1049/iet-sen.2010.0081
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gray Jeff., 2007, HDB DYNAMIC SYSTEM M
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Hoffmann B., 2011, ELECT COMMUNICATIONS, V39
   Javed F, 2008, APPL ARTIF INTELL, V22, P707, DOI 10.1080/08839510802164127
   Javed F, 2008, INFORM SOFTWARE TECH, V50, P948, DOI 10.1016/j.infsof.2007.08.003
   Kelly S., 2008, Domain-Specific Modeling
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P143, DOI 10.1016/j.entcs.2005.10.022
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   Sadilek DA, 2009, LECT NOTES BUS INF P, V33, P348
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sen Sagar, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P328, DOI 10.1109/ICST.2008.62
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Yu LJ, 2008, LECT NOTES COMPUT SC, V5301, P234
NR 35
TC 13
Z9 13
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1297
EP 1317
DI 10.1007/s10270-013-0380-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200012
DA 2024-07-18
ER

PT J
AU Rathfelder, C
   Klatt, B
   Sachs, K
   Kounev, S
AF Rathfelder, Christoph
   Klatt, Benjamin
   Sachs, Kai
   Kounev, Samuel
TI Modeling event-based communication in component-based software
   architectures for performance predictions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Event-based; Performance model; Performance evaluation; Software
   architecture; Component-based
ID PLATFORM; SYSTEMS; TIME
AB Event-based communication is used in different domains including telecommunications, transportation, and business information systems to build scalable distributed systems. Such systems typically have stringent requirements for performance and scalability as they provide business and mission critical services. While the use of event-based communication enables loosely-coupled interactions between components and leads to improved system scalability, it makes it much harder for developers to estimate the system's behavior and performance under load due to the decoupling of components and control flow. In this paper, we present our approach enabling the modeling and performance prediction of event-based systems at the architecture level. Applying a model-to-model transformation, our approach integrates platform-specific performance influences of the underlying middleware while enabling the use of different existing analytical and simulation-based prediction techniques. In summary, the contributions of this paper are: (1) the development of a meta-model for event-based communication at the architecture level, (2) a platform aware model-to-model transformation, and (3) a detailed evaluation of the applicability of our approach based on two representative real-world case studies. The results demonstrate the effectiveness, practicability and accuracy of the proposed modeling and prediction approach.
C1 [Rathfelder, Christoph; Klatt, Benjamin] FZI Res Ctr Informat Technol, Karlsruhe, Germany.
   [Sachs, Kai] SAP AG, Walldorf, Germany.
   [Kounev, Samuel] Karlsruhe Inst Technol, D-76021 Karlsruhe, Germany.
C3 SAP; Helmholtz Association; Karlsruhe Institute of Technology
RP Rathfelder, C (corresponding author), FZI Res Ctr Informat Technol, Karlsruhe, Germany.
EM rathfelder@fzi.de; klatt@fzi.de; kai.sachs@sap.com; kounev@kit.edu
FU German Research Foundation [KO 3445/6-1]
FX This work was partially funded by the German Research Foundation (grant
   No. KO 3445/6-1).
CR [Anonymous], P 3 ACM INT C DISTR
   [Anonymous], 2008, REVOLUTIONIZING DATA
   Bacon J, 2008, CONSUM COMM NETWORK, P687, DOI 10.1109/ccnc08.2007.158
   Balasubramanian K, 2007, J COMPUT SYST SCI, V73, P171, DOI 10.1016/j.jcss.2006.04.008
   BECKER S, 2008, KARLSRUHE SERIES SOF, V1
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Brosig F., 2011, 26 IEEE ACM INT C AU
   Carzaniga A., 1998, ISAW, P17
   Castelli S., 2007, DEBS 07, P38
   CORTELLESSA V, 2005, WOSP 2005, P195
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4422, P57
   Cortellessa V, 2007, IEEE T SOFTWARE ENG, V33, P385, DOI 10.1109/TSE.2007.1014.
   Di Marco A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P37, DOI 10.1109/WICSA.2004.1310688
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Evans D., 2010, INTERTRAFFIC WORLD A, P52
   Gokhale A., 2002, P OOPSLA WORKSH GEN
   Gomaa H., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P117, DOI 10.1145/350391.350418
   GRASSI V, 2005, WOSP 05, P25
   Gu G.P., 2002, P 3 INT WORKSHOP SOF, P227
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Happe J, 2010, PERFORM EVALUATION, V67, P694, DOI 10.1016/j.peva.2009.07.006
   Henjes R., 2006, DISTR COMP SYST WORK
   Hinze A.M., 2010, Principles and applications of distributed event-based systems
   HOHPE G, 2008, ENTERPRISE INTEGRATI
   Hunt P., 1981, LR1014 TRANSP ROAD R
   Ingram D., 2009, P 3 ACM INT C DISTR
   Klatt B., 2011, 7 ACM SIGSOFT INT C
   Kounev S., 2009, IT INFORM TECHNOLOGY, V5
   KOUNEV S, 2008, P 11 IEEE INT S OBJ
   Kounev S., 2010, EMERGING RES DIRECTI
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Liu Y, 2005, LECT NOTES COMPUT SC, V3489, P1
   Martinsky O., 2006, JAVAANPR AUTOMATIC N
   MARZOLLA M, 2004, THESIS U CA FOSCARI
   Meier Philipp, 2011, 19 IEEE ACM INT S MO
   Menasce D.A., 2004, PERFORMANCE DESIGN
   Menth M., 2006, P ICDCS 06 WASH DC U
   Muhl G., 2009, P 15 INT EUR C PAR D
   Muhl G, 2006, Distributed Event-Based Systems
   OMG O., 2006, UML PROF MOD AN REAL
   OMG O, 2003, MDA GUID V1 0 1
   OMG O., 2005, UML PROF SCHED PERF
   Petriu D.C., 2000, P AGTIVE 99 KERKR, V1779
   Rathfelder C., 2012, THESIS KARLSRUHE I T
   Rathfelder C., 2010, P 4 ACM INT C DISTR
   Rathfelder C, 2010, LECT NOTES COMPUT SC, V6342, P219
   Rathfelder C, 2009, QUASSOSS 09: 1ST INTERNATIONAL WORKSHOP ON THE QUALITY OF SERVICE-ORIENTED SOFTWARE SYSTEM, P33
   Sachs K., SOFTWARE SYSTEMS MOD, P1
   Sachs K., 2011, THESIS TU DARMSTADT
   Sachs K, 2009, PERFORM EVALUATION, V66, P410, DOI 10.1016/j.peva.2009.01.003
   Schroter A., 2010, 4 ACM INT C DISTR EV
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Sun Microsystems, 2002, JAV MESS SERV JMS SP
   Verdickt T, 2005, IEEE T SOFTWARE ENG, V31, P695, DOI 10.1109/TSE.2005.88
   Westermann D, 2010, EUROMICRO CONF PROC, P31, DOI 10.1109/SEAA.2010.24
NR 56
TC 7
Z9 9
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1291
EP 1317
DI 10.1007/s10270-013-0316-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300006
DA 2024-07-18
ER

PT J
AU Ivanovic, A
   America, P
   Snijders, C
AF Ivanovic, Ana
   America, Pierre
   Snijders, Chris
TI Modeling customer-centric value of system architecture investments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Customer value; Architecture investments; Software architecture;
   Decision making; Customer value-in-use; Customer segments; Value-based
   software engineering; Strategy maps; Balanced scorecards; Case study
ID DECISIONS
AB System architecture investments aim at improving the quality of the system in alignment with (current and future) business goals. While the costs of architecture changes are routinely calculated, identifying benefits of architecture changes and translating them to a monetary value has been a challenge in practice. Currently, architecture value estimation is largely based on cost-savings or on risk mitigation, without much reliance on potential customer benefits. This article reports on our experience in modeling the customer value and evaluating its potential use in choosing between different system architectures in two case studies conducted in an organization developing healthcare systems. To model the customer value, we exploit best practices in management and marketing. Management tools, in particular strategy maps and balanced scorecards, are used to identify customer-centric benefits caused by architecture design decisions. Furthermore, two marketing concepts, customer value-in-use and customer segments, are adopted to quantify the value of architecture changes for a single customer and multiple customers, respectively. The paper shows that using the customer value in addition to the existing value indicators in the organization has several advantages but also calls for future improvements to be adopted in practice.
C1 [Ivanovic, Ana; America, Pierre] Philips Res, NL-5656 AE Eindhoven, Netherlands.
   [Snijders, Chris] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Philips; Philips Research; Eindhoven University of Technology
RP Ivanovic, A (corresponding author), Philips Res, High Tech Campus 34, NL-5656 AE Eindhoven, Netherlands.
EM Ana.Ivanovic@philips.com; Pierre.America@philips.com;
   c.c.p.snijders@tue.nl
CR Anderson J.C., 1993, CUSTOMER VALUE ASSES
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2004, Strategy & leadership, DOI DOI 10.1016/J.BMC.2004.12.042
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Berry M, 2006, VALUE-BASED SOFTWARE ENGINEERING, P155, DOI 10.1007/3-540-29263-2_8
   BEVAN N, 1994, BEHAV INFORM TECHNOL, V13, P132, DOI 10.1080/01449299408914592
   Blocker CP, 2007, IND MARKET MANAG, V36, P810, DOI 10.1016/j.indmarman.2006.05.016
   BOCKLE G, 2003, 5 INT WORKSH PROD FA
   Boehm BarryW., 2006, VALUE BASED SOFTWARE
   Breeuwer M., 2008, MEDICAMUNDI, V52, P68
   Brown N, 2010, FSE SDP WORKSH FUT S
   Carroll J.S.E.J. Johnson., 1990, Decision Research: A Field Guide
   Clements P, 2009, IEEE SOFTWARE, V26, P70, DOI 10.1109/MS.2009.83
   Clements Paul C., 2005, CMUSEI2005TR003
   Day G., 1990, MARKET DRIVEN STRATE
   Dibb S, 2001, IND MARKET MANAG, V30, P609, DOI 10.1016/S0019-8501(99)00127-3
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Gupta S, 2006, MARKET SCI, V25, P718, DOI 10.1287/mksc.1060.0221
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Honour EC., 2004, INCOSE INT S
   Hooley Graham., 1993, Competitive Positioning: The Key to Market Success
   Ivanovic A., 2011, THESIS EINDHOVEN U T
   Ivanovic A, 2011, EMBED SYST, P245, DOI 10.1007/978-90-481-9849-8_15
   JANSEN A, 2005, 5 WORK IEEE IFIP C S
   Kaplan RS, 2008, HARVARD BUS REV, V86, P62
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kazman R., 2005, CMUSEI2005TR021
   Kazman Rick., 2002, Making Architecture Design Decisions: An Economic Approach
   Keiningham TL, 2007, J MARKETING, V71, P39, DOI 10.1509/jmkg.71.3.39
   Kotler P., 2008, Marketing Management, V13th
   Moore M, 2003, PROC INT CONF SOFTW, P557, DOI 10.1109/ICSE.2003.1201237
   Muller G., 2011, Systems Architecting: A Business Perspective
   NORMANN R, 1993, HARVARD BUS REV, V71, P65
   Ondategui-Parra S, 2005, RADIOLOGY, V236, P214, DOI 10.1148/radiol.2361040456
   ROMMES E, 2006, SOFTWARE PRODUCT LIN
   Schmid K., 2003, 5 INT WORKSH PROD FA
   Tennent J., 2005, GUIDE BUSINESS MODEL, V2
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   VanDeLaar P, 2011, EMBED SYST, P1
   Yin R.K., 2011, Qualitative research from start to finish
NR 41
TC 3
Z9 3
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 369
EP 385
DI 10.1007/s10270-012-0235-2
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 164XS
UT WOS:000320446300010
DA 2024-07-18
ER

PT J
AU Cook, S
AF Cook, Steve
TI Looking back at UML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML
AB This paper sets out in detail the development of the Unified Modeling Language and its derivatives from its beginning until the present. The paper describes the processes that were used to develop the language, the architecture and intended uses of the language, its strengths and weaknesses, and the steps that are being taken to make it ready for future developments.
C1 Microsoft Corp, Cambridge, England.
RP Cook, S (corresponding author), Microsoft Corp, Cambridge, England.
EM stcook@microsoft.com
CR [Anonymous], 2011, MET EXT FAC RFP
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2009, UML PROF MOD AN REAL
   [Anonymous], ECL IMPL UML 2
   [Anonymous], 1987, P ECOOP 87 SEPC ISS
   [Anonymous], 2007, DIAGR DEF RFP
   [Anonymous], 1987, ACM SIGPLAN NOTICES, V22
   [Anonymous], 1989, BYTE MAGAZINE, V6, P1
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], COMM WAR MET
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 1986, ACM SIGPLAN NOTICES, V21
   [Anonymous], 1989, Modern structured analysis
   Bell A.E., 2004, ACM QUEUE, V2
   Bezivin J., SPEM UML PROFILES
   Bezivin J., NICOISE SALAD SALADE
   BOOCH G., 1987, SOFTWARE COMPONENTS
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Clark T., 2001, P 1 WORKSH LANG DESC
   Coleman D., 1993, OBJECT ORIENTED DEV
   Cook S., 1994, DESIGNING OBJECT SYS
   Cook S., 2004, MDA J
   Cook S.J., 2000, LECT NOTES COMPUTER, V1939
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   EVANS A, 1998, LECT NOTES COMPUTER, V1618
   Fowler M., 2004, UML DISTILLED, VThird
   Fowler M., UMLMODE
   Fowler M., 2010, Domain-specific languages
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HUTT A, 1994, OBJECT ANAL DESIGN C
   Hutt A., 1994, OBJECT ANAL DESIGN D
   Jackson Michael., 1983, SYSTEM DEV
   Jacobson I., ROAD AHCAD UML
   Kobryn C, 1999, COMMUN ACM, V42, P29, DOI 10.1145/317665.317673
   Kobryn C., 1999, LECT NOTES COMPUTER, V1723
   Loomis M.E.S., 1987, P ECOOP 87 SPEC ISS
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Milicev D., 2007, IEEE T SOFTW ENG, V33
   Miller J., 3C SUBMISSION UML 2
   *OBJ MAN GROUP, 1991, COMM OBJ REQ BROK AR
   *OBJ MAN GROUP, 1996, OBJ AN DES RFP 1
   *OBJ MAN GROUP, 2008, BUS PROC MOD NOT
   Object Management Group, 2000, SOFTW SYST PROC ENG
   Object Management Group, 2000, MET FAC COR
   Object Management Group, 2011, SEM FDN SUBS EX UML
   Object Management Group, 2009, UN PROF DEP DEF ARCH
   Object Management Group, 1995, OBJ AN DES RFI
   Object Management Group, 2000, XML MET INT
   Object Management Group, 2000, UML 2 0 INFR RFP
   Object Management Group, 2008, MOF 2 0 QUERY VIEW T
   Object Management Group, 1999, UML 2 0 REQ INF
   Object Management Group, 2000, UML 2 0 SUP RFP
   Object Management Group, 2006, UML DIAGR INT
   Object Management Group, 1997, UML 1 1 SPEC
   Object Management Group, 2003, MOF 2 0 FAC OBJ LIF
   Object Management Group, 2007, SYST MOD LANG
   OBJECT MANAGEMENT GROUP, 2009, SERV OR ARCH MOD LAN
   REENSKAUG T, 1996, WORKING OBJECTS
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Rumbaugh James, 1999, The unified modeling language reference manual
   Series Z., 1999, LANGUAGES GEN SOFTWA
   SHLAER S., 1991, Object Lifecycles: Modeling the World in States
   Stoy Joseph E., 1977, DENOTATIONAL SEMANTI
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   Warmerz J., 1998, SPRINGER LECT NOTES, V1357
   Wegner P., 1987, ACM SIGPLAN NOTICES, V22
   Zito A., 2006, LECT NOTES COMPUTER, V4199
NR 70
TC 13
Z9 18
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 471
EP 480
DI 10.1007/s10270-012-0256-x
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500003
DA 2024-07-18
ER

PT J
AU Kessentini, M
   Sahraoui, H
   Boukadoum, M
   Ben Omar, O
AF Kessentini, Marouane
   Sahraoui, Houari
   Boukadoum, Mounir
   Ben Omar, Omar
TI Search-based model transformation by example
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Search-based software engineering; Automated model transformation;
   Transformation by example
ID OPTIMIZATION
AB Model transformation (MT) has become an important concern in software engineering. In addition to its role in model-driven development, it is useful in many other situations such as measurement, refactoring, and test-case generation. Roughly speaking, MT aims to derive a target model from a source model by following some rules or principles. So far, the contributions in MT have mostly relied on defining languages to express transformation rules. However, the task of defining, expressing, and maintaining these rules can be difficult, especially for proprietary and non-widely used formalisms. In some situations, companies have accumulated examples from past experiences. Our work starts from these observations to view the transformation problem as one to solve with fragmentary knowledge, i.e. with only examples of source-to-target MTs. Our approach has two main advantages: (1) it always proposes a transformation for a source model, even when rule induction is impossible or difficult to achieve; (2) it is independent from the source and target formalisms; aside from the examples, no extra information is needed. In this context, we propose an optimization-based approach that consists of finding in the examples combinations of transformation fragments that best cover the source model. To that end, we use two strategies based on two search-based algorithms: particle swarm optimization and simulated annealing. The results of validating our approach on industrial projects show that the obtained models are accurate.
C1 [Kessentini, Marouane; Sahraoui, Houari; Ben Omar, Omar] Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
   [Boukadoum, Mounir] Univ Quebec, Dept Informat, Montreal, PQ H3C 3P, Canada.
C3 Universite de Montreal; University of Quebec; University of Quebec
   Montreal
RP Kessentini, M (corresponding author), Univ Montreal, Dept Informat & Rech Operat, CP 6128,Succ Ctr Ville, Montreal, PQ H3C 3J7, Canada.
EM kessentm@iro.umontreal.ca; sahraouh@iro.umontreal.ca;
   mounir.boukadoum@uqam.ca; benomaro@iro.umontreal.ca
RI Keller, Jeffrey N/N-1975-2017
CR AAMODT A, 1994, AI COMMUN, V7, P39
   Akehurst D., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P243
   ANDRIES M, 1996, 796 U BREM
   [Anonymous], P MOD TRANSF PRACT W
   [Anonymous], 1993, Watch what I do: programming by demonstration
   ATLAS Group, 2000, ATLAS TRANSF LANG
   Behrens U, 1996, IEEE T NUCL SCI, V43, P65, DOI 10.1109/23.486006
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1893
   Bunke H., 2000, P 2000 VIS INT, P82
   Clark T., 2002, Object Modeling with the OCL, The Rationale behind the Object Constraint Language
   Coming DS, 2008, IEEE T VIS COMPUT GR, V14, P1, DOI 10.1109/TVCG.2007.70405
   Compuware, 2003, 20030807 OMG
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2003, OOSPLA 03 WORKSH GEN
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Duan YC, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P184
   Eberhart RC, 2001, IEEE C EVOL COMPUTAT, P81, DOI 10.1109/CEC.2001.934374
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   EGYED AF, 2000, THESIS U SO CALIFORN
   Falleri J. R., 2006, TRACEBILITY FRAMEWOR
   Falleri J.R., 2008, ACM IEEE 11 INT C MO
   France R., 2007, INT C SOFTW ENG ICSE
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   García-Magariño I, 2009, LECT NOTES COMPUT SC, V5563, P52, DOI 10.1007/978-3-642-02408-5_5
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, P 29 INT C SOFTW ENG
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Interactive Objects and Project Technology, 2003, AD030811 OMG INT OBJ
   Interactive Objects Software GmbH Project Technology Inc, 2003, AD20030811 OMG
   JOUAULT F, 2005, P EUR C MOD DRIV ARC
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kessentini M., 2010, P 6 EUR C MOD FDN AP
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Krishnamurthy R., 1983, Proceedings of the 9th International Conference on Very Large Data Bases (VLDB '83), P305
   Kuster J.M., 2004, P UML 2004 WORKSH OC
   Lechner S., 2003, P DEXA 03
   MARVIE R, 2004, LIFL200410
   Mens T., 2005, P GRAPH MOD TRANSF W
   Mitra D., 1985, P 1985 DEC CONTR CON, V5
   Object Management Group (OMG), 2005, PTC051101 OMG
   *OMG, 2002, AD20020410 OMG
   OMG, MET OBJ FAC MOF VERS
   QVT-Merge Group, 2004, AD20040401 QVT OMG M
   Repenning A, 2000, COMMUN ACM, V43, P90, DOI 10.1145/330534.330546
   SALMAN A, 2001, IASTED INT C ART INT
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shousha M, 2008, LECT NOTES COMPUT SC, V5301, P475, DOI 10.1007/978-3-540-87875-9_34
   Siikarla MP, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P123
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   TAENTZER G., 2003, P TOOL EX FORM METH
   Taentzer G., 2005, WORKSH MOD TRANSF PR
   VAN GORP P, 2005, P INT WORKSH GRAPH M
   Vanhoof B., 2007, P TRAC WORKSH EUR C
   VARRO D, 2007, ACM S APPL COMP MOD
   VARRO D, 2004, LNCS, V3273
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   WIMMER M, 2007, P HICSS 40 HAW INT C
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
NR 65
TC 56
Z9 60
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 209
EP 226
DI 10.1007/s10270-010-0175-7
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300006
DA 2024-07-18
ER

PT J
AU Prout, A
   Atlee, JM
   Day, NA
   Shaker, P
AF Prout, Adam
   Atlee, Joanne M.
   Day, Nancy A.
   Shaker, Pourya
TI Code generation for a family of executable modelling notations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Code generation
ID SEMANTICS
AB We are investigating semantically configurable model-driven engineering (MDE). The goal of this work is a modelling environment that supports flexible, configurable modelling notations, in which specifiers can configure the semantics of notations to suit their needs and yet still have access to the types of analysis tools and code generators normally associated with MDE. In this paper, we describe semantically configurable code generation for a family of behavioural modelling notations. The family includes variants of statecharts, process algebras, Petri Nets, and SDL88. The semantics of this family is defined using template semantics, which is a parameterized structured operational semantics in which parameters represent semantic variation points. A specific notation is derived by instantiating the family's template semantics with parameter values that specify semantic choices. We have developed a code-generator generator (CGG) that creates a suitable Java code generator for a subset of derivable modelling notations. Our prototype CGG supports 26 semantics parameters, 89 parameter values, and 7 composition operators. As a result, we are able to produce code generators for a sizable family of modelling notations, though at present the performance of our generated code is about an order of magnitude slower than that produced by commercial-grade generators.
C1 [Prout, Adam; Atlee, Joanne M.; Day, Nancy A.; Shaker, Pourya] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Atlee, JM (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM aprout@uwaterloo.ca; jmatlee@uwaterloo.ca; nday@uwaterloo.ca;
   p2shaker@uwaterloo.ca
RI Atlee, Joanne/KCY-7928-2024
CR [Anonymous], CMUSEI2001TR022
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   *APESOFT, 2008, SMARTST V4 1 0
   APPEL AW, 1985, P ACM S PRIN PROG LA, P315
   Baresi L, 2005, ACM T SOFTW ENG METH, V14, P42, DOI 10.1145/1044834.1044836
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bjrklund D., 2003, P FOR SPEC DES LANG, P21
   BURMESTER S, 2003, TRRI03244 U PAD
   CLEAVELAND C, 2001, PROGRAM GENERATORS X
   Cleaveland R, 2002, SCI COMPUT PROGRAM, V42, P39, DOI 10.1016/S0167-6423(01)00033-8
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   D'Ambrogio A., 2005, P ACM 5 INT WORKSHOP, P75, DOI DOI 10.1145/1071021.1071029
   Day NA, 1999, LECT NOTES COMPUT SC, V1690, P341
   Diehl S., 2000, Formal Aspects of Computing, V12, P71, DOI 10.1007/PL00003929
   Dillon LK, 2003, IEEE T SOFTWARE ENG, V29, P133, DOI 10.1109/TSE.2003.1178052
   Esmaeilsabzali S, 2010, REQUIR ENG, V15, P235, DOI 10.1007/s00766-010-0102-z
   FLOCH J, 1995, PROC INT CONF SOFTW, P211, DOI 10.1145/225014.225034
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gao JM, 2007, LECT NOTES COMPUT SC, V4422, P102
   HANNAN J, 1994, ACM T PROGR LANG SYS, V16, P1215, DOI 10.1145/183432.183458
   Hannan J., 1992, MATH STRUCT COMPUT S, V2, P415, DOI [DOI 10.1017/S0960129500001559, 10.1017/S0960129500001559]
   Harel D., 1987, Proceedings of the Symposium on Logic in Computer Science (Cat. No.87CH2464-6), P54
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Heimdahl MPE, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P210, DOI 10.1109/ISRE.1997.566871
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hoare CAR., 1985, Communicating Sequential Processes
   IBM, 2005, RAT ROS REALTIME V7
   IBM, 2010, RAT SDL SUIT
   IBM, 2007, RAT RHAPS J V7 4
   *ISO, 1988, ISO8807
   *ITU T, 1999, Z100 ITUT
   JONES ND, 1980, LNCS, V94
   Kelly S., 2008, Domain-Specific Modeling
   Knaack J.L., 1995, THESIS U IOWA
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   Lu Y, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P320, DOI 10.1109/ASE.2004.1342756
   Mathworks, 2010, STAT 7
   MathWorks, 2010, SIM
   McMillan K. L., 1993, Symbolic model checking
   Milner R., 1989, Communication and concurrency
   Mosses P.D., 1992, ACTION SEMANTICS
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Niu J., 2005, THESIS U WATERLOO
   Niu JW, 2003, IEEE T SOFTWARE ENG, V29, P866, DOI 10.1109/TSE.2003.1237169
   Niu JW, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P188
   *OBJ MAN GROUP, 2005, FORMAL050704 OBJ MAN
   Paulson L., 1982, Symposium on Principles of Programming Languages, P224
   Pezze M, 1997, PROC INT CONF SOFTW, P239, DOI 10.1145/253228.253278
   Plotkin G. D., 1981, A structural approach to operational semantics
   PROUT A, 2005, THESIS U WATERLOO
   Prout A, 2008, LECT NOTES COMPUT SC, V5301, P705, DOI 10.1007/978-3-540-87875-9_49
   Selic B., 1994, REAL TIME OBJECT ORI
   Smith KW, 1997, DR DOBBS J, V22, P64
   Swint G.S., 2005, P 20 IEEE ACM INT C, P144
   Taleghani A, 2006, LECT NOTES COMPUT SC, V4199, P245
   Tiella R., 2007, PPPJ 07 P 5 INT S PR, P93
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   von der Beeck M., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P128
   Wasowski A, 2003, ACM SIGPLAN NOTICES, V38, P163, DOI 10.1145/780731.780755
   WindRiver, 2005, BETT
   Yavuz-Kahveci T., 2002, Software Engineering Notes, V27, P169, DOI 10.1145/566171.566199
   Zave P., 2002, INT C AUT LANG PROGR
NR 66
TC 10
Z9 10
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 251
EP 272
DI 10.1007/s10270-010-0176-6
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300008
DA 2024-07-18
ER

PT J
AU Ducasse, S
   Girba, T
   Kuhn, A
   Renggli, L
AF Ducasse, Stephane
   Girba, Tudor
   Kuhn, Adrian
   Renggli, Lukas
TI Meta-environment and executable meta-language using smalltalk: an
   experience report
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Meta behavior description; Reflective language; Executable modeling
   language; Smalltalk
AB Object-oriented modelling languages such as EMOF are often used to specify domain specific meta-models. However, these modelling languages lack the ability to describe behavior or operational semantics. Several approaches have used a subset of Java mixed with OCL as executable meta-languages. In this experience report we show how we use Smalltalk as an executable meta-language in the context of the Moose reengineering environment. We present how we implemented EMOF and its behavioral aspects. Over the last decade we validated this approach through incrementally building a meta-described reengineering environment. Such an approach bridges the gap between a code-oriented view and a meta-model driven one. It avoids the creation of yet another language and reuses the infrastructure and run-time of the underlying implementation language. It offers an uniform way of letting developers focus on their tasks while at the same time allowing them to meta-describe their domain model. The advantage of our approach is that developers use the same tools and environment they use for their regular tasks. Still the approach is not Smalltalk specific but can be applied to language offering an introspective API such as Ruby, Python, CLOS, Java and C#.
C1 [Ducasse, Stephane; Girba, Tudor; Kuhn, Adrian; Renggli, Lukas] Univ Bern, Software Composit Grp, Bern, Switzerland.
   [Ducasse, Stephane] CNRS, LIFL USTL1, INRIA Lille Nord Europe, ADAM Team,Language & Software Evolut Grp,UMR, F-8022 Lille, France.
C3 University of Bern; Centre National de la Recherche Scientifique (CNRS);
   Universite de Lille
RP Ducasse, S (corresponding author), Univ Bern, Software Composit Grp, Bern, Switzerland.
EM stephane.ducasse@free.fr
OI Ducasse, Stephane/0000-0001-6070-6599
CR [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 1992, Literate Programming
   ATKINSON C, 2005, LNCS, V3713, P19
   ATKINSON C, 2001, LNCS, V2185, P19
   BERGEL A, 2005, P INT C OBJ OR PROGR, P177
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Bobrow D.G., 1993, Object-Oriented Programming: The CLOS Perspective, P29
   BOBROW DG, 1988, 88003 ANSI COMMON LI
   Clark T., 2004, APPL METAMODELLING F
   Demeyer S, 1999, LECT NOTES COMPUT SC, V1723, P630
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Demeyer Serge, 1999, P 6 WORK C REV ENG W
   DEMICHIEL LG, 1987, LECT NOTES COMPUT SC, V276, P151
   DEVOS M, 1998, OOPSLA 98 PRACTIONER
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   DUCASSE S, 1999, FAMOOS OBJECT ORIENT
   DUCASSE S, 2005, TOOLS SOFTWARE MAINT, P55
   Ducasse S, 2006, LECT NOTES COMPUT SC, V4199, P604
   FLEUREY F, 2006, THESIS U RENNES 1
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   GREEVY O, 2007, THESIS U BERNE
   JOHNSON R, 1998, PATTERN LANGUAGES PR, V3, pCH4
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   MAES P, 1987, THESIS VRIJE U BRUSS
   MAES P, 1987, P OOPSLA 87, V22, P147
   Matula M., 2003, Netbeans metadata repository
   MELLOR SJ, 1998, LNCS, V1618, P281
   Meyer M., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P135, DOI DOI 10.1145/1148493.1148513
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Muller Pierre-Alain., 2005, Software and Systems Modeling, V4, P424
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   *OBJ MAN GROUP, 2004, MET OBJ FAC MOF 2 0
   RIEHLE D, 2001, C OBJ OR PROGR SYST, P327
   Riehle D., 2005, PATTERN LANGUAGES PR, V5
   RIVARD F, 1996, INRIA COLLECTION DID
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   TICHELAAR S, 2000, P ISCE 2000 WORKSH S
   Yoder J.W., 2002, P WORK IEEE IFIP C S
NR 42
TC 19
Z9 19
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 5
EP 19
DI 10.1007/s10270-008-0081-4
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000002
DA 2024-07-18
ER

PT J
AU Giese, H
   Wagner, R
AF Giese, Holger
   Wagner, Robert
TI From model transformation to incremental bidirectional model
   synchronization
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Incremental model synchronization; Triple graph
   grammars
ID INCONSISTENCIES; EVOLUTION
AB The model-driven software development paradigm requires that appropriate model transformations are applicable in different stages of the development process. The transformations have to consistently propagate changes between the different involved models and thus ensure a proper model synchronization. However, most approaches today do not fully support the requirements for model synchronization and focus only on classical one-way batch-oriented transformations. In this paper, we present our approach for an incremental model transformation which supports model synchronization. Our approach employs the visual, formal, and bidirectional transformation technique of triple graph grammars. Using this declarative specification formalism, we focus on the efficient execution of the transformation rules and how to achieve an incremental model transformation for synchronization purposes. We present an evaluation of our approach and demonstrate that due to the speedup for the incremental processing in the average case even larger models can be tackled.
C1 [Wagner, Robert] Univ Gesamthsch Paderborn, Dept Comp Sci, Software Engn Grp, D-33098 Paderborn, Germany.
   [Giese, Holger] Univ Potsdam, Syst Anal & Modeling Grp, Hasso Plattner Inst, D-14482 Potsdam, Germany.
C3 University of Paderborn; University of Potsdam
RP Wagner, R (corresponding author), Univ Gesamthsch Paderborn, Dept Comp Sci, Software Engn Grp, Warburger Str 100, D-33098 Paderborn, Germany.
EM holger.giese@hpi.uni-potsdam.de; wagner@uni-paderborn.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X
CR [Anonymous], 1999, HDB GRAPH GRAMMARS C, DOI DOI 10.1142/9789812815149_0014
   [Anonymous], 1999, XSL TRANSF XSLT VERS
   ANTKIEWICZ M, 2007, POSTPR 2007 SU UNPUB
   Antkiewicz M, 2006, LECT NOTES COMPUT SC, V4199, P692
   ASSMANN U, 2003, ELECT NOTES COMPUT S, V82, P1
   Becker SM, 2004, LECT NOTES COMPUT SC, V3256, P22
   *BORL, TOG ARCH 2006
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   DEMATHIEU S, 2005, MODEL TRANSFORMATION
   EGYED A, 2006, P 28 INT C SOFTW ENG, P381, DOI DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Engels G., 2001, The Unified Modeling Language; Modeling Languages, Concepts, and Tools, P272, DOI DOI 10.1007/3-540-45441-1_21
   *FRANC TEL, 2007, SMARTQVT OP SOURC MO
   GARDNER T, REV OMG MOF 2 0 QUER
   GIESE H, 2006, P 4 INT FUJ DAYS 200
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Gray J, 2004, LECT NOTES COMPUT SC, V3286, P361
   Greenyer J, 2007, LECT NOTES COMPUT SC, V4735, P16
   GRIFFIN C, 2003, IBM
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Guerra E, 2004, LECT NOTES COMPUT SC, V3256, P54
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Henriksson A., 2003, DEFINITION ROUND TRI
   Hwan C, 2005, LECT NOTES COMPUT SC, V3748, P331
   *IBM, 2007, RAT ROS DEV JAV
   *ITU, 1994, Z100 ITUT
   Ivkovic I, 2004, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2004.1357809
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   Kindler E., 2004, TECHNICAL REPORT, P35
   KONIGS A, 2006, P SEGRAVIS SCH FDN V, V148, P113
   LEFERING M, 1996, LECT NOTES COMPUTER, V1170, P324
   MARSCHALL F, 2003, TRCTIT0327 CTIT U TW
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Object Management Group (OMG), 2005, PTC051101 OMG
   OLSEN T, 2002, P 2002 IASTED INT C
   *OM, 2007, ECLIPSEUML FREE ED
   *OMG, 2003, OMG RFP QVT MOF 2 0
   *OMG, 2003, OMG030601 OMG
   OMG, 2006, MET OBJ FAC MOF 2 0
   OMG, UN MOD LANG SPEC VER
   PAESSCHEN EV, 2005, LECT NOTES COMPUTER, V3713, P633
   Schäfer W, 2004, LECT NOTES COMPUT SC, V3147, P48
   SCHURR A, 1994, P WG94 INT WORKSH GR, V903, P151
   Schurr Andy., 1999, HDB GRAPH GRAMMARS C, P487
   SENDALL S, 2004, P WORKSH BEST PRACT
   *TAT CONS SERV, 2007, MODELMORF
   TSIOLAKIS A, 2000, P JOINT APPLIGRAPH G
   University of Paderborn, 2006, FUJ TOOL SUIT
   Varró D, 2002, SCI COMPUT PROGRAM, V44, P205, DOI 10.1016/S0167-6423(02)00039-4
   VARRO G, 2004, P 4 WORKSH GRAPH TRA, V109, P71
   Vizhanyo A, 2004, LECT NOTES COMPUT SC, V3286, P298
   WAGNER R, 2003, P WORKSH CONS PROBL, P78
   2007, IKV TECHNOLOGIES AG
NR 54
TC 101
Z9 107
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 21
EP 43
DI 10.1007/s10270-008-0089-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000003
DA 2024-07-18
ER

PT J
AU Jirapanthong, W
   Zisman, A
AF Jirapanthong, Waraporn
   Zisman, Andrea
TI XTraQue: traceability for product line systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software traceability; Product line; Traceability relations;
   Traceability rules; Feature-based object-oriented documents
ID REQUIREMENTS; SOFTWARE
AB Product line engineering has been increasingly used to support the development and deployment of software systems that share a common set of features and are developed based on the reuse of core assets. The large number and heterogeneity of documents generated during the development of product line systems may cause difficulties to identify common and variable aspects among applications, and to reuse core assets that are available under the product line. In this paper, we present a traceability approach for product line systems. Traceability has been recognised as an important task in software system development. Traceability relations can improve the quality of the product being developed and reduce development time and cost. We present a rule-based approach to support automatic generation of traceability relations between feature-based object-oriented documents. We define a traceability reference model with nine different types of traceability relations for eight types of documents. The traceability rules used in our work are classified into two groups namely (a) direct rules, which support the creation of traceability relations that do not depend on the existence of other relations, and (b) indirect rules, which require the existence of previously generated relations. The documents are represented in XML and the rules are represented in an extension of XQuery. A prototype tool called XTraQue has been implemented. This tool, together with a mobile phone product line case study, has been used to demonstrate and evaluate our work in various experiments. The results of these experiments are encouraging and comparable with other approaches that support automatic generation of traceability relations.
C1 [Zisman, Andrea] City Univ London, Dept Comp, London EC1V 0HB, England.
   [Jirapanthong, Waraporn] Dhurakij Pundit Univ, Fac Informat Technol, Bangkok 10210, Thailand.
C3 City University London
RP Zisman, A (corresponding author), City Univ London, Dept Comp, Northampton Sq, London EC1V 0HB, England.
EM waraporn@it.dpu.ac.th; a.zisman@soi.city.ac.uk
CR [Anonymous], 2002, P 1 INT WORKSH TRAC
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   ATKINSON C, 2000, COMPONENT BASED PROD
   BAYER J, 1999, 5 ACM SIGSOFT S SOFT
   BAYER J, 2002, 4 INT WORKSH PFE 200, V2290
   BIDDLE R, 2002, P 7 INT C SOFTW REUS
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Cleland-Huang J., 2003, P 2 INT WORKSH TRAC
   CLELANDHUANG J, 2002, P IEEE JOINT INT REQ
   CLELANDHUANG J, 2005, INT C SOFTW ENG US M
   Cockburn A, 1997, J OBJECT-ORIENT PROG, V10, P56
   Cockburn A, 1997, J OBJECT-ORIENT PROG, V10, P35
   CONSTANTOPOULOS P, 1995, VLDB J, V4, P43
   Deng M, 2005, INT J SOFTW ENG KNOW, V15, P837, DOI 10.1142/S0218194005002531
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   EGYED A, 2002, P 17 IEEE INT C AUT
   FALOUTSOS C, 1995, CSTR3514 U MARYL DEP
   FANTECHI A, 2004, METHODOLOGY DERIVATI, P255
   *FODA, FEAT OR DOM AN
   *GCT, 2007, P INT S GRAND CHALL
   GOLDSBY HH, 2006, 14 IEEE INT REQ ENG
   GOTEL O, 1994, 1 INT C REQ
   Gotel O., 1995, International Symposium on Requirements Engineering, P100
   GRISS ML, 1998, P 5 INT C SOFTW REUS
   HAYES JH, 2006, IEEE T SOFTW ENG, V32
   HAYES JH, 2003, P 11 IEEE INT REQ EN
   JIRAPANTHONG W, 2005, P 12 AS PAC SOFTW EN
   KAINDL H, 1992, MISSING LINK REQUIRE
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KIM SD, 3 ACIS INT C SOFTW E
   KRUEGER CW, SOFTWARE MASS CUSTOM
   LAGO P, 2004, P 8 EUR C SOFTW MAIN
   Lavazza L., 2000, Empirical Software Engineering, V5, P229, DOI 10.1023/A:1026590615963
   Lee K, 2000, SOFTWARE PRACT EXPER, V30, P1025, DOI 10.1002/1097-024X(20000725)30:9<1025::AID-SPE323>3.0.CO;2-W
   Leech G., 1994, P 15 INT C COMPUTATI, P622, DOI DOI 10.3115/991886.991996
   MALETIC JL, 2005, 3 ACM INT WORKSH TRA
   Mannion M, 2000, LECT NOTES COMPUT SC, V1844, P153
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   MARCUS A, 2003, RECOVERING DOCUMENTA
   Meyer B., 1998, Object-oriented software construction (Second Edi)
   MOHAN K, 2002, P 35 HAW C SYST SCI
   Murta LGP., 2006, 21 IEEE ACM INT C AU
   *OMG, XML MET INT XMI
   PINHEIRO F, 2000, P 3 WORKSH REQ ENG 3
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   POHL K, 1996, P IEEE INT C REQ ENG
   Pohl K., 1996, Requirements engineering: An overview
   POHL K, 2001, 304 PROD FAM DEV
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Ramesh B, 1999, DECIS SUPPORT SYST, V27, P213, DOI 10.1016/S0167-9236(99)00045-7
   RAMESH B, 2001, IEEE T SOFTW ENG, V37
   RIEBISCH M, 2001, OOPSLA 2001 WORKSH E
   *RTM, INT CHIPW
   SHERBA SA, 2003, P 2 INT WORKSH TRAC
   Simpson T., 1998, A Concept Exploration Method for Product Family Design
   SINNEMA M, 2004, 3 INT C SPLC
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   SPANOUDAKIS G, 2003, HDB SOFTAWRE ENG KNO, V3
   SPANOUDAKIS G, 2003, 15 INT C SOFTW ENG K
   STIREWALT K, 2005, 3 ACM INT WORKSH TRA
   Svahnberg M., 2000, 3 INT WORKSH SOFTW A
   THEIL S, 2002, 2 INT C SOFTW PROD L
   VANDERLINDEN F, PRODUCT FAMILY DEV P
   VONKNETHEN A, 2002, SOFTWARE ENG
   VONKNETHEN A, 2002, P IEEE INT REQ ENG C
   WEISS D, INT C COMP HIGH EN P
NR 67
TC 28
Z9 41
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 117
EP 144
DI 10.1007/s10270-007-0066-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000007
DA 2024-07-18
ER

PT J
AU Wilson, T
   Maharaj, S
   Clark, RG
AF Wilson, Thomas
   Maharaj, Savi
   Clark, Robert G.
TI Flexible and configurable verification policies with Omnibus
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd IEEE International Conference on Software Engineering and Formal
   Methods
CY SEP 07-09, 2005
CL Koblenz, GERMANY
SP IEEE Comp Soc
AB The three main assertion-based verification approaches are: run-time assertion checking (RAC), extended static checking (ESC) and full formal verification (FFV). Each approach offers a different balance between rigour and ease of use, making them appropriate in different situations. Our goal is to explore the use of these approaches together in a flexible way, enabling an application to be broken down into parts with different reliability requirements and different verification approaches used in each part. We explain the benefits of using the approaches together, present a set of guidelines to avoid potential conflicts and give an overview of how the Omnibus IDE provides support for the full range of assertion-based verification approaches within a single tool.
C1 [Wilson, Thomas; Maharaj, Savi; Clark, Robert G.] Univ Stirling, Dept Math & Comp Sci, Stirling FK9 4LA, Scotland.
C3 University of Stirling
RP Wilson, T (corresponding author), Univ Stirling, Dept Math & Comp Sci, Stirling FK9 4LA, Scotland.
EM twi@cs.stir.ac.uk; sma@cs.stir.ac.uk; rgc@cs.stir.ac.uk
OI Wilson, Thomas/0000-0003-1081-7703
CR [Anonymous], 2003, Technical Report HPL-2003-148
   BARNETT M, 2004, LNCS, V3362
   CHALIN P, 2004, P SEFM 2005 IEEE COM
   COK DR, 2004, R0413
   CROCKER D, 2004, P 12 SAF CRIT SYST S
   DIETL W, 2005, J OBJECT TECHNOL, V4
   FLANAGAN C, 2002, P PLDI 2002 ACM SIGP, V37
   JACOBS B, 2004, LNCS, V3116
   LEAVENS GT, 2003, 9806P IOW STAT U DEP
   LEINO KRM, 2001, SPRINGER LNCS, V2000
   MEYER B, 1999, IEEE COMPUTER    JAN
   MEYER B, 2000, SOFTWARE DEV MAG JUL
   MEYER B, 2000, EIFFEL LANGUAGE
   OWRE S, 1996, LNCS, V1102
   RUSHBY J, 1989, KERNELS SAFETY SAFE
   WILSON T, 2005, P SEFM 2005 IEEE COM
   WILSON T, 2007, OMNIBUS HOME PAGE
   WILSON T, 2005, P WORKSH RIG ENG FAU
   WILSON T, 2006, CSM167 U STIRL DEP C
NR 19
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 257
EP 272
DI 10.1007/s10270-007-0060-1
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 322NZ
UT WOS:000257383900003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Van Der Straeten, R
   Jonckers, V
   Mens, T
AF Van Der Straeten, Ragnhild
   Jonckers, Viviane
   Mens, Tom
TI A formal approach to model refactoring and model refinement
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 7th Satellite Activities Conference on UML Modeling Languages and
   Applications
CY OCT 11-15, 2004
CL Lisbon, PORTUGAL
SP SINFIC, Springer, Mentor Graph, IBM, ACM SIGSOFT, IEEE Comp Soc, New Univ Lisbon, Turismo Lisboa, Object Management Grp
DE model-driven engineering; UML 2.0; description logics; model refinement;
   model refactoring; behaviour preservation
ID CONSISTENCY; FRAMEWORK
AB Model-driven engineering is an emerging software engineering approach that relies on model transformation. Typical kinds of model transformations are model refinement and model refactoring. Whenever such a transformation is applied to a consistent model, we would like to know whether the consistency is preserved by the transformation. Therefore, in this article, we formally define and explore the relation between behaviour inheritance consistency of a refined model with respect to the original model, and behaviour preservation of a refactored model with respect to the original model. As it turns out, there is a strong similarity between these notions of behaviour consistency and behaviour preservation. To illustrate this claim, we formalised the behaviour specified by UML 2.0 sequence and protocol state machine diagrams. We show how the reasoning capabilities of description logics, a decidable fragment of first-order logic, can be used in a natural way to detect behaviour inconsistencies. These reasoning capabilities can be used in exactly the same way to detect behaviour preservation violations during model refactoring. A prototype plug-in in a UML CASE tool has been developed to validate our claims.
C1 [Van Der Straeten, Ragnhild; Jonckers, Viviane] Vrije Univ Brussel, Syst & Software Engn Lab, B-1050 Brussels, Belgium.
   [Mens, Tom] Univ Mons, Serv Genie Logiciel, B-7000 Mons, Belgium.
C3 Vrije Universiteit Brussel; University of Mons
RP Van Der Straeten, R (corresponding author), Vrije Univ Brussel, Syst & Software Engn Lab, Pleinlaan 2, B-1050 Brussels, Belgium.
EM rvdstrae@vub.ac.be; vejoncke@ssel.vub.ac.be; tom.mens@umh.ac.be
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020; Jonckers, Viviane/0000-0001-7724-3412
CR [Anonymous], 1997, Object-oriented software construction
   ASTELS D, 2002, P INT C EXTR PROGR F, P67
   Baader F., 2003, DESCRIPTION LOGIC HD
   Boger M., 2002, P INT C EXTR PROGR F, P77
   BUNSE C, 1999, P INT C UML 99, V1723, P691
   Calì A, 2002, LECT NOTES ARTIF INT, V2366, P503
   CALVANESE D, 2002, P INT WORKSH DESCR L, V53, P107
   Clarke EM, 1999, MODEL CHECKING, P1
   D'Souza D., 1998, OBJECTS COMPONENTS F
   DAVIES J, 2002, ELECT NOTES THEORETI, V70
   EBERT J, 1995, 1995 U KOBL FACHB IN
   Emmerich W, 1999, IEEE T SOFTWARE ENG, V25, P836, DOI 10.1109/32.824413
   Engels G., 2002, P 6 INT C INT DES PR
   FINKELSTEIN A, 1993, EUR SOFTW ENG C, V717, P84
   HAARSLEV V, 2001, LECT NOTES COMPUTER, V2083, P701
   Horrocks I., 1999, Logic for Programming and Automated Reasoning. 6th International Conference, LPAR'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1705), P161, DOI 10.1007/3-540-48242-3_11
   Jurjens J., 2002, Formal Methods for Open Object-Based Distributed Systems V. IFIP TC6/WG6.1. Fifth International Conference on Formal Methods for Open Object-Based Distributed Systems (FMOODS 2002), P29
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   Lutz C., 2000, PROC DL2000, P213
   Mens T, 2002, LECT NOTES COMPUT SC, V2505, P286
   Nissen HW, 1996, IEEE SOFTWARE, V13, P37, DOI 10.1109/52.506461
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   *OBJ MAN GROUP, 2005, PTC030802 OBJ MAN GR
   *OBJ MAN GROUP, 2005, FORMAL20030301 OBJ M
   *OBJ MAN GROUP, 2005, PCT031014 OBJ MAN GR
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   SCHAFER T, 2001, COMPUT SCI, V55
   Schrefl M, 2002, ACM T SOFTW ENG METH, V11, P92, DOI 10.1145/504087.504091
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   SHEN W, 2003, CONS PROBL UML BAS S
   SIMMONDS J, 2004, MAINTAINING CONSISTE, V10, P231
   SIMMONDS J, 2005, TRDCC20051 DCC
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   STEVENS P, 2003, LNCS, V2621, P135
   Stumptner M, 2000, LECT NOTES COMPUT SC, V1920, P527
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Van Der Straeten R., 2003, Description Logics, V81
   VANDERAALST W, 2002, P 2 INT WORKSH MOD O, P105
   VANDERSTRAETEN R, THESIS VRIJE U BRUSS
   WHITTLE J, 2002, LNCS, V2460, P227
   [No title captured]
NR 44
TC 25
Z9 30
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2007
VL 6
IS 2
BP 139
EP 162
DI 10.1007/s10270-006-0025-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WR
UT WOS:000254667700003
DA 2024-07-18
ER

PT J
AU Lyan, G
   Jézéquel, JM
   Gross-Amblard, D
   Lefeuvre, R
   Combemale, B
AF Lyan, Gauthier
   Jezequel, Jean-Marc
   Gross-Amblard, David
   Lefeuvre, Romain
   Combemale, Benoit
TI Reasoning over time into models with DataTime
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Models at runtime; Digital twins; Data analysis; Intelligent Public
   Transportation Systems
ID AUTOMATIC VEHICLE LOCATION
AB Models at runtime have been initially investigated for adaptive systems. Models are used as a reflective layer of the current state of the system to support the implementation of a feedback loop. More recently, models at runtime have also been identified as key for supporting the development of full-fledged digital twins. However, this use of models at runtime raises new challenges, such as the ability to seamlessly interact with the past, present, and future states of the system. In this paper, we propose a framework called DataTime to implement models at runtime which capture the state of the system according to the dimensions of both time and space, here modeled as a directed graph where both nodes and edges bear local states (i.e., values of properties of interest). DataTime offers a unifying interface to query the past, present, and future (predicted) states of the system. This unifying interface provides (i) an optimized structure of the time series that capture the past states of the system, possibly evolving over time, (ii) the ability to get the last available value provided by the system's sensors, and (iii) a continuous micro-learning over graph edges of a predictive model to make it possible to query future states, either locally or more globally, thanks to a composition law. The framework has been developed and evaluated in the context of the Intelligent Public Transportation Systems of the city of Rennes (France). This experimentation has demonstrated how DataTime can be used for managing data from the past, the present, and the future and facilitate the development of digital twins.
C1 [Lyan, Gauthier] Keolis Rennes, Rennes, France.
   [Jezequel, Jean-Marc; Gross-Amblard, David; Lefeuvre, Romain; Combemale, Benoit] Univ Rennes, IRISA, CNRS, Rennes, France.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS)
RP Combemale, B (corresponding author), Univ Rennes, IRISA, CNRS, Rennes, France.
EM gauthier.lyan@keolis.com; jezequel@irisa.fr;
   david.gross-amblard@irisa.fr; romain.lefeuvre@inria.fr;
   benoit.combemale@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Combemale,
   Benoit/0000-0002-7104-7848
CR Aloquili O, 2009, IET SOFTW, V3, P255, DOI 10.1049/iet-sen.2008.0048
   Altinkaya M., 2013, INT J RECENT TECHNOL, V2, P7
   Amirat H., 2017, Journal of Communications, V12, P668, DOI 10.12720/jcm.12.12.668-676
   Barcelo J., 2005, METHODOLOGICAL APPRO, P24
   Bordeleau F., 2020, ICSMM 2020 INT C SYS
   Combemale B, 2021, IEEE SOFTWARE, V38, P71, DOI 10.1109/MS.2020.2995125
   Cortés CE, 2011, TRANSPORT RES C-EMER, V19, P695, DOI 10.1016/j.trc.2010.12.008
   Courtois X., 2008, BRUSSELS STUDIES REV, DOI [10.4000/brussels.603, DOI 10.4000/BRUSSELS.603]
   Fernandez R., 2003, TRAFFIC ENG CONTROL, V44, P67
   Hartmann T, 2019, INFORM SYST, V83, P101, DOI 10.1016/j.is.2019.03.004
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hug T., 2005, P MICROLEARNING C, V5, P74
   Kirchhof J.C., 2020, MODEL DRIVEN DIGITAL, P12
   Lyan G., 2021, THESES, P1
   Lyan G., 2022, SN COMPUT SCI, V3, P82, DOI [10.1007/s42979-021-00966-1, DOI 10.1007/S42979-021-00966-1]
   Lyan G, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P134, DOI 10.1109/MODELS50736.2021.00022
   Ma XL, 2019, DATA-DRIVEN SOLUTIONS TO TRANSPORTATION PROBLEMS, P175, DOI 10.1016/B978-0-12-817026-7.00007-2
   Matsumoto T., 2015, BUS LINE OPTIMIZATIO, P234, DOI [10.1109/SICE.2015.7285551, DOI 10.1109/SICE.2015.7285551]
   Mendes-Moreira J, 2020, LECT NOTES COMPUT SC, V12080, P313, DOI 10.1007/978-3-030-44584-3_25
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Pontius RG, 2008, ENVIRON ECOL STAT, V15, P111, DOI 10.1007/s10651-007-0043-y
   Riter S., 1977, IEEE Transactions on Vehicular Technology, Vvt-26, P7, DOI 10.1109/T-VT.1977.23649
   Robinson S, 2014, TRANSPORT RES C-EMER, V49, P43, DOI 10.1016/j.trc.2014.10.006
   Taskar B, 2004, ADV NEUR IN, V16, P659
   Treethidtaphat W, 2017, IEEE INT C INTELL TR
   Valencia A., 2012, TRAFFIC ENG CONTROL, V6, P8
   Yidan S., 2019, BUS TRAVEL SPEED PRE, DOI [10.1137/1.9781611975673, DOI 10.1137/1.9781611975673]
NR 27
TC 0
Z9 0
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1689
EP 1712
DI 10.1007/s10270-023-01080-x
EA JAN 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000920107300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Harbin, J
   Gerasimou, S
   Matragkas, N
   Zolotas, T
   Calinescu, R
   Santana, MA
AF Harbin, James
   Gerasimou, Simos
   Matragkas, Nicholas
   Zolotas, Thanos
   Calinescu, Radu
   Santana, Misael Alpizar
TI Model-driven design space exploration for multi-robot systems in
   simulation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MRS; Multi-robot systems; Model-driven engineering; MDE; Simulation;
   Design-space exploration
ID OPTIMIZATION; BEHAVIOR; AUTONOMY
AB Multi-robot systems are increasingly deployed to provide services and accomplish missions whose complexity or cost is too high for a single robot to achieve on its own. Although multi-robot systems offer increased reliability via redundancy and enable the execution of more challenging missions, engineering these systems is very complex. This complexity affects not only the architecture modelling of the robotic team but also the modelling and analysis of the collaborative intelligence enabling the team to complete its mission. Existing approaches for the development of multi-robot applications do not provide a systematic mechanism for capturing these aspects and assessing the robustness of multi-robot systems. We address this gap by introducing ATLAS, a novel model-driven approach supporting the systematic design space exploration and robustness analysis of multi-robot systems in simulation. The ATLAS domain-specific language enables modelling the architecture of the robotic team and its mission and facilitates the specification of the team's intelligence. We evaluate ATLAS and demonstrate its effectiveness in three simulated case studies: a healthcare Turtlebot-based mission and two unmanned underwater vehicle missions developed using the Gazebo/ROS and MOOS-IvP robotic platforms, respectively.
C1 [Harbin, James; Gerasimou, Simos; Calinescu, Radu; Santana, Misael Alpizar] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Matragkas, Nicholas] Univ Paris Saclay, List, CEA, F-91120 Palaiseau, France.
   [Zolotas, Thanos] Liverpool John Moores Univ, Sch Comp Sci & Math, Liverpool, Merseyside, England.
C3 University of York - UK; Universite Paris Cite; Universite Paris Saclay;
   CEA; Liverpool John Moores University
RP Gerasimou, S (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM james.harbin@york.ac.uk; simos.gerasimou@york.ac.uk;
   nikolaos.matragkas@cea.fr; a.zolotas@ljmu.ac.uk;
   radu.calinescu@york.ac.uk; misael.alpizarsantana@york.ac.uk
OI Alpizar Santana, Misael/0000-0002-6353-9770
FU European Union's Horizon 2020 project SESAME [1010172 58]; European
   Union's Horizon 2020 project TAILOR [952215]; Lloyds Register Foundation
   under the Assuring Autonomy International Programme grant SAFEMUV
FX This research was supported by the European Union's Horizon 2020
   projects SESAME (grant agreement No 1010172 58) and TAILOR (grant
   agreement No 952215), and by the Lloyds Register Foundation under the
   Assuring Autonomy International Programme grant SAFEMUV.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   ActiveMQ, US
   Afzal A, 2020, IEEE INT CONF SOFTW, P96, DOI 10.1109/ICST46399.2020.00020
   Andrychowicz M, 2020, INT J ROBOT RES, V39, P3, DOI 10.1177/0278364919887447
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Baer PA, 2008, IAS-10: INTELLIGENT AUTONOMOUS SYSTEMS 10, P211, DOI 10.3233/978-1-58603-887-8-211
   Basten T, 2010, LECT NOTES COMPUT SC, V6415, P90, DOI 10.1007/978-3-642-16558-0_10
   Benjamin MR, 2010, J FIELD ROBOT, V27, P834, DOI 10.1002/rob.20370
   Bruyninckx H., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1758, DOI [10.1145/2480362.2480693, DOI 10.1145/2480362.2480693]
   Bucchiarone A, 2017, 2017 IEEE 2ND INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P19, DOI 10.1109/FAS-W.2017.115
   Calinescu R, 2015, LECT NOTES COMPUT SC, V9033, P235, DOI 10.1007/978-3-662-46675-9_16
   Casalaro GL, 2022, SOFTW SYST MODEL, V21, P19, DOI 10.1007/s10270-021-00908-8
   Cattivera G., 2015, MODEL DRIVEN ENG MOB
   Chebotar Y, 2019, IEEE INT CONF ROBOT, P8973, DOI [10.1109/icra.2019.8793789, 10.1109/ICRA.2019.8793789]
   Chen TS, 2013, ACM T INTEL SYST TEC, V5, DOI 10.1145/2542182.2542202
   Ciccozzi F, 2017, PROC IEEE ACM INT C, P507, DOI 10.1109/ICSE-C.2017.167
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6451, DOI 10.1109/ACCESS.2016.2613642
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Dragule S, 2017, LECT NOTES COMPUT SC, V10479, P45, DOI 10.1007/978-3-319-65948-0_4
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elkady A, 2012, J ROBOT, V2012, DOI 10.1155/2012/959013
   Gamatié A, 2011, ACM T EMBED COMPUT S, V10, DOI 10.1145/2043662.2043663
   Gascueña JM, 2012, ENG APPL ARTIF INTEL, V25, P159, DOI 10.1016/j.engappai.2011.08.008
   Gerasimou S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P842, DOI 10.1109/ASE51524.2021.9678727
   Gerasimou S, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2019), P25, DOI 10.1109/RoSE.2019.00012
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Harbin J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P331, DOI 10.1109/MODELS50736.2021.00040
   Hawes N, 2017, IEEE ROBOT AUTOM MAG, V24, P146, DOI 10.1109/MRA.2016.2636359
   Hebesberger D., 2015, IROS WORKSH BRIDG US
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Huck TP, 2020, IEEE SYMP PROD COMPL, DOI 10.1109/spce50045.2020.9296157
   Hussain K, 2019, ARTIF INTELL REV, V52, P2191, DOI 10.1007/s10462-017-9605-z
   Jezequel J.-M., 2012, International Scholarly Research Notices, V2012
   Kephart J. O., 2017, SELF AWARE COMPUTING, P401, DOI [10.1007/978-3-319-47474-813, DOI 10.1007/978-3-319-47474-813]
   Kim RG, 2018, ICCAD-IEEE ACM INT, DOI 10.1145/3240765.3243483
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kolovos D., 2010, STRUCTURE, V178, P1
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Mahapatra Anushree, 2014, Proceedings of the 2014 Electronic System Level Synthesis Conference, P1, DOI [10.1109/ESLsyn.2014.6850383, DOI 10.1109/ESLSYN.2014.6850383]
   Martin Robert C., 2000, Object Mentor, V34, P597
   Martínez S, 2022, SOFTW SYST MODEL, V21, P337, DOI 10.1007/s10270-021-00915-9
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   MOOS-IvP, BO ALPHA UUV MISSION
   Neema S, 2003, LECT NOTES COMPUT SC, V2855, P290
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Okamura AM, 2010, IEEE ROBOT AUTOM MAG, V17, P26, DOI 10.1109/MRA.2010.937861
   Palesi M, 2002, CODES 2002: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON HARDWARE/SOFTWARE CODESIGN, P67, DOI 10.1109/CODES.2002.1003603
   Paraschos A., 2012, AAMAS, P171
   Parker L.E., 2008, HDB ROBOTICS, P921, DOI [10.1007/978-3-540-30301-5_41, DOI 10.1007/978-3-540-30301-5_41]
   Parker L.E., 2012, Reliability and Fault Tolerance in Collective Robot Systems
   Parker LE, 2016, SPRINGER HANDBOOK OF ROBOTICS, P1335
   Pinciroli C, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P3794, DOI 10.1109/IROS.2016.7759558
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Rossi F, 2018, IFAC PAPERSONLINE, V51, P112, DOI 10.1016/j.ifacol.2018.07.097
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Schafer BC, 2016, IEEE T COMPUT AID D, V35, P394, DOI 10.1109/TCAD.2015.2472007
   Schlegel C, 2010, LECT NOTES ARTIF INT, V6472, P324, DOI 10.1007/978-3-642-17319-6_31
   Schlegel C, 2009, ICAR: 2009 14TH INTERNATIONAL CONFERENCE ON ADVANCED ROBOTICS, VOLS 1 AND 2, P68
   Sengupta A., 2014, P IEEE GLOB WIR SUMM, P1
   Sengupta A, 2015, INT SYM QUAL ELECT, P60
   Serban R., 2019, International Journal of Vehicle Performance, V5, P18, DOI DOI 10.1504/IJVP.2019.097096
   Shathanaa R, 2018, ADV INTELL SYST COMP, V708, P519, DOI 10.1007/978-981-10-8636-6_55
   Silva ED, 2021, J COMPUT LANG, V62, DOI 10.1016/j.cola.2020.101021
   Skubch H, 2011, MECHATRONICS, V21, P423, DOI 10.1016/j.mechatronics.2010.10.006
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tobin Josh, 2017, 2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), P23, DOI 10.1109/IROS.2017.8202133
   Zhao AL, 2020, ACM T GRAPHIC, V39, DOI 10.1145/3414685.3417831
NR 73
TC 1
Z9 1
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1665
EP 1688
DI 10.1007/s10270-022-01041-w
EA OCT 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000865151800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cazzola, W
   Ghosh, S
   Al-Refai, M
   Maurina, G
AF Cazzola, Walter
   Ghosh, Sudipto
   Al-Refai, Mohammed
   Maurina, Gabriele
TI Bridging the model-to-code abstraction gap with fuzzy logic in
   model-based regression test selection
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Class diagram; Fuzzy logic; Regression test selection; UML
ID UML; CONTEXT; SYSTEMS
AB Regression test selection (RTS) approaches reduce the cost of regression testing of evolving software systems. Existing RTS approaches based on UML models use behavioral diagrams or a combination of structural and behavioral diagrams. However, in practice, behavioral diagrams are incomplete or not used. In previous work, we proposed a fuzzy logic based RTS approach called FLiRTS that uses UML sequence and activity diagrams. In this work, we introduce FLiRTS 2, which drops the need for behavioral diagrams and relies on system models that only use UML class diagrams, which are the most widely used UML diagrams in practice. FLiRTS 2 addresses the unavailability of behavioral diagrams by classifying test cases using fuzzy logic after analyzing the information commonly provided in class diagrams. We evaluated FLiRTS 2 on UML class diagrams extracted from 3331 revisions of 13 open-source software systems, and compared the results with those of code-based dynamic (Ekstazi) and static (STARTS) RTS approaches. The average test suite reduction using FLiRTS 2 was 82.06%. The average safety violations of FLiRTS 2 with respect to Ekstazi and STARTS were 18.88% and 16.53%, respectively. FLiRTS 2 selected on average about 82% of the test cases that were selected by Ekstazi and STARTS. The average precision violations of FLiRTS 2 with respect to Ekstazi and STARTS were 13.27% and 9.01%, respectively. The average mutation score of the full test suites was 18.90%; the standard deviation of the reduced test suites from the average deviation of the mutation score for each subject was 1.78% for FLiRTS 2, 1.11% for Ekstazi, and 1.43% for STARTS. Our experiment demonstrated that the performance of FLiRTS 2 is close to the state-of-art tools for code-based RTS but requires less information and performs the selection in less time.
C1 [Cazzola, Walter; Maurina, Gabriele] Univ Milan, Dept Comp Sci, Milan, Italy.
   [Ghosh, Sudipto] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Al-Refai, Mohammed] Jordan Univ Sci & Technol, Dept Comp Sci, Irbid, Jordan.
C3 University of Milan; Colorado State University; Jordan University of
   Science & Technology
RP Cazzola, W (corresponding author), Univ Milan, Dept Comp Sci, Milan, Italy.
EM cazzola@di.unimi.it; ghosh@cs.colostate.edu; mnalrefai@just.edu.jo;
   gabriele.maurina@studenti.unimi.it
RI Alrefai, mohammed/GZK-4263-2022
OI Ghosh, Sudipto/0000-0001-6000-9646; Cazzola, Walter/0000-0002-4652-8113
FU Universita degli Studi di Milano within the CRUI-CARE Agreement; US
   National Science Foundation [OAC-1931363, IIS-2027550]
FX Open access funding provided by Universita degli Studi di Milano within
   the CRUI-CARE Agreement. This research was supported in part by the US
   National Science Foundation (OAC-1931363 and IIS-2027550).
CR Al-Alshuhai A., 2015, P AET 15 COCH IND
   Al-Refai M, 2019, SOFTW SYST MODEL, V18, P937, DOI 10.1007/s10270-017-0636-3
   Al-Refai M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P55, DOI 10.1109/MODELS.2017.17
   Al-Refai M, 2016, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2016.24
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2012, NETWORKED DIGITAL TE, DOI DOI 10.1007/978-3-642-30507-8_4
   Azizi M, 2018, PROC INT SYMP SOFTW, P144, DOI 10.1109/ISSRE.2018.00025
   Bergmann M., 2008, INTRO MANY VALUED FU, DOI DOI 10.1017/CBO9780511801129
   Bock C., 2017, UNIFIED MODELING LAN
   Boudjemline H, 2017, INT J PERVASIVE COMP, V13, P238, DOI 10.1108/IJPCC-02-2017-0016
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Brun COdric., 2008, UPGRADE, The European Journal for the Informatics Professional IX, V2, P29
   Cazzola Walter, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P237
   Cazzola W, 2013, LECT NOTES COMPUT SC, V8107, P271, DOI 10.1007/978-3-642-41533-3_17
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Cingolani P, 2013, INT J COMPUT INT SYS, V6, P61, DOI 10.1080/18756891.2013.818190
   Cintra MarcosEvandro., 2008, Proceedings of the 3rd Conference of Trinational Academy of Sciences, P1
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Cordón O, 2004, FUZZY SET SYST, V141, P5, DOI 10.1016/S0165-0114(03)00111-8
   da Silva JPS, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P87, DOI 10.1145/3194133.3194136
   da Silva JPS, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P208, DOI 10.1145/3266237.3266244
   Deza E., 2009, Encyclopedia of Distances
   Dobing B, 2005, LECT NOTES COMPUT SC, V3770, P2, DOI 10.1007/11568346_2
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Farooq Qurat-ul-ann, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P41, DOI 10.1109/ECBS.2010.12
   Fernández-Sáez AM, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P292, DOI 10.1109/MODELS.2015.7338260
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Goyal V, 2003, ANAL YOUR CLASSES
   Gregersen AR, 2009, J SOFTW MAINT EVOL-R, V21, P81, DOI 10.1002/smr.406
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Gyori A, 2018, PROC INT SYMP SOFTW, P112, DOI 10.1109/ISSRE.2018.00022
   Hadaytullah, 2012, WOR CONG NAT BIOL, P44, DOI 10.1109/NaBIC.2012.6402238
   Harrold MJ, 1999, J SYST SOFTWARE, V47, P173, DOI 10.1016/S0164-1212(99)00037-0
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Hsia P, 1997, J SOFTW MAINT-RES PR, V9, P217, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<217::AID-SMR152>3.0.CO;2-2
   Hsu IC, 2012, SOFTWARE PRACT EXPER, V42, P1211, DOI 10.1002/spe.1124
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Kapitsaki Georgia M., 2008, P 10 INT C INFORM IN, P104, DOI [10.1145/1497308.1497332, DOI 10.1145/1497308.1497332]
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Langer P., 2014, MODELLIERUNG 2014, P289
   Legunsen O, 2017, IEEE INT CONF AUTOM, P949, DOI 10.1109/ASE.2017.8115710
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Leroux D, 2006, IBM SYST J, V45, P555, DOI 10.1147/sj.453.0555
   LEUNG HKN, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P201, DOI 10.1109/ICSM.1991.160330
   Lity S, 2016, LECT NOTES COMPUT SC, V9679, P3, DOI 10.1007/978-3-319-35122-3_1
   Malz C., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P483, DOI 10.1109/ICST.2012.131
   MAMDANI EH, 1975, INT J MAN MACH STUD, V7, P1, DOI 10.1016/S0020-7373(75)80002-2
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Nan Ye, 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P166, DOI 10.1109/SSIRI-C.2011.31
   Naveh Barak., 2011, JGraphT a Free Java Graph Library
   Osman M. H., 2013, INT WORKSHOP EXPERIE, P23
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pinto R.P., 2007, P WORKSH AD REFL MID
   Rapos E.J., 2015, ICST 15
   Rhmann W., 2017, INT J MATH SCI COMPU, V3, P17
   Romano S, 2018, INFORM SOFTWARE TECH, V99, P62, DOI 10.1016/j.infsof.2018.03.004
   Ross T., 2011, FUZZY LOGIC ENG APPL, V3rd
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Sheng QZ, 2005, ICMB 2005: International Conference on Mobile Business, P206, DOI 10.1109/ICMB.2005.33
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Simons C, 2007, J VISUAL LANG COMPUT, V18, P420, DOI 10.1016/j.jvlc.2007.07.001
   Skoglund M, 2007, INT J SOFTW ENG KNOW, V17, P359, DOI 10.1142/S0218194007003306
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Ural H, 2013, J SOFTW-EVOL PROC, V25, P681, DOI 10.1002/smr.1559
   Wang T, 2018, PROC INT SYMP SOFTW, P135, DOI 10.1109/ISSRE.2018.00024
   White L.J., 1997, P 10 INT SOFTW QUAL
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Xu ZW, 2014, INFORM SCIENCES, V259, P532, DOI 10.1016/j.ins.2010.09.012
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
   Zech P, 2017, INT J SOFTW TOOLS TE, V19, P115, DOI 10.1007/s10009-015-0408-8
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
NR 81
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 207
EP 224
DI 10.1007/s10270-021-00899-6
EA JUL 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000675318800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Le Coënt, A
   Sandretto, JAD
   Chapoutot, A
AF Le Coent, Adrien
   Sandretto, Julien Alexandre dit
   Chapoutot, Alexandre
TI Guaranteed master for interval-based cosimulation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cosimulation; Guaranteed simulation; Integration methods
ID INITIAL-VALUE PROBLEMS; VALIDATED SOLUTIONS
AB In this paper, we tackle the problem of guaranteed simulation of cyber-physical systems, an important model for current engineering systems. Their is always increasing complexity which leads to models of higher and higher dimensions, yet typically involving multiple subsystems or even multiple physics. Given this modularity, we more precisely explore cosimulation of such dynamical systems, with the aim of reaching higher dimensions of the simulated systems. In this paper, we present a guaranteed interval-based approach for cosimulation of continuous time systems. We propose an algorithm which first proves the existence and returns an enclosure of global solutions, using only local computations. This mitigates the curse of dimensionality faced by global (guaranteed) integration methods. Local computations are then realized with a safe estimate of the other sub-systems until the next macro-step. We increase the accuracy of the approach by using an interval extrapolation of the state of the other sub-systems. We finally propose some possible further improvements including adaptive macro-step size. Our method is fully guaranteed, taking into account all possible sources of error. It is implemented in a C++ prototype relying on the DynIbex library, and we illustrate our approach on multiple examples of the literature.
C1 [Le Coent, Adrien; Sandretto, Julien Alexandre dit; Chapoutot, Alexandre] ENSTA Paris, 828 Blvd Marechaux, F-91762 Palaiseau, France.
C3 Institut Polytechnique de Paris; ENSTA Paris
RP Le Coënt, A (corresponding author), ENSTA Paris, 828 Blvd Marechaux, F-91762 Palaiseau, France.
EM adrien.le-coent@ens-cachan.fr;
   julien.alexandre-dit-sandretto@ensta-paris.fr;
   alexandre.chapoutot@ensta-paris.fr
FU Chair Complex Systems Engineering - Ecole polytechnique; THALES; DGA;
   FX; Dassault Aviation; Naval Group Research; ENSTA Paris; Telecom Paris;
   Fondation ParisTech
FX This work was supported by the "Chair Complex Systems Engineering -
   Ecole polytechnique, THALES, DGA, FX, Dassault Aviation, Naval Group
   Research, ENSTA Paris, Telecom Paris, and Fondation ParisTech".
CR Alexandre dit Sandretto J., 2016, Reliable Computing Electronic Edition, V22, P79
   Althoff M., 2008, IFAC P, V41, P5125
   Althoff M., 2013, P 16 INT C HYBR SYST, P173
   Ames WF., 2014, NUMER METH PART D E
   Arnold M., 2014, PROGR DIFFERENTIAL A, P107
   Blanes S., 2008, Bol. Soc. Esp. Mat. Apl., V45, P89
   Bouissou Olivier, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P108, DOI 10.1007/978-3-642-38088-4_8
   Bouissou O., 2006, Scientific Computing, Computer Arithmetic and Validated Numerics
   Chapoutot A., 2012, RAPID SYSTEM PROTOTY
   Chapoutot A., DYNIBEX
   Chen X, 2016, PROCEEDINGS OF 2016 IEEE REAL-TIME SYSTEMS SYMPOSIUM (RTSS), P13, DOI [10.1109/RTSS.2016.011, 10.1109/RTSS.2016.33]
   Chen X, 2012, REAL TIM SYST SYMP P, P183, DOI 10.1109/RTSS.2012.70
   Clauss C., 2012, P 9 INT MODELICA C, P205, DOI DOI 10.3384/ECP12076205
   de Figueiredo L.H., 1997, BRAZILIAN MATH C MON
   dit Sandretto JA., 2016, RELIAB COMPUT, V22, P57
   Dzetkulic T, 2015, NUMER ALGORITHMS, V69, P183, DOI 10.1007/s11075-014-9889-x
   Eggers A, 2008, LECT NOTES COMPUT SC, V5311, P171, DOI 10.1007/978-3-540-88387-6_14
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Gajda K., 2008, PARALLEL PROCESSING, P1361, DOI [10.1007/978-3-540-68111-3_144, DOI 10.1007/978-3-540-68111-3_144]
   Girard A, 2005, LECT NOTES COMPUT SC, V3414, P291
   Gomes Claudio, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P504, DOI 10.1007/978-3-030-03424-5_34
   Gomes C., 2017, COSIMULATION STATE A
   Gomes C., 2018, ARXIV PREPRINT ARXIV
   Gomes C, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3179993
   Hairer E., 2010, Solving Ordinary Differential Equations II, V14, DOI [10.1007/978-3-642-05221-7, DOI 10.1007/978-3-642-05221-7]
   Hege HC., 1998, MATH VISUALIZATION A, P125, DOI [DOI 10.1007/978-3-662-03567-2_10, 10.1007/978-3-662-03567-2_10]
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Heitmeyer C, 1997, COMPASS '97 - ARE WE MAKING PROGRESS TOWARDS COMPUTER ASSURANCE?, P35, DOI 10.1109/CMPASS.1997.613206
   Hou GN, 2012, COMMUN COMPUT PHYS, V12, P337, DOI 10.4208/cicp.291210.290411s
   Immler Fabian, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P37, DOI 10.1007/978-3-662-46681-0_3
   Jaulin L., 2001, Applied Interval Analysis, DOI 10.1007/978-1-4471-0249-6
   Jensen JC, 2011, INT WIREL COMMUN, P1666, DOI 10.1109/IWCMC.2011.5982785
   Kübler R, 2000, MULTIBODY SYST DYN, V4, P107, DOI 10.1023/A:1009810318420
   Larsen KG, 2016, LECT NOTES COMPUT SC, V9636, P244, DOI 10.1007/978-3-662-49674-9_14
   Le Coënt A, 2018, THEOR COMPUT SCI, V750, P53, DOI 10.1016/j.tcs.2018.01.021
   Le Coënt A, 2018, FORM METHOD SYST DES, V53, P363, DOI 10.1007/s10703-017-0305-8
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lin YD, 2007, APPL NUMER MATH, V57, P1145, DOI 10.1016/j.apnum.2006.10.006
   Lohner RJ., 1987, Computer Arithmetic: Scientific Computation and Programming Languages, P255
   Ma TW, 2009, ELECTRON J COMB, V16
   Makino K, 2009, SNC'09: PROCEEDINGS OF THE 2009 INTERNATIONAL WORKSHOP ON SYMBOLIC-NUMERIC COMPUTATION, P79
   Moore R E., 1966, Interval Analysis. Series in Automatic Computation
   Mullier O, 2018, OPTIM METHOD SOFTW, V33, P718, DOI 10.1080/10556788.2018.1459620
   Nedialkov NS, 1999, APPL MATH COMPUT, V105, P21, DOI 10.1016/S0096-3003(98)10083-8
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Norsett SP., 2009, Solving Ordinary Differential Equations I-Nonstiff Problems, V2
   Sankaranarayanan S., 2017, ACM T EMBED COMPUT S, V16, P1
   Schafer M., 2006, FLUID STRUCTURE INTE, DOI [10.1007/3-540-34596-5, DOI 10.1007/3-540-34596-5]
   Valli A., 1999, NUMERICAL MATH SCI C
   Wetter M., 2013, P EL SYST LEV SYNTH, P1
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Zienkiewicz O.C., 1977, The Finite Element Method, V3
NR 52
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 711
EP 724
DI 10.1007/s10270-020-00858-7
EA JAN 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000608956700001
DA 2024-07-18
ER

PT J
AU Cabanillas, C
   Ackermann, L
   Schönig, S
   Sturm, C
   Mendling, J
AF Cabanillas, Cristina
   Ackermann, Lars
   Schoenig, Stefan
   Sturm, Christian
   Mendling, Jan
TI The RALph miner for automated discovery and verification of
   resource-aware process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model checking; Organisational mining; Process mining; Process
   verification; RALph; Resource assignment; Resource mining
ID WORKFLOW; PATTERNS
AB Automated process discovery is a technique that extracts models of executed processes from event logs. Logs typically include information about the activities performed, their timestamps and the resources that were involved in their execution. Recent approaches to process discovery put a special emphasis on (human) resources, aiming at constructing resource-aware process models that contain the inferred resource assignment constraints. Such constraints can be complex and process discovery approaches so far have missed the opportunity to represent expressive resource assignments graphically together with process models. A subsequent verification of the extracted resource-aware process models is required in order to check the proper utilisation of resources according to the resource assignments. So far, research on discovering resource-aware process models has assumed that models can be put into operation without modification and checking. Integrating resource mining and resource-aware process model verification faces the challenge that different types of resource assignment languages are used for each task. In this paper, we present an integrated solution that comprises (i) a resource mining technique that builds upon a highly expressive graphical notation for defining resource assignments; and (ii) automated model-checking support to validate the discovered resource-aware process models. All the concepts reported in this paper have been implemented and evaluated in terms of feasibility and performance.
C1 [Cabanillas, Cristina] Univ Seville, ISA Res Grp, Seville, Spain.
   [Cabanillas, Cristina; Mendling, Jan] Vienna Univ Econ & Business, Vienna, Austria.
   [Ackermann, Lars; Sturm, Christian] Univ Bayreuth, Inst Comp Sci, Bayreuth, Germany.
   [Schoenig, Stefan] Univ Regensburg, Informat Syst, Inst Management Informat Syst, Regensburg, Germany.
C3 University of Sevilla; Vienna University of Economics & Business;
   University of Bayreuth; University of Regensburg
RP Cabanillas, C (corresponding author), Univ Seville, ISA Res Grp, Seville, Spain.; Cabanillas, C (corresponding author), Vienna Univ Econ & Business, Vienna, Austria.
EM cristinacabanillas@us.es; lars.ackermann@uni-bayreuth.de;
   stefan.schoenig@ur.de; christian.sturm@uni-bayreuth.de;
   jan.mendling@wu.ac.at
RI Cabanillas, Cristina/V-4178-2017
OI Cabanillas, Cristina/0000-0001-9182-8847; Schonig,
   Stefan/0000-0002-7666-4482
FU Austrian Science Fund (FWF) [V 569-N31]; MCI/AEI/FEDER, UE
   [RTI2018-100763-J-100]
FX This work was funded by the Austrian Science Fund (FWF)-Grant V 569-N31
   (PRAIS); and by MCI/AEI/FEDER, UE-Grant RTI2018-100763-J-100 (CONFLEX).
CR ABRIAL JR, 1980, CONSTRUCTION PROGRAM
   Ackermann L., 2018, EXECUTION MULTIPERSP, P154, DOI DOI 10.1007/978-3-030-02671-4_9
   Ackermann L, 2017, LECT NOTES BUS INF P, V281, P61, DOI 10.1007/978-3-319-58457-7_5
   American National Standards Institute I, 2004, 3592004 ANSI INCITS
   [Anonymous], 2007, LIFE CYCLE SUPPORT S
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], 2004, Workflow Management: Models, Methods, and Systems
   [Anonymous], 2012, BPM DEMOS
   Baader F., 2003, The Description Logics Handbook: Theory, Implementations, and Applications
   Baumgrass A., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P667, DOI 10.1109/ARES.2011.104
   BERTINO E, 1998, COMPSAC, P228
   Bertino E., 1999, ACM Trans. Inf. Syst. Secur., V2, P65, DOI 10.1145/300830.300837
   Bjorner Dines., 1978, VIENNA DEV METHOD ME
   Bose R. P. Jagadeesh Chandra, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P97, DOI 10.1007/978-3-642-40176-3_9
   Burattin A, 2016, EXPERT SYST APPL, V65, P194, DOI 10.1016/j.eswa.2016.08.040
   Burattin A, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P103, DOI 10.1109/CIDM.2013.6597224
   Caballero HSG, 2018, LECT NOTES BUS INF P, V308, P744, DOI 10.1007/978-3-319-74030-0_59
   Cabanillas C, 2018, LECT NOTES BUS INF P, V318, P3, DOI 10.1007/978-3-319-91704-7_1
   Cabanillas C, 2018, ENTERP INF SYST-UK, V12, P550, DOI 10.1080/17517575.2017.1390166
   Cabanillas C, 2016, IEEE INT ENTERP DIST, P109
   Cabanillas C, 2015, INFORM SYST, V52, P55, DOI 10.1016/j.is.2015.03.002
   Cabanillas C, 2015, LECT NOTES COMPUT SC, V9097, P53, DOI 10.1007/978-3-319-19069-3_4
   Clarke Edmund M., 2001, Model Checking
   Di Ciccio Claudio, 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629447
   Di Ciccio C, 2017, INFORM SYST, V64, P425, DOI 10.1016/j.is.2016.09.005
   Dumas M., 2018, FUNDAMENTALS BUSINES, P2
   Eiglsperger M., 2005, GRAPH DRAWING, P155
   Hildebrandt TT, 2011, ELECTRON PROC THEOR, P59, DOI 10.4204/EPTCS.69.5
   Hompes BFA, 2017, LECT NOTES COMPUT SC, V10253, P177, DOI 10.1007/978-3-319-59536-8_12
   Horling B, 2004, KNOWL ENG REV, V19, P281, DOI 10.1017/S0269888905000317
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jin T, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P670, DOI 10.1109/GCC.2007.93
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Maggi F.M., 2012, Runtime Verification: Second International Conference, RV 2011, San Francisco, CA, USA, September 27-30, 2011, Revised Selected Papers 2, P131
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Mendling J, 2005, ENTERP MODELLING INF, V1, P3
   Montali M, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658376
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Nakatumba J, 2010, LECT NOTES BUS INF P, V43, P69
   OMG, 2011, BPMN 2 0 REC
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pika A, 2017, ACM TRANS MANAG INF, V8, DOI 10.1145/3041218
   Reichert M, 2009, LECT NOTES COMPUT SC, V5460, P115
   Roth WM, 2003, COGNITION INSTRUCT, V21, P429, DOI 10.1207/s1532690xci2104_3
   Rovani M, 2015, EXPERT SYST APPL, V42, P9236, DOI 10.1016/j.eswa.2015.07.040
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Schönig S, 2018, SOFTW SYST MODEL, V17, P675, DOI 10.1007/s10270-016-0567-4
   Schoenig S, 2016, LECT NOTES COMPUT SC, V9936, P87, DOI 10.1007/978-3-319-46295-0_6
   Schönig S, 2016, DECIS SUPPORT SYST, V89, P87, DOI 10.1016/j.dss.2016.06.012
   Schonig S., 2017, P BPM DEM TRACK
   Schönig S, 2016, LECT NOTES COMPUT SC, V9694, P290, DOI 10.1007/978-3-319-39696-5_18
   Skydanienko V., 2018, BPM, P111
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Tan KJ, 2004, P IEEE CSFW, P155
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   van der Aalst WMP, 2011, PROCESS MININGDISCOV
   van Dongen Boudewijn F., 2015, CAiSE Forum, V2015, P169
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   Wang Q., SATISFIABILITY RESIL
   Wynn M. T., 2017, Decision Support Systems, V100, P93, DOI 10.1016/j.dss.2017.04.004
   Wynn MT, 2009, BUS PROCESS MANAG J, V15, P74, DOI 10.1108/14637150910931479
   Zeising M, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P94, DOI 10.4108/icst.collaboratecom.2014.257269
   Zhao WD, 2014, ADV INTELL SYST COMP, V277, P701, DOI 10.1007/978-3-642-54924-3_66
NR 65
TC 4
Z9 4
U1 1
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1415
EP 1441
DI 10.1007/s10270-020-00820-7
EA AUG 2020
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000557136400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bucaioni, A
   Mubeen, S
   Ciccozzi, F
   Cicchetti, A
   Sjödin, M
AF Bucaioni, Alessio
   Mubeen, Saad
   Ciccozzi, Federico
   Cicchetti, Antonio
   Sjodin, Mikael
TI Modelling multi-criticality vehicular software systems: evolution of an
   industrial component model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering; Metamodelling; Single-core; Multi-core;
   Multi-criticality; Vehicular embedded systems; Real-time systems
AB Software in modern vehicles consists of multi-criticality functions, where a function can be safety-critical with stringent real-time requirements, less critical from the vehicle operation perspective, but still with real-time requirements, or not critical at all. Next-generation autonomous vehicles will require higher computational power to run multi-criticality functions and such a power can only be provided by parallel computing platforms such as multi-core architectures. However, current model-based software development solutions and related modelling languages have not been designed to effectively deal with challenges specific of multi-core, such as core-interdependency and controlled allocation of software to hardware. In this paper, we report on the evolution of the Rubus Component Model for the modelling, analysis, and development of vehicular software systems with multi-criticality for deployment on multi-core platforms. Our goal is to provide a lightweight and technology-preserving transition from model-based software development for single-core to multi-core. This is achieved by evolving the Rubus Component Model to capture explicit concepts for multi-core and parallel hardware and for expressing variable criticality of software functions. The paper illustrates these contributions through an industrial application in the vehicular domain.
C1 [Bucaioni, Alessio; Mubeen, Saad; Ciccozzi, Federico; Cicchetti, Antonio; Sjodin, Mikael] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Bucaioni, Alessio; Mubeen, Saad] Arcticus Syst AB, Jarfalla, Sweden.
C3 Malardalen University
RP Bucaioni, A (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.; Bucaioni, A (corresponding author), Arcticus Syst AB, Jarfalla, Sweden.
EM alessio.bucaioni@mdh.se; saad.mubeen@mdh.se; federico.ciccozzi@mdh.se;
   antonio.cicchetti@mdh.se; mikael.sjodin@mdh.se
RI Mubeen, Saad/HRB-4610-2023
FU Malardalen University; Swedish Knowledge Foundation (KKS) through the
   MINEStrA project; Swedish Knowledge Foundation (KKS) through the HERO
   project; Swedish Knowledge Foundation (KKS) through the DPAC project;
   Swedish Governmental Agency for Innovation Systems (VINNOVA) through the
   DESTINE project
FX Open access funding provided by Malardalen University. The work in this
   paper has been supported by the Swedish Knowledge Foundation (KKS)
   through the MINEStrA, HERO and DPAC projects and by the Swedish
   Governmental Agency for Innovation Systems (VINNOVA) through the DESTINE
   project. We thank our industrial partnersArcticus Systems andVolvo
   Construction Equipment, Sweden.
CR Agirre I., 2016, COMPUTER SAFETY RELI
   [Anonymous], 2012, TIMING AUGMENTED DES
   [Anonymous], 2019, DO 178C SOFTWARE CON
   [Anonymous], 2009, TIMMO METHODOLOGY VE
   [Anonymous], 2013, TECHNICAL REPORT
   [Anonymous], 2019, 2626212011 ISO
   [Anonymous], 2010, ELECT ENG J
   [Anonymous], 653P12 ARINC
   [Anonymous], EAST ADL OP WORKSH G
   [Anonymous], 2006, TECHNICAL REPORT
   [Anonymous], 2009, TADL TIM AUGM DESCR
   [Anonymous], 2010, P ERTS2 EMB REAL TIM
   Ashjaei M, 2017, IEEE IND ELEC, P8419, DOI 10.1109/IECON.2017.8217478
   Barner S., 2017, 2017 ACM IEEE 20 INT
   Becker M., 2015, 18 EUR C DIG SYST DE
   Bucaioni A., 12 INT C INF TECHN N
   Bucaioni A., 2015, INT WORKSH MOD AUT S
   Bucaioni A., 2016, J IEEE ACCESS, V5
   Bucaioni A., 2017, 13 EUR C MOD FDN APP
   Bucaioni A., 2016, 42 EUR C SER SOFTW E
   Bucaioni A, 2018, IEEE ACCESS, V6, P6424, DOI 10.1109/ACCESS.2018.2789400
   Burns A, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3131347
   Charette RN, 2009, IEEE SPECTRUM, V46, P7, DOI 10.1109/MSPEC.2009.5340234
   Cicchetti A., 2012, P 27 IEEE ACM INT C
   Ciccozzi F., 2016, IEEE ACCESS, V4
   Crespo A., 2010, P 2010 EUR DEP COMP
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Durisic D., 2014, 40 EUROMICRO C SOFTW
   Esper A., 2015, P 23 INT C REAL TIM
   Farzaneh MH., 2016, Proc. IEEE Vehicular Net. Conf. (VNC), P1
   Feiertag Nico, 2009, RTSS 2009
   Fernandez G., 2014, 14 INT WORKSH WORST, V39
   Gamatié A, 2011, ACM T EMBED COMPUT S, V10, DOI 10.1145/2043662.2043663
   Gaska T, 2010, DIGIT AVION SYST CON
   Hanninen K., 2008, 3 IEEE INT S IND EMB
   Herrera F., 2014, J SYST ARCHIT, V60
   ISO, ISO 11898-1
   Kelter T, 2014, REAL-TIME SYST, V50, P185, DOI 10.1007/s11241-013-9189-x
   Koong C., 2011, MULTICORE HARDWARE S
   Lundback K.L., 2017, IEEE ACM 4 INT WORKS
   Mubeen S., 2014, J SYST ARCHIT, V60
   Mubeen S., 2016, 13 INT C INF TECHN N
   Mubeen S., 2019, SOFTW SYST MODEL
   Mubeen S, 2013, COMPUT SCI INF SYST, V10, P453, DOI 10.2298/CSIS120614011M
   Nicolas A., 2014, C DES CIRC INT CIRC
   Pavon J, 1998, IEEE COMMUN MAG, V36, P72, DOI 10.1109/35.663330
   Pop P., 2016, EUR C DIG SYST DES D
   Schätz B, 2015, DES AUT CON, DOI 10.1145/2744769.2747912
   Severine S., 2008, 11 INT S COMP BAS SO
   Tadros RN, 2016, ELECTRON LETT, V52, DOI 10.1049/el.2016.3240
   The AUTOSAR Consortium, 2019, AUTOSAR TECH OV VERS
   Trujillo A, 2014, 2014 FIFTH INTERNATIONAL CONFERENCE ON COMPUTING FOR GEOSPATIAL RESEARCH AND APPLICATION (COM.GEO), P38, DOI 10.1109/COM.Geo.2014.23
   VanderLeest SH, 2010, IEEEAAIA DIGIT AVION
   Vestal S, 2007, 28 IEEE INT REALT SY
   Voss S., 2013, 20 IEEE INT C WORKSH
   Xu K., 2007, 13 IEEE INT C EMB RE
NR 57
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1283
EP 1302
DI 10.1007/s10270-020-00795-5
EA APR 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000529569600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Moncada, DSV
AF Moncada, David Santiago Velasco
TI Hazard-driven realization views for Component Fault Trees
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Component-based; Hazard-centric; Component
   Fault Trees; Realization view
AB Traditionally, the preferred means of documentation used by safety engineers have been sheets- and text-based solutions. However, in the last decades, the introduction of model-driven engineering in conjunction with Component-Based Design has been influencing the way safety engineers perform their tasks; especially in the area of fault analysis, model-driven approaches have been developed aimed at coupling fault trees with architecture models. Doing this fosters communication between engineers, may reduce design effort, and makes artifacts easier to maintain and reuse. In this paper, we want to move forward in this direction and take another step in the modeling of Component Fault Trees in combination with the modeling of the architecture design. We propose a hazard-centric approach for the definition of multiple realization views for fault analysis using Component Fault Trees. The approach is composed of a modeling method and a tool solution. We illustrate our approach with a real-life example from the automotive industry.
C1 [Moncada, David Santiago Velasco] Fraunhofer IESE, Embedded Syst Qual, Kaiserslautern, Germany.
RP Moncada, DSV (corresponding author), Fraunhofer IESE, Embedded Syst Qual, Kaiserslautern, Germany.
EM santiago.velasco@iese.fraunhofer.de
FU Projekt DEAL. [1050]
FX Open Access funding provided by Projekt DEAL.; Please verify relation
   to: Fraunhofer Institute for Experimental Software Engineering (IESE)
   (1050).
CR Adler Rasmus, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P312, DOI 10.1007/978-3-642-21210-9_30
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 1998, 61508 IEC INT ORG ST
   Atkinson C, 2008, LECT NOTES COMPUT SC, V5153, P54
   Biggs G, 2014, SOFTW SYST MODEL
   Crnkovic I, 2016, PROCEEDINGS 2016 19TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING, P23, DOI 10.1109/CBSE.2016.9
   Domis D, 2009, COMPONENT BASED ABST, P44
   Domis D, 2008, LECT NOTES COMPUT SC, V5219, P58, DOI 10.1007/978-3-540-87698-4_8
   Han Y., 1977, FAULT TREE ANAL COMP, P13
   IEEE Architecture Working Group, 2000, IEEE TECHN REP
   International Organization for Standardization, 2011, 26262 ISODIS, P22
   Kaiser Bernhard., 2003, Safety Critical Systems and Software 2003, Eigth Australian Workshop on Safety-Related Programmable Systems, V33, P37
   Kaiser M, 2018, ERCIM NEWS, P17
   Kowalski M, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P324, DOI 10.1109/DepCoS-RELCOMEX.2009.14
   Mohrle F., 2017, P 27 EUR SAF REL C E
   Object Management Group (OMG), 2017, UN MOD LANG OMG DOC
   Pohl K., 2016, ADV MODEL BASED ENG
   Romero JR, 2009, IEEE INT ENTERP DIST, P163, DOI 10.1109/EDOC.2009.23
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Velasco Moncada DS, 2018, MODELLIERUNG 2018, P311
NR 20
TC 3
Z9 3
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1465
EP 1481
DI 10.1007/s10270-020-00792-8
EA MAR 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000521686500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zolotas, A
   Rodriguez, HH
   Hutchesson, S
   Pina, BS
   Grigg, A
   Li, ML
   Kolovos, DS
   Paige, RF
AF Zolotas, Athanasios
   Rodriguez, Horacio Hoyos
   Hutchesson, Stuart
   Pina, Beatriz Sanchez
   Grigg, Alan
   Li, Mole
   Kolovos, Dimitrios S.
   Paige, Richard F.
TI Bridging proprietary modelling and open-source model management tools:
   the case of PTC Integrity Modeller and Epsilon
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model management; Open-source
AB While the majority of research on Model-Based Software Engineering revolves around open-source modelling frameworks such as the Eclipse Modelling Framework, the use of commercial and closed-source modelling tools such as RSA, Rhapsody, MagicDraw and Enterprise Architect appears to be the norm in industry at present. This technical gap can prohibit industrial users from reaping the benefits of state-of-the-art research-based tools in their practice. In this paper, we discuss an attempt to bridge a proprietary UML modelling tool (PTC Integrity Modeller), which is used for model-based development of safety-critical systems at Rolls-Royce, with an open-source family of languages for automated model management (Epsilon). We present the architecture of our solution, the challenges we encountered in developing it, and a performance comparison against the tool's built-in scripting interface. In addition, we use the bridge in a real-world industrial case study that involves the coordination with other bridges between proprietary tools and Epsilon.
C1 [Zolotas, Athanasios; Rodriguez, Horacio Hoyos; Pina, Beatriz Sanchez; Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Hutchesson, Stuart; Grigg, Alan; Li, Mole] Rolls Royce, Control Syst, Derby, England.
   [Paige, Richard F.] McMaster Univ, Dept Comp Sci, Hamilton, ON, Canada.
C3 University of York - UK; Rolls-Royce Holding Group; McMaster University
RP Zolotas, A (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM thanos.zolotas@york.ac.uk; horacio.hoyos.rodriguez@ieee.org;
   stuart.hutchesson@rolls-royce.com; basp500@york.ac.uk;
   alan.grigg@rolls-royce.com; mole.li@rolls-royce.com;
   dimitris.kolovos@york.ac.uk; richard.paige@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014
OI Zolotas, Athanasios/0000-0001-6020-4468; Kolovos,
   Dimitris/0000-0002-1724-6563; Sanchez, Beatriz/0000-0002-0601-947X
FU Innovate UK; UK aerospace industry through the SECT-AIR project; Mexican
   National Council for Science and Technology (CONACyT) [602430/472773];
   Engineering and Physical Sciences Research Council (EPSRC) through the
   National Productivity Investment Fund; Rolls-Royce [EP/R512230/1]; EPSRC
   [1949870] Funding Source: UKRI
FX This work was partially supported by Innovate UK and the UK aerospace
   industry through the SECT-AIR project, the Mexican National Council for
   Science and Technology (CONACyT) under Grant No.: 602430/472773 and the
   Engineering and Physical Sciences Research Council (EPSRC) through the
   National Productivity Investment Fund in partnership with Rolls-Royce
   under Grant No.: EP/R512230/1.
CR Adler D, 2004, JACOB PROJECT JAVA C
   [Anonymous], 2006, RESOURCE DESCRIPTION
   [Anonymous], 2008, ECLIPSE MODELING FRA
   Barnes J., 1997, High-Integrity Ada: The SPARK Approach
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Chabibi B, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P148, DOI 10.1109/WETICE.2016.39
   Cucchiella S, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P241, DOI 10.1109/ECBS.2011.15
   Di Natale M, 2014, LECT NOTES COMPUT SC, V8767, P353, DOI 10.1007/978-3-319-11653-2_22
   Di Rocco J, 2016, LECT NOTES COMPUT SC, V9765, P70, DOI 10.1007/978-3-319-42064-6_5
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   El-Khoury J, 2016, LECT NOTES COMPUT SC, V9764, P36, DOI 10.1007/978-3-319-42061-5_3
   Francis BA, 2016, SPRBRIEF ELECT, P35, DOI 10.1007/978-3-319-24729-8_4
   Friedenthal S., 2014, APRACTICAL GUIDE SYS
   FUJITSU Enabling Software Technology GmbH, 2006, EN SOFTW TECHN GMBH
   IBM, 2017, IBM RAT RHAPS FAM
   IBM, 2017, RAT DOORS
   Iyenghar P., 2016, IEEE INT C EM TECHN, P1
   Kawaguchi K., 2014, COM4J TYPE SAFE JAVA
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Lanusse Agnes., 2009, Proc. of the Fifth BIBLIOGRAPHY 84 European Conference on Model-Driven Architecture Foundations and Applications ECMDA-FA 2009, P1
   No Magic Inc, 2017, MAGICDRAW
   Ogunyomi B., 2015, PROPERTY ACCESS TRAC, P187
   PTC, 2017, PTC INT MOD
   PTC Inc, 2015, PTC INT MOD AUT INT
   Sindico A, 2011, SIMULTECH 2011: PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON SIMULATION AND MODELING METHODOLOGIES, TECHNOLOGIES AND APPLICATIONS, P45
   Sparx Systems Pty Ltd, 2019, ENTERPRISE ARCHITECT
   The Eclipse Foundation, ATLAS TRANSF LANG PR
   The Jawin Project, 2005, JAWIN JAV WIN32 INT
   The MathWorks Inc, SIM MOD BAS DES
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Zolotas A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P237, DOI 10.1109/MODELS.2017.18
NR 33
TC 6
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 17
EP 38
DI 10.1007/s10270-019-00732-1
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900004
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Hojaji, F
   Mayerhofer, T
   Zamani, B
   Hamou-Lhadj, A
   Bousse, E
AF Hojaji, Fazilat
   Mayerhofer, Tanja
   Zamani, Bahman
   Hamou-Lhadj, Abdelwahab
   Bousse, Erwan
TI Model execution tracing: a systematic mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Executable models; Model execution tracing;
   Dynamic analysis of model-driven systems; Systematic mapping study
ID TRACES; DIAGRAMS; LESSONS
AB Model-Driven Engineering is a development paradigm that uses models instead of code as primary development artifacts. In this paper, we focus on executable models, which are used to abstract the behavior of systems for the purpose of verifying and validating (V&V) a system's properties. Model execution tracing (i.e., obtaining and analyzing traces of model executions) is an important enabler for many V&V techniques including testing, model checking, and system comprehension. This may explain the increase in the number of proposed approaches on tracing model executions in the last years. Despite the increased attention, there is currently no clear understanding of the state of the art in this research field, making it difficult to identify research gaps and opportunities. The goal of this paper is to survey and classify existing work on model execution tracing, and identify promising future research directions. To achieve this, we conducted a systematic mapping study where we examined 64 primary studies out of 645 found publications. We found that the majority of model execution tracing approaches has been developed for the purpose of testing and dynamic analysis. Furthermore, most approaches target specific modeling languages and rely on custom trace representation formats, hindering the synergy among tools and exchange of data. This study also revealed that most existing approaches were not validated empirically, raising doubts as to their effectiveness in practice. Our results suggest that future research should focus on developing a common trace exchange format for traces, designing scalable trace representations, as well as conducting empirical studies to assess the effectiveness of proposed approaches.
C1 [Hojaji, Fazilat; Zamani, Bahman] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Mayerhofer, Tanja; Bousse, Erwan] TU Wien, Business Informat Grp, Vienna, Austria.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Intelligent Syst Logging & Monitoring Res Lab, Montreal, PQ, Canada.
C3 University of Isfahan; Technische Universitat Wien; Concordia University
   - Canada
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM f.hojaji@eng.ui.ac.ir; mayerhofer@big.tuwien.ac.at; zamani@eng.ui.ac.ir;
   wahab.hamou-lhadj@concordia.ca; bousse@big.tuwien.ac.at
RI Hojaji, Fazilat/ABC-9192-2020; Zamani, Bahman/X-6918-2019
OI Zamani, Bahman/0000-0001-6424-1442; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006; Bousse, Erwan/0000-0003-0000-9219
FU Isfahan University under the IMPULS Iran-Austria [4/11937]; Iranian
   Ministry of Science, Research and Technology
FX This work is partially supported by Iranian Ministry of Science,
   Research and Technology and Isfahan University under the IMPULS
   Iran-Austria Contract No. 4/11937.
CR Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Alawneh L, 2011, FUTURE GENER COMP SY, V27, P381, DOI 10.1016/j.future.2010.08.015
   Alawneh L, 2009, COMM COM INF SC, V59, P253
   Aljamaan H., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P495, DOI 10.1109/WCRE.2012.59
   Aljamaan H., 2015, P 25 ANN INT C COMP, P101
   Aljamaan H, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P79
   [Anonymous], C CTR ADV STUD COLL
   [Anonymous], 1962, COMMUN ACM
   [Anonymous], 2012, PROC 7 WORKSHOP MODE, DOI DOI 10.1145/2422518.2422527
   [Anonymous], P 4 EUR C EMB REAL T
   [Anonymous], 11 WORKSH MOD DES VE
   [Anonymous], PERIOD POLYTECHN ELE
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], P 1 INT WORKSH EX MO
   [Anonymous], [No title captured]
   Barr ET, 2014, ACM SIGPLAN NOTICES, V49, P67, DOI [10.1145/2660193.2660209, 10.1145/2714064.2660209]
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Bousse Erwan, 2017, SOFTWARE SYSTEMS MOD, P1
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bryant BR, 2011, COMPUT SCI INF SYST, V8, P225, DOI 10.2298/CSIS110114012B
   Calvez J., 1993, Embedded Real-Time Systems
   Ciccozzi F, 2018, SOFTW SYST MODEL, V18, P1
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Combemale B, 2011, LECT NOTES COMPUT SC, V6698, P35, DOI 10.1007/978-3-642-21470-7_4
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   López AJC, 2016, AD-MINIST, P147, DOI 10.17230/ad-minister.29.7
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DeAntoni J., 2010, SIGSOFT FSE, P377, DOI DOI 10.1145/1882291
   DeAntoni J, 2012, LECT NOTES COMPUT SC, V7304, P34, DOI 10.1007/978-3-642-30561-0_4
   Derezinska A., 2010, P 2 INT C INF TECHN, P517
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Domínguez E, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P55, DOI 10.1109/MiSE.2013.6595297
   Faria JP, 2016, INT J SOFTW TOOLS TE, V18, P285, DOI 10.1007/s10009-014-0354-x
   Fernández-Fernández CA, 2014, J APPL RES TECHNOL, V12, P908, DOI 10.1016/S1665-6423(14)70597-8
   Fernandez-y-Fernandez C. A., 2011, INT J COMPUTATIONAL, V6, P63
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   Fuentes L., 2008, MISE 08, P75
   Fuentes L, 2007, J OBJECT TECHNOL, V6, P109, DOI 10.5381/jot.2007.6.7.a5
   Fuentes L, 2009, LECT NOTES COMPUT SC, V5560, P1, DOI 10.1007/978-3-642-03764-1_1
   Fuentes Lidia., 2007, AOM 07, P28, DOI DOI 10.1145/1229375.1229380
   Garcés K, 2011, EUROMICRO CONF PROC, P259, DOI 10.1109/SEAA.2011.47
   Giraldo F. D., 2014, P 8 INT C RES CHALL, P1
   Goel A, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE-COMPANION.2009.5071041
   Gogolla Martin., 2014, Modellierung 2014, 19.-21. M rz 2014, Wien, P273
   Gurbuz H G, 2017, SOFTW QUAL J, P1
   Haberl W., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P1887, DOI 10.1109/CIT.2010.323
   Haberl Wolfgang, 2008, Proceedings of the 2008 International Conference on Embedded Systems & Applications (ESA 2008), P253
   Hamou-Lhadj A., 2004, Electronic Notes in Theoretical Computer Science, V94, P59
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hamou-Lhadj A, 2012, SOFTW SYST MODEL, V11, P77, DOI 10.1007/s10270-010-0180-x
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   HAMOULHADJ A, 2006, THESIS
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Hendriks M, 2017, INT J SOFTW TOOLS TE, V19, P487, DOI 10.1007/s10009-016-0436-z
   Hendriks M, 2012, IEEE INT C COMPUT, P524, DOI 10.1109/ICCSE.2012.78
   Hilken F, 2016, 19TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2016), P708, DOI 10.1109/DSD.2016.42
   Hilken F, 2014, LECT NOTES COMPUT SC, V8568, P170
   Hojaji F, 2016, 2016 6TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P298, DOI 10.1109/ICCKE.2016.7802156
   Hu Zhaoxia, 2004, SEKE, P213
   Intana A., 2015, DEVS'15 Proceedings of the Symposium on Theory of Modeling Simulation, P181
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Kelly S., 2008, Domain-Specific Modeling
   Kemper P, 2007, INT CONF QUANT EVAL, P101, DOI 10.1109/QEST.2007.41
   Kemper P, 2009, IEEE T SOFTWARE ENG, V35, P195, DOI 10.1109/TSE.2008.75
   Kitchenham B., 2000, GUIDELINES PERFORMIN
   Kraft J, 2010, LECT NOTES COMPUT SC, V6418, P315, DOI 10.1007/978-3-642-16612-9_24
   Krasnogolowy A, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P331, DOI 10.1109/ICIT.2012.6209959
   Kugele S., 2007, TECHNICAL REPORT
   Langer P, 2014, LECT NOTES COMPUT SC, V8767, P116, DOI 10.1007/978-3-319-11653-2_8
   Li LP, 2014, INT CONF COMP SCI ED, P1121, DOI 10.1109/ICCSE.2014.6926636
   Lian JX, 2008, SOFTWARE QUAL J, V16, P45, DOI 10.1007/s11219-007-9020-9
   Lima Bruno., 2015, 2015 10th International Joint Conference on Software Technologies (ICSOFT), V1, P1
   Maoz S., 2014, ARXIV14092307
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S, 2011, SOFTW SYST MODEL, V10, P447, DOI 10.1007/s10270-010-0151-2
   Maoz S, 2009, COMPUTER, V42, P28, DOI 10.1109/MC.2009.336
   Maoz S, 2009, LECT NOTES COMPUT SC, V5421, P109, DOI 10.1007/978-3-642-01648-6_12
   Mayerhofer T, 2013, LECT NOTES COMPUT SC, V8225, P56, DOI 10.1007/978-3-319-02654-1_4
   Mayerhofer T, 2012, PROC INT CONF SOFTW, P1579, DOI 10.1109/ICSE.2012.6227032
   Mehner K, 2002, LECT NOTES COMPUT SC, V2269, P163
   Meyers B, 2014, LECT NOTES COMPUT SC, V8706, P1, DOI 10.1007/978-3-319-11245-9_1
   Mijatov S, 2015, LECT NOTES COMPUT SC, V9154, P173, DOI 10.1007/978-3-319-21215-9_11
   Mijatov Stefan, 2013, CEUR WS, P1
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Object Management Group, 2017, SEMANTICS OF A FOUND
   Pasquier O, 1999, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION 1999, PROCEEDINGS, P782, DOI 10.1109/DATE.1999.761229
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Schivo Stefano, 2017, Dependable Software Engineering. Theories, Tools, and Applications. Third International Symposium, SETTA 2017. Proceedings: LNCS 10606, P319, DOI 10.1007/978-3-319-69483-2_19
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Scopus A, 2014, A GENERIC FRAMEWORK, V1258
   Scott D., 1970, Outline of a mathematical theory of computation
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   Wang L., 2007, Proceedings of the Third International Workshop on Software Engi- neering for Secure Systems, SESS '07, P10
   Wehrmeister MA, 2012, EMBED SYST COMPUT IN, V45, P25
   Wehrmeister MA, 2011, BRAZ SYM COMPUT SYST, P1, DOI 10.1109/SBESC.2011.47
   Yilmaz L, 2001, WSC'01: PROCEEDINGS OF THE 2001 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P586, DOI 10.1109/WSC.2001.977342
NR 105
TC 14
Z9 14
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3461
EP 3485
DI 10.1007/s10270-019-00724-1
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bernardi, S
   Marrone, S
   Merseguer, J
   Nardone, R
   Vittorini, V
AF Bernardi, Simona
   Marrone, Stefano
   Merseguer, Jose
   Nardone, Roberto
   Vittorini, Valeria
TI Towards a model-driven engineering approach for the assessment of
   non-functional properties using multi-formalism
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-formalism; UML profile; Performability; Model-driven engineering;
   Generalised Stochastic Petri Nets; Repairable fault trees
ID PERFORMANCE; CHALLENGES; FRAMEWORK
AB Model-driven techniques can be used to automatically produce formal models from different views of a system realised by using several modelling languages and notations. Specifications are transformed into formal models so facilitating the analysis of complex system for design, validation or verification purposes. However, no single formalism suits for representing all system's views. In particular, the assessment of non-functional properties often requires integrated modelling approaches. The ultimate goal of the research work described in this paper is to develop a comprehensive, theoretical and practical framework able to support the development and the integration of new or existing model-driven approaches for the automatic generation of multi-formalism models. This paper defines the core theoretical ideas on which the framework is based and demonstrates their concrete applicability to the development of a multi-formalism approach for performability assessment.
C1 [Bernardi, Simona; Merseguer, Jose] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
   [Marrone, Stefano] Univ Campania Luigi Vanvitelli, Dipartimento Matemat & Fis, Naples, Italy.
   [Nardone, Roberto; Vittorini, Valeria] Univ Napoli Federico II, Dipartimento Ingn Elettr & Tecnol Informaz, Naples, Italy.
C3 University of Zaragoza; Universita della Campania Vanvitelli; University
   of Naples Federico II
RP Marrone, S (corresponding author), Univ Campania Luigi Vanvitelli, Dipartimento Matemat & Fis, Naples, Italy.
EM simonab@unizar.es; stefano.marrone@unicampania.it; jmerse@unizar.es;
   roberto.nardone@unina.it; valeria.vittorini@unina.it
RI Merseguer, Jose/A-6028-2012; Marrone, Stefano/AAC-4997-2021; nardone,
   roberto/AAM-4095-2021; Bernardi, Simona/L-1456-2014
OI Merseguer, Jose/0000-0001-5538-3553; nardone,
   roberto/0000-0003-4938-9216; Bernardi, Simona/0000-0002-2605-6243;
   Marrone, Stefano/0000-0003-1927-6173
FU European Commission under the H2020 Research and Innovation Action
   [DICE] [644869]; Spanish Ministry of Economy and Competitiveness
   [CyCriSec-TIN2014-58457-R]; Aragonese Government [T94]; 
   [UZCUD2017-TEC-09]; H2020 - Industrial Leadership [644869] Funding
   Source: H2020 - Industrial Leadership
FX This research was partially supported by the European Commission under
   the H2020 Research and Innovation Action [DICE, Grant Agreement No.
   644869], the Spanish Ministry of Economy and Competitiveness [ref.
   CyCriSec-TIN2014-58457-R], the project UZCUD2017-TEC-09, and the
   Aragonese Government [ref. T94, DIStributed COmputation (DISCO)]
CR Abouzahra A., 2005, P BEST PRACT MOD DRI
   [Anonymous], FORMAL110602 OMG
   [Anonymous], WORKSH INT SIGN PROC
   [Anonymous], RCL101115 U FLOR DIP
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baarir Soheib, 2009, Performance Evaluation Review, V36, P4, DOI 10.1145/1530873.1530876
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Barbierato E, 2016, ELECTRON NOTES THEOR, V327, P5, DOI 10.1016/j.entcs.2016.09.021
   Battista Ermanno, 2013, 2013 IEEE International Workshop on Measurements & Networking (M&N), P132, DOI 10.1109/IWMN.2013.6663791
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Berardinelli L., P 2 INT WORKSH NONF
   Bernardi Simona, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P15, DOI 10.1007/978-3-642-24270-0_2
   Bernardi S., 2013, Model-Driven dependability assessment of software systems
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Boulanger F, 2010, LECT NOTES COMPUT SC, V6002, P310
   Bracchi P, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P77, DOI 10.1109/ISSRE.2004.27
   Brooks C., 2010, 2010 BERK EECS ANN R
   Ciancone A, 2014, SOFTW SYST MODEL, V13, P1269, DOI 10.1007/s10270-013-0334-8
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   Donateni S., 1996, Application and Theory of Petri Nets 1996. 17th International Conference. Proceedings, P133
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Emerson Matthew., 2006, OOPSLA i 6th Workshop on Domain Specific Modeling, P123
   Fitzgerald J, 2010, LECT NOTES COMPUT SC, V6396, P12, DOI 10.1007/978-3-642-16265-7_2
   Flammini F, 2014, INT J RELIAB QUAL SA, V21, DOI 10.1142/S0218539314500016
   Gómez-Martínez E, 2014, EMPIR SOFTW ENG, V19, P1967, DOI 10.1007/s10664-013-9297-1
   HARDEBOLLE C, 1988, INT, V85, P688, DOI DOI 10.1177/0037549709105240
   Khan RH, 2012, INT J ADV NETW SERV, V5, P346
   Koziolek A, 2013, PROC INT SYMP SOFTW, P41, DOI 10.1109/ISSRE.2013.6698903
   Marrone S, 2015, COMPUT ELECTR ENG, V47, P275, DOI 10.1016/j.compeleceng.2015.07.011
   Marrone S, 2010, LECT NOTES COMPUT SC, V6396, P215, DOI 10.1007/978-3-642-16265-7_16
   Marsan MA., 1994, Modelling with Generalized Stochastic Petri Nets
   MEYER JF, 1992, PERFORM EVALUATION, V14, P139, DOI 10.1016/0166-5316(92)90002-X
   Moscato F, 2012, IEEE T AUTOM SCI ENG, V9, P83, DOI 10.1109/TASE.2011.2161981
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Nicol DM, 2004, IEEE T DEPEND SECURE, V1, P48, DOI 10.1109/TDSC.2004.11
   OMG, 2012, FORMAL20120601 OMG
   OMG, 2008, FORMAL080405 OMG
   OMG, 2005, FORMAL050102 OMG
   OMG, 2011, FORMAL110805 OMG
   Raiteri DC, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P659
   SAE International, 2009, ARCH AN DES LANG
   Sangiovanni-Vincentelli A, 2007, P IEEE, V95, P467, DOI 10.1109/JPROC.2006.890107
   Sarjoughian HS, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P149, DOI 10.1109/WSC.2006.323047
   Sprinkle J., 2014, ABS14092359 CORR
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   The Eclipse Foundation, 2016, PAP
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   Trivedi Kishor S., 2009, Performance Evaluation Review, V36, P52, DOI 10.1145/1530873.1530884
   Trowitzsch J., 2007, VALUETOOLS 2007, P30
   Vittorini V., 2004, SOFTW SYST MODEL, V3, P68, DOI DOI 10.1007/s10270-003-0039-5
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
   Zhang T, 2008, INNOV SYST SOFTW ENG, V4, P203, DOI 10.1007/s11334-008-0052-5
NR 56
TC 6
Z9 6
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2241
EP 2264
DI 10.1007/s10270-018-0663-8
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100030
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kesserwan, N
   Dssouli, R
   Bentahar, J
   Stepien, B
   Labrèche, P
AF Kesserwan, Nader
   Dssouli, Rachida
   Bentahar, Jamal
   Stepien, Bernard
   Labreche, Pierre
TI From use case maps to executable test procedures: a scenario-based
   approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven testing; Testing methodology; Embedded systems; Test
   generation; TTCN-3; TDL; UCM
ID TEST-GENERATION
AB Testing embedded systems software has become a costly activity as these systems become more complex to fulfill rising needs. Testing processes should be both effective and affordable. An ideal testing process should begin with validated requirements and begin as early as possible so that requirements defects can be fixed before they propagate and become more difficult to address. Furthermore, the testing process should facilitate test procedures creation and automate their execution. We propose a novel methodology for testing functional requirements. The methodology activities include standard notations, such as UCM for modeling scenarios derived from requirements, TDL for describing test cases and TTCN-3 for executing test procedures; other test scripting languages can also be used with our methodology. Furthermore, the automation of the methodology generates test artifacts through model transformation. The main goals of this test methodology are to leverage requirements represented as scenarios, to replace the natural language test case descriptions with test scenarios in TDL, and to generate executable test procedures. Demonstration of the feasibility of the proposed approach is based on a public case study. An empirical evaluation of our approach is given using a case study from the avionics domain.
C1 [Kesserwan, Nader; Dssouli, Rachida; Bentahar, Jamal] Concordia Univ, CIISE, Montreal, PQ, Canada.
   [Stepien, Bernard] Univ Ottawa, Formal Descript Tech, Ottawa, ON, Canada.
   [Labreche, Pierre] Esterline CMC Elect, Montreal, PQ, Canada.
C3 Concordia University - Canada; University of Ottawa
RP Kesserwan, N (corresponding author), Concordia Univ, CIISE, Montreal, PQ, Canada.
EM n_kesse@encs.concordia.ca; rachida.dssouli@concordia.ca;
   bentahar@ciise.concordia.ca; bernard@eecs.uottawa.ca;
   Pierre.Labreche@cmcElectronics.ca
OI Bentahar, Jamal/0000-0002-3136-4849
FU CRIAQ; Esterline CMC Electronics; Solutions Isoneo; Mitacs-Accelerated
   Graduate Research Internship Program;  [FR05066];  [FR05067]
FX This research was supported by CRIAQ, Esterline CMC Electronics,
   Solutions Isoneo and Mitacs-Accelerated Graduate Research Internship
   Program. Project title: Test Automation with TTCN-3, Grant Numbers:
   FR05066, FR05067.
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Kirstan Sascha, WHAT IS BENEFIT MODE, DOI [10.4018/978-1-61350-438-3.ch013, DOI 10.4018/978-1-61350-438-3.CH013]
   [Anonymous], DO178A
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Bertolino A., 2006, Software Prod- uct Lines - Research Issues in Engineering and Management, P425, DOI DOI 10.1007/978-3-540-33253-4_
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Boulet P, 2015, LECT NOTES COMPUT SC, V9369, P193, DOI 10.1007/978-3-319-24912-4_14
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   do P. Leite J. C. S., 2000, Requirements Engineering, V5, P38, DOI 10.1007/PL00010342
   Dvorak D., 2009, NASA STUDY FLIGHT SO
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Hasling Bill, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P367, DOI 10.1109/ICST.2008.9
   Heckel Reiko., 2003, Electronic Notes in Theoretical Computer Science, V82, P33
   Hovsepyan A, 2014, 1 INT WORKSH MOD DRI, V1249
   Kealey J, 2007, LECT NOTES COMPUT SC, V4745, P133
   Makedonski Philip, US C ADV AUT TEST UC
   Marrone S, 2014, INT J SOFTW TOOLS TE, V16, P669, DOI 10.1007/s10009-014-0320-7
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nogueira S, 2014, FORM ASP COMPUT, V26, P441, DOI 10.1007/s00165-012-0258-z
   Ryser J., 1999, P 12 INT C SOFTW SYS
   Sarmiento E, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P32, DOI 10.1109/RET.2014.6908677
   Schatz Bernhard, 2011, P 2011 2 E EUR REG C, DOI [10.1109/ECBS-EERC.2011.42, DOI 10.1109/ECBS-EERC.2011.42]
   Somé SS, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P724
   Ulrich A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P601
   Zhang M, 2014, P 8 INT C SYST AN MO
NR 26
TC 3
Z9 4
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1543
EP 1570
DI 10.1007/s10270-017-0620-y
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400034
DA 2024-07-18
ER

PT J
AU Gabmeyer, S
   Kaufmann, P
   Seidl, M
   Gogolla, M
   Kappel, G
AF Gabmeyer, Sebastian
   Kaufmann, Petra
   Seidl, Martina
   Gogolla, Martin
   Kappel, Gerti
TI A feature-based classification of formal verification techniques for
   software models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering; Verification; Model checking; Theorem proving
ID GUIDED ABSTRACTION REFINEMENT; UML MODELS; GRAPH-TRANSFORMATIONS; OCL
   CONSTRAINTS; REWRITING LOGIC; CHECKING; SEMANTICS; TOOL; SPECIFICATIONS;
   VALIDATION
AB Software models are the core development artifact in model-based engineering (MBE). The MBE paradigm promotes the use of software models to describe structure and behavior of the system under development and proposes the automatic generation of executable code from the models. Thus, defects in the models most likely propagate to executable code. To detect defects already at the modeling level, many approaches propose to use formal verification techniques to ensure the correctness of these models. These approaches are the subject of this survey. We review the state of the art of formal verification techniques for software models and provide a feature-based classification that allows us to categorize and compare the different approaches.
C1 [Gabmeyer, Sebastian] Tech Univ Darmstadt, Darmstadt, Germany.
   [Gogolla, Martin] Univ Bremen, Comp Sci, Bremen, Germany.
   [Kaufmann, Petra] Vienna Univ Technol, Business Informat, Vienna, Austria.
   [Kappel, Gerti] Vienna Univ Technol, Vienna, Austria.
   [Seidl, Martina] Johannes Kepler Univ Linz, Inst Formal Models & Verificat, Linz, Austria.
C3 Technical University of Darmstadt; University of Bremen; Technische
   Universitat Wien; Technische Universitat Wien; Johannes Kepler
   University Linz
RP Gabmeyer, S (corresponding author), Tech Univ Darmstadt, Darmstadt, Germany.
EM gabmeyer@seceng.informatik.tu-darmstadt.de; kaufmann@big.tuwien.ac.at;
   martina.seidl@jku.at; gogolla@informatik.uni-bremen.de;
   gerti@big.tuwien.ac.at
FU Vienna Science and Technology Fund (WWTF) [ICT10-018]; Austrian Science
   Fund (FWF) [S11408-N23]
FX This work has been funded by the Vienna Science and Technology Fund
   (WWTF) under Grant ICT10-018 and the Austrian Science Fund (FWF) under
   Grant S11408-N23.
CR Al-Lail M., 2013, CEUR Workshop Proceedings, V1069, P77
   ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   Amrani Moussa., 2012, P 1 WORKSHOP ANAL MO, P3
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], OBJ CONSTR LANG OCL
   [Anonymous], 2019, LCP ISABELLE 2019
   [Anonymous], 2000, ACM SIGSOFT S FDN SO, DOI DOI 10.1145/357474.355063
   [Anonymous], 1992, COQ PROOF ASSISTANT
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], [No title captured]
   [Anonymous], 1989, PRENTICE HALL INT SE
   [Anonymous], [No title captured]
   [Anonymous], 2008, Petri Net
   [Anonymous], 2007, LNCS
   [Anonymous], 2003, CAMBRIDGE TRACTS THE
   [Anonymous], 1997, HDB GRAPH GRAMMARS C, V1
   Anthony J. H., 1999, SPRINGER INT SERIES, V523, P237
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baader Franz, 1998, TERM REWRITING ALL
   Balasubramanian D, 2013, LECT NOTES COMPUT SC, V7795, P523, DOI 10.1007/978-3-642-36742-7_36
   Baldan P., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P381
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   Baresi L, 2008, ELECTRON NOTES THEOR, V213, P3, DOI 10.1016/j.entcs.2008.04.071
   Bashir RS, 2016, INT J INFORM MANAGE, V36, P883, DOI 10.1016/j.ijinfomgt.2016.05.024
   Ben-Ari M., 2008, Principles of the Spin Model Checker
   Berard B., 2001, Systems and Software Verification
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Boehm BW., 1981, Software Engineering Economics
   Borger E., 2003, ABSTRACT STATE MACHI
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Boronat A, 2009, LECT NOTES BUS INF P, V33, P96
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Chang E., 1993, Logic and Algebra of Specification. Proceedings of the NATO Advanced Study Institute, P143
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke Edmund, 2005, Verified Software: Theories, Tools, Experiments. First IFIP TC 2/WG 2.3 Conference, VSTTE 2005. (Lecture Notes in Computer Science vol. 4171), P251
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke EM, 1999, MODEL CHECKING, P1
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Del Bianco V, 2002, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2002.1181513
   Distefano D, 2000, INT FED INFO PROC, V49, P305
   Dong W, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P363, DOI 10.1109/APSEC.2001.991503
   Dubrovin J, 2008, INT CONF APPL CONCUR, P108, DOI 10.1109/ACSD.2008.4574602
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2006, MATH STRUCT COMP SCI, V16, P1133, DOI 10.1017/S096012950600569X
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P194, DOI 10.1007/978-3-540-87405-8_14
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Fecher H, 2005, LECT NOTES COMPUT SC, V3785, P52
   Gagnon P, 2008, J OBJECT TECHNOL, V7, P59, DOI 10.5381/jot.2008.7.1.a1
   Giese Holger, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P249, DOI 10.1007/978-3-642-33654-6_17
   Gnesi S., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P46, DOI 10.1109/HASE.1999.809474
   Gogolla Martin, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P115, DOI 10.1007/978-3-642-38916-0_7
   Gogolla M., 2016, LNI GI, V254, P203
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Graravel H, 2013, SOFTWARE TOOLS TECHN, V15, P89
   Grumberg Orna, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P277, DOI 10.1007/978-3-642-32759-9_25
   Habel A, 2002, LECT NOTES COMPUT SC, V2505, P135
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Heckel R, 1998, LECT NOTES COMPUT SC, V1382, P138, DOI 10.1007/BFb0053588
   Hermann F., 2010, ECEASST, V30, P20
   Hilken Frank, 2014, Tests and Proofs. 8th International Conference (TAP 2014). Held as Part of STAF 2014. Proceedings: LNCS 8570, P99, DOI 10.1007/978-3-319-09099-3_8
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hülsbusch M, 2010, LECT NOTES COMPUT SC, V6396, P183, DOI 10.1007/978-3-642-16265-7_14
   Hulsbusch M., 2012, TRCTIT1009 U TWENT
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Järvisalo M, 2012, AI MAG, V33, P89
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jussila T., 2006, LNCS, V4364, P15
   Kang K.C., 1990, CMUSEI90TR021
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Kaufmann P, 2015, COMPUT LANG SYST STR, V44, P72, DOI 10.1016/j.cl.2015.08.003
   Knapp A., 2016, ABS161003960 CORR
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   König B, 2006, LECT NOTES COMPUT SC, V3920, P197
   König B, 2008, LECT NOTES COMPUT SC, V5214, P305, DOI 10.1007/978-3-540-87405-8_21
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Lam VSW, 2004, 11TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P337, DOI 10.1109/ECBS.2004.1316717
   Leivant D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, P229
   Lilius J., 1999, 14th IEEE International Conference on Automated Software Engineering, P255, DOI 10.1109/ASE.1999.802301
   Lima V, 2009, ELECTRON NOTES THEOR, V254, P143, DOI 10.1016/j.entcs.2009.09.064
   Lixia Ji, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P2337, DOI 10.1109/CSSS.2012.580
   Malek M, 2008, COMM COM INF SC, V8, P1
   Manning G., 2008, ECE ASST, V10, P13
   McCune W, 2005, Prover9 and Mace4
   McMillan K. L., 1993, Symbolic model checking
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 1998, LECT NOTES COMPUT SC, V1376, P18
   Meseguer J, 2012, J LOGIC ALGEBR PROGR, V81, P721, DOI 10.1016/j.jlap.2012.06.003
   Mikk E, 1999, 2ND IEEE WORKSHOP ON INDUSTRIAL STRENGTH FORMAL SPECIFICATION TECHNIQUES - PROCEEDINGS, P90, DOI 10.1109/WIFT.1998.766303
   Mozaffari M., 2011, 2011 IEEE 3rd International Conference on Communication Software and Networks (ICCSN 2011), P117, DOI 10.1109/ICCSN.2011.6013675
   Mullins J, 2007, LECT NOTES COMPUT SC, V4468, P59
   Muram F. U. L., 2016, P 23 AS PAC SOFTW EN
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Narayanan A, 2008, ELECTRON NOTES THEOR, V211, P191, DOI 10.1016/j.entcs.2008.04.041
   Niewiadomski A., 2009, PSI, V5947, P319
   Niewiadomski A, 2009, FUND INFORM, V93, P289, DOI 10.3233/FI-2009-103
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   Ober I, 2004, LECT NOTES COMPUT SC, V2989, P127
   Object Management Group, 2011, OMG MET FAC MOF COR
   Object Management Group OMG, 2011, OMG MET FAC MOF 2 0
   OMG, 2011, OMG UN MOD LANG OMG
   Oubelli M. A., 2011, CEUR WORKSHOP P, V825
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Porres I., 2001, THESIS
   Poskitt C. M., 2013, ECEASST, V61, P20
   Poskitt CM, 2012, FUND INFORM, V118, P135, DOI 10.3233/FI-2012-708
   Rahim L.A., 2013, SOFTW SYST MODEL, P1
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P226
   Rensink Arend, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P66, DOI 10.1007/978-3-642-33654-6_5
   Rensink A., 2010, ECEASST, V32, P13
   Robby, 2003, Software Engineering Notes, V28, P267, DOI 10.1145/949952.940107
   Runge O., 2011, APPL GRAPH TRANSFORM, V7233, P81
   Schichl H, 2004, APPL OPTIMIZAT, V88, P25
   Schinz I, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P174, DOI 10.1109/SEFM.2004.1347518
   Schmidt A, 2003, LECT NOTES COMPUT SC, V2863, P92
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic B, 2011, AOSD 2011 PROCEEDINGS AND COMPANION MATERIAL, P53
   Sendall S., 2003, TECHNICAL REPORT
   Shen WW, 2002, P INT COMP SOFTW APP, P147, DOI 10.1109/CMPSAC.2002.1044545
   Siveroni I, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P96, DOI 10.1109/ARES.2008.194
   Smullyan R., 1995, First-order logic
   Sorensen M.H., 2006, Studies in Logic and the Foundations of Mathematics, V149
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Steinberg D., 2008, THE ECLIPSE SERIES
   Stenzel K, 2011, LECT NOTES COMPUT SC, V6981, P533, DOI 10.1007/978-3-642-24485-8_39
   Strecker M., 2012, INTERACTIVE AUTOMATE
   Strecker M, 2008, ELECTRON NOTES THEOR, V203, P135, DOI 10.1016/j.entcs.2008.03.039
   ter Beek MH, 2011, SCI COMPUT PROGRAM, V76, P119, DOI 10.1016/j.scico.2010.07.002
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Varro Daniel, 2004, Journal of Software and Systems Modeling, V3, P85, DOI [10.1007/s10270-003-0050-x, DOI 10.1007/S10270-003-0050-X, 10.1007/ s10270-003-0050-x]
   Weidenbach C, 2009, LECT NOTES ARTIF INT, V5663, P140, DOI 10.1007/978-3-642-02959-2_10
   Zhang SH, 2010, BMC SYST BIOL, V4, DOI 10.1186/1752-0509-4-S2-S10
   Ziemann P, 2003, LECT NOTES COMPUT SC, V2890, P351
NR 155
TC 12
Z9 14
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 473
EP 498
DI 10.1007/s10270-017-0591-z
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300020
DA 2024-07-18
ER

PT J
AU Voelter, M
   Kolb, B
   Szabó, T
   Ratiu, D
   van Deursen, A
AF Voelter, Markus
   Kolb, Bernd
   Szabo, Tamas
   Ratiu, Daniel
   van Deursen, Arie
TI Lessons learned from developing mbeddr: a case study in language
   engineering with MPS
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language engineering; Language extension; Language workbenches;
   Domain-specific language; Case study; Languages; Experimentation
ID IMPLEMENTATION
AB Language workbenches are touted as a promising technology to engineer languages for use in a wide range of domains, from programming to science to business. However, not many real-world case studies exist that evaluate the suitability of language workbench technology for this task. This paper contains such a case study. In particular, we evaluate the development of mbeddr, a collection of integrated languages and language extensions built with the Jetbrains MPS language workbench. mbeddr consists of 81 languages, with their IDE support, 34 of them C extensions. The mbeddr languages use a wide variety of notations-textual, tabular, symbolic and graphical-and the C extensions are modular; new extensions can be added without changing the existing implementation of C. mbeddr's development has spanned 10 person-years so far, and the tool is used in practice and continues to be developed. This makes mbeddr a meaningful case study of non-trivial size and complexity. The evaluation is centered around five research questions: language modularity, notational freedom and projectional editing, mechanisms for managing complexity, performance and scalability issues and the consequences for the development process. We draw generally positive conclusions; language engineering with MPS is ready for real-world use. However, we also identify a number of areas for improvement in the state of the art in language engineering in general, and in MPS in particular.
C1 [Voelter, Markus] Itemis, Stuttgart, Germany.
   [Kolb, Bernd; Szabo, Tamas] Itemis AG, Stuttgart, Germany.
   [Szabo, Tamas] Delft Univ Technol, Delft, Netherlands.
   [van Deursen, Arie] Delft Univ Technol, Software Engn, Delft, Netherlands.
   [Ratiu, Daniel] Siemens AG, Munich, Germany.
C3 Delft University of Technology; Delft University of Technology; Siemens
   AG; Siemens Germany
RP Voelter, M (corresponding author), Itemis, Stuttgart, Germany.
EM voelter@acm.org; kolb@itemis.de; tamas.szabo@itemis.de;
   daniel.ratiu@siemens.com; arie.vandeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
CR AHO AV, 1975, COMMUN ACM, V18, P441, DOI 10.1145/360933.360969
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2008, Programming in Scala
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 1996, Pthreads Programming a POSIX Standard for Better Multiprocessing
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2013, DSL ENG
   Backes M, 2011, CERTIFIED PROGRAMS P
   Barroca B, 2011, LECT NOTES COMPUT SC, V6563, P296, DOI 10.1007/978-3-642-19440-5_19
   Basten B, 2015, SCI COMPUT PROGRAM, V114, P7, DOI 10.1016/j.scico.2015.11.003
   Bierman GM, 2010, ACM SIGPLAN NOTICES, V45, P105, DOI 10.1145/1932681.1863560
   Broy M., 2011, EMERGING TECHNOLOGIE
   Campagne F, 2014, The MPS LanguageWorkbench, V1
   Chis A, 2014, LECT NOTES COMPUT SC, V8706, P102, DOI 10.1007/978-3-319-11245-9_6
   Christerson M, 2009, QCON LOND 2009
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clark T, 2014, P GEMOC WORKSH
   Clarke E, 2004, LECT NOTES COMPUTER, V2988
   Conrad M, 2011, 26262 ISO SAE
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dmitriev, 2004, ONBOARD ELECT MAGAZI, V1, P1
   Dutertre Bruno., 2006, The yices smt solver, V2, P2
   Dyba T, 2012, P ACM IEEE INT S EMP
   Earley J., 1975, Acta Informatica, V4, P183, DOI 10.1007/BF00288747
   Ellison C, 2012, ACM SIGPLAN NOTICES, V47, P533, DOI 10.1145/2103621.2103719
   Erdweg S, 2012, P LDTA
   Erdweg S, 2014, LECT NOTES COMPUT SC, V8586, P489
   Erdweg S, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P167
   Erdweg Sebastian, 2013, LNCS, V8225
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gray J, 2003, P HICSS
   Hathhorn C, 2015, ACM SIGPLAN NOTICES, V50, P336, DOI [10.1145/2813885.2737979, 10.1145/2737924.2737979]
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Hermans F, 2009, INT C MOD DRIV ENG L
   Hillebrand Joachim, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P257, DOI 10.1007/978-3-642-24270-0_19
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jiménez M, 2009, IEEE SOFTWARE, V26, P30, DOI 10.1109/MS.2009.93
   Jones Capers, 2011, The Economics of Software Quality
   Kats L. C. L, 2010, OOPSLA
   Kieburtz R. B, 1996, P ICSE
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Klint P, 2011, LNCS, V6491
   Klint P, 2013, LECT NOTES COMPUT SC, V8225, P36, DOI 10.1007/978-3-319-02654-1_3
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Krebbers R., 2015, Ph. D. Dissertation
   Kuhn A, 2012, LNCS, V7950
   Liebel G, 2014, P MODELS
   Liggesmeyer P, 2009, IEEE SOFTWARE, V26, P19, DOI 10.1109/MS.2009.80
   Lussenburg V, 2010, LECT NOTES COMPUT SC, V6395, P346
   MEDINAMORA R, 1981, IEEE T SOFTWARE ENG, V7, P472, DOI 10.1109/TSE.1981.231109
   Molotnikov Z, 2014, P 29 ACM IEEE INT C
   Neron P, 2015, LECT NOTES COMPUT SC, V9032, P205, DOI 10.1007/978-3-662-46669-8_9
   NOTKIN D, 1985, J SYST SOFTWARE, V5, P91, DOI 10.1016/0164-1212(85)90011-1
   Pavletic Domenik, 2015, Reliable Software Technologies - Ada-Europe 2015. 20th Ada-Europe International Conference on Reliable Software Technologies. Proceedings: LNCS 9111, P33, DOI 10.1007/978-3-319-19584-1
   Pavletic D, 2016, 2 INT WORKSH EX MOD
   Porter S. W, 1988, THESIS
   Ratiu D, 2015, P 3 INT WORKSH ASS C
   Ratiu D, 2013, P 5 NASA FORM METH S
   Ratiu D, 2012, P WORKSH MOD DRIV EN
   Ratiu D, 2012, P WORKSH FORM METH S
   Ratiu D., 2016, 11 IEEE ACM INT WORK
   Reps T. W, 1984, 1 ACM SIGSOFT SIGPLA
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Selim GMK, 2014, LECT NOTES COMPUT SC, V8571, P113
   Simi M, 2013, PEERJ PREPRINTS, V1
   SIMONYI C, 1995, NATO SCI COMM C
   Simonyi C, 2006, ACM SIGPLAN NOTICES, V41, P451, DOI 10.1145/1167515.1167511
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   TEITELBAUM T, 1981, COMMUN ACM, V24, P563, DOI 10.1145/358746.358755
   Thomas D, 2002, IEEE SOFTWARE, V19, P22, DOI 10.1109/MS.2002.1003449
   Tolvanen J.-P, 2009, OOPSLA 2009
   Tomita M, 2012, GEN LR PARSING
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   van Antwerpen H, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P49, DOI 10.1145/2847538.2847543
   van den Bos J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P671, DOI 10.1145/1985793.1985887
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   VAN DEURSEN A, 1993, J SYMB COMPUT, V15, P523, DOI 10.1016/S0747-7171(06)80004-0
   van Deursen A., 1997, Smalltalk and Java in Industry and Academia, P35
   van Rest Oskar, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P92, DOI 10.1007/978-3-642-38883-5_11
   Vergu V, 2015, LIPICS LEIBN INT P I, V36
   Visser E, 2007, LNCS
   Visser Eelco, 2004, Domain-Specific Program Generation: International Seminar, Dagstuhl Castle, Germany, March 23-28, 2003, P216, DOI DOI 10.1007/978-3-540-25935-0_13
   VOELTER M., 2014, GENERIC TOOLS SPECIF
   Voelter M, 2014, 7 INT C SOFTW LANG E
   Voelter M., 2012, P 3 ANN C SYST PROGR
   VOELTER M., 2013, ACESMB MODELS
   Voelter M, 2014, P GEMOC WORKSH
   Voelter M, 2016, P 9 C SOFTW LANG ENG
   Voelter  M., 2011, LNCS
   Voelter M., 2015, OOPSLA 2015
   Voelter M., 2013, 7 INT WORKSH MULT MO
   Voelter M, 2015, IEEE SOFTWARE, V32, P46, DOI 10.1109/MS.2014.103
   Voelter M, 2013, AUTOMAT SOFTW ENG, V20, P339, DOI 10.1007/s10515-013-0120-4
   Voelter Markus, 2010, LECT NOTES COMPUTER
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wu H., 2005, P 2005 ACM S APPL CO, P1370, DOI [10.1145/1066677.1066986, DOI 10.1145/1066677.1066986]
   Yin R.K, 2009, Case study research: Design and methods
NR 104
TC 10
Z9 10
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 585
EP 630
DI 10.1007/s10270-016-0575-4
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300024
DA 2024-07-18
ER

PT J
AU Dávid, I
   Ráth, I
   Varró, D
AF David, Istvan
   Rath, Istvan
   Varro, Daniel
TI Foundations for Streaming Model Transformations by Complex Event
   Processing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Streaming model transformations; Complex event processing; Live models;
   Change-driven transformations; Reactive transformations
ID TOOL INTEGRATION
AB Streaming model transformations represent a novel class of transformations to manipulate models whose elements are continuously produced or modified in high volume and with rapid rate of change. Executing streaming transformations requires efficient techniques to recognize activated transformation rules over a live model and a potentially infinite stream of events. In this paper, we propose foundations of streaming model transformations by innovatively integrating incremental model query, complex event processing (CEP) and reactive (event-driven) transformation techniques. Complex event processing allows to identify relevant patterns and sequences of events over an event stream. Our approach enables event streams to include model change events which are automatically and continuously populated by incremental model queries. Furthermore, a reactive rule engine carries out transformations on identified complex event patterns. We provide an integrated domain-specific language with precise semantics for capturing complex event patterns and streaming transformations together with an execution engine, all of which is now part of the Viatra reactive transformation framework. We demonstrate the feasibility of our approach with two case studies: one in an advanced model engineering workflow; and one in the context of on-the-fly gesture recognition.
C1 [David, Istvan] Univ Antwerp, Dept Math & Comp Sci, Middelheimlaan 1, B-2020 Antwerp, Belgium.
   [Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Rath, Istvan] IncQuery Labs Ltd, Bocskai Ut 77-79, H-1113 Budapest, Hungary.
   [Varro, Daniel] MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.
C3 University of Antwerp; Budapest University of Technology & Economics;
   Budapest University of Technology & Economics
RP Dávid, I (corresponding author), Univ Antwerp, Dept Math & Comp Sci, Middelheimlaan 1, B-2020 Antwerp, Belgium.
EM istvan.david@uantwerpen.be; rath@mit.bme.hu; varro@mit.bme.hu
RI David, Istvan/KEI-9054-2024; Varro, Daniel/AAC-4234-2022; Rath,
   Istvan/E-4846-2013
OI Varro, Daniel/0000-0002-8790-252X; 
FU MBSE4Mechatronics project of the agency for Innovation by Science and
   Technology in Flanders (IWT-Vlaanderen) [130013]; MONDO project [EU
   ICT-611125]; MTA-BME Lendulet Research Group on Cyber-Physical Systems
FX This work was partially supported by the MBSE4Mechatronics project
   (Grant No. 130013) of the agency for Innovation by Science and
   Technology in Flanders (IWT-Vlaanderen), and the MONDO (EU ICT-611125)
   project and the MTA-BME Lendulet 2015 Research Group on Cyber-Physical
   Systems.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Agrawal J., 2008, SIGMOD 08, P147, DOI DOI 10.1145/1376616.1376634
   Alevizos E., 2014, LECT NOTES COMPUTER, V8445, DOI [10.1007/978-3-319-07064-3_40, DOI 10.1007/978-3-319-07064-3_40]
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 2006, THESIS NATL TAIWAN O
   [Anonymous], CVPR 2011 WORKSHOPS, DOI DOI 10.1109/CVPRW.2011.5981811
   [Anonymous], ASME INT DES ENG TEC
   Arasu A., 2004, VLDB, P480
   Asplund F, 2011, LECT NOTES BUS INF P, V83, P270
   Baader Franz, 2001, Handbook of Automated Reasoning, P445, DOI DOI 10.1016/B978-044450813-3/50010-2
   Balogh L., DISTRIBUTED HETEROGE
   Bergmann G., 2015, LECT NOTES COMPUTER
   Bergmann G., ADV MODEL TRANSFORMA
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Box G., 2008, Wiley Series in Probability, Vfourth
   Brech B., 2013, INTERCONNECTING EVER
   Breu R., 2011, INT J SOFTWARE INFOR, V5, P267
   Burger C., 2015, CEUR WORKSHOP P
   Cariou E., 2012, P 7 WORKSH MOD RUN T, P60, DOI [10.1145/2422518.2422528, DOI 10.1145/2422518.2422528]
   Carlson J, 2010, SCI COMPUT PROGRAM, V75, P1215, DOI 10.1016/j.scico.2010.06.010
   Combemale Benoit, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P119, DOI 10.1007/978-3-642-33666-9_9
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Cugola G, 2012, J SYST SOFTWARE, V85, P1709, DOI 10.1016/j.jss.2012.03.056
   David I., 2012, ECLIPSECON EUR 2012
   David I., 2012, ABS12042203 CORR
   Dávid I, 2014, LECT NOTES COMPUT SC, V8767, P68, DOI 10.1007/978-3-319-11653-2_5
   Demers A.J., 2007, P CIDR, VVolume 7, P412
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Deshayes R., 2011, P 1 INT WORKSH COMB
   Dummit D., 2003, Abstract Algebra
   Esteves Verissimo P., 2012, COLLABORATIVE FINANC, P99, DOI [10.1007/978-3-642-20420-3_5, DOI 10.1007/978-3-642-20420-3_5]
   Etzion O., 2010, Event Processing in Action, Vfirst
   Fontenla-Romero Oscar, 2013, ONLINE MACHINE LEARN, P27
   Forgy C.L., 1990, EXPERT SYST, P324
   Fusco M, 2015, LECT NOTES COMPUT SC, V9202, P208, DOI 10.1007/978-3-319-21542-6_14
   Hartmann T, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P80, DOI 10.1109/MODELS.2015.7338238
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Helming J., JNECT ECLIPSE PLUG P
   Hinze A, 2015, INFORM SYST, V48, P1, DOI 10.1016/j.is.2014.07.003
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   IncQuery Labs, EMF INCQUERY VAL FRA
   IncQuery Labs, EMF INCQUERY CPS DEM
   Jayasekara S, 2015, J PARALLEL DISTR COM, V79-80, P42, DOI 10.1016/j.jpdc.2015.03.002
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos D. S., 2015, CEUR WORKSHOP P, V1406
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee EA, 2014, IEEE DES TEST, V31, P8, DOI 10.1109/MDAT.2014.2314600
   Luckham David C., 2001, POWER EVENTS INTRO C
   Moawad A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P90, DOI 10.1109/MODELS.2015.7338239
   Oikonomidis I, 2011, PROCEEDINGS OF THE BRITISH MACHINE VISION CONFERENCE 2011, DOI 10.5244/C.25.101
   Rath I., 2015, IOT SUPERCHARGED COM
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Saleh O, 2015, ADV INTELL SYST, V312, P185, DOI 10.1007/978-3-319-10518-5_15
   Sanchez Cuadrado Jesus, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P1, DOI 10.1007/978-3-642-38883-5_1
   Schmidt K. U., 2008, CEUR WORKSHOP P, V412
   Schultz-Moller NP, 2009, Em: Proceedings of the Third ACM International Conference on Distributed Event-Based Systems, P1
   Song H, 2011, LECT NOTES COMPUT SC, V6981, P273, DOI 10.1007/978-3-642-24485-8_20
   Szarnyas G., 2014, ACM IEEE 17 INT C MO
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vangheluwe HLM, 2000, PROCEEDINGS OF THE 2000 IEEE INTERNATIONAL SYMPOSIUM ON COMPUTER-AIDED CONTROL SYSTEM DESIGN, P129, DOI 10.1109/CACSD.2000.900199
   WASSERMAN AI, 1990, LECT NOTES COMPUT SC, V467, P137
   Weber RH, 2010, INTERNET OF THINGS: LEGAL PERSPECTIVES, P1, DOI 10.1007/978-3-642-11710-7_1
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Yskout K, 2012, J SOFTWARE SYSTEMS M
NR 66
TC 16
Z9 16
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 135
EP 162
DI 10.1007/s10270-016-0533-1
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100009
PM 29449795
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Störrle, H
AF Storrle, Harald
TI On the impact of size to the understanding of UML diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Diagram understanding; Diagram size metrics; Cognitive load; Experiment;
   Gestalt principles
ID COMPREHENSION; LAYOUT; DESIGN
AB Background Practical experience suggests that usage and understanding of UML diagrams is greatly affected by the quality of their layout. While existing research failed to provide conclusive and comprehensive evidence in support of this hypothesis, our own previous work provided substantial evidence to this effect, also suggesting diagram size as a relevant factor, for a range of diagram types and layouts.
   Aims Since there is no generally accepted precise notion of "diagram size," we first need to operationalize this concept, analyze its impact on diagram understanding, and derive practical advice from our findings.
   Method We define three alternative, plausible metrics. Since they are all highly correlated on a large sample of UML diagrams, we opt for the simplest one. We use it to re-analyze existing experimental data on diagram understanding.
   Results We find a strong negative correlation between diagram size and modeler performance. Our results are statistically highly significant and exhibit a very large degree of validity. We utilize these results to derive a recommendation on diagram sizes that are, on average, optimal for model understanding. These recommendations are implemented in a plug-in to a widely used modeling tool, providing continuous feedback about diagram size to modelers.
   Conclusions The effect sizes are varying, but generally suggest that the impact of size matches or exceeds that of other factors in diagram understanding. With the guideline and tool, modelers are steered toward avoiding too large diagrams.
C1 [Storrle, Harald] Tech Univ Denmark, Dept Appl Math & Comp Sci, Lyngby, Denmark.
C3 Technical University of Denmark
RP Störrle, H (corresponding author), Tech Univ Denmark, Dept Appl Math & Comp Sci, Lyngby, Denmark.
EM hsto@dtu.dk
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   [Anonymous], 2010, Cognitive Load Theory
   Britton C, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P31, DOI 10.1109/HCC.2002.1046338
   Dawoodi S. Y., THESIS
   Dwyer T, 2009, IEEE T VIS COMPUT GR, V15, P961, DOI 10.1109/TVCG.2009.109
   Effinger P, 2010, LECT NOTES BUS INF P, V67, P31
   Eichelberger H, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P23, DOI 10.1109/VISSOF.2002.1019791
   Eichelberger H., 2005, THESIS
   Eichelberger H., INF SOFTW TECHNOL, V51, P1686
   Eichelberger H, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P105
   Eiglsperger M., 2003, THESIS
   Fish A, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P41, DOI 10.1109/VLHCC.2007.34
   GOPHER D, 1984, HUM FACTORS, V26, P519, DOI 10.1177/001872088402600504
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gurr C. A., 2007, J VISUAL LANG COMPUT, V10, P317
   Karasneh B., 2013, INT WORKSH EXP EMP S
   Koffka K., 1935, Principles of gestalt psychology
   Kohler W., 1924, PHYS GESTALTEN RUHE
   Maier A., 2014, P INT C HUM BEH DES
   Marriott K., 1998, VISUAL LANGUAGE THEO
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Oberlander J., 1996, INFORM DESIGN J, V8, P163
   OMG, 2013, TECHNICAL REPORT
   Paas F, 2003, EDUC PSYCHOL, V38, P1, DOI 10.1207/S15326985EP3801_1
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Purchase H., SOFTWARE VISUALIZATI, P149
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase H. C., 2002, Journal of Graph Algorithms and Applications, V6, DOI 10.7155/jgaa.00054
   Purchase H. C., 2000, LECT NOTES ARTIF INT, P489
   Purchase HC, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P13, DOI 10.1109/VISSOF.2002.1019790
   Purchase HC, 2002, J VISUAL LANG COMPUT, V13, P501, DOI 10.1006/S1045-926X(02)00016-2
   Recker J., 2007, P 18 AUSTR C INF SYS
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Seemann J., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P415, DOI 10.1007/3-540-63938-1_86
   Selic B., LNCS
   Sharif B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P544, DOI 10.1109/ICSM.2011.6080828
   Sharif B, 2010, CONF SOFTW ENG EDUC, P41, DOI 10.1109/CSEET.2010.23
   Sharif B, 2009, IEEE INT WORK VIS SO, P11, DOI 10.1109/VISSOF.2009.5336430
   Sharif B, 2009, INT C PROGRAM COMPRE, P268, DOI 10.1109/ICPC.2009.5090055
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Soh Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P163
   Storrle H., 2012, P IEEE S VIS LANG HU, P195
   Storrle H., P IEEE S VIS LANG HU, P135
   Storrle H., 2014, Proceedings of the International Conference on Model Driven Engineering Languages and Systems (MoDELS 2014), P31
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Swan J, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P243, DOI 10.1109/VLHCC.2004.61
   TOMONAGA M, 1992, J COMP PSYCHOL, V106, P43, DOI 10.1037/0735-7036.106.1.43
   Wong K, 2006, SOFTWARE QUAL J, V14, P233, DOI 10.1007/s11219-006-9218-2
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zimbardo P., 2007, Psychology
NR 55
TC 6
Z9 6
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 115
EP 134
DI 10.1007/s10270-016-0529-x
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FV5WW
UT WOS:000424654100008
DA 2024-07-18
ER

PT J
AU Ajit, S
   Holmes, C
   Johnson, J
   Kolovos, DS
   Paige, RF
AF Ajit, Suraj
   Holmes, Chris
   Johnson, Julian
   Kolovos, Dimitrios S.
   Paige, Richard F.
TI Model-based tool support for Tactical Data Links: an experience report
   from the defence domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Tactical data link; Model-based development; Interoperability;
   Metamodelling; Model management; Eclipse Modeling Framework; Epsilon
ID DRIVEN; INDUSTRY
AB The Tactical Data Link (TDL) allows the exchange of information between cooperating platforms as part of an integrated command and control (C-2) system. Information exchange is facilitated by adherence to a complex, message-based protocol defined by document-centric standards. In this paper, we report on a recent body of work investigating migration from a document-centric to a model-centric approach within the context of the TDL domain, motivated by a desire to achieve a positive return on investment. The model-centric approach makes use of the Epsilon technology stack and provides a significant improvement to both the level of abstraction and rigour of the network design. It is checkable by a machine and, by virtue of an MDA-like approach to the separation of domains and model transformation between domains, is open to integration with other models to support more complex workflows, such as by providing the results of interoperability analyses in human-readable domain-specific reports conforming to an accepted standard.
C1 [Ajit, Suraj] Northampton Univ, Dept Comp Sci, Northampton, England.
   [Holmes, Chris] CGI IT, London, England.
   [Johnson, Julian] BAE Syst, Adv Technol Ctr, Preston, Lancs, England.
   [Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
C3 University of Northampton; Bae Systems; University of York - UK
RP Kolovos, DS (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM suraj.ajit@northampton.ac.uk; chris.holmes@cgi.com;
   julian.johnson@baesystems.com; dkolovos@cs.york.ac.uk;
   richard.paige@york.ac.uk
RI Ajit, Suraj/AAG-3907-2020; Kolovos, Dimitrios/L-9830-2014
OI Ajit, Suraj/0000-0001-7603-570X; Kolovos, Dimitris/0000-0002-1724-6563
FU BAE Systems; Military Air and Information (MAI); University of York; EC;
   CGI IT (UK) Ltd; University of Northampton; FP6; FP7; ModelWare;
   ModelPlex; MADES; INESS; Tactical Data Link community within MAI
FX The support of BAE Systems, Military Air and Information (MAI) business
   unit is gratefully acknowledged. This body of work would not have been
   possible without the support of the Tactical Data Link community within
   MAI. At the time of the undertaking of this body of work, both Dr.
   Holmes and Dr. Ajit were employed by BAE Systems. The support of the
   University of York is gratefully acknowledged. BAE Systems and the
   University of York have a long history of collaboration. Staff at the
   University provided valuable guidance and support regarding the use of
   the Epsilon technologies. The development of Epsilon has been partially
   supported through a number of EC co-funded FP6 and FP7 projects
   including ModelWare, ModelPlex, MADES and INESS. The support of CGI IT
   (UK) Ltd. is gratefully acknowledged. The support of the University of
   Northampton is also gratefully acknowledged.
CR [Anonymous], 2013, XTEXT 2 4 DOCUMENTAT
   [Anonymous], 2011, TACT DAT LINK NETW D
   [Anonymous], INTRO TACTICAL DIGIT
   [Anonymous], HUM US TEXT NOT HUTN
   [Anonymous], 2007, Pragmatic Programmers
   Asenstorfer J., 2004, DSTOTR1470
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Broy M., 2011, EMERGING TECHNOLOGIE, P343
   Buschmann F., 1996, SYSTEM PATTERNS PATT
   Clayberg E., 2006, BUILDING COMMERCIAL
   Daly C., EMFAT LANG REF
   Evans A, 2009, LECT NOTES COMPUT SC, V5562, P301, DOI 10.1007/978-3-642-02674-4_22
   Holzner S., 2005, ANT DEF GUID
   Hutchinson J., 2012, EMPIRICAL ASSESSMENT
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Johnson J., 2009, 7 ANN C SYST ENG RES
   Johnson J., 2007, MIT BAE SYST FALL C
   Joint Data Link Management Organisation (JDLMO), 2008, NETW UKJP0005B IN DA
   Kapteijns T., 2009, 4 EUR WORKSH COD CEN
   Karna J., 2009, P 9 OOPSLA WORKSH DO
   Kiczales G., 1997, LNCS, V1241
   Kim T., 1987, P WINT SIM C, P559
   Kim T. Gon, 2012, ENG PRINCIPLES COMBA, P479
   Kirstan S., 2010, P WORKSH CS2 EEMDD C
   Kolovos D., The epsilon book
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos Dimitrios S., 2007, P 1 TOW MOD WORKSH T
   Kolovos Dimitrios S., 2008, P WORKSH MOD DRIV TO
   Krogmann K., 2007, LECT NOTES INFORM, V106, P169
   Mak E, 2010, J DEF MODEL SIMUL-AP, V7, P39, DOI 10.1177/1548512909358585
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   NATO Standardization Agency, STAND AGR TACT DAT L
   Object Management Group, 2001, JISHN MUK JOA MILL M
   OMG, 2010, OBJ CONSTR LANG VER
   Sorroche J., 2012, ENG PRINCIPLES COMBA, P537
   Steinberg D., 2008, ECLIPSE SERIES
   Texel P.P., 1997, USE CASES COMBINED B
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   US Department of Defense, 2004, TACT DAT LINK TDL 16
   Whittle J., 2011, MODELS WORKSH, P40
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Zeigler B.P., 1984, Multifaceted modeling and discrete event simulation
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zeigler BP, 2006, SIMULATION BASED TES
NR 49
TC 1
Z9 1
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 559
EP 586
DI 10.1007/s10270-015-0480-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Pati, T
   Kolli, S
   Hill, J
AF Pati, Tanumoy
   Kolli, Sowmya
   Hill, James H.
TI Proactive modeling: a new model intelligence technique
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Proactive modeling; Model intelligence; Domain-specific modeling
   language; Model-driven engineering
AB This article discusses a model intelligence technique called proactive modeling. The goal of proactive modeling is to reduce the amount of manual modeling required when using a graphical DSML and to assist in step-by-step creation of a model. Proactive modeling accomplishes this goal by examining the metamodels syntax and constraints, automatically executing model modifications, and prompting the modeler for assistance when more than one valid model modification exists, but none are necessary. We have integrated proactive modeling into the generic modeling environment (GME) as a generic add-on that can operate on any domain-specific modeling language implemented in GME. Lastly, results from applying proactive modeling to several DSMLs in GME show that it can reduce modeling effort.
C1 [Pati, Tanumoy; Kolli, Sowmya; Hill, James H.] Indiana Univ Purdue Univ Indianapolis, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
C3 Indiana University System; Indiana University Indianapolis
RP Hill, J (corresponding author), Indiana Univ Purdue Univ Indianapolis, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
EM tpati@cs.iupui.edu; skolli@iupui.edu; hillj@cs.iupui.edu
CR Abrahams D, 2004, C++ template metaprogramming: concepts, tools, and techniques from Boost and beyond
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], WORKSH INT SIGN PROC
   Balasubramanian K., 2007, THESIS
   BALASUBRAMANIAN K, 2005, P 11 IEEE REAL TIM E
   Bodden E, 2004, P OOPSLA WORKSH DOM
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Chimia-Opoka Joanna, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P81, DOI 10.1109/ICSTW.2008.33
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Deng C, 2005, LECT NOTES COMPUT SC, V3798, P67
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hessellund A, 2007, LECT NOTES COMPUT SC, V4735, P46
   Hill J.H, 2011, 18 IEEE INT C WORKSH
   Janota M, 2008, LECT NOTES COMPUT SC, V5301, P431, DOI 10.1007/978-3-540-87875-9_31
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Menasce D.A., 2004, Performance by design: computer capacity planning by example, DOI DOI 10.5555/995032
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   *OBJ MAN GROUP, 2006, OBJ CONSTR LANG
   Object Management Group, 2006, FORMAL20060401 OMG
   Pati T., 2012, P 2012 WORKSH DOM SP, P7, DOI DOI 10.1145/2420918.2420921
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen Sagar, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P328, DOI 10.1109/ICST.2008.62
   Sen S, 2008, LECT NOTES COMPUT SC, V5002, P259
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Slaby JM, 2006, 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P350, DOI 10.1109/RTCSA.2006.17
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   White Jules, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P22
   WHITE J, 2006, GPCE4QOS
   White Jules., 2007, Model-Driven Development Tool Implementers Forum, TOOLS, V7
NR 34
TC 7
Z9 8
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 499
EP 521
DI 10.1007/s10270-015-0465-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400010
DA 2024-07-18
ER

PT J
AU Küster, J
   Völzer, H
   Favre, C
   Branco, MC
   Czarnecki, K
AF Kuester, Jochen
   Volzer, Hagen
   Favre, Cedric
   Branco, Moises Castelo
   Czarnecki, Krzysztof
TI Supporting different process views through a Shared Process Model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Business-IT gap; Model synchronization
ID ALIGNMENT
AB Different stakeholders in the business process management (BPM) life cycle benefit from having different views onto a particular process model. Each view can show, and offer to change, the details relevant to the particular stakeholder, leaving out the irrelevant ones. However, introducing different views on a process model entails the problem to synchronize changes in case that one view evolves. This problem is especially relevant and challenging for views at different abstraction levels. In this paper, we propose a Shared Process Model that provides different stakeholder views at different abstraction levels and synchronizes changes made to any view. We present detailed requirements and a solution design for the Shared Process Model. We also present an overview of our prototypical implementation to demonstrate the feasibility of the approach. Finally, we report on a comprehensive evaluation of the approach on real Business-IT modeling scenarios.
C1 [Kuester, Jochen] Bielefeld Univ Appl Sci, Bielefeld, Germany.
   [Volzer, Hagen; Favre, Cedric] IBM Res Zurich, Zurich, Switzerland.
   [Branco, Moises Castelo; Czarnecki, Krzysztof] Univ Waterloo, Generat Software Dev Lab, Waterloo, ON, Canada.
C3 Bielefeld University of Applied Sciences; International Business
   Machines (IBM); University of Waterloo
RP Branco, MC (corresponding author), Univ Waterloo, Generat Software Dev Lab, Waterloo, ON, Canada.
EM mcbranco@gsd.uwaterloo.ca
FU IBM Ph.D. CAS Fellow Scholarship; Ontario Research Fund's Research
   Excellence Project on Model-Integrated Software Service Engineering
FX We would like to thank the Bank of the Northeast of Brazil (Banco do
   Nordeste - BNB) for granting us full access to people and artifacts,
   fundamental for conducting the evaluation of the approach. This work was
   partially supported by an IBM Ph.D. CAS Fellow Scholarship, the Ontario
   Research Fund's Research Excellence Project on Model-Integrated Software
   Service Engineering.
CR [Anonymous], P HAW INT C SYST SCI
   Branco M., 2012, SOFTWARE SY IN PRESS
   Branco Moises Castelo, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P626, DOI 10.1007/978-3-642-33666-9_40
   Branco M.C., 2013, SOFTWARE SYSTEMS MOD
   Brandenburg Brandenburg M M, CONTENT ANAL LIT VAL, P65
   Buchwald S., 2011, INT HDB SERVICE LIFE
   Cicchetti A, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a1
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   De Castro V, 2009, INT J COOP INF SYST, V18, P225, DOI 10.1142/S0218843009002038
   Diskin Z., 2010, INT WORKSHOP MODEL D, P42
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6491, P92, DOI 10.1007/978-3-642-18023-1_3
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Favre C., RECORDED DEMO SHARED
   Finkelstein A., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P84
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Hofmann M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P371, DOI 10.1145/1926385.1926428
   Kolb J., 2012, PROC INT C SERVICE O, V6470, P484
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Kuster Jochen, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P20, DOI 10.1007/978-3-642-39013-5_3
   Luftman J., 1999, COMMUN ASSOC INF SYS, V1, P1, DOI DOI 10.17705/1CAIS.00111
   OMG, 2010, TECH REP
   Recker J., 2006, P 11 INT WORKSH EXPL
   Schumm D, 2010, IEEE INT ENTERP DIST, P89, DOI 10.1109/EDOC.2010.16
   Tran H., 2008, 1 INT WORKSH MOD BAS
   Vandermeer R., 2001, HEATHROW TERMINAL FI
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Weidlich M., 2008, TECH REP
   Weidlich M., 2010, IEEE T SOFTWARE ENG, V99
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   Weidlich M, 2009, LECT NOTES BUS INF P, V29, P71
   Werth D, 2007, LECT NOTES COMPUT SC, V4652, P3
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
NR 35
TC 3
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1207
EP 1233
DI 10.1007/s10270-015-0453-5
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX6ZS
UT WOS:000384535800014
DA 2024-07-18
ER

PT J
AU Kahraman, G
   Bilgen, S
AF Kahraman, Gokhan
   Bilgen, Semih
TI A framework for qualitative assessment of domain-specific languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific languages; Quality measures; Qualitative assessment;
   ISO/IEC 25010; CMMI
AB Domain-specific languages (DSLs) are used for improving many facets of software development, but whether and to what extent this aim is achieved is an important issue that must be addressed. This paper presents a proposal for a Framework for Qualitative Assessment of DSLs (FQAD). FQAD is used for determining the perspective of the evaluator, understanding the goal of the assessment and selecting fundamental DSL quality characteristics to guide the evaluator in the process. This framework adapts and integrates the ISO/IEC 25010: 2011 standard, CMMImaturity level evaluation approach and the scaling approach used inDESMETinto a perspective-based assessment. A detailed list of domain-specific language quality characteristics is elaborated, and a novel assessment method is proposed. Two case studies through which FQAD is matured and evaluated are reported. The case studies have shown that stakeholders find the FQAD process beneficial.
C1 [Kahraman, Gokhan; Bilgen, Semih] Middle E Tech Univ, Dept Elect & Elect Engn, TR-06531 Ankara, Turkey.
C3 Middle East Technical University
RP Kahraman, G (corresponding author), Middle E Tech Univ, Dept Elect & Elect Engn, TR-06531 Ankara, Turkey.
EM gokhank@aselsan.com.tr; semih-bilgen@metu.edu.tr
CR Amstel M.F., 2009, USING METRICS ASSESS
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], EVALUATION MODELING
   BUNGE M, 1977, FURNITURE WORLD, V3
   CAMERON K, 1980, ORGAN DYN, V9, P66, DOI 10.1016/0090-2616(80)90041-8
   Chen Y., 2005, EMPIRICAL STUDY PROG
   FRANK U, 2013, DOMAIN ENG PRODUCT L
   Gabriel P., 2010, THESIS
   HAUGEN O, 2007, P 7 OOPSLA WORKSH DO
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Kahlaoui A., 2008, METRICS NEWS, V13, P43
   Karna J., 2009, P DSM09
   Karsai G, 2009, P 9 OOPSLA WORKSH DO
   Kelly S., 2008, Domain-Specific Modeling
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Khedker U.P, 1997, TR97UPK1 U PUN DEP C
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kolovos D.S., 2006, P ECOOP WORKSHOP DOM
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Krogstie J., 2003, Evaluating UML using a generic quality framework
   McKean D., 2012, P 2012 WORKSH DOM SP
   Merilinna J., 2007, OOPSLA WORKSH DOM SP
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Paige R., 1999, CS199908 YORK U
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Software Engineering Institute, 2012, TECHNICAL REPORT
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   WAND Y, 1995, INFORM SYST J, V5, P203, DOI 10.1111/j.1365-2575.1995.tb00108.x
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Wu Y., 2010, P 10 DOM SPEC MOD WO
NR 32
TC 40
Z9 46
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1505
EP 1526
DI 10.1007/s10270-013-0387-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Milovanovic, V
   Milicev, D
AF Milovanovic, Vukasin
   Milicev, Dragan
TI An interactive tool for UML class model evolution in database
   applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model evolution; Schema evolution; Model differencing; Schema matching;
   Object-relational mapping
AB In the context of model-driven development of database applications with UML, the (usually relational) database schema is obtained automatically from the application's structural (class) UML model. Changes in requirements often lead to modifications of the application's structural model. Such changes, in turn, have to be propagated to the underlying database schema. Very often, especially when the system is in production with a large volume of users' live data, the data is considered to be valuable enough to be preserved through these changes. This paper describes an approach to cope with the problem of model evolution with the ultimate requirement to preserve the data stored in the database. The algorithm interactively determines differences between structural UML models before and after the changes and resolves those differences into transformations in the relational database domain.
C1 [Milovanovic, Vukasin; Milicev, Dragan] Univ Belgrade, Sch Elect Engn, Belgrade, Serbia.
C3 University of Belgrade
RP Milicev, D (corresponding author), Univ Belgrade, Sch Elect Engn, Belgrade, Serbia.
EM vukasin.milovanovic.87@gmail.com; dmilicev@etf.rs
CR Alexe Bogdan., 2008, Proceedings of the 2008 ACM SIGMOD international conference on Management of data, P1281
   Ambler S. W., 2006, MAPPING OBJECTS RELA
   [Anonymous], 2005, 051101 OMG
   Barnes J. M., 2007, OBJECT RELATIONAL MA
   Bellahsene Z, 2011, DATA CENTRIC SYST AP, P1, DOI 10.1007/978-3-642-16518-4
   Bernstein PA, 2011, PROC VLDB ENDOW, V4, P695
   Brosch P, 2009, LECT NOTES COMPUT SC, V5795, P271, DOI 10.1007/978-3-642-04425-0_20
   Cicchetti A., 2008, EDOC 08
   Cicchetti A, 2013, SOFTW SYST MODEL, V12, P53, DOI 10.1007/s10270-011-0193-0
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Curino CA, 2009, PROC INT CONF DATA, P1523, DOI 10.1109/ICDE.2009.46
   Curino Carlo A, 2008, INT C ENT INF SYST I
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Dewson R., 2012, BEGINNING SQL SERVER, P31
   Do HH, 2007, INFORM SYST, V32, P857, DOI 10.1016/j.is.2006.09.002
   Domínguez E, 2008, DATA KNOWL ENG, V65, P419, DOI 10.1016/j.datak.2007.12.001
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Falconer SM, 2007, LECT NOTES COMPUT SC, V4825, P114
   Falconer SM, 2011, DATA CENTRIC SYST AP, P29, DOI 10.1007/978-3-642-16518-4_2
   GIRSCHICK M, 2006, TUDCS20065
   Hainaut JL, 2006, LECT NOTES COMPUT SC, V4143, P95
   Hartung M, 2011, DATA CENTRIC SYST AP, P149, DOI 10.1007/978-3-642-16518-4_6
   Kelter U., 2005, SOFTWARE ENG, P105
   Koegel M, 2010, IEEE INT ENTERP DIST, P163, DOI 10.1109/EDOC.2010.15
   Kogel M., 2009, P JOINT MODSE MCCM W, V9
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Lanzenberger M, 2006, INFORMATION VISUALIZATION-BOOK, P430
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   LouisMRose Richard F, 2009, PROC JOINT MODSE MCC, P6
   Milicev D., 2009, Model-Driven Development with Executable UML
   Miller RJ, 2001, SIGMOD RECORD, V30, P78, DOI 10.1145/373626.373713
   Moon HJ, 2008, PROC VLDB ENDOW, V1, P882, DOI 10.14778/1453856.1453952
   Noy NF, 2003, INT J HUM-COMPUT ST, V59, P983, DOI 10.1016/j.ijhcs.2003.08.002
   Rivera JE, 2008, LECT NOTES BUS INF, V11, P141
   Shvaiko P, 2005, LECT NOTES COMPUT SC, V3730, P146
   Terwilliger J. F., 2010, P 2010 ACM SIGMOD IN, P1191
   Terwilliger JF, 2010, LECT NOTES COMPUT SC, V6412, P146, DOI 10.1007/978-3-642-16373-9_11
   Treude C., 2007, P EUR SOFTW ENG C FD, P295
   Vermolen Sander D., 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P201, DOI 10.1007/978-3-642-28830-2_11
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
NR 46
TC 6
Z9 6
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1273
EP 1295
DI 10.1007/s10270-013-0378-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200011
DA 2024-07-18
ER

PT J
AU Pfeiffer, RH
   Wasowski, A
AF Pfeiffer, Rolf-Helge
   Wasowski, Andrzej
TI The design space of multi-language development environments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-language development environment; Multi-modeling; Cross-language
   relations
ID TRACEABILITY LINKS; LANGUAGE; CODE; SPECIFICATION
AB Non-trivial software systems integrate many artifacts expressed in multiple modeling and programming languages. However, even though these artifacts heavily depend on each other, existing development environments do not sufficiently support handling relations between artifacts in different languages. By means of a literature survey, tool prototyping, and experiments, we study the design space of multi-language development environments (MLDEs)-tools that consider cross-language relations as first artifacts. We ask: What is the state of the art in the MLDE space? What are the design choices and challenges faced by tool builders? To what extent are MLDEs desired by users, and what aspects of MLDEs are particularly helpful? Our main conclusions are that (a) cross-language relations are ubiquitous and troublesome in multi-language systems, (b) users highly appreciate cross-language support mechanisms of MLDEs, and (c) generic MLDEs clearly advance the state of the art in tooling for language integration. The technical artifacts resulting from this study include a feature model of the MLDE design space, a data set of harvested cross-language relations in a case study system (JTrac) and two MLDE prototypes, TexMo and Coral, that implement two radically different choices in the design space.
C1 [Pfeiffer, Rolf-Helge; Wasowski, Andrzej] IT Univ Copenhagen, Proc & Syst Models Grp, Copenhagen, Denmark.
C3 IT University Copenhagen
RP Pfeiffer, RH (corresponding author), IT Univ Copenhagen, Proc & Syst Models Grp, Copenhagen, Denmark.
EM ropf@itu.dk; wasowski@itu.dk
OI Wasowski, Andrzej/0000-0003-0532-2685
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Alexander Ian., 2002, Proc of the 1st Int Workshop on Traceability, P26
   Alfaro L.D., 2001, EMSOFT
   Altheide F., 2002, P 3 EUR SYST ENG C E, P53
   Anderson KM, 2000, ACM T INFORM SYST, V18, P211, DOI 10.1145/352595.352596
   [Anonymous], 2004, P BEST PRACT MOD DRI
   [Anonymous], 1990, IEEE STAND GLOSS SOF
   [Anonymous], 1981, P ACM SIGPLAN SIGOA
   [Anonymous], MET FAC MOF 2 0 QUER
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], INT WORKSH MOD TRANS
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Aranega V., 2011, ELECT COMMUN EASST, V42
   Assmann U, 2014, SOFTW SYST MODEL, V13, P133, DOI 10.1007/s10270-012-0284-6
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Badros GJ, 2000, COMPUT NETW, V33, P159, DOI 10.1016/S1389-1286(00)00037-2
   BARBIER F, 2010, MODEL DRIVEN REVERSE, P283
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Branco M.C., MATCHING BUSINESS PR, P626
   Bruneliere H., 2010, P IEEE ACM JINT C AU
   Colburn T.R., 2000, PHILOS COMPUTER SCI
   de Figueiredo Carneiro G., 2009, ICSE COMP IEEE
   Dearle F., 2010, GROOVY DOMAIN SPECIF
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Espinoza A., 2005, ECMDA TW 2005 SINTEF
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Freude R., 2003, ESEC FSE WORKSH TOOL
   Galletta DF, 2004, J ASSOC INF SYST, V5, P128, DOI DOI 10.17705/1JAIS.00044
   Gomez P.M., 2012, 990 2012 EXTR MOD WO
   Grammel Birgit, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P609, DOI 10.1007/978-3-642-33666-9_39
   Grammel Birgit., 2010, ECMFA TW 10 P 6 ECMF, P7
   Groenewegen DM, 2010, IEEE SOFTWARE, V27, P31, DOI 10.1109/MS.2010.92
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Halasz F.G., 1994, COMMUN ACM, V37
   Hammond J.S., 2008, IDE usage trends
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hegedus A., P 11 IEEE INT C REQ, V29, P134
   Heidenreich F., 2007, WORKSH ASP OR MOD AO
   Heidenreich F., 2010, REVISED SELECTED PAP
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Henriksson J, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.9.a7
   Hessellund A, 2007, 22 ACM SIGPLAN C OBJ, P945
   Hessellund A., 2008, P 11 INT C MOD DRIV
   Hessellund A, 2009, THESIS IT U COPENHAG
   Hessellund A, 2008, LECT NOTES COMPUT SC, V5142, P285, DOI 10.1007/978-3-540-70592-5_13
   Hessellund A, 2007, LECT NOTES COMPUT SC, V4735, P46
   Holst W, 2005, 20 ANN ACM SIGPLAN O
   JARZABEK S, 1990, SOFTWARE ENG J, V5, P125, DOI 10.1049/sej.1990.0015
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Jouault F., 2010, P 2010 ACM S APPL CO
   Kang K. C., 1990, Technical Report
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kolovos D., 2006, On-Demand Merging of Traceability Links with Models
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McAffer J., 2010, OSGi and Equinox: Creating Highly Modular Java Systems
   MEYERS S, 1991, IEEE SOFTWARE, V8, P49, DOI 10.1109/52.62932
   Miller R., 1968, AFIPS Fall Joint Computer Conference, P267, DOI [10.1145/1476589.1476628, DOI 10.1145/1476589.1476628]
   Murphy-hill E., 2009, P 31 INT C SOFTW ENG
   Normark K., 1994, REPRESENTING PROGRAM, P11
   Northrop L., 2006, ULTRALARGE SCALE SYS
   Oldevik J., 2006, P ECMDA TRAC WORKSH
   Osterbye K., 1994, ACM European Conference on Hypermedia Technology 1994 Proceedings ECHT 94, P167, DOI 10.1145/192757.192795
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Pfeiffer Rolf-Helge, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P178, DOI 10.1007/978-3-642-31491-9_15
   Pfeiffer R.H., 2011, LECT NOTES COMPUTER, V7680, P431
   Pfeiffer R. H., CROSS LANGUAGE SUPPO, V29, P168
   Pfeiffer RH, 2011, LECT NOTES COMPUT SC, V6698, P312, DOI 10.1007/978-3-642-21470-7_22
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Reimann J., 2010, P 13 INT C MOD DRIV
   Salay R., 2009, P 21 INT C ADV INF S
   Schulze G., APPROACH SYNCHRONIZI, V29, P595
   SHERBA S.A., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering at 18th IEEE International Conference on Automated Software Engineering, P32
   Shvaiko P, 2005, LECT NOTES COMPUT SC, V3730, P146
   Steinberger M, 2011, IEEE T VIS COMPUT GR, V17, P2249, DOI 10.1109/TVCG.2011.183
   Strein D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P207
   Strein D, 2007, IEEE T SOFTWARE ENG, V33, P592, DOI [10.1109/TSE.2007.70710, 10.1109/tse.2007.70710]
   SUFRIN B, 1982, SCI COMPUT PROGRAM, V1, P157, DOI 10.1016/0167-6423(82)90014-4
   Voigt K., 2010, LNI, V160, P537
   Voigt Konrad., 2010, P 2010 ACM S APPL CO, P2281, DOI [10.1145/1774088.1774563, DOI 10.1145/1774088.1774563]
   Wagner S., 2008, P 2 INT WORKSH ROL S
   Waldner M., 2010, P GRAPHICS INTERFACE
   Wilke C, 2012, LECT NOTES COMPUT SC, V7304, P320, DOI 10.1007/978-3-642-30561-0_22
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Xing Z., 2006, P 22 IEEE INT C SOFT
   Zend Technologies Ltd, TAK PULS DEV COMM
NR 92
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 383
EP 411
DI 10.1007/s10270-013-0376-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100023
DA 2024-07-18
ER

PT J
AU Acher, M
   Cleve, A
   Collet, P
   Merle, P
   Duchien, L
   Lahire, P
AF Acher, Mathieu
   Cleve, Anthony
   Collet, Philippe
   Merle, Philippe
   Duchien, Laurence
   Lahire, Philippe
TI Extraction and evolution of architectural variability models in
   plugin-based systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Variability; Product lines; Reverse engineering; Software evolution;
   Architecture recovery; Configuration management
AB Variability management is a key issue when building and evolving software-intensive systems, making it possible to extend, configure, customize and adapt such systems to customers' needs and specific deployment contexts. A wide form of variability can be found in extensible software systems, typically built on top of plugin-based architectures that offer a (large) number of configuration options through plugins. In an ideal world, a software architect should be able to generate a system variant on-demand, corresponding to a particular assembly of plugins. To this end, the variation points and constraints between architectural elements should be properly modeled and maintained over time (i.e., for each version of an architecture). A crucial, yet error-prone and time-consuming, task for a software architect is to build an accurate representation of the variability of an architecture, in order to prevent unsafe architectural variants and reach the highest possible level of flexibility. In this article, we propose a reverse engineering process for producing a variability model (i.e., a feature model) of a plugin-based architecture. We develop automated techniques to extract and combine different variability descriptions, including a hierarchical software architecture model, a plugin dependency model and the software architect knowledge. By computing and reasoning about differences between versions of architectural feature models, software architect can control both the variability extraction and evolution processes. The proposed approach has been applied to a representative, large-scale plugin-based system (FraSCAti), considering different versions of its architecture. We report on our experience in this context.
C1 [Acher, Mathieu] Univ Rennes 1, Inria, Irisa, Rennes, France.
   [Cleve, Anthony] Univ Namur, PReCISE Res Ctr, Namur, Belgium.
   [Collet, Philippe; Lahire, Philippe] Univ Nice Sophia Antipolis, I3S, CNRS, UMR 7271, F-06189 Nice, Sophia Antipoli, France.
   [Merle, Philippe; Duchien, Laurence] Univ Lille 1, Inria Lille Nord Europe, CNRS, UMR, F-8022 Lille, France.
C3 Inria; Universite de Rennes; University of Namur; Universite Cote
   d'Azur; Centre National de la Recherche Scientifique (CNRS); Universite
   de Lille; Centre National de la Recherche Scientifique (CNRS)
RP Acher, M (corresponding author), Univ Rennes 1, Inria, Irisa, Rennes, France.
EM mathieu.acher@irisa.fr; acl@info.fundp.ac.be; collet@i3s.unice.fr;
   philippe.merle@inria.fr; laurence.duchien@inria.fr; lahire@i3s.unice.fr
RI Merle, Philippe/K-4261-2014
OI Merle, Philippe/0000-0003-3573-7312
CR Acher Mathieu, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P629, DOI 10.1007/978-3-642-31095-9_41
   Acher M., 2013, P 7 INT WORKSH VAR M
   Acher M, 2012, P 11 ANN INT C ASP O, P1, DOI [10.1145/2162049.2162051, DOI 10.1145/2162049.2162051]
   Acher M., 2013, SCI COMPUTE IN PRESS
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Andersen N., 2012, P SPLC 12, P97
   [Anonymous], SPLC INT C SOFTW PRO
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Bachmann F., 2001, Software Engineering Notes, V26, P126, DOI 10.1145/379377.375274
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Duszynski S., 2011, P 15 INT SOFTW PROD, V2
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Fahrenberg U, 2011, LECT NOTES COMPUT SC, V6981, P490, DOI 10.1007/978-3-642-24485-8_36
   Grünbacher P, 2009, IEEE INT CONF AUTOM, P247, DOI 10.1109/ASE.2009.11
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245, DOI 10.1109/ICSE.2013.6606689
   Hubaux A, 2013, SOFTW SYST MODEL, V12, P641, DOI 10.1007/s10270-011-0220-1
   Janota M, 2008, LECT NOTES COMPUT SC, V4961, P31, DOI 10.1007/978-3-540-78743-3_3
   John I., 2006, SOFTWARE PRODUCT LIN, P127
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kastner C., 2009, P 31 INT C SOFTW ENG
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Loesch F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P159
   Lopez-Herrejon RE, 2010, LECT NOTES COMPUT SC, V6285, P493, DOI 10.1007/978-3-642-15114-9_48
   Lopez-Herrejon RE, 2010, LECT NOTES COMPUT SC, V6138, P217, DOI 10.1007/978-3-642-13595-8_18
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S., 2011, LNCS, V6627, P194
   MENDONCA M, 2008, P 7 INT C GEN PROGR, P13, DOI DOI 10.1145/1449913.1449918
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Parra C, 2010, LECT NOTES COMPUT SC, V6285, P230, DOI 10.1007/978-3-642-15114-9_18
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Ryssel U., 2010, GPCE '10, 9th International Conference on Generative Programming and Component Engineering, P23
   Schneeweiss D., 2010, P 3 INT WORKSH VIS S
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schroeter Julia, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P252, DOI 10.1007/978-3-642-33666-9_17
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Seinturier L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P268, DOI 10.1109/SCC.2009.27
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thompson J. M., 2003, Requirements Engineering, V8, P42, DOI 10.1007/s00766-003-0166-0
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Weston N., 2009, P 13 INT SOFTW PROD, P211
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Xue YX, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1114, DOI 10.1145/1985793.1986009
   Yang YM, 2009, WORK CONF REVERSE EN, P215, DOI 10.1109/WCRE.2009.15
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 69
TC 24
Z9 26
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1367
EP 1394
DI 10.1007/s10270-013-0364-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300009
DA 2024-07-18
ER

PT J
AU Franke, U
   Johnson, P
   König, J
AF Franke, Ulrik
   Johnson, Pontus
   Konig, Johan
TI An architecture framework for enterprise IT service availability
   analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Systems availability; Service availability; Downtime; Noisy-OR; System
   quality analysis; Enterprise Architecture; ArchiMate; Metamodel; OCL
ID RELIABILITY
AB This paper presents an integrated enterprise architecture framework for qualitative and quantitative modeling and assessment of enterprise IT service availability. While most previous work has either focused on formal availability methods such as fault trees or qualitative methods such as maturity models, this framework offers a combination. First, a modeling and assessment framework is described. In addition to metamodel classes, relationships and attributes suitable for availability modeling, the framework also features a formal computational model written in a probabilistic version of the object constraint language. The model is based on 14 systemic factors impacting service availability and also accounts for the structural features of the service architecture. Second, the framework is empirically tested in nine enterprise information system case studies. Based on an initial availability baseline and the annual evolution of the 14 factors of the model, annual availability predictions are made and compared with the actual outcomes as reported in SLA reports and system logs. The practical usefulness of the method is discussed based on the outcomes of a workshop conducted with the participating enterprises, and some directions for future research are offered.
C1 [Franke, Ulrik; Johnson, Pontus; Konig, Johan] Royal Inst Technol, Stockholm, Sweden.
C3 Royal Institute of Technology
RP Franke, U (corresponding author), Royal Inst Technol, Stockholm, Sweden.
EM ulrikf@ics.kth.se; pj101@ics.kth.se; johank@ics.kth.se
RI ; Johnson, Pontus/C-5796-2014
OI Franke, Ulrik/0000-0003-2017-7914; Johnson, Pontus/0000-0002-3293-1681
CR AIER S, SURVIVAL ANAL APPL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2010, QUEUE, DOI DOI 10.1145/1755884.1772130
   ASKAKER J, 2008, DAGENS INDUSTRI, V4, P6
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bernardi Simona., 2007, WOSP 07, P115
   Bocciarelli P, 2011, SOFTW SYST MODEL, V10, P265, DOI 10.1007/s10270-010-0150-3
   Buschle M., 2011, PREPR CAISE 11 FOR, P25
   BUSCHLE M, 2010, CAISE2010 FORUM POST
   CHARETTE R, BANK OF AMERICA SUFF
   Cortellessa V., 2002, P 3 INT WORKSHOP SOF, P302
   CORTELLESSA V, 2004, ACM SIGSOFT SOFTWARE, V29, P197
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   EKSTEDT M, 2009, PROCEEDINGS OF THE 1
   ERICSON C, 1999, 17TH INTERNATIONAL S
   Forbus KD, 2008, FOUND ARTIF INTELL, P361, DOI 10.1016/S1574-6526(07)03009-X
   Franke U, 2012, SOFTWARE QUAL J, V20, P369, DOI 10.1007/s11219-011-9141-z
   Gray J., 1985, TECHNICAL REPORT
   Henrion M., 1989, Proceedings of the 3rd Conference on Uncertainty in Artificial Intelligence, P161
   HILLIER FS, 2005, INTRODUCTION TO OPER
   HOCHSTEIN A, 2005, PROCEEDINGS OF THE 1
   HOLUB E, 2009, TECHNICAL REPORT
   Immonen A., 2006, Research Issues in Software Product-Lines - Engineering and Managemen, P373, DOI DOI 10.1007/978-3-540-33253-4_10
   Irani Z, 2003, INFORM MANAGE-AMSTER, V41, P177, DOI 10.1016/S0378-7206(03)00046-6
   JOHNSON P, 2007, PROCEEDINGS OF THE 1
   Johnson P., 2002, THESIS
   JOHNSON P, 2007, INF SYST FRONTIERS, V9
   Johnson P, 2012, LIBR RESOUR TECH SER, V56, P2, DOI 10.5860/lrts.56n1.2
   Jordan Diane., 2007, Web services business process execution language version 2.0
   Lankhorst M., 2009, ENTERPRISE ARCHITECT, V2nd
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   LEANGSUKSUN C, 2003, PROCEEDING OF THE 20
   Liang YH, 2011, INT J QUAL RELIAB MA, V28, P317, DOI 10.1108/02656711111109919
   Majzik I, 2003, LECT NOTES COMPUT SC, V2677, P219
   Malik Bill, 2010, TECHNICAL REPORT
   Marcus E., 2003, BLUEPRINTS HIGH AVAI
   MARRONE M, 2010, IEEE INT C MAN INN T, P378, DOI DOI 10.1109/ICMIT.2010.5492719
   Marrone M, 2011, INF SYST E-BUS MANAG, V9, P363, DOI 10.1007/s10257-010-0131-7
   Milanovic N., 2010, MODELS METHODS AND T
   NARMAN P, 2011, ENTERP INF SYST TO A
   Onisko A, 2001, INT J APPROX REASON, V27, P165, DOI 10.1016/S0888-613X(01)00039-1
   *OP GROUP, ARCHIMATE 1 0 SPECIF
   OPPENHEIMER D, 2003, PROCEEDINGS OF USITS
   OSTERLIND M, 2011, THESIS
   Pertet Soila, 2005, TECHNICAL REPORT
   PHELAN P, 2011, TECHNICAL REPORT
   Rausand M, 2004, SYSTEM RELIABILITY T
   Rodrigues G. M., 2008, THESIS
   SAHNER RA, 1987, IEEE T RELIAB, V36, P186, DOI 10.1109/TR.1987.5222336
   SCOTT D, 2011, TECHNICAL REPORT
   Singh H, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ISSRE.2001.989454
   SUNDKVIST F, 2012, EFTER HAVERIET TIETO
   Taylor S., 2007, SERVICE STRATEGY ITI
   Taylor S., 2007, SERVICE OPERATION IT
   TAYLOR S, 2007, SERVICE TRANSITION I
   Taylor Sharon, 2007, SERVICE DESIGN ITIL
   Taylor Sharon., 2007, Continual service improvement
   ULLBERG J, 2010, PROCEEDINGS OF THE I
   VANBUUREN R, 2004, GRAPH TRANSFORMATION, P183
   Varian H, 2004, ADV INF SEC, V12, P1
   Wang J, 1998, TIMED PETRI NETS THE, V39
   Zambon E, 2011, SOFTW SYST MODEL, V10, P553, DOI 10.1007/s10270-010-0166-8
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
   2009, 3RD INTERNATIONAL WO, P141
NR 65
TC 15
Z9 16
U1 0
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1417
EP 1445
DI 10.1007/s10270-012-0307-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300011
DA 2024-07-18
ER

PT J
AU Walter, T
   Parreiras, FS
   Staab, S
AF Walter, Tobias
   Parreiras, Fernando Silva
   Staab, Steffen
TI An ontology-based framework for domain-specific modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling; Ontology technologies
ID LANGUAGE; SYNTAX
AB Domain-specific languages (DSLs) provide abstractions and notations for better understanding and easier modeling of applications in a special domain. Current shortcomings of DSLs include learning curve and formal semantics. This paper reports on a framework that allows the use of ontology technologies to describe and reason on DSLs. The formal semantics of OWL together with reasoning services allows for addressing constraint definition, progressive evaluation, suggestions, and debugging. The approach integrates existing metamodels and concrete syntaxes in a new technical space. A scenario in which domain models for network devices are created illustrates the framework.
C1 [Walter, Tobias; Parreiras, Fernando Silva; Staab, Steffen] WeST Inst Web Sci & Technol, D-56070 Koblenz, Germany.
RP Walter, T (corresponding author), WeST Inst Web Sci & Technol, Univ Str 1, D-56070 Koblenz, Germany.
EM walter@uni-koblenz.de; parreiras@uni-koblenz.de; staab@uni-koblenz.de
RI ; Silva Parreiras, Fernando/E-6990-2013
OI Staab, Steffen/0000-0002-0780-4154; Silva Parreiras,
   Fernando/0000-0002-9832-1501
FU EU [STReP-216691 MOST]
FX We like to thank Krzysztof Miksa from Comarch for providing the use
   cases. Further, we like to thank Prof. Dr. Jurgen Ebert for comments and
   improvement remarks. This work is supported by EU STReP-216691 MOST.
CR Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], 2006, MET FAC MOF COR SPEC
   ATLAS Group LINA & INRIA, 2005, KM3 KERN METAMETAMOD
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bartho A., 2009, MODELED SOFTWARE GUI
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bräuer M, 2008, LECT NOTES COMPUT SC, V5021, P34
   Czarnecki K., 1998, THESIS TU ILMENAU
   CZARNECKI K, 2005, P INT WORKSH SOFTW F
   Czarnecki K., 2006, GPCE, P211
   Djuric D, 2005, J OBJECT TECHNOL, V4, P109, DOI 10.5381/jot.2005.4.1.a3
   Donini FM, 1998, ARTIF INTELL, V100, P225, DOI 10.1016/S0004-3702(98)00009-5
   Ebert J., 1996, Conceptual Modeling - ER'96. 15th International Conference on Conceptual Modeling Proceedings, P163, DOI 10.1007/BFb0019922
   Ebert Jurgen., 2008, Workshop Software Reengineering, P67
   Evans AS, 1999, 2ND IEEE WORKSHOP ON INDUSTRIAL STRENGTH FORMAL SPECIFICATION TECHNIQUES - PROCEEDINGS, P102, DOI 10.1109/WIFT.1998.766304
   Farrugia James., 2003, WWW 03 P 12 INT C WO, P29
   Finkelstein A., 1996, INT WORKSH MULT PERS, P172
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gasevic D., 2004, P 3 WORKSH SOFTW MOD
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Glimm B., SPARQL 1 1 ENTAILMEN
   Gray J., 2008, OOPSLA COMP 08
   Grimm S., 2005, CEUR WORKSHOP P, V188
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Guizzardi G., 2005, P 14 INT C INF SYST
   Haarslev V., 2001, CEUR WORKSHOP P, V49
   Harris S., 2011, SPARQL 1 1 QUERY LAN
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Horridge M., OWL 2 WEB ONTOLOGY L
   Horridge M., 2004, TECHNICAL REPORT
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kalyanpur Aditya, 2006, Debugging and Repair of OWL Ontologies
   Kappel G, 2011, LECT NOTES COMPUT SC, V6520, P254
   Kelly S., 2007, DOMAIN SPECIFIC MODE
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kremen P., 2008, CEUR WORKSHOP P, V496
   Kurtev I., 2002, 4 INT S DISTR OBJ AP
   Langlois B., 2007, OOPSLA 7 WORKSH DOM
   Mazanek S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P242, DOI 10.1109/VLHCC.2008.4639094
   Mazanek S, 2009, LECT NOTES COMPUT SC, V5795, P322, DOI 10.1007/978-3-642-04425-0_24
   Miksa K., 2008, DEFINITION CASE STUD
   Miksa K., 2011, EVALUATION CASE STUD
   Miksa K., 2010, 1 DEMONSTRATOR REPOR
   Motik B, OWL 2 web ontology language-structural specification and functional-style syntax, VSecond
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Parreiras FS, 2010, DATA KNOWL ENG, V69, P1194, DOI 10.1016/j.datak.2010.07.009
   Polleres A, 2010, LECT NOTES COMPUT SC, V6333, P23, DOI 10.1007/978-3-642-15918-3_3
   Schneider M., 2010, CEUR WORKSHOP P, V604
   Sirin E., 2007, CEUR WORKSHOP P, V258
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tairas R., 2008, CEUR WORKSHOP P, V395
   Van Der Straeten R., 2005, THESIS VRIJE U BRUSS
   Walter T., 2010, P 3 WORKSH TRANSF WE, V604
   Walter T, 2010, LECT NOTES COMPUT SC, V6138, P321, DOI 10.1007/978-3-642-13595-8_25
   Walter T, 2009, LECT NOTES COMPUT SC, V5795, P408, DOI 10.1007/978-3-642-04425-0_32
   Wang HH, 2006, MULTIAGENT GRID SYST, V2, P455, DOI 10.3233/MGS-2006-2410
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   White Jules, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P22
NR 61
TC 24
Z9 24
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 83
EP 108
DI 10.1007/s10270-012-0249-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gerth, C
   Küster, JM
   Luckey, M
   Engels, G
AF Gerth, Christian
   Kuester, Jochen M.
   Luckey, Markus
   Engels, Gregor
TI Detection and resolution of conflicting change operations in version
   management of process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process model; Version management; Conflict detection; Conflict
   resolution
ID VERIFICATION; SIMILARITY; STATE; EPCS
AB Version management of process models requires that different versions of process models are integrated by applying change operations. Conflict detection between individually applied change operations and conflict resolution support are integral parts of version management. For conflict detection it is utterly important to compute a precise set of conflicts, since the minimization of the number of detected conflicts also reduces the overhead for merging different process model versions. As not every syntactic conflict leads to a conflict when taking into account model semantics, a computation of conflicts solely on the syntax leads to an unnecessary high number of conflicts. Moreover, even the set of precisely computed conflicts can be extensive and their resolution means a significant workload for a user. As a consequence, adequate support is required that guides a user through the resolution process and suggests possible resolution strategies for individual conflicts. In this paper, we introduce the notion of syntactic and semantic conflicts for change operations of process models. We provide a method how to efficiently compute conflicts precisely, using a term formalization of process models and consider the subsequent resolution of the detected conflicts based on different strategies. Using this approach, we can significantly reduce the number of overall conflicts and reduce the amount of work for the user when resolving conflicts.
C1 [Gerth, Christian; Luckey, Markus; Engels, Gregor] Univ Paderborn, Dept Comp Sci, D-33098 Paderborn, Germany.
   [Kuester, Jochen M.] IBM Res Zurich, Zurich, Switzerland.
C3 University of Paderborn; International Business Machines (IBM)
RP Gerth, C (corresponding author), Univ Paderborn, Dept Comp Sci, Warburger Str 100, D-33098 Paderborn, Germany.
EM gerth@upb.de; jku@zurich.ibm.com; luckey@upb.de; engels@upb.de
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K., 2007, MODELS WORKSHOPS, V2007, P293
   Bae J, 2006, LECT NOTES COMPUT SC, V4103, P141
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   BROSCH P, 2010, LNI, V161, P221
   Brosch P, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P55, DOI 10.1109/CVSM.2009.5071723
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Eder J., 2005, P INTEROP ESA 05, V2, P203
   Ehrig M., 2007, Proceedings of the Fourth Asia-Pacific Conference on Conceptual Modelling, Darlinghurst: Australian Computer Society, P71
   Gerth Christian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P57, DOI 10.1109/SCC.2010.38
   Gerth C, 2010, LECT NOTES COMPUT SC, V6395, P93
   Gerth C, 2009, LECT NOTES COMPUT SC, V5795, P152, DOI 10.1007/978-3-642-04425-0_12
   Kappel G, 2006, LECT NOTES COMPUT SC, V4199, P528
   Keith Edwards W., 1997, P 10 ANN ACM S US IN, P139
   Kelter U., 2005, SOFTWARE ENG, P105
   KIEPUSZEWSKI B, 2002, THESIS QUEENSLAND U
   KOEGEL M, 2010, P 1 INT WORKSH MOD C, P21, DOI DOI 10.1145/1826147.1826154
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Küster JM, 2009, LECT NOTES COMPUT SC, V5562, P158, DOI 10.1007/978-3-642-02674-4_12
   Kuster J.M., 2010, LNCS, V6138
   LETKEMAN K, 2005, IBM DEVELOPERWORKS
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Lippe E., 1992, P 5 ACM SIGSOFT S SO, P78
   Mendling J, 2007, LECT NOTES COMPUT SC, V4495, P439
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Pottinger R., 2003, P 29 INT C VER LARG, P826
   Rinderle S, 2004, LECT NOTES COMPUT SC, V3290, P101
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4102, P129
   van der Aalst W. M. P., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P535
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3520, P372
   van Dongen B, 2008, LECT NOTES COMPUT SC, V5074, P450
   van Glabbeek R.J., 1988, HDB PROCESS ALGEBRA, P3
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Weber B, 2007, LECT NOTES COMPUT SC, V4495, P574
   Weidlich M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P33, DOI 10.1109/SCC.2009.58
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31
   Wombacher A., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P337, DOI 10.1109/SCC.2010.95
NR 44
TC 15
Z9 15
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 517
EP 535
DI 10.1007/s10270-011-0226-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300008
DA 2024-07-18
ER

PT J
AU Kühne, T
AF Kuehne, Thomas
TI On model compatibility with referees and contexts
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model inheritance; Model compatibility; Language engineering; Model
   evolution; Subtyping; Refinement; Referee; Context
ID GENERAL REFINEMENT
AB A model-based engineering discipline presupposes that models are organised by creating relationships between them. While there has been considerable work on understanding what it means to instantiate one model from another, little is known about when a model should be considered to be a specialisation of another one. This article motivates and discusses ways of defining specialisation relationships between models, languages, and transformations respectively. Consideration is given to both structural and behavioural compatibility concerns. Several alternatives of defining a specialisation relationship are considered and discussed. The article furthermore discusses the notions of referee and context in order to validate and define specialisation relationships. The ideas and discussions presented in this article are meant to provide a further stepping stone towards a systematic basis for organising models.
C1 Victoria Univ Wellington, Wellington 6140, New Zealand.
C3 Victoria University Wellington
RP Kühne, T (corresponding author), Victoria Univ Wellington, POB 600, Wellington 6140, New Zealand.
EM Thomas.Kuehne@ecs.victoria.ac.nz
RI Kühne, Thomas/E-8867-2016; Kuehne, Thomas/AAH-3220-2020
OI Kühne, Thomas/0000-0002-7674-2209; Kuehne, Thomas/0000-0002-7674-2209
CR Abadi M, 1995, LECT NOTES COMPUT SC, V952, P145
   [Anonymous], 1991, SUMM C GEN TOP APPL
   Arnold K., 2000, The Java Programming Language, V3rd ed
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2007, ADV COMPUT, V70, P105, DOI 10.1016/S0065-2458(06)70003-1
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   BRACHMAN RJ, 1983, COMPUTER, V16, P30, DOI 10.1109/MC.1983.1654194
   Carnap R., 1947, MEANING NECESSITY ST
   Cook S., 1999, P TECHN OBJ OR LANG
   Cook William R., 1989, PhD dissertation
   COOK WR, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P125, DOI 10.1145/96709.96721
   Engels G., 2002, P INT C INT DES PROC
   Engels G., 2002, INT WORKSH PRINC SOF, P129, DOI [10.1145/512035.512066, DOI 10.1145/512035.512066]
   Ernst E., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P303
   Ernst E., 1999, THESIS U AARHUS AARH
   Favre J.M., 2004, LANG ENG MOD DRIV SO
   Harel D., 2000, Tech. rep. MCS00-16
   Havaldsrud T.V., 2009, RAOOL 2009 P WORKSH, P25
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   LALONDE W, 1991, J OBJECT-ORIENT PROG, V3, P57
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   MEYER B, 1992, OBJECT ORIENTED SERI
   Morgan C., 1994, On the Refinement Calculus
   Murer S., 1993, LECT NOTES COMPUTER, V782, P208
   Reeves S., 2007, P SOFTW INN ENG NZ W
   Reeves S, 2008, ELECTRON NOTES THEOR, V214, P309, DOI 10.1016/j.entcs.2008.06.014
   Reeves S, 2008, ELECTRON NOTES THEOR, V214, P277, DOI 10.1016/j.entcs.2008.06.013
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Wang XH, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P18
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
NR 31
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 475
EP 488
DI 10.1007/s10270-012-0241-4
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300006
DA 2024-07-18
ER

PT J
AU Chaudron, MRV
   Heijstek, W
   Nugroho, A
AF Chaudron, Michel R. V.
   Heijstek, Werner
   Nugroho, Ariadi
TI How effective is UML modeling ?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Unified Modeling Language; Costs and benefits; Quality; Productivity;
   Effectiveness
ID SOFTWARE-DEVELOPMENT; DESIGN
AB Modeling has become a common practice in modern software engineering. Since the mid 1990s the Unified Modeling Language (UML) has become the de facto standard for modeling software systems. The UML is used in all phases of software development: ranging from the requirement phase to the maintenance phase. However, empirical evidence regarding the effectiveness of modeling in software development is few and far apart. This paper aims to synthesize empirical evidence regarding the effectiveness of modeling using UML in software development, with a special focus on the cost and benefits.
C1 [Chaudron, Michel R. V.; Heijstek, Werner] Leiden Univ, Leiden Inst Adv Comp Sci, NL-2333 CA Leiden, Netherlands.
   [Nugroho, Ariadi] Software Improvement Grp, NL-1096 HA Amsterdam, Netherlands.
C3 Leiden University - Excl LUMC; Leiden University
RP Heijstek, W (corresponding author), Leiden Univ, Leiden Inst Adv Comp Sci, Niels Bohrweg 1, NL-2333 CA Leiden, Netherlands.
EM heijstek@liacs.nl; a.nugroho@sig.eu
OI Heijstek, Werner/0000-0002-9624-264X; Chaudron,
   Michel/0000-0001-7517-6666
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   Boehm B. W., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P473
   Boehm BW., 1981, Software Engineering Economics
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Dekel U, 2007, ACM SIGPLAN NOTICES, V42, P261, DOI 10.1145/1297105.1297047
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Forward A., 2008, TR200807 U OTT SCH I
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Heijstek W., 2011, TR201102 LEID U LEID
   Heijstek W., 2009, P 35 EUR C SOFTW ENG
   HERZBERG F, 1968, HARVARD BUS REV, V46, P53
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jones C, 1996, COMPUTER, V29, P94, DOI 10.1109/2.488361
   Jones C., 1986, PROGRAMMING PRODUCTI
   Lange C., 2006, P 28 INT C SOFTW ENG, P401
   Lange C. F. J., 2003, P WORKSH CONS PROBL
   Lange C.F.J., 2006, P 9 INT C MOD DRIV E, P27
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   McConnell Steve., 2004, Code Complete, V2nd ed
   Mellegard N., 2010, P 4 EUR C SOFTW ARCH, P245
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5002, P93
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Pareto L, 2010, LECT NOTES COMPUT SC, V6395, P406
   Premraj R, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P73, DOI 10.1109/WICSA.2011.19
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Stettina Christoph Johann, 2011, P 29 ACM INT C DES C
   Thorn C., 2008, P ICSE WORKSH MOD SO
   Weigert T., 2006, P IEEE INT C SENS NE
NR 32
TC 37
Z9 37
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 571
EP 580
DI 10.1007/s10270-012-0278-4
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500010
DA 2024-07-18
ER

PT J
AU Torres, V
   Giner, P
   Pelechano, V
AF Torres, Victoria
   Giner, Pau
   Pelechano, Vicente
TI Developing BP-driven web applications through the use of MDE techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web engineering; Model driven engineering; Business processes
ID BUSINESS PROCESSES; INTERFACES; INTERNET
AB Model driven engineering (MDE) is a suitable approach for performing the construction of software systems (in particular in the Web application domain). There are different types of Web applications depending on their purpose (i.e., document-centric, interactive, transactional, workflow/business process-based, collaborative, etc). This work focusses on business process-based Web applications in order to be able to understand business processes in a broad sense, from the lightweight business processes already addressed by existing proposals to long-running asynchronous processes. This work presents a MDE method for the construction of systems of this type. The method has been designed in two steps following the MDE principles. In the first step, the system is represented by means of models in a technology-independent manner. These models capture the different aspects of Web-based systems (these aspects refer to behaviour, structure, navigation, and presentation issues). In the second step, the model transformations (both model- to-model and model-to-text) are applied in order to obtain the final system in terms of a specific technology. In addition, a set of Eclipse-based tools has been developed to provide automation in the application of the proposed method in order to validate the proposal.
C1 [Giner, Pau] Univ Politecn Valencia UPV, Ctr Invest Metodos Prod Software, Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Torres, V (corresponding author), Univ Politecn Valencia UPV, Escuela Politecn Super Gandia, Valencia, Spain.
EM vtorres@dsic.upv.es
RI Pelechano, Vicente/S-4344-2016; Torres, Victoria/B-3828-2017
OI Pelechano, Vicente/0000-0003-1090-230X; Torres,
   Victoria/0000-0002-2039-2174
CR Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], WEB ENG MODELLING IM
   Bakshi Karun, 2005, P ISWC 2005 WORKSH E
   Barna P., ICWE, P321
   *BPMN, 2006, OMG FIN AD SPEC
   Brambilla Marco, 2008, 2008 8th International Conference on Web Engineering (ICWE), P155, DOI 10.1109/ICWE.2008.22
   Brambilla M, 2006, ACM T SOFTW ENG METH, V15, P360, DOI 10.1145/1178625.1178627
   Brambilla M, 2010, LECT NOTES COMPUT SC, V6189, P415, DOI 10.1007/978-3-642-13911-6_28
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Davis J., 2009, OPEN SOURCE SOA
   Distante D., 2007, International Journal of Web Engineering and Technology, V3, P43, DOI 10.1504/IJWET.2007.011527
   DISTANTE D, 2004, THESIS U LECCE ITALY
   Duhl J., 2003, TECHNICAL REPORT
   Fons J., 2008, THESIS U POLITECNICA
   Fowler M, 2004, INVERSION CONTROL CO
   Gershenfeld N, 2004, SCI AM, V291, P76, DOI 10.1038/scientificamerican1004-76
   Giner P, 2010, IEEE PERVAS COMPUT, V9, P18, DOI 10.1109/MPRV.2010.14
   Gómez J, 2000, LECT NOTES COMPUT SC, V1789, P79
   Goth Greg, 2009, IEEE Software, V26, P88, DOI 10.1109/MS.2009.30
   Holmes T, 2008, LECT NOTES COMPUT SC, V5095, P246, DOI 10.1007/978-3-540-69100-6_17
   Kappel G., 2006, WEB ENG DISCIPLINE S
   KOCH N., 2004, Journal of Web Engineering, V3, P22
   Koch N., 2001, THESIS LUDWIG MAXIMI
   Limbourg Q, 2004, ENGINEERING ADVANCED WEB APPLICATIONS, P325
   Linaje M, 2007, IEEE INTERNET COMPUT, V11, P53, DOI 10.1109/MIC.2007.123
   Link Stefan, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P329, DOI 10.1109/ICSEA.2008.61
   Marcos E., 2004, CAISE FOR HELD CONJ
   Pietschmann S, 2009, LECT NOTES COMPUT SC, V5802, P351, DOI 10.1007/978-3-642-04409-0_36
   Schmid HA, 2004, IEEE INTERNET COMPUT, V8, P19
   Schwabe D, 1998, THEOR PRACT OBJ SYST, V4, P207, DOI 10.1002/(SICI)1096-9942(1998)4:4<207::AID-TAPO2>3.0.CO;2-2
   Schwinger W, 2008, INT J WEB INF SYST, V4, P234, DOI 10.1108/17440080810901089
   Sousa K, 2008, J UNIVERS COMPUT SCI, V14, P3236
   Sukaviriya N, 2007, LECT NOTES COMPUT SC, V4735, P226
   Tedre Matti, 2008, Interactions, V15, P47, DOI 10.1145/1390085.1390096
   Torres V., P BPMN 2010 IN PRESS
   Troyer O. D., 2003, P 3 INT WORKSH WEB O
NR 36
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 609
EP 631
DI 10.1007/s10270-010-0177-5
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500013
DA 2024-07-18
ER

PT J
AU Meijler, TD
   Nytun, JP
   Prinz, A
   Wortmann, H
AF Meijler, Theo Dirk
   Nytun, Jan Pettersen
   Prinz, Andreas
   Wortmann, Hans
TI Supporting fine-grained generative model-driven evolution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Evolution; Model-driven development; Generative development;
   Interpretive development
ID SOFTWARE; ARCHITECTURE; LANGUAGE
AB In the standard generative Model-driven Architecture (MDA), adapting the models of an existing system requires re-generation and restarting of that system. This is due to a strong separation between the modeling environment and the runtime environment. Certain current approaches remove this separation, allowing a system to be changed smoothly when the model changes. These approaches are, however, based on interpretation of modeling information rather than on generation, as in MDA. This paper describes an architecture that supports fine-grained evolution combined with generative model-driven development. Fine-grained changes are applied in a generative model-driven way to a system that has itself been developed in this way. To achieve this, model changes must be propagated correctly toward impacted elements. The impact of a model change flows along three dimensions: implementation, data (instances), and modeled dependencies. These three dimensions are explicitly represented in an integrated modeling-runtime environment to enable traceability. This implies a fundamental rethinking of MDA.
C1 [Meijler, Theo Dirk] CEC Dresden, SAP Res, Dresden, Germany.
   [Nytun, Jan Pettersen; Prinz, Andreas] Univ Agder, Fac Sci & Engn, Agder, Norway.
   [Wortmann, Hans] Univ Groningen, Fac Management & Org, Groningen, Netherlands.
C3 SAP; University of Agder; University of Groningen
RP Meijler, TD (corresponding author), CEC Dresden, SAP Res, Dresden, Germany.
EM theo.dirk.meijler@sap.com
RI Wortmann, Johan C/J-9677-2012
OI Wortmann, Johan/0000-0002-8138-6931
CR Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], UNIFIED MODELING LAN
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], PROGRAMMING LANGUAGE
   [Anonymous], MDA GUIDE VERSION 1
   Atkinson C, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P119
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   Benjamin C., 2002, Pierce. Types and programming languages
   BERKEM B, 2003, J OBJECT TECHNOLOGY, V2, P117
   COOK S, 2004, MDA J, P1
   DON SB, 2000, LNCS, V18, P117
   DSOUZA D, 1999, P UML 99, P265
   DUCASSE S, 2004, P WORKSH SOFTW EV TR, P75
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   France R, 2001, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2001.972751
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   GRAY JG, 2004, LNCS, V32, P361
   Hearnden D, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P95, DOI 10.1109/IWPSE.2004.1334773
   Henderson-Sellers B., 2002, Journal of Database Management, V13, P43, DOI 10.4018/jdm.2002040104
   HOMS C, 2002, FORRESTER BRIEF
   IVAN K, 2006, OOPSLA COMPANION, P602
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Knoll K., 1994, Proceedings of the 1994 ACM SIGCPR Conference, P1, DOI 10.1145/186281.186286
   KRZYSZTOF C, 2007, P 22 IEEE ACM INT C, P575
   KRZYSZTOF C, 2005, OOPSLA COMPANION, P126
   Lehman MeirM., 2001, PARADIGM BEHAV MODEL, P1
   LIANG S, 1998, DYNAMIC CLASS LOADIN, P36
   MACIASZEK LA, 2005, REQUIREMENTS ANAL SY
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   MEIJLER TD, 2006, P 4 INT C SERV OR CO, P484
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2000, Automated Software Engineering, V7, P39, DOI 10.1023/A:1008765200695
   Meyer B., 1988, Object-Oriented Software Construction
   MONK S, 1993, ACM SIGMOD RECORD, V22, P16
   *OMG, OMG MDA SUCC STOR
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Pernici B, 2000, INFORMATION SYSTEMS ENGINEERING, P209
   Pugh W., 1989, P 16 ANN ACM S PRINC, P315
   Razavi R, 2005, COMPUT LANG SYST STR, V31, P199, DOI 10.1016/j.cl.2004.11.001
   RIEHLE D, 2001, P 2001 C OBJ OR PROG, P327
   Rumbaugh J., 2005, UNIFIED MODEL LANGUA
   Sadjadi SM, 2009, INT J SOFTW ENG KNOW, V19, P507, DOI 10.1142/S0218194009004258
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Stachour P, 2009, COMMUN ACM, V52, P54, DOI 10.1145/1592761.1592777
   Stefik M., 1985, AI MAG, V6, P40, DOI DOI 10.1609/AIMAG.V6I4.508
   Stuckenholz A., 2005, ACM SIGSOFT Software Engineering Notes, V30, DOI DOI 10.1145/1039174.1039197
   Sundaresh R.S., 1991, C RECORD 18 ANN ACM, P1
   Törngren M, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P432
   Visser E, 2002, LECT NOTES COMPUT SC, V2487, P299
   White S.A., 2004, Business Process Modeling Notation. BPMN 1.0. Business Process Modeling Initiative
   Yoder JW, 2001, ACM SIGPLAN NOTICES, V36, P50, DOI 10.1145/583960.583966
   YODER JW, 2002, P 3 IEEE IFIP C SOFT, P3
   [No title captured]
NR 62
TC 8
Z9 8
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 403
EP 424
DI 10.1007/s10270-009-0144-1
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700007
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Welch, J
   Faitelson, D
   Davies, J
AF Welch, James
   Faitelson, David
   Davies, Jim
TI Automatic maintenance of association invariants
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd IEEE International Conference on Software Engineering and Formal
   Methods
CY SEP 07-09, 2005
CL Koblenz, GERMANY
SP IEEE Comp Soc
DE Integrity; Maintenance; Association; Invariants; Model; Completion
AB Many approaches to software specification and design make use of invariants: constraints whose truth is preserved under operations on a system or component. Object modelling involves the definition of association invariants: constraints upon the sets of links corresponding to particular associations, most often concerning type, multiplicity, or symmetry. This paper shows how the definitions of operations may be extended to take account of association invariants, so that they may be properly considered when the operations are implemented. It introduces a formal, object-based modelling notation in which the process of extension and implementation, and thus the maintenance of association invariants, can be automated, making it easier to produce correct implementations of an object-oriented design.
C1 [Welch, James; Faitelson, David; Davies, Jim] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Welch, J (corresponding author), Univ Oxford, Comp Lab, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM james.welch@comlab.ox.ac.uk
RI Welch, Doctor James/HZI-2490-2023
OI Welch, Doctor James/0000-0002-3563-1254; Davies,
   Jim/0000-0003-4664-6862; Welch, James/0000-0003-1017-1623
CR ANTONIOU G, 2002, SAC 02, P6
   BARNETT M, 2004, LNCS, V3362
   CERI S, 1994, ACM T DATABASE SYST, V19, P367, DOI 10.1145/185827.185828
   DAVIES J, 2007, P SBMF 2006 EL NOT T
   DAVIES J, 2005, P SBMF 2004 EL NOT C
   DEMUTH B, 2001, P 4 INT C UN MOD LAN, P104
   FAITELSON D, 2006, P SBMF 2005 EL NOT T
   Gray P.M.D., 1992, OBJECT ORIENTED DATA
   Hall A., 1990, VDM '90. VDM and Z - Formal Methods in Software Development. Third International Symposium of VDM Europe Proceedings, P290
   HUGHES JG, 1991, OBJECT ORIENTED DATA
   JAGADISH HV, 1992, PROC INT CONF VERY L, P469
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   MAYOL E, 1999, LECT NOTES COMPUTER, V1727, P62
   Raistrick Chris., 2004, MODEL DRIVEN ARCHITE
   Schewe K.-D., 1992, FMLDO WORKSH COMP, P174
   Welch J, 2005, SEFM 2005: Third IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P282, DOI 10.1109/SEFM.2005.9
   2006, OBJECTSTORE DATABASE
NR 17
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 287
EP 301
DI 10.1007/s10270-008-0085-0
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 322NZ
UT WOS:000257383900005
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
AF Guerra, Esther
   de Lara, Juan
TI Event-driven grammars: relating abstract and concrete levels of visual
   languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Graph Transformations
CY SEP 17-23, 2006
CL Natal, BRAZIL
SP Brazilian Comp Soc, European Assoc Theoret Comp Sci, European Assoc Software Sci & Technol, Formal Methods Europe, Int Federat Informat Proc
DE graph grammars; triple graph transformation; meta-modelling; visual
   languages; consistency; UML
ID GRAPH TRANSFORMATION; DEFINITION
AB In this work we introduce event-driven grammars, a kind of graph grammars that are especially suited for visual modelling environments generated by meta-modelling. Rules in these grammars may be triggered by user actions ( such as creating, editing or connecting elements) and in their turn may trigger other user-interface events. Their combination with triple graph transformation systems allows constructing and checking the consistency of the abstract syntax graph while the user is building the concrete syntax model, as well as managing the layout of the concrete syntax representation. As an example of these concepts, we show the definition of a modelling environment for UML sequence diagrams. A discussion is also presented of methodological aspects for the generation of environments for visual languages with multiple views, its connection with triple graph grammars, the formalization of the latter in the double pushout approach and its extension with an inheritance concept.
C1 [de Lara, Juan] Univ Autonoma Madrid, Escuela Politecn Super, Madrid, Spain.
   [Guerra, Esther] Univ Carlos III Madrid, Dept Ingn Informat, Madrid, Spain.
C3 Autonomous University of Madrid; Universidad Carlos III de Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Madrid, Spain.
EM eguerra@inf.uc3m.es; jdelara@uam.es
RI Guerra, Esther/B-4977-2014; de Lara, Juan/B-5422-2014
OI Guerra, Esther/0000-0002-2818-2278; de Lara, Juan/0000-0001-9425-6362
CR Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Bardohl R, 2004, LECT NOTES COMPUT SC, V2984, P214
   Bardohl R, 2002, SCI COMPUT PROGRAM, V44, P181, DOI 10.1016/S0167-6423(02)00038-2
   Bottoni P, 2002, LECT NOTES ARTIF INT, V2317, P305
   Bottoni P, 2000, IEEE VISLANG, P59, DOI 10.1109/VL.2000.874351
   BOTTONI P, 2006, P MDDAUI 06, P43
   Cordes B, 2003, LECT NOTES COMPUT SC, V3062, P275
   CORRADINI A, 1996, FUNDAMENTA INFORM, V6, P241
   De la Fuente JR, 2004, PHOTOCH PHOTOBIO SCI, V3, P194, DOI 10.1039/b310696a
   de Lara J., 2004, Electron. Notes Theor. Comput. Sci, V109, P17, DOI [10.1016/j.entcs.2004.02.053, DOI 10.1016/J.ENTCS.2004.02.053]
   DELARA J, LNCS, V2306, P174
   Ehrig H, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P71, DOI 10.1109/VLHCC.2005.37
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P144
   Ehrig H., 1999, HDB GRAPH GRAMMARS C
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   GOEDICKE M, 1999, LNCS, P369
   GROSSERHODE M, 2001, LNCS, V2267, P1
   Guerra E, 2004, LECT NOTES COMPUT SC, V3256, P54
   GUERRA E, 2005, P JISBD 05, P67
   GUERRA E, UC3MTRCS0601
   Guerra E, 2006, LECT NOTES COMPUT SC, V4178, P351
   HECKEL R, 1995, P SEGRAGRA ENTCS, V2
   JANSEN AR, 2003, P 9 C DISTR MUL SYST, P353
   LARA J, 2003, JISBD, V2003, P325
   SCHURR A, 1995, LNCS, V903, P151
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   TAENTZER G, 2005, MOD TRANSF PRACT WOR
   VARGAS F, P DSDM 06 WORKSH JIS
   Zhu NP, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P254
NR 30
TC 24
Z9 28
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2007
VL 6
IS 3
BP 317
EP 347
DI 10.1007/s10270-007-0051-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WT
UT WOS:000254667900007
DA 2024-07-18
ER

PT J
AU Farshidi, S
   Kwantes, IB
   Jansen, S
AF Farshidi, Siamak
   Kwantes, Izaak Beer
   Jansen, Slinger
TI Business process modeling language selection for research modelers
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling language selection; Decision model;
   Multi-criteria decision-making; Decision support system; Case study
   research
ID MULTICRITERIA DECISION-MAKING; DESIGN SCIENCE; FRAMEWORK; REQUIREMENTS;
   PERSPECTIVES; STRATEGIES; MANAGEMENT; PITFALLS
AB Business process modeling is a crucial aspect of domains such as Business Process Management and Software Engineering. The availability of various BPM languages in the market makes it challenging for process modelers to select the best-fit BPM language for a specific process modeling task. A decision model is necessary to systematically capture and make scattered knowledge on BPM languages available for reuse by process modelers and academics. This paper presents a decision model for the BPM language selection problem in research projects. The model contains mappings of 72 BPM features to 23 BPM languages. We validated and refined the decision model through 10 expert interviews with domain experts from various organizations. We evaluated the efficiency, validity, and generality of the decision model by conducting four case studies of academic research projects with their original researchers. The results confirmed that the decision model supports process modelers in the selection process by providing more insights into the decision process. Based on the empirical evidence from the case studies and domain expert feedback, we conclude that having the knowledge readily available in the decision model supports academics in making more informed decisions that align with their preferences and prioritized requirements. Furthermore, the captured knowledge provides a comprehensive overview of BPM languages, features, and quality characteristics that other researchers can employ to tackle future research challenges. Our observations indicate that BPMN is a commonly used modeling language for process modeling. Therefore, it is more sensible for academics to explain why they did not select BPMN than to discuss why they chose it for their research project(s).
C1 [Farshidi, Siamak; Kwantes, Izaak Beer; Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, NL-3584 CC Utrecht, Netherlands.
   [Jansen, Slinger] Lappeenranta Univ Technol, Lappeenranta, Finland.
C3 Utrecht University; Lappeenranta-Lahti University of Technology LUT
RP Farshidi, S; Jansen, S (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, NL-3584 CC Utrecht, Netherlands.; Jansen, S (corresponding author), Lappeenranta Univ Technol, Lappeenranta, Finland.
EM s.farshidi@uu.nl; slinger.jansen@uu.nl
RI Jansen, Slinger/Y-4244-2019
OI Jansen, Slinger/0000-0003-3752-2868
CR Abdel-Fattah M., 2017, INT J COMPUTER SCI I, V15, P382
   Afrasiabi Rad Amir, 2009, J. theor. appl. electron. commer. res., V4, P1
   Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Aier S, 2011, INF SYST E-BUS MANAG, V9, P133, DOI 10.1007/s10257-010-0130-8
   Aldin L., 2009, UK ACAD INFORM SYSTE
   [Anonymous], 2000, APPL OPTIMIZAT
   Araújo MB, 2016, IFIP ADV INF COMM TE, V488, P198, DOI 10.1007/978-3-319-51133-7_24
   Aruldoss M., 2013, AM J INFORM SYST, V1, P31, DOI [10.12691/ajis-1-1-5, DOI 10.12691/AJIS-1-1-5]
   Awadid A, 2017, LECT NOTES BUS INF P, V287, P239, DOI 10.1007/978-3-319-59466-8_15
   Awadid A, 2019, SOFTW SYST MODEL, V18, P1905, DOI 10.1007/s10270-018-0689-y
   Baninemeh E, 2023, BLOCKCHAIN-RES APPL, V4, DOI 10.1016/j.bcra.2023.100127
   Becker J., 2018, BUSINESS PROCESS MAN, P413
   Booch G., 1997, UML: Unified modeling language
   Bork D, 2019, LECT NOTES COMPUT SC, V11788, P311, DOI 10.1007/978-3-030-33223-5_26
   Breitenmoser R., 2015, EUR SCI J, V11, P332
   Campos Ana Carolina S. M., 2011, Recent Patents on Computer Science, V4, P91
   Chen WK., 2004, ELECT ENG HDB
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Clegg D, 1994, Case Method Fast -Track: A RAD Approach
   Committee OMGBT., 2011, BUSINESS PROCESS MOD
   Corbin J., 2015, BASICS QUALITATIVE R
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Decker G, 2009, DATA KNOWL ENG, V68, P777, DOI 10.1016/j.datak.2009.02.013
   DeMan H., 2009, BPTRENDS, V2009
   Devillers M., 2011, Business Process Modeling: The Business-IT Divide
   Dodgson J., 2009, Multi-criteria Analysis: A Manual
   DSDMConsortium R., 2014, DSDM AG PROJ FRAM HD
   Dvorak O., 2018, ENT ENG WORK C, P39
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Elias M, 2010, LECT NOTES BUS INF, V57, P19
   Encheva Sylvia, 2009, Recent Advances in Computer Engineering, V192
   Entringer Tulio Cremonini, 2021, Gest. Prod., V28, pe5211, DOI 10.1590/1806-9649-2020v28e5211
   España S, 2014, LECT NOTES BUS INF P, V178, P100
   España S, 2009, LECT NOTES COMPUT SC, V5565, P530, DOI 10.1007/978-3-642-02144-2_41
   Farshidi S., 2020, Multi-criteria decision-making in software production
   Farshidi S., 2018, REFSQ WORKSH
   Farshidi S., 2020, EUROPEAN C SOFTWARE, P68, DOI DOI 10.1007/978-3-030-59155-7_6
   Farshidi S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106640
   Farshidi S, 2021, SOFTW SYST MODEL, V20, P1525, DOI 10.1007/s10270-020-00855-w
   Farshidi S, 2020, IEEE T ENG MANAGE, V67, P1109, DOI 10.1109/TEM.2019.2956897
   Farshidi S, 2018, CONF BUS INFORM, P139, DOI 10.1109/CBI.2018.00024
   Farshidi S, 2018, J DECIS SYST, V27, P98, DOI 10.1080/12460125.2018.1464821
   Fitzgerald DR, 2017, PERS INDIV DIFFER, V104, P339, DOI 10.1016/j.paid.2016.08.030
   Floudas C.A., 2008, Encyclopedia of optimization
   for Standardization I.O., 2011, 250102011 ISOIEC
   Fortus D, 2005, INT J SCI EDUC, V27, P855, DOI 10.1080/09500690500038165
   Garg R, 2022, IEEE T CLOUD COMPUT, V10, P863, DOI 10.1109/TCC.2020.2980534
   Gavade R.K., 2014, INT J COMPUTER SCI I, V5, P5643
   Geyer RW, 2015, S AFR J IND ENG, V26, P252, DOI 10.7166/26-1-920
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   Gil-Aluja J., 2013, INTERACTIVE MANAGEME
   Greco S., 2016, Multiple Criteria Decision Analysis, DOI DOI 10.1007/978-1-4939-3094-4
   GREENSPAN S, 1994, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.1994.296773
   Group O.M., 2010, BUSINESS PROCESS MOD
   2013, OBJECT MANAGEMENT GR
   Gruber T. R., 1989, Machine Learning, V4, P293, DOI 10.1007/BF00130716
   Guizani K, 2021, PROCEDIA COMPUT SCI, V181, P843, DOI 10.1016/j.procs.2021.01.238
   Gustafsson J., 2017, Single case studies vs. Multiple Case Studies: A Comparative Study (dissertation)
   Hafezalkotob A, 2019, INFORM FUSION, V51, P145, DOI 10.1016/j.inffus.2018.12.002
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Harmon P., 2020, BPTRENDS REPORT STAT
   Harmon P., 2011, Business process trends, V36, P1
   Harvey WS, 2011, QUAL RES, V11, P431, DOI 10.1177/1468794111404329
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hommes B.-J., 2000, Proceedings of the 33rd Annual Hawaii International Conference on System Sciences
   Ihantola EM, 2011, QUAL RES ACCOUNT MAN, V8, P39, DOI 10.1108/11766091111124694
   Indulska M, 2009, LECT NOTES COMPUT SC, V5829, P458, DOI 10.1007/978-3-642-04840-1_34
   Ishizaka A, 2018, EUR J OPER RES, V264, P462, DOI 10.1016/j.ejor.2017.05.041
   ISO, 2011, IEC 25010: 2011 systems and software engineering-systems and software quality requirements and evaluation (square)-system and software quality models, V34, P2910
   ISO I., 2003, 9126 ISO
   Johansson L.-O., 2012, CEUR WORKSH, V963, P54, DOI DOI 10.1007/978-3-642-33281-4
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Kaschek R., 2007, TECHNOLOGIES BUSINES, P25
   Khudori AN., 2020, JITECS J INF TECHNOL, V5, P207
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klinger P., 2020, BUS INFORM SYST ENG+, P1802
   Ko RKL, 2009, BUS PROCESS MANAG J, V15, P744, DOI 10.1108/14637150910987937
   Kocbek M, 2015, COMPUT SCI INF SYST, V12, P509, DOI 10.2298/CSIS140610006K
   Krogstie J., 2003, Information Systems engineering: conceptual modelling in a qualityperspective
   Krogstie J., 2005, INFORM MODELING METH, P63, DOI DOI 10.4018/978-1-59140-375-3.CH004
   Krogstie J, 2013, STUD COMPUT INTELL, V444, P1
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kwantes IB., 2022, MENDELEY DATA, DOI [10.17632/z2kkv2cfj8z.1, DOI 10.17632/Z2KKV2CFJ8Z.1]
   Ladleif J., 2020, BUSINESS PROCESS MAN, P67, DOI DOI 10.1007/978-3-030-58779-6_5
   LAI YJ, 1994, EUR J OPER RES, V76, P486, DOI 10.1016/0377-2217(94)90282-8
   List B., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1532, DOI 10.1145/1141277.1141633
   Liu DR, 2004, DECIS SUPPORT SYST, V38, P399, DOI 10.1016/S0167-9236(03)00116-7
   Lu RP, 2007, LECT NOTES COMPUT SC, V4439, P82
   Luo WH, 1999, IND MANAGE DATA SYST, V99, P312, DOI 10.1108/02635579910262535
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Menzli L J., 2007, JCIT, V2, P79
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Munteanu F., 2019, NAVAL ACAD, V22, P53
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nagm-Aldeen Y., 2015, INT J ADV RES COMPUT, V5, P43
   Nielen A, 2010, IMCIC 2010: INTERNATIONAL MULTI-CONFERENCE ON COMPLEXITY, INFORMATICS AND CYBERNETICS, VOL II, P47
   Niziol M., 2021, ANN COMPUT SCI INF S, V26, P193
   Nysetvold A.G., 2006, ADV TOPICS DATABASE, V5, P79, DOI DOI 10.4018/978-1-59140-935-9.CH005
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Pereira JL, 2016, ADV INTELL SYST, V444, P619, DOI 10.1007/978-3-319-31232-3_58
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Phalp KT, 1998, INFORM SOFTWARE TECH, V40, P731, DOI 10.1016/S0950-5849(98)00058-5
   PINFIELD LT, 1986, ADMIN SCI QUART, V31, P365, DOI 10.2307/2392828
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Prat N., 2014, PACIS 2014 P, P1
   Recker J.C., 2007, 18 AUSTR C INF SYST
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Reijers HA, 2021, COMPUT IND, V126, DOI 10.1016/j.compind.2021.103404
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Ruiz Francisco, 2012, Stud Health Technol Inform, V179, P75
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan B., 2002, RES METHOD METHODOLO, P256
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saidani O., 2007, 8 WORKSH BUS PROC MO, V7, P1
   Sánchez-González L, 2012, INFORM SOFTWARE TECH, V54, P1159, DOI 10.1016/j.infsof.2012.05.001
   Campos ACSM, 2016, ENTERP INF SYST-UK, V10, P17, DOI 10.1080/17517575.2014.906047
   Scheer August-Wilhelm., 2005, Process modeling using event-driven process chains
   Silva D., 2015, BUSINESS PROCESS MOD
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Soderstrom E., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P600
   Straub D., 2004, Communications of the Association for Information Systems, V13, DOI DOI 10.17705/1CAIS.01324
   Tangkawarow IRHT, 2016, IOP CONF SER-MAT SCI, V128, DOI 10.1088/1757-899X/128/1/012010
   Tumele S., 2015, International Journal of Sales, Retailing and Marketing, V4, P68, DOI DOI 10.1086/421629
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van Hee Kees M., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P116, DOI 10.1007/978-3-642-38143-0_4
   Venable John, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P423, DOI 10.1007/978-3-642-29863-9_31
   Wagner G, 2016, WINT SIMUL C PROC, P1072, DOI 10.1109/WSC.2016.7822166
   Wnuk K, 2018, E-INFORMATICA, V12, P51, DOI 10.5277/e-Inf180103
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xu XW, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P47, DOI 10.1109/ICSA51549.2021.00013
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Ying C., 2004, P 8 PACIFIC ASIA C I, P04
   Zarour K, 2020, BUS PROCESS MANAG J, V26, P1473, DOI 10.1108/BPMJ-01-2019-0040
   Zhou Y., 2015, MULTICRITERIA DECISI
   Zimoch M, 2017, LECT NOTES BUS INF P, V287, P153, DOI 10.1007/978-3-319-59466-8_10
NR 140
TC 1
Z9 1
U1 3
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 137
EP 162
DI 10.1007/s10270-023-01110-8
EA MAY 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:000996063600001
OA hybrid
DA 2024-07-18
ER

PT J
AU De Vries, M
   Opperman, P
AF De Vries, Marne
   Opperman, Petra
TI Improving active participation during enterprise operations modeling
   with an extended story-card-method and participative modeling software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Participative enterprise modeling; Participative modeling software;
   Scaled agile; DEMO
ID DESIGN SCIENCE RESEARCH
AB The COVID-19 pandemic emphasized the need for process automation, using agile software development practices. However, when agile methods are used in scaled contexts, many software development efforts fail, mainly due to lacking requirements engineering practices. When business-oriented software needs to be developed within a scaled context, the story-card method (SCM), developed as part of a previous study, assists in structuring emerging software requirements within a taxonomy that represents enterprise operation. The SCM helps agile team members to develop a common understanding about enterprise operation when they construct the enterprise operation taxonomy. Digital participatory enterprise modeling (PEM) may increase collaboration and understanding among team members, especially when team members are geographically dispersed, when they co-model their understanding of enterprise operations. Using design science research to further evolve the existing SCM, we identified two concerns regarding the existing SCM: (1) The modeling software did not encourage active participation during modeling, and (2) Low quality of the resulting cooperation structure diagram (CSD) that is used to derive an enterprise operation taxonomy, i.e., the need to further extend the existing SCM. As main contribution of this article, we addressed previous deficiencies of the SCM, developing an extended SCM (eSCM), based on principles and guidelines that would encourage online participation during PEM, also providing a comprehensive case to demonstrate the eSCM. As a second contribution, we used survey-feedback from research participants, as well as activity tracking to evaluate whether the modeling tool encouraged active PEM. Our third contribution is to evaluate the quality of the resulting CSDs with suggestions for future improvement.
C1 [De Vries, Marne; Opperman, Petra] Univ Pretoria, Dept Ind & Syst Engn, Pretoria, South Africa.
C3 University of Pretoria
RP De Vries, M (corresponding author), Univ Pretoria, Dept Ind & Syst Engn, Pretoria, South Africa.
EM marne.devries@up.ac.za
CR Akoglu C, 2021, CODESIGN, V17, P296, DOI 10.1080/15710882.2019.1633358
   Alharthi AS, 2020, 2020 IEEE SENSORS APPLICATIONS SYMPOSIUM (SAS 2020), DOI 10.1109/sas48726.2020.9220046
   Bentley L.D., 2007, SYSTEMS ANAL DESIGN, V7th
   BOULDING KE, 1956, MANAGE SCI, V2, P197, DOI 10.1287/mnsc.2.3.197
   Bratteteig T, 2016, COMPUT SUPP COOP W J, V25, P425, DOI 10.1007/s10606-016-9259-4
   Buchan J., 2014, CCIS, V432, P165, DOI [10.1007/978-3-662-43610-3_13, DOI 10.1007/978-3-662-43610-3_13]
   De Vries M., 2018, LECT NOTES BUS INF P, DOI [10.1007/978-3-030-02302-7, DOI 10.1007/978-3-030-02302-7]
   De Vries M, 2022, LECT NOTES BUS INF P, V441, P74, DOI 10.1007/978-3-031-11520-2_6
   Dietz J., 2020, Enterprise Ontology: A human-centric approach to understanding the essence of organisation, DOI DOI 10.1007/978-3-030-38854-6
   Djan E., 2020, RESPONSIBLE DESIGN I, DOI [10.1007/978-3-030-44999-5_31, DOI 10.1007/978-3-030-44999-5_31]
   Fellmann Michael, 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P58, DOI 10.1007/978-3-030-63479-7_5
   Firesmith D., 2004, J OBJECT TECHNOL, P27
   Forward A, 2008, P 2008 C CTR ADV STU, P179
   Gray T, 2020, LECT NOTES COMPUT SC, V12584, P189, DOI 10.1007/978-3-030-65847-2_17
   Gutschmidt A., 2021, ENTERPRISE BUSINESS, DOI [10.1007/978-3-030-79186-5_12, DOI 10.1007/978-3-030-79186-5_12]
   Gutschmidt A., 2021, ECIS 2021 Research-in-Progress Papers
   Gutschmidt A, 2019, LECT NOTES BUS INF P, V369, P118, DOI 10.1007/978-3-030-35151-9_8
   Hansen P., 2021, SYNTHESIS LECT INFOR
   Kensing F., 2013, Routledge International Handbook of Participatory Design
   KIRAKOWSKI J, 1993, BRIT J EDUC TECHNOL, V24, P210, DOI 10.1111/j.1467-8535.1993.tb00076.x
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Martin James, 1983, Managing the data-base environment
   Paasivaara M, 2016, INT CONF GLOBAL SOFT, P74, DOI 10.1109/ICGSE.2016.34
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Peffers K, 2018, EUR J INFORM SYST, V27, P129, DOI 10.1080/0960085X.2018.1458066
   Reynolds R, 2018, CHIIR'18: PROCEEDINGS OF THE 2018 CONFERENCE ON HUMAN INFORMATION INTERACTION & RETRIEVAL, P289, DOI 10.1145/3176349.3176884
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Sanders E., 2008, CoDesign, V4, P5, DOI DOI 10.1080/15710880701875068
   Sanders E.B.-N., 2010, P 11 BIENNIAL PARTIC, V10, P195, DOI [10.1145/1900441.1900476, DOI 10.1145/1900441.1900476]
   Sandkuhl K, 2018, BUS INFORM SYST ENG+, V60, P69, DOI 10.1007/s12599-017-0516-y
   Savolainen J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P289, DOI 10.1109/RE.2010.41
   Scariot CA, 2012, WORK, V41, P2701, DOI 10.3233/WOR-2012-0656-2701
   Simonsen J., 2012, ROUTLEDGE INT HDB PA, DOI [DOI 10.4324/9780203108543, 10.4324/9780203108543]
   Stirna J., 2018, Enterprise modeling: facilitating the process and the people, DOI [10.1007/978-3-319-94857-7, DOI 10.1007/978-3-319-94857-7]
   Uludag Ö, 2018, LECT NOTES BUS INF P, V314, P232, DOI 10.1007/978-3-319-91602-6_16
   Velden Majavan der., 2014, HDB ETHICS VALUES TE, P1, DOI 10.1007/978-94-007-6970-0
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Vries Marne, 2021, Advances in Enterprise Engineering XIV. 10th Enterprise Engineering Working Conference, EEWC 2020. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 411), P92, DOI 10.1007/978-3-030-74196-9_6
NR 38
TC 1
Z9 1
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1341
EP 1368
DI 10.1007/s10270-023-01083-8
EA MAR 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000941068600001
PM 37363106
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ivanchikj, A
   Serbout, S
   Pautasso, C
AF Ivanchikj, Ana
   Serbout, Souhaila
   Pautasso, Cesare
TI Live process modeling with the BPMN Sketch Miner
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business Process Model and Notation (BPMN); Process mining;
   Domain-specific languages; Performance evaluation
ID LANGUAGE; SYSTEM
AB BPMN Sketch Miner is a modeling environment for generating visual business process models starting from constrained natural language textual input. Its purpose is to support business process modelers who need to rapidly sketch visual BPMN models during interviews and design workshops, where participants should not only provide input but also give feedback on whether the sketched visual model represents accurately what has been described during the discussion. In this article, we present a detailed description of the BPMN Sketch Miner design decisions and list the different control flow patterns supported by the current version of its textual DSL. We also summarize the user study and survey results originally published in MODELS 2020 concerning the tool usability and learnability and present a new performance evaluation regarding the visual model generation pipeline under actual usage conditions. The goal is to determine whether it can support a rapid model editing cycle, with live synchronization between the textual description and the visual model. This study is based on a benchmark including a large number of models (1350 models) exported by users of the tool during the year 2020. The main results indicate that the performance is sufficient for a smooth live modeling user experience and that the end-to-end execution time of the text-to-model-to-visual pipeline grows linearly with the model size, up to the largest models (with 195 lines of textual description) found in the benchmark workload.
C1 [Ivanchikj, Ana; Serbout, Souhaila; Pautasso, Cesare] USI, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Serbout, S (corresponding author), USI, Software Inst, Lugano, Switzerland.
EM ana.ivanchikj@usi.ch; souhaila.serbout@usi.ch; c.pautasso@ieee.org
OI Pautasso, Cesare/0000-0002-2748-9665; Serbout,
   Souhaila/0000-0002-8144-2606
FU Universita della Svizzera italiana
FX Open access funding provided by Universita della Svizzera italiana.
CR Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   [Anonymous], 2009, Techreport B-108
   Ferreira RCB, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P250, DOI 10.5220/0006305902500261
   Brambilla M, 2007, LECT NOTES COMPUT SC, V4735, P375
   Conn A. P., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P186
   Damij N, 2007, BUS PROCESS MANAG J, V13, P70, DOI 10.1108/14637150710721131
   Dixit PM, 2018, LECT NOTES COMPUT SC, V11157, P251, DOI 10.1007/978-3-030-00847-5_19
   Doweling S., 2013, ECIS
   Epure EV, 2015, INT CONF RES CHAL, P19, DOI 10.1109/RCIS.2015.7128860
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fahland D., 2010, P BPM 2010 DEM TRACK, P52
   Ferme V, 2017, PROC IEEE ACM INT C, P379, DOI 10.1109/ICSE-C.2017.126
   Fleischmann A, 2010, COMM COM INF SC, V85, P85
   Fontenla-Seco Yago, 2021, Trustworthy AI - Integrating Learning, Optimization and Reasoning. First International Workshop, TAILOR 2020. Revised Selected Papers. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12641), P212, DOI 10.1007/978-3-030-73959-1_19
   Freund, 2018, DEV TEXT BASED REPRE
   Friedrich C., 2004, 27 C AUSTR COMP SCI, V26, P369
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   Fuhrmann H, 2010, LECT NOTES COMPUT SC, V6394, P196
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Ghose Aditya, 2007, 2007 IEEE Congress on Services, P167, DOI 10.1109/SERVICES.2007.52
   Goldschmidt T, 2008, LECT NOTES COMPUT SC, V5095, P169, DOI 10.1007/978-3-540-69100-6_12
   Gronninger H., 2007, P 4 INT WORKSH SOFTW
   H?ver KM., 2013, S BPM ONE RUNNING PR, P72, DOI [10.1007/978-3-642-36754-0_5, DOI 10.1007/978-3-642-36754-0_5]
   Haisjackl C, 2014, LECT NOTES BUS INF P, V178, P194
   He X, 2016, J SYST SOFTWARE, V121, P247, DOI 10.1016/j.jss.2016.04.044
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Henzinger M, 2018, LECT NOTES COMPUT SC, V10706, P40, DOI 10.1007/978-3-319-73117-9_3
   Honkisz K, 2018, LECT NOTES COMPUT SC, V11061, P91, DOI 10.1007/978-3-319-99365-2_8
   Ivanchikj Ana, 2019, Business Process Management Forum. BPM Forum 2019. Proceedings. Lecture Notes in Business Information Processing (LNBIP 360), P3, DOI 10.1007/978-3-030-26643-1_1
   Ivanchikj A., 2020, 23 INT C MODEL DRIVE
   Izso B., 2014, BIGMDE 2014 2 WORKSH, P40
   Jannaber S, 2017, LECT NOTES COMPUT SC, V10243, P39, DOI 10.1007/978-3-319-59144-5_3
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   Jordan D., 2011, BUSINESS PROCESS MOD
   Kous K., 2010, 2010 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO), P315
   Lars Ackermannund Bernhard Volz., 2013, ACM workshop on Domain-specific modeling, VS., P45
   LEHMAN JA, 1989, IEEE T SOFTWARE ENG, V15, P1131, DOI 10.1109/32.31370
   Leopold Henrik, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P64, DOI 10.1007/978-3-642-31095-9_5
   Liu WX, 2021, P INT COMP SOFTW APP, P844, DOI 10.1109/COMPSAC51774.2021.00117
   López HA, 2019, IEEE INT ENTERP, P96, DOI 10.1109/EDOCW.2019.00027
   Luebbe A, 2012, DESIGN THINKING RES, P241, DOI [10.1007/978-3-642-21643-5_14, DOI 10.1007/978-3-642-21643-5_14]
   MacCaull Wendy, 2012, Foundations of Health Informatics Engineering and Systems. First International Symposium, FHIES 2011. Revised Selected Papers, P75, DOI 10.1007/978-3-642-32355-3_5
   Maro S., 2015, P 2015 ACM SIGPLAN I, P1, DOI [10.1145/2814251.2814253, DOI 10.1145/2814251.2814253]
   McLellan S, 2012, J USABILITY STUD, V7, P56
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Myers B. A., 1990, Journal of Visual Languages and Computing, V1, P97, DOI 10.1016/S1045-926X(05)80036-9
   Nielsen, 1994, USABILITY ENG
   NIELSEN J, 1994, COMMUN ACM, V37, P66, DOI 10.1145/175276.175282
   Odeh Y., 2017, ACM International Conference Proceeding Series, P11, DOI [10.1145/3149572.3149584, DOI 10.1145/3149572.3149584]
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Polyvyanyy A, 2012, LECT NOTES COMPUT SC, V7481, P335, DOI 10.1007/978-3-642-32885-5_26
   Rabbi Fazle, 2012, P 15 INT C MODEL DRI, P36, DOI [10.1007/978- 3- 642-33666-9_4, DOI 10.1007/978-3-642-33666-9_4]
   Rodrigues RD, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P41, DOI 10.1109/SBES.2015.12
   Russell N, 2016, INF SYST S, P1
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Skouradaki M., 2014, P 6 CENTRAL EUROPEAN
   Tanimoto SL, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P31, DOI 10.1109/LIVE.2013.6617346
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   van der Aa H., 2018, P 27 INT C COMP LING, P2791
   van der Aa H, 2019, LECT NOTES COMPUT SC, V11483, P365, DOI 10.1007/978-3-030-21290-2_23
   Van der Aalst W, 2012, COMMUN ACM, V55, P76, DOI 10.1145/2240236.2240257
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Wohed P., 2005, PATTERN BASED ANAL B
   Zimoch M., 2018, LNBIP, P133
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 69
TC 0
Z9 0
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1877
EP 1906
DI 10.1007/s10270-022-01009-w
EA JUN 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000817829400001
PM 36196214
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI Are models better read on paper or on screen? A comparative study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Paper-based reading; Screen-based reading use case diagrams; Feature
   diagrams; Student-based experiments; Controlled experiment; Model
   comprehension; Model representation
ID OBJECT RECOGNITION; COMPUTER SCREEN; COMPREHENSION; INFORMATION; SEARCH;
   TEXTS
AB Is it really better to print everything, including software models, or is it better to view them on screen? With the ever increasing complexity of software systems, software modeling is integral to software development. Software models facilitate and automate many activities during development, such as code and test case generation. However, a core goal of software modeling is to communicate and collaborate. Software models are presented to team members on many mediums and two of the most common mediums are paper and computer screens. Reading from paper or screen is ostensibly considered to have the same effect on model comprehension. However, the literature on text reading has indicated that the reading experiences can be very different which in turn effects various metrics related to reader performance. This paper reports on an experiment that was conducted to investigate the effect of reading software models on paper in comparison with reading them on a computer screen with respect to cognitive effectiveness. Cognitive effectiveness here refers to the ease by which a model reader can read a model. The experiment used a total of 74 software engineering students as subjects. The experiment results provide strong evidence that displaying diagrams on a screen allows subjects to read them quicker. There is also evidence that indicates that on screen viewing induces fewer reading errors.
C1 [El-Attar, Mohamed] Zayed Univ, Coll Technol Innovat, POB 144534, Abu Dhabi, U Arab Emirates.
C3 Zayed University
RP El-Attar, M (corresponding author), Zayed Univ, Coll Technol Innovat, POB 144534, Abu Dhabi, U Arab Emirates.
EM Mohamed.El-Attar@zu.ac.ae
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Ackerman R, 2012, COMPUT HUM BEHAV, V28, P1816, DOI 10.1016/j.chb.2012.04.023
   Adobe, ADOBE ACROBAT
   Badreddin O, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P245, DOI 10.1145/3239372.3239389
   Bertin J., 1983, SEMIOLOGY GRAPHICS D
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Blehm C, 2005, SURV OPHTHALMOL, V50, P253, DOI 10.1016/j.survophthal.2005.02.008
   Bramao I, 2011, ACTA PSYCHOL, V138, P244, DOI 10.1016/j.actpsy.2011.06.010
   Braude E., 2004, SOFTWARE DESIGN PROG
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   CompTIA, IT IND OUTL 2021
   Dougiamas M., MOODLE
   Dundar H., 2012, International Electronic Journal of Elementary Education, V4, P441
   El-Attar M., STAT PACKAGE SOFTWAR
   El-Attar M, 2019, SOFTW SYST MODEL, V18, P3283, DOI 10.1007/s10270-019-00720-5
   Evans Data Corporation, GLOB DEV POP DEM STU
   Fucci D, 2020, IEEE T SOFTWARE ENG, V46, P1, DOI 10.1109/TSE.2018.2834900
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hitchman S., 2002, Commun. Assoc. Inf. Syst, V9, P10
   Irani P., 2003, ACM Transactions on Computer-Human Interaction, V10, P1, DOI 10.1145/606658.606659
   Kang Kyo C, 1990, Technical Report
   Köpper M, 2016, ERGONOMICS, V59, P615, DOI 10.1080/00140139.2015.1100757
   Kong YR, 2018, COMPUT EDUC, V123, P138, DOI 10.1016/j.compedu.2018.05.005
   Kresser C., 2013, ARTIFICIAL LIGHT IS
   Kretzschmar F, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0056178
   Lauterman T, 2014, COMPUT HUM BEHAV, V35, P455, DOI 10.1016/j.chb.2014.02.046
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   Mangen A, 2013, INT J EDUC RES, V58, P61, DOI 10.1016/j.ijer.2012.12.002
   Margolin SJ, 2013, APPL COGNITIVE PSYCH, V27, P512, DOI 10.1002/acp.2930
   Mayer RE, 2003, WEB-BASED LEARNING: WHAT DO WE KNOW? WHERE DO WE GO?, P23
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Noyes J, 2004, BRIT J EDUC TECHNOL, V35, P111, DOI 10.1111/j.1467-8535.2004.00373.x
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Rasmusson M., 2015, Nordic Studies in Education, V34, P3, DOI [DOI 10.18261/ISSN1891-5949-2015-01-02, 10.18261/ISSN1891-5949-2015-01-02]
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Romano J, 2006, ANN M FLOR ASS I RES, V177
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Spearman, 1961, PROOF MEASUREMENT AS
   Spencer C., 2006, J DISTANCE ED, V21, P33
   Sternberg RJ, 2016, PERSPECT PSYCHOL SCI, V11, P651, DOI 10.1177/1745691616672227
   TREISMAN A, 1982, J EXP PSYCHOL HUMAN, V8, P194, DOI 10.1037/0096-1523.8.2.194
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wright P., 1983, Behaviour and Information Technology, V2, P227, DOI 10.1080/01449298308914479
   WURM LH, 1993, J EXP PSYCHOL HUMAN, V19, P899, DOI 10.1037/0096-1523.19.4.899
NR 52
TC 0
Z9 0
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1531
EP 1550
DI 10.1007/s10270-021-00966-y
EA JAN 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000740606300001
PM 35035345
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Gómez, A
   Iglesias-Urkia, M
   Belategi, L
   Mendialdua, X
   Cabot, J
AF Gomez, Abel
   Iglesias-Urkia, Markel
   Belategi, Lorea
   Mendialdua, Xabier
   Cabot, Jordi
TI Model-driven development of asynchronous message-driven architectures
   with AsyncAPI
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Publish; subscribe; Cyber-physical systems (CPS); Message-driven
   architectures; Asynchronous communication; AsyncAPI; Industrial Internet
   of Things (IIoT)
ID OPC UA; INTERNET; THINGS; IOT
AB In the Internet-of-Things (IoT) vision, everyday objects evolve into cyber-physical systems. The massive use and deployment of these systems has given place to the Industry 4.0 or Industrial IoT (IIoT). Due to its scalability requirements, IIoT architectures are typically distributed and asynchronous. In this scenario, one of the most widely used paradigms is publish/subscribe, where messages are sent and received based on a set of categories or topics. However, these architectures face interoperability challenges. Consistency in message categories and structure is the key to avoid potential losses of information. Ensuring this consistency requires complex data processing logic both on the publisher and the subscriber sides. In this paper, we present our proposal relying on AsyncAPI to automate the design and implementation of these asynchronous architectures using model-driven techniques for the generation of (part of) message-driven infrastructures. Our proposal offers two different ways of designing the architectures: either graphically, by modeling and annotating the messages that are sent among the different IoT devices, or textually, by implementing an editor compliant with the AsyncAPI specification. We have evaluated our proposal by conducting a set of experiments with 25 subjects with different expertise and background. The experiments show that one-third of the subjects were able to design and implement a working architecture in less than an hour without previous knowledge of our proposal, and an additional one-third estimated that they would only need less than two hours in total.
C1 [Gomez, Abel] Univ Oberta Catalunya UOC, Internet Interdisciplinary Inst IN3, Barcelona, Spain.
   [Iglesias-Urkia, Markel; Belategi, Lorea; Mendialdua, Xabier] Basque Res & Technol Alliance BRTA, Ikerlan Technol Res Ctr, Arrasate Mondragon, Spain.
   [Cabot, Jordi] Univ Oberta Catalunya UOC, ICREA Internet Interdisciplinary Inst IN3, Barcelona, Spain.
C3 UOC Universitat Oberta de Catalunya; UOC Universitat Oberta de Catalunya
RP Gómez, A (corresponding author), Univ Oberta Catalunya UOC, Internet Interdisciplinary Inst IN3, Barcelona, Spain.
EM agomezlla@uoc.edu; miglesias@ikerlan.es; lbelategi@ikerlan.es;
   xmendialdua@ikerlan.es; jordi.cabot@icrea.cat
RI Iglesias, Markel/A-2332-2019; Gómez, Abel/J-8652-2012; Cabot,
   Jordi/P-7723-2015
OI Iglesias, Markel/0000-0001-7708-3252; Gómez, Abel/0000-0003-1344-8472;
   Belategi, Lorea/0000-0002-2215-5789
FU CRUE-CSIC agreement; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature.
CR Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   Alaerjan A, 2018, IEEE INT C SM E GR E, P110, DOI 10.1109/SEGE.2018.8499513
   [Anonymous], 2000, Dissertation
   [Anonymous], 2011, CISCO VISUAL NETWORK
   AsyncAPI Initiative, 2020, ASYNCAPI SPEC 2 0 0
   Barn, 2012, P 5 ACM IND SOFTW EN, P23, DOI 10.1145/2134254.2134258
   Berrouyne I, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P832, DOI 10.1145/3297280.3297362
   Izquierdo JLC, 2016, KNOWL-BASED SYST, V103, P52, DOI 10.1016/j.knosys.2016.03.020
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Challenger M, 2016, SOFTWARE QUAL J, V24, P755, DOI 10.1007/s11219-015-9291-5
   Ciccozzi F, 2017, STUD COMPUT INTELL, V678, P67, DOI 10.1007/978-3-319-48829-5_7
   Das TK, 2018, SOFTW SYST MODEL, V17, P717, DOI 10.1007/s10270-016-0549-6
   Delicato FC, 2013, SPRINGERBRIEF COMPUT, P1, DOI 10.1007/978-1-4471-5481-5
   Diaz O, 2010, J SYST SOFTWARE, V83, P1970, DOI 10.1016/j.jss.2010.05.075
   Eclipse Foundation, 2020, XTEND MOD JAV
   Ed-douibi H, 2018, LECT NOTES COMPUT SC, V10845, P487, DOI 10.1007/978-3-319-91662-0_41
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Ed-douibi H, 2017, LECT NOTES COMPUT SC, V10376, P267, DOI 10.1007/978-3-319-61482-3_16
   Fowler M., 2010, Domain-specific languages
   Gomez A., 2020, P 23 ACM IEEE INT C, P121, DOI [DOI 10.1145/3365438.3410948, 10.1145/3365438, DOI 10.1145/3365438]
   Iglesias A., 2019, P 7 INT C MOD DRIV E, P64
   Iglesias-Urkia M, 2020, COMM COM INF SC, V1161, P376, DOI 10.1007/978-3-030-37873-8_16
   Iglesias-Urkia M, 2020, PERS UBIQUIT COMPUT, DOI 10.1007/s00779-020-01413-3
   Iglesias-Urkia M, 2019, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS ( IOT 2019), DOI 10.1145/3365871.3365898
   Ivanchikj A, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P129, DOI 10.1007/978-3-030-31646-4_6
   Jazdi N, 2014, IEEE INT CONF AUTO
   Kagermann H., 2013, Final report of the Industrie 4.0 Working Group
   Klikovits S, 2018, LECT NOTES COMPUT SC, V11150, P29, DOI 10.1007/978-3-030-01042-3_3
   Lee B, 2017, COMPUT STAND INTER, V50, P236, DOI 10.1016/j.csi.2016.09.004
   Leitao P, 2016, COMPUT IND, V81, P11, DOI 10.1016/j.compind.2015.08.004
   Leitner S.-H., 2006, ABB Corp. Res. Cent., V48, P22
   Michelson Brenda M, 2006, Patricia Seybold Group, V2, P10
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Negash B, 2017, PROCEDIA COMPUT SCI, V109, P416, DOI 10.1016/j.procs.2017.05.411
   Nepomuceno T, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P719, DOI 10.1145/3341105.3373873
   Object Management Group (OMG), 2017, OMG® Unified Modeling Language® (OMG UML®) Version 2.5.1
   OMG, 2019, MET FAC MOF VER 2 5
   OMG, 2018, INT DEF LANG IDL VER
   OMG (Object Management Group's), 2015, DAT DISTR SERV DDS V
   OpenAPI, 2020, OPENAPI SPEC
   Pauker F, 2018, PROC CIRP, V67, P128, DOI 10.1016/j.procir.2017.12.188
   Pauker F, 2016, PROC CIRP, V57, P321, DOI 10.1016/j.procir.2016.11.056
   Riedel T., 2010, 2010 Internet of Things (IOT), P1, DOI DOI 10.1109/IOT.2010.5678449
   Schwab Klaus, 2017, 4 IND REVOLUTION, DOI DOI 10.1080/10686967.2018.1436355
   Sharaf M, 2019, LECT NOTES COMPUT SC, V11753, P99, DOI 10.1007/978-3-030-30690-8_6
   SmartBear Software, 2020, WHAT IS OPENAPI
   Sneps-Sneppe M, 2015, INT C ULTRA MOD TELE, P287, DOI 10.1109/ICUMT.2015.7382444
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tashtoush Y, 2019, 2019 IEEE 9TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P69, DOI 10.1109/CCWC.2019.8666542
   The Eclipse Foundation, 2020, ECLIPSE MODELING PRO
   The Eclipse Foundation, 2020, XTEXT LANG ENG MAD E
   Thramboulidis K, 2016, COMPUT IND, V82, P259, DOI 10.1016/j.compind.2016.05.010
   W3C, 2019, WEB THINGS W3C
   Winter A., 2019, 2019 INT C INF SCI C, P1, DOI [10.1109/ICISCT47635.2019.9011964, DOI 10.1109/ICISCT47635.2019.9011964]
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Young B, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P175, DOI 10.1145/3106195.3106220
NR 56
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1583
EP 1611
DI 10.1007/s10270-021-00945-3
EA DEC 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000725404500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Marcén, AC
   Pérez, F
   Pastor, O
   Cetina, C
AF Marcen, Ana C.
   Perez, Francisca
   Pastor, Oscar
   Cetina, Carlos
TI Enhancing software model encoding for feature location approaches based
   on machine learning techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software models; Feature location; Machine learning; Learning to Rank;
   Neural networks; Encoding
ID RECOVERING TRACEABILITY LINKS; FEATURE-SELECTION; SOURCE-CODE;
   RETRIEVAL; REQUIREMENTS; ALGORITHM; TESTS
AB Feature location is one of the main activities performed during software evolution. In our previous works, we proposed an approach for feature location in models based on machine learning, providing evidence that machine learning techniques can obtain better results than other retrieval techniques for feature location in models. However, to apply machine learning techniques optimally, the design of an encoding is essential to be able to identify the best realization of a feature. In this work, we present more thorough research about software model encoding for feature location approaches based on machine learning. As part of this study, we have provided two new software model encodings and compared them with the source encoding. The first proposed encoding is an extension of the source encoding to take advantage of not only the main concepts and relations of a domain but also the properties of these concepts and relations. The second proposed encoding is inspired by the characteristics used in benchmark datasets for research on Learning to Rank. Afterward, the new encodings are used to compare three different machine learning techniques (RankBoost, Feedforward Neural Network, and Recurrent Neural Network). The study also considers whether a domain-independent encoding such as the ones proposed in this work can outperform an encoding that is specifically designed to exploit human experience and domain knowledge. Furthermore, the results of the best encoding and the best machine learning technique were compared to two traditional approaches that have been widely applied for feature location as well as for traceability link recovery and bug localization. The evaluation is based on two real-world case studies, one in the railway domain and the other in the induction hob domain. An approach for feature location in models evaluates these case studies with the different encodings and machine learning techniques. The results show that when using the second proposed encoding and RankBoost, the approach outperforms the results of the other encodings and machine learning techniques and the results of the traditional approaches. Specifically, the approach achieved the best results for all the performance indicators, providing a mean precision value of 90.11%, a recall value of 86.20%, a F-measure value of 87.22%, and a MCC value of 0.87. The statistical analysis of the results shows that this approach significantly improves the results and increases the magnitude of the improvement. The promising results of this work can serve as a starting point toward the use of machine learning techniques in other engineering tasks with software models, such as traceability or bug location.
C1 [Marcen, Ana C.; Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
   [Marcen, Ana C.; Pastor, Oscar] Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Marcén, AC (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.; Marcén, AC (corresponding author), Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
EM acmarcen@usj.es; mfperez@usj.es; opastor@pros.upv.es; ccetina@usj.es
RI López, Oscar Pastor/S-4216-2016; Pérez, Francisca/KPH-0503-2024; Marcén,
   Ana/HKF-5543-2023
OI Marcén, Ana/0000-0002-5054-4618; Perez, Francisca/0000-0001-6371-915X
FU Spanish State Research Agency; Generalitat Valenciana [TIN2016-80811-P,
   RTI2018-096411-B-I00, ACIF/2018/171, PROMETEO/2018/176]; ERDF
FX This work has been developed with the financial support of the Spanish
   State Research Agency and the Generalitat Valenciana under the projects
   DataME TIN2016-80811-P, ALPS RTI2018-096411-B-I00, ACIF/2018/171, and
   PROMETEO/2018/176 and co-financed with ERDF.
CR [Anonymous], 2010, MICROSOFT LEARNING R
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ballarín M, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106430
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Beyranvand P., 2018, Int. J. Intell. Syst. Appl. Eng., V6, P53
   Bianchini M., 2013, HDB NEURAL INFORM PR, V49
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Cai J, 2018, NEUROCOMPUTING, V300, P70, DOI 10.1016/j.neucom.2017.11.077
   Canuto SergioD., 2013, Journal of Information and Data Management, V4, P453
   Cao ZR, 2018, AUTOMAT SOFTW ENG, V25, P501, DOI 10.1007/s10515-018-0231-z
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Conover WJ, 1999, PRACTICAL NONPARAMET, P250
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Cruz D, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302343
   Dang V., 2013, The lemur project-wiki-ranklib
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   DL4J, DEEPLEARNING4J SUIT
   Engelbrecht A.P., 2007, Computational Intelligence: An Introduction, VSecond, DOI DOI 10.1002/9780470512517
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Font J, 2016, LECT NOTES COMPUT SC, V9679, P39, DOI 10.1007/978-3-319-35122-3_3
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Hastie T., 2009, The Elements of Statistical Learning
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Haykin S., 1994, NEURAL NETWORKS COMP
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Kang Kyo C, 1990, Technical Report
   Kiraç MF, 2018, J SYST SOFTWARE, V136, P266, DOI 10.1016/j.jss.2017.06.023
   Klambauer G., 2017, Self-normalizing neural networks, P30, DOI 10.5555/3294771.3294864
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lapeña R, 2019, LECT NOTES COMPUT SC, V11483, P261, DOI 10.1007/978-3-030-21290-2_17
   Lapeña R, 2017, ACM SIGPLAN NOTICES, V52, P63, DOI 10.1145/3170492.3136052
   Lavesson N., 2006, P 21 NAT C ART INT B, V6, P395
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Leech G., 1994, P 15 INT C COMPUTATI, P622, DOI DOI 10.3115/991886.991996
   Li C, 2015, AAAI CONF ARTIF INTE, P4178
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marcén AC, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110519
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Marcén AC, 2017, LECT NOTES COMPUT SC, V10650, P491, DOI 10.1007/978-3-319-69904-2_37
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Meziane F, 2008, REQUIR ENG, V13, P1, DOI [10.1007/s00766-007-0054-0, 10.1007/S00766-007-0054-0]
   Moreira C., 2011, 15 PORT C ART INT EP
   Narawita CR, 2016, INT CONF ADV ICT, P250, DOI 10.1109/ICTER.2016.7829928
   Nie FP, 2016, AAAI CONF ARTIF INTE, P1302
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   POTVIN C, 1993, ECOLOGY, V74, P1617, DOI 10.2307/1939920
   Qin T., 2013, COMPUTING RES REPOSI
   Qin T, 2010, INFORM RETRIEVAL, V13, P346, DOI 10.1007/s10791-009-9123-y
   Rani A., 2018, IEEE Trans. Electron. Devices, V13, P1
   Refaeilzadeh P., 2009, ENCYCL DATABASE SYST, V5, P532, DOI DOI 10.1007/978-0-387-39940-9565
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Salton G, 1986, Introduction to Modern Information Retrieval
   Shabtai A., 2009, INFORM SECURITY TECH, V14, P16, DOI [DOI 10.1016/j.istr.2009.03.003, DOI 10.1016/J.ISTR.2009.03.003]
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Stikkolorum Dave R., 2019, BNAIC/BENELEARN
   Team, 2016, APACHE SOFTW FOUND L
   Truong Ho-Quang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P399, DOI 10.1109/APSEC.2014.65
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JL, 2014, IEEE T KNOWL DATA EN, V26, P698, DOI 10.1109/TKDE.2013.32
   Wille D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P44
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Zhang XR, 2012, ASIA PAC SOFWR ENG, P766, DOI 10.1109/APSEC.2012.76
   Zheng LJ, 2018, INT J MACH LEARN CYB, V9, P75, DOI 10.1007/s13042-015-0347-4
   Zhou ZH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3553
NR 95
TC 1
Z9 1
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 399
EP 433
DI 10.1007/s10270-021-00920-y
EA AUG 2021
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZB5IL
UT WOS:000687501300002
DA 2024-07-18
ER

PT J
AU De Sanctis, M
   Iovino, L
   Rossi, MT
   Wimmer, M
AF De Sanctis, Martina
   Iovino, Ludovico
   Rossi, Maria Teresa
   Wimmer, Manuel
TI MIKADO: a smart city KPIs assessment modeling framework
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Smart Cities; MDE; KPI; DSL; Smart Governance
ID EVOLUTION
AB Smart decision making plays a central role for smart city governance. It exploits data analytics approaches applied to collected data, for supporting smart cities stakeholders in understanding and effectively managing a smart city. Smart governance is performed through the management of key performance indicators (KPIs), reflecting the degree of smartness and sustainability of smart cities. Even though KPIs are gaining relevance, e.g., at European level, the existing tools for their calculation are still limited. They mainly consist in dashboards and online spreadsheets that are rigid, thus making the KPIs evolution and customization a tedious and error-prone process. In this paper, we exploit model-driven engineering (MDE) techniques, through metamodel-based domain-specific languages (DSLs), to build a framework called MIKADO for the automatic assessment of KPIs over smart cities. In particular, the approach provides support for both: (i) domain experts, by the definition of a textual DSL for an intuitive KPIs modeling process and (ii) smart cities stakeholders, by the definition of graphical editors for smart cities modeling. Moreover, dynamic dashboards are generated to support an intuitive visualization and interpretation of the KPIs assessed by our KPIs evaluation engine. We provide evaluation results by showing a demonstration case as well as studying the scalability of the KPIs evaluation engine and the general usability of the approach with encouraging results. Moreover, the approach is open and extensible to further manage comparison among smart cities, simulations, and KPIs interrelations.
C1 [De Sanctis, Martina; Iovino, Ludovico; Rossi, Maria Teresa] Gran Sasso Sci Inst, Laquila, Italy.
   [De Sanctis, Martina; Iovino, Ludovico; Rossi, Maria Teresa] Natl Interuniv Consortium Informat CINI, Rome, Italy.
   [Wimmer, Manuel] JKU Linz, CDL MINT, Dept Business Informat Software Engn, Linz, Austria.
C3 Gran Sasso Science Institute (GSSI); Johannes Kepler University Linz
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.; Iovino, L (corresponding author), Natl Interuniv Consortium Informat CINI, Rome, Italy.
EM martina.desanctis@gssi.it; ludovico.iovino@gssi.it;
   mariateresa.rossi@gssi.it; manuel.wimmer@jku.at
OI Rossi, Maria Teresa/0000-0003-0273-7324; Iovino,
   Ludovico/0000-0001-6552-2609
FU Centre for Urban Informatics and Modelling (CUIM); Austrian Federal
   Ministry for Digital and Economic Affairs; National Foundation for
   Research, Technology and Development (CDG); PON (Programma Operativo
   Nazionale Ricerca e Innovazione) [AIM1880573]
FX We want to thank Dimitris Kolovos, from the University of York (UK), for
   giving support for technical aspects of this project. This work was
   partially supported by the Centre for Urban Informatics and Modelling
   (CUIM) and the PON (Programma Operativo Nazionale Ricerca e
   Innovazione), AIM1880573 Cultural Heritage, National Projects at GSSI as
   well as by the Austrian Federal Ministry for Digital and Economic
   Affairs and the National Foundation for Research, Technology and
   Development (CDG).
CR Abreu R, 2014, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSME.2014.33
   Abu-Matar M., 2016, 2016 IEEE INT SMART, P1
   Ana, 2016, URBAN INDICATORS SMA
   Angelakoglou K, 2019, SMART CITIES-BASEL, V2, P269, DOI 10.3390/smartcities2020018
   [Anonymous], 2014, ITU T FOCUS GROUP SM
   [Anonymous], 2017, Collection Methodology for Key Performance Indicators for Smart Sustainable Cities
   [Anonymous], 2010, The European Commission consults on how the European audit market can be improved, DOI [10.1016/j.resconrec.2010.03.010, DOI 10.1016/J.RESCONREC.2010.03.010]
   Anwar, 2017, INT C CLOUD BIG DAT, P1
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Barns S., 2018, CITY CULTURE SOC, V12, P5, DOI DOI 10.1016/J.CCS.2017.09.006
   Basciani F, 2019, J COMPUT LANG, V51, P173, DOI 10.1016/j.cola.2019.02.003
   Bosch P., 2017, CITYkeys indicators for smart city projects and smart cities
   Boschert S., 2016, Mechatronic Futures: Challenges and Solutions for Mechatronic Systems and Their Designers, P59, DOI [DOI 10.1007/978-3-319-32156-1_5, DOI 10.1007/978-3-319-32156-15]
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Bruel J.-M, 2017, APPL MODEL DRIVEN EN
   Burgueño L, 2019, INFORM SOFTWARE TECH, V113, P82, DOI 10.1016/j.infsof.2019.05.006
   Cooper J., 2020, P 23 ACM IEEE INT C
   Cunha J, 2015, IEEE T SOFTWARE ENG, V41, P241, DOI 10.1109/TSE.2014.2361141
   Curino CA, 2008, PROC VLDB ENDOW, V1, P761, DOI 10.14778/1453856.1453939
   Deissenboeck F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P9, DOI 10.1109/WOSQ.2009.5071551
   DeSanctis M., 2020, P 1 INT WORKSH MOD S
   Estrada E, 2019, ADV INTELL SYST, V865, P261, DOI 10.1007/978-3-030-01171-0_24
   Fowler M., 2010, Domain-specific languages
   Giraldo FD, 2018, SOFTWARE QUAL J, V26, P685, DOI 10.1007/s11219-016-9350-6
   Gómez A, 2018, LECT NOTES COMPUT SC, V11157, P365, DOI 10.1007/978-3-030-00847-5_26
   Hara M, 2016, SUSTAINABILITY-BASEL, V8, DOI 10.3390/su8030206
   Jezequel J.-M., 2017, ARXIV PREPRINT ARXIV
   Jugel D, 2015, LECT NOTES BUS INF P, V215, P351, DOI 10.1007/978-3-319-19243-7_33
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Konstantin S., 2014, P 1 WORKSH SOFTW ENG, P3
   Levendovszky Tihamer, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P23
   Luckey M, 2012, J VISUAL LANG COMPUT, V23, P267, DOI 10.1016/j.jvlc.2011.11.009
   Ma ZY, 2013, FRONT COMPUT SCI-CHI, V7, P558, DOI 10.1007/s11704-013-1151-5
   Madni AM, 2019, SYSTEMS-BASEL, V7, DOI 10.3390/systems7010007
   Marijuan A., 2017, SMART CITIES INFORM
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Microsoft Research, 2019, KEY PERF IND KPIS PO
   Mutiara D, 2018, IOP C SER EARTH ENV, V126, DOI 10.1088/1755-1315/126/1/012073
   Orlowski C, 2016, LECT NOTES COMPUT SC, V9990, P1, DOI 10.1007/978-3-662-53580-6_1
   Pastor, 2018, P 4 INT EL C SENS AP
   Pautasso E., 2013, ROLE ICT SMART CITY
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Samadhiya D., 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P320, DOI 10.1109/ICSTE.2010.5608852
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   Science Communication Unit UWE Bristol, 2018, 12 PROD EUR COMM DG
   Szvetits M, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P115, DOI 10.1109/ICSA.2018.00021
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Tomassoni, 2019, DIGITAL CITIES CHALL
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Visvizi A, 2018, J SCI TECHNOL POLICY, V9, P126, DOI 10.1108/JSTPM-07-2018-079
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Wimmer M., 2020, P 14 EUR C SOFTW ARC
   Wimmer M., 2020, P INT C SYST MOD MAN
NR 56
TC 6
Z9 6
U1 1
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 281
EP 309
DI 10.1007/s10270-021-00907-9
EA AUG 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000681285500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Routis, I
   Bardaki, C
   Dede, G
   Nikolaidou, M
   Kamalakis, T
   Anagnostopoulos, D
AF Routis, Ioannis
   Bardaki, Cleopatra
   Dede, Georgia
   Nikolaidou, Mara
   Kamalakis, Thomas
   Anagnostopoulos, Dimosthenis
TI CMMN evaluation: the modelers' perceptions of the main notation elements
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE CMMN; Human-centric processes; Modeling language evaluation; AHP method
ID CASE-MANAGEMENT; HIERARCHY PROCESS; RANK REVERSAL; BPMN; PROBABILITY;
   FRAMEWORK; SYSTEMS
AB Case Management Model and Notation (CMMN) has been introduced as a graphical modeling language targeting the modeling of human-centric processes. Despite its growing reputation since 2016, when the OMG standant was released, the usage and the adoption potential of CMMN is not yet evaluated. The goal of this paper is to evaluate CMMN language and the contribution of its main notation elements to its future adoption, based on the experience of modelers. A CMMN workshop was conducted, where groups of modelers modeled two different human-centric, real-world processes with CMMN. The effectiveness and efficiency of the language and modelers' usage experience were evaluated. Their perception of the role of the CMMN notation elements to their future adoption CMMN have been recorded through a survey. A multi-criteria decision making method (Analytic Hierarchy Process-AHP) was utilized for analyzing the answers and generating the results. The evaluation results showed that CMMN language could be adopted for modeling non-structural processes and the study participants showed a positive attitude towards adopting CMMN driven by the fact that they overall perceived it as useful. To the best of our knowledge, this is the first attempt to evaluate CMMN language's usability and prospects of adoption. Moreover, this is the first empirical study that explores the syntax of a process modeling language and its effect on its usage and adoption. Overall, since interest in CMMN is increasing, this work could inspire future researchers and practitioners to further explore the CMMN usage and adoption potential.
C1 [Routis, Ioannis; Bardaki, Cleopatra; Nikolaidou, Mara; Kamalakis, Thomas; Anagnostopoulos, Dimosthenis] Harokopio Univ Athens, Dept Informat & Telemat, Athens, Greece.
   [Dede, Georgia] Harokopio Univ Athens, Athens, Greece.
C3 Harokopio University Athens; Harokopio University Athens
RP Routis, I; Kamalakis, T (corresponding author), Harokopio Univ Athens, Dept Informat & Telemat, Athens, Greece.
EM i.routis@hua.gr; cleobar@hua.gr; gdede@hua.gr; mara@hua.gr;
   thkam@hua.gr; dimosthe@hua.gr
RI Routis, Ioannis/AAC-1972-2019
OI Routis, Ioannis/0000-0002-1967-2064
CR Aalst W.M.P., 2009, ENCY DATABASE SYSTEM, P3557, DOI [10.1023/a:102288, DOI 10.1007/978-0-387-39940-9826]
   Alexopoulou Nancy, 2010, International Journal of Business Information Systems, V6, P58
   [Anonymous], 2015, Unified Modeling Language
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   Bider I, 2016, LECT NOTES BUS INF P, V256, P96, DOI 10.1007/978-3-319-42887-1_9
   Birkmeier D, 2010, LECT NOTES COMPUT SC, V6093, P119, DOI 10.1007/978-3-642-13821-8_10
   Breitenmoser R., 2015, EUROPEAN SCI J, V11
   Bruno G, 2017, PROCEDIA COMPUT SCI, V121, P98, DOI 10.1016/j.procs.2017.11.014
   Bruno G, 2016, PROCEDIA COMPUT SCI, V100, P156, DOI 10.1016/j.procs.2016.09.135
   Bule MK, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.013
   Cabala P, 2010, OPER RES DECIS, V20, P5
   Cortes-Cornax M, 2016, SOFTW SYST MODEL, V15, P219, DOI 10.1007/s10270-014-0398-0
   Czepa C, 2016, LECT NOTES BUS INF P, V256, P90, DOI 10.1007/978-3-319-42887-1_8
   de Carvalho RM, 2016, IEEE INT ENTERP, P54, DOI 10.1109/EDOCW.2016.7584379
   Dede G, 2011, J OPT COMMUN NETW, V3, P850, DOI 10.1364/JOCN.3.000850
   Dede G, 2016, EUR J OPER RES, V252, P587, DOI 10.1016/j.ejor.2016.01.059
   Dede G, 2015, EUR J OPER RES, V241, P458, DOI 10.1016/j.ejor.2014.08.037
   Dikici A, 2018, INFORM SOFTWARE TECH, V93, P112, DOI 10.1016/j.infsof.2017.09.001
   dos Santos Soares Michel, 2009, Proceedings of the 11th International Conference on Enterprise Information Systems. ISAS, P313
   Estrada H, 2006, LECT NOTES COMPUT SC, V4001, P513, DOI 10.1007/11767138_34
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Gruhn V, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P236, DOI 10.1109/COGINF.2006.365702
   Guizzardi RSS, 2013, LECT NOTES COMPUT SC, V8217, P463, DOI 10.1007/978-3-642-41924-9_39
   Herzberg N., 2014, INT C BUS PROC MAN, P3
   Hewelt M, 2018, LECT NOTES BUS INF P, V318, P181, DOI 10.1007/978-3-319-91704-7_12
   Horkoff J, 2014, LECT NOTES COMPUT SC, V8824, P260, DOI 10.1007/978-3-319-12206-9_21
   Horkoff J, 2010, LECT NOTES BUS INF P, V68, P130
   Houy C., 2014, P EUR C INF SYST, P1
   Kleppe A., 2007, 4 INT WORKSH SOFTW L, P1
   Kluza K, 2015, LECT NOTES COMPUT SC, V9120, P649, DOI 10.1007/978-3-319-19369-4_57
   Kocbek M, 2015, COMPUT SCI INF SYST, V12, P509, DOI 10.2298/CSIS140610006K
   Krogstie J., 2003, UML and the unified process, P1
   Kurz M., 2015, P 7 INT C SUBJECT OR, DOI [10.1145/2723839.2723843, DOI 10.1145/2723839.2723843]
   Marin MA, 2016, LECT NOTES BUS INF P, V256, P5, DOI 10.1007/978-3-319-42887-1_1
   Marine M., 2015, PLoS Pathog, V11, P1
   Matulevicius R, 2007, LECT NOTES COMPUT SC, V4542, P18
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Motahari-Nezhad H.R., 2013, Proceedings of the 2013 IEEE 15th Conference on Business Informatics, P264, DOI DOI 10.1109/CBI.2013.44
   Mu E, 2018, SPRINGER OPER RES, P7, DOI 10.1007/978-3-319-68369-0_2
   Mundbrod N, 2013, LECT NOTES BUS INF P, V132, P31
   Object Management Group, 2016, CAS MAN MOD NOT V1 1
   Recker J., 2008, Understanding Process Modelling Grammar Continuance: A study of the consequences of representational capabilities
   Recker J, 2007, LECT NOTES COMPUT SC, V4714, P384
   Rolón E, 2008, ENASE 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P56
   Rolón E, 2015, PROCEDIA MANUF, V3, P5603, DOI 10.1016/j.promfg.2015.07.748
   Routis I., 2019, NEW PERSPECTIVES INF, P20
   Routis I., 2017, INT C BUS PROC MAN, P335
   Routis I, 2020, SOFTW SYST MODEL, V19, P1395, DOI 10.1007/s10270-020-00802-9
   Routis I, 2018, LECT NOTES BUS INF P, V318, P199, DOI 10.1007/978-3-319-91704-7_13
   Rubinstein R.Y., 2016, Simulation and the Monte Carlo method
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   SAATY TL, 1984, J MATH PSYCHOL, V28, P205, DOI 10.1016/0022-2496(84)90027-0
   Schalles C., 2013, USABILITY EVALUATION, DOI [10.1007/978-3-658-00051-6, DOI 10.1007/978-3-658-00051-6]
   Scheit S, 2016, IEEE INT ENTERP, P62
   Si-Said S., 2002, ACT 18 JOURN BAS DON
   Siau K, 2010, J DATABASE MANAGE, V21, P1, DOI 10.4018/jdm.2010100101
   Silver B., 2020, CMMN METHOD STYLE PR
   Sindre G., 2006, Advanced topics in database research, V5, P94
   Stake Robert E., 1995, The Art of Case Study Research
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Vanthienen, 2018, INT C BUS PROC MAN, P514
   Vogel-Heuser B., 2011, IFAC P, V44, P9151, DOI [10.3182/20110828-6-IT-1002.01343, DOI 10.3182/20110828-6-IT-1002.01343]
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Wiemuth M, 2017, INT J COMPUT ASS RAD, V12, P1439, DOI 10.1007/s11548-017-1608-3
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Yin R.K., 2014, Applications of case study research, V2nd
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zensen A, 2018, IEEE INT ENTERP DIST, P105, DOI 10.1109/EDOC.2018.00023
NR 69
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2089
EP 2109
DI 10.1007/s10270-021-00880-3
EA MAY 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000650541700001
DA 2024-07-18
ER

PT J
AU Dragule, S
   Berger, T
   Menghi, C
   Pelliccione, P
AF Dragule, Swaib
   Berger, Thorsten
   Menghi, Claudio
   Pelliccione, Patrizio
TI A survey on the design space of end-user-oriented languages for
   specifying robotic missions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Specification environments; Language concepts; Visual languages; Robotic
   missions; Empirical study
ID SPECIFICATION; SYSTEM
AB Mobile robots are becoming increasingly important in society. Fulfilling complex missions in different contexts and environments, robots are promising instruments to support our everyday live. As such, the task of defining the robot's mission is moving from professional developers and roboticists to the end-users. However, with the current state-of-the-art, defining missions is non-trivial and typically requires dedicated programming skills. Since end-users usually lack such skills, many commercial robots are nowadays equipped with environments and domain-specific languages tailored for end-users. As such, the software support for defining missions is becoming an increasingly relevant criterion when buying or choosing robots. Improving these environments and languages for specifying missions toward simplicity and flexibility is crucial. To this end, we need to improve our empirical understanding of the current state-of-the-art of such languages and their environments. In this paper, we contribute in this direction. We present a survey of 30 mission specification environments for mobile robots that come with a visual and end-user-oriented language. We explore the design space of these languages and their environments, identify their concepts, and organize them as features in a feature model. We believe that our results are valuable to practitioners and researchers designing the next generation of mission specification languages in the vibrant domain of mobile robots.
C1 [Dragule, Swaib; Berger, Thorsten; Pelliccione, Patrizio] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Dragule, Swaib] Makerere Univ, Dept Comp Sci, Kampala, Uganda.
   [Berger, Thorsten] Ruhr Univ Bochum, Ctr Comp Sci, Bochum, Germany.
   [Menghi, Claudio] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Pelliccione, Patrizio] Univ Aquila, DISIM, Laquila, Italy.
C3 Chalmers University of Technology; Makerere University; Ruhr University
   Bochum; University of Luxembourg; University of L'Aquila
RP Dragule, S (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.; Dragule, S (corresponding author), Makerere Univ, Dept Comp Sci, Kampala, Uganda.
EM dragule@chalmers.se; thorsten.berger@rub.de; claudio.menghi@uni.lu;
   patrizio.pelliccione@univaq.it
RI MENGHI, CLAUDIO/AAC-2265-2022; Pelliccione, Patrizio/Q-5118-2019
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Pelliccione,
   Patrizio/0000-0002-5438-2281
FU University of Gothenburg
FX Open Access funding provided by University of Gothenburg
CR Ali, USER MANUAL MISSIONL
   [Anonymous], 2007, Journal of Technology Education
   [Anonymous], 2010, J. Phys. Agents
   Aragao M, 2016, FRONT ROBOT AI, V3, DOI 10.3389/frobt.2016.00064
   Arcbotics, 2020, ARCB LEARN ROB
   Arkin, 2002, ICRA, V15
   Asic T., 2011, P INT CONV MIPRO
   Bacca-Cortés B, 2017, REV FAC ING-UPTC, V26, P61
   Berger T., 2019, INT S FDN SOFTW ENG
   Biggs G., 2003, Proceedings of the Australasian conference on robotics and automation, P27, DOI DOI 10.1109/ROBOT.2001.932554
   Bozhinoski D, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P214, DOI 10.1109/SEAA.2016.41
   Bozhinoski D, 2015, IEEE INT CONF AUTOM, P801, DOI 10.1109/ASE.2015.104
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bravo, 2018, C AUT CONTR CCAC
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P9, DOI 10.1109/MRA.2009.932127
   Bryksin T., 2017, C OP INN ASS FRUCT
   Budde, 2016, INT J LEARN MEDIA, DOI [10.7146/lom.v8i14.22183, DOI 10.7146/LOM.V8I14.22183]
   Bures, 2019, INT C SOFTW LANG ENG
   Burnett W., 2020, ALTERNATIVE PROGRAMM
   Button RobertW., 2009, SURVEY MISSIONS UNMA
   Campusano M, 2017, SCI COMPUT PROGRAM, V133, P1, DOI 10.1016/j.scico.2016.06.002
   Caron D., 2010, Tech Directions, V69, P21
   Chang, 2002, HDB SOFTWARE ENG KNO, VII, P93, DOI [10.1142/9789812389701_0005, DOI 10.1142/9789812389701_0005]
   Colledanchise M., 2018, Behavior Trees in Robotics and AI: An Introduction, DOI DOI 10.1201/9780429489105
   Combemale, 2013, INT C SOFTW LANG ENG
   Combemale B., 2016, ENG MODELING LANGUAG, DOI [10.1201/b21841, DOI 10.1201/B21841]
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2015, INT SOFTW PROD LIN C
   Di Ruscio D, 2014, MORSE STAF, P16
   Di Ruscio D, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P45, DOI 10.1145/2976767.2976794
   Doherty P, 2013, UNMANNED SYST, V1, P75, DOI 10.1142/S2301385013500052
   Dragule, 2020, SOFTWARE ENG ROBOTIC
   Erdweg S., 2013, SOFTWARE LANGUAGE EN
   Fojtik R., 2017, HUMANIT SOC SCI, V4, DOI [10.18844/prosoc.v4i5.2666, DOI 10.18844/PROSOC.V4I5.2666]
   Garcia S., 2020, INT C SOFTW ENG ICSE
   García-Zubía J, 2018, LECT NOTE NETW SYST, V22, P344, DOI 10.1007/978-3-319-64352-6_33
   Gorostiza JF, 2011, ROBOT AUTON SYST, V59, P1102, DOI 10.1016/j.robot.2011.07.009
   Gruenbacher, 2020, J SYST SOFT
   Grunbacher P., 2017, INT C GEN PROGR CONC
   Guide A. Guide B. Foundation F, 2020, PROGR TELL DRON DO B
   Hentout A, 2016, PROCEEDINGS OF 2016 8TH INTERNATIONAL CONFERENCE ON MODELLING, IDENTIFICATION & CONTROL (ICMIC 2016), P67, DOI 10.1109/ICMIC.2016.7804217
   Hocraffer A, 2017, APPL ERGON, V58, P66, DOI 10.1016/j.apergo.2016.05.011
   Holwerda R, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P217, DOI 10.1109/VLHCC.2018.8506483
   IAIS F, 2020, OP ROB LAB
   Idrobo A.M.O., 2011, NEW TOOLS METHODOLOG
   Ioannou M, 2017, IEEE INT CONF ADV LE, P311, DOI 10.1109/ICALT.2017.70
   Jost B, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON MULTIMEDIA (ISM), P381, DOI 10.1109/ISM.2014.24
   Junior LA., 2013, J SEL AREAS ROBOT CO, V3, P12
   Kang Kyo C, 1990, Technical Report
   Kolb, 2014, INT C SOFTW LANG ENG
   Kolling A, 2016, IEEE T HUM-MACH SYST, V46, P9, DOI 10.1109/THMS.2015.2480801
   Korkmaz O., 2018, MOJES: Malaysian Online Journal of Educational Sciences, V4, P73, DOI DOI 10.22364/BJMC.2016.4.4.24
   Krishnan A, 2020, TURTLEBOT3BLOCKLY DO
   Lammel R., 2018, Software Languages: Syntax, Semantics, and Metaprogramming, DOI DOI 10.1007/978-3-319-90800-7
   Lane A., 2012, ROBOTICS ENCHANTING
   Lotz, 2018, THESIS TU MUNCHEN MU
   Lourens, 2011, PROGRAMMING ROBOTS U
   Lourens T., 2004, INT COMP SOFTW APPL
   Lourens T, 2011, LECT NOTES COMPUT SC, V6686, P212, DOI 10.1007/978-3-642-21344-1_23
   LOZENKO GF, 2014, LIFE SCI J, V11, P275
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Ly O., 2016, INT C AUT ROB SYST C
   MacKenzie DC, 1997, AUTON ROBOT, V4, P29, DOI 10.1023/A:1008807102993
   Magnenat S, 2011, IEEE-ASME T MECH, V16, P321, DOI 10.1109/TMECH.2010.2042722
   Maisonnier, 2009, INT S ROB HUM INT CO
   Medeiros A.A, 1998, J BRAZ COMPUT SOC, V4
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Menghi C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P99, DOI 10.1109/ICSE-Companion.2019.00048
   Mesh R, 2020, ROBOT MESH STUDIO
   Metabot, 2020, MET BLOCKL
   Mohamed N, 2008, 2008 IEEE CONFERENCE ON ROBOTICS, AUTOMATION, AND MECHATRONICS, VOLS 1 AND 2, P894
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Muda M.Z., 2014, INT S ROB MAN AUT RO
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Nordmann A, 2014, LECT NOTES COMPUT SC, V8810, P195, DOI 10.1007/978-3-319-11900-7_17
   Parallax, 2019, GETT START BLOCKL
   Pasternak E., 2017, IEEE BLOCKS WORKSH B, DOI DOI 10.1109/BLOCKS.2017.8120404
   Ray C, 2008, 2008 IEEE/RSJ INTERNATIONAL CONFERENCE ON ROBOTS AND INTELLIGENT SYSTEMS, VOLS 1-3, CONFERENCE PROCEEDINGS, P3816, DOI 10.1109/IROS.2008.4650714
   Robin C, 2016, AUTON ROBOT, V40, P729, DOI 10.1007/s10514-015-9491-7
   Robmosys, 2019, TASK LEV COMP ROB BE
   Robotc, 2020, ROB GRAPH FEAT
   Schauss, 2017, INT C SOFTW LANG ENG
   Shin J., 2014, C INT DES CHILDR IDC
   Siegmund J., 2016, INT S FDN SOFTW ENG
   Sun Y., INT C MOD DRIV ENG L
   Ulam P, 2007, IEEE INT CONF ROBOT, P4428, DOI 10.1109/ROBOT.2007.364161
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Vandevelde C, 2016, INT J TECHNOL DES ED, V26, P521, DOI 10.1007/s10798-015-9324-1
   Wasowski T., 2020, INT C SOFTW LANG ENG
   Weintrop, 2018, C HUM FACT COMP SYST
NR 90
TC 6
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1123
EP 1158
DI 10.1007/s10270-020-00854-x
EA FEB 2021
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000620410400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Aceto, L
   Achilleos, A
   Francalanza, A
   Ingólfsdóttir, A
   Lehtinen, K
AF Aceto, Luca
   Achilleos, Antonis
   Francalanza, Adrian
   Ingolfsdottir, Anna
   Lehtinen, Karoliina
TI An operational guide to monitorability with applications to regular
   properties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Runtime Verification; Monitors; Monitorability; Logical Fragments
ID HENNESSY-MILNER LOGIC; TEMPORAL LOGIC; MODEL CHECKING; SYSTEMS; AUTOMATA
AB Monitorability underpins the technique of runtime verification because it delineates what properties can be verified at runtime. Although many monitorability definitions exist, few are defined explicitly in terms of the operational guarantees provided by monitors, i.e. the computational entities carrying out the verification. We view monitorability as a spectrum, where the fewer guarantees that are required of monitors, the more properties become monitorable. Accordingly, we present a monitorability hierarchy based on this trade-off. For regular specifications, we give syntactic characterisations in Hennessy-Milner logic with recursion for its levels. Finally, we map existing monitorability definitions into our hierarchy. Hence, our work gives a unified framework that makes the operational assumptions and guarantees of each definition explicit. This provides a rigorous foundation that can inform design choices and correctness claims for runtime verification tools.
C1 [Aceto, Luca] Gran Sasso Sci Inst, Laquila, Italy.
   [Aceto, Luca; Achilleos, Antonis; Ingolfsdottir, Anna] Reykjavik Univ, Reykjavik, Iceland.
   [Francalanza, Adrian] Univ Malta, Msida, Malta.
   [Lehtinen, Karoliina] Univ Liverpool, Liverpool, Merseyside, England.
C3 Gran Sasso Science Institute (GSSI); Reykjavik University; University of
   Malta; University of Liverpool
RP Francalanza, A (corresponding author), Univ Malta, Msida, Malta.
EM adrian.francalanza@um.edu.mt
OI Francalanza, Adrian/0000-0003-3829-7391
FU Icelandic Research Fund project "TheoFoMon: Theoretical Foundations for
   Monitorability" [163406-051]; Icelandic Research Fund project "Epistemic
   Logic for Distributed Runtime Monitoring" [184940-051]; EPSRC project
   "Solving parity games in theory and practice" [EP/P020909/1]; project
   BehAPI - EU H2020 RISE programme under the Marie Sklodowska-Curie Grant
   [778233]; project FouCo - EU H020 research and innovation programme
   under the Marie Skodowska-Curie grant [892704]; Italian MIUR project
   PRIN [2017FTXR7S]; EPSRC [EP/P020909/1] Funding Source: UKRI; Marie
   Curie Actions (MSCA) [892704] Funding Source: Marie Curie Actions (MSCA)
FX This research was supported by the Icelandic Research Fund projects
   "TheoFoMon: Theoretical Foundations for Monitorability" (No:163406-051)
   and "Epistemic Logic for Distributed Runtime Monitoring"
   (No:184940-051), the EPSRC project "Solving parity games in theory and
   practice" (No: EP/P020909/1), project BehAPI, funded by the EU H2020
   RISE programme under the Marie Sklodowska-Curie Grant agreement
   No:778233, project FouCo, funded by the EU H020 research and innovation
   programme under the Marie Skodowska-Curie grant agreement No: 892704,
   and the Italian MIUR project PRIN 2017FTXR7S IT MATTERS "Methods and
   Tools for Trustworthy Smart Systems".
CR Aceto Luca, 2017, Implementation and Application of Automata. 22nd International Conference, CIAA 2017. Proceedings: LNCS 10329, P1, DOI 10.1007/978-3-319-60134-2_1
   Aceto L, 2007, REACTIVE SYSTEMS MOD, DOI DOI 10.1017/CBO9780511814105
   Aceto L., 2018, LIPICS, V93
   Aceto L., 2018, LIPICS, V118, DOI 10.4230/LIPIcs.CONCUR.2018.34
   Aceto L., 2016, ARXIV161110212 CORR
   Aceto L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290365
   Aceto L, 2019, LECT NOTES COMPUT SC, V11724, P433, DOI 10.1007/978-3-030-30446-1_23
   Aceto L, 2018, LECT NOTES COMPUT SC, V10803, P203, DOI 10.1007/978-3-319-89366-2_11
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   [Anonymous], 2008, Texts in Logic and Games
   Arnold A., 2001, Studies in Logic and the foundations of Mathematics, V146
   Attard DP, 2017, RIV PUBL SER AUTOMAT, P49
   Attard DP, 2016, LECT NOTES COMPUT SC, V10012, P473, DOI 10.1007/978-3-319-46982-9_31
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Berard B, 2013, SYSTEMS SOFTWARE VER
   Bielova N, 2011, INT J INF SECUR, V10, P239, DOI 10.1007/s10207-011-0137-2
   CHANG E, 1992, LECT NOTES COMPUT SC, V623, P474
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   Chen Z, 2018, PROC IEEE ACM INT C, P163, DOI 10.1145/3183440.3195077
   Cimatti A, 2019, LECT NOTES COMPUT SC, V11757, P165, DOI 10.1007/978-3-030-32079-9_10
   Cini C., 2015, International Conference on Tools and Algorithms for the Construction and Analysis of Systems, P581, DOI [10.1007/978-3-662-46681-0_54, DOI 10.1007/978-3-662-46681-0_54]
   Clarke EM, 1999, MODEL CHECKING, P1
   Convent L., 2018, LNCS, V11254, P144, DOI [DOI 10.1007/978-3-030-03044-5_10, 10.1007/978-3-030-03044, DOI 10.1007/978-3-030-03044]
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   David A, 2015, INT J SOFTW TOOLS TE, V17, P351, DOI [10.1007/s10009-014-0361-y, 10.1007/s10009-014-0323-4]
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   Decker Normann, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P459, DOI 10.1007/978-3-642-38088-4_34
   Diekert V, 2014, THEOR COMPUT SCI, V537, P29, DOI 10.1016/j.tcs.2014.02.052
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Ferrére T, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P394, DOI 10.1145/3209108.3209194
   Francalanza A., 2020, LECT NOTES COMPUTER, P350, DOI [10.1007/978-3-030-50029-0_22, DOI 10.1007/978-3-030-50029-0_22]
   Francalanza A., 2017, LEIBNIZ INT P INFORM, V85, DOI [DOI 10.4230/LIPICS.CONCUR.2017.8, 10.4230/LIPIcs.CONCUR.2017.8]
   Francalanza A, 2017, LECT NOTES COMPUT SC, V10548, P8, DOI 10.1007/978-3-319-67531-2_2
   Francalanza A, 2017, FORM METHOD SYST DES, V51, P87, DOI 10.1007/s10703-017-0273-z
   Francalanza A, 2016, LECT NOTES COMPUT SC, V9634, P145, DOI 10.1007/978-3-662-49630-5_9
   Francalanza A, 2015, FORM METHOD SYST DES, V46, P226, DOI 10.1007/s10703-014-0217-9
   Havelund K, 2018, LECT NOTES COMPUT SC, V11237, P90, DOI 10.1007/978-3-030-03769-7_7
   HENNESSY M, 1985, J ACM, V32, P137, DOI 10.1145/2455.2460
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   Larsen Kim G., 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P212, DOI 10.1007/978-3-030-03427-6_18
   LARSEN KG, 1990, THEOR COMPUT SCI, V72, P265, DOI 10.1016/0304-3975(90)90038-J
   Laurent J, 2015, LECT NOTES COMPUT SC, V9333, P87, DOI 10.1007/978-3-319-23820-3_6
   Leucker M., 2012, LNCS, P82, DOI DOI 10.1007/978-3-642-35632-2_10
   Ligatti J., 2005, J. Inf. Secur., V4, P2, DOI [10.1007/s10207-004-0046-8, DOI 10.1007/S10207-004-0046-8]
   MANNA Z, 1991, THEOR COMPUT SCI, V83, P97, DOI 10.1016/0304-3975(91)90041-Y
   Neykova R, 2017, FORM ASP COMPUT, V29, P877, DOI 10.1007/s00165-017-0420-8
   PHILLIPS I, 1987, THEOR COMPUT SCI, V50, P241, DOI 10.1016/0304-3975(87)90117-4
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   Reger G., 2015, TACAS, volume 9035 of LNCS, P596, DOI [10.1007/978-3-662-46681-055, DOI 10.1007/978-3-662-46681-055]
   Rosu G, 2012, SCI ANN COMPUT SCI, V22, P327
   Safra S., 1992, Proceedings of the Twenty-Fourth Annual ACM Symposium on the Theory of Computing, P275, DOI 10.1145/129712.129739
   Sánchez C, 2010, LECT NOTES COMPUT SC, V5944, P295, DOI 10.1007/978-3-642-11319-2_22
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   STEFFEN B, 1994, INFORM COMPUT, V110, P149, DOI 10.1006/inco.1994.1028
   Stucki Sandro, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P406, DOI 10.1007/978-3-030-30942-8_25
   Thomas W., 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, VB, P133, DOI [10.1016/B978-0-444-88074-1.50009-3, 10.1016/b978-0-444-88074-1.50009-3, DOI 10.1016/B978-0-444-88074-1.50009-3]
   Tinelli C., 2015, LNCS, V9035
   Viswanathan M, 2005, LECT NOTES COMPUT SC, V3407, P543
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
NR 66
TC 12
Z9 12
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 335
EP 361
DI 10.1007/s10270-020-00860-z
EA FEB 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000615109600001
DA 2024-07-18
ER

PT J
AU Perez-Palacin, D
   Merseguer, J
   Requeno, JI
   Guerriero, M
   Di Nitto, E
   Tamburri, DA
AF Perez-Palacin, Diego
   Merseguer, Jose
   Requeno, Jose, I
   Guerriero, M.
   Di Nitto, Elisabetta
   Tamburri, D. A.
TI A UML Profile for the Design, Quality Assessment and Deployment of
   Data-intensive Applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Profile; Data-intensive applications; Software design; Big Data;
   Performance assessment; Model-driven deployment; Apache Hadoop; TOSCA
   language
ID PERFORMANCE; CHALLENGES; NETS
AB Big Data or Data-Intensive applications (DIAs) seek to mine, manipulate, extract or otherwise exploit the potential intelligence hidden behind Big Data. However, several practitioner surveys remark that DIAs potential is still untapped because of very difficult and costly design, quality assessment and continuous refinement. To address the above shortcoming, we propose the use of a UML domain-specific modeling language or profile specifically tailored to support the design, assessment and continuous deployment of DIAs. This article illustrates our DIA-specific profile and outlines its usage in the context of DIA performance engineering and deployment. For DIA performance engineering, we rely on the Apache Hadoop technology, while for DIA deployment, we leverage the TOSCA language. We conclude that the proposed profile offers a powerful language for data-intensive software and systems modeling, quality evaluation and automated deployment of DIAs on private or public clouds.
C1 [Perez-Palacin, Diego] Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
   [Merseguer, Jose; Requeno, Jose, I] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
   [Guerriero, M.; Di Nitto, Elisabetta; Tamburri, D. A.] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
C3 Linnaeus University; University of Zaragoza; Polytechnic University of
   Milan
RP Perez-Palacin, D (corresponding author), Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
EM diego.perez@lnu.se; jmerse@unizar.es; nrequeno@unizar.es;
   michele.guerriero@polimi.it; elisabetta.dinitto@polimi.it;
   damianandrew.tamburri@polimi.it
RI Tamburri, Damian Andrew/AAJ-2507-2021; Merseguer, Jose/A-6028-2012;
   Requeno Jarabo, José Ignacio/GLT-6769-2022
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Merseguer,
   Jose/0000-0001-5538-3553; Requeno Jarabo, José
   Ignacio/0000-0001-5111-8357
FU European Commission [644869]; project CyCriSec [TIN2014-58457-R]; Aragon
   Government [T27]
FX This work is supported by the European Commission Grant No. 644869
   (H2020, Call 1), DICE. D. Perez-Palacin, J. Merseguer and J.I. Requeno
   have been supported by the project CyCriSec [TIN2014-58457-R] and Aragon
   Government Ref. T27-DISCO Research Group.
CR Ajmone-Marsan M, 1994, MODELING GEN STOCHAS
   [Anonymous], 2016, WIK
   [Anonymous], 2018, PROD INT TECH
   Ardagna D., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P50, DOI 10.1109/MISE.2012.6226014
   Ardagna D, 2016, LECT NOTES COMPUT SC, V10048, P599, DOI 10.1007/978-3-319-49583-5_47
   Artac M, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P156, DOI 10.1109/ICSA.2018.00025
   Baresi L, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P218, DOI 10.1109/SmartCloud.2016.42
   Bell G, 2009, SCIENCE, V323, P1297, DOI 10.1126/science.1170411
   Bernardi S., 2013, Model-Driven dependability assessment of software systems
   Bernardi S, 2018, EMPIR SOFTW ENG, V23, P3394, DOI 10.1007/s10664-018-9606-9
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernhard S.D., 2016, P 20 INT DAT ENG APP, P24
   Blu Age, 2018, BLU AG MAK IT DIG
   Casale G, 2015, P 7 INT WORKSH MOD S, P78
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   CHIOLA G, 1993, IEEE T COMPUT, V42, P1343, DOI 10.1109/12.247838
   Clements P., 2001, EVALUATING SOFTWARE
   Cois C.A., 2014, Professional Communication Conference (IPCC), 2014 IEEE International, P1
   Colas Mathieu, 2015, TECHNICAL REPORT
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Dean J, 2010, COMMUN ACM, V53, P72, DOI 10.1145/1629175.1629198
   DICE Consortium, 2017, DICE PROF
   DICE Consortium, 2017, DICE SIM TOOL
   diNitto E., 2017, MODEL DRIVEN DEV OPE
   Dip. di informatica Universita di Torino, 2015, GRAPHICAL ED AN TIM
   Gilmore S, 2003, PERFORM EVALUATION, V54, P79, DOI 10.1016/S0166-5316(03)00069-5
   Gomez A., 2016, P 2 INT WORKSH QUAL, P18, DOI DOI 10.1145/2945408.2945412
   Juniper Project, 2015, EXP MOD BIG DAT STRE
   Kro J., 2015, SOFTWARETECHNIK TREN, V35
   KroSS J., 2016, SOFTWARETECHNIK TREN, V36, P1
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   Langheinrich Marc, 2001, Ubicomp 2001: Ubiquitous Computing, P273
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lipton P., 2016, P 8 IEEE INT C CLOUD, V21, P31
   Lopez-Grao J. P., 2004, Software Engineering Notes, V29, P25, DOI 10.1145/974043.974048
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Palma D., 2016, TECHNICAL REPORT
   Perez-Palacin D, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P133, DOI 10.1145/3053600.3053632
   Petriu DC, 2012, LECT NOTES COMPUTER
   Rajbhoj Asha, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P94, DOI 10.1109/APSEC.2014.23
   Ranjan R, 2014, IEEE CLOUD COMPUT, V1, P14, DOI 10.1109/MCC.2014.84
   Requeno JI, 2017, 2017 IEEE 18TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IEEE IRI 2017), P411, DOI 10.1109/IRI.2017.64
   Requeno JI, 2019, INFORM SYST FRONT, V21, P67, DOI 10.1007/s10796-018-9851-x
   Sanders WH, 2001, LECT NOTES COMPUTER
   Sandini G, 2008, LECT NOTES ARTIF INT, V5325, P4
   Santurkar S, 2014, ACSIS-ANN COMPUT SCI, V2, P1621
   Scheidgen M., 2012, MDHPCL MODELS
   Selic B., 2014, Modeling and Analysis of Real-Time and Embedded Systems with UML and MARTE: Developing Cyber-Physical Systems, P27, DOI [10.1016/B978-0-12-416619-6.00002-X, DOI 10.1016/B978-0-12-416619-6.00002-X]
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   SMITH CU, 2002, PERFORMANCE SOLUTION
   The DICE Consortium, 2017, DICE PROF REP
   The DICE Consortium, 2017, DICE ROLL
   The DICE Consortium, 2017, DICE MOD REP
   The Object Management Group (OMG), 2018, TECHNICAL REPORT
   TheDICE Consortium, 2016, TECHNICAL REPORT
   TheDICE Consortium, 2017, TECHNICAL REPORT
   UML Profile for MARTE, 2011, FORMAL20110602 OMG
   Wang KW, 2015, IEEE I C EMBED SOFTW, P166, DOI 10.1109/HPCC-CSS-ICESS.2015.246
   Wettinger J, 2014, INT CONF UTIL CLOUD, P59, DOI 10.1109/UCC.2014.14
   Wille R, 2005, LECT NOTES ARTIF INT, V3626, P1
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
NR 61
TC 11
Z9 11
U1 1
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3577
EP 3614
DI 10.1007/s10270-019-00730-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600014
DA 2024-07-18
ER

PT J
AU Bencomo, N
   Götz, S
   Song, H
AF Bencomo, Nelly
   Goetz, Sebastian
   Song, Hui
TI Models@run.time: a guided tour of the state of the art and research
   challenges
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Models@run; time; Self-reflection; Causal connection; Systematic
   literature review
ID RUNTIME; ADAPTATION; SYSTEMS
AB More than a decade ago, the research topic models@run.time was coined. Since then, the research area has received increasing attention. Given the prolific results during these years, the current outcomes need to be sorted and classified. Furthermore, many gaps need to be categorized in order to further develop the research topic by experts of the research area but also newcomers. Accordingly, the paper discusses the principles and requirements of models@run.time and the state of the art of the research line. To make the discussion more concrete, a taxonomy is defined and used to compare the main approaches and research outcomes in the area during the last decade and including ancestor research initiatives. We identified and classified 275 papers on models@run.time, which allowed us to identify the underlying research gaps and to elaborate on the corresponding research challenges. Finally, we also facilitate sustainability of the survey over time by offering tool support to add, correct and visualize data.
C1 [Bencomo, Nelly] Aston Univ, Comp Sci, Birmingham, W Midlands, England.
   [Goetz, Sebastian] Tech Univ Dresden, Dresden, Germany.
   [Song, Hui] Stiftelsen SINTEF, Trondheim, Norway.
C3 Aston University; Technische Universitat Dresden; SINTEF
RP Götz, S (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM nelly@acm.org; sebastian.goetz@acm.org; hui.song@sintef.no
RI Götz, Sebastian/AAM-7083-2020; Bencomo, Nelly/GZL-1379-2022
OI Götz, Sebastian/0000-0003-1537-7815; 
FU German Research Foundation (DFG) [SFB912/2, GRK1907]; Systems Analytics
   Research Institute (SARI) in Aston University
FX This work has been partially funded by the German Research Foundation
   (DFG) under Project Agreement SFB912/2 and GRK1907 and the Systems
   Analytics Research Institute (SARI) in Aston University.
CR Abeywickrama DB, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1857, DOI 10.1145/2695664.2695983
   Amin MT, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P41, DOI 10.1109/ICAC.2015.47
   Al-Refai M., 2014, P ANN ACM S APPL COM, P1108, DOI 10.1145/2554850.2554954
   Albassam E, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P203, DOI 10.1109/ICAC.2017.12
   Alférez GH, 2014, J SYST SOFTWARE, V91, P24, DOI 10.1016/j.jss.2013.06.034
   Almorsy M, 2014, AUTOMAT SOFTW ENG, V21, P187, DOI 10.1007/s10515-013-0133-z
   Amoui M, 2012, J SYST SOFTWARE, V85, P2720, DOI 10.1016/j.jss.2012.05.033
   Anaya IDP, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P145, DOI 10.1145/2593929.2593941
   Anderson S., 2013, ADAPTIVE COLLECTIVE
   Andersson J, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P323, DOI 10.1109/WICSA.2008.42
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], 2004, P BEST PRACT MOD DRI
   [Anonymous], P 7 INT S SOFTW ENG
   [Anonymous], ROY SOC CH
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], CEUR WORKSHOP P
   Anthony Richard, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P207, DOI 10.1109/ICAC.2008.23
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Arcega L., 2016, P 11 INT WORKSH MOD, P35
   Arias TBC, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P1, DOI 10.1109/WICSA.2009.5290784
   Barbier F, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.130
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Baresi L., 2010, WORKSH SOFTW ENG AD, P114, DOI [10.1145/1808984.1808997, DOI 10.1145/1808984.1808997]
   Baresi L, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P2, DOI 10.1145/2648511.2648512
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Baxter I., 2017, P 20 INT C MOD DRIV
   Bellman KL., 2017, Self-aware computing systems, P279, DOI [10.1007/978-3-319-47474-89, DOI 10.1007/978-3-319-47474-89]
   Bencomo N, 2013, COMPUTING, V95, P167, DOI 10.1007/s00607-012-0224-x
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Bencomo N, 2013, SUPPORTING DECISION, P221
   Bencomo N., 2014, MODELS RUN TIME FDN, V8378
   Bencomo N, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P293, DOI 10.1109/ICAC.2017.55
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Bencomo N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P811, DOI 10.1145/1368088.1368207
   Bennaceur Amel, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P19
   Bennaceur A, 2015, IEEE T SOFTWARE ENG, V41, P221, DOI 10.1109/TSE.2014.2364844
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bosch J, 2016, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2016.16
   Calinescu R, 2013, COMPUTING, V95, P165, DOI 10.1007/s00607-012-0238-4
   Cámara J, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P13, DOI 10.1109/SEAMS.2013.6595488
   Capilla R, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.382
   Castañeda L, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P49, DOI 10.1145/2593929.2593942
   Cazzola Walter, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P237
   Cazzola W, 2013, FINE GRAINED SOFTWAR, P271
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Cetina Carlos, 2008, P 3 WORKSHOP MODELS, P97
   Chen BH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P676, DOI 10.1145/2568225.2568310
   Chen T, 2017, IEEE T SOFTWARE ENG, V43, P453, DOI 10.1109/TSE.2016.2608826
   Chen X, 2015, FRONT COMPUT SCI-CHI, V9, P540, DOI 10.1007/s11704-015-4362-0
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   Combemale B, 2008, LECT NOTES COMPUT SC, V5301, P584, DOI 10.1007/978-3-540-87875-9_41
   Dávid I, 2018, SOFTW SYST MODEL, V17, P135, DOI 10.1007/s10270-016-0533-1
   Debbabi B., 2012, 2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2012), P69, DOI 10.1109/SASO.2012.21
   deGrandis P, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P107
   DeLoach Scott A., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P137
   Denker M, 2010, LECT NOTES COMPUT SC, V6395, P138
   Derakhshanmanesh Mahdi, 2011, P 6 INT S SOFTW ENG, P128, DOI DOI 10.1145/1988008.1988026
   Derakhshanmanesh Mahdi, 2015, P 10 INT WORKSHOP MO, P21
   Devries B., 2017, P 12 INT WORKSH MOD
   Diaconescu Ada, 2017, ARCHITECTURES COLLEC, P191, DOI DOI 10.1007/978-3-319-47474-8_7
   Didona D., 2012, P 9 INT C AUT COMP I, P125, DOI DOI 10.1145/2371536.2371559
   Ding Y., 2011, P 8 ACM INT C AUT CO, P169, DOI [10.1145/1998582.1998612, DOI 10.1145/1998582.1998612]
   Ebraert P, 2004, C196 TOK I TECHN DEP, P37
   El Kateb D, 2015, REQUIR ENG, V20, P363, DOI 10.1007/s00766-014-0204-0
   Elkhodr M., 2016, CORR, Vabs/1604.04824
   Esfahani N., 2013, SOFTWARE ENG SELF AD, V7475, P214, DOI [10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Esfahani N, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2856035
   Evesti A., 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P204, DOI 10.1109/SASO.2010.11
   Ferry N, 2009, P 4 INT WORKSH MOD R, P51
   Fiadeiro JL, 2010, LECT NOTES COMPUT SC, V6285, P70, DOI 10.1007/978-3-642-15114-9_8
   Filho JD, 2013, INT CONF SELF SELF, P41, DOI 10.1109/SASO.2013.16
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Fleurey F., 2008, P 3 INT MOD RUNT WOR, P36
   Fouquet Francois, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P87, DOI 10.1007/978-3-642-33666-9_7
   France R., 2007, FUTURE SOFTWARE ENG
   Gámez N, 2015, IEEE SOFTWARE, V32, P104
   Garcia A., 2017, P WORKSH STAF 2017 S
   Garlan D, 2004, USING ARCHITECTURAL
   Georgas JC, 2009, COMPUTER, V42, P52, DOI 10.1109/MC.2009.335
   Gerbert-Gaillard E, 2016, PR INT CONF AUTONOM, P221, DOI 10.1109/ICAC.2016.26
   Ghahremani S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P59, DOI 10.1109/ICAC.2017.35
   Ghezzi C, 2012, PROC INT CONF SOFTW, P1403, DOI 10.1109/ICSE.2012.6227237
   Giese Holger, 2017, SelfAware Computing Systems, P17
   Gjerlufsen T, 2009, COMPUTER, V42, P61, DOI 10.1109/MC.2009.325
   Götz S, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P22, DOI 10.1145/3270112.3270117
   Gonzalez-Herrera Inti, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P67, DOI 10.1109/WICSA.2014.49
   Gotz S, 2015, SIGSOFT SOFTW ENG NO, V40, P26
   Gotz S., 2013, P 2 WORKSH EN AW SOF
   Gotz S., 2015, P 10 INT S SOFTW ENG
   Gotz S., 2015, CEUR WORKSHOP PROC, V1474, P41
   Grohmann J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P21, DOI 10.1109/ICAC.2017.19
   Guo T, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P61, DOI 10.1109/ICAC.2015.46
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hartmann T, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P80, DOI 10.1109/MODELS.2015.7338238
   Heinzemann C, 2019, SOFTW SYST MODEL, V18, P157, DOI 10.1007/s10270-017-0583-z
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   Hooman J, 2008, LECT NOTES COMPUT SC, V5002, P225
   Hussin MZ, 2013, 2013 IEEE CONFERENCE ON SYSTEMS, PROCESS & CONTROL (ICSPC), P248, DOI [10.1109/SCC.2013.77, 10.1109/SPC.2013.6735141]
   Iordanov B, 2013, LECT NOTES COMPUT SC, V8107, P589, DOI 10.1007/978-3-642-41533-3_36
   Janik A., 2006, P 2006 INT WORKSH SE, P51
   Javed F, 2009, INT CONF SELF SELF, P254, DOI 10.1109/SASO.2009.26
   Johanndeiter T., 2013, CEUR WORKSHOP P, P13
   Junior A. S., 2013, P 8 WORKSH MOD RUN T, P62
   Karol Sven, 2012, P 15 ACM SIGSOFT S C, P109
   Kounev S., 2017, Self-aware computing systems
   Kounev S., 2017, Self-Aware Computing Systems, P3, DOI [10.1007/978-3-319-47474-8_1, DOI 10.1007/978-3-319-47474-81]
   Kounev S., 2011, P INT C AUT COMP KAR, P175, DOI DOI 10.1145/1998582.1998615
   Krikava F., 2014, P 29 ANN ACM S APPL, P391, DOI DOI 10.1145/2554850.2555020
   Krikava F, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P100, DOI 10.1109/MODELS.2015.7338240
   Kuhn A., 2008, WORKSH MOD RUNT, P57
   Kusic D., 2007, ICAC '07: Proceedings of the Fourth International Conference on Autonomic Computing, P23, DOI DOI 10.1109/ICAC.2007.8
   Lee J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P275, DOI 10.1109/SPLC.2008.34
   Loulou H, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P26, DOI 10.1109/WETICE.2016.16
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Maoz S, 2009, COMPUTER, V42, P28, DOI 10.1109/MC.2009.336
   MERZOUG O, 2009, QUINZAINE LITTE 1101, P21
   Mocci A, 2013, COMPUTING, V95, P191, DOI 10.1007/s00607-012-0214-z
   Mongiello M, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P24, DOI 10.1109/SEAMS.2015.11
   Morin B., 2012, P 15 ACM SIGSOFT S C, P135, DOI [DOI 10.1145/2304736, 10.1145/2304736.2304759, DOI 10.1145/2304736.2304759]
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   Mosincat AD, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P47
   Moyano F, 2016, J NETW COMPUT APPL, V69, P134, DOI 10.1016/j.jnca.2016.04.018
   Mullins R, 2013, ETERNALS ROADMAP DEF, P135
   Nascimento AS, 2013, INT CONF SELF SELF, P261, DOI 10.1109/SASO.2013.34
   Neamtiu I. G., 2008, THESIS
   Park S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P355, DOI 10.1145/2648511.2648554
   Parra C, 2011, SCI COMPUT PROGRAM, V76, P1247, DOI 10.1016/j.scico.2010.12.005
   Pasquale L., 2011, P MRT, P13
   Paucar L. Garcia, 2016, P 11 INT WORKSH MOD, V11, P9
   Paucar LHG, 2017, INT REQUIR ENG CONF, P430, DOI 10.1109/RE.2017.12
   Pickering B., 2008, P 3 INT MOD RUNT WOR, P117
   Piechnick C., 2015, P 10 INT WORKSH MOD, P61
   Porter J., 2016, CEUR WORKSHOP P, P43
   Ramírez H, 2012, ESTUD-CENT ESTUD AV-, P53
   Redlich David, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P208
   Ressia J., 2010, P 5 WORKSH MOD RUN T, P37
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   Rodrigues R, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3092691
   Rothenberg J., 1989, AI, Simulation Modeling, P75
   Sabatucci L, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P2, DOI 10.1109/SEAMS.2015.9
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   SAMUEL AL, 1959, IBM J RES DEV, V3, P211, DOI 10.1147/rd.441.0206
   Sanchez M., 2008, Technical Report COMP COMP-005-2008 Lancaster University, P107
   Saudrais Sebastien, 2009, P 4THWORKSHOP MODELS, P109
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schneider D., 2008, P 3 INT WORKSH MOD R, P47
   Schneider D, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491467
   Schneider D, 2011, URBAN IND ENVIRON, P83
   Schneider HM, 2011, CONTEMP CHIN STUD, P196
   Schone Rene, 2016, P 11 INT WORKSHOP MO, P26
   Sheikh M.B., 2011, INT C AUTONOMIC COMP, P121, DOI DOI 10.1145/1998582.1998603
   Simmonds J, 2013, COMPUTING, V95, P223, DOI 10.1007/s00607-012-0215-y
   Song H., 2010, P 13 INT C MOD DRIV, V6395
   Song H, 2014, LECT NOTES COMPUT SC, V8767, P269, DOI 10.1007/978-3-319-11653-2_17
   Song H, 2010, HUMAN RESOURCES MANAGEMENT IN THE KNOWLEDGE ECONOMY ERA, P29
   Song Hui, 2009, P 4 WORKSHOP MODELS, V509, P11, DOI [10.1007/978-3-642-12261-3_14http://link.springer, DOI 10.1007/978-3-642-12261-3_14HTTP://LINK.SPRINGER]
   Spinner S, 2014, INT CONF SELF SELF, P157, DOI 10.1109/SASO.2014.29
   Staikopoulos A., 2008, P 3 INT MOD RUNT WOR, P26
   Stehle Edward., 2010, International conference on autonomic computing, ICAC, P109
   Szvetits M., 2013, P 8 WORKSH MOD RUN T, P38
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Szvetits M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P4, DOI 10.1109/MODELS.2015.7338230
   Tallabaci G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P93, DOI 10.1109/SEAMS.2013.6595496
   Tamura G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P153, DOI 10.1109/SEAMS.2013.6595502
   Taylor RN, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P171, DOI 10.1109/WICSA.2009.5290803
   Torres R, 2018, INT J COMPUT INT SYS, V11, P272, DOI 10.2991/ijcis.11.1.21
   Vasconcelos A., 2004, 18 BRAZ S SOFTW ENG
   Vialon A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P233, DOI 10.1109/ICAC.2017.25
   Vogel T., 2011, P 6 WORKSH MOD RUN T, P1
   Vogel T., 2014, P MRT, P5
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Vogel Thomas, 2010, Models@ run.time, P13
   Vrbaski Mira., 2012, P 7 WORKSHOP MODELS, P3, DOI DOI 10.1145/2422518.2422520
   Walter J., 2017, SELF AWARE COMPUTING, P507, DOI DOI 10.1007/978-3-319-47474-8_17
   Watzoldt<spacing S., 2014, 9 WORKSH MOD RUN TIM, P11
   Weissbach M., 2017, 2017 IEEE 11 INT C S
   Welsh K, 2014, LECT NOTES COMPUT SC, V8780, P122, DOI 10.1007/978-3-662-44871-7_5
   Welsh K, 2011, INT REQUIR ENG CONF, P355, DOI 10.1109/RE.2011.6051673
   Weyns D, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P3, DOI 10.1109/SEAMS.2013.6595487
   Wolfe C, 2009, LECT NOTES COMPUT SC, V5795, P357, DOI 10.1007/978-3-642-04425-0_27
   Zhang XD, 2013, LECT NOTES COMPUT SC, V8107, P572, DOI 10.1007/978-3-642-41533-3_35
   Zhong C., 2011, Proceedings of the 6th international symposium on software engineering for adaptive and self-managing systems, P20
   [No title captured]
NR 189
TC 73
Z9 75
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3049
EP 3082
DI 10.1007/s10270-018-00712-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500011
OA Green Accepted, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Debreceni, C
   Bergmann, G
   Ráth, I
   Varró, D
AF Debreceni, Csaba
   Bergmann, Gabor
   Rath, Istvan
   Varro, Daniel
TI Enforcing fine-grained access control for secure collaborative modelling
   using bidirectional transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Collaborative modelling; Secured views; Access control; Online
   collaboration; Offline collaboration; Bidirectional model transformation
AB Large-scale model-driven system engineering projects are carried out collaboratively. Engineering artefacts stored in model repositories are developed in either offline (checkout-modify-commit) or online (GoogleDoc-style) scenarios. Complex systems frequently integrate models and components developed by different teams, vendors and suppliers. Thus, confidentiality and integrity of design artefacts need to be protected in accordance with access control policies. We propose a secure collaborative modelling approach where fine-grained access control for models is strictly enforced by bidirectional model transformations. Collaborators obtain filtered local copies of the model containing only those model elements which they are allowed to read; write access control policies are checked on the server upon submitting model changes. We present a formal collaboration schema which provenly guarantees certain correctness constraints, and its adaption to online scenarios with on-the-fly change propagation and the integration into existing version control systems to support offline scenarios. The approach is illustrated, and its scalability is evaluated using a case study of the MONDO EU project.
C1 [Debreceni, Csaba; Bergmann, Gabor; Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Debreceni, Csaba; Bergmann, Gabor; Varro, Daniel] MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.
   [Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 Budapest University of Technology & Economics; Budapest University of
   Technology & Economics; McGill University
RP Debreceni, C (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.; Debreceni, C (corresponding author), MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.
EM debreceni@mit.bme.hu; bergmann@mit.bme.hu; rath@mit.bme.hu;
   varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Rath, Istvan/E-4846-2013
OI Varro, Daniel/0000-0002-8790-252X; Perez del Campo,
   Lorenzo/0000-0002-4647-5453
FU EU Commission; project MONDO [FP7-ICT-2013-10, 611125]; MTA-BME Lendulet
   2015 Research Group on Cyber-Physical Systems [LP-2015-12]; NSERC
   [RGPIN-04573-16]; Janos Bolyai Research Scholarship of the Hungarian
   Academy of Sciences
FX This paper is partially supported by the EU Commission with project
   MONDO (FP7-ICT-2013-10), no. 611125., the MTA-BME Lendulet 2015 Research
   Group on Cyber-Physical Systems (LP-2015-12) and NSERC RGPIN-04573-16.
   The second author was supported by the Janos Bolyai Research Scholarship
   of the Hungarian Academy of Sciences.
CR Anderson Anne., 2003, OASIS
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], EMFStore
   [Anonymous], KEYNOTE TRUST MANAGE
   [Anonymous], GENMYMODEL
   [Anonymous], 1998, The theory and practice of concurrency
   Apache, 2017, SUBV 07
   Bagnato Alessandra., 2014, XM@ MoDELS, pp, P42
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Basciani Francesco., 2014, CloudMDE@MoDELS
   Bergmann G., 2016, ACM IEEE 19 INT C MO
   Bergmann G., 2 INT WORKSH COLL MO
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Breu Ruth, 2007, International Journal on Software Tools for Technology Transfer, V9, P457, DOI 10.1007/s10009-007-0045-y
   Clasen C, 2011, LECT NOTES COMPUT SC, V6999, P332, DOI 10.1007/978-3-642-24574-9_43
   Conner N., 2008, Google apps: The missing manual
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   DARPA VehicleFORGE P. U, 2012, DARPA VEHICLEFORGE P
   Debreceni C., 2016, 1 INT WORKSH COLL MO
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Dietzold S., 2006, SCRIPT SEM WEB WORKS
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Farwick M, 2010, LECT NOTES COMPUT SC, V6189, P278, DOI 10.1007/978-3-642-13911-6_19
   Fogel K.F., 2001, Open source development with CVS
   Foster JN, 2009, PROCEEDINGS OF THE 22ND IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, P60, DOI 10.1109/CSF.2009.25
   Franz I, ALLEGROGRAPH
   Fundulaki Irini., 2004, Proceedings 9th ACM Symposium on Access Control Models and Technologies, P61
   Gallardo J, 2012, J NETW COMPUT APPL, V35, P1086, DOI 10.1016/j.jnca.2011.12.009
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   International Organization for Standardization, 2013, 167392013 ISO
   Jaeschke Rex., 1990, Journal of C Language Translation, V2, P71
   Jürjens J, 2008, LECT NOTES COMPUT SC, V5289, P36
   Lúcio L, 2014, ADV COMPUT, V93, P103, DOI 10.1016/B978-0-12-800162-2.00003-8
   Maroti M., 2014, 8 MULT MOD WORKSH VA
   Martínez S, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P57, DOI 10.1145/2997364.2997375
   Montrieux Lionel, 2015, P 20 ACM S ACC CONTR, P185, DOI DOI 10.1145/2752952.2752963
   Oracle, DAT SEM TECHN
   Papakonstantinou Vassilis, 2012, SACMAT, P103, DOI DOI 10.1145/2295136.2295155
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Syriani E., 2013, ATOMPM WEB BASED MOD
   The Eclipse Foundation, RAP
   The Eclipse Project, ECLIPSE MODELING FRA
   Tolvanen Juha-Pekka., 2007, Software Product Lines, P145
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 48
TC 9
Z9 9
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1737
EP 1769
DI 10.1007/s10270-017-0631-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100010
OA hybrid
DA 2024-07-18
ER

PT J
AU Offutt, J
   Thummala, S
AF Offutt, Jeff
   Thummala, Sunitha
TI Testing concurrent user behavior of synchronous web applications with
   Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web applications; Model-based testing; Test criteria; Petri nets
AB Web applications are now used in every aspect of our lives to manage work, provide products and services, read email, and provide entertainment. The software technologies used to build web applications provide features that help designers provide flexible functionality, but that are challenging to model and test. In particular, the network-based request-response model of programming means that web applications are inherently "stateless" and implicitly concurrent. They are stateless because a new network connection is made for each request (for example, when a user clicks a submit button). Thus, the server does not, by default, recognize multiple requests from the same user. Web applications are also concurrent because multiple users can use the same web application at the same time, creating contention for the same resources. Unfortunately, most web application testing does not adequately evaluate these aspects of web applications, leaving many software faults in deployed web applications. Part of this problem is because most traditional software modeling tools (such as UML) do not have built-in support for the stateless and concurrent aspects of web applications. This research project uses a novel model that is based on Petri nets to describe certain aspects of the behavior of web applications. This paper makes several contributions. We present a novel technique to design tests from this model that explicitly tests concurrency in web applications. We present novel coverage criteria that are defined on the Petri net model. We present results from an empirical study of 18 web applications with 343 components and 30,186 lines of code, followed by a case study on a large industrial web application. The tests found significantly more faults than traditional requirements-based tests, with fewer tests.
C1 [Offutt, Jeff; Thummala, Sunitha] George Mason Univ, Software Engn, Fairfax, VA 22030 USA.
C3 George Mason University
RP Offutt, J (corresponding author), George Mason Univ, Software Engn, Fairfax, VA 22030 USA.
EM offutt@gmu.edu; sthumma3@gmu.edu
FU Knowledge Foundation (KKS) [20130085]
FX We would like to thank Dr. Nida Gokce for her valuable feedback, aswell
   as the experiment participants. We also thank the anonymous company that
   generously allowed us to develop tests for their application. This work
   was partly funded by The Knowledge Foundation (KKS) through the Project
   20130085: Testing of Critical System Characteristics (TOCSYC).
CR Adjir N, 2009, LECT NOTES COMPUT SC, V5826, P1, DOI 10.1007/978-3-642-05031-2_1
   Aggarwal G., 2010, USENIX SECURITY 10, P6
   Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   Ammann P., 2008, COVERAGE COMPUTATION
   Ammann P., 2017, INTRO SOFTWARE TESTI
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], 2003, P 14 AUSTRALASIAN DA
   [Anonymous], 1992, RTCA. DO-178B
   Benedikt M., 2002, Proceedings 11th International Conference on World Wide Web WWW02, page, P654
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   BERNARDINELLO L, 1992, LECT NOTES COMPUT SC, V609, P304
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   BlaineDonley Offutt J, 2009, WEB APPL TESTING CHA
   Chachkov S, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P99, DOI 10.1109/CSD.2001.981768
   Cheng A., 1997, P INT WORKSH DISCR E, P169
   Danial A., 2006, CLOC COUNT LINES COD
   Darondeau P, 2011, LEIBNIZ INT PR INFOR, V13, P140, DOI 10.4230/LIPIcs.FSTTCS.2011.140
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P74, DOI 10.1109/WSE.2003.1234011
   Durbin P, 2014, US SESS MIX JAV APP
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Epstein Z, 2016, POKEMON GO FANS WE H
   Fehling F., 1993, Advances in Petri Nets 1993, P148
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gardey G, 2005, LECT NOTES COMPUT SC, V3576, P418
   Garrett JesseJames., 2006, Ajax: A New Approach to Web Applications
   Genrich H. J., 1980, NET THEORY APPLICATI, P21
   GitHub, 2007, GITH LARG OP SOURC C
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Grigore L., 2008, P 9 IASTED INT C, V632, P33
   Group O. M., 2006, DOC ASS OBJ CONSTR L
   Guerra E, 2007, LECT NOTES COMPUT SC, V4607, P269
   Gupt S, 2010, TARGET BLACK FRIDAY
   HALL M, 2001, CORE SERVLETS JAVASE
   Hamill J, 2016, GAMERS FURIOUS POKEM
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Humphery-Jenner M, 2016, WHAT WENT WRONG POKE
   Ian Hickson I, 2012, GOOGLE WEB STORAGE W
   Jensen K., 1996, COLOURED PETRI NETS, VI.
   Koppol P. V., 1996, SIGSOFT Software Engineering Notes, V21, P14, DOI 10.1145/226295.226298
   Langley R., 1971, PRACTICAL STAT SIMPL
   Larsen K. G., 1995, Fundamentals of Computation Theory. 10th International Conference, FCT'95. Proceedings, P62
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Lill R., 2012, 9 S FORM METH AUT SA, P155
   Mordani Rajiv., 2009, Java servlet specification
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Offutt J, 2010, SOFTW SYST MODEL, V9, P257, DOI 10.1007/s10270-009-0125-4
   Petri C. A., 1966, RADCTR65377, VI
   Pollock R, 2013, TROUBLED OBAMACARE W
   Pugh W., 2007, ASE, P513, DOI [10.1145/1321631.1321722, DOI 10.1145/1321631.1321722]
   REISIG W, 1987, LECT NOTES COMPUT SC, V254, P117
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   ROY P.V., 2004, CONCEPTS TECHNIQUES
   Salgado M. R. M, 2009, VERIFYING PETR UNPUB
   StackOverFlow. com, 2013, MIX US SESS DAT JBOS
   StackOverFlow. com, 2010, SESS MIX UP US STAT
   Stotts D, 2002, P 11 INT C WORLD WID, P182
   STOTTS PD, 1989, ACM T INFORM SYST, V7, P3, DOI 10.1145/64789.64791
   Thummala S, 2016, IEEE ICST WORKSHOP, P189, DOI 10.1109/ICSTW.2016.15
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Veanes Margus, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P39, DOI 10.1007/978-3-540-78917-8_2
   Wohlin C., 2008, EXPT SOFTWARE ENG IN
   Zakas N. C, 2009, INTRO SESSION STORAG
   Zhao B, 2015, I C DEPEND SYS NETWO, P184, DOI 10.1109/DSN.2015.18
   Zhu H, 2002, INFORM SOFTWARE TECH, V44, P473, DOI 10.1016/S0950-5849(02)00048-4
   ZUBEREK WM, 1991, MICROELECTRON RELIAB, V31, P627, DOI 10.1016/0026-2714(91)90007-T
NR 69
TC 7
Z9 9
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 913
EP 936
DI 10.1007/s10270-018-0655-8
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400008
DA 2024-07-18
ER

PT J
AU Rahmoun, S
   Mehiaoui-Hamitou, A
   Borde, E
   Pautet, L
   Soubiran, E
AF Rahmoun, Smail
   Mehiaoui-Hamitou, Asma
   Borde, Etienne
   Pautet, Laurent
   Soubiran, Elie
TI Multi-objective exploration of architectural designs by composition of
   model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Component-based software engineering; Model transformations composition;
   Design space exploration; Rule-based transformation languages; AADL
   models; Extra-functional properties; Multiple objectives evolutionary
   algorithms; NSGA-II; SAT solvers; Linear programming
AB Designing software architectures and optimizing them based on extra-functional properties (EFPs) require to identify appropriate design decisions and to apply them on valid architectural elements. Software designers have to check whether the resulting architecture fulfills the requirements and how it positively improves (possibly conflicting) EFPs. In practice, they apply well-known solutions such as design patterns manually. This is time-consuming, error-prone, and possibly sub-optimal. Well-established approaches automate the search of the design space for an optimal solution. They are based model-driven engineering techniques that formalized design decisions as model transformations and architectural elements as components. Using multi-objective optimizations techniques, they explore the design space by randomly selecting a set of components and applying to them variation operators that include a fixed set of predefined design decisions. In this work, we claim that the design space exploration requires to reason on both architectural components as well as model transformations. More specifically, we focus on possible instantiations of model transformations materialized as the application of model transformation alternatives on a set of architectural components. This approach was prototyped in RAMSES, a model transformation and code generation framework. Experimental results show the capability of our approach (i) to combine evolutionary algorithms and model transformation techniques to explore efficiently a set of architectural alternatives with conflicting EFPs, (ii) to instantiate, and select transformation instances that generate architectures satisfying stringent structural constraints, and (iii) to explore design spaces by chaining more than one transformation. In particular, we evaluated our approach on EFPs, architectures, and design alternatives inspired from the railway industry by chaining model transformations dedicated to implement safety design patterns and software components allocation on a multi-processor hardware platform.
C1 [Mehiaoui-Hamitou, Asma; Borde, Etienne; Pautet, Laurent] TELECOM ParisTech, Inst Mines Telecom, LTCI, 46 Rue Barrault, F-75634 Paris 13, France.
   [Rahmoun, Smail] Inst Technol Res SystemX, 8 Ave Vauve, F-91120 Palaiseau, France.
   [Soubiran, Elie] Alstom, 48 Rue Albert Dhalenne, F-93482 St Ouen, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   Paris
RP Borde, E (corresponding author), TELECOM ParisTech, Inst Mines Telecom, LTCI, 46 Rue Barrault, F-75634 Paris 13, France.
EM smail.rahmoun@irt-systemx.fr;
   asma.mehiaoui-hamitou@telecom-paristech.fr;
   etienne.borde@telecom-paristech.fr; laurent.pautet@telecom-paristech.fr;
   elie.soubiran@transport.alstom.com
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], THESIS
   Aranega V., 2012, USING FEATURE MODEL
   Basciani F., 2014, AUTOMATED CHAINING M
   Borde E, 2014, P IEEE RAP SYST PROT, P44, DOI 10.1109/RSP.2014.6966691
   Castellanos C, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P267, DOI 10.1109/SEAA.2015.76
   Chenouard R., 2009, AUTOMATICALLY DISCOV
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   Etien A., 2010, P 2010 ACM S APPL CO, P2237
   Etien Anne, 2012, 1 WORKSH AN MOD TRAN, P9, DOI [10.1145/2432497.2432500, DOI 10.1145/2432497.2432500]
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Heckel R., 2002, LNCS, V2505
   Insfran E, 2010, LECT NOTES COMPUT SC, V6395, P288
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Koziolek Anne, 2011, P JOINT ACM SIGSOFT
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Loniewski G., 2013, 22 INT C INF SYST DE
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   OMG, 2012, OMG FLOW LAT AN AADL
   Rahmoun S., 2015, 2015 EUR C SOFTW ARC
   SHA L, 1990, IEEE T COMPUT, V39, P1175, DOI 10.1109/12.57058
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Tisi M., 2009, 5 EUR C MOD DRIV ARC
   Wagelaar D., 2008, COMPOSITION TECHNIQU
   Zheng W, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P161, DOI 10.1109/RTSS.2007.40
   Zhu Q, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P275, DOI 10.1109/RTAS.2009.37
NR 28
TC 6
Z9 6
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 107
EP 127
DI 10.1007/s10270-017-0580-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300006
DA 2024-07-18
ER

PT J
AU Acretoaie, V
   Störrle, H
   Strüber, D
AF Acretoaie, Vlad
   Storrle, Harald
   Strueber, Daniel
TI VMTL: a language for end-user model transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE End-user modelers; Transparent model transformation; VMTL; Henshin;
   Epsilon; Learnability; Experiment; Think-aloud protocol
ID CONCRETE SYNTAX
AB Model transformation is a key enabling technology of Model-Driven Engineering (MDE). Existing model transformation languages are shaped by and for MDE practitioners-a user group with needs and capabilities which are not necessarily characteristic of modelers in general. Consequently, these languages are largely ill-equipped for adoption by end-user modelers in areas such as requirements engineering, business process management, or enterprise architecture. We aim to introduce a model transformation language addressing the skills and requirements of end-user modelers. With this contribution, we hope to broaden the application scope of model transformation and MDE technology in general. We discuss the profile of end-user modelers and propose a set of design guidelines for model transformation languages addressing them. We then introduce Visual Model Transformation Language (VMTL) following these guidelines. VMTL draws on our previous work on the usability-oriented Visual Model Query Language. We implement VMTL using the Henshin model transformation engine, and empirically investigate its learn-ability via two user experiments and a think-aloud protocol analysis. Our experiments, although conducted on computer science students exhibiting only some of the characteristics of end-user modelers, show that VMTL compares favorably in terms of learnability with two state-of the-art model transformation languages: Epsilon and Henshin. Our think-aloud protocol analysis confirms many of the design decisions adopted for VMTL, while also indicating possible improvements.
C1 [Acretoaie, Vlad; Storrle, Harald] Tech Univ Denmark, Dept Appl Math & Comp Sci, Lyngby, Denmark.
   [Strueber, Daniel] Philipps Univ Marburg, Dept Math & Comp Sci, Marburg, Germany.
C3 Technical University of Denmark; Philipps University Marburg
RP Acretoaie, V (corresponding author), Tech Univ Denmark, Dept Appl Math & Comp Sci, Lyngby, Denmark.
EM rvac@dtu.dk; hsto@dtu.dk; strueber@mathematik.uni-marburg.de
OI Struber, Daniel/0000-0002-5969-3521
CR Acretoaie V., 2012, LNCS, P328
   Acretoaie V., 2014, P 2 WS SCAL MOD DRIV, V1206, P6
   Acretoaie V, 2015, LECT NOTES COMPUT SC, V9152, P121, DOI 10.1007/978-3-319-21155-8_10
   Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   [Anonymous], SOFTWARE SYSTEMS MOD
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], 2012, 6749 IETF RFC
   Arendt T., 2014, THESIS
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Avazpour I, 2015, J VISUAL LANG COMPUT, V28, P195, DOI 10.1016/j.jvlc.2015.02.005
   Awad A, 2012, COMPUT IND, V63, P867, DOI 10.1016/j.compind.2012.06.002
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P84
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Beeri C, 2008, INFORM SYST, V33, P477, DOI 10.1016/j.is.2008.02.005
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Cohen J., 1988, STAT POWER ANAL BEHA
   Costa Silva G., 2014, CEUR WORKSHOP P, V1249, P18
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   GOPHER D, 1984, HUM FACTORS, V26, P519, DOI 10.1177/001872088402600504
   Gronmo R, 2009, LECT NOTES COMPUT SC, V5562, P2
   Grossman T, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P649
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jones B, 2014, DESIGN ANAL CROSS OV
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kalnins A, 2005, LECT NOTES COMPUT SC, V3599, P62
   Kent S, 1997, ACM SIGPLAN NOTICES, V32, P327, DOI 10.1145/263700.263756
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Langer P, 2010, LECT NOTES COMPUT SC, V6142, P153, DOI 10.1007/978-3-642-13688-7_11
   Lewis C., 1982, USING THINKING ALOUD
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Montgomery D.C., 2012, Design and Analysis of Experiments, Veighth
   Object Management Group, 2013, FORMAL20131209 OMG
   Object Management Group, 2015, FORMAL150201 OMG
   Object Management Group, 2014, FORMAL20140203 OMG
   Object Management Group, 2015, FORMAL20150301
   Saada Hajer, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P546, DOI 10.1007/978-3-642-33666-9_35
   Schmidt M, 2007, LECT NOTES COMPUT SC, V4401, P130
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sendall S., 2003, LGLREPORT2003005 EC
   Stein D, 2006, INT J SOFTW ENG KNOW, V16, P317, DOI 10.1142/S0218194006002811
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Storrle Harald, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P3, DOI 10.1007/978-3-642-39013-5_2
   Storrle H., 2013, P ACM SIGCHI ANN INT, P41
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Störrle H, 2011, J VISUAL LANG COMPUT, V22, P3, DOI 10.1016/j.jvlc.2010.11.004
   Stricker V, 2009, LECT NOTES BUS INF P, V33, P57
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Syriani E., 2011, J SOFTWARE SYSTEMS M, V12, P387, DOI DOI 10.1007/s10270-011-0205-0
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Teets JM, 2010, IEEE T VIS COMPUT GR, V16, P841, DOI 10.1109/TVCG.2010.21
   Van Gorp P, 2009, LECT NOTES COMPUT SC, V5452, P208, DOI 10.1007/978-3-642-00434-6_14
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Vessey I, 2006, ADV MANAG INFORM SYS, V5, P141
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
NR 63
TC 10
Z9 11
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1139
EP 1167
DI 10.1007/s10270-016-0546-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000005
DA 2024-07-18
ER

PT J
AU Neumayr, B
   Schuetz, CG
   Jeusfeld, MA
   Schrefl, M
AF Neumayr, Bernd
   Schuetz, Christoph G.
   Jeusfeld, Manfred A.
   Schrefl, Michael
TI Dual deep modeling: multi-level modeling with dual potencies and its
   formalization in F-Logic
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Database modeling; Deep instantiation; Clabject; UML; Deep modeling
   notation
ID KNOWLEDGE; LANGUAGE
AB An enterprise database contains a global, integrated, and consistent representation of a company's data. Multi-level modeling facilitates the definition and maintenance of such an integrated conceptual data model in a dynamic environment of changing data requirements of diverse applications. Multi-level models transcend the traditional separation of class and object with clabjects as the central modeling primitive, which allows for a more flexible and natural representation of many real-world use cases. In deep instantiation, the number of instantiation levels of a clabject or property is indicated by a single potency. Dual deep modeling (DDM) differentiates between source potency and target potency of a property or association and supports the flexible instantiation and refinement of the property by statements connecting clabjects at different modeling levels. DDM comes with multiple generalization of clabjects, subsetting/specialization of properties, and multi-level cardinality constraints. Examples are presented using a UML-style notation for DDM together with UML class and object diagrams for the representation of two-level user views derived from the multi-level model. Syntax and semantics of DDM are formalized and implemented in F-Logic, supporting the modeler with integrity checks and rich query facilities.
C1 [Neumayr, Bernd; Schuetz, Christoph G.; Schrefl, Michael] Johannes Kepler Univ Linz, Linz, Austria.
   [Jeusfeld, Manfred A.] Univ Skovde, Skovde, Sweden.
C3 Johannes Kepler University Linz; University of Skovde
RP Neumayr, B (corresponding author), Johannes Kepler Univ Linz, Linz, Austria.
EM bernd.neumayr@jku.at; manfred.jeusfeld@his.se
RI Jeusfeld, Manfred A./M-1687-2019; Jeusfeld, Manfred A./KUH-1648-2024;
   Schuetz, Christoph G./C-2636-2013
OI Jeusfeld, Manfred A./0000-0002-9421-8566; Schuetz, Christoph
   G./0000-0002-0955-8647; Schrefl, Michael/0000-0003-1741-0252
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR [Anonymous], 2012, THESIS
   [Anonymous], LNI
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   ATKINSON C, 1997, P 1 INT ENT DISTR OB
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2014, CEUR WORKSHOP P, V1319, P1
   Atkinson C, 2012, P 2 INT MAST CLASS M
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   Cardelli L., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P70, DOI 10.1145/73560.73566
   Carvalho VA, 2015, LECT NOTES COMPUT SC, V9381, P119, DOI 10.1007/978-3-319-25264-3_9
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Clark T., 2014, P MULTI2014 COLOCATE, V1286, P43
   Costal D, 2011, LECT NOTES COMPUT SC, V6998, P189, DOI 10.1007/978-3-642-24606-7_15
   Dahchour M, 2002, IEEE T KNOWL DATA EN, V14, P1078, DOI 10.1109/TKDE.2002.1033775
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Demuth A., CEUR WORKSHOP P, V1286, P73
   Eriksson O, 2013, INFORM SOFTWARE TECH, V55, P2099, DOI 10.1016/j.infsof.2013.07.008
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Hayes P., 2001, IJCAI 2001 WORKSH IE
   HURSCH WL, 1994, LNCS, V821, P12
   Igamberdiev M., 2014, MULTI MODELS, P33
   Jardine D. A, 1977, P 2 SHAR WORK C DAT
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Jeusfeld M., 2009, METAMODELING METHOD
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Klas W., 1995, METACLASSES THEIR AP
   Kühne T, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P229
   Kuhne T., APCCM CRPIT, V96, P71
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   NEUMAYR B, 2009, APCCM CRPIT, V96, P107
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   Odell J., 1998, ADV OBJECT ORIENTED
   OMG, 2011, OMG UN MOD LANG OMG
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Rosen Gideon., 2014, The Stanford Encyclopedia of Philosophy
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Schuetz C. G., 2015, Multilevel Business Processes-Modeling and Data Analysis
   Selway M, 2015, LECT NOTES COMPUT SC, V9381, P287, DOI 10.1007/978-3-319-25264-3_21
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Yang GZ, 2003, LECT NOTES COMPUT SC, V2888, P671
   [No title captured]
NR 46
TC 27
Z9 27
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 233
EP 268
DI 10.1007/s10270-016-0519-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100013
PM 29449797
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Sánchez, AB
   Segura, S
   Parejo, JA
   Ruiz-Cortés, A
AF Sanchez, Ana B.
   Segura, Sergio
   Parejo, Jose A.
   Ruiz-Cortes, Antonio
TI Variability testing in the wild: the Drupal case study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Test case prioritization; Test case selection; Variability-intensive
   systems; Automated testing; Non-functional properties; Variability
   testing
ID TEST-CASE PRIORITIZATION; COMPLEXITY
AB Variability testing techniques search for effective and manageable test suites that lead to the rapid detection of faults in systems with high variability. Evaluating the effectiveness of these techniques in realistic settings is a must, but challenging due to the lack of variability-intensive systems with available code, automated tests and fault reports. In this article, we propose using the Drupal framework as a case study to evaluate variability testing techniques. First, we represent the framework variability using a feature model. Then, we report on extensive non-functional data extracted from the Drupal Git repository and the Drupal issue tracking system. Among other results, we identified 3392 faults in single features and 160 faults triggered by the interaction of up to four features in Drupal v7.23. We also found positive correlations relating the number of bugs in Drupal features to their size, cyclomatic complexity, number of changes and fault history. To show the feasibility of our work, we evaluated the effectiveness of non-functional data for test case prioritization in Drupal. Results show that non-functional attributes are effective at accelerating the detection of faults, outperforming related prioritization criteria as test case similarity.
C1 [Sanchez, Ana B.; Segura, Sergio; Parejo, Jose A.; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
C3 University of Sevilla
RP Sánchez, AB (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM anabsanchez@us.es; aruiz@us.es
RI Segura, Sergio/A-9615-2011; Cortés, Antonio Ruiz/B-9056-2008; Jerez, Ana
   Belén Sánchez/R-4279-2017; Maestre, Jose Antonio Parejo/A-2822-2009
OI Segura, Sergio/0000-0001-8816-6213; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Jerez, Ana Belén Sánchez/0000-0003-1473-0955;
   Maestre, Jose Antonio Parejo/0000-0002-4708-4606
FU European Commission (FEDER); Spanish RDI programme
   [IPT-2012-0890-390000, TIN2012-32273, TIC-5906, TIC-1867]; Andalusian
   RDI programme [IPT-2012-0890-390000, TIN2012-32273, TIC-5906, TIC-1867]
FX We thank the Drupal core developers Francisco Jose Seva Mora and
   Christian Lopez Espinola and the anonymous contributors of the Drupal
   forum for their helpful assistance. We are also grateful to Dr. Myra
   Cohen and the anonymous reviewers of the 8th International Workshop on
   Variability Modelling of Software intensive Systems (VaMoS'14) whose
   comments and suggestions helped us to improve the article substantially.
   This work was partially supported by the European Commission (FEDER),
   the Spanish and the Andalusian R&D&I programmes (Grants
   IPT-2012-0890-390000 (SAAS FIREWALL), TIN2012-32273 (TAPAS), TIC-5906
   (THEOS), TIC-1867 (COPAS)).
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], DRUPAL FRAMEWORK
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Baller H., 2014, INT C SOFTW TEST VER
   Batory D., 2005, SOFTW PROD LIN C
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Demuth A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P31, DOI 10.1109/ICST.2014.14
   Devroey X., 2014, SOFTW PROD LIN C, P86, DOI DOI 10.1145/2647908.2655971
   Devroey X, 2014, 8 INT WORKSH VAR MOD, p10:1, DOI [10.1145/2556624.2556635, DOI 10.1145/2556624.2556635]
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Ensan A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P291, DOI 10.1109/ITNG.2011.58
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Ferrer J, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1213, DOI 10.1145/2330163.2330331
   Galindo J.A., 2014, P 2014 INT S SOFTWAR, P293, DOI [10.1145/2610384.2610411, DOI 10.1145/2610384.2610411]
   Galindo Jose Angel, 2010, Towards Automated Analysis, P29
   Garcia-Galan Jesus, 2013, CLOSER 2013. 3rd International Conference on Cloud Computing and Service Science. Proceedings, P416
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Graves T. L, 1998, TECHNICAL REPORT, P653
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Henard C., 2014, IEEE T SOFTWARE ENG, V40, P1
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang Kyo C, 1990, Technical Report
   Kumar V., 2006, Introduction to Data Mining
   LEW KS, 1988, IEEE T SOFTWARE ENG, V14, P1645, DOI 10.1109/32.9052
   Lopez-Herrejon RE, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P387, DOI 10.1109/CEC.2014.6900473
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   Matsumoto Shinsuke, 2010, INT C PRED MOD SOFTW, P1
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mohanty S., 2011, INT J COMPUT SCI INF, V2, P1042
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Oster S., 2010, SOFTW PROD LIN C
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Lamancha BP, 2010, LECT NOTES COMPUT SC, V6435, P111, DOI 10.1007/978-3-642-16573-3_9
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Pressmen S. R., 2001, SOFTWARE ENG PRACTIT
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sanchez A. B., 2012, 17 JORN ING SOFTW BA
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Segura S., 2009, INT WORKSH VAR MOD S, P137
   Segura S., 2014, INT C AUT SOFTW ENG, P139, DOI DOI 10.1145/2642937.2642939
   She S., 2010, INT WORKSH VAR MOD S
   Srikanth Hema, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P61, DOI 10.1109/ISSRE.2009.26
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tiwari Umesh, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2557853
   Tomlinson T., 2010, PRO DRUPAL 7 DEV
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 63
TC 39
Z9 40
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 173
EP 194
DI 10.1007/s10270-015-0459-z
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500012
DA 2024-07-18
ER

PT J
AU Hidaka, S
   Tisi, M
   Cabot, J
   Hu, ZH
AF Hidaka, Soichiro
   Tisi, Massimo
   Cabot, Jordi
   Hu, Zhenjiang
TI Feature-based classification of bidirectional transformation approaches
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bidirectional transformation; Feature model; Domain analysis
ID MODEL TRANSFORMATION
AB Bidirectional model transformation is a key technology in model-driven engineering (MDE), when two models that can change over time have to be kept constantly consistent with each other. While several model transformation tools include at least a partial support to bidirectionality, it is not clear how these bidirectional capabilities relate to each other and to similar classical problems in computer science, from the view update problem in databases to bidirectional graph transformations. This paper tries to clarify and visualize the space of design choices for bidirectional transformations from an MDE point of view, in the form of a feature model. The selected list of existing approaches are characterized by mapping them to the feature model. Then, the feature model is used to highlight some unexplored research lines in bidirectional transformations.
C1 [Hidaka, Soichiro; Hu, Zhenjiang] SOKENDAI, Natl Inst Informat, Tokyo, Japan.
   [Tisi, Massimo; Cabot, Jordi] Inria, Mines Nantes, LINA, AtlanMod Team, 4 Rue Alfred Kastler, F-44307 Nantes, France.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan; Graduate University for Advanced
   Studies - Japan; Inria; IMT - Institut Mines-Telecom; IMT Atlantique
RP Hidaka, S (corresponding author), SOKENDAI, Natl Inst Informat, Tokyo, Japan.
EM hidaka@nii.ac.jp; massimo.tisi@inria.fr; jordi.cabot@inria.fr;
   hu@nii.ac.jp
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489
FU EU FP7 MONDO project; MOU grant from National Institute of Informatics;
   Grants-in-Aid for Scientific Research [26330096] Funding Source: KAKEN
FX We thank the anonymous reviewers for their detailed and helpful feedback
   on our paper and Frederic Jouault, Keisuke Nakano, Kazutaka Matsuda,
   Hiroyuki Kato, Kazuhiro Inaba for their valuable comments and
   suggestions on earlier versions of this research. We would also like to
   thank Fabian Buttner for comments on earlier version of this paper. We
   also would like to thank participants of BIRS workshop on Bi-directional
   transformations (BX)-Theory and Applications Across Disciplines
   (13w5115), especially Alcino Cunha and the other members of the working
   group on Benchmarking Bidirectional Transformations, for inspiring
   discussions. This research has been supported by the EU FP7 MONDO
   project and the MOU grant from National Institute of Informatics.
CR Anjorin A., 2012, ECEASST
   [Anonymous], ELECT NOTES THEORETI
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Becker SM, 2007, SOFTW SYST MODEL, V6, P287, DOI 10.1007/s10270-006-0045-5
   Bohannon A, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P407, DOI 10.1145/1328438.1328487
   BRAUN P, 2003, TUMI0307
   Buneman P, 2000, VLDB J, V9, P76, DOI 10.1007/s007780050084
   Buttner F, 2011, P 8 INT WORKSH MOD D
   Bzivin J., 2005, P MET S
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   DAYAL U, 1982, ACM T DATABASE SYST, V7, P381, DOI 10.1145/319732.319740
   DELFABRO MD, 2005, P 1 JOURN ING DIR MO
   Diskin Z, 2012, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.93.1
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2014, LECT NOTES COMPUT SC, V8568, P57
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra E, 2009, LECT NOTES COMPUT SC, V5563, P83, DOI 10.1007/978-3-642-02408-5_7
   Hermann F, 2011, LECT NOTES COMPUT SC, V6981, P668, DOI 10.1007/978-3-642-24485-8_49
   Hettel T, 2008, LECT NOTES COMPUT SC, V5063, P31, DOI 10.1007/978-3-540-69927-9_3
   Hidaka S, 2010, ICFP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P205
   Hofmann M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P495
   Hofmann M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P371, DOI 10.1145/1926385.1926428
   Hu Z., 2011, DAGSTUHL REPORTS, V1, P42
   Hu ZJ, 2011, SIGMOD REC, V40, P35, DOI 10.1145/2007206.2007217
   Hu Zhenjiang., 2004, PARTIAL EVALUATION P, P178
   Jacobs FR, 2007, J OPER MANAG, V25, P357, DOI 10.1016/j.jom.2006.11.005
   Jakob J, 2006, LECT NOTES COMPUT SC, V4178, P321
   Johnson M, 2012, ECEASST, V49
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Kang K. C., 1990, Technical Report
   Kdnigs A., 2005, MOD TRANSF PRACT SAT
   Keller A. M., 1986, Proceedings of Very Large Data Bases. Twelfth International Conference on Very Large Data Bases, P467
   Lambers L., 2012, ECEASST, V49
   Lammel R., 2004, 1 INT WORKSH SOFTW E, P31
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Marschall F., 2003, Proceedings of the Workshop on Model Driven Architecture: Foundations and Applications, P25
   Matsuda K, 2007, ICFP'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P47
   Meertens L., 1998, DESIGNING CONSTRAINT
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Nakano K., 2011, GRACETR1101 NAT I IN
   Object Management Group, 2008, MET FAC MOF 2 0 QUER
   Petter A, 2009, LECT NOTES COMPUT SC, V5563, P132, DOI 10.1007/978-3-642-02408-5_10
   Rose L. M., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P57, DOI 10.1109/MISE.2012.6226015
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Taentzer G., 2005, P WORKSH MOD TRANSF, P1
   Voigtländer J, 2010, ICFP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P181
   Voigtländer J, 2009, ACM SIGPLAN NOTICES, V44, P165, DOI 10.1145/1594834.1480904
   Wang M, 2011, ICFP 11 - PROCEEDINGS OF THE 2011 ACM SIGPLAN: INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P392
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
   Yokoyama T., 2008, P 5 C COMPUTING FRON, P43, DOI DOI 10.1145/1366230.1366239
   Zhenjiang Hu, 2008, Higher-Order and Symbolic Computation, V21, P89, DOI 10.1007/s10990-008-9025-5
NR 60
TC 51
Z9 54
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 907
EP 928
DI 10.1007/s10270-014-0450-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600013
DA 2024-07-18
ER

PT J
AU Rago, A
   Marcos, C
   Diaz-Pace, JA
AF Rago, Alejandro
   Marcos, Claudia
   Diaz-Pace, J. Andres
TI Identifying duplicate functionality in textual use cases by aligning
   semantic actions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Use case modeling; Use case refactoring; Natural language processing;
   Sequence alignment; Requirements engineering; Machine learning
ID REQUIREMENTS
AB Developing high-quality requirements specifications often demands a thoughtful analysis and an adequate level of expertise from analysts. Although requirements modeling techniques provide mechanisms for abstraction and clarity, fostering the reuse of shared functionality (e.g., via UML relationships for use cases), they are seldom employed in practice. A particular quality problem of textual requirements, such as use cases, is that of having duplicate pieces of functionality scattered across the specifications. Duplicate functionality can sometimes improve readability for end users, but hinders development-related tasks such as effort estimation, feature prioritization, and maintenance, among others. Unfortunately, inspecting textual requirements by hand in order to deal with redundant functionality can be an arduous, time-consuming, and error-prone activity for analysts. In this context, we introduce a novel approach called ReqAligner that aids analysts to spot signs of duplication in use cases in an automated fashion. To do so, ReqAligner combines several text processing techniques, such as a use case-aware classifier and a customized algorithm for sequence alignment. Essentially, the classifier converts the use cases into an abstract representation that consists of sequences of semantic actions, and then these sequences are compared pairwise in order to identify action matches, which become possible duplications. We have applied our technique to five real-world specifications, achieving promising results and identifying many sources of duplication in the use cases.
C1 [Rago, Alejandro; Marcos, Claudia; Diaz-Pace, J. Andres] UNICEN Univ, ISISTAN Res Inst, Tandil, Argentina.
   [Rago, Alejandro; Diaz-Pace, J. Andres] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Marcos, Claudia] CIC, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Rago, A; Marcos, C; Diaz-Pace, JA (corresponding author), UNICEN Univ, ISISTAN Res Inst, Tandil, Argentina.; Rago, A; Diaz-Pace, JA (corresponding author), Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.; Marcos, C (corresponding author), CIC, Buenos Aires, DF, Argentina.
EM arago@exa.unicen.edu.ar; cmarcos@exa.unicen.edu.ar;
   adiaz@exa.unicen.edu.ar
CR Adolph S., 2003, AGILE SOFTWARE DEV S
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   [Anonymous], 2012, MINING UNSTRUCTURED
   [Anonymous], BUILDING FDN STRUC 1
   [Anonymous], SYNTHESIS LECT HUMAN
   Baniassad E, 2004, PROC INT CONF SOFTW, P158, DOI 10.1109/ICSE.2004.1317438
   Bell R., COURSE REGISTRATION
   Booch G., 1999, Addison-Wesley object technology series
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   Ciemniewska A, 2007, LECT NOTES COMPUT SC, V4439, P424
   Cockburn A., 2001, Writing effective use cases, V1
   Dekhtyar A, 2011, INT REQUIR ENG CONF, P111, DOI 10.1109/RE.2011.6051649
   Dobrzanski L., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1273, DOI 10.1145/1141277.1141574
   Einarsson H., 2012, Proceedings of the Fifth Workshop on Refactoring Tools, P16, DOI DOI 10.1145/2328876.2328879
   Eissen SMZ, 2006, LECT NOTES COMPUT SC, V3936, P565
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Enckevort T.v., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P635, DOI DOI 10.1145/1639950.1639959
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   GOTOH O, 1982, J MOL BIOL, V162, P705, DOI 10.1016/0022-2836(82)90398-9
   Greenwood P, 2011, TAO TESTBED ASPECT O
   Hull E., 2010, Requirements engineering
   Issa A, 2006, INFORM SOFTWARE TECH, V48, P836, DOI 10.1016/j.infsof.2005.10.005
   Juergens E., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P79, DOI 10.1145/1810295.1810308
   Jurkiewicz J., 2007, Master's thesis
   Kamalrudin M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P531, DOI 10.1145/1985793.1985866
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   Kulak D., 2012, Use Cases: Requirements in Context
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mich L, 2004, REQUIR ENG, V9, P151, DOI 10.1007/s00766-004-0195-3
   Moreira A., 2013, ASPECT ORIENTED REQU, VXIX, DOI [10.1007/978-3-642-38640-4, DOI 10.1007/978-3-642-38640-4]
   Niazi M., 2003, P IEEE INT MULT C IN, P402
   Polanski A., 2007, BIOINFORMATICS
   Rago A., 2014, P 2 IEEE BIENN C ARG
   Rago A, 2016, AUTOMAT SOFTW ENG, V23, P219, DOI 10.1007/s10515-014-0156-0
   Rago A, 2013, REQUIR ENG, V18, P67, DOI 10.1007/s00766-011-0142-z
   Rago A, 2009, EA'09: EARLY ASPECT WORKSHOP, P19
   Ramos Ricardo, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P187, DOI 10.1109/SBES.2009.10
   Ren S., 2004, P 6 INT C ENTERPRISE, P173
   Roe G., 2010, DIGITAL STUDIES, V2
   Rui K., 2003, P 25 AUSTRALASIAN CO, P301
   Sampaio A, 2007, LECT NOTES COMPUT SC, V4620, P4
   Schneider G., 2001, Applying Use Cases: A Practical Guide
   Sinha A., 2008, RC24712 IBM
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
   Yu W, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P328, DOI 10.1109/ASE.2004.1342757
NR 48
TC 15
Z9 17
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 579
EP 603
DI 10.1007/s10270-014-0431-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800015
OA Green Published
DA 2024-07-18
ER

PT J
AU Elaasar, M
   Briand, LC
   Labiche, Y
AF Elaasar, Maged
   Briand, Lionel C.
   Labiche, Yvan
TI VPML: an approach to detect design patterns of MOF-based modeling
   languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design pattern; Modeling; MOF; UML; BPMN; QVT; GoF; VPML
AB A design pattern is a recurring and well-understood design fragment. In a model-driven engineering methodology, detecting occurrences of design patterns supports the activities of model comprehension and maintenance. With the recent explosion of domain-specific modeling languages, each with its own syntax and semantics, there has been a corresponding explosion in approaches to detecting design patterns that are so much tailored to those many languages that they are difficult to reuse. This makes developing generic analysis tools extremely hard. Such a generic tool is however desirable to reduce the learning curve for pattern designers as they specify patterns for different languages used to model different aspects of a system. In this paper, we propose a unified approach to detecting design patterns of MOF-based modeling languages. MOF is increasingly used to define modeling languages, including UML and BPMN. In our approach, a pattern is modeled with a Visual Pattern Modeling Language and mapped to a corresponding QVT-Relations transformation. Such a transformation runs over an input model where pattern occurrences are to be detected and reports those occurrences in a result model. The approach is prototyped on Eclipse and validated in two large case studies that involve detecting design patterns-specifically a subset of GoF patterns in a UML model and a subset of Control Flow patterns in a BPMN model. Results show that the approach is adequate for modeling complex design patterns for MOF-based modeling languages and detecting their occurrences with high accuracy and performance.
C1 [Elaasar, Maged] IBM Canada Ltd, Ottawa Lab, Rat Software, Kanata, ON K2V 1C8, Canada.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, L-1359 Luxembourg, Luxembourg.
   [Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 International Business Machines (IBM); University of Luxembourg;
   Carleton University
RP Elaasar, M (corresponding author), IBM Canada Ltd, Ottawa Lab, Rat Software, 770 Palladium Dr, Kanata, ON K2V 1C8, Canada.
EM melaasar@ca.ibm.com; lionel.briand@uni.lu; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
FU IBM Canada Ltd.; National Research Fund, Luxembourg [FNR/P10/03]; NSERC
FX Maged Elaasar was supported by IBM Canada Ltd. Lionel Briand was partly
   supported by a PEARL grant from the National Research Fund, Luxembourg
   (FNR/P10/03-Validation and Verification Laboratory). Yvan Labiche was
   partly supported by a NSERC Discovery grant.
CR Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   Atwood D., BPM PROCESS PATTERNS
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Beyer D, 2005, IEEE T SOFTWARE ENG, V31, P137, DOI 10.1109/TSE.2005.23
   BIRKNER M, 2007, THESIS U APPL SCI BO
   Booch G., HDB SOFTWARE ARCHITE
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   EDEN A, 1999, P 2 NORD WORKSH SOFT
   Elaasar M., 2012, THESIS CARLETON U
   Elaasar M, 2006, LECT NOTES COMPUT SC, V4199, P484
   Elaasar M, 2011, LECT NOTES COMPUT SC, V6698, P282, DOI 10.1007/978-3-642-21470-7_20
   EPPSTEIN D, 1995, PROCEEDINGS OF THE SIXTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P632
   Fulop L., 2008, P CSMR, P143
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gschwind T, 2008, LECT NOTES COMPUT SC, V5240, P4, DOI 10.1007/978-3-540-85758-7_4
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Huang HY, 2005, J SYST SOFTWARE, V75, P69, DOI 10.1016/j.jss.2003.11.018
   Jing Dong, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P621
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   Milicev D., 2009, Model-Driven Development with Executable UML
   Pettersson N, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P317
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Rudolf Michael, 1998, P INT WORKSH THEOR A, P238
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Seemann J., 1998, Software Engineering Notes, V23, P10, DOI 10.1145/291252.288207
   Smith J., 2005, THESIS U N CAROLINA
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Taibi T., 2003, Journal of Object Technology, V2, P127
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Unified Modeling Language (UML), SUP V2 4
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
NR 40
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 735
EP 764
DI 10.1007/s10270-013-0325-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400016
DA 2024-07-18
ER

PT J
AU Ali, S
   Yue, T
   Briand, LC
AF Ali, Shaukat
   Yue, Tao
   Briand, Lionel C.
TI Does aspect-oriented modeling help improve the readability of UML state
   machines?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Aspect-oriented modeling; UML state machines; Controlled experiment;
   Defect identification and fixing; Comprehension
ID SERIES
AB Aspect-oriented modeling (AOM) is a relatively recent and very active field of research, whose application has, however, been limited in practice. AOM is assumed to yield several potential benefits such as enhanced modularization, easier evolution, increased reusability, and improved readability of models, as well as reduced modeling effort. However, credible, solid empirical evidence of such benefits is lacking. We evaluate the "readability" of state machines when modeling crosscutting behavior using AOM and more specifically AspectSM, a recently published UML profile. This profile extends the UML state machine notation with mechanisms to define aspects using state machines. Readability is indirectly measured through defect identification and fixing rates in state machines, and the scores obtained when answering a comprehension questionnaire about the system behavior. With AspectSM, crosscutting behavior is modeled using so-called "aspect state machines". Their readability is compared with that of system state machines directly modeling crosscutting and standard behavior together. An initial controlled experiment and a much larger replication were conducted with trained graduate students, in two different institutions and countries, to achieve the above objective. We use two baselines of comparisons-standard UML state machines without hierarchical features (flat state machines) and standard state machines with hierarchical/concurrent features (hierarchical state machines). The results showed that defect identification and fixing rates are significantly better with AspectSM than with both flat and hierarchical state machines. However, in terms of comprehension scores and inspection effort, no significant difference was observed between any of the approaches. Results of the experiments suggest that one should use, when possible, aspect state machines along with hierarchical and/or concurrent features of UML state machines to model crosscutting behaviors.
C1 [Ali, Shaukat; Yue, Tao] Certus Software V&V Ctr, Simula Res Lab, N-1325 Lysaker, Norway.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Ali, S (corresponding author), Certus Software V&V Ctr, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM shaukat@simula.no; tao@simula.no; lionel.briand@uni.lu
RI yue, tao/H-6783-2013; Ali, Shaukat/H-4121-2013
OI Yue, Tao/0000-0003-3262-5577
FU PEARL grant from the Fonds National de la Recherche, Luxembourg
FX Lionel Briand was in part supported by a PEARL grant from the Fonds
   National de la Recherche, Luxembourg.
CR Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Ali S., 2011, SYST SOFTW IN PRESS
   [Anonymous], ISO912632003
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2006, IEEE Std 982.1-2005, P1
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Carton A, 2009, LECT NOTES COMPUT SC, V5560, P238, DOI 10.1007/978-3-642-03764-1_7
   Cavarra R., 2002, US UML AUT TEST GEN
   Chiorean D., OCLE
   Chitchyan R., 2005, SURVEY ASPECT ORIENT
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   Durr P., 2008, CONTROLLED EXPT ASSE
   Egea M., EYEOCL SOFTWARE
   Farias K., P 9 INT C ASP OR SOF
   Ferrari F., 2010, P 32 ACM IEEE INT C, V1
   Filman R., 2004, ASPECT ORIENTED SOFT
   Gomaa H., 2000, DESIGNING CONCURRENT
   Hanenberg S., 2009, 2009 3 INT S EMP SOF
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hovsepyan A., P 9 INT C ASP OR SOF
   Ibm, OCL PARS
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Pender T., 2003, UML BIBLE
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Software Assurance Standard NASA Technical Standard, NASASTD873982005 SOF
   Tessier F., 2004, 5 ASP OR MOD WORKSH
   Thomas L, 1997, CONSERV BIOL, V11, P276, DOI 10.1046/j.1523-1739.1997.96102.x
   Utting M., 2007, PRACTICAL MODEL BASE
   WALKER RJ, 1999, 21 INT C SOFTW ENG L
   Weigert T., 2003, UML REAL DESIGN EMBE, P301
   Whittle J., 2007, MODEL DRIVEN ENG LAN
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Xu D., 2005, 17 INT C SOFTW ENG K
   Yedduladoddi R., 2009, ASPECT ORIENTED SOFT
   Zhang G, 2006, 2 AS WORKSH ASP OR S
   Zhang G., 2007, P 10 INT C MOD DRIV
   Zhang G., 2009, P 14 WORKSH ASP OR M
   Zimmerman M.K., 2002, P 24 INT C SOFTW ENG
NR 44
TC 10
Z9 11
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1189
EP 1221
DI 10.1007/s10270-012-0293-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600014
DA 2024-07-18
ER

PT J
AU Hoisl, B
   Sobernig, S
   Strembeck, M
AF Hoisl, Bernhard
   Sobernig, Stefan
   Strembeck, Mark
TI Modeling and enforcing secure object flows in process-driven SOAs: an
   integrated model-driven approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process modeling; Secure object flows; Security engineering;
   Service-oriented architecture; Model-driven development; UML; SoaML; Web
   services
ID MDA APPROACH; ARCHITECTURE; FRAMEWORK; SYSTEMS
AB In this paper, we present an integrated model-driven approach for the specification and the enforcement of secure object flows in process-driven service-oriented architectures (SOA). In this context, a secure object flow ensures the confidentiality and the integrity of important objects (such as business contracts or electronic patient records) that are passed between different participants in SOA-based business processes. We specify a formal and generic metamodel for secure object flows that can be used to extend arbitrary process modeling languages. To demonstrate our approach, we present a UML extension for secure object flows. Moreover, we describe how platform-independent models are mapped to platform-specific software artifacts via automated model transformations. In addition, we give a detailed description of how we integrated our approach with the Eclipse modeling tools.
C1 [Hoisl, Bernhard; Sobernig, Stefan; Strembeck, Mark] Vienna Univ Econ & Business WU Vienna, New Media Lab, Inst Informat Syst, Vienna, Austria.
   [Hoisl, Bernhard; Strembeck, Mark] Secure Business Austria Res SBA Res, Vienna, Austria.
C3 Vienna University of Economics & Business
RP Hoisl, B (corresponding author), Vienna Univ Econ & Business WU Vienna, New Media Lab, Inst Informat Syst, Vienna, Austria.
EM bernhard.hoisl@wu.ac.at; stefan.sobernig@wu.ac.at;
   mark.strembeck@wu.ac.at
FU Austrian Research Promotion Agency (FFG) of the Austrian Federal
   Ministry for Transport, Innovation and Technology (BMVIT) through the
   Competence Centers for Excellent Technologies (COMET K1) initiative;
   FIT-IT program
FX This work has partly been funded by the Austrian Research Promotion
   Agency (FFG) of the Austrian Federal Ministry for Transport, Innovation
   and Technology (BMVIT) through the Competence Centers for Excellent
   Technologies (COMET K1) initiative and the FIT-IT program.
CR [Anonymous], 2011, OMG MET OBJ FAC MOF
   [Anonymous], NAT INF ASS IA GLOSS
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2001, WEB SERVICES DESCRIP
   [Anonymous], 2011, OMG UN MOD LANG OMG
   [Anonymous], SECURITY ENG SERVICE
   [Anonymous], Eclipse IDE
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], FED INF PROC STAND P
   Apache Software Foundation (ASF), 2012, AP ODE
   Apache Software Foundation (ASF), 2012, AP AX
   Apache Software Foundation (ASF), 2012, AP RAMP AX SEC MOD
   Axenath B., 2006, ROL BUS PROC SERV OR
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Baumgrass A., 2011, LECT NOTES BUSINESS, V100
   Cannon J.C., 2006, Queue, V4, P30, DOI [10.1145/1160434.1160449, DOI 10.1145/1160434.1160449]
   Damianides M., 2004, Journal of Corporate Accounting Finance, V15, P35
   Eclipse Foundation, 2012, ECL MOD DEV TOOLS MD
   Eclipse Foundation, 2012, ECL PAP
   Elvesaeter Brian, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P276
   Elvesæter B, 2011, SERVICE ENGINEERING: EUROPEAN RESEARCH RESULTS, P25, DOI 10.1007/978-3-7091-0415-6_2
   Fink T, 2006, ELECTRON NOTES THEOR, V142, P161, DOI 10.1016/j.entcs.2004.12.045
   Foster H, 2011, LECT NOTES COMPUT SC, V6582, P35, DOI 10.1007/978-3-642-20401-2_4
   Gilmore S, 2011, SOFTW SYST MODEL, V10, P287, DOI 10.1007/s10270-010-0155-y
   Hafner M, 2008, LECT NOTES COMPUT SC, V5002, P132
   Hafner M, 2006, INTERNET RES, V16, P491, DOI 10.1108/10662240610710978
   Hafner M, 2006, LECT NOTES COMPUT SC, V4199, P275
   Hentrich Carsten, 2009, Transactions on Pattern Languages of Programming. I, P136, DOI 10.1007/978-3-642-10832-7_6
   Hoisl B., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P673, DOI 10.1109/ARES.2011.105
   Hoisl B., 2012, LECT NOTES BUSINESS
   Hoisl B, 2011, LECT NOTES BUS INF P, V87, P278
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Hummer W., 2011, P 16 ACM S ACC CONTR
   ISO, 2009, 270002009 ISOIEC
   *ISO, 2008, 270022005 ISOIEC
   *ISO, 2008, 270012005 ISOIEC
   Jensen M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P340, DOI 10.1109/ECBS.2009.14
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kim SK, 2005, LECT NOTES COMPUT SC, V3582, P448
   Kopp O, 2009, ENTERP MODELLING INF, V4, P3
   Mayer P., 2010, THESIS LUDWIG MAXIMI
   Mayer P., 2008, MODEL DRIVEN DEV SER
   Mayer P., 2010, UML4SOA PROFILE
   Mayer P, 2008, IEEE INT ENTERP DIST, P203, DOI 10.1109/EDOC.2008.55
   Memon M., 2008, P MOD SEC WORKSH ASS
   Mendling Jan, 2008, International Journal of Business Process Integration and Management, V3, P96, DOI 10.1504/IJBPIM.2008.020973
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mishra S, 2007, COMMUN ASSOC INF SYS, V20, P712
   Nakamura Y, 2005, P IEEE I C SERV COMP, P7
   National Institute of Standards and Technology (NIST), 1999, FED INF PROC STAND P
   National Institute of Standards and Technology (NIST), 2009, NIST SPECIAL PUBLICA, V800-53
   National Institute of Standards and Technology (NIST), 1995, NIST HDB SPECIAL PUB, V800-12
   National Institute of Standards and Technology (NIST), 2008, FED INF PROC STAND P, V180-3
   National Security Agency (NSA), 2000, INF ASS TECHN FRAM
   Object Management Group, 2011, MET OBJ FAC MOF 2 0
   Object Management Group, 2012, OMG OBJ CONSTR LANG
   Object Management Group, 2009, OMG SERV OR ARCH MOD
   Object Management Group, 2011, OMG BUS PROC MOD NOT
   Object Management Group, 2011, OMG MOF 2 XMI MAPP S
   Object Management Group, 2010, OMG OBJ CONSTR LANG
   Organization for the Advancement of Structured Information Standards (OASIS), 2009, REF ARCH FDN SERVICE
   Organization for the Advancement of Structured Information Standards (OASIS), 2009, WS SECURITYPOLICY 1
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Reznik J, 2007, ELECTRON NOTES THEOR, V163, P65, DOI 10.1016/j.entcs.2006.10.016
   Rodríguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Sánchez O, 2009, J UNIVERS COMPUT SCI, V15, P2957
   Sandhu R., 1993, P IFIP WG11 3 WORK C
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Schefer S., 2011, LECT NOTES BUSINESS, V83
   Schefer S, 2011, LECT NOTES COMPUTER, V7044
   Schefer S., 2011, P INT WORKSH FLEX WO
   Schefer S., 2011, LECT NOTES BUS IN, V100
   Schefer-Wenzl S., 2012, LECT NOTES BUSINESS
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schmidt Holger, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P367, DOI 10.1007/978-3-642-21640-4_28
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sobernig S., 2009, P 14 ANN EUR C PATT, V566
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strembeck M., 2010, LECT NOTES COMPUTER, V6426
   Strembeck M., 2012, P 3 INT C MOB UB INT
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Tatsubori M, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P244, DOI 10.1109/ICWS.2004.1314745
   W3C, 2007, WEB SERV POL 1 5 ATT
   W3C, 2007, WEB SERV POL 1 5 FRA
   WARNER J, 2006, P 11 ACM S ACC CONTR
   Wenzel S., 2012, CARISMA
   Wolter C, 2008, MODELLIERUNG, P197
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Zdun Uwe, 2007, International Journal of Business Process Integration and Management, V2, P109, DOI 10.1504/IJBPIM.2007.015135
   Zdun U., 2006, PATTERN LANGUAGES PR, V5
   Zdun U, 2007, ACM T WEB, V1, DOI 10.1145/1281480.1281484
NR 95
TC 17
Z9 19
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 513
EP 548
DI 10.1007/s10270-012-0263-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300005
DA 2024-07-18
ER

PT J
AU Buyens, K
   Scandariato, R
   Joosen, W
AF Buyens, Koen
   Scandariato, Riccardo
   Joosen, Wouter
TI Least privilege analysis in software architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security analysis; Least privilege; Software architecture
AB Due to the lack of both precise definitions and effective software engineering methodologies, security design principles are often neglected by software architects, resulting in potentially high-risk threats to systems. This work lays the formal foundations for understanding the security design principle of least privilege in software architectures and provides a technique to identify violations against this principle. The technique can also be leveraged to analyze violations against the security design principle of separation of duties. The proposed approach is supported by tools and has been validated in four case studies, two of which are presented in detail in this paper.
C1 [Buyens, Koen; Scandariato, Riccardo; Joosen, Wouter] Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
C3 KU Leuven
RP Buyens, K (corresponding author), Katholieke Univ Leuven, IBBT DistriNet, B-3001 Louvain, Belgium.
EM koen.buyens@cs.kuleuven.be; riccardo.scandariato@cs.kuleuven.be;
   wouter.joosen@cs.kuleuven.be
FU Interuniversity Attraction Poles Programme Belgian State, Belgian
   Science Policy; Research Fund K.U. Leuven
FX This research is partially funded by the Interuniversity Attraction
   Poles Programme Belgian State, Belgian Science Policy, and by the
   Research Fund K.U. Leuven.
CR Acharya A., 1999, TECHNICAL REPORT
   Alexandrov A., 1999, USENIX ANN TECHN C
   Alexandrov A.D., 1997, 1997 ANN TECHN C UNI
   [Anonymous], INFORMK SECURITY B
   [Anonymous], P 12 USENIX SEC S
   [Anonymous], 2005, Secure Systems Development with UML
   Barkley J., 1997, ACM WORKSH ROL BAS A
   Basin D., 2009, EUR C RES COMP SEC E
   Berman Andrew, 1995, P USENIX 1995 TECHN, P14
   Bernstein DJ, 2007, CSAW'07: PROCEEDINGS OF THE 2007 ACM COMPUTER SECURITY ARCHITECTURE WORKSHOP, P1, DOI 10.4272/978-84-9745-157-4.ch1
   Brumley D., 2004, USENIX
   Buyens K., 2009, WORKSH SOFTW ENG SEC
   Buyens K., 2011, SECURITY PRINCIPLE T
   Buyens K., 2007, INT WORKSH SEC SOFTW
   Chari S. N., 2003, ACM Transactions on Information and Systems Security, V6, P173, DOI 10.1145/762476.762477
   Crampton J., 2003, P 8 ACM S ACC CONTR, P43
   Dashofy E., 2007, ICSE COMPANION
   Debie E., 2009, THESIS KATHOLIEKE U
   Evans C., 2001, COMMENTS OVERALL ARC
   Fernandez EB., 1997, In Proc. ACM Workshop on RBAC, P121
   Giorgini P, 2004, LECT NOTES COMPUT SC, V2995, P176
   Hohn S., 2008, ICSE
   Howard M., 2006, SECURITY DEV LIFECYC
   Jain K., 2000, USER LEVEL INFRASTRU
   Jordan D., 2007, WS BPEL 2 0 OASIS
   Karger P. A., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P32
   Li NH, 2007, ACM T INFORM SYST SE, V10, DOI 10.1145/1237500.1237501
   Liu L., SECURITY PRIVACY REQ
   Mazieres D., 1997, WORKSH HOT TOP OP SY
   Microsoft, 2010, MSDN LIB ACC CONTR L
   Morandini M., 2008, WORKSH AG OR SOFTW E
   Nash M.J., 1988, ANN COMP SEC APPL C
   Nash M.J., 1990, IEEE S RES SEC PRIV
   Provos N., SYSTRACE INTERACTIVE
   Raza A., 2006, ADA EUROPE
   Ren J., 2006, THESIS U CALIFORNIA
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Spitz B., 2011, THESIS KU LEUVEN
   Van Landuyt D., 2006, CW465 KATH U LEUVEN
   Viega J., 2002, BUILDING SECURE SOFT
   Wagner D.A., 1999, CSD991056, P12
   Walker KennethM., 1996, USENIX SECURITY, P3
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zdancewic S, 2002, ACM T COMPUT SYST, V20, P283, DOI 10.1145/566340.566343
NR 48
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 331
EP 348
DI 10.1007/s10270-011-0218-8
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300008
DA 2024-07-18
ER

PT J
AU Stevens, P
AF Stevens, Perdita
TI A simple game-theoretic approach to checkonly QVT Relations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bidirectional model transformation; QVT Relations; QVT Core; Games;
   Semantics; Consistency checking
ID TRANSFORMATIONS
AB The QVT Relations (QVT-R) transformation language allows the definition of bidirectional model transformations, which are required in cases where two (or more) models must be kept consistent in the face of changes to either or both. A QVT-R transformation can be used either in checkonly mode, to determine whether a target model is consistent with a given source model, or in enforce mode, to change the target model. A precise understanding of checkonly mode transformations is prerequisite to a precise understanding of enforce mode transformations, and this is the focus of this paper. In order to give semantics to checkonly QVT-R transformations, we need to consider the overall structure of the transformation as given by when and where clauses, and the role of trace classes. In the standard, the semantics of QVT-R are given both directly, and by means of a translation to QVT Core, a language which is intended to be simpler. In this paper, we argue that there are irreconcilable differences between the intended semantics of QVT-R and those of QVT Core, so that no translation from QVT-R to QVT Core can be semantics-preserving, and hence no such translation can be helpful in defining the semantics of QVT-R. Treating QVT-R directly, we propose a simple game-theoretic semantics. We demonstrate its behaviour on examples and show how it can be used to prove an example result comparing two QVT-R transformations. We demonstrate that consistent models may not possess a single trace model whose objects can be read as traceability links in either direction. We briefly discuss the effect of variations in the rules of the game, to elucidate some design choices available to the designers of the QVT-R language.
C1 Univ Edinburgh, Sch Informat, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
C3 University of Edinburgh
RP Stevens, P (corresponding author), Univ Edinburgh, Sch Informat, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
EM perdita@inf.ed.ac.uk
CR [Anonymous], 2001, HDB PROCESS ALGEBRA, DOI DOI 10.1016/B978-044482830-9/50019-9
   Back RJ, 2000, INFORM COMPUT, V156, P25, DOI 10.1006/inco.1999.2820
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   de Lara J, 2009, LECT NOTES COMPUT SC, V5795, P256, DOI 10.1007/978-3-642-04425-0_19
   EGYED A, 2006, P 28 INT C SOFTW ENG, P381, DOI DOI 10.1145/1134285.1134339
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Garcia M., 2008, P 2 WORKSHOP MDSD TO, P21
   Gradel E., 2002, Automata Logics, and Infinite Games, V2500
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Kiegeland J., 2008, MED QVT WORKSH
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   MARTIN DA, 1975, ANN MATH, V102, P363, DOI 10.2307/1971035
   OMG, 2009, MOF2 0 QUER VIEW TRA
   Romeikat R., 2008, ICMT 08, P137
   Stevens P., 2009, LECT NOTES COMPUTER
   Stevens P., 2010, J SOFTW SYST MODEL, V9, P7
   Stevens P, 2008, LECT NOTES COMPUT SC, V5214, P1, DOI 10.1007/978-3-540-87405-8_1
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   STIRLING C, 1997, NOT MATHF INSTR M GA
   Tenzer J., 2007, J KNOWL BASED SYST, V20
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Wimmer M, 2009, LECT NOTES COMPUT SC, V5795, P727, DOI 10.1007/978-3-642-04425-0_59
NR 24
TC 12
Z9 13
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 175
EP 199
DI 10.1007/s10270-011-0198-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800012
DA 2024-07-18
ER

PT J
AU Ráth, I
   Ökrös, A
   Varró, D
AF Rath, Istvan
   Okros, Andras
   Varro, Daniel
TI Synchronization of abstract and concrete syntax in domain-specific
   modeling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling languages; Model synchronization; Live model
   transformations; Traceability
ID DRIVEN; TRANSFORMATION
AB Modern domain-specific modeling (DSM) frameworks provide refined techniques for developing new languages based on the clear separation of conceptual elements of the language (called abstract syntax) and their graphical visual representation (called concrete syntax). This separation is usually achieved by recording traceability information between the abstract and concrete syntax using mapping models. However, state-of-the-art DSM frameworks impose severe restrictions on traceability links between elements of the abstract syntax and the concrete syntax. In the current paper, we propose a mapping model which allows to define arbitrarily complex mappings between elements of the abstract and concrete syntax. Moreover, we demonstrate how live model transformations can complement mapping models in providing bidirectional synchronization and implicit traceability between models of the abstract and the concrete syntax. In addition, we introduce a novel architecture for DSM environments which enables these concepts, and provide an overview of the tool support.
C1 [Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1117 Budapest, Hungary.
   [Okros, Andras] OptXware Res & Dev LLC, H-1137 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Ráth, I (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM rath@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/G-8963-2012; Varro, Daniel/AAC-4234-2022; Rath,
   Istvan/E-4846-2013
OI Varro, Daniel/0000-0002-8790-252X; Rath, Istvan/0000-0002-5516-696X
FU EU [IST-3-016004, ICT-FET-231101]
FX This work was partially supported by EU projects SENSORIA (IST-3-016004)
   and SecureChange (ICT-FET-231101).
CR Alferes JJ, 2006, LECT NOTES ARTIF INT, V4160, P29, DOI 10.1007/11853886_5
   Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], SIVOES MDA WORKSH UM
   [Anonymous], 5 ECMDA WORKSH TRAC
   [Anonymous], GME: Generic Modeling Environment
   Bardohl R, 2000, LECT NOTES COMPUT SC, V1764, P252
   Becker Simon M., 2005, SOFTWARE SYSTEMS MOD, V4, P123
   BERGMANN G, 2008, ICGT2008
   Bergmann Gabor., 2008, GRAMOT 08
   Borger E., 2003, ABSTRACT STATE MACHI
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   DITTRICH KR, 1995, LNCS, V985, P1, DOI DOI 10.1007/3-540-60365-4_116
   *ECL PROJ, ECL MOD FRAM
   *ECL PROJ, GRAPH MOD FRAM
   EGYED A, 2006, P 28 INT C SOFTW ENG, P381, DOI DOI 10.1145/1134285.1134339
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   EHRIG K, 2005, 20 IEEE ACM INT C AU, P134
   Garcia-Molina H., 2001, Database Systems: The Complete Book
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   GREENFIELD J., 2004, SOFTWARE FACTORIES
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   GUPTA A, 1993, ACM SIGMOD INT C MAN, P157
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Jakob J, 2006, LECT NOTES COMPUT SC, V4178, P321
   KARSAI G, 2003, J UNIVERS COMPUT SCI
   KLAR F, 2007, ESEC SIGSOFT FSE, P285
   KOLOVOS DS, 2007, EDITING EMF MODELS E
   KOTH O, 2000, GRATRA 2000 JOINT AP, P32
   LEVENDOVSZKY T, 2004, P GRABATS 2004 INT W
   *MET, METAEDIT
   *MICR, DSL TOOLS
   MINAS M, 2006, P 4 FUJ DAYS, P35
   Muller PA, 2006, LECT NOTES COMPUT SC, V4199, P98
   Object Management Group, 2008, DOC ASS MET FAC MOF
   POLGAR B, 2009, 2 ECMDA WORKSH MOD D
   RATH I, 2008, 2008 IEEE S VIS LANG
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Rosenman S, 2008, AUSTRALAS PSYCHIATRY, V16, P1, DOI 10.1080/10398560701760219
   Schurr A., 1990, Graph-Theoretic Concepts in Computer Science, V411 of, P151
   SCHURR A, 1994, SPECIFICATION GRAPH
   Seiriö M, 2005, LECT NOTES COMPUT SC, V3791, P98, DOI 10.1007/11580072_9
   *SENSORIA EU FP6 P, 2009, SENSORIA DEV ENV
   *U QUEENSL, TEFKAT TOOL
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varro G., 2004, Proc. GT-VMT 2004, V109 of ENTCS, P71
   Varro Gergely., 2006, Software and System Modeling, V5, P313, DOI [10.1007/s10270-006-0015-y, DOI 10.1007/S10270-006-0015-Y]
   Zhu NP, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P254
NR 48
TC 8
Z9 11
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2010
VL 9
IS 4
BP 453
EP 471
DI 10.1007/s10270-009-0122-7
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 646SW
UT WOS:000281564100003
DA 2024-07-18
ER

PT J
AU Zschaler, S
AF Zschaler, Steffen
TI Formal specification of non-functional properties of component-based
   software systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Non-functional properties; Formal specification; Component-based
   software engineering; QML/CS
ID CLASSIFICATION
AB Component-based software engineering (CBSE) is viewed as an opportunity to deal with the increasing complexity of modern-day software. Along with CBSE comes the notion of component markets, where more or less generic pieces of software are traded, to be combined into applications by third-party application developers. For such a component market to work successfully, all relevant properties of components must be precisely and formally described. This is especially true for non-functional properties, such as performance, memory foot print, or security. While the specification of functional properties is well understood, non-functional properties are only beginning to become a research focus. This paper discusses semantic concepts for the specification of non-functional properties, taking into account the specific needs of a component market. Based on these semantic concepts, we present a new specification language QML/CS that can be used to model non-functional product properties of components and component-based software systems.
C1 Univ Lancaster, Dept Comp, Lancaster, England.
C3 Lancaster University
RP Zschaler, S (corresponding author), Univ Lancaster, Dept Comp, Lancaster, England.
EM szschaler@acm.org
RI Zschaler, Steffen/AAC-4911-2020
OI Zschaler, Steffen/0000-0001-9062-6637
FU German Research Council
FX This article is a summary of work done for my dissertation. I am
   grateful to Prof. Heinrich Huamann, who in his role as my supervisor
   spent many hours of discussion and gave many useful pointers and
   comments throughout the dissertation project. I wish to thank Simone
   Rottger, Katja Siegemund, and Florian Heidenreich for their helpful
   comments on an earlier version of the article. Last but not least I must
   thank the anonymous reviewers who did a really outstanding job investing
   lots of effort to push me into making this a readable article. Of
   course, any lengths and awkward formulations remain completely my own
   fault. This research has been partially funded by the German Research
   Council in the research project COMQUAD.
CR Aagedal J., 2001, THESIS U OSLO
   ABADI M, 1994, ACM T PROGR LANG SYS, V16, P1543, DOI 10.1145/186025.186058
   ABADI M, 1991, THEOR COMPUT SCI, V82, P253, DOI 10.1016/0304-3975(91)90224-P
   ABADI M, 1995, ACM T PROGR LANG SYS, V17, P507, DOI 10.1145/203095.201069
   AIGNER R, 2004, WORKSH MOD NONF ASP
   AMUNDSEN S, 2004, P NORW INF C NIK STA
   [Anonymous], MDA GUID VERS 1 0 1
   [Anonymous], 2001, Modal and Temporal properties of processes
   Balarin F, 2003, COMPUTER, V36, P45, DOI 10.1109/MC.2003.1193228
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bezivin J., 2003, WORKSH MET MDA YORK, P23
   Borger E., 2003, Formal Aspects of Computing, V15, P237, DOI 10.1007/s00165-003-0012-7
   BORGER E, 2003, ABST STATE MACHINES
   Broy M, 1998, SOFTWARE-CONC TOOL, V19, P49, DOI 10.1007/s003780050007
   Bruel Jean-Michel, 2003, P 1 INT WORKSH QUAL
   Cheesman J., 2001, UML Components A Simple Process for Specifying Component Based Software
   CHEN S, 2002, P 5 ICSE WORKSH COMP
   Chimaris A, 2004, LECT NOTES COMPUT SC, V3291, P1173
   CHUNG JY, 1990, IEEE T COMPUT, V39, P1156, DOI 10.1109/12.57057
   Chung L., 1999, NONFUNCTIONAL REQUIR
   CIUPKE O, 1996, WCOP 96 SPEC ISS OBJ, P139
   Clark T, 2002, LECT NOTES COMPUT SC, V2306, P159
   Cottenier T, 2007, LECT NOTES COMPUT SC, V4609, P476
   Crnkovic I, 2005, LECT NOTES COMPUT SC, V3549, P257
   Filman R., 2004, ASPECT ORIENTED SOFT
   Fishburn P, 1999, THEOR COMPUT SCI, V217, P359, DOI 10.1016/S0304-3975(98)00277-1
   FORD G, 1993, CMUSEI93EM9
   Franch X, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P174, DOI 10.1109/ICRE.1998.667823
   FROLUND S., 1998, HPL9810
   Goscinski Andrzej., 1991, DISTRIBUTED OPERATIN
   GRIFFEL F, 1998, COMPONENTWARE
   Härtig H, 2007, REAL-TIME SYST, V35, P1, DOI 10.1007/s11241-006-9002-1
   HAMANN CJ, 2006, P WORKSH ADV QUAL SE
   Hamann Claude-Joachim, 1997, P 5 INT WORKSH MOD A
   Heineman G., 2001, PUTTING PIECES TOGET, P5
   Hissam SA, 2002, LECT NOTES COMPUT SC, V2370, P108
   Hofmeister C, 1999, INT FED INFO PROC, V12, P145
   HU T, 2005, SEMANTIC FDN A UNPUB
   *ITU TX, 1998, ISOIEC132361998
   JACOBSON I, REUSE ARCHITECTURE P
   Jones C. B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P321
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lamport L., 2002, SPECIFYING SYSTEMS T
   LEE C, 1999, THESIS CARNEGIE MELL
   LEUE S, 1994, WORKSH MULT APPL QUA
   Liu J., 2000, Real-Time Systems
   LIU JWS, 1997, EPIQ QOS CHARACTERIZ
   LUND M, BRUEL, P99
   Malan R., 2001, Defining non functional requirements
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   NAUMOVICH G, 2000, P 8 ACM SIGSOFT INT, P159
   NOTHNAGEL J, 2002, THESIS TU DRESDEN
   *OBJ MAN GROUP, 1999, REAL TIM CORBA JOINT
   *OBJ MAN GROUP, 2006, REQF PROP MDA TOOL C
   *OBJ MAN GROUP, 2003, UML 2 0 OCL SPEC
   *OBJ MAN GROUP, 2002, UML PROF SCH PERF TI
   Rajkumar R., 1998, P IEEE REAL TIM SYST
   Reussner RH, 2003, LECT NOTES COMPUT SC, V2693, P287
   REUSSNER RH, 2001, PARAMETRISIERTE VERT
   ROTTGER S, 2002, COMP BAS SOFTW ENG M
   ROTTGER S, 2007, SOFTW SYST MODEL J, V6
   Rottger Simone, CQML ENHANCEMENTS CQ, P43
   SABATA B, 1997, P 3 INT WORKSH OBJ O
   SALZMANN C, 2003, P INT WORKSH TEST AN
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   SCHMIDT DC, 2000, OVERVIEW REAL TIME C, P56
   SELIC B, 2000, GENERIC FRAMEWORK MO, V33, P64
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   SMITH C, 2002, PRACTICAL GUIDE CREA
   Sommerville I., 1996, Software Engineering, V5th
   STAEHLI R, 2003, MIDDLEWARE 2003 COMP
   Szyperski C., 2002, Component Software-Beyond Object-Oriented Programming
   Tanenbaum A.S., 2002, Modern Operating Systems, V2nd
   VOLTER M, 2005, P DAGSTUHL WORKSH MO
   VOLTER M, 2003, P WORKSH REUS CONST
   WERNER M, 2002, FACHTAGUNG
   Zhang C., 2004, Proc. OOPSLA 2004, P188
   ZSCHALER S, 2007, THESIS TU DRESDEN GE
   ZSCHALER S, 2008, COMP0062008
   [No title captured]
NR 81
TC 14
Z9 14
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2010
VL 9
IS 2
BP 161
EP 201
DI 10.1007/s10270-009-0115-6
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 577YP
UT WOS:000276260200003
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Molina, JG
AF Sanchez Cuadrado, Jesus
   Garcia Molina, Jesus
TI Modularization of model transformations through a phasing mechanism
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 22nd ACM Symposium on Applied Computing
CY MAR 11-15, 2007
CL Seoul, SOUTH KOREA
SP ACM
DE Model transformation; Transformation languages; Phasing mechanism;
   Modularity; Internal transformation composition
AB In recent years a great effort has been devoted to understanding the nature of model transformations. As a result, several mechanisms to improve model transformation languages have been proposed. Phasing has been mentioned in some works as a rule scheduling or organization mechanism, but without any detail. In this paper, we present a phasing mechanism in the context of rule-based transformation languages. We explain the structure and the behavior of the mechanism, and how it can be integrated in a language. We also analyze how the mechanism promotes modularity, internal transformation composition and helps to solve usual transformation problems. Besides, we show several examples of application to illustrate the usefulness of the mechanism.
C1 [Sanchez Cuadrado, Jesus; Garcia Molina, Jesus] Univ Murcia, Murcia, Spain.
C3 University of Murcia
RP Cuadrado, JS (corresponding author), Univ Murcia, Murcia, Spain.
EM jesusc@um.es; jmolina@um.es
RI GARCIA-MOLINA, JESUS J/X-7078-2019; Sanchez Cuadrado, Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616
CR [Anonymous], P MOD TRANSF PRACT W
   [Anonymous], 1997, Object-oriented software construction
   BELAUNDE M, 2006, P 1 EUR WORKSH COMP, P45
   CLEENEWERCK T, 2007, SAC 07, P985
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Filman R., 2004, ASPECT ORIENTED SOFT
   GORAN JO, 2006, P 1 EUR WORKSH COMP, P27
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kurtev I., 2006, P 2006 ACM S APPL CO, P1202
   KURTEV I, 2005, THESIS U TWENTE
   Lawley M., 2004, OOPSLA WORKSH BEST P
   LAWLEY M, 2005, MOD TRANSF PRACT WOR
   Object Management Group, 2003, OMG20030601
   OMG, 2005, FIN AD SPEC MOF 2 0
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   SANCHEZ J, 2006, LECT NOTES COMPUTER, V4199, P336
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   VANWIJNGAARDEEN JV, 2003, PROGRAM TRANSFORMATI
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   WAGEELAR D, 2006, P 1 EUR WORKSH COMP, P21
   WARMER J, 2006, P 1 EUR WORKSH COMP, P47
   2005, COMPUWARE OPTIMAL J
NR 24
TC 23
Z9 25
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 325
EP 345
DI 10.1007/s10270-008-0093-0
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 466UE
UT WOS:000267687600003
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Dori, D
   Katz, S
AF Reinhartz-Berger, Iris
   Dori, Dov
   Katz, Shmuel
TI Reusing semi-specified behavior models in systems analysis and design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software reuse; Aspect-oriented software engineering; Aspect-oriented
   modeling; Object-Process Methodology; Modularity
ID UML; SOFTWARE; SUPERIMPOSITION; SPECIFICATION
AB As the structural and behavioral complexity of systems has increased, so has interest in reusing modules in early development phases. Developing reusable modules and then weaving them into specific systems has been addressed by many approaches, including plug-and-play software component technologies, aspect-oriented techniques, design patterns, superimposition, and product line techniques. Most of these ideas are expressed in an object-oriented framework, so they reuse behaviors after dividing them into methods that are owned by classes. In this paper, we present a crosscutting reuse approach that applies object-process methodology (OPM). OPM, which unifies system structure and behavior in a single view, supports the notion of a process class that does not belong to and is not encapsulated in an object class, but rather stands alone, capable of getting input objects and producing output objects. The approach features the ability to specify modules generically and concretize them in the target application. This is done in a three-step process: designing generic and target modules, weaving them into the system under development, and refining the combined specification in a way that enables the individual modules to be modified after their reuse. Rules for specifying and combining modules are defined and exemplified, showing the flexibility and benefits of this approach.
C1 [Reinhartz-Berger, Iris] Univ Haifa, IL-31905 Haifa, Israel.
   [Dori, Dov; Katz, Shmuel] Technion Israel Inst Technol, IL-32000 Haifa, Israel.
C3 University of Haifa; Technion Israel Institute of Technology
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, IL-31905 Haifa, Israel.
EM iris@mis.haifa.ac.il; dori@ie.technion.ac.il; katz@cs.technion.ac.il
OI Dori, Dov/0000-0002-2393-3124
CR Aldawud Omar., 2001, P OOPSLA 2001 WORKSH
   BACK RJR, 1989, DISTRIB COMPUT, V3, P73, DOI 10.1007/BF01558665
   Baniassad E, 2004, PROC INT CONF SOFTW, P158, DOI 10.1109/ICSE.2004.1317438
   BARBER KS, 1999, P 1 INT C ENT INF SY
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bosch J, 1999, INFORM SOFTWARE TECH, V41, P257, DOI 10.1016/S0950-5849(99)00007-5
   Bouge L, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P240, DOI 10.1109/PACT.1998.727257
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   CLARKE S, 2005, ADDISONWESLEY OBJECT
   CONSTANTINIDES CA, 1999, P EUR C OBJ OR PROGR, P340
   Dori D, 2002, COMMUN ACM, V45, P82, DOI 10.1145/581571.581599
   DORI D, 2003, 5 INT C ENT INF SYST
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   DSOUZA D, 1998, OBJECTS FRAMEWORKS C
   *EARL ASP, ASP OR REQ ENG ARCH
   ECKSTEIN S, 2001, LNCS, V2068, P251
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   GAMMA E, 1995, DESIGN PATTERNS
   GOMMA H, 2004, DESIGNING SOFTWARE P
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   *IBM CORP, SOA WEB SERV
   KANDE MM, 2003, COMPUTER SCI
   KATARA M, 2006, CONCERN ARCHITECTURE, DOI DOI 10.1007/S10270-006-0032-X
   KATZ S, 1993, ACM T PROGR LANG SYS, V15, P337, DOI 10.1145/169701.169682
   KEEDY L, TIMOR PROGRAMMING LA
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KULESZA U, 2004, EARL ASP WORKSH OOPS
   LESTER NG, 1998, LNCS, V1618, P393
   LOWY J, 2003, MSDN MAGAZINE MICROS
   MAHAPATRA S, 2000, PROGRAMMING RESTRICT
   MAPELSDEN D, 2002, 40 INT C TECHN OBJ O
   MENS T, 1998, P PSMT 98 WORKSH PRE
   Mezini M., 1998, Conference Proceedings OOPSLA'98. Conference on Object-Oriented Programming, Systems, Languages and Applications, P97
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   *OBJ MAN GROUP, 2005, OBJ CONSTR LANG VERS
   *OBJ MAN GROUP, 2005, UN MOD LANG UML VERS
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Peleg M, 1999, J OBJECT-ORIENT PROG, V11, P53
   Reinhartz-Berger I, 2005, LECT NOTES COMPUT SC, V3716, P1
   Reinhartz-Berger I, 2005, EMPIR SOFTW ENG, V10, P57, DOI 10.1023/B:EMSE.0000048323.40484.e0
   REINHARTZBERGER I, 2002, SPECIAL ISSUE OBJECT, P141
   REINHARTZBERGER I, P CAISE 04 WORKSH, V1, P275
   REINHARTZBERGER I, 2005, SYSTEM MODELING BUIL, pCH6
   Schauerhuber Andrea., 2006, A Survey on Aspect-Oriented Modeling Approaches
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   SKIPPER JF, 2002, ASSESSING SUITABILIT
   Soffer P., 2001, Requirements Engineering, V6, P183, DOI 10.1007/PL00010359
   Stein D., 2002, AOSD '02: Proceedings of the 1st international conference on Aspect-oriented software development, P106
   SUNYE G, 1850, LNCS, V1850, P44
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   2001, COMMUNICATION ACM, V44
NR 54
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 221
EP 234
DI 10.1007/s10270-007-0079-3
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300005
DA 2024-07-18
ER

PT J
AU Planas, E
   Martinez, S
   Brambilla, M
   Cabot, J
AF Planas, Elena
   Martinez, Salvador
   Brambilla, Marco
   Cabot, Jordi
TI Modeling and enforcing access control policies in conversational user
   interfaces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Conversational user interfaces; CUIs;
   Access-control; RBAC
ID SECURITY
AB Conversational user interfaces (CUIs), such as chatbots, are becoming a common component of many software systems. Although they are evolving in many directions (such as advanced language processing features, thanks to new AI-based developments), less attention has been paid to access control and other security concerns associated with CUIs, which may pose a clear risk to the systems they interface with. In this paper, we apply model-driven techniques to model and enforce access-control policies in CUIs. In particular, we present a fully fledged framework to integrate the role-based access-control (RBAC) protocol into CUIs by: (1) modeling a set of access-control rules to specify permissions over the bot resources using a domain-specific language that tailors core RBAC concepts to the CUI domain; and (2) describing a mechanism to show the feasibility of automatically generating the infrastructure to evaluate and enforce the modeled access control policies at runtime.
C1 [Planas, Elena] Univ Oberta Catalunya, Barcelona 08018, Spain.
   [Martinez, Salvador] IMT Atlantique, Brest, France.
   [Brambilla, Marco] DiAP Politecn Milano, I-20133 Milan, Italy.
   [Cabot, Jordi] Luxembourg Inst Sci & Technol, Esch Sur Alzette 4362, Luxembourg.
C3 UOC Universitat Oberta de Catalunya; IMT - Institut Mines-Telecom; IMT
   Atlantique; Polytechnic University of Milan; Luxembourg Institute of
   Science & Technology
RP Planas, E (corresponding author), Univ Oberta Catalunya, Barcelona 08018, Spain.
EM eplanash@uoc.edu; salvador.martinez@imt-atlantique.fr;
   marco.brambilla@polimi.it; jordi.cabot@list.lu
RI Martínez, Salvador/F-2081-2016; Brambilla, Marco/M-4748-2015; Cabot,
   Jordi/P-7723-2015
OI Martínez, Salvador/0000-0002-3978-9876; Brambilla,
   Marco/0000-0002-8753-2434; Cabot, Jordi/0000-0003-2418-2489; Planas,
   Elena/0000-0002-6755-8792
FU Universitat Oberta de Catalunya
FX No Statement Available
CR Amato F., 2017, WORKSH ART INT APPL, V1982
   [Anonymous], 2005, IEEE INT C WEB SERV
   [Anonymous], 1996, ISO101813X812
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D., 2011, P 16 ACM S ACCESS CO, P1, DOI DOI 10.1145/1998441.1998443
   BenFadhel A., 2016, P 21 ACM S ACC CONTR, P179, DOI DOI 10.1145/2914642.2914656
   Bozic J., 2018, TESTING SOFTWARE SYS
   Bozzon A., 2007, P 1 INT WORKSH COLL
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Brambilla M, 2006, ACM T SOFTW ENG METH, V15, P360, DOI 10.1145/1178625.1178627
   Busch M, 2011, LECT NOTES BUS INF P, V90, P239
   Cabot J., 2021, 3 IEEE ACM INT WORKS
   Cabot J., 2021, SOFT SYST MODEL, V20, P66
   Damiani E., 2002, ACM Transactions on Information and Systems Security, V5, P169, DOI 10.1145/505586.505590
   Daniel G, 2020, IEEE ACCESS, V8, P15332, DOI 10.1109/ACCESS.2020.2966919
   Fiore D, 2019, MUM 2019: 18TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA, DOI 10.1145/3365610.3365617
   Gondaliya K, 2020, 2020 IEEE 6TH INT CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / 6TH IEEE INT CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING, (HPSC) / 5TH IEEE INT CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P235, DOI 10.1109/BigDataSecurity-HPSC-IDS49724.2020.00050
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Gonzalez Magali, 2016, International Journal of Web Engineering and Technology, V11, P29
   Groenewegen Danny, 2008, 2008 8th International Conference on Web Engineering (ICWE), P175, DOI 10.1109/ICWE.2008.15
   Hasal M, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.6426
   Hu VC., 2013, NIST SPEC PUBL, V800, P66
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jürjens J, 2008, LECT NOTES COMPUT SC, V5289, P36
   Kashmar N, 2021, PROCEDIA COMPUT SCI, V184, P445, DOI 10.1016/j.procs.2021.03.056
   Kim DK, 2004, LECT NOTES COMPUT SC, V2984, P180
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Klopfenstein LC, 2017, DIS'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON DESIGNING INTERACTIVE SYSTEMS, P555, DOI 10.1145/3064663.3064672
   Kotenko I., 2011, Proceedings of the 2011 IEEE 6th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS 2011), P706, DOI 10.1109/IDAACS.2011.6072862
   Lai S.T., 2019, ADV BROADBAND WIRELE
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Oberortner E., 2008, CEUR WORKSHOP PROC, V389
   Oguntosin V, 2021, APPL COMPUT INTELL S, V2021, DOI 10.1155/2021/6630326
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Ouaddah A, 2017, COMPUT NETW, V112, P237, DOI 10.1016/j.comnet.2016.11.007
   Perera Vihanga Heshan, 2019, 2019 International Conference on Advancements in Computing (ICAC), P340, DOI 10.1109/ICAC49085.2019.9103388
   Perez-Soler S., 2020, CONCEPTUAL MODELING
   Pistoia M, 2007, PROC INT CONF SOFTW, P478
   Planas E, 2022, LECT NOTES BUS INF P, V450, P310, DOI 10.1007/978-3-031-07475-2_21
   Roca S, 2020, J BIOMED INFORM, V102, DOI 10.1016/j.jbi.2019.103305
   Saglam R.B., 2020, P 2 C CONV US INT CU
   Salnitri M., 2014, Enterprise, Business-Process and Information and Information Systems Modeling, V175, P200, DOI [DOI 10.1007/978-3-662-43745-2_14, 10.1007/978-3-662]
   Sandhu R., 2000, RBAC 00
   SANDHU RS, 1994, IEEE COMMUN MAG, V32, P40, DOI 10.1109/35.312842
   Song Eunjee., 2005, SACMAT 05, P120
   STD D., 1985, TRUSTED COMPUTER SYS
   Ye WS, 2020, 2020 IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC 2020), P388, DOI 10.1109/SEC50012.2020.00057
NR 48
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1925
EP 1944
DI 10.1007/s10270-023-01131-3
EA NOV 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001123660200001
OA hybrid
DA 2024-07-18
ER

PT J
AU John, S
   Kosiol, J
   Lambers, L
   Taentzer, G
AF John, Stefan
   Kosiol, Jens
   Lambers, Leen
   Taentzer, Gabriele
TI A graph-based framework for model-driven optimization facilitating
   impact analysis of mutation operator properties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Search-Based Software Engineering; Model-Driven Engineering;
   Evolutionary Computation
ID LEVEL-BASED ANALYSIS; TRANSFORMATION SYSTEMS; ALGORITHMS
AB Optimization problems in software engineering typically deal with structures as they occur in the design and maintenance of software systems. In model-driven optimization (MDO), domain-specific models are used to represent these structures while evolutionary algorithms are often used to solve optimization problems. However, designing appropriate models and evolutionary algorithms to represent and evolve structures is not always straightforward. Domain experts often need deep knowledge of how to configure an evolutionary algorithm. This makes the use of model-driven meta-heuristic search difficult and expensive. We present a graph-based framework for MDO that identifies and clarifies core concepts and relies on mutation operators to specify evolutionary change. This framework is intended to help domain experts develop and study evolutionary algorithms based on domain-specific models and operators. In addition, it can help in clarifying the critical factors for conducting reproducible experiments in MDO. Based on the framework, we are able to take a first step toward identifying and studying important properties of evolutionary operators in the context of MDO. As a showcase, we investigate the impact of soundness and completeness at the level of mutation operator sets on the effectiveness and efficiency of evolutionary algorithms.
C1 [John, Stefan; Kosiol, Jens; Taentzer, Gabriele] Philipps Univ Marburg, Marburg, Germany.
   [Lambers, Leen] Brandenburg Tech Univ Cottbus Senftenberg, Cottbus, Germany.
C3 Philipps University Marburg; Brandenburg University of Technology
   Cottbus
RP Taentzer, G (corresponding author), Philipps Univ Marburg, Marburg, Germany.
EM johns@mathematik.uni-marburg.de; kosiolje@mathematik.uni-marburg.de;
   leen.lambers@b-tu.de; taentzer@mathematik.uni-marburg.de
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Adamek J., 1990, Abstract and Concrete Categories
   [Anonymous], Eclipse Modeling Framework (EMF)
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Atkinson T, 2020, GENET PROGRAM EVOL M, V21, P321, DOI 10.1007/s10710-020-09378-1
   Atkinson T, 2021, NAT COMPUT, V20, P127, DOI 10.1007/s11047-019-09772-4
   Atkinson T, 2018, LECT NOTES COMPUT SC, V10781, P35, DOI 10.1007/978-3-319-77553-1_3
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Becker Basil, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P123, DOI 10.1007/978-3-642-21732-6_9
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Bill Robert, 2019, Software & Systems Modeling, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Burdusel A., 2016, TTC STAF, P33
   Burdusel A, 2021, SOFTW SYST MODEL, V20, P1857, DOI 10.1007/s10270-021-00914-w
   Burdusel A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P12, DOI 10.1145/3270112.3270130
   Burton Frank R., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P428, DOI 10.1007/978-3-642-31491-9_32
   Burton FR, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P45, DOI 10.1109/CMSBSE.2013.6604436
   Case B, 2020, IEEE T EVOLUT COMPUT, V24, P650, DOI 10.1109/TEVC.2020.2985450
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Corne DW., 2002, P GEN EV COMP C GECC, P283, DOI [DOI 10.5555/2955239.2955289, 10.5555/2955239.2955289]
   Corus D, 2018, IEEE T EVOLUT COMPUT, V22, P707, DOI 10.1109/TEVC.2017.2753538
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dang DC, 2019, ALGORITHMICA, V81, P668, DOI 10.1007/s00453-018-0507-5
   Ehrig H, 2015, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-662-47980-3
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000357
   Ehrig H, 2012, FUND INFORM, V118, P35, DOI 10.3233/FI-2012-705
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   Fleck M., 2015, P 1 N AM SEARCH BAS, P1
   Fleck Martin, 2016, P TTC 2016 CEUR WORK, V1758, P1
   github, EVALUATION DATA RESU
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hermann F, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000370
   Horcas JM, 2023, IEEE T SOFTWARE ENG, V49, P1102, DOI 10.1109/TSE.2022.3171404
   John S, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P388, DOI 10.1145/3550356.3561603
   John S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a6
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kosiol J, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102729
   Lano K, 2013, ELECTRON PROC THEOR, P8, DOI 10.4204/EPTCS.135.2
   Löwe M, 2015, SCI COMPUT PROGRAM, V107, P2, DOI 10.1016/j.scico.2015.02.004
   Mac Lane, 1971, CATEGORIES WORKING M
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   MDEOptimiser, US
   Moea framework, US
   Nassar N, 2020, J LOG ALGEBR METHODS, V114, DOI 10.1016/j.jlamp.2020.100564
   Nassar N, 2018, LECT NOTES COMPUT SC, V10887, P171, DOI 10.1007/978-3-319-92991-0_11
   Paixao T, 2015, J THEOR BIOL, V383, P28, DOI 10.1016/j.jtbi.2015.07.011
   Pennemann K.-H., 2009, Ph.D. thesis
   Radke H, 2018, SCI COMPUT PROGRAM, V152, P38, DOI 10.1016/j.scico.2017.08.006
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P226
   Rubin K.S., 2012, ESSENTIAL SCRUM
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Strüber D, 2017, LECT NOTES COMPUT SC, V10374, P121, DOI 10.1007/978-3-319-61473-1_9
   Taentzer G, 2022, LECT NOTES COMPUT SC, P97, DOI 10.1007/978-3-031-09843-7_6
   Thölke H, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P588, DOI 10.1145/3550356.3561587
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E., 2001, TIK-Report, V103, P1
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
   Zschaler S, 2016, LECT NOTES COMPUT SC, V9946, P317, DOI 10.1007/978-3-319-50230-4_24
NR 66
TC 3
Z9 3
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1281
EP 1318
DI 10.1007/s10270-022-01078-x
EA JAN 2023
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000914718200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Verbruggen, C
   Snoeck, M
AF Verbruggen, Charlotte
   Snoeck, Monique
TI Practitioners' experiences with model-driven engineering: a meta-review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model-driven engineering; Modeling in practice; Systematic literature
   review; Meta-review; UML; BPMN; Conceptual modeling
ID VISUAL NOTATIONS; UML; REQUIREMENTS; DIMENSIONS; SIMULATION; DOMAIN
AB The Object Management Group introduced the Model-Driven Architecture in 2001. Since then, the research community has embraced model-driven engineering (MDE), but to a lesser extent than practitioners had hoped. A good awareness of practitioners' challenges, particularly with modeling, is required to ensure the relevance of a research agenda. Therefore, this study conducts a meta-review on the state of practice in using modeling languages for software engineering over the last five years using Kitchenham's guidelines. This study serves as an orientation within the research field and a basis for further research. It contributes to the literature by focusing on publications discussing the practical use of modeling languages and the benefits and problems perceived by practitioners. The main finding of this review is that practitioners benefit from MDE in the following ways: it is beneficial for several stakeholders; it saves cost; it is easy to use; it improves productivity, quality, and understanding of the system; and it provides support for software development activities. However, practitioners continue to face several serious challenges. The most frequently reported issues are the missing tool functionalities. Many studies have found that adhering to the Physics of Notation principles would improve modeling languages. Other findings include that modeling is mostly used for documentation and requirements elicitation, and UML is the most often used.
C1 [Verbruggen, Charlotte; Snoeck, Monique] Katholieke Univ Leuven, Res Ctr Informat Syst Engn, Naamsestr 69, B-3000 Leuven, Belgium.
C3 KU Leuven
RP Verbruggen, C (corresponding author), Katholieke Univ Leuven, Res Ctr Informat Syst Engn, Naamsestr 69, B-3000 Leuven, Belgium.
EM charlotte.verbruggen@kuleuven.be; monique.snoeck@kuleuven.be
RI Snoeck, Monique/H-7771-2018; Verbruggen, Charlotte/IRZ-3665-2023
OI Snoeck, Monique/0000-0002-3824-3214; Verbruggen,
   Charlotte/0000-0003-0418-2633
CR Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Albaghajati A, 2022, REQUIR ENG, V27, P83, DOI 10.1007/s00766-021-00362-4
   [Anonymous], 2004, The rational unified process: an introduction
   Awadid A, 2019, SOFTW SYST MODEL, V18, P1905, DOI 10.1007/s10270-018-0689-y
   Badreddin O, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.2.a1
   Badreddin O, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P245, DOI 10.1145/3239372.3239389
   Baltes S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P530, DOI 10.1145/2635868.2635891
   Bogdanova D, 2019, INFORM SOFTWARE TECH, V110, P92, DOI 10.1016/j.infsof.2019.02.006
   Bogdanova D, 2018, LECT NOTES BUS INF P, V335, P321, DOI 10.1007/978-3-030-02302-7_20
   Bork D, 2021, SOFTW SYST MODEL, V20, P939, DOI 10.1007/s10270-021-00895-w
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Dermeval D, 2016, REQUIR ENG, V21, P405, DOI 10.1007/s00766-015-0222-6
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Farias K., 2018, P INT C SOFTWARE ENG, P372, DOI [10.18293/SEKE2018-183, DOI 10.18293/SEKE2018-183]
   Fernández-Sáez AM, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P292, DOI 10.1109/MODELS.2015.7338260
   Fettke P, 2009, COMMUN ASSOC INF SYS, V25, P571
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Giraldo FD, 2015, INT CONF RES CHAL, P64, DOI 10.1109/RCIS.2015.7128864
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Group S, CHAOS REPORTS
   Härer F, 2020, LECT NOTES COMPUT SC, V12400, P34, DOI 10.1007/978-3-030-62522-1_3
   Huldt T, 2019, SYSTEMS ENG, V22, P134, DOI 10.1002/sys.21466
   Jackson, 2021, ESSENCE SOFTWARE WHY, DOI [10.2307/j.ctv1nj340p, DOI 10.2307/J.CTV1NJ340P]
   Kitchenham B., 2007, 2007001 EBSE
   Kocbek M, 2015, COMPUT SCI INF SYST, V12, P509, DOI 10.2298/CSIS140610006K
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   Liaskos S, 2021, LECT NOTES COMPUT SC, V13011, P330, DOI 10.1007/978-3-030-89022-3_26
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Monsalve, 2015, BUSINESS PROCESS MOD
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Naranjo D, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Ozkaya M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106275
   Ozkaya M, 2019, IET SOFTW, V13, P338, DOI 10.1049/iet-sen.2018.5409
   Ozkaya M, 2018, SOFTWARE PRACT EXPER, V48, P985, DOI 10.1002/spe.2561
   Ozkaya M, 2018, INFORM SOFTWARE TECH, V95, P15, DOI 10.1016/j.infsof.2017.10.008
   Ozkaya M, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P677
   Petre M, 2014, SOFTW SYST MODEL, V13, P1225, DOI 10.1007/s10270-014-0430-4
   POHL K, 1994, INFORM SYST, V19, P243, DOI 10.1016/0306-4379(94)90044-2
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P41, DOI 10.1007/978-3-642-12578-2_4
   Pourali P, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P183, DOI 10.1109/MODELS.2019.000-3
   Pourali P, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P224, DOI 10.1145/3239372.3239400
   Pourali P, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P779, DOI 10.1109/MODELS-C.2019.00122
   Routis I, 2021, SOFTW SYST MODEL, V20, P2089, DOI 10.1007/s10270-021-00880-3
   Rozanski N., SOFTWARE SYSTEMS ARC
   Ruiz J, 2020, IEEE T LEARN TECHNOL, V13, P833, DOI 10.1109/TLT.2020.3028596
   Saleh F, 2015, INFORM SOFTWARE TECH, V66, P73, DOI 10.1016/j.infsof.2015.05.002
   Sedrakyan G, 2014, COMPUT EDUC, V78, P367, DOI 10.1016/j.compedu.2014.06.014
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Selic B, 2011, LECT NOTES COMPUT SC, V6491, P290, DOI 10.1007/978-3-642-18023-1_7
   Soley R., 2000, OMG White Paper, V308, P5
   Storrle Harald., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P160, DOI DOI 10.1145/3084226.3084256
   Ho-Quang T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P203, DOI 10.1109/ICSE-SEIP.2017.28
   van der Linden D, 2019, SOFTW SYST MODEL, V18, P1813, DOI 10.1007/s10270-018-0667-4
   Verbruggen Charlotte, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P335, DOI 10.1007/978-3-030-79186-5_22
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
   Zheng YJ, 2013, SOFTW SYST MODEL, V12, P669, DOI 10.1007/s10270-013-0355-3
NR 59
TC 8
Z9 8
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 111
EP 129
DI 10.1007/s10270-022-01020-1
EA JUL 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000832550000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Guizzardi, G
   Sales, TP
   Almeida, JPA
   Poels, G
AF Guizzardi, Giancarlo
   Sales, Tiago Prince
   Almeida, Joao Paulo A.
   Poels, Geert
TI Automated conceptual model clustering: a relator-centric approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Ontology-driven conceptual modeling; Complexity management in conceptual
   modeling; Conceptual model clustering; OntoUML
ID ENTITY-RELATIONSHIP; ONTOLOGY; DRIVEN; EVENTS; PATTERNS
AB In recent years, there has been a growing interest in the use of reference conceptual models to capture information about complex and sensitive business domains (e.g., finance, healthcare, space). These models play a fundamental role in different types of critical semantic interoperability tasks. Therefore, domain experts must be able to understand and reason with their content. In other words, these models need to be cognitively tractable. This paper contributes to this goal by proposing a model clustering technique that leverages on the rich semantics of ontology-driven conceptual models (ODCM). In particular, we propose a formal notion of Relational Context to guide the automated clusterization (or modular breakdown) of conceptual models. Such Relational Contexts capture all the information needed for understanding entities "qua players of roles" in the scope of an objectified (reified) relationship (relator). The paper also presents computational support for automating the identification of Relational Contexts and this modular breakdown procedure. Finally, we report the results of an empirical study assessing the cognitive effectiveness of this approach.
C1 [Guizzardi, Giancarlo; Sales, Tiago Prince] Free Univ Bozen Bolzano, Conceptual & Cognit Modeling Res Grp CORE, Bolzano, Italy.
   [Guizzardi, Giancarlo] Univ Twente, Serv & Cybersecur Grp, Enschede, Netherlands.
   [Almeida, Joao Paulo A.] Univ Fed Espirito Santo, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, Brazil.
   [Poels, Geert] Univ Ghent, UGent Business Informat Res Grp, Ghent, Belgium.
C3 Free University of Bozen-Bolzano; University of Twente; Universidade
   Federal do Espirito Santo; Ghent University
RP Guizzardi, G (corresponding author), Free Univ Bozen Bolzano, Conceptual & Cognit Modeling Res Grp CORE, Bolzano, Italy.; Guizzardi, G (corresponding author), Univ Twente, Serv & Cybersecur Grp, Enschede, Netherlands.
EM giancarlo.guizzardi@unibz.it; tiago.princesales@unibz.it;
   jpalmeida@ieee.org; geert.poels@ugent.be
RI Poels, Geert/D-1130-2013; Prince Sales, Tiago/B-5795-2018
OI Poels, Geert/0000-0001-9247-6150; Prince Sales,
   Tiago/0000-0002-5385-5761
FU NeXON (UNIBZ) project; OntoScape (UNIBZ) project; CAPES
   [23038.028816/201641]; CNPq [312123/2017-5, 407235/2017-5]
FX We are grateful to Ricardo A. Falbo (in memoriam) for the spark that led
   to this investigation, and to Claudenir M. Fonseca for his contribution
   in incorporating our clustering algorithm in the OntoUML Plugin for
   Visual Paradigm. G. Guizzardi and T.P. Sales are funded by the NeXON
   (UNIBZ) and OntoScape (UNIBZ) projects. J.P. Almeida is funded by CAPES
   (Grant Number 23038.028816/201641) and CNPq (Grants Numbers
   312123/2017-5 and 407235/2017-5).
CR Abdulrab, 2015, AI APPROACHES COMPLE, P394
   Akoka J, 1996, DATA KNOWL ENG, V20, P87, DOI 10.1016/S0169-023X(96)00007-9
   Algergawy A, 2020, J DATA SEMANT, V9, P53, DOI 10.1007/s13740-020-00114-7
   Allen GN, 2006, MIS QUART, V30, P269
   Almeida J, gUFO: a lightweight implementation of the Unified Foundational Ontology (UFO)
   Almeida JPA, 2019, LECT NOTES COMPUT SC, V11788, P469, DOI 10.1007/978-3-030-33223-5_39
   Amato F, 2015, IEEE INT C SEMANT CO, P320, DOI 10.1109/ICOSC.2015.7050827
   Andaloussi AA, 2020, L N INF SYST ORGAN, V43, P133, DOI 10.1007/978-3-030-60073-0_15
   [Anonymous], 2005, Ontological foundations for structural conceptual models
   Ashburner M, 2000, NAT GENET, V25, P25, DOI 10.1038/75556
   Baldoni M, 2007, J OBJECT TECHNOL, V6, P5, DOI 10.5381/jot.2007.6.2.a1
   Bennett M, 2013, J BANK REGUL, V14, P255, DOI 10.1057/jbr.2013.13
   BIDDLE BJ, 1986, ANNU REV SOCIOL, V12, P67, DOI 10.1146/annurev.so.12.080186.000435
   Bork Dominik, 2020, CEUR Workshop Proceedings, V2716, P45
   Castano S, 1998, ACM T DATABASE SYST, V23, P286, DOI 10.1145/293910.293150
   Chen JY, 2019, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE (K-CAP '19), P45, DOI 10.1145/3360901.3364424
   Detoni AA, 2017, IEEE INT ENTERP, P117, DOI 10.1109/EDOCW.2017.29
   FELDMAN P, 1986, COMPUT J, V29, P348, DOI 10.1093/comjnl/29.4.348
   Figueiredo G, 2018, INT CONF RES CHAL
   Fillmore CJ, 2006, COGN LINGUIST RES, V34, P373, DOI 10.1515/9783110199901.373
   Francalanci C, 1994, LECT NOTES COMPUT SC, V881, P456
   Gailly F., 2016, P 35 ER
   Garcia L., 2012, PROC JOINT SEMINAR O, P72
   Gonçalves B, 2011, J BIOMED INFORM, V44, P126, DOI 10.1016/j.jbi.2010.08.007
   Guarino N, 2016, LECT NOTES COMPUT SC, V10037, P237, DOI 10.1007/978-3-319-49130-1_18
   Guarino N, 2015, LECT NOTES COMPUT SC, V9097, P279, DOI 10.1007/978-3-319-19069-3_18
   Guidoni GL, 2020, LECT NOTES COMPUT SC, V12400, P315, DOI 10.1007/978-3-030-62522-1_23
   Guizzardi Giancarlo, 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P211, DOI 10.1007/978-3-030-63479-7_15
   Guizzardi G., 2019, 11 INT INT C MOD US
   Guizzardi G, 2019, INT CONF RES CHAL, P201, DOI 10.1109/rcis.2019.8876971
   Guizzardi G, 2021, DATA KNOWL ENG, V134, DOI 10.1016/j.datak.2021.101891
   Guizzardi G, 2016, LECT NOTES COMPUT SC, V9850, P20, DOI 10.1007/978-3-319-45348-4_2
   Guizzardi G, 2015, APPL ONTOL, V10, P259, DOI 10.3233/AO-150157
   Guizzardi G, 2008, LECT NOTES COMPUT SC, V5231, P83, DOI 10.1007/978-3-540-87877-3_8
   Hitzler P, 2018, LECT NOTES ARTIF INT, V10872, P3, DOI 10.1007/978-3-319-91379-7_1
   LANKHORST M, 2009, ENTERP ENG SER, P1
   Lozano J., 2015, JOINT ONT WORKSH 201, V1517
   Lozano J, 2014, PROC INT C TOOLS ART, P122, DOI 10.1109/ICTAI.2014.28
   Moody D.L., 2000, INT C SYST THINK MAN, V72
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody DL, 1999, LECT NOTES COMPUT SC, V1728, P114
   Olivé A, 2006, DATA KNOWL ENG, V58, P243, DOI 10.1016/j.datak.2005.07.002
   Özacar T, 2011, DATA KNOWL ENG, V70, P504, DOI 10.1016/j.datak.2011.02.005
   Pezoa F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P263, DOI 10.1145/2872427.2883029
   Ruy FB, 2017, DATA KNOWL ENG, V109, P41, DOI 10.1016/j.datak.2017.03.004
   Sales TP, 2015, DATA KNOWL ENG, V99, P72, DOI 10.1016/j.datak.2015.06.004
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Teixeira M., 2016, ONTOLOGY BASED PROCE
   Tzitzikas Y, 2005, LECT NOTES COMPUT SC, V3716, P144
   Tzitzikas Y, 2007, J UNIVERS COMPUT SCI, V13, P1854
   Verdonck M, 2019, INFORM SYST, V81, P92, DOI 10.1016/j.is.2018.11.009
   VillegasNino A., 2013, FILTERING ENGINE LAR
   W3C, 2012, W3C RECOMMENDATION
   Wieringa R., 1995, Theory and Practice of Object Systems, V1, P61
   Winter M, 2022, IEEE T COGN DEV SYST, V14, P164, DOI 10.1109/TCDS.2020.3032730
   Xiao GH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5511
   Zambon E, 2017, FED CONF COMPUT SCI, P1, DOI 10.15439/2017F001
NR 57
TC 8
Z9 8
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1363
EP 1387
DI 10.1007/s10270-021-00919-5
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000696124400001
PM 34539311
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Kuhar, S
   Polancic, G
AF Kuhar, Sasa
   Polancic, Gregor
TI Conceptualization, measurement, and application of semantic transparency
   in visual notations A systematic literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Semantic transparency; Visual notations; Cognitive effectiveness;
   Systematic literature review
ID COGNITIVE EFFECTIVENESS; ICON CHARACTERISTICS; MODEL; DESIGN;
   REQUIREMENTS; PHYSICS; LANGUAGES; QUALITY; SPECIFICATION; DIAGRAMS
AB Numerous visual notations are present in technical and business domains. Notations have to be cognitively effective to ease the planning, documentation, and communication of the domains' concepts. Semantic transparency (ST) is one of the elementary principles that influence notations' cognitive effectiveness. However, the principle is criticized for not being well defined and challenges arise in the evaluations and applications of ST. Accordingly, this research's objectives were to answer how the ST principle is defined, operationalized, and evaluated in present notations as well as applied in the design of new notations in ICT and related areas. To meet these objectives, a systematic literature review was conducted with 94 studies passing the selection process criteria. The results reject one of the three aspects, which define semantic transparency, namely "ST is achieved with the use of icons." Besides, taxonomies of related concepts and research methods, evaluation metrics, and other findings from this study can help to conduct verifiable ST-related experiments and applications, consequently improving the visual vocabularies of notations and effectiveness of the resulting diagrams.
C1 [Kuhar, Sasa; Polancic, Gregor] Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, Maribor 2000, Slovenia.
C3 University of Maribor
RP Kuhar, S (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, Maribor 2000, Slovenia.
EM sasa.kuhar@um.si; gregor.polancic@um.si
RI Grašič, Saša/JGL-7796-2023
OI Grašič, Saša/0000-0001-8051-851X; Polancic, Gregor/0000-0002-4746-1010
CR Abraham R., 2017, Architectural Coordination of Enterprise Transformation, P193
   Akiki PA, 2018, J SYST SOFTWARE, V135, P165, DOI 10.1016/j.jss.2017.10.017
   Algablan A.S., 2016, 2016 INT C ENG MIS I, P1, DOI [10.1109/ICEMIS.2016.7745358, DOI 10.1109/ICEMIS.2016.7745358]
   Almorsy M, 2013, IEEE AUS SOFT ENGR, P152, DOI 10.1109/ASWEC.2014.18
   Amrit C., 2014, P 6 INT WORKSH MOD S, P49, DOI [10.1145/2593770.2593779, DOI 10.1145/2593770.2593779]
   [Anonymous], 2013, SIGDOC 2013 P 31 ACM, DOI DOI 10.1145/2507065.2507104
   [Anonymous], 2014, BUS PROC MAN WORKSH, DOI DOI 10.1007/978-3-319-06257-0_44
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   [Anonymous], 2013, P 2 WORKSH GRAPH MOD
   [Anonymous], 2015, P 17 INT C INFORM IN
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Basak Aydemir Fatma, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549302
   Bayrak Gulden., 2017, Journal of Software Engineering and Applications, V10, P457, DOI [10.4236/jsea.2017.105026, DOI 10.4236/JSEA.2017.105026]
   Bednarz T., 2018, P 11 INT S VIS INF C, P9, DOI DOI 10.1145/3231622.3231626
   Bhattacherjee A., 2012, Social science research: Principles, methods, and practices, V2nd
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Bocanegra Jose, 2015, 2015 10th Computing Colombian Conference (10CCC). Proceedings, P47, DOI 10.1109/ColumbianCC.2015.7333411
   Boone S, 2014, LECT NOTES BUS INF P, V197, P87
   Bork D, 2019, LECT NOTES COMPUT SC, V11788, P311, DOI 10.1007/978-3-030-33223-5_26
   Breitenbucher U., 2012, OTM Confederated International Conferences" On the Move to Meaningful Internet Systems", P416, DOI DOI 10.1007/978-3-642-33606-5_25
   Britton C, 2000, LECT NOTES ARTIF INT, V1889, P376
   Britton C, 1999, HUM-COMPUT INTERACT, V14, P191, DOI 10.1207/s15327051hci1401&2_6
   Burkhard, 2005, KNOWLEDGE VISUALIZAT, DOI [10.3929/ethz-a-005004486, DOI 10.3929/ETHZ-A-005004486]
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Cambridge University Press, CAMBRIDGE DICT ENGLI
   Canché M, 2019, J AMB INTEL HUM COMP, DOI 10.1007/s12652-019-01578-7
   Chandler D, 2007, SEMIOTICS: THE BASICS, SECOND EDITION, P1
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Cortes-Cornax M, 2016, SOFTW SYST MODEL, V15, P219, DOI 10.1007/s10270-014-0398-0
   Teixeira MDD, 2013, LECT NOTES COMPUT SC, V8185, P737, DOI 10.1007/978-3-642-41030-7_54
   Teixeira MDD, 2016, LECT NOTES BUS INF P, V248, P432, DOI 10.1007/978-3-319-39429-9_27
   De Faveri C, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P145, DOI [10.1109/REW.2016.037, 10.1109/REW.2016.37]
   de Miranda T.R. B., 2017, Software Language Engineering: Interaction and Usability Modeling of Languages Editors
   del-Río-Ortega A, 2019, BUS INFORM SYST ENG+, V61, P137, DOI 10.1007/s12599-017-0483-3
   Diamantopoulou V, 2018, INF COMPUT SECUR, V26, P382, DOI 10.1108/ICS-12-2017-0087
   Diprose JP, 2011, S VIS LANG HUM CEN C, P25, DOI 10.1109/VLHCC.2011.6070374
   Djurica D, 2020, L N INF SYST ORGAN, V32, P305, DOI 10.1007/978-3-030-28144-1_34
   Dobesova Z, 2013, INT MULTI SCI GEOCO, P595, DOI 10.5593/SGEM2013/BB2.V1/S08.039
   Dobesova Z, 2013, INT MULTI SCI GEOCO, P603
   Dreiling, 2011, COMMUN ASS INFORM SY, V28
   El Kouhen A, 2015, LECT NOTES COMPUT SC, V9369, P122, DOI 10.1007/978-3-319-24912-4_10
   El-Attar M, 2019, SOFTW SYST MODEL, V18, P3283, DOI 10.1007/s10270-019-00720-5
   El-Attar M, 2019, J SYST SOFTWARE, V156, P136, DOI 10.1016/j.jss.2019.06.096
   El-Attar M, 2015, IEEE T SOFTWARE ENG, V41, P661, DOI 10.1109/TSE.2015.2396526
   El-Ghafar RMA, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON INFORMATICS AND SYSTEMS (INFOS)
   Famelis M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MiSE.2013.6595289
   Fenk, 1998, PRAGMAT COGN, V6, P301, DOI [10.1075/pc.6.1-2.15fen, DOI 10.1075/PC.6.1-2.15FEN]
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   Figl K, 2013, J ASSOC INF SYST, V14, P312
   Figl K, 2013, DECIS SUPPORT SYST, V54, P1104, DOI 10.1016/j.dss.2012.10.037
   Figl K, 2011, LECT NOTES COMPUT SC, V6998, P78, DOI 10.1007/978-3-642-24606-7_7
   Figl K, 2010, J VISUAL LANG COMPUT, V21, P359, DOI 10.1016/j.jvlc.2010.08.009
   Figl K, 2010, LECT NOTES BUS INF P, V47, P230
   Genon Nicolas, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P140, DOI 10.1007/978-3-642-28714-5_12
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Giraldo FD, 2018, SOFTWARE QUAL J, V26, P685, DOI 10.1007/s11219-016-9350-6
   Gómez M, 2013, J SYST SOFTWARE, V86, P2394, DOI 10.1016/j.jss.2013.04.022
   Goncalves E, 2020, SOFTW SYST MODEL, V19, P763, DOI 10.1007/s10270-019-00770-9
   Goonetilleke RS, 2001, INT J HUM-COMPUT ST, V55, P741, DOI 10.1006/ijhc.2001.0501
   Gopalakrishnan S., 2011, ANAL EVALUATION NOTA
   Gopalakrishnan S, 2011, COMM COM INF SC, V251, P355
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Green Thomas., 1998, Cognitive dimensions of information artefacts: a tutorial
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gurr CA, 1999, J VISUAL LANG COMPUT, V10, P317, DOI 10.1006/jvlc.1999.0130
   Helming Jonas, 2010, 2010 Fifth International Workshop on Requirements Engineering Visualization (REV), P53, DOI 10.1109/REV.2010.5625659
   Henderson-Sellers, 1995, NOTATION MATTERS PAR
   Henderson-Sellers B, 2012, LECT NOTES BUS INF P, V113, P422
   Henriques H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P200, DOI 10.1145/3239372.3239387
   Heyvaert P, 2018, J WEB SEMANT, V49, P31, DOI 10.1016/j.websem.2017.12.003
   Hoos E, 2017, LECT NOTES BUS INF P, V288, P313, DOI 10.1007/978-3-319-59336-4_22
   HOWELL WC, 1968, ORGAN BEHAV HUM PERF, V3, P310, DOI 10.1016/0030-5073(68)90012-3
   Isherwood SJ, 2007, HUM FACTORS, V49, P465, DOI 10.1518/001872007X200102
   ISO Central Secretary, 2003, 70102003 ISO
   ISO Central Secretary, 2014, 918612014 ISO
   ISO Central Secretary, 2007, ISOISO70012007
   ISO Central Secretary, 2004, TR912642 ISOIEC
   Janiesch C, 2019, J DECIS SYST, V28, P185, DOI 10.1080/12460125.2019.1631682
   Janiesch C, 2019, INF SYST E-BUS MANAG, V17, P159, DOI 10.1007/s10257-018-0379-x
   Khalajzadeh H, 2019, IEEE INT CONGR BIG, P93, DOI 10.1109/BigDataCongress.2019.00025
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Knuplesch D, 2017, SOFTW SYST MODEL, V16, P715, DOI 10.1007/s10270-016-0526-0
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Kummer TF, 2016, DECIS SUPPORT SYST, V87, P1, DOI 10.1016/j.dss.2016.04.004
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Laurent P., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P35, DOI 10.1109/ICGSE.2010.55
   Leitner M, 2013, LECT NOTES BUS INF P, V165, P236
   Leutner D, 2009, COMPUT HUM BEHAV, V25, P284, DOI 10.1016/j.chb.2008.12.010
   Liu J, 2016, S VIS LANG HUM CEN C, P143, DOI 10.1109/VLHCC.2016.7739677
   Luong T.N., 2012, INT C INT US INT P I, P207
   Ma Q., 2015, ENTERPRISE BUSINESS, V214, P293
   Mäder P, 2010, LECT NOTES COMPUT SC, V6394, P226
   Maes A, 2007, DATA KNOWL ENG, V63, P701, DOI 10.1016/j.datak.2007.04.008
   Masri K, 2008, J DATABASE MANAGE, V19, P22, DOI 10.4018/jdm.2008070102
   Mayer N, 2017, IEEE INT ENTERP, P106, DOI 10.1109/EDOCW.2017.30
   McDougall S.J., 2001, International Journal of Cognitive Ergonomics, V5, P59, DOI [DOI 10.1207/S15327566IJCE0501_4, 10.1207/S15327566IJCE0501_4]
   McDougall SJP, 1999, BEHAV RES METH INS C, V31, P487, DOI 10.3758/BF03200730
   Mendling J., 2016, 2016 IEEE 20 INT ENT, P1
   Mendling J, 2010, INT J INF SYST MODEL, V1, P40, DOI 10.4018/jismd.2010040103
   Michael J., 2017, P AUSTR COMP SCI WEE, P1, DOI [10.1145/3014812.3014849http://dl.acm.org/citation.cfm?doid=3014812.3014849, DOI 10.1145/3014812.3014849]
   Miranda T, 2019, LECT NOTES ARTIF INT, V11375, P55, DOI 10.1007/978-3-030-25693-7_4
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Molina AI, 2014, SCI COMPUT PROGRAM, V88, P54, DOI 10.1016/j.scico.2014.02.019
   Monika M., 2013, ECIS 2013 COMPLETED, P1
   Moody D.L., 2011, WHY DIAGRAM IS ONLY, P1
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody DL, 1994, LECT NOTES COMPUT SC, V881, P94
   Nielsen J, 1990, Proceedings ACM CHI'90 Conf, DOI [DOI 10.1145/97243.97281, 10.1145/97243.97281]
   Norman D., 1988, PSYCHOL EVERYDAY THI
   Ober I, 2018, SOFTW SYST MODEL, V17, P319, DOI 10.1007/s10270-016-0518-0
   Odusote B, 2018, ACM INT CONF PR SER, P135, DOI 10.1145/3278681.3278698
   Paivio A., 1990, Mental representations: A dual coding approach, DOI [10.1093/acprof:oso/9780195066661.001.0001, DOI 10.1093/ACPROF:OSO/9780195066661.001.0001]
   Peirce C.S., 1998, CHARLES S PEIRCE ESS
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pittl B, 2020, SEMANT WEB, V11, P361, DOI 10.3233/SW-180340
   Polancic Gregor, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P209, DOI 10.1007/978-3-030-49418-6_14
   Polancic G, 2019, LECT NOTES BUS INF P, V361, P296, DOI 10.1007/978-3-030-30429-4_20
   Polancic G, 2019, COMPUT STAND INTER, V65, P45, DOI 10.1016/j.csi.2019.02.001
   Popescu G, 2014, CONF BUS INFORM, P166, DOI 10.1109/CBI.2014.21
   Razo-Zapata IS, 2018, CONF BUS INFORM, P20, DOI 10.1109/CBI.2018.00012
   Recker J, 2012, INFORM SYST, V37, P557, DOI 10.1016/j.is.2011.07.001
   Reinhartz-Berger I, 2017, INFORM SOFTWARE TECH, V87, P81, DOI 10.1016/j.infsof.2017.01.012
   Renaud K, 2017, INFO SECUR S AFR, P1
   Roast C., 2016, P 6 MEX C HUM COMP I, P24
   Rockwell, 2004, COGEVAL PROPOSITIONA
   Roelens B, 2019, SOFTW SYST MODEL, V18, P631, DOI 10.1007/s10270-016-0574-5
   Romuald D., 2015, P 7 ACM SIGCHI S ENG, P34
   Ruiz A, 2018, IEEE REV IBEROAM TEC, V13, P136, DOI 10.1109/RITA.2018.2879262
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   Saleh F, 2015, INFORM SOFTWARE TECH, V66, P73, DOI 10.1016/j.infsof.2015.05.002
   Salnitri M, 2017, SOFTW SYST MODEL, V16, P737, DOI 10.1007/s10270-015-0499-4
   Sandkuhl K, 2014, LECT NOTES BUS INF P, V197, P164
   Santos M, 2018, LECT NOTES COMPUT SC, V11157, P424, DOI 10.1007/978-3-030-00847-5_30
   Santos M, 2018, INT REQUIR ENG CONF, P228, DOI 10.1109/RE.2018.00031
   Sion L, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P36, DOI 10.1109/MiSE.2015.14
   Störrle H, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P468, DOI 10.1109/MODELS-C.2019.00075
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Tang, 2018, GUIDE VULNERABILITY, P339, DOI 10.1007/978-3-319-92624-7_15
   Tenbergen B, 2018, REQUIR ENG, V23, P291, DOI 10.1007/s00766-017-0267-9
   Thomas JC, 2012, S VIS LANG HUM CEN C, P41, DOI 10.1109/VLHCC.2012.6344478
   Thuy, 2017, VNU J FOREIGN STUDIE, V33, DOI [10.25073/2525-2445/vnufs.4217, DOI 10.25073/2525-2445/VNUFS.4217]
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   van der Linden D, 2019, SOFTW SYST MODEL, V18, P1813, DOI 10.1007/s10270-018-0667-4
   van der Linden D, 2017, INT REQUIR ENG CONF, P41, DOI 10.1109/RE.2017.37
   van der Linden D, 2016, LECT NOTES BUS INF P, V249, P109, DOI 10.1007/978-3-319-39564-7_11
   van der Linden D, 2016, LECT NOTES BUS INF P, V248, P448, DOI 10.1007/978-3-319-39429-9_28
   van Doesburg Jan, 2011, Processing, Storage, Distribution of Food. Food in the Medieval Rural Environment, P31
   Vogel-Heuser, 2012, P 2012 IEEE 17 INT C, P1
   Wanderley F, 2014, IEEE INT WORKSH MODE, P47, DOI 10.1109/MoDRE.2014.6890825
   Wesslen, 2002, EXPT SOFTWARE ENG, V6
   Winn W., 1990, IEEE Transactions on Professional Communications, V33, P103, DOI 10.1109/47.59083
   Woods E, 2015, J SYST SOFTWARE, V99, P97, DOI 10.1016/j.jss.2014.09.018
   Zehnder Eloise, 2018, Advances in Conceptual Modeling. ER 2018 Workshops Emp-ER, MoBiD, MREBA, QMMQ, SCME. Proceedings: Lecture Notes in Computer Science (LNCS 11158), P149, DOI 10.1007/978-3-030-01391-2_21
   Zender Mike., 2013, Visible Language, V47, P66
   ZWAGA HJ, 1983, APPL ERGON, V14, P43, DOI 10.1016/0003-6870(83)90220-X
NR 162
TC 2
Z9 2
U1 3
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2155
EP 2197
DI 10.1007/s10270-021-00888-9
EA MAY 2021
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XJ3QM
UT WOS:000652103100001
DA 2024-07-18
ER

PT J
AU Maoz, S
   Ringert, JO
AF Maoz, Shahar
   Ringert, Jan Oliver
TI Spectra: a specification language for reactive systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reactive synthesis; GR(1); Specification language
AB We introduce Spectra, a new specification language for reactive systems, specifically tailored for the context of reactive synthesis. The meaning of Spectra is defined by a translation to a kernel language. Spectra comes with the Spectra Tools, a set of analyses, including a synthesizer to obtain a correct-by-construction implementation, several means for executing the resulting controller, and additional analyses aimed at helping engineers write higher-quality specifications. We present the language in detail and give an overview of its tool set. Together with the language and its tool set, we present four collections of many, non-trivial, large specifications, written by undergraduate computer science students for the development of autonomous Lego robots and additional example reactive systems. The collected specifications can serve as benchmarks for future studies on reactive synthesis. We present the specifications, with observations and lessons learned about the potential use of reactive synthesis by software engineers.
C1 [Maoz, Shahar] Tel Aviv Univ, Sch Comp Sci, Tel Aviv, Israel.
   [Ringert, Jan Oliver] Univ Leicester, Sch Informat, Leicester, Leics, England.
C3 Tel Aviv University; University of Leicester
RP Maoz, S (corresponding author), Tel Aviv Univ, Sch Comp Sci, Tel Aviv, Israel.
EM maoz@cs.tau.ac.il
OI Maoz, Shahar/0000-0002-4022-5349; Ringert, Jan
   Oliver/0000-0002-3610-3920
FU European Research Council (ERC) under the European Union [638049];
   European Research Council (ERC) [638049] Funding Source: European
   Research Council (ERC)
FX This project has received funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   program (grant agreement No 638049, SYNTECH).
CR Almagor S, 2017, LECT NOTES COMPUT SC, V10427, P353, DOI 10.1007/978-3-319-63390-9_19
   Amram Gal, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P83, DOI 10.1007/978-3-030-30942-8_7
   [Anonymous], 2013, ZONE ISSUE
   [Anonymous], 2015, Journal of Software Engineering for Robotics (JOSER)
   [Anonymous], 1990, P 5 ANN S LOG COMP S, P428
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   Bartzis C., 2006, International Journal on Software Tools for Technology Transfer, V8, P26, DOI 10.1007/s10009-004-0171-8
   Bloem R, 2007, ELECTRON NOTES THEOR, V190, P3, DOI 10.1016/j.entcs.2007.09.004
   Bloem R, 2007, DES AUT TEST EUROPE, P1188
   Bloem R, 2015, LECT NOTES COMPUT SC, V9364, P394, DOI 10.1007/978-3-319-24953-7_29
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Bloem R, 2010, LECT NOTES COMPUT SC, V6174, P425, DOI 10.1007/978-3-642-14295-6_37
   Bloem R, 2009, LECT NOTES COMPUT SC, V5643, P140, DOI 10.1007/978-3-642-02658-4_14
   Bohy A, 2013, LECT NOTES COMPUT SC, V7795, P169, DOI 10.1007/978-3-642-36742-7_12
   Braberman V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1347, DOI 10.1109/ICSE.2013.6606714
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   D'Ippolito N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430543
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   Drager K., 2014, TACAS 2014, V8413, P531, DOI DOI 10.1007/978-3-642-54862-8-44
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ehlers R, 2016, LECT NOTES COMPUT SC, V9780, P333, DOI 10.1007/978-3-319-41540-6_18
   Eisner C, 2006, INTEGR CIRCUIT SYST, P1
   Filippidis Ioannis, 2016, 2016 IEEE Conference on Control Applications (CCA), P1030, DOI 10.1109/CCA.2016.7587949
   Filippidis I., 2015, P 4 WORKSH SYNTH SYN, V202
   Finkbeiner Bernd, 2013, International Journal on Software Tools for Technology Transfer, V15, P519, DOI 10.1007/s10009-012-0228-z
   Finucane C, 2010, IEEE INT C INT ROBOT, P1988, DOI 10.1109/IROS.2010.5650371
   GABBAY D, 1989, LECT NOTES COMPUT SC, V398, P409
   Giannakopoulou D., 2003, P 9 EUR SOFTW ENG 11, P257, DOI DOI 10.1145/949952.940106
   Greenyer J, 2017, SCI COMPUT PROGRAM, V149, P15, DOI 10.1016/j.scico.2017.07.004
   Gy?rgy A., 2019, ARXIV191005558 CORR
   Harel D, 2010, P IEEE ACM INT C AUT, P359
   Holldobler K., 2021, MontiCore Language Workbench and Library Handbook
   Jacobs S, 2017, ELECTRON P THEOR COM, P116, DOI 10.4204/EPTCS.260.10
   Jacobs S, 2016, ELECTRON P THEOR COM, P112, DOI 10.4204/EPTCS.229.10
   Jing GY, 2013, IEEE INT C INT ROBOT, P4796, DOI 10.1109/IROS.2013.6697048
   Jing GY, 2012, IEEE INT CONF ROBOT, P3543, DOI 10.1109/ICRA.2012.6225161
   Klein U, 2011, LECT NOTES COMPUT SC, V6504, P161, DOI 10.1007/978-3-642-19583-9_16
   Konighofer Robert, 2013, International Journal on Software Tools for Technology Transfer, V15, P563, DOI 10.1007/s10009-011-0221-y
   Kress-Gazit H, 2009, IEEE T ROBOT, V25, P1370, DOI 10.1109/TRO.2009.2030225
   Kupferman O, 2010, LECT NOTES ARTIF INT, V6355, P312, DOI 10.1007/978-3-642-17511-4_18
   Kuvent A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P362, DOI 10.1145/3106237.3106240
   Kwiatkowska Marta, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P5, DOI 10.1007/978-3-319-02444-8_2
   Lamport L., 2002, SPECIFYING SYSTEMS
   Lustig Yoad, 2013, International Journal on Software Tools for Technology Transfer, V15, P603, DOI 10.1007/s10009-012-0236-z
   Maniatopoulos S, 2016, IEEE INT CONF ROBOT, P4192, DOI 10.1109/ICRA.2016.7487613
   Maoz Shahar, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P335, DOI 10.1007/978-3-642-33666-9_22
   Maoz S., 2011, INT C ASP OR SOFTW D
   Maoz S, 2020, IEEE INT CONF AUTOM, P635, DOI 10.1145/3324884.3416557
   Maoz S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P99, DOI 10.1145/3368089.3409669
   Maoz S, 2019, PROC INT CONF SOFTW, P1016, DOI 10.1109/ICSE.2019.00106
   Maoz S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P17, DOI 10.1145/3196558.3196561
   Maoz S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P362, DOI 10.1145/2950290.2950300
   Maoz S, 2016, ELECTRON P THEOR COM, P35, DOI 10.4204/EPTCS.229.5
   Maoz S, 2016, ELECTRON P THEOR COM, P58, DOI 10.4204/EPTCS.202.5
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Maoz S, 2013, LECT NOTES COMPUT SC, V7800, P39, DOI 10.1007/978-3-642-36964-3_2
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Pierre L., 1999, LECT NOTES COMPUTER, V1703
   Piskac R., 2016, EPTCS, V229
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   Piterman N, 2006, IEEE S LOG, P275, DOI 10.1109/LICS.2006.23
   Pnueli Amir, 2010, Computer Aided Verification. Proceedings 22nd International Conference, CAV 2010, P171, DOI 10.1007/978-3-642-14295-6_18
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Raman Vasumathi., 2011, P 23 INT C COMPUTER, P663
   Rozier KY, 2016, LECT NOTES COMPUT SC, V9971, P8, DOI 10.1007/978-3-319-48869-1_2
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Somenzi Fabio., CUDD: BDD package
   Walker A, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P219, DOI 10.1109/FMCAD.2014.6987617
   Wong KW, 2013, IEEE INT C INT ROBOT, P2073, DOI 10.1109/IROS.2013.6696636
   Wongpiromsarn T, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P313
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 75
TC 19
Z9 20
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1553
EP 1586
DI 10.1007/s10270-021-00868-z
EA APR 2021
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000640150000003
OA hybrid
DA 2024-07-18
ER

PT J
AU Panahandeh, M
   Hamdaqa, M
   Zamani, B
   Hamou-Lhadj, A
AF Panahandeh, Mahsa
   Hamdaqa, Mohammad
   Zamani, Bahman
   Hamou-Lhadj, Abdelwahab
TI MUPPIT: a method for using proper patterns in model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Transformation pattern; Transformation anti-pattern; Model-driven
   engineering; Transformation engineering
AB Model transformation plays an important role in developing software systems using the model-driven engineering paradigm. Examples of applications of model transformation include forward engineering, reverse engineering of code into models, and refactoring. Poor-quality model transformation code is costly and hard to maintain. There is a need to develop techniques and tools that can support transformation engineers in designing high-quality model transformations. The goal of this paper is to present a process, called MUPPIT (method for using proper patterns in model transformations), which can be used by transformation engineers to improve the quality of model transformations by detecting anti-patterns in the transformations and automatically applying pattern solutions. MUPPIT consists of four phases: (1) identifying a transformation anti-pattern, (2) proposing a pattern-solution, (3) applying the pattern-solution, and (4) evaluating the transformation model. MUPPIT takes a transformation design model (TDM), which is a representation of the given transformation, to search for the presence of an anti-pattern of interest. If found, MUPPIT proposes a pattern solution from a catalogue of patterns to the transformation engineer. The application of the pattern solution results in the restructuring of the TDM. While MUPPIT, as a process, is independent of any transformation language and transformation engineering framework, we have implemented an instance of it as a tool using transML and MeTAGeM, which support exogenous transformations using rule-based transformation and OCL-based languages such as ATL and ETL. We evaluate MUPPIT through a number of case studies in which we show how MUPPIT can detect four anti-patterns and propose the corresponding pattern solutions. We also evaluate MUPPIT by collecting a number of metrics to assess the quality of the resulting transformations. The results show that MUPPIT optimizes the transformations by improving reusability, modularity, simplicity, and maintainability, as well as decreasing the complexity. MUPPIT can help transformation engineers to produce high-quality transformations using a pattern-based approach. An immediate future direction would be to experiment with more anti-patterns and pattern solutions. Moreover, we need to implement MUPPIT using other transformation engineering frameworks.
C1 [Panahandeh, Mahsa] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
   [Hamdaqa, Mohammad] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
   [Hamdaqa, Mohammad] Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.
   [Zamani, Bahman] Univ Isfahan, Fac Comp Engn, MDSE Res Grp, Esfahan, Iran.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 University of Alberta; Universite de Montreal; Polytechnique Montreal;
   Reykjavik University; University of Isfahan; Concordia University -
   Canada
RP Zamani, B (corresponding author), Univ Isfahan, Fac Comp Engn, MDSE Res Grp, Esfahan, Iran.
EM panahand@ualberta.ca; mhamdaqa@ru.is; zamani@eng.ui.ac.ir;
   wahab.hamou-lhadj@concordia.ca
RI Hamdaqa, Mohammad/AAE-5007-2020
OI Hamdaqa, Mohammad/0000-0003-4927-2755; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006; Zamani, Bahman/0000-0001-6424-1442;
   Panahandeh, Mahsa/0000-0002-6369-8982
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   Albin-Amiot H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P166, DOI 10.1109/ASE.2001.989802
   Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Begaudeau T, ACCELEO OCL OPERATIO
   Bézivin J, 2003, LECT NOTES COMPUT SC, V2863, P175
   Brown AW, 2006, IBM SYST J, V45, P463, DOI 10.1147/sj.453.0463
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bzivin J., 2006, MODEL DRIVEN ENG EME, P36
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Collet P, 2014, TTC STAF
   Counsell S., 2018, P 22 INT C EVALUATIO
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Dhoolia P, 2010, LECT NOTES COMPUT SC, V6183, P26, DOI 10.1007/978-3-642-14107-2_3
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   Ergin H., 2017, THESIS U ALABAMA ALA
   Ergin H, 2014, LECT NOTES COMPUT SC, V8568, P91
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomez P, P 7 TRANSF TOOL CONT, P87
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Hojaji F, 2020, SOFTW SYST MODEL, V19, P199, DOI 10.1007/s10270-019-00737-w
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Jiménez A, 2015, SCI COMPUT PROGRAM, V98, P3, DOI 10.1016/j.scico.2014.09.003
   Kolahdouz-Rahimi S, 2010, ICST PHD S
   KolahdouzRahimi S., 2013, THESIS U LONDON
   Kolovos Dimitrios S., 2018, The Epsilon book
   Krikava F., 2014, S APPL COMPUTING GYE, P2, DOI DOI 10.1145/2554850.2555127
   Kusel A., P DOCT S MODELS, P22
   Lano K, 2014, SOFTW SYST MODEL, V13, P873, DOI 10.1007/s10270-012-0291-7
   Lano Kevin, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P77
   Lano K, 2009, SOFTW SYST MODEL, V8, P85, DOI 10.1007/s10270-007-0064-x
   Lano K., 2011, 6 INT C SOFTW ENG AD, P263
   Lano K., 2017, Agile model-based development using UML-RSDS, DOI [10.1201/9781315368153, DOI 10.1201/9781315368153]
   Lano K., 2011, MODEL BASED DEV APPR, P48
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Lano K, 2017, LECT NOTES COMPUT SC, V10374, P108, DOI 10.1007/978-3-319-61473-1_8
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Lano KV, 2010, LECT NOTES COMPUT SC, V6396, P199, DOI 10.1007/978-3-642-16265-7_15
   Maroukian K., 2014, TTC STAF, P2
   Martin Fowler., 1999, REFACTORING IMPROVIN
   Mokaddem CE, 2016, LECT NOTES COMPUT SC, V9959, P211, DOI 10.1007/978-3-319-46613-2_14
   Opdyke William F., 1992, THESIS
   Palies, 2005, P 1 EUR WORKSHMOD TR
   Panahandeh MS, 2017, INT J INF TECHNOL SY, V10, P1, DOI 10.4018/IJITSA.2017070101
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Siikarla M, 2008, LECT NOTES COMPUT SC, V5063, P1, DOI 10.1007/978-3-540-69927-9_1
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Syriani E, 2015, PAME STAF, P27
   Taentzer G., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P41
   Tichy Matthias, 2013, P 2WORKSH AN MOD TRA, P1077
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
NR 61
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1491
EP 1523
DI 10.1007/s10270-020-00853-y
EA JAN 2021
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000608386700001
DA 2024-07-18
ER

PT J
AU Wei, R
   Zolotas, A
   Rodriguez, HH
   Gerasimou, S
   Kolovos, DS
   Paige, RF
AF Wei, Ran
   Zolotas, Athanasios
   Rodriguez, Horacio Hoyos
   Gerasimou, Simos
   Kolovos, Dimitrios S.
   Paige, Richard F.
TI Automatic generation of UML profile graphical editors for Papyrus
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; UML profiling; Papyrus
ID DESIGN PATTERNS; SYSTEMS
AB UML profiles offer an intuitive way for developers to build domain-specific modelling languages by reusing and extending UML concepts. Eclipse Papyrus is a powerful open-source UML modelling tool which supports UML profiling. However, with power comes complexity, implementing non-trivial UML profiles and their supporting editors in Papyrus typically requires the developers to handcraft and maintain a number of interconnected models through a loosely guided, labour-intensive and error-prone process. We demonstrate how metamodel annotations and model transformation techniques can help manage the complexity of Papyrus in the creation of UML profiles and their supporting editors. We presentJorvik, an open-source tool that implements the proposed approach. We illustrate its functionality with examples, and we evaluate our approach by comparing it against manual UML profile specification and editor implementation using a non-trivial enterprise modelling language (Archimate) as a case study. We also perform a user study in which developers are asked to produce identical editors using both Papyrus andJorvikdemonstrating the substantial productivity and maintainability benefits thatJorvikdelivers.
C1 [Wei, Ran] Dalian Univ Technol, Sch Artificial Intelligence, Dalian, Peoples R China.
   [Zolotas, Athanasios; Rodriguez, Horacio Hoyos; Gerasimou, Simos; Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Paige, Richard F.] McMaster Univ, Dept Comp Sci, Hamilton, ON, Canada.
C3 Dalian University of Technology; University of York - UK; McMaster
   University
RP Zolotas, A; Paige, RF (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.; Paige, RF (corresponding author), McMaster Univ, Dept Comp Sci, Hamilton, ON, Canada.
EM ranwei@dlut.edu.cn; thanos.zolotas@york.ac.uk; horacio.hoyos@york.ac.uk;
   simos.gerasimou@york.ac.uk; dimitris.kolovos@york.ac.uk;
   richard.paige@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; Zolotas, Athanasios/AAA-4972-2022; Wei,
   Ran/X-8750-2019
OI Zolotas, Athanasios/0000-0001-6020-4468; Wei, Ran/0000-0003-2191-1359;
   Kolovos, Dimitris/0000-0002-1724-6563
FU 'Fundamental Research Funds for the Central Universities', China;
   Innovate UK; UK aerospace industry through the SECT-AIR project; EU
   through the DEIS [732242]; Defence Science and Technology Laboratory
FX This work was partially supported by the 'Fundamental Research Funds for
   the Central Universities', China; by Innovate UK and the UK aerospace
   industry through the SECT-AIR project; by the EU through the DEIS
   project (#732242); and by the Defence Science and Technology Laboratory
   through the project 'Technical Obsolescence Management Strategies for
   Safety-Related Software for Airborne Systems'. We would like to thank
   Mr. Sina Mandani, Ms. Beatriz Sanchez Pina and Dr. Xiaotian Dai for
   their contributions to the evaluation of this paper.
CR Abouzahra A., 2005, P BEST PRACT MOD DRI, V5
   Alanen M., 2005, TECHNICAL REPORT
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Bergmayr A., 2014, JUMP JAVA ANNOTATION, P552
   Bernardi S, 2013, RELIAB ENG SYST SAFE, V120, P112, DOI 10.1016/j.ress.2013.06.032
   Bouaziz R, 2012, IEEE INT C COMPUT, P186, DOI 10.1109/ICCSE.2012.104
   Ciccozzi F, 2018, SOFTW SYST MODEL, V18, P1
   Cortellessa V., 2004, Software Engineering Notes, V29, P197, DOI 10.1145/974043.974076
   Debnath NC, 2006, I C COMP SYST APPLIC, P1146
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Giachetti G., 2009, USING UML DOMAIN SPE, P110
   Giachetti G., 2008, IMPROVING AUTOMATIC, P113
   Giachetti G, 2009, INT CONF RES CHAL, P385, DOI 10.1109/RCIS.2009.5089302
   Group O.M., 2010, TECHNICAL REPORT
   Haren V., 2012, ARCHIMATE 2 0 SPECIF
   Hussein M., 2006, 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems
   Iacob M.E., 2009, ARCHIMATE 1 0 SPECIF
   KEHRER T, 2014, SOFTWARETECHNIK TREN, V34
   KELTER U, 2008, P 2008 INT WORKSH CO, P1, DOI DOI 10.1145/1370152.1370154
   Kolovos D.S., 2015, SOFTW SYST MODEL, P1
   Kolovos D.S., 2009, EVOLUTION OCL CAPTUR, P204
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kraas A, 2017, LECT NOTES COMPUT SC, V10567, P136, DOI 10.1007/978-3-319-68015-6_9
   Lagarde F, 2008, LECT NOTES COMPUT SC, V4961, P116, DOI 10.1007/978-3-540-78743-3_10
   Langer P, 2011, LECT NOTES COMPUT SC, V6705, P52, DOI 10.1007/978-3-642-21952-8_6
   Lanusse Agnes., 2009, Proc. of the Fifth BIBLIOGRAPHY 84 European Conference on Model-Driven Architecture Foundations and Applications ECMDA-FA 2009, P1
   Looker N, 2003, SYM REL DIST SYST, P293, DOI 10.1109/RELDIS.2003.1238079
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Moreno N, 2007, IET SOFTW, V1, P67, DOI 10.1049/iet-sen:20060067
   Object Management Group, 2011, MOD AN REAL TIM EMB
   Object Management Group, 2014, MET OBJ FAC MOF COR
   Pardillo J., 2010, SYSTEMATIC REV DEFIN, P407
   Rodriguez RJ, 2010, P 2 INT WORKSH SOFTW, P42
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Simons C, 2007, J VISUAL LANG COMPUT, V18, P420, DOI 10.1016/j.jvlc.2007.07.001
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Walderhaug S., 2009, EXPERIENCES MODEL DR, P199
   Wei R, 2019, J SYST SOFTWARE, V154, P211, DOI 10.1016/j.jss.2019.05.013
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Wimmer M, 2009, INT J WEB INF SYST, V5, P372, DOI 10.1108/17440080910983592
   Zolotas A, 2018, LECT NOTES COMPUT SC, V10890, P12, DOI 10.1007/978-3-319-92997-2_2
   Zoughbi G, 2007, LECT NOTES COMPUT SC, V4735, P574
NR 48
TC 2
Z9 2
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1083
EP 1106
DI 10.1007/s10270-020-00813-6
EA AUG 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000558630700001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Aslam, K
   Cleophas, L
   Schiffelers, R
   van den Brand, M
AF Aslam, Kousar
   Cleophas, Loek
   Schiffelers, Ramon
   van den Brand, Mark
TI Interface protocol inference to aid understanding legacy software
   components
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Active automata learning; Interface protocols; Learning framework;
   Equivalence oracles
ID MODELS
AB High-tech companies are struggling today with the maintenance of legacy software. Legacy software is vital to many organizations as it contains the important business logic. To facilitate maintenance of legacy software, a comprehensive understanding of the software's behavior is essential. In terms of component-based software engineering, it is necessary to completely understand the behavior of components in relation to their interfaces, i.e., their interface protocols, and to preserve this behavior during the maintenance activities of the components. For this purpose, we present an approach to infer the interface protocols of software components from the behavioral models of those components, learned by a blackbox technique called active (automata) learning. To validate the learned results, we applied our approach to the software components developed with model-based engineering so that equivalence can be checked between the learned models and the reference models, ensuring the behavioral relations are preserved. Experimenting with components having reference models and performing equivalence checking builds confidence that applying active learning technique to reverse engineer legacy software components, for which no reference models are available, will also yield correct results. To apply our approach in practice, we present an automated framework for conducting active learning on a large set of components and deriving their interface protocols. Using the framework, we validated our methodology by applying active learning on 202 industrial software components, out of which, interface protocols could be successfully derived for 156 components within our given time bound of 1 h for each component.
C1 [Aslam, Kousar; Cleophas, Loek; Schiffelers, Ramon; van den Brand, Mark] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Schiffelers, Ramon] ASML, Veldhoven, Netherlands.
C3 Eindhoven University of Technology; ASML Holding
RP Aslam, K (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM k.aslam@tue.nl; l.g.w.a.cleophas@tue.nl; r.r.h.schiffelers@tue.nl;
   m.g.j.v.d.brand@tue.nl
OI van den Brand, Mark/0000-0003-3529-6182
FU Eindhoven University of Technology; ASML Netherlands B.V.; Dutch
   Ministry of Economic Affairs; ESI (part of TNO)
FX This research was partially supported by Eindhoven University of
   Technology and ASML Netherlands B.V., carried out as part of the IMPULS
   II project, and partially supported by the Dutch Ministry of Economic
   Affairs, ESI (part of TNO) and ASML Netherlands B.V., carried out as
   part of the TKI project `Transposition.' The authors would also like to
   express deep gratitude to Dennis Hendriks and Leonard Lensink for
   providing support on the design of experiments and implementation,
   Alexander Serebrenik for advice on results analysis and Alessandro di
   Bucchianico for discussions on statistical tests.
CR Aarts F., 2014, THESIS
   Aarts F, 2013, IEEE ICST WORKSHOP, P461, DOI 10.1109/ICSTW.2013.60
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2014, Tools and Algorithms for the Construction and Analysis of Systems
   [Anonymous], 2013, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), DOI [10.1145/2483760.2483783, DOI 10.1145/2483760.2483783]
   Aslam K., 2018, MODELS WORKSH, P6
   Atkinson C, 2005, COMPONENT BASED SOFT
   Broadfoot GH, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P49, DOI 10.1109/APSEC.2003.1254357
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Cai X, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P372, DOI 10.1109/APSEC.2000.896722
   Cassel S, 2016, FORM ASP COMPUT, V28, P233, DOI 10.1007/s00165-016-0355-5
   Chalupar G., 2014, WOOT14 USENIX WORKSH, P1
   Cho CY, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P426, DOI 10.1145/1866307.1866355
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   DIAZ M, 1994, IEEE T SOFTWARE ENG, V20, P900, DOI 10.1109/32.368136
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Duhaiby Omar, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P121, DOI 10.1007/978-3-030-03427-6_13
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   GABRIEL KR, 1969, ANN MATH STAT, V40, P224, DOI 10.1214/aoms/1177697819
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Groote JF, 2014, MODELING AND ANALYSIS OF COMMUNICATING SYSTEMS, P1
   Gross D., 2008, FUNDAMENTALS QUEUEIN, DOI DOI 10.1002/9781118625651
   Hamilton V, 1994, IEE C REV ENG SOFTW, p6/1
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Isberner M, 2015, LECT NOTES COMPUT SC, V9206, P487, DOI 10.1007/978-3-319-21690-4_32
   Isberner M, 2014, LECT NOTES COMPUT SC, V8734, P307, DOI 10.1007/978-3-319-11164-3_26
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Jonk R.J.W, 2016, THESIS
   Kalbarczyk Z, 2005, IEEE INTERNET COMPUT, V9, P28, DOI 10.1109/MIC.2005.31
   Kalbarczyk ZT, 1999, IEEE T PARALL DISTR, V10, P560, DOI 10.1109/71.774907
   Kearns M. J., 1994, An Introduction to Computational Learning Theory
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Laveaux M, 2019, LECT NOTES COMPUT SC, V11535, P185, DOI 10.1007/978-3-030-21759-4_11
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Leemans M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P502, DOI 10.1109/SANER.2018.8330248
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Loose R, 2017, THESIS
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Murray Wonham W., 2015, Supervisory control of discrete-event systems
   Petrenko A., 1993, IFIP Transactions C (Communication Systems), VC-19, P363
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   PLATTNER B, 1981, COMPUTER, V14, P76, DOI 10.1109/C-M.1981.220255
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   Ramanathan MK, 2007, ACM SIGPLAN NOTICES, V42, P123, DOI 10.1145/1273442.1250749
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schuts M, 2016, LECT NOTES COMPUT SC, V9681, P311, DOI 10.1007/978-3-319-33693-0_20
   Shatnawi A, 2017, J SYST SOFTWARE, V131, P442, DOI 10.1016/j.jss.2016.06.101
   Smeenk Wouter, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P67, DOI 10.1007/978-3-319-25423-4_5
   Sommerville I, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2209249.2209268
   Steinbauer G, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1742
   Stramaglia S, 1999, DATA INTEGRITY COMPA
   Tillmann N, 2006, LECT NOTES COMPUT SC, V4260, P717
   Tukey J.W., 1951, Quick and dirty methods in statistics. Part II. Simple analyses for standard designs, P189
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Yang N, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P253, DOI [10.1109/SANER.2019.8668007, 10.1109/saner.2019.8668007]
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zulkernine M, 2005, J SYST SOFTWARE, V74, P15, DOI 10.1016/j.jss.2003.05.006
NR 69
TC 4
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1519
EP 1540
DI 10.1007/s10270-020-00809-2
EA JUN 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000543678200001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU López-Fernández, JJ
   Garmendia, A
   Guerra, E
   de Lara, J
AF Lopez-Fernandez, Jesus J.
   Garmendia, Antonio
   Guerra, Esther
   de Lara, Juan
TI An example is worth a thousand words: Creating graphical modelling
   environments by example
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 12th European Conference on Modelling Foundations and Applications
   (ECMFA) / 9th International Conference on Theory and Practice of Model
   Transformations (ICMT) Held as Part of Software Technologies -
   Applications and Foundations (STAF) Conference
CY JUL 04-07, 2016
CL TU Wien, Vienna, AUSTRIA
HO TU Wien
DE Domain-specific modelling languages; Graphical modelling environments;
   Example-based meta-modelling; Flexible modelling
ID DOMAIN-SPECIFIC LANGUAGES; TRANSFORMATION; TOOLS
AB Domain-specific languages (DSLs) are heavily used in model-driven and end-user development approaches. Compared to general-purpose languages, DSLs present numerous benefits like powerful domain-specific primitives, an intuitive syntax for domain experts, and the possibility of advanced code generation for narrow domains. While a graphical syntax is sometimes desired for a DSL, constructing graphical modelling environments is a costly and highly technical task. This relegates domain experts to a rather passive role in their development and hinders a wider adoption of graphical DSLs. Our aim is achieving a simpler DSL construction process where domain experts can contribute actively. For this purpose, we propose an example-based technique for the automatic generation of modelling environments for graphical DSLs. This way, starting from examples of the DSL likely provided by domain experts using drawing tools like yED, our system synthesizes a graphical modelling environment that mimics the syntax of the provided examples. This includes a meta-model for the abstract syntax of the DSL and a graphical concrete syntax supporting spatial relationships like containment and adjacency. Our system, called metaBUP, is implemented as an Eclipse plug-in. In this paper, we demonstrate its usage on a running example in the home networking domain and evaluate its suitability for the construction of graphical modelling environments by means of a user study.
C1 [Lopez-Fernandez, Jesus J.; Garmendia, Antonio] Univ Autonoma Madrid, Madrid, Spain.
   [Guerra, Esther] Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
   [de Lara, Juan] Univ Autonoma Madrid, Comp Sci Dept, Modelling & Software Engn Res Grp, Madrid, Spain.
C3 Autonomous University of Madrid; Autonomous University of Madrid;
   Autonomous University of Madrid
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
EM Jesusj.Lopez@uam.es; Antonio.Garmendia@uam.es; Esther.Guerra@uam.es;
   Juan.deLara@uam.es
RI de Lara, Juan/B-5422-2014; Garmendia, Antonio/HLW-7667-2023; Garmendia,
   Antonio/Y-5530-2019; Guerra, Esther/B-4977-2014
OI Garmendia, Antonio/0000-0001-8331-4467; Guerra,
   Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity [TIN2014-52129-R]; R&D
   programme of the Madrid Region [S2013/ICE-3006]
FX Work funded by the Spanish Ministry of Economy and Competitivity
   (TIN2014-52129-R), and the R&D programme of the Madrid Region
   (S2013/ICE-3006).
CR Amatriain X, 2011, IEEE T SOFTWARE ENG, V37, P544, DOI 10.1109/TSE.2010.48
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], TOSEM
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering
   Avazpour I, 2015, J VISUAL LANG COMPUT, V28, P195, DOI 10.1016/j.jvlc.2015.02.005
   Bak Kacper, 2013, 2013 35th International Conference on Software Engineering (ICSE), P1273, DOI 10.1109/ICSE.2013.6606696
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Bottoni P, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P83, DOI 10.1109/VLHCC.2004.5
   Bottoni P, 2010, LECT NOTES ARTIF INT, V6170, P39, DOI 10.1007/978-3-642-14600-8_8
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   FEDER J, 1971, INFORM SCIENCES, V3, P225, DOI 10.1016/S0020-0255(71)80008-7
   Garmendia A, 2015, COMM COM INF SC, V563, P160, DOI 10.1007/978-3-319-27653-3_16
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Golra FR, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P24, DOI 10.1145/2976767.2976807
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Grundy JC, 2013, IEEE T SOFTWARE ENG, V39, P487, DOI 10.1109/TSE.2012.33
   Hili Nicolas, 2016, FLEX MOD DRIV ENG WO, V1694, P2
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hyun Cho, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P22, DOI 10.1109/MISE.2012.6226010
   Jiménez-Pastor A, 2017, J SYST SOFTWARE, V132, P204, DOI 10.1016/j.jss.2017.07.011
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kelly S., 2008, Domain-Specific Modeling
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Kolovos Dimitrios S., 2013, XMMoDELS, V1089, P2
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Lopez-Fernandez J.J., 2015, SLE, P101
   López-Fernández JJ, 2016, INFORM SYST, V62, P104, DOI 10.1016/j.is.2016.06.008
   López-Fernández JJ, 2016, LECT NOTES COMPUT SC, V9764, P101, DOI 10.1007/978-3-319-42061-5_7
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Rensink A., 2007, LECT NOTES COMPUTER, V5088, P49
   Rosa M. D., 2016, P DMS KSI RES INC KN, P16
   Rose L.M., 2012, Proceedings of the 2012 Extreme Modeling Workshop, P15
   Sangiorgi U. B., 2010, FLEXITOOLS ICSE
   Semerath O., 2016, SOFTWARE SYSTEM MODE
   Sobernig S, 2016, J SYST SOFTWARE, V113, P140, DOI 10.1016/j.jss.2015.11.037
   Sottet Jean-Sebastien, 2016, P 2 WORKSH FLEX MOD, V1694, P42
   Stapleton G, 2004, J LOGIC COMPUT, V14, P857, DOI 10.1093/logcom/14.6.857
   Stapleton G., 2005, P DMS KNOWL SYST I, P287
   Stapleton G, 2017, J LOGIC LANG INFORM, V26, P143, DOI 10.1007/s10849-017-9250-6
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sun Y, 2015, SOFTW SYST MODEL, V14, P1245, DOI 10.1007/s10270-013-0374-0
   Wüest D, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P685, DOI 10.1109/ICSE.2015.223
   Yoder C., 1978, ACM SIGSOFT BIGMETRI, P386
   Zolotas A., 2017, COMPUTER LANGUAGES S
   Zolotas Athanasios., 2014, XM@ MoDELS, V1239, P12
NR 56
TC 7
Z9 8
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 961
EP 993
DI 10.1007/s10270-017-0632-7
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400011
DA 2024-07-18
ER

PT J
AU van Rozen, R
   van der Storm, T
AF van Rozen, Riemer
   van der Storm, Tijs
TI Toward live domain-specific languages From text differencing to adapting
   models at run time
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Live programming; Domain-specific languages; Text differencing; Model
   patching; Adapting models; Models at run time
ID DESIGN
AB Live programming is a style of development characterized by incremental change and immediate feedback. Instead of long edit-compile cycles, developers modify a running program by changing its source code, receiving immediate feedback as it instantly adapts in response. In this paper, we propose an approach to bridge the gap between running programs and textual domain-specific languages (DSLs). The first step of our approach consists of applying a novel model differencing algorithm, TMDIFF, to the textual DSL code. By leveraging ordinary text differencing and origin tracking, TMDIFF produces deltas defined in terms of the metamodel of a language. In the second step of our approach, the model deltas are applied at run time to update a running system, without having to restart it. Since the model deltas are derived from the static source code of the program, they are unaware of any run-time state maintained during model execution. We therefore propose a generic, dynamic patch architecture, RMPATCH, which can be customized to cater for domain-specific state migration. We illustrate RMPATCH in a case study of a live programming environment for a simple DSL implemented in RASCAL for simultaneously defining and executing state machines.
C1 [van Rozen, Riemer] Amsterdam Univ Appl Sci, POB 1025, NL-1000 BA Amsterdam, Netherlands.
   [van der Storm, Tijs] Ctr Wiskunde & Informat, POB 94079, NL-1090 GB Amsterdam, Netherlands.
   [van der Storm, Tijs] Univ Groningen, Johann Bernoulli Inst, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
C3 University of Groningen
RP van Rozen, R (corresponding author), Amsterdam Univ Appl Sci, POB 1025, NL-1000 BA Amsterdam, Netherlands.
EM R.A.van.Rozen@hva.nl; T.van.der.Storm@cwi.nl
RI van der Storm, Tijs/HGB-8960-2022
OI van Rozen, Riemer/0000-0002-3834-682X
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Cicchetti Antonio, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P190
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Eclipse Foundation, EMF COMP PROJ
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Goldschmidt T, 2008, LECT NOTES COMPUT SC, V5095, P169, DOI 10.1007/978-3-540-69100-6_12
   Gotz S, 2015, SIGSOFT SOFTW ENG NO, V40, P26
   Inostroza P, 2014, LECT NOTES COMPUT SC, V8568, P154
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2012, IEEE INT CONF AUTOM, P306, DOI 10.1145/2351676.2351731
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   LAMMEL R, 2004, P 1 INT WORKSH SOFTW, P31
   Langer P, 2014, SEMANTIC MODEL DIFFE
   Langer P, 2013, J SYST SOFTWARE, V86, P551, DOI 10.1016/j.jss.2012.09.037
   Lehmann Grzegorz, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P209, DOI 10.1007/978-3-642-21210-9_21
   Lieberman H., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P480
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Maoz Shahar, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P194, DOI 10.1007/978-3-642-21210-9_19
   Maoz S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P24, DOI 10.1109/MODELS.2015.7338232
   McGuinness DL, 1995, INT JOINT CONF ARTIF, P816
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Rose LM, 2008, LECT NOTES COMPUT SC, V5301, P249, DOI 10.1007/978-3-540-87875-9_18
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Tanimoto SL, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P31, DOI 10.1109/LIVE.2013.6617346
   TICHY WF, 1984, ACM T COMPUT SYST, V2, P309, DOI 10.1145/357401.357404
   Treude C., 2007, P EUR SOFTW ENG C FD, P295
   van den Bos J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P671, DOI 10.1145/1985793.1985887
   van der Storm T, 2014, SCI COMPUT PROGRAM, V96, P460, DOI 10.1016/j.scico.2014.02.023
   van der Storm T, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P35, DOI 10.1109/LIVE.2013.6617347
   VAN DEURSEN A, 1993, J SYMB COMPUT, V15, P523, DOI 10.1016/S0747-7171(06)80004-0
   van Rozen R, 2014, P 9 INT C FDN DIG GA
   van Rozen R, 2015, LECT NOTES COMPUT SC, V9152, P18, DOI 10.1007/978-3-319-21155-8_2
   van Rozen Riemer, 2015, P 10 INT C FDN DIG G
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
NR 45
TC 13
Z9 13
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 195
EP 212
DI 10.1007/s10270-017-0608-7
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300010
DA 2024-07-18
ER

PT J
AU Vögele, C
   van Hoorn, A
   Schulz, E
   Hasselbring, W
   Krcmar, H
AF Voegele, Christian
   van Hoorn, Andre
   Schulz, Eike
   Hasselbring, Wilhelm
   Krcmar, Helmut
TI WESSBAS: extraction of probabilistic workload specifications for load
   testing and performance prediction-a model-driven approach for
   session-based application systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE Workload specifications; Load testing; Performance prediction;
   Performance models
AB The specification of workloads is required in order to evaluate performance characteristics of application systems using load testing and model-based performance prediction. Defining workload specifications that represent the real workload as accurately as possible is one of the biggest challenges in both areas. To overcome this challenge, this paper presents an approach that aims to automate the extraction and transformation of workload specifications for load testing and model-based performance prediction of session-based application systems. The approach (WESSBAS) comprises three main components. First, a system- and tool-agnostic domain-specific language (DSL) allows the layered modeling of workload specifications of session-based systems. Second, instances of this DSL are automatically extracted from recorded session logs of production systems. Third, these instances are transformed into executable workload specifications of load generation tools and model-based performance evaluation tools. We present transformations to the common load testing tool Apache JMeter and to the Palladio Component Model. Our approach is evaluated using the industry-standard benchmark SPECjEnterprise2010 and the World Cup 1998 access logs. Workload-specific characteristics (e.g., session lengths and arrival rates) and performance characteristics (e.g., response times and CPU utilizations) show that the extracted workloads match the measured workloads with high accuracy.
C1 [Voegele, Christian] Fortiss GmbH, D-80805 Munich, Germany.
   [van Hoorn, Andre] Univ Stuttgart, Inst Software Technol, D-70569 Stuttgart, Germany.
   [Schulz, Eike] ARIVA DE AG, D-24118 Kiel, Germany.
   [Hasselbring, Wilhelm] Univ Kiel, Dept Comp Sci, D-24118 Kiel, Germany.
   [Krcmar, Helmut] TUM, Chair Informat Syst, D-85748 Garching, Germany.
C3 fortiss; University of Stuttgart; University of Kiel; Technical
   University of Munich
RP Vögele, C (corresponding author), Fortiss GmbH, D-80805 Munich, Germany.
EM voegele@fortiss.org; van.hoorn@informatik.uni-stuttgart.de;
   esc@ariva.de; hasselbring@email.uni-kiel.de; krcmar@in.tum.de
RI Krcmar, Helmut/AAA-8434-2020; Hasselbring, Wilhelm/G-4794-2011
OI Krcmar, Helmut/0000-0002-2754-8493; 
FU German Research Foundation (DFG) [DFG-SPP 1593, HO 5721/1-1]; Research
   Group of the Standard Performance Evaluation Corporation (SPEC)
FX This work is supported by the German Research Foundation (DFG) in the
   Priority Programme DFG-SPP 1593: "Design for Future - Managed Software
   Evolution" (HO 5721/1-1) and by the Research Group of the Standard
   Performance Evaluation Corporation (SPEC). The authors also thank
   Andreas Brunnert for giving us the opportunity to use the performance
   model generator for Java EE applications. We additionally thank Robert
   Heilein for supporting us to implement the Session Log Generator.
CR Abbors F., 2012, P 4 INT C ADV SYST T
   [Anonymous], 2000, Icml, DOI DOI 10.1007/3-540-44491-2_3
   [Anonymous], 1998, SIGMETRICS PERFORM E, DOI DOI 10.1145/306225.306235
   [Anonymous], 2011, AUTONOMIC LOAD TESTI
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1999, P 1 ACM C EL COMM
   Arlitt M, 2000, IEEE NETWORK, V14, P30, DOI 10.1109/65.844498
   Avritzer A., 2002, P 3 INT WORKSHOP SOF, P17
   Barber S, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P51, DOI 10.1109/WSE.2004.10002
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   Barna C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P872, DOI 10.1145/1985793.1985930
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Berkhin P, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P25
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Brosig F., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P183, DOI 10.1109/ASE.2011.6100052
   Brunnert Andreas, 2013, Computer Performance Engineering. 10th European Workshop, EPEW 2013. Proceedings: LNCS 8168, P74, DOI 10.1007/978-3-642-40725-3_7
   Brunnert A., 2014, P 8 INT C PERF EV ME, P165
   Brunnert A, 2014, BUS INFORM SYST ENG+, V6, P177, DOI 10.1007/s12599-014-0323-7
   Brunnert Andreas, 2015, SPECRG201501 DEVOPS
   Bulej L, 2005, PERFORM EVALUATION, V60, P345, DOI 10.1016/j.peva.2004.10.013
   Calzarossa MC, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2856127
   Ciancone A, 2011, LECT NOTES COMPUT SC, V6705, P99, DOI 10.1007/978-3-642-21952-8_9
   Costa Leandro T., 2012, SEKE, P112
   de Sousa Santos I., 2011, Proceedings of the 23rd International Conference on Software Engineering Knowledge Engineering (SEKE 2011), P258
   Draheim D., 2006, P 10 EUR C SOFTW MAI, P59
   Filieri A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P200, DOI 10.1109/ICSE.2015.41
   Goseva-Popstojanova K, 2006, EMPIR SOFTW ENG, V11, P71, DOI 10.1007/s10664-006-5966-7
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Herbst N.R., 2013, 4th International Conference on Performance Engineering ICPE, P187
   Herbst NikolasRoman., 2014, P 3 INT WORKSHOP LAR, P1
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Kolmogorov Andrey N, 1950, Foundations of the theory of probability
   Kounev Samuel, 2014, TECHNICAL REPORT
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Labs H.-P., 1998, WORLDCUP98 WEB LOGS
   Lehrig S., 2014, P S SOFTW PERF, P26
   Li Z, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P356, DOI 10.1109/CMPSAC.2003.1245365
   Lutteroth C, 2008, IEEE INT ENTERP DIST, P149, DOI 10.1109/EDOC.2008.40
   Menasce D., 2000, EC'00. Proceedings of the 2nd ACM Conference on Electronic Commerce, P56, DOI 10.1145/352871.352878
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Object Management Group Inc, 2013, MOD AN REALT EMB SYS
   ogele C., 2014, P 3 INT WORKSH LARG, P5
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Rodriguez-Cano E., 2014, PSYCHOL MED, P1, DOI DOI 10.1109/AUPEC.2014.6966547
   Ruffo G, 2004, THIRD IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P77, DOI 10.1109/NCA.2004.1347765
   Schulz E., 2014, P WORKSH MOD BAS MOD, P10
   Schulz E., 2014, THESIS
   Shams M., 2006, SOQUA 06, P54, DOI DOI 10.1145/1188895.1188909
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   van Hoorn A., 2014, P 8 INT C PERF EV ME, P139, DOI [10.4108/icst.valuetools.2014.258171, DOI 10.4108/ICST.VALUETOOLS.2014.258171]
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   van Hoorn A, 2008, LECT NOTES COMPUT SC, V5119, P124, DOI 10.1007/978-3-540-69814-2_9
   Vogele C., 2015, P 4 INT WORKSH LARG, P5
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Wohlin C., 2012, Experimentation in Software Engineering
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Zhou JZ, 2014, INT CONF QUAL SOFTW, P154, DOI 10.1109/QSIC.2014.53
NR 59
TC 26
Z9 26
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 443
EP 477
DI 10.1007/s10270-016-0566-5
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Dintzner, N
   van Deursen, A
   Pinzger, M
AF Dintzner, Nicolas
   van Deursen, Arie
   Pinzger, Martin
TI Analysing the Linux kernel feature model changes using FMDiff
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product line; Feature model; Evolution
AB Evolving a large scale, highly variable system is a challenging task. For such a system, evolution operations often require to update consistently both their implementation and its feature model. In this context, the evolution of the feature model closely follows the evolution of the system. The purpose of this work is to show that fine-grained feature changes can be used to guide the evolution of the highly variable system. In this paper, we present an approach to obtain fine-grained feature model changes with its supporting tool "FMDiff". Our approach is tailored for Kconfig-based variability models and proposes a feature change classification detailing changes in features, their attributes and attribute values. We apply our approach to the Linux kernel feature model, extracting feature changes occurring in sixteen official releases. In contrast to previous studies, we found that feature modifications are responsible for most of the changes. Then, by taking advantage of the multi-platform aspect of the Linux kernel, we observe the effects of a feature change across the different architecture-specific feature models of the kernel. We found that between 10 and 50 % of feature changes impact all the architecture-specific feature models, offering a new perspective on studies of the evolution of the Linux feature model and development practices of its developers.
C1 [Dintzner, Nicolas; van Deursen, Arie] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
   [Pinzger, Martin] Univ Klagenfurt, Software Engn Res Grp, Klagenfurt, Austria.
C3 Delft University of Technology; University of Klagenfurt
RP Dintzner, N (corresponding author), Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
EM N.J.R.Dintzner@tudelft.nl; Arie.vanDeursen@tudelft.nl;
   Martin.Pinzger@aau.at
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
FU Dutch national program COMMIT
FX This publication was supported by the Dutch national program COMMIT and
   carried out as part of the Allegio project under the responsibility of
   the Embedded Systems Innovation group of TNO.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Acher Mathieu, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P629, DOI 10.1007/978-3-642-31095-9_41
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], 2013, P 7 INT WORKSH VAR M, DOI DOI 10.1145/2430502.2430526
   [Anonymous], 2012, P WORKSH MOD SYST SO
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2010, LISA
   [Anonymous], P INT WORKSH OP SOUR
   [Anonymous], 2014, MSR 14, DOI [DOI 10.1145/2597073.2597124, 10.1145/2597073.2597124]
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Botterweck G., 2010, Proceedings of the 2010 ICSE Workshop on Product Line Approaches in Software Engineering, P24
   Botterweck G., 2009, P 1 INT WORKSH FEAT, P109, DOI DOI 10.1145/1629716.1629737
   Clements P., 2002, Software product lines
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Dintzner Nicolas, 2013, P 8 INT WORKSH VAR M
   Giese H., 2009, P 4 INT WORKSH MOD R, V509, P61
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Hellebrand R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P274, DOI 10.1145/2648511.2648542
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kenner A., 2010, P 2 INT WORKSH FEAT, P25, DOI DOI 10.1145/1868688.1868693
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Maoz S., 2011, LNCS, V6627, P194
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Paskevicius P, 2012, COMM COM INF SC, V319, P108
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L., 2012, 4 INT WORKSHOP FEATU, P62, DOI [10.1145/2377816.2377825, DOI 10.1145/2377816.2377825]
   Romano D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P392, DOI 10.1109/ICWS.2012.29
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   She Steven, 2010, FORMAL SEMANTICS KCO
   Sincero Julio., 2008, Software Product Lines, 12th International Conference, SPLC 2008, Limerick, Ireland, September 8-12, 2008, P257
   Sincero R., 2010, P 9 INT C GEN PROGR, P33
   Siy H. P., 1998, P PRINC SOFTW EV WOR, P251
   Storey MAD, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P31, DOI 10.1109/WCRE.1996.558826
   Svahnberg M., 2000, THESIS
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Tartler Reinhard., 2009, Proceedings of the 1st Workshop on Feature-Oriented Software Development (FOSD'09), P81
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
NR 46
TC 11
Z9 11
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 55
EP 76
DI 10.1007/s10270-015-0472-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500007
OA hybrid
DA 2024-07-18
ER

PT J
AU de Leoni, M
   Suriadi, S
   ter Hofstede, AHM
   van der Aalst, WMP
AF de Leoni, Massimiliano
   Suriadi, Suriadi
   ter Hofstede, Arthur H. M.
   van der Aalst, Wil M. P.
TI Turning event logs into process movies: animating what has really
   happened
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Visual analytics; Event-log animation; Process
   visualisation
AB Today's information systems log vast amounts of data. These collections of data (implicitly) describe events (e.g. placing an order or taking a blood test) and, hence, provide information on the actual execution of business processes. The analysis of such data provides an excellent starting point for business process improvement. This is the realm of process mining, an area which has provided a repertoire of many analysis techniques. Despite the impressive capabilities of existing process mining algorithms, dealing with the abundance of data recorded by contemporary systems and devices remains a challenge. Of particular importance is the capability to guide the meaningful interpretation of "oceans of data" by process analysts. To this end, insights from the field of visual analytics can be leveraged. This article proposes an approach where process states are reconstructed from event logs and visualised in succession, leading to an animated history of a process. This approach is customisable in how a process state, partially defined through a collection of activity instances, is visualised: one can select a map and specify a projection of events on this map based on the properties of the events. This paper describes a comprehensive implementation of the proposal. It was realised using the open-source process mining framework ProM. Moreover, this paper also reports on an evaluation of the approach conducted with Suncorp, one of Australia's largest insurance companies.
C1 [de Leoni, Massimiliano; ter Hofstede, Arthur H. M.; van der Aalst, Wil M. P.] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Suriadi, Suriadi; ter Hofstede, Arthur H. M.] Queensland Univ Technol, Business Proc Management Discipline, Brisbane, Qld, Australia.
   [ter Hofstede, Arthur H. M.] Queensland Univ Technol, Informat Syst Sch, Fac Sci & Engn, Brisbane, Qld, Australia.
   [van der Aalst, Wil M. P.] Queensland Univ Technol, Brisbane, Qld, Australia.
C3 Eindhoven University of Technology; Queensland University of Technology
   (QUT); Queensland University of Technology (QUT); Queensland University
   of Technology (QUT)
RP de Leoni, M (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM m.d.leoni@tue.nl; s.suriadi@qut.edu.au; a.terhofstede@qut.edu.au;
   w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011; ter Hofstede, Arthur/I-9787-2012
OI van der Aalst, Wil/0000-0002-0955-6940; de Leoni,
   Massimiliano/0000-0002-8447-5374; ter Hofstede,
   Arthur/0000-0002-2730-0201
FU ARC [DP110100091]; Eurostars-Eureka project PROMPT [E!6696]
FX We express our gratitude to Joos Buijs, affiliated with the AIS group of
   Eindhoven University of Technology, for having performed the initial
   validation with employees of the Dutch Municipality. This work is
   partially supported by ARC Discovery Grant DP110100091 "Risk-Aware
   Business Process Management". Part of this work was conducted when Dr.
   de Leoni was also affiliated with University of Padua and supported by
   the Eurostars-Eureka project PROMPT (E!6696).
CR Aigner W, 2007, COMPUT GRAPH-UK, V31, P401, DOI 10.1016/j.cag.2007.01.030
   Alonso G, 1997, LECT NOTES COMPUT SC, V1262, P238
   [Anonymous], 2011, BIG DATA NEXT FRONTI
   [Anonymous], 2009, Visual Analytics Science and Technology
   [Anonymous], P WORKSH PETR NETS S
   Bak P, 2009, IEEE T VIS COMPUT GR, V15, P913, DOI 10.1109/TVCG.2009.182
   Blum T, 2008, INT J COMPUT ASS RAD, V3, P379, DOI 10.1007/s11548-008-0239-0
   Chen C., 2006, Information visualization: Beyond the horizon
   Cook K. A., 2005, Illuminating the path: The research and development agenda for visual analytics
   de Leoni M., 2014, TECHNICAL REPORT
   de Leoni M, 2012, DECIS SUPPORT SYST, V54, P345, DOI 10.1016/j.dss.2012.05.042
   Dix A., 2003, HUM FAC ER
   Anneke Fitzgerald Janna, 2009, J. theor. appl. electron. commer. res., V4, P20
   Gantt H.L., 1903, A.M.S.E, V24, P1322
   Gunther CW, 2007, LECT NOTES COMPUT SC, V4714, P328
   Heer J, 2007, IEEE T VIS COMPUT GR, V13, P1240, DOI 10.1109/TVCG.2007.70539
   Kaster DS, 2005, ENVIRON MODELL SOFTW, V20, P689, DOI 10.1016/j.envsoft.2004.03.014
   Kehrer J, 2013, IEEE T VIS COMPUT GR, V19, P495, DOI 10.1109/TVCG.2012.110
   Keim D, 2001, COMMUN ACM, V44, P38, DOI 10.1145/381641.381656
   Keim D.A., 2006, P EUROGRAPHICSIEEE T, P195
   Keim E.D., 2010, Mastering the information age: Solving problems with visual analytics, eurographics association
   Krstajic M, 2011, IEEE T VIS COMPUT GR, V17, P2432, DOI 10.1109/TVCG.2011.179
   Laney D., 2012, PREDICTS 2013 INFORM
   Li J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2553
   Mans RS, 2008, COMM COM INF SC, V25, P425, DOI 10.1007/978-3-540-92219-3_32
   Monroe M, 2013, IEEE T VIS COMPUT GR, V19, P2227, DOI 10.1109/TVCG.2013.200
   Pechenizkiy M., 2009, Educational Data Mining 2009: 2nd International Conference on Educational Data Mining: proceedings [EDM'09], Cordoba, Spain. July 1-3, P279
   Schönhage B, 2000, IEEE INFOR VIS, P387, DOI 10.1109/IV.2000.859786
   SIMKIN D, 1987, J AM STAT ASSOC, V82, P454, DOI 10.2307/2289447
   Song M., 2007, En Proceedings of the 17th annual workshop on information technologies and systems (wits), P139
   Spence R., 2006, Information visualization: Design for interaction
   Suriadi Suriadi, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P449, DOI 10.1007/978-3-642-38709-8_29
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Dongen BF, 2010, LECT NOTES BUS INF P, V43, P158
   Wang TD, 2009, IEEE T VIS COMPUT GR, V15, P1049, DOI 10.1109/TVCG.2009.187
   Weijters A., 2006, BETA WORKING PAPER S, V166
   Ziegler H., 2007, EUROVIS 2007, P19, DOI 10.2312/VisSym/EuroVis07/019-026
NR 37
TC 10
Z9 10
U1 0
U2 19
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 707
EP 732
DI 10.1007/s10270-014-0432-2
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eichler, C
   Monteil, T
   Stolf, P
   Grieco, LA
   Drira, K
AF Eichler, Cedric
   Monteil, Thierry
   Stolf, Patricia
   Grieco, Luigi Alfredo
   Drira, Khalil
TI Enhanced graph rewriting systems for complex software domains
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Constrained and attributed rewriting systems; Graph rewriting systems;
   Non-functional requirements; Dynamic software architecture; Correctness
   by construction
ID TRANSFORMATION; STYLES
AB Methodologies for correct by construction reconfigurations can efficiently solve consistency issues in dynamic software architecture. Graph-based models are appropriate for designing such architectures and methods. At the same time, they may be unfit to characterize a system from a non-functional perspective. This stems from efficiency and applicability limitations in handling time-varying characteristics and their related dependencies. In order to lift these restrictions, an extension to graph rewriting systems is proposed herein. The suitability of this approach, as well as the restraints of currently available ones, is illustrated, analyzed, and experimentally evaluated with reference to a concrete example. This investigation demonstrates that the conceived solution can (i) express any kind of algebraic dependencies between evolving requirements and properties; (ii) significantly ameliorate the efficiency and scalability of system modifications with respect to classic methodologies; (iii) provide an efficient access to attribute values; (iv) be fruitfully exploited in software management systems; and (v) guarantee theoretical properties of a grammar, like its termination.
C1 [Eichler, Cedric; Monteil, Thierry; Drira, Khalil] CNRS, LAAS, 7 Ave Colonel Roche, F-31400 Toulouse, France.
   [Eichler, Cedric; Stolf, Patricia] IRIT, 118 Route Narbonne, F-31062 Toulouse, France.
   [Eichler, Cedric] Univ Toulouse, UPS, F-31400 Toulouse, France.
   [Monteil, Thierry] Univ Toulouse, INSA, F-31400 Toulouse, France.
   [Stolf, Patricia] Univ Toulouse, UTM, F-31100 Toulouse, France.
   [Grieco, Luigi Alfredo] Politecn Bari, Dept Elect & Informat Engn, Via Orabona 4, I-70125 Bari, Italy.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Toulouse; Universite Toulouse III - Paul Sabatier; Universite de
   Toulouse; Universite Toulouse III - Paul Sabatier; Universite Federale
   Toulouse Midi-Pyrenees (ComUE); Universite de Toulouse; Institut
   National des Sciences Appliquees de Toulouse; Universite de Toulouse;
   Universite de Toulouse - Jean Jaures; Politecnico di Bari
RP Eichler, C (corresponding author), CNRS, LAAS, 7 Ave Colonel Roche, F-31400 Toulouse, France.; Eichler, C (corresponding author), IRIT, 118 Route Narbonne, F-31062 Toulouse, France.
EM ceichler@laas.fr; monteil@laas.fr; stolf@irit.fr;
   alfredo.grieco@poliba.it; drira@laas.fr
RI Drira, Khalil/R-9913-2018; Stolf, Patricia/AAO-8921-2020
OI Stolf, Patricia/0000-0001-5169-1831
FU ANR SOP project [ANR-11-INFR-001]
FX Researches presented in this paper have been partially funded by the ANR
   in the context of SOP project ANR-11-INFR-001.
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], 2000, IEEE Standard 1459-2000, P1, DOI [DOI 10.1109/IEEESTD.2000.91944, 10.1109/IEEESTD.2000.93398, DOI 10.1109/IEEESTD.2000.93398]
   [Anonymous], 1952, INTRO METAMATHEMATIC
   Baleani M, 2005, DES AUT TEST EUROPE, P1044, DOI 10.1109/DATE.2005.105
   Baresi L., 2006, Software and System Modeling, V5, P187
   Ben Alaya M, 2012, IEEE ENABL TECHNOL, P60, DOI 10.1109/WETICE.2012.85
   Bonakdarpour B., 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P108, DOI 10.1109/SIES.2010.5551377
   Borgetto D, 2012, FUTURE GENER COMP SY, V28, P769, DOI 10.1016/j.future.2011.04.018
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Caron E, 2006, INT J HIGH PERFORM C, V20, P335, DOI 10.1177/1094342006067472
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   Ehrig H., 1985, AN EATCS SERIES
   Ehrig H, 2006, FUND INFORM, V74, P31
   Eichler C, 2013, IEEE ENABL TECHNOL, P74, DOI 10.1109/WETICE.2013.45
   Gacek C, 2006, STRUCTURE FOR DEPENDABILITY: COMPUTER-BASED SYSTEMS FROM AN INTERDISCIPLINARY PERSPECTIVE, P127, DOI 10.1007/1-84628-111-3_7
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Gössler G, 2007, LECT NOTES COMPUT SC, V4444, P201
   Hirsch D, 1999, INT FED INFO PROC, V12, P127
   Hirsch Dan., 2000, Electronic Notes in Theoretical Computer Science, V28, P4, DOI DOI 10.1016/S1571-0661(05)80626-7
   Hoffmann B, 2005, LECT NOTES COMPUT SC, V3393, P101
   Kacem M.H., 2005, ICEIS, P189
   Kandé MM, 2000, LECT NOTES COMPUT SC, V1939, P513
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kleene S., 1938, J. Symb. Log., V3, P150, DOI [10.2307/2267778, DOI 10.2307/2267778]
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   Loulou I, 2004, IEEE/ACS INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, PROCEEDINGS, P227
   Lun L., 2010, INT C COMP INT SOFTW, P1
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Mei Rong, 2011, 2011 6th International Conference on Computer Science & Education (ICCSE 2011), P1159, DOI 10.1109/ICCSE.2011.6028839
   Oquendo F., 2006, ACM SIGSOFT SOFTWARE, V31, P1
   Parr T, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P425
   Rodriguez Ismael Bouassida, 2010, International Journal of Autonomic Computing, V1, P226, DOI 10.1504/IJAC.2010.033007
   Saxena P., 2003, P ISPD, P51
   Selonen P., 2003, Software Engineering Notes, V28, P58, DOI 10.1145/949952.940081
   Sharrock Remi, 2011, International Journal of Adaptive, Resilient and Autonomic Systems, V2, P58, DOI 10.4018/jaras.2011010104
   Simalatsar A, 2012, PR IEEE COMP DESIGN, P490, DOI 10.1109/ICCD.2012.6378688
   Tahar BM, 2013, IEEE ENABL TECHNOL, P278, DOI 10.1109/WETICE.2013.31
   Wermelinger M, 2002, SCI COMPUT PROGRAM, V44, P133, DOI 10.1016/S0167-6423(02)00036-9
NR 40
TC 5
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 685
EP 705
DI 10.1007/s10270-014-0433-1
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600005
DA 2024-07-18
ER

PT J
AU Yue, T
   Ali, S
AF Yue, Tao
   Ali, Shaukat
TI Empirically evaluating OCL and Java for specifying constraints on UML
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE OCL; Java; Controlled experiment; Empirical study; Constraints
AB The Object Constraint Language (OCL) has been applied, along with UML models, for various purposes such as supporting model-based testing, code generation, and automated consistency checking of UML models. However, a lot of challenges have been raised in the literature regarding its applicability in industry such as extensive training, slow learning curve, and significant effort to use OCL due to lack of familiarity of practitioners. To confirm these challenges, empirical evidence is needed, which is severely lacking in the literature. To build such preliminary evidence, we report a controlled experiment that was designed to evaluate OCL by comparing it with Java; a programming language that has also been used to specify constraints on UML models. Results show that the participants using OCL perform as good as the participants working with Java in terms of three objective quality metrics (i.e., completeness, conformance and redundancy) and two subjective metrics (i.e., applicability and confidence level). In addition, the participants using OCL performed consistently well for all the constraints of varying complexity, while fluctuating results were obtained for the participants using Java for the same constraints. Based on the empirical evidence, we can conclude that it does not make much difference to use OCL or Java for specifying constraints on UML models. However, the participants working with OCL performed consistently well on specifying constraints of varying complexity suggesting that OCL can be used to model complicated constraints (commonly observed in industrial applications) with the same quality as for simpler constraints. Moreover, additional analyses on the constraints when using Java and OCL tools revealed that tools are needed to specify fully correct constraints that can be used to support automation.
C1 [Yue, Tao; Ali, Shaukat] Certus Software V&V Ctr, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
RP Yue, T (corresponding author), Certus Software V&V Ctr, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM tao@simula.no; shaukat@simula.no
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577
CR Aertryck L.v., 2003, APPROCHES FORMELLES
   Ahrendt W, 2000, LECT NOTES ARTIF INT, V1919, P21, DOI 10.1007/3-540-40006-0_3
   Aichernig B.K., 2005, P 5 INT C QUAL SOFTW
   Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Ali S., 2011, ACM IEEE 14 INT C MO
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Arcuri A., 2011, SPRINGERS LECTURE NO
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Benattou M., 2002, GENERATING TEST DATA
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bordbar B., 2005, IADIS INT C APPL COM
   Briand LC, 2004, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2004.1357823
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Brucker Achim D., 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P334, DOI 10.1007/978-3-642-21210-9_33
   Cabot J., 2008, P 2008 IEEE INT C SO
   Chiorean D., 2010, OCLE
   Clavel M., 2009, P 9 OCL 2009 WORKSH
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Distefano D., 2000, ECOOP WORKSH DEF PRE
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   Egea M., 2010, EYEOCL SOFTWARE
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Hesari S, 2013, S VIS LANG HUM CEN C, P261, DOI 10.1109/RE.2013.6636727
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Krieger M.P., 2010, 9 INT C GEN PROGR CO
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Lefticaru R., 2008, P 2008 INT C SOFTW T
   Li BL, 2007, CIS: 2007 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PROCEEDINGS, P1048, DOI 10.1109/CIS.2007.150
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Storrle H., 2013, 13 INT WORKSH OCL MO, P83
   Strach R., 2013, P 5 INT WORKSH EQ BA
   Weissleder S, 2008, LECT NOTES COMPUT SC, V5002, P151
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
NR 38
TC 7
Z9 7
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 757
EP 781
DI 10.1007/s10270-014-0438-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600008
DA 2024-07-18
ER

PT J
AU Borgström, J
   Huang, SQ
   Johansson, M
   Raabjerg, P
   Victor, B
   Pohjola, JÅ
   Parrow, J
AF Borgstrom, Johannes
   Huang, Shuqin
   Johansson, Magnus
   Raabjerg, Palle
   Victor, Bjorn
   Pohjola, Johannes Aman
   Parrow, Joachim
TI Broadcast psi-calculi with an application to wireless protocols
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Psi-calculus; Broadcast communication; Bisimulation; Ad hoc routing
   protocol
ID MOBILE; NAMES
AB Psi-calculi is a parametric framework for the extensions of pi-calculus, with arbitrary data structures and logical assertions for facts about data. In this paper we add primitives for broadcast communication in order to model wireless protocols. The additions preserve the purity of the psi-calculi semantics, and we formally prove the standard congruence and structural properties of bisimilarity. We demonstrate the expressive power of broadcast psi-calculi by modelling the wireless ad hoc routing protocol LUNAR and verifying a basic reachability property.
C1 [Borgstrom, Johannes; Johansson, Magnus; Raabjerg, Palle; Victor, Bjorn; Pohjola, Johannes Aman; Parrow, Joachim] Uppsala Univ, Dept Informat Technol, Uppsala, Sweden.
   [Huang, Shuqin] Peking Univ, Beijing 100871, Peoples R China.
C3 Uppsala University; Peking University
RP Victor, B (corresponding author), Uppsala Univ, Dept Informat Technol, Uppsala, Sweden.
EM bjorn.victor@it.uu.se
RI Borgström, Johannes/J-4378-2012; Victor, Bjorn/D-2012-2016
OI Victor, Bjorn/0000-0003-0174-9032
CR Abadi M, 2001, ACM SIGPLAN NOTICES, V36, P104, DOI 10.1145/373243.360213
   Aman Pohjola J., 2013, HIGHER ORDER BROADCA
   [Anonymous], 1980, CALCULUS COMMUNICATI, DOI DOI 10.1007/3-540-10235-3
   AUSTRY D, 1984, THEOR COMPUT SCI, V30, P91, DOI 10.1016/0304-3975(84)90067-7
   BENGTSON J, 2010, THESIS UPPSALA U
   Bengtson J, 2011, LOG METH COMPUT SCI, V7, DOI 10.2168/LMCS-7(1:11)2011
   Bengtson J, 2009, IEEE S LOG, P39, DOI 10.1109/LICS.2009.20
   Borgström J, 2011, LECT NOTES COMPUT SC, V7041, P74, DOI 10.1007/978-3-642-24690-6_7
   Codskesen JC, 2010, LECT NOTES COMPUT SC, V6116, P1, DOI 10.1007/978-3-642-13414-2_1
   Ene C, 1999, LECT NOTES COMPUT SC, V1684, P258
   Gabbay M. J., 2002, Formal Aspects of Computing, V13, P341, DOI 10.1007/s001650200016
   Ghassemi F, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P345, DOI 10.1109/SEFM.2008.25
   Godskesen JC, 2007, LECT NOTES COMPUT SC, V4467, P132
   Godskesen JC, 2009, LECT NOTES COMPUT SC, V5521, P106, DOI 10.1007/978-3-642-02053-7_6
   Gutkovas R., 2011, THESIS UPPSALA U
   JOHANSSON M, 2010, THESIS UPPSALA U
   Johansson M, 2012, J LOGIC ALGEBR PROGR, V81, P162, DOI 10.1016/j.jlap.2012.01.001
   Lanese I, 2010, THEOR COMPUT SCI, V411, P1928, DOI 10.1016/j.tcs.2010.01.023
   Merro M, 2009, INFORM COMPUT, V207, P194, DOI 10.1016/j.ic.2007.11.010
   Mezzetti N, 2006, ELECTRON NOTES THEOR, V158, P331, DOI 10.1016/j.entcs.2006.04.017
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   MILNER R, 1983, THEOR COMPUT SCI, V25, P267, DOI 10.1016/0304-3975(83)90114-7
   Nanz S, 2006, THEOR COMPUT SCI, V367, P203, DOI 10.1016/j.tcs.2006.08.036
   Parrow Joachim, 2013, MATH STRUCTURES COMP
   Pitts AM, 2003, INFORM COMPUT, V186, P165, DOI 10.1016/S0890-5401(03)00138-X
   Prasad KVS, 1995, SCI COMPUT PROGRAM, V25, P285, DOI 10.1016/0167-6423(95)00017-8
   PRASAD KVS, 1991, LECT NOTES COMPUT SC, V493, P338
   Raabjerg P., 2011, BROADCAST PSI CALCUL
   Sangiorgi D., 1998, Mathematical Structures in Computer Science, V8, P447, DOI 10.1017/S0960129598002527
   Sangiorgi Davide, 2001, -calculus: A Theory of Mobile Processes
   Singh A, 2010, SCI COMPUT PROGRAM, V75, P440, DOI 10.1016/j.scico.2009.07.008
   Tschudin C., 2004, P NEW2AN 04 ST PET F
   Tschudin C.F, 2004, LIGHTWEIGHT IN PRESS
   Urban C, 2005, LECT NOTES ARTIF INT, V3632, P38
   Wibling O, 2004, LECT NOTES COMPUT SC, V3235, P343
   Wibling O., 2004, SPINO UPPAAL AD HOC
NR 36
TC 12
Z9 12
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 201
EP 216
DI 10.1007/s10270-013-0375-z
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Noroozi, N
   Khosravi, R
   Mousavi, MR
   Willemse, TAC
AF Noroozi, Neda
   Khosravi, Ramtin
   Mousavi, Mohammad Reza
   Willemse, Tim A. C.
TI Synchrony and asynchrony in conformance testing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conformance testing; ioco; Asynchronous conformance testing; Queue
   context; Internal choice implementation
ID INPUT
AB We present and compare different notions of conformance testing based on labeled transition systems. We formulate and prove several theorems which enable using synchronous conformance testing techniques such as input-output conformance testing (ioco ) in order to test implementations only accessible through asynchronous communication channels. These theorems define when the synchronous test cases are sufficient for checking all aspects of conformance that are observable by asynchronous interaction with the implementation under test.
C1 [Noroozi, Neda; Mousavi, Mohammad Reza; Willemse, Tim A. C.] Eindhoven Univ Technol, Dept Comp Sci, NL-5600 MB Eindhoven, Netherlands.
   [Noroozi, Neda] Fanap Corp IT Subsidiary Pasargad Bank, Tehran, Iran.
   [Khosravi, Ramtin] Univ Tehran, Tehran, Iran.
C3 Eindhoven University of Technology; University of Tehran
RP Noroozi, N (corresponding author), Eindhoven Univ Technol, Dept Comp Sci, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM n.noroozi@tue.nl; r.khosravi@ut.ac.ir; m.r.mousavi@tue.nl;
   t.a.c.willemse@tue.nl
RI Mousavi, Mohammad Reza/A-3410-2013; Noroozi, Neda/JPY-1772-2023
OI Mousavi, Mohammad Reza/0000-0002-4869-6794; Willemse,
   Tim/0000-0003-3049-7962
CR Asadi H.R., 2011, LNCS
   Hierons R.M, 2012, COMPUT J IN PRESS
   Jard C, 1999, INT FED INFO PROC, V28, P25
   Noroozi N., 2011, 1110 TU EINDH
   Noroozi N, 2011, LECT NOTES COMPUT SC, V7041, P334, DOI 10.1007/978-3-642-24690-6_23
   Petrenko A, 2003, LECT NOTES COMPUT SC, V2644, P129
   Petrenko A., 2002, FATES 2002 WORKSH CO, P79
   Simao Adenilso, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P1, DOI 10.1109/ICSTW.2010.32
   Simao A, 2011, INFORM SOFTWARE TECH, V53, P1252, DOI 10.1016/j.infsof.2011.06.006
   TRETMANS J, 1992, IFIP TRANS C, V8, P131
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Tretmans J., 1992, THESIS U TWENTE ENSC
   VERHAARD L, 1993, IFIP TRANS C, V11, P55
   Weiglhofer M., 2009, THESIS TU GRAZ
   Weiglhofer M, 2009, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2009.194
   Yannakakis M., 1999, Computer Science Logic. 12th International Workshop, CSL'98. Annual Conference of the EACSL. Proceedings, P29
NR 17
TC 4
Z9 4
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 149
EP 172
DI 10.1007/s10270-012-0302-8
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chiprianov, V
   Kermarrec, Y
   Rouvrais, S
   Simonin, J
AF Chiprianov, Vanea
   Kermarrec, Yvon
   Rouvrais, Siegfried
   Simonin, Jacques
TI Extending enterprise architecture modeling languages for domain
   specificity and collaboration: application to telecommunication service
   design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture framework; Enterprise architecture modeling
   language; Domain-specific modeling language; Language extension;
   Meta-model; Design rationale; Telecommunication service
AB The competitive market forces organizations to be agile and flexible so as to react robustly to complex events. Modeling helps managing this complexity. However, in order to model an enterprise, many stakeholders, with different expertise, must work together and take decisions. These decisions and their rationale are not always captured explicitly, in a standard, formal manner. The main problem is to persuade stakeholders to capture them. This article synthesizes an approach for capturing and using the rationale behind enterprise modeling decisions. The approach is implemented through a domain-specific modeling language, defined as an extension of a standard enterprise architecture modeling language. It promotes coordination, enables presenting different stakeholders' points of view, facilities participation and collaboration in modeling activities-activities focused here on enterprise architecture viewpoints. To present its benefits, such as rapid prototyping, the approach is applied to large organizations in the context of telecommunication service design. It is exemplified on modeling and capturing decisions on a conference service.
C1 [Chiprianov, Vanea; Kermarrec, Yvon; Rouvrais, Siegfried; Simonin, Jacques] Univ Europeenne Bretagne, Telecom Bretagne, Inst Mines Telecom, Brest 3, France.
   [Chiprianov, Vanea; Kermarrec, Yvon; Simonin, Jacques] CNRS, UMR 6285, Lab STICC, Brest 9, France.
   [Rouvrais, Siegfried] IRISA, Rennes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Universite de Bretagne
   Occidentale; Universite de Bretagne Occidentale; Centre National de la
   Recherche Scientifique (CNRS); Universite de Rennes
RP Chiprianov, V (corresponding author), Univ Europeenne Bretagne, Telecom Bretagne, Inst Mines Telecom, Technopole Brest Iroise CS 83818 29238, Brest 3, France.
EM vanea.chiproanov@telecom-bretagne.eu
RI Chiprianov, Vanea/E-8335-2010
CR 3GPP, 2010, 23228 TS 3GPP
   [Anonymous], 14712000 IEEE COMP S
   [Anonymous], 2006, 19439 ISO
   [Anonymous], 2009, TOGAF VERS 9
   [Anonymous], 157042000 ISO
   Barjis J, 2009, LECT NOTES BUS INF P, V24, P651
   Berrisford G., 2009, USING ARCHIMATE TOGA
   Bertin E., 2009, THESIS PIERRE MARIE
   Bigaret S., 2010, 25 MIN EURO C UNC RO
   Booch G., 2005, The Unified Modeling Language User Guide
   Boucharas V, 2010, LECT NOTES BUS INF P, V70, P1
   Bouyssou D, 2006, INT SER OPER RES MAN, V86, P1
   Ceh I, 2011, COMPUT SCI INF SYST, V8, P317, DOI 10.2298/CSIS101231019C
   Chen D, 2008, COMPUT IND, V59, P647, DOI 10.1016/j.compind.2007.12.016
   Chen YJ, 2008, COMPUT IND, V59, P395, DOI 10.1016/j.compind.2007.10.001
   Chiprianov V., 2011, ICSEA 6 INT C SOFTW, P557
   Chiprianov V., 2011, 9 ENT ENG TRACK 27 A, V2, P1661
   Chiprianov V., 2011, P JOURN NAT ING DIR, P85
   Chiprianov V., 2010, FLEXITOOLS 2010 32 I
   Chiprianov V, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 1, P23
   Clark T., 2001, WS LANGUAGE DESCRIPT
   Dutoit AH, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P1
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Fatolahi A, 2006, INFORM SYST FRONT, V8, P133, DOI 10.1007/s10796-006-7977-8
   Hallstrand J., 1994, Towards a Pan-European Telecommunication Service Infrastructure - IS&N '94. Second International Conference on Intelligence in Broadband Services and Networks. Proceedings, P17, DOI 10.1007/BFb0013394
   He X, 2007, P INT COMP SOFTW APP, P219
   ISO/IEC, 2007, 42010 ISO IEC FDIS
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Jonkers H, 2006, INFORM SYST FRONT, V8, P63, DOI 10.1007/s10796-006-7970-2
   Jonkers H, 2004, INT J COOP INF SYST, V13, P257, DOI 10.1142/S0218843004000985
   Jonkers H., 2010, TECHNICAL REPORT
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Könemann P, 2010, LECT NOTES COMPUT SC, V6285, P246, DOI 10.1007/978-3-642-15114-9_19
   Könemann P, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P297, DOI 10.1109/WICSA.2009.5290824
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Lochmann H., 2009, SOFTWARE ENG
   MacLean A., 1996, Design Rationale: Concepts, Techniques, and Use, V1st, P53
   Mahmood Z, 2006, Managing Information in the Digital Economy: Issues & Solutions, P216
   Malavolta Ivano, 2011, Software Engineering for Resilient Systems. Proceedings Third International Workshop (SERENE 2011), P63, DOI 10.1007/978-3-642-24124-6_6
   Mallet J, 2008, LECT NOTES COMPUT SC, V5281, P55, DOI 10.1007/978-3-540-87879-7_4
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Niemi E, 2006, INTERNET & INFORMATION SYSTEMS IN THE DIGITAL AGE: CHALLENGES AND SOLUTIONS, P161
   Quartel D, 2009, IEEE INT ENTERP DIST, P3, DOI 10.1109/EDOC.2009.22
   Schöenherr M, 2009, LECT NOTES COMPUT SC, V5472, P400, DOI 10.1007/978-3-642-01247-1_40
   Sessions R., 2007, TECHNICAL REPORT
   Simonin J., 2011, INT J ADV SOFTWARE, V4, P117
   Simonin J, 2008, IEEE INT ENTERP DIST, P279, DOI 10.1109/EDOC.2008.12
   The Open Group, 2009, ARCHIMATE 1 O SPEC
   Urbaczewski L., 2006, Issues Inf Syst, V7, P18, DOI [DOI 10.48009/2IIS, DOI 10.48009/2IIS200618-23]
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Wolf T., 2008, RATIONALE BASED UNIF
   Zalewski A, 2011, LECT NOTES COMPUT SC, V6903, P83, DOI 10.1007/978-3-642-23798-0_9
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
NR 53
TC 10
Z9 12
U1 0
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 963
EP 974
DI 10.1007/s10270-012-0298-0
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600004
DA 2024-07-18
ER

PT J
AU de Kinderen, S
   Gaaloul, K
   Proper, HA
AF de Kinderen, Sybren
   Gaaloul, Khaled
   Proper, Henderik A.
TI Bridging value modelling to ArchiMate via transaction modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE ArchiMate; e(3)value; DEMO; Meta model; Model transformation
AB The ArchiMate modelling language provides a coherent and a holistic view of an enterprise in terms of its products, services, business processes, actors, business units, software applications and more. Yet, ArchiMate currently lacks (1) expressivity in modelling an enterprise from a value exchange perspective, and (2) rigour and guidelines in modelling business processes that realize the transactions relevant from a value perspective. To address these issues, we show how to connect e value, a technique for value modelling, to ArchiMate via transaction patterns from the DEMO methodology. Using ontology alignment techniques, we show a transformation between the meta models underlying e value, DEMO and ArchiMate. Furthermore, we present a step-wise approach that shows how this model transformation is achieved and, in doing so, we also show the of such a transformation. We exemplify the transformation of DEMO and e value into ArchiMate by means of a case study in the insurance industry. As a proof of concept, we present a software tool supporting our transformation approach. Finally, we discuss the functionalities and limitations of our approach; thereby, we analyze its and practical applicability.
C1 [de Kinderen, Sybren; Gaaloul, Khaled; Proper, Henderik A.] Publ Res Ctr Henri Tudor, L-1855 Luxembourg, Luxembourg.
   [Proper, Henderik A.] Radboud Univ Nijmegen, iCIS, NL-6500 GL Nijmegen, Netherlands.
C3 Radboud University Nijmegen
RP de Kinderen, S (corresponding author), Publ Res Ctr Henri Tudor, L-1855 Luxembourg, Luxembourg.
EM sybren.dekinderen@tudor.lu
RI Proper, Henderik/AAB-2831-2021
OI Proper, Henderik/0000-0002-7318-2496
FU Fonds National de la Recherche Luxembourg
FX This work has been partially sponsored by the Fonds National de la
   Recherche Luxembourg (http://www.fnr.lu), via the CORE and PEARL
   programmes.
CR [Anonymous], ARCHISURANCE CASE ST
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Cummins JD, 2006, J RISK INSUR, V73, P359, DOI 10.1111/j.1539-6975.2006.00180.x
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Kinderen S., 2010, THESIS VU U AMSTERDA
   de Kinderen S, 2012, LECT NOTES BUS INF P, V113, P270
   de Kinderen S, 2012, LECT NOTES BUS INF P, V103, P125
   Derzsi Z., 2008, P 41 ANN HAW INT C S, P492
   Devedzic V., 2002, COMMUN ACM, V45, P136, DOI DOI 10.1145/505248.506002
   Dietz J.L. G., 2006, ENTERPRISE ONTOLOGY
   Dietz JLG, 2006, COMMUN ACM, V49, P59
   Falconer SeanM., 2007, The Second International Workshop on Ontology Matching at ISWC 07 + ASWC 07, P113
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   Gordijn J., 2005, 18 BLED ECONFERENCE
   Happel H, 2006, 2 INT WORKSH SEM WEB
   Iacob M.E., 2012, ArchiMate 2.0 Specification
   Jonkers H, 2004, INT J COOP INF SYST, V13, P257, DOI 10.1142/S0218843004000985
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   Klein M, 2001, WORKSH ONT INF SHAR, V1, P4
   Kort C., 2007, HDB ONTOLOGIES BUSIN
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Lankhorst M., 2004, ARCHIMATE LANGUAGE P
   LANKHORST M, 2005, COMMUNICATION ANAL
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Lankhorst M. M., 2004, VIEWPOINTS FUNCTIONA
   Levendovszky T, 2002, LECT NOTES COMPUT SC, V2319, P166
   *OBJ MAN GROUP, 2004, UML 2 0 SUP SPEC
   Op't Land M., 2007, 4 DUTCH CHAMPIONSHIP
   Pijpers Vincent., 2009, International Journal of Computer Science Applications, V6, P59
   Russell N., 2006, APCCM 06, P95
   Shvaiko P, 2008, LECT NOTES COMPUT SC, V5332, P1164
   van Amstel M. F., 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P69, DOI 10.1109/COMPSACW.2010.22
   Van der Roest HG, 2008, ST HEAL T, V137, P210
   Vignaga A., 2009, Metrics for measuring atl model transformations
   Winograd T., 1987, Human-Computer Interaction, V3, P3, DOI 10.1207/s15327051hci0301_2
   Zivkovic S., 2007, P 15 EUR C INF SYST, P2038
NR 36
TC 12
Z9 13
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1043
EP 1057
DI 10.1007/s10270-012-0299-z
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600008
DA 2024-07-18
ER

PT J
AU Gholami, MF
   Sharifi, M
   Jamshidi, P
AF Gholami, Mahdi Fahmideh
   Sharifi, Mohsen
   Jamshidi, Pooyan
TI Enhancing the OPEN Process Framework with service-oriented method
   fragments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service-oriented software development; OPEN Process Framework; OPF
   repository; Method fragment; Situational method engineering
ID METHOD ENGINEERING APPROACH; OF-THE-ART; SOFTWARE; DESIGN; TROPOS;
   LEGACY; WEB
AB Service orientation is a promising paradigm that enables the engineering of large-scale distributed software systems using rigorous software development processes. The existing problem is that every service-oriented software development project often requires a customized development process that provides specific service-oriented software engineering tasks in support of requirements unique to that project. To resolve this problem and allow situational method engineering, we have defined a set of method fragments in support of the engineering of the project-specific service-oriented software development processes. We have derived the proposed method fragments from the recurring features of 11 prominent service-oriented software development methodologies using a systematic mining approach. We have added these new fragments to the repository of OPEN Process Framework to make them available to software engineers as reusable fragments using this well-known method repository.
C1 [Gholami, Mahdi Fahmideh; Sharifi, Mohsen] Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
   [Jamshidi, Pooyan] Dublin City Univ, Sch Comp, Lero Irish Software Engn Res Ctr, Dublin 9, Ireland.
C3 Iran University Science & Technology; Dublin City University
RP Sharifi, M (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
EM m.fahmideh@comp.iust.ac.ir; msharifi@iust.ac.ir;
   pooyan.jamshidi@computing.dcu.ie
RI Fahmideh/AAH-7234-2021; Sharifi, Mohsen/S-9531-2018; Jamshidi,
   Pooyan/K-2848-2014
OI Fahmideh/0000-0001-7196-7217; Sharifi, Mohsen/0000-0003-4992-2500;
   Jamshidi, Pooyan/0000-0002-9342-0703
FU Science Foundation Ireland [10/CE/I1855]
FX We dearly thank Professor Brian Henderson-Sellers for his valuable
   comments on our research work. Only the third author's contribution to
   the research reported in this paper has been supported, in part, by the
   Science Foundation Ireland grant 10/CE/I1855 to Lero - the Irish
   Software Engineering Research Centre (www.lero.ie)
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Allen P., 2007, CBDI J
   Almonaies A., 2010, International Workshop on SOA Migration and Evolution, P53
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   Andrews T., 2002, BUSINESS PROCESS EXE
   [Anonymous], 2005, METHODOLOGY SERVICE
   [Anonymous], SERVICE ORIENTED UNI
   [Anonymous], 24744 ISOIEC
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], CHALLENGES STRATEGIE
   [Anonymous], 2 EUR YOUNG RES WORK
   [Anonymous], INTELLIGENT AGENT SO
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B., 1981, SOFTWARE ENG EC, V37
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Business Process Modeling Initiative, BUS PROC MOD LANG
   Canfora G, 2008, J SYST SOFTWARE, V81, P463, DOI 10.1016/j.jss.2007.06.006
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P23
   Chang SH, 2007, LECT NOTES COMPUT SC, V4589, P374
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Erl T, 2005, SERVICE ORIENTED ARC
   Erradi A, 2006, P IEEE I C SERV COMP, P151, DOI 10.1109/SCC.2006.97
   Fahmideh M., 2011, 2 INT C SOFTW ENG CO
   Fahmideh M., 2011, P 5 IEEE INT C RES C
   Fahmideh M., 2010, 12 INT C COMP MOD SI, V122-130
   Firesmith D., 1997, OPEN MODELING LANGUA, P276
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO
   Garlan D., 2000, PROC 22 INT C SOFTWA, DOI DOI 10.1145/336512.336537
   Gholami M. F., 2010, Proceedings 2010 UKSim 4th European Modelling Symposium on Computer Modelling and Simulation (EMS 2010), P75, DOI 10.1109/EMS.2010.24
   GRAHAM I, 1997, OPEN PROCESS SPECIFI, P314
   Graham I., 1995, MIGRATING OBJECT TEC
   Graham S., 2005, BUILDING WEB SERVICE, V2nd
   Gu Q, 2011, SERV ORIENTED COMPUT, V5, P203, DOI 10.1007/s11761-011-0080-0
   Haire B, 2001, P INT COMP SOFTW APP, P383, DOI 10.1109/CMPSAC.2001.960643
   Han TD, 2008, DECIS SUPPORT SYST, V45, P665, DOI 10.1016/j.dss.2007.12.004
   Harmsen A.F., 1994, METHODS ASS TOOLS IN, P169
   Henderson-Sellers B, 2007, INFORM SOFTWARE TECH, V49, P761, DOI 10.1016/j.infsof.2006.08.003
   Henderson-Sellers B, 2002, INT FED INFO PROC, V103, P9
   Henderson-Sellers B., 2004, P 7 AS PAC SOFTW ENG, P436
   Henderson-Sellers B., 2001, COMPONENT BASED SOFT, P321
   Henderson-Sellers B., 2011, IFIP WG8 1 IN PRESS
   Henderson-Sellers B., 2003, PERFORMANCE DESIGN, P171
   Henderson-Sellers B., 1998, OPEN TOOLBOX TECHNIQ
   Henderson-Sellers B., 2007, CUTTER IT J, V20, P61
   Henderson-Sellers B., 2003, P 1 INT C AG BAS TEC, P14
   Henderson-Sellers B, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P479, DOI 10.1109/ASWEC.2008.67
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   HENDERSONSELLER.B, 1994, BOOK 2 OBJECT ORIENT, P594
   Johnston S., UML 2 0 PROFILE SOFT
   Keith M., 2008, SOMA RUP RMC RIGHT C
   Kenzi A, 2009, 2009 IEEE/ACS INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, VOLS 1 AND 2, P404, DOI 10.1109/AICCSA.2009.5069357
   Lane S., 2010, INF SOFTW TECHNOL, DOI [10.1016/j.infsof.2010.12.005, DOI 10.1016/J.INFS0F.2010.12.005]
   LEYMANN F, 2001, WEB SERVICE FLOW LAN
   Low G, 2010, J OBJECT TECHNOL, V9, P93, DOI 10.5381/jot.2010.9.4.a5
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Meier F., 2006, THESIS
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Nguyen V P., 2003, Procs. 7th IASTED SEA Conference, P691
   Nguyen V.P., 2003, P 16 INT C SOFTW SYS
   Object Management Group, 2000, MDA GUIDE VERSION 1
   OMG, 2001, OMG DOC FORM 01 09 6
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Penserini L, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1293731.1293736
   Perepletchikov M., 2007, COHESION METRICS PRE, P328
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pressman R., 2005, SOFTWARE ENG PRACTIT, P388
   Purao S., 1997, P 7 WORKSH INF TECHN, P180
   Ralyte J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P267
   Ralyte J, 2004, PROCEEDINGS OF THE THIRTEENTH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS DEVELOPMENT: ADVANCES IN THEORY, PRACTICE AND EDUCATION, P271
   Ralyte J., 2001, Procs. 20th International Conf erence Conceptual Modelling (ER2001), V2224, P471
   Ralyte J., 2007, P IFIP WG 8 1 WORK C, V244
   Ramsin R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322435
   RAO J, 2004, P 1 INT WORKSH SEM W
   Rational S., 2007, ROLE SOA QUALITY MAN
   Saeki M., 2003, WORKSH ENG METH SUPP
   Serour M.K., 2002, ROLE ORG CULTURE ADO, P76
   Serour MK, 2002, LECT NOTES COMPUT SC, V2425, P229
   Sneed H.M., 2005, TECHNICAL REPORT
   Stroulia E, 2002, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2002.1167788
   ter Beek MH, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P613, DOI 10.1145/1368088.1368173
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   Tsai WT, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P3, DOI 10.1109/SOSE.2005.34
   Welke R.J., 1992, SYSTEMS ANAL DESIGN, P257
   Zimmermann O., 2004, ELEMENTS SERVICE ORI
NR 90
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 361
EP 390
DI 10.1007/s10270-011-0222-z
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000017
DA 2024-07-18
ER

PT J
AU Stefanescu, A
   Wieczorek, S
   Schur, M
AF Stefanescu, Alin
   Wieczorek, Sebastian
   Schur, Matthias
TI Message choreography modeling A domain-specific language for consistent
   enterprise service integration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain specific modeling languages; Message choreography models; Service
   choreography; Enterprise SOA
AB Service-based applications are based on modern architectures that require careful design of interfaces and protocols to allow smooth integration of service components. These design artifacts are not only useful for implementation, but could also be used for the derivation of integration tests. In order to be applied in these different activities of the development process, they have to conform to existing requirements and other specifications at different architectural levels. In addition, their internal consistency has to be ensured. In this paper, we present an approach to service integration based on a domain-specific language for service choreographies. We first explain the motivation for our work by defining the industrial context that led to the definition of a domain-specific choreography language, called message choreography modeling (MCM). We then provide syntax and semantics for MCM, together with suitable methods for ensuring its consistency. Finally, we report on our experience in applying the described language in practice.
C1 [Stefanescu, Alin] Univ Pitesti, Pitesti, Romania.
   [Wieczorek, Sebastian; Schur, Matthias] SAP Res, Darmstadt, Germany.
C3 National University of Science & Technology POLITEHNICA Bucharest;
   University of Pitesti; SAP
RP Stefanescu, A (corresponding author), Univ Pitesti, Pitesti, Romania.
EM alin.stefanescu@upit.ro; Sebastian.Wieczorek@sap.com;
   Matthias.Schur@sap.com
RI Stefanescu, Alin/B-8580-2012; Stefanescu, Alin/GVT-2423-2022
OI Stefanescu, Alin/0000-0002-8418-2643
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J-R., 1996, The B Book
   [Anonymous], 2006, MET FAC MOF COR SPEC
   Decker G, 2007, LECT NOTES COMPUT SC, V4714, P305
   Decker G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P296
   Forrester, 2008, ENT SMB SOFTW SURV N
   Heffner R., 2011, 59058 FORR
   Honda K, 1998, LECT NOTES COMPUT SC, V1381, P122, DOI 10.1007/BFb0053567
   Honda K, 2008, ACM SIGPLAN NOTICES, V43, P273, DOI 10.1145/1328897.1328472
   Honda K, 2011, LECT NOTES COMPUT SC, V6536, P55, DOI 10.1007/978-3-642-19056-8_4
   Karna J., 2009, 9th OOPSLA Workshop on Domain-Specific Modeling (DSM'09), P14
   Katker S., 2009, Business Services: Konzepte, Technologien, Anwendungen, 9, V1, P171
   Kelly S., 2008, Domain-Specific Modeling
   Kozyura Vitaly, 2009, Proceedings of the 2009 Fourth South-East European Workshop on Formal Methods. Formal Methods for Web Services, Formal Methods for Agent-Based Systems (SEEFM 2009), P10, DOI 10.1109/SEEFM.2009.12
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   McNeile A, 2010, SERV ORIENTED COMPUT, V4, P109, DOI 10.1007/s11761-010-0060-9
   Motwani R, 2007, INTRO AUTOMATA THEOR, Vthird
   OASIS, 2007, WEB SERV REL MESS
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Safa L., 2007, P 7 OOPSLA WORKSH DO, P21
   Schur M., 2009, THESIS HOCHSCHULE KA
   Skogan D, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P47, DOI 10.1109/EDOC.2004.1342504
   Stefanescu A, 2009, LECT NOTES COMPUT SC, V5562, P313, DOI 10.1007/978-3-642-02674-4_23
   Utting M., 2007, PRACTICAL MODEL BASE
   VANGLABBEEK RJ, 1990, LECT NOTES COMPUT SC, V469, P309
   Varró D, 2002, LECT NOTES COMPUT SC, V2505, P378
   W3C, 2004, WEB SERV CHOR DESCR
   W3C, 2004, WEB SERV ARCH
   Wei W., 2010, P INT WORKSH AUT VER, V35, P1
   Wieczorek Sebastian, 2008, 2008 IEEE International Symposium on Service-Oriented System Engineering, P148, DOI 10.1109/SOSE.2008.43
   Wieczorek S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P292, DOI 10.1109/QUATIC.2010.49
   Wieczorek S, 2009, LECT NOTES COMPUT SC, V5826, P179, DOI 10.1007/978-3-642-05031-2_12
   Wieczorek S, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P11, DOI 10.1109/WICSA.2009.5290787
   Woods D.Mattern., 2006, Enterprise SOA: Designing IT for Business Innovation
   Zaha JM, 2006, LECT NOTES COMPUT SC, V4275, P145
   Zhang J, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P420, DOI 10.1109/ICWS.2004.1314766
NR 38
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 9
EP 33
DI 10.1007/s10270-012-0272-x
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000003
DA 2024-07-18
ER

PT J
AU Muller, PA
   Fondement, F
   Baudry, B
   Combemale, B
AF Muller, Pierre-Alain
   Fondement, Frederic
   Baudry, Benoit
   Combemale, Benoit
TI Modeling modeling modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model; Metamodel; Notation; Representation
AB Model-driven engineering and model-based approaches have permeated all branches of software engineering to the point that it seems that we are using models, as MoliSre's Monsieur Jourdain was using prose, without knowing it. At the heart of modeling, there is a relation that we establish to represent something by something else. In this paper we review various definitions of models and relations between them. Then, we define a canonical set of relations that can be used to express various kinds of representation relations and we propose a graphical concrete syntax to represent these relations. We also define a structural definition for this language in the form of a metamodel and a formal interpretation using Prolog. Hence, this paper is a contribution towards a theory of modeling.
C1 [Muller, Pierre-Alain; Fondement, Frederic] Univ Haute Alsace, Mulhouse, France.
   [Baudry, Benoit] INRIA Rennes Bretagne Atlantique, Rennes, France.
   [Combemale, Benoit] Univ Rennes 1, Rennes, France.
C3 Universites de Strasbourg Etablissements Associes; Universite de
   Haute-Alsace (UHA); Universite de Rennes; Universite de Rennes
RP Muller, PA (corresponding author), Univ Haute Alsace, Mulhouse, France.
EM pierre-alain.muller@uha.fr; frederic.fondement@uha.fr;
   benoit.baudry@inria.fr; benoit.combemale@irisa.fr
CR [Anonymous], MOD DRIV ARCH
   [Anonymous], 1993, Informationstechnologie und Gesellschaft: Einfuhrung in die Angewandte Informatik
   Bezivin J., 2001, ASE AUT SOFTW ENG
   Bezivin J., 2004, NOVATICA J       MAR
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Favre J.- M., 2004, P WORKSH SOFTW EV TR
   FAVRE JM, 2004, DAGST SEM 04101 LANG
   FOKKINGA MM, 1994, GENTLE INTRO CATEGOR
   Fowler M., 1999, UML distilled, object oriented series
   Gasevic D, 2007, LECT NOTES COMPUT SC, V4735, P91
   Hesse W., 2006, Software and Systems Modeling, V5, P387, DOI [10.1007/s10270-006-0033-9, DOI 10.1007/S10270-006-0033-9]
   JACKSON M, 2002, SOFTWARE SYSTEMS MOD, V1, P5
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kuhne T., 2006, SOSYM, V5
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   MOLIERE, 1607, BOURGEOIS GENTILHOMM
   Muller PA, 2009, LECT NOTES COMPUT SC, V5795, P2, DOI 10.1007/978-3-642-04425-0_2
   Rabelais F., 1532, HORRIBLES EPOUVANTAB
   Rothenberg J., 1989, AI, Simulation Modeling, P75
   Seidewitz E, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1231147
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SHANNON CE, 1949, P IRE, V37, P10, DOI 10.1109/JRPROC.1949.232969
   Stachowiak H., 1973, ALLGEMEINE MODELLTHE
   Venn J., 1880, Dublin Philosophical Magazine and Journal of Science, V10, P1, DOI DOI 10.1080/14786448008626877
   Yu E. S. K., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P159, DOI 10.1109/ICSE.1994.296775
NR 26
TC 15
Z9 16
U1 8
U2 25
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 347
EP 359
DI 10.1007/s10270-010-0172-x
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Micskei, Z
   Waeselynck, H
AF Micskei, Zoltan
   Waeselynck, Helene
TI The many meanings of UML 2 Sequence Diagrams: a survey
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Sequence diagrams; Semantics
ID SEMANTICS
AB Scenario languages are widely used in software development. Typical usage scenarios, forbidden behaviors, test cases, and many more aspects can be depicted with graphical scenarios. Scenario languages were introduced into the Unified Modeling Language (UML) under the name of Sequence Diagrams. The 2.0 version of UML changed Sequence Diagrams significantly and the expressiveness of the language was highly increased. However, the complexity of the language (and the diversity of the goals Sequence Diagrams are used for) yields several possible choices in its semantics. This paper collects and categorizes the semantic choices in the language, surveys the formal semantics proposed for Sequence Diagrams, and presents how these approaches handle the various semantic choices.
C1 [Micskei, Zoltan] Budapest Univ Technol & Econ, H-1111 Budapest, Hungary.
   [Waeselynck, Helene] CNRS, LAAS, F-31077 Toulouse, France.
   [Waeselynck, Helene] Univ Toulouse, INSA, INP, ISAE,LAAS,UPS, F-31077 Toulouse, France.
C3 Budapest University of Technology & Economics; Centre National de la
   Recherche Scientifique (CNRS); Universite Federale Toulouse
   Midi-Pyrenees (ComUE); Universite de Toulouse; Institut National
   Polytechnique de Toulouse; Institut National des Sciences Appliquees de
   Toulouse; Centre National de la Recherche Scientifique (CNRS); CNRS -
   Institute of Physics (INP); Institut Superieur de l'Aeronautique et de
   l'Espace (ISAE-SUPAERO); Universite Toulouse III - Paul Sabatier
RP Micskei, Z (corresponding author), CNRS, LAAS, 7 Ave Colonel Roche, F-31077 Toulouse, France.
EM micskeiz@mit.bme.hu; waeselyn@laas.fr
RI Micskei, Zoltan/G-8351-2012
OI Micskei, Zoltan/0000-0003-1846-261X; Waeselynck,
   Helene/0009-0007-3103-9329
FU ReSIST Network of Excellence [IST 026764]; European Union under the
   Information Society
FX This work was partially supported by the ReSIST Network of Excellence
   (IST 026764) funded by the European Union under the Information Society
   Sixth Framework Programme.
CR [Anonymous], THESIS U OSLO
   [Anonymous], P 6 INT WORKSH SCEN
   BOWLES JKF, 2006, 11 INT C ALG METH SO, P189, DOI DOI 10.1007/11784180
   BROY M, 2008, 200806 TU BRAUNSCHW
   Cavarra A, 2004, LECT NOTES COMPUT SC, V3052, P62
   CAVARRA A, 2004, P SEM FDN ENG DES LA
   CENGARLE M, 2005, TUMI0505 I INF
   CENGARLE M, 2008, TUMI0808 I INF
   Cengarle M.V., 2007, METHODS MODELLING SO
   Cengarle MV, 2006, ELECTRON NOTES THEOR, V160, P141, DOI 10.1016/j.entcs.2006.05.020
   Cengarle MariaVictoria., 2004, Proc. 3rd Int. Wsh. Critical Systems Development with UML, P85
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Dan H, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P173, DOI 10.1109/SEFM.2007.19
   EICHNER C, 2005, SDL2005 MODEL DRIVEN
   Grosu R, 2005, ACSD2005: FIFTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P6, DOI 10.1109/ACSD.2005.31
   Hallal HH, 2006, FORM ASP COMPUT, V18, P63, DOI 10.1007/s00165-005-0082-8
   Hammal Y, 2006, LECT NOTES COMPUT SC, V4229, P259
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   HAREL D, 2007, P INT C FUND APPR SO, P121
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Haugen O., 2005, SOFTW SYST MODEL, V4, P355
   HAUGEN O, 309 U OSL
   *INT TEL UN, 2004, REC Z 120 MESS SEQ C
   Kang K.C., 1990, CMUSEI90TR021
   KLOSE J, 2003, THESIS CVO U OLDENBU
   Knapp A., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P42
   Küster-Filipe J, 2006, THEOR COMPUT SCI, V351, P203, DOI 10.1016/j.tcs.2005.09.068
   Lund M S., 2008, THESIS U OSLO
   LUND MS, 2006, 14 INT S FORM METH F, P380
   Micskei Z, 2008, 08389 LAAS
   Mooij AJ, 2005, LECT NOTES COMPUT SC, V3442, P273, DOI 10.1007/978-3-540-31984-9_21
   Muscholl A, 2005, LECT NOTES COMPUT SC, V3466, P43
   *OBJ MAN GROUP, 1997, AD970811 OBJ MAN GRO
   *OBJ MAN GROUP, 2009, FORMAL090202 OBJ MAN
   *OBJ MAN GROUP, 2005, FORMAL050707 OBJ MAN
   PICKIN S, 2004, 4 INT C INT FORM MET, P481
   PICKIN S, 2003, THESIS U RENNES FRAN
   RUNDE RK, 2005, NORSK INFORMATIKKONF, P55
   SELIC B, 2004, SFM, P181
   Sengupta B, 2006, IEEE T SOFTWARE ENG, V32, P587, DOI 10.1109/TSE.2006.82
   SHEN H, 2008, HIGH ASS SYST ENG S, P437
   SHEN H, 2008, CSTR200813 U TEX
   Störrle H, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P129
   STORRLE H, 2003, WORKSH CRIT SYST DEV, P79
   Storrle H., 2004, Trace Semantics of Interactions in UML 2.0
   WAESELYNCK H, 2008, REFINED DESIGN TESTI
NR 46
TC 52
Z9 56
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 489
EP 514
DI 10.1007/s10270-010-0157-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200005
DA 2024-07-18
ER

PT J
AU Mahr, B
AF Mahr, Bernd
TI Information science and the logic of models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
C1 [Mahr, Bernd] TU Berlin, Soc Friends, Berlin, Germany.
   [Mahr, Bernd] TU Berlin H C3 Res Initiat, Integrated Grad Program, Berlin, Germany.
   [Mahr, Bernd] Berlin Govt & Adm, Berlin, Germany.
C3 Technical University of Berlin; Technical University of Berlin
EM mahr@cs.tu-berlin.de
CR ALBERTI LB, 1450, ART BUILDING 10 BOOK, P33
   [Anonymous], 2008, VISUELLE MODELLE
   [Anonymous], 1999, MODELS MEDIATORS
   [Anonymous], 1995, GESCH ARCHITEKTURTHE
   [Anonymous], 2008, Modelle
   [Anonymous], 1935, ENTSTEHUNG ENTWICKLU
   [Anonymous], 1979, VETENSKAPLIGA REVOLU
   *BERL BRAND AK WIS, 2005, MOD DENK
   BREDEKAMP H, 2005, MODELLE DENKENS, P13
   BROY M, 2007, MODULARE HIERARCHISC, P3
   Cleave J.P., 1991, A Study of Logics
   DAVINCI L, 2003, PROPORTIONAL SKETCH, V228, P393
   de Chadarevian Soraya., 2004, Models: The Third Dimension of Science
   Dirks Ulrich., 2008, Modelle
   Durer A., 1538, UNTERWEYSUNG MESSUNG
   EILERS F, 2008, THESIS TU BERLIN
   FLUGGE M, 2008, THESIS TU BERLIN
   GOODMAN N, 1995, SPRACHEN KUNST, P164
   Grossmann Reinhardt., 1992, The Existence of the World: An Introduction to Ontology
   Hart Vaughn., 1998, Paper Palaces: The Rise of the Renaissance Architectural Treatise, P297
   HERTZ H, 1894, PRINZIPIEN MECH EINE, P199
   Hesse M, 2006, GYMNASIUM, V113, P82
   Hesse M., 1963, Models and Analogies in Science
   HOARE CAR, 2001, ACTA INFORM, V1, P271
   HODGES A, 1985, ALAN TURING ENIGMA I, P96
   HUSSERL E, 1982, KRISIS EUROPAISCHEN, P35
   KNELL H, 1985, VITRUVS ARCHITEKTURT, P88
   KUHN TS, 1974, ENTSTEHUNG NEUEN STU, P389
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   MAHR B, 2007, STIL WISSENSCHAFTEN, P61
   MAHR B, 2008, MATHESIS GRAPHE, P87
   MAHR B, 2004, BILD SCHRIFT ZAHL, P59
   MAHR B, 1997, 141 KIT TU BERL
   MAHR B, 2006, 151 KIT TU BERL
   Mahr Bernd., 2004, SCI FICTION BER GEDA, P161
   Mittelstrass, 2005, MODELLE DENKENS, P65
   Muller R., 1983, MODELLE KONSTRUKTION, P17
   Nygaard K., 1981, HIST PROGRAMMING LAN, P439
   PUTMAN JR, 2001, ARCHITECTING RM ODP, P32
   QUATRANI T, 1998, VISUAL MODELING RATI, P3
   REISIG W, 2006, INFORM AKTUELLE THEM, P276
   SALMON WC, 1983, LOGIK, P7
   SANDKUHLER HJ, 1999, ENZYKLOPADIE PHILOS, V2, P854
   SCHNABEL U, 2008, 37 DIE ZEIT
   Stachowiak H., 1973, ALLGEMEINE MODELLTHE
   Suppes P., 1961, CONCEPT ROLE MODEL M, P163
   TARSKI A, 1935, ACT C INT PHIL SCI L, V7
   THIEL M, 1965, STUDIUM GENERALE Z E, V18
   *TINA CONS, 1997, TINA BUS MOD REF POI, P3
   Twardowski Kasimir., 1894, Zur Lehre vom Inhalt und Gegenstand der Vorstellungen
   VONFREUDENTHAL H, 1961, P C REID DORDR
   WENDLER R, 2008, THESIS HUMBOLDT U BE
   WIECZOREK T, 2009, THESIS TU BERLIN
   WITTGENSTEIN L, 1967, PHILOS UNTERSUCHUNGE, P47
   YONGE CD, 1888, ORATIONS MARCUS TULL, V4, P241
   YVES JY, 2005, LOGICA U
   ZOLLNER F, 1987, VITRUVS PROPORTIONSF, P77
   1996, MODEL ARTISTS DICT A, V21
NR 58
TC 28
Z9 28
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 365
EP 383
DI 10.1007/s10270-009-0119-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 466UE
UT WOS:000267687600005
DA 2024-07-18
ER

PT J
AU Seehusen, F
   Solhaug, B
   Stolen, K
AF Seehusen, Fredrik
   Solhaug, Bjornar
   Stolen, Ketil
TI Adherence preserving refinement of trace-set properties in STAIRS:
   exemplified for information flow properties and policies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID OPERATIONAL SEMANTICS; SEQUENCE DIAGRAMS; SECURITY
AB STAIRS is a formal approach to system development with UML 2.1 sequence diagrams that supports an incremental and modular development process. STAIRS is underpinned by denotational and operational semantics that have been proved to be equivalent. STAIRS is more expressive than most approaches with a formal notion of refinement. STAIRS supports a stepwise refinement process under which trace properties as well as trace-set properties are preserved. This paper demonstrates the potential of STAIRS in this respect, in particular that refinement in STAIRS preserves adherence to information flow properties as well as policies.
C1 [Seehusen, Fredrik; Solhaug, Bjornar; Stolen, Ketil] SINTEF, ICT, Oslo, Norway.
   [Seehusen, Fredrik; Stolen, Ketil] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Solhaug, Bjornar] Univ Bergen, Dept Informat Sci & Media Studies, Bergen, Norway.
C3 SINTEF; University of Oslo; University of Bergen
RP Stolen, K (corresponding author), SINTEF, ICT, Oslo, Norway.
EM Ketil.Stolen@sintef.no
FU Research Council of Norway through the projects ENFORCE [164382/V30];
   DIGIT [180052/S10]; European Commission through the S3MS project [27004]
FX The research on which this paper reports has been partly funded by the
   Research Council of Norway through the projects ENFORCE (164382/V30) and
   DIGIT (180052/S10), and partly by the European Commission through the
   S3MS project (Contract no. 27004) under the IST Sixth Framework
   Programme. We are grateful to Mass Soldal Lund, Atle Refsdal, and
   Ragnhild Kobro Runde for valuable comments and suggestions.
CR Aagedal J. O., 1999, Proceedings Third International Enterprise Distributed Object Computing. Conference (Cat. No.99EX366), P60, DOI 10.1109/EDOC.1999.792050
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   Broy M, 2005, SCI COMPUT PROGRAM, V54, P213, DOI 10.1016/j.scico.2004.04.003
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Grosu R, 2005, ACSD2005: FIFTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P6, DOI 10.1109/ACSD.2005.31
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   Haugen O, 2005, LECT NOTES COMPUT SC, V3466, P1
   Haugen O., 2005, SOFTW SYST MODEL, V4, P355
   Hoare CAR., 1985, Communicating Sequential Processes
   *INT TEL UN, 1998, Z120 INT TEL UN
   International Telecommunication Union, 2004, Z120 INT TEL UN
   *ISO IEC, 2000, 15414 ISO IEC FCD
   Jacob J., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P242, DOI 10.1109/SECPRI.1989.36298
   JURJENS J, 2001, LNCS, V2021, P135
   Kagal L, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P63, DOI 10.1109/POLICY.2003.1206958
   Katoen J.P., 1998, 1 WORKSHOP SDL MSC S, P197
   KRUGER IH, 2000, THESIS LUDWIG MAXIMI
   Lund M S., 2008, THESIS U OSLO
   Lund MS, 2006, LECT NOTES COMPUT SC, V4085, P380
   Mantel H, 2000, P IEEE CSFW, P185, DOI 10.1109/CSFW.2000.856936
   Mauw S, 1999, COMPUT NETW, V31, P1785, DOI 10.1016/S1389-1286(99)00060-2
   Mauw S, 1997, SDL '97 - TIME FOR TESTING, P291, DOI 10.1016/B978-044482816-3/50020-4
   McLean J., 1994, Proceedings of 1994 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.94CH3444-7), P79, DOI 10.1109/RISP.1994.296590
   McNamara P, 2006, HBK HIST LOGIC, V7, P197
   O'Halloran C., 1990, PROC EUROPEAN S RES, P147
   *OBJ MAN GROUP, 2007, UN MOD LANG SUP VERS
   Refsdal A, 2005, LECT NOTES COMPUT SC, V3829, P32
   Refsdal A, 2006, LECT NOTES COMPUT SC, V4037, P138
   ROSCOE AW, 1995, P IEEE S SECUR PRIV, P114, DOI 10.1109/SECPRI.1995.398927
   Runde R. K., 2005, Nordic Journal of Computing, V12, P157
   Runde R K., 2005, Norsk Informatikkonferanse (NIK'05), P55
   RUNDE RK, 2007, RELATING COMPUTER 1, V346
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Sengupta B, 2006, IEEE T SOFTWARE ENG, V32, P587, DOI 10.1109/TSE.2006.82
   Sloman M, 2002, IEEE NETWORK, V16, P10, DOI 10.1109/65.993218
   SLOMAN M, 1994, NETW SYST MANAGE, V2, P333
   Solhaug B, 2007, EIGHTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS - PROCEEDINGS, P19, DOI 10.1109/POLICY.2007.42
   Steen M. W. A., 1999, Proceedings Third International Enterprise Distributed Object Computing. Conference (Cat. No.99EX366), P84, DOI 10.1109/EDOC.1999.792052
   STORRLE H, 2004, 0403 TR U MUN
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
   WIES R, 1994, P IFIP IEEE INT WORK
   Zakinthinos A, 1997, P IEEE S SECUR PRIV, P94, DOI 10.1109/SECPRI.1997.601322
NR 44
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 45
EP 65
DI 10.1007/s10270-008-0102-3
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000004
DA 2024-07-18
ER

PT J
AU Mustafiz, S
   Sun, XM
   Kienzle, J
   Vangheluwe, H
AF Mustafiz, Sadaf
   Sun, Ximeng
   Kienzle, Joerg
   Vangheluwe, Hans
TI Model-driven assessment of system dependability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE dependability; use cases; reliability; safety; requirements
ID STATECHARTS; FORMALISM; TOOL
AB Designers of complex real-time systems need to address dependability requirements early on in the development process. This paper presents a model-based approach that allows developers to analyse the dependability of use cases and to discover more reliable and safe ways of designing the interactions of the system with the environment. The hardware design and the dependability of the hardware to be used also needs to be considered. We use a probabilistic extension of statecharts to formally model the interaction requirements defined in the use cases. The model is then evaluated analytically based on the success and failure probabilities of events. The analysis may lead to further refinement of the use cases by introducing detection and recovery measures to ensure dependable system interaction. A visual modelling environment for our extended statecharts formalism supporting automatic probability analysis has been implemented in AToM(3), A Tool for Multi-formalism and Meta-Modelling. Our approach is illustrated with an elevator control system case study.
C1 [Mustafiz, Sadaf; Sun, Ximeng; Kienzle, Joerg; Vangheluwe, Hans] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University
RP Mustafiz, S (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM sadaf@cs.mcgill.ca; xsun16@cs.mcgill.ca; joerg@cs.mcgill.ca;
   hv@cs.mcgill.ca
RI Vangheluwe, Hans/H-9884-2016
OI Vangheluwe, Hans/0000-0003-2079-6643
CR ADDOUCHE N, 2006, CIMCA IAWTIC, V17
   [Anonymous], 1995, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60692-0
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   [Anonymous], 1992, Dependability: Basic Concepts and Terminology
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Avizienis A., 2001, TECHNICAL REPORT SER, P21
   BAVUSO S, 1987, IEEE T RELIABILITY
   BLUM AM, 1994, FTCS-24 - THE TWENTY-FOURTH INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING, P137
   de Lara J, 2002, LECT NOTES COMPUT SC, V2505, P239
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   DUGAN JB, 1992, IEEE T RELIAB, V41, P363, DOI 10.1109/24.159800
   FENG TH, 2004, THESIS MCGILL U
   Geffroy Jean-Claude., 2002, DESIGN DEPENDABLE CO
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Huszerl G, 2002, COMPUT J, V45, P260, DOI 10.1093/comjnl/45.3.260
   Jansen D.N., 2002, FORMAL TECHNIQUES RE, V2469, P355
   JANSEN DN, 2005, EVALUATION REV, V32, P28
   LARA HVD, 2004, MODELLING ANAL TRAFF, P11
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Manian R, 1999, P A REL MAI, P105, DOI 10.1109/RAMS.1999.744104
   Mustafiz S, 2006, LECT NOTES COMPUT SC, V4199, P558
   Shui A, 2005, LECT NOTES COMPUT SC, V3713, P568, DOI 10.1007/11557432_43
   Sommerville Ian, 2016, Software engineering 8
   Vijaykumar NL, 2006, COMPUT OPER RES, V33, P2369, DOI 10.1016/j.cor.2005.02.018
   Whittle J, 2006, LECT NOTES COMPUT SC, V3844, P290
   Whittle J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P19
NR 30
TC 18
Z9 20
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 487
EP 502
DI 10.1007/s10270-008-0084-1
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 348CI
UT WOS:000259188200007
DA 2024-07-18
ER

PT J
AU Duran-Limon, HA
   Velasco-Elizondo, P
   Mora, M
   Meda-Campana, ME
   Aguilar, K
   Hernandez-Ochoa, M
   Sumuano, LS
AF Duran-Limon, Hector A.
   Velasco-Elizondo, Perla
   Mora, Manuel
   Meda-Campana, Maria E.
   Aguilar, Karina
   Hernandez-Ochoa, Martha
   Sumuano, Leonardo Soto
TI Verifying consistency of software product line architectures with
   product architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product lines; Software architecture; SPL Verification;
   Architecture verification; Ontologies; Model-driven engineering
ID FEATURE MODELS; MUTATION; VERIFICATION
AB There has been increasing interest in modeling software product lines (SPLs) using architecture description languages (ADLs). However, sometimes it is required to reverse engineer an SPL architecture from a set of product architectures. This procedure needs to be performed manually as currently does not exist tool support to automate this task. In this case, verifying consistency between the product architectures and the reverse engineered SPL architecture is still a challenge; particularly, verifying component interconnection aspects of product architectures with respect to the commonality and variability of an SPL architecture represented in an ADL. Current approaches are unable to detect whether the component interconnections in a product architecture have inconsistencies with the component interconnections defined by the SPL architecture. To tackle these shortcomings, we developed the Ontology-based Product Architecture Verification (OntoPAV) framework. OntoPAV relies on the ontology formalism to capture the commonality and variability of SPLs architectures. Reasoning engines are employed to automatically identify component interconnection inconsistencies among SPL and product architectures. Our evaluation results show that our verifier has a high accuracy for detecting consistency errors and that it scales linearly for architectures from 1000 to 5000 architecture elements.
C1 [Duran-Limon, Hector A.; Meda-Campana, Maria E.; Sumuano, Leonardo Soto] Univ Guadalajara, CUCEA, Guadalajara, Jalisco, Mexico.
   [Velasco-Elizondo, Perla] Autonomous Univ Zacatecas, Zacatecas, Mexico.
   [Mora, Manuel] Autonomous Univ Aguascalientes, Aguascalientes, Mexico.
   [Aguilar, Karina] Autonomous Univ Guadalajara, Guadalajara, Jalisco, Mexico.
   [Hernandez-Ochoa, Martha] Univ Guadalajara, CUNORTE, Guadalajara, Jalisco, Mexico.
C3 Universidad de Guadalajara; Universidad Autonoma de Zacatecas;
   Universidad Autonoma de Aguascalientes; Universidad Autonoma de
   Guadalajara; Universidad de Guadalajara
RP Duran-Limon, HA (corresponding author), Univ Guadalajara, CUCEA, Guadalajara, Jalisco, Mexico.
EM hduran@cucea.udg.mx; pvelasco@uaz.edu.mx; mmora@correo.uaa.mx;
   emeda@cucea.udg.mx; kaguilar@edu.uag.mx; martha.ochoa@cunorte.udg.mx;
   leonardo.soto@cucea.udg.mx
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Asadi M, 2016, SOFTW SYST MODEL, V15, P257, DOI 10.1007/s10270-014-0402-8
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   BAADER F, 2007, DESCRIPTION LOGIC HD
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bhushan M, 2018, EXPERT SYST, V35, DOI 10.1111/exsy.12256
   Brito PHS, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P231, DOI 10.1109/WICSA.2009.5290809
   Czarnecki K., 2006, GPCE, P211
   Dentler K, 2011, SEMANT WEB, V2, P71, DOI 10.3233/SW-2011-0034
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Duran-Limon H.A., 2022, ONTOPAV FRAMEWORK CO
   Duran-Limon HA, 2015, IEEE T SOFTWARE ENG, V41, P1153, DOI 10.1109/TSE.2015.2449854
   Elfaki AO, 2016, EXPERT SYST, V33, P3, DOI 10.1111/exsy.12116
   Ferreira JM, 2017, INT J SOFTW ENG KNOW, V27, P817, DOI 10.1142/S0218194017500309
   Foundation T.E., 2019, ACC
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Gheyi R, 2011, J UNIVERS COMPUT SCI, V17, P684
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Horcas JM, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106910
   Horridge M., 2009, A Practical Guide To Building OWL Ontologies Using Protege 4 and CO-ODE Tools
   Janota M, 2008, LECT NOTES COMPUT SC, V4961, P31, DOI 10.1007/978-3-540-78743-3_3
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kang K., 1990, Technical Report CMU/ SEI- 90- TR- 21
   Kirchhof JC., 2021, VARIANT PRODUCT LINE, P333
   Kishi T, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1183236.1183270
   Knuppel A., 2016, THESIS TU CAROLO WIL
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Li Y., 2020, ACM INT C PROCEEDING, DOI [10.1145/3382025.3414968, DOI 10.1145/3382025.3414968]
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lopez-Herrejon RE, 2010, LECT NOTES COMPUT SC, V6138, P217, DOI 10.1007/978-3-642-13595-8_18
   Martinez J., 2020, 24 ACM INT SYSTEMS S, VA, DOI 10.1145/3382025.3414971
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Noorian M., 2011, FEATURE MODEL DEBUGG, P158
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Rubin J, 2015, INT J SOFTW TOOLS TE, V17, P627, DOI 10.1007/s10009-014-0347-9
   Satyananda TK, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P934
   Schlie Alexander, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414973
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   Segura Sergio., 2008, 1st Workshop on Analyses of Software Product Lines (SPLC'08), P201
   Selic B, 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P313, DOI 10.1109/ISORC.2006.54
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P97, DOI 10.1145/2866614.2866628
   Thüm T, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P177, DOI 10.1145/2648511.2648530
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   van der Storm T, 2007, LECT NOTES COMPUT SC, V4829, P66
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   W3C, 2019, TURTL
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   Weiss D.M., 2006, P 10 INT SOFTW PROD, P237, DOI [10.1109/SPLINE.2006.1691614, DOI 10.1109/SPLINE.2006.1691614]
   Xiaorui Zhang, 2013, System Analysis and Modeling: Theory and Practice. 7th International Workshop, SAM 2012. Revised Selected Papers, P179, DOI 10.1007/978-3-642-36757-1_11
   Yan H, 2009, LECT NOTES COMPUT SC, V5791, P65
   Yang D, 2013, J INTELL MANUF, V24, P99, DOI 10.1007/s10845-011-0544-2
   Zhang W, 2004, LECT NOTES COMPUT SC, V3308, P115
NR 66
TC 0
Z9 0
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 195
EP 221
DI 10.1007/s10270-023-01114-4
EA JUL 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:001021522900001
DA 2024-07-18
ER

PT J
AU Erbel, J
   Grabowski, J
AF Erbel, Johannes
   Grabowski, Jens
TI Scientific workflow execution in the cloud using a dynamic runtime model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Runtime model; Workflow; Cloud; OCCI
ID SYSTEM; ENVIRONMENT; MANAGEMENT; TAVERNA; SCIENCE; ENGINE
AB To explain specific phenomena, scientists perform a sequence of tasks, e.g., to gather, analyze and interpret data, forming a scientific workflow. Depending on the complexity of the workflow, scientists require access to various kinds of tools, applications and infrastructures for individual tasks. Current approaches are often limited to managing these resources at design time, requiring the scientist to preemptively set up applications essential for their workflow. Therefore, a dynamic provisioning and configuration of computing resources are required that fulfills these needs at runtime. In this paper, we present a dynamic runtime model that couples workflow tasks with their individual applications and infrastructure requirements. This runtime model is used as a knowledge base by a model-driven workflow execution engine orchestrating the sequence of tasks and their infrastructure. We exhibit that the simplicity of the runtime model supports the creation of highly tailored infrastructures, the integration of self-developed applications, as well as a human-in-the-loop allowing scientists to monitor and interact with the workflow at runtime. To tackle the heterogeneity of cloud provider interfaces, we implement the workflow runtime model by extending the Open Cloud Computing Interface cloud standard, which provides an extensible data model as well as a uniform interface to manage cloud resources. We demonstrate the applicability of our approach using three case studies and discuss the benefits of the runtime model from a user and system perspective.
C1 [Erbel, Johannes; Grabowski, Jens] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Gottingen
RP Erbel, J (corresponding author), Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
EM johannes.erbel@cs.uni-goettingen.de; grabowski@cs.uni-goettingen.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Achilleos AP, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0138-7
   Aldinucci M, 2009, LECT NOTES COMPUT SC, V5704, P678, DOI 10.1007/978-3-642-03869-3_64
   Almond J, 1999, FUTURE GENER COMP SY, V15, P539, DOI 10.1016/S0167-739X(99)00007-2
   Altintas I, 2004, 16TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P423
   [Anonymous], 2015, Unified Modeling Language
   Apache Software Foundation, 2020, Hadoop
   Apache Software Foundation, 2020, SPARK
   Armbrust M., 2009, Electrical Engineering and Computer Sciences
   Balis B, 2016, FUTURE GENER COMP SY, V55, P147, DOI 10.1016/j.future.2015.08.015
   Barga Roger, 2008, 2008 IEEE Fourth International Conference on eScience, P317, DOI 10.1109/eScience.2008.126
   Bavoil L, 2005, IEEE VISUALIZATION 2005, PROCEEDINGS, P135, DOI 10.1109/visual.2005.1532788
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Bencomo Nelly, 2013, SIGSOFT SOFTW ENG NO, V38, P27
   Beni EH, 2019, J SYST ARCHITECT, V95, P36, DOI 10.1016/j.sysarc.2019.03.001
   Bergmann R, 2014, INFORM SYST, V40, P115, DOI 10.1016/j.is.2012.07.005
   Berman F, 2001, INT J HIGH PERFORM C, V15, P327, DOI 10.1177/109434200101500401
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bouziane HL, 2008, LECT NOTES COMPUT SC, V5168, P698, DOI 10.1007/978-3-540-85451-7_75
   Breitenbucher U., 2014, P 2 IEEE INT C CLOUD
   Breitenbucher U., 2016, EUROPEAN SPACE PROJE, V1, P112
   Bui P., 2010, P 19 ACM INT S HIGH
   Challita S, 2021, SOFTW SYST MODEL, V20, P1609, DOI 10.1007/s10270-021-00869-y
   Churches D, 2006, CONCURR COMP-PRACT E, V18, P1021, DOI 10.1002/cpe.992
   Colonnelli I, 2021, IEEE T EMERG TOP COM, V9, P1723, DOI 10.1109/TETC.2020.3019202
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deelman E., 2005, Scientific Programming, V13, P219
   Deelman E, 2018, INT J HIGH PERFORM C, V32, P159, DOI 10.1177/1094342017704893
   Deelman E, 2015, FUTURE GENER COMP SY, V46, P17, DOI 10.1016/j.future.2014.10.008
   Deelman E, 2009, FUTURE GENER COMP SY, V25, P528, DOI 10.1016/j.future.2008.06.012
   Eclipse Foundation, 2020, ACC
   Erbel J., 2019, P 2 INT WORKSHOP SIM
   Erbel J., 2018, P 10 INT C SYST AN M
   Erbel J, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P188, DOI 10.1109/SEAMS.2019.00032
   Erbel J, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P517, DOI 10.5220/0006774405170525
   Fahringer T, 2005, CONCURR COMP-PRACT E, V17, P143, DOI 10.1002/cpe.929
   Favre J.M., 2004, P 3 UML WORKSH SOFTW
   Goecks J, 2010, GENOME BIOL, V11, DOI 10.1186/gb-2010-11-8-r86
   Guan ZJ, 2006, CONCURR COMP-PRACT E, V18, P1115, DOI 10.1002/cpe.988
   Hoppe D., 2017, P 12 INT C PAR PROC
   Kacsuk P, 2018, J GRID COMPUT, V16, P55, DOI 10.1007/s10723-017-9420-4
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Korte F., 2018, P 8 INT C CLOUD COMP
   Kovács J, 2018, J GRID COMPUT, V16, P19, DOI 10.1007/s10723-017-9421-3
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Liu J, 2015, J GRID COMPUT, V13, P457, DOI 10.1007/s10723-015-9329-8
   Ludaescher B, 2009, LECT NOTES COMPUT SC, V5701, P31, DOI 10.1007/978-3-642-03848-8_4
   Ludäscher B, 2006, CONCURR COMP-PRACT E, V18, P1039, DOI 10.1002/cpe.994
   McGough S., 2004, UK e-Science All Hands Meeting, P894
   Mell P, 2010, COMMUN ACM, V53, P50
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Merle P., 2015, P 8 IEEE INT C CLOUD
   Object Management Group, 2011, OMG BUS PROC MOD NOT
   Ogasawara E, 2013, CONCURR COMP-PRACT E, V25, P2327, DOI 10.1002/cpe.3032
   Oinn T, 2006, CONCURR COMP-PRACT E, V18, P1067, DOI 10.1002/cpe.993
   Open Grid Forum, 2016, OP CLOUD COMP INT CO
   Organization for the Advancement of Structured Information Standards, 2020, TOSCA SIMPLE PROFILE
   Orzechowski M, 2018, INT CONF UTIL CLOUD, P9, DOI 10.1109/UCC-Companion.2018.00020
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Paraiso F, 2016, IEEE INT CONF CLOUD, P718, DOI [10.1109/CLOUD.2016.98, 10.1109/CLOUD.2016.0100]
   Parker SG, 1995, SUPERCOMP PROC, P1419
   Qasha R, 2016, P IEEE INT C E-SCI, P81, DOI 10.1109/eScience.2016.7870888
   Ramakrishnan L., 2014, P 10 IEEE INT C E SC
   Roy RB, 2022, PPOPP'22: PROCEEDINGS OF THE 27TH ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P46, DOI 10.1145/3503221.3508407
   Shvachko K, 2010, IEEE S MASS STOR SYS
   Stachowiak H., 1973, Allgemeine Modelltheorie, DOI [10.1007/978-3-7091-8327-4, DOI 10.1007/978-3-7091-8327-4]
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sterling Thomas., 2001, Beowulf Cluster Computing with Windows, V1, P307
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Thiesen L., 2020, THESIS U GOETTINGEN
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   UPSON C, 1989, IEEE COMPUT GRAPH, V9, P30, DOI 10.1109/38.31462
   Vukojevic-Haupt K, 2017, COMPUTING, V99, P147, DOI 10.1007/s00607-016-0521-x
   Weder B., 2020, P 8 EUR C SERV OR CL
   Wilde M, 2011, PARALLEL COMPUT, V37, P633, DOI 10.1016/j.parco.2011.05.005
   Wittek S., 2017, P 1 INT WORKSH SIM S
   Wolstencroft K, 2013, NUCLEIC ACIDS RES, V41, pW557, DOI 10.1093/nar/gkt328
   Yu J, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P119
   Zalila Faiez, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P389, DOI 10.1007/978-3-319-69462-7_26
   Zhao Y, 2015, FUTURE GENER COMP SY, V46, P3, DOI 10.1016/j.future.2014.10.023
NR 81
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 163
EP 193
DI 10.1007/s10270-023-01112-6
EA JUN 2023
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:001014668200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Segura, AM
   de Lara, J
   Wimmer, M
AF Segura, Angel Mora
   de Lara, Juan
   Wimmer, Manuel
TI Modelling assistants based on information reuse: a user evaluation for
   language engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modelling; Modelling assistants; Language engineering; Modelling
   process; Empirical studies
ID USABILITY; SUS
AB Model-driven engineering (MDE) uses models as first-class artefacts during the software development lifecycle. MDE often relies on domain-specific languages (DSLs) to develop complex systems. The construction of a new DSL implies a deep understanding of a domain, whose relevant knowledge may be scattered in heterogeneous artefacts, like XML documents, (meta-)models, and ontologies, among others. This heterogeneity hampers their reuse during (meta-)modelling processes. Under the hypothesis that reusing heterogeneous knowledge helps in building more accurate models, more efficiently, in previous works we built a (meta-)modelling assistant called Extremo. Extremo represents heterogeneous information sources with a common data model, supports its uniform querying and reusing information chunks for building (meta-)models. To understand how and whether modelling assistants-like Extremo-help in designing a new DSL, we conducted an empirical study, which we report in this paper. In the study, participants had to build a meta-model, and we measured the accuracy of the artefacts, the perceived usability and utility and the time to completion of the task. Interestingly, our results show that using assistance did not lead to faster completion times. However, participants using Extremo were more effective and efficient, produced meta-models with higher levels of completeness and correctness, and overall perceived the assistant as useful. The results are not only relevant to Extremo, but we discuss their implications for future modelling assistants.
C1 [Segura, Angel Mora; de Lara, Juan] Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, Business Informat Software Engn Inst, Linz, Austria.
C3 Autonomous University of Madrid; Johannes Kepler University Linz
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
EM Angel.MoraS@uam.es; Juan.deLara@uam.es; manuel.wimmer@jku.at
RI de Lara, Juan/B-5422-2014; Mora-Segura, Angel/F-3864-2019
OI Mora-Segura, Angel/0000-0003-4318-499X
FU Ministry of Education of Spain (FPU) [FPU13/02698]; Ministry of
   Education of Spain (stay) [EST17/00803]; Spanish Ministry of Science and
   Innovation [PID2021-122270OB-I00]; R&D programme of the Madrid Region
   [P2018/TCS-4314]; Austrian Federal Ministry for Digital and Economic
   Affairs; National Foundation for Research, Technology and Development
   (CDG)
FX We would like to thank the reviewers for their valuable comments. This
   work was supported by the Ministry of Education of Spain (FPU Grant
   FPU13/02698 and stay EST17/00803); the Spanish Ministry of Science and
   Innovation (PID2021-122270OB-I00); the R&D programme of the Madrid
   Region (P2018/TCS-4314); and the Austrian Federal Ministry for Digital
   and Economic Affairs and the National Foundation for Research,
   Technology and Development (CDG).
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Abrahao S, 2008, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84628-941-5_1
   Agt-Rickauer H., 2018, INT C MOD DRIV ENG S, V991, P134
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Almonte Lissette., 2021, Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering. SLE 2021, P22, DOI DOI 10.1145/3486608.3486905
   Angel MS, 2018, COMPUT LANG SYST STR, V53, P90, DOI 10.1016/j.cl.2018.02.002
   Aquino ER, 2020, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P227, DOI 10.5220/0008938002270236
   Atkinson C, 2011, LECT NOTES COMPUT SC, V6563, P266, DOI 10.1007/978-3-642-19440-5_16
   Banerjee Amitav, 2009, Ind Psychiatry J, V18, P127, DOI 10.4103/0972-6748.62274
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Bislimovska B, 2014, ACM T WEB, V8, DOI 10.1145/2579991
   Bobkowska A, 2005, FRONT ARTIF INTEL AP, V130, P75
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Buezas Nicolas, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P179, DOI 10.1007/978-3-642-39013-5_13
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Burgueño L, 2022, SOFTW SYST MODEL, V21, P139, DOI 10.1007/s10270-021-00893-y
   Carver J.C., 2011, 1 WORKSH EXP EMP STU
   Cerqueira ThacianaG. O., 2016, SEKE, P644
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colquhoun D, 2014, ROY SOC OPEN SCI, V1, DOI 10.1098/rsos.140216
   Condori-Fernández N, 2013, SCI COMPUT PROGRAM, V78, P2245, DOI 10.1016/j.scico.2012.07.017
   CRONBACH LJ, 1951, PSYCHOMETRIKA, V16, P297, DOI [10.1007/BF02310555, DOI 10.1007/BF02310555]
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dyck A., 2013, MDEBE, P12
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P282
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P291
   Eclipse, 2020, ECL COD REC
   Elkamel A, 2016, I C COMP SYST APPLIC
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feitelson D.G., 2015, ARXIV
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Forman George, 2010, ACM SIGKDD Explorations Newsletter, DOI DOI 10.1145/1882471.1882479
   Forstmeier W, 2017, BIOL REV, V92, P1941, DOI 10.1111/brv.12315
   Granada D, 2017, SOFTW SYST MODEL, V16, P195, DOI 10.1007/s10270-014-0447-8
   Granada D, 2014, LECT NOTES COMPUT SC, V8767, P535, DOI 10.1007/978-3-319-11653-2_33
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Habel A, 2018, LECT NOTES COMPUT SC, V11176, P431, DOI 10.1007/978-3-030-04771-9_31
   Hajiyev E., 2005, OOPSLA 05, P102
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hernandez Lopez J.A., 2022, SOFTW SYST MODEL
   López JAH, 2022, SOFTW SYST MODEL, V21, P967, DOI 10.1007/s10270-021-00929-3
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Karna J., 2009, P 9 OOPSLA WORKSH DO
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Lewis JR, 2015, INT J HUM-COMPUT INT, V31, P545, DOI 10.1080/10447318.2015.1064665
   Lewis JR, 2015, INT J HUM-COMPUT INT, V31, P496, DOI 10.1080/10447318.2015.1064654
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Alvarez-Rodríguez JM, 2018, J UNIVERS COMPUT SCI, V24, P1536
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Mendieta R, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P536, DOI 10.5220/0006267605360541
   Mens Kim., 2014, Recommendation Systems in Software Engineering, P93
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Mussbacher, 2020, P 23 ACM IEEE INT C, P1
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nickerson RS, 2000, PSYCHOL METHODS, V5, P241, DOI 10.1037//1082-989X.5.2.241
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Ren Ranci, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P260, DOI 10.1145/3383219.3383246
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Safdar SA, 2015, LECT NOTES COMPUT SC, V9153, P33, DOI 10.1007/978-3-319-21151-0_3
   Saito T, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0118432
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Cuadrado JS, 2014, SCI COMPUT PROGRAM, V89, P176, DOI 10.1016/j.scico.2013.04.007
   Sauro J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2215, DOI 10.1145/1978942.1979266
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Tolvanen JP, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P711
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Vinson NG., 2008, PRACTICAL GUIDE ETHI, P229, DOI DOI 10.1007/978-1-84800-044-5
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Wüest D, 2019, SOFTW SYST MODEL, V18, P1513, DOI 10.1007/s10270-017-0623-8
NR 95
TC 1
Z9 1
U1 3
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 57
EP 84
DI 10.1007/s10270-023-01094-5
EA APR 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:000970716700001
DA 2024-07-18
ER

PT J
AU Schützenmeier, N
   Käppel, M
   Ackermann, L
   Jablonski, S
   Petter, S
AF Schuetzenmeier, Nicolai
   Kaeppel, Martin
   Ackermann, Lars
   Jablonski, Stefan
   Petter, Sebastian
TI Automaton-based comparison of Declare process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Declare; Model comparison; Declarative
   process management; Automata theory
AB The Declare process modeling language has been established within the research community for modeling so-called flexible processes. Declare follows the declarative modeling paradigm and therefore guarantees flexible process execution. For several reasons, declarative process models turned out to be hard to read and comprehend. Thus, it is also hard to decide whether two process models are equal with respect to their semantic meaning, whether one model is completely contained in another one or how far two models overlap. In this paper, we follow an automaton-based approach by transforming Declare process models into finite state automatons and applying automata theory for solving this issue.
C1 [Schuetzenmeier, Nicolai; Kaeppel, Martin; Ackermann, Lars; Jablonski, Stefan; Petter, Sebastian] Univ Bayreuth, Bayreuth, Germany.
C3 University of Bayreuth
RP Schützenmeier, N (corresponding author), Univ Bayreuth, Bayreuth, Germany.
EM nicolai.schuetzenmeier@mi-bayreuth.de; martin.kaeppel@uni-bayreuth.de;
   lars.acicermann@uni-bayreuth.de; stefan.jablonski@uni-bayreuth.de;
   sebastian.petter@uni-bayreuth.de
CR Ackermann L, 2018, LECT NOTES COMPUT SC, V11230, P154, DOI 10.1007/978-3-030-02671-4_9
   Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   Boytsov L, 2011, ACM J Exp Algorithmics, V16, DOI [10.1145/1963190.1963191, DOI 10.1145/1963190.1963191]
   Burattin A, 2016, EXPERT SYST APPL, V65, P194, DOI 10.1016/j.eswa.2016.08.040
   Camargo M, 2019, LECT NOTES COMPUT SC, V11675, P286, DOI 10.1007/978-3-030-26619-6_19
   Cook S.A., 1971, P 3 ANN ACM S THEOR
   Corea C, 2021, LECT NOTES BUS INF P, V427, P3, DOI 10.1007/978-3-030-85440-9_1
   De Smedt J, 2018, INFORM SYST, V74, P40, DOI 10.1016/j.is.2018.01.001
   De Smedt J, 2016, LECT NOTES COMPUT SC, V9694, P83, DOI 10.1007/978-3-319-39696-5_6
   Di Ciccio C, 2017, INFORM SYST, V64, P425, DOI 10.1016/j.is.2016.09.005
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Fahland D., 2009, DECLARATIVE VERSUS I
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Hidders J., 2005, Theory of computing 2005: Proceedings of the eleventh computing The Australian Theory symposium (CATS2005), P3
   Hildebrandt T, 2013, J LOGIC ALGEBR PROGR, V82, P164, DOI 10.1016/j.jlap.2013.05.005
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Hopcroft John, 1971, THEORY MACHINES COMP, P189, DOI [DOI 10.1016/B978-0-12-417750-5.50022-1, 10.1016/B978-0-12-417750-5.50022-1]
   Käppel M, 2021, SOFTW SYST MODEL, V20, P1379, DOI 10.1007/s10270-020-00857-8
   La Rosa M, 2015, INFORM SYST, V49, P102, DOI 10.1016/j.is.2014.11.010
   Laroussinie F, 2002, IEEE S LOG, P383, DOI 10.1109/LICS.2002.1029846
   Maggi F.M., 2013, CEUR WORKSHOP PROC, V1021
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Pesic M., 2008, THESIS
   Schönig S, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P271, DOI 10.5220/0006533502710278
   Schützenmeier N, 2021, LECT NOTES BUS INF P, V432, P195, DOI 10.1007/978-3-030-91279-6_14
   Schutzenmeier Nicolai, 2019, Enterprise and Organizational Modeling and Simulation. 15th International Workshop, EOMAS 2019, Held at CAiSE 2019. Selected Papers. Lecture Notes in Business Information Processing (LNBIP 366), P131, DOI 10.1007/978-3-030-35646-0_10
   Shi YY, 2020, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC51365.2020.00008
   Skydanienko V., 2018, BPM DEMOS
   Tealeb A., 2014, CONTEXT BASED VARIAN, V175, P363
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4102, P129
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Westergaard M., 2013, BPM REPORTS
   Zeising M, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P94, DOI 10.4108/icst.collaboratecom.2014.257269
   Zhang C, 2016, CHINESE J ELECTRON, V25, P234, DOI 10.1049/cje.2016.03.007
   Zuck L., 1986, THESIS WEIZMANN I IS
NR 39
TC 1
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 667
EP 685
DI 10.1007/s10270-022-01069-y
EA DEC 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4K1
UT WOS:000894390800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Weyssow, M
   Sahraoui, H
   Syriani, E
AF Weyssow, Martin
   Sahraoui, Houari
   Syriani, Eugene
TI Recommending metamodel concepts during modeling activities with
   pre-trained language models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Intelligent modeling assistants; Domain concepts; Recommender systems;
   Pre-trained language models
AB The design of conceptually sound metamodels that embody proper semantics in relation to the application domain is particularly tedious in model-driven engineering. As metamodels define complex relationships between domain concepts, it is crucial for a modeler to define these concepts thoroughly while being consistent with respect to the application domain. We propose an approach to assist a modeler in the design of metamodel by recommending relevant domain concepts in several modeling scenarios. Our approach does not require knowledge from the domain or to hand-design completion rules. Instead, we design a fully data-driven approach using a deep learning model that is able to abstract domain concepts by learning from both structural and lexical metamodel properties in a corpus of thousands of independent metamodels. We evaluate our approach on a test set containing 166 metamodels, unseen during the model training, with more than 5000 test samples. Our preliminary results show that the trained model is able to provide accurate top 5 lists of relevant recommendations for concept renaming scenarios. Although promising, the results are less compelling for the scenario of the iterative construction of the metamodel, in part because of the conservative strategy we use to evaluate the recommendations.
C1 [Weyssow, Martin; Sahraoui, Houari; Syriani, Eugene] Univ Montreal, DIRO, Montreal, PQ, Canada.
C3 Universite de Montreal
RP Weyssow, M (corresponding author), Univ Montreal, DIRO, Montreal, PQ, Canada.
EM martin.weyssow@umontreal.ca; sahraouh@iro.umontreal.ca;
   syriani@iro.umontreal.ca
CR Agt-Rickauer H., 2018, INT C MOD DRIV ENG S, V991, P134
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Atkinson C, 2007, ADV COMPUT, V70, P105, DOI 10.1016/S0065-2458(06)70003-1
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Brown T., 2020, Advances in Neural Information Processing Systems, V33, P1877, DOI [DOI 10.48550/ARXIV.2005.14165, DOI 10.5555/3495724.3495883]
   Burgueno L., 2020, NLP BASED ARCHITECTU
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Devlin J., 2018, BERT PRE TRAINING DE
   Di Rocco J., GNN BASED RECOMMENDE
   Eclipse Foundation Inc, ECL EMF
   Elkamel A, 2016, I C COMP SYST APPLIC
   Feng Z., 2020, EMNLP
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Kanade A., 2019, Pre-trained contextual embedding of source code
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kipf TN, 2017, INT C LEARN REPR
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Kuschke Tobias., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P551, DOI DOI 10.1145/2642937.2642949
   L??pez-Fern?ndez JJ., 2014, MODEVVA MODELS, P3
   Lample G., 2019, ARXIV190107291 CORR
   Liu Y, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5070
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mussbacher, 2020, P 23 ACM IEEE INT C, P1
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   NaoMod Research Group, ATL MOD TOOLS
   Rabbi F., 2015, AMT MODELS
   Radford A., 2019, LANGUAGE MODELS ARE
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Sahraoui, 2020, ARXIV200803731
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Sen S., 2007, 17 INT C APPL DECL P, P59
   Sen S, 2008, LECT NOTES COMPUT SC, V5002, P259
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Svyatkovskiy A., 2020, IEEE ACM 18 INT C MI, P329
   Vaswani A, 2017, ADV NEUR IN, V30
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yang Z, 2019, IEEE I CONF COMP VIS, P9656, DOI 10.1109/ICCV.2019.00975
NR 44
TC 18
Z9 19
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1071
EP 1089
DI 10.1007/s10270-022-00975-5
EA FEB 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000754345600001
DA 2024-07-18
ER

PT J
AU Dani, VS
   Freitas, CMD
   Thom, LH
AF Dani, Vinicius Stein
   Dal Sasso Freitas, Carla Maria
   Thom, Lucineia Heloisa
TI Recommendations for visual feedback about problems within BPMN process
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process modeling; Problems in process models; Survey; Recommendations;
   Visual feedback
ID BUSINESS; SUPPORT; STATE
AB Business process modeling is a key task in business process management because, besides representing processes, the process models are used, for example, for communication purposes among stakeholders. When not correctly modeled, process models may diminish businesses' profitability. In this work, we conducted a survey with 57 participants, where we gathered a list of modelers' needs regarding the feedback they would like to get about problems in process models. For example, modelers would like to get feedback according to their level of experience and be able to activate/deactivate automatic validation. Then, we built a catalog of required features that represents a set of features that process modeling tools should address regarding feedback about problems in process models. Furthermore, we mapped the identified modelers' needs to how a group of process modeling tools provides such kind of feedback and to the solutions found in the literature. Finally, based on the gaps found in the mapping, we provide a set of recommendations for visual feedback about problems in process models, which can guide the development of future process modeling tools. Our work focuses on the Business Process Model and Notation because it is an ISO standard, supported by several process modeling and execution tools.
C1 [Dani, Vinicius Stein; Dal Sasso Freitas, Carla Maria; Thom, Lucineia Heloisa] Univ Fed Rio Grande do Sul, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
C3 Universidade Federal do Rio Grande do Sul
RP Dani, VS (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
EM vsdani@inf.ufrgs.br; carla@inf.ufrgs.br; lucineia@inf.ufrgs.br
RI Stein Dani, Vinicius/AGZ-9344-2022; Stein Dani, Vinicius/ABA-6637-2020;
   Thom, Lucineia Heloisa/I-7561-2017; Freitas, Carla M D S/H-3333-2011
OI Stein Dani, Vinicius/0000-0002-0827-3711; Stein Dani,
   Vinicius/0000-0002-0827-3711; Thom, Lucineia
   Heloisa/0000-0002-0620-9302; 
FU CNPq (National Council for Scientific and Technological Development);
   CoordenacAo de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]; Graduate Program in Computer Science; Institute of
   Informatics, UFRGS
FX We are grateful to the national research funding agency CNPq (National
   Council for Scientific and Technological Development) for the financial
   support. This study was also financed in part by the CoordenacAo de
   Aperfeicoamento de Pessoal de Nivel Superior - Brasil (CAPES) - Finance
   Code 001. We also acknowledge the support we had received from the
   Graduate Program in Computer Science and the Institute of Informatics,
   UFRGS. Special thanks to the modelers and developers we interviewed in
   our work. We are also profoundly grateful to the reviewers for their
   comments that helped us to improve our paper.
CR Arning K., 2013, P INT C COMP MAN COM, P1
   Awad A, 2010, LECT NOTES BUS INF P, V43, P182
   Babbie E.R., 2015, PRACTICE SOCIAL RES
   Bangor A., 2018, SYST REV-LONDON, V2018, P123, DOI 10.1002/14651858.CD012733.pub2
   Barbosa S., 2010, Interacao Humano-Computador
   Boyce Carolyn., 2006, PATHFINDER INT TOOL, DOI DOI 10.1080/14616730210154225
   Brooke J., 1996, USABILITY EVALUATION, P6
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Brown B, 2016, INT J MED INFORM, V94, P191, DOI 10.1016/j.ijmedinf.2016.07.010
   Bryman, 2013, J CHEM INF MODEL, V53, P1689, DOI [10.1017/CBO9781107415324.004, DOI 10.1017/CBO9781107415324.004]
   Corradini F, 2018, DATA KNOWL ENG, V113, P129, DOI 10.1016/j.datak.2017.11.003
   Dani VS, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.006
   Dechsupa C, 2019, IEEE ACCESS, V7, P16795, DOI 10.1109/ACCESS.2019.2892958
   Dias, 2018, BEHAV ANAL PROCESS M
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Farnsworth V, 2016, BRIT J EDUC STUD, V64, P139, DOI 10.1080/00071005.2015.1133799
   Fink, 2002, CONDUCT SURVEYS
   Fink A., 2003, THE SURVEY KIT
   Fowler, 2007, SURV RES METHODS-GER, V134
   Geiger M, 2018, FUTURE GENER COMP SY, V80, P250, DOI 10.1016/j.future.2017.01.006
   Grossman JD., 1992, COLOR ELECT DISPLAYS, P209, DOI [10.1007/978-1-4757-9754-1_7, DOI 10.1007/978-1-4757-9754-1_7]
   Haisjackl C, 2018, SOFTW SYST MODEL, V17, P655, DOI 10.1007/s10270-016-0563-8
   Johansson L., 2012, EVALUATION BUSINESS
   Jonathan LazarJinjuan Heidi Feng Harry Hochheiser., 2017, Research Methods in Human-Computer Interaction
   Killich S, 1999, BEHAV INFORM TECHNOL, V18, P325, DOI 10.1080/014492999118913
   Krishna Ajay, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P323, DOI 10.1007/978-3-319-66845-1_21
   Krogstie J., 2003, Evaluating UML using a generic quality framework
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laue R, 2011, J VISUAL LANG COMPUT, V22, P385, DOI 10.1016/j.jvlc.2011.04.003
   Leopold H, 2016, IEEE SOFTWARE, V33, P26, DOI 10.1109/MS.2015.81
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Moody D, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P481, DOI 10.1007/978-0-387-70802-7_40
   Object Management Group (OMG), 2015, BPMN SPEC BUS PROC M
   Recker J., 2008, BPMN Modeling - Who, Where, How and Why
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Reder A, 2010, P IEEE ACM INT C AUT, P347, DOI DOI 10.1145/1858996.1859069
   Roy S, 2014, IEEE T SERV COMPUT, V7, P140, DOI 10.1109/TSC.2013.10
   Rozman T., 2008, EUR SPI 2007
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sedrakyan G, 2017, INFORM SOFTWARE TECH, V82, P159, DOI 10.1016/j.infsof.2016.11.001
   Shi W, 2015, 2015 THIRD INTERNATIONAL CONFERENCE ON ADVANCED CLOUD AND BIG DATA, P296, DOI 10.1109/CBD.2015.55
   Snoeck M, 2015, LECT NOTES BUS INF P, V235, P111, DOI 10.1007/978-3-319-25897-3_8
   Suchenia A., 2015, INT J COMPUTER TECHN, V6, P789
   Suchenia A, 2017, STUD COMPUT INTELL, V658, P65, DOI 10.1007/978-3-319-47208-9_5
   Sun XB, 2016, SCI PROGRAMMING-NETH, V2016, DOI 10.1155/2016/5475964
   van der Aalst W. M. P., 2013, ISRN Softw. Eng., V2013
   VIDACIC T., 2014, INFORMATION System Development, P283
   Witt S., 2015, COMMUN COMPUT INF SC, V532, P120, DOI [10.1007/978-3-319-22689-7_9, DOI 10.1007/978-3-319-22689-7_9]
NR 51
TC 1
Z9 1
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 2039
EP 2065
DI 10.1007/s10270-021-00972-0
EA JAN 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000744412600004
DA 2024-07-18
ER

PT J
AU Frank, U
AF Frank, Ulrich
TI Multi-level modeling: cornerstones of a rationale Comparative
   evaluation, integration with programming languages, and dissemination
   strategies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Essential design conflicts; Multi-perspective evaluation framework;
   Multi-level programming languages; Integration of models and code;
   Multi-level dissemination strategies
AB This expert voice paper presents a comprehensive rationale of multi-level modeling. It aims not only at a systematic assessment of its prospects, but also at encouraging applications of multi-level modeling in business information systems and at providing a motivation for future research. The assessment is developed from a comparison of multi-level modeling with object-oriented, general-purpose modeling languages (GPMLs) and domain-specific modeling languages (DSMLs). To foster a differentiated evaluation, we propose a multi-perspective framework that accounts, among others, for essential design conflicts, different types of users, as well as economic aspects. Besides the assessment of the additional abstraction offered by multi-level modeling, the evaluation also identifies specific drawbacks and remaining challenges. Based on the results of the comparative assessment, in order to foster the adoption and further development of multi-level modeling, we discuss the prospects of supplementing multi-level modeling languages with multi-level programming languages and suggest possible dissemination strategies customized for different groups of users. The paper concludes with an outline of future research.
C1 [Frank, Ulrich] Univ Duisburg Essen, Informat Syst & Enterprise Modelling Res Grp, Inst Comp Sci & Business Informat Syst ICB, Essen, Germany.
C3 University of Duisburg Essen
RP Frank, U (corresponding author), Univ Duisburg Essen, Informat Syst & Enterprise Modelling Res Grp, Inst Comp Sci & Business Informat Syst ICB, Essen, Germany.
EM ulrich.frank@uni-due.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Almeida J. P. A., 2018, Dagstuhl Reports, V7, P18
   Almeida J.P.A., 2019, MULTIPROCESS CHALLEN
   [Anonymous], 2018, SPECIAL ISSUE MULTIL, P13
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2017, P MOD 2017 SAT RV WO
   [Anonymous], 2007, Reference Modeling: Efficient Information Systems Design Through Reuse of Information Models
   ASSmann Uwe, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P1
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2012, P 2 INT MASTER CLASS, P1
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2018, SOFTW SYST MODEL, V17, P163, DOI 10.1007/s10270-016-0565-6
   Atkinson Colin, 2016, MODELLIERUNG 2016 WO, V255, P117
   Atkinson Colin, 2017, CEUR WORKSHOP P, V2019, P274
   Balaban M., 2018, P MODELS 2018 WORKSH, V2245, P693
   Bateson G., 2000, STEPS ECOLOGY MIND
   BATRA D, 1992, INT J MAN MACH STUD, V37, P83, DOI 10.1016/0020-7373(92)90092-Y
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Becker J., 2005, WORKSH POST P 4 INT, P134
   Bencomo N., 2014, STATE ART SURVEY, V8378
   Benner B., 2017, P 4 INT WORKSH MULT
   Bock AC, 2018, LECT NOTES BUS INF P, V318, P213, DOI 10.1007/978-3-319-91704-7_14
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   BRUNER J, 1991, CRIT INQUIRY, V18, P1, DOI 10.1086/448619
   Bunge M., 1977, Treatise on Basic Philosophy Volume 3. Ontology I: The Furniture of the World., V3
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   Clark T., 2008, SUPERLANGUAGES DEV L
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   de Kinderen S, 2020, SOFTW SYST MODEL, V19, P313, DOI 10.1007/s10270-019-00767-4
   de Kinderen S, 2019, CONF BUS INFORM, P174, DOI 10.1109/CBI.2019.00027
   De Lara J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280985
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Domingos P., 2017, The Master Algorithm: How the Quest for the Ultimate Learning Machine Will Remake Our World
   EVANS JSBT, 1993, COGNITION, V49, P165, DOI 10.1016/0010-0277(93)90039-X
   Evans V, 2006, COGNITIVE LINGUISTICS: AN INTRODUCTION, P1
   Fauconnier Gilles, 2002, The Way We Think: Conceptual Blending and the Mind's Hidden Complexities
   Fettke P, 2004, WIRTSCHAFTSINF, V46, P331, DOI 10.1007/BF03250947
   Fettke P, 2003, P 9 AM C INF SYST TA, P2944
   Fettke P., 2007, Reference Modeling for Business Systems Analysis
   Florian H., 2009, P INT WORKSH REV ENG
   Fonseca CM, 2018, LECT NOTES COMPUT SC, V11157, P409, DOI 10.1007/978-3-030-00847-5_29
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Frank, 2021, P 24 ACM IEEE INT C
   Frank, 2002, J ELECTRON COMMER RE, V2, P48
   Frank U., 2011, TECHNICAL REPORTS, V47
   Frank U., 2009, TECHNICAL REPORTS, V31
   Frank U., 2018, TECHNICAL REPORTS, V66
   FRANK U, 2020, P 23 ACM IEEE INT C, P622, DOI DOI 10.1109/CYBERSA49311.2020.9139673
   Frank U., 1998, TECHNICAL REPORTS, V15
   Frank U., 2013, Domain Engineering, P133
   Frank U., 2007, REFERENCE MODELING B, P118, DOI DOI 10.4018/978-1-59904-054-7.CH006
   Frank U, 2007, ENTERP MODELLING INF, V2, P32
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Frank Ulrich, 2016, MULTI MODELS, P3
   Garson J., 2021, The Stanford Encyclopedia of Philosophy
   GOLDSTEIN RC, 1994, IEEE T KNOWL DATA EN, V6, P835, DOI 10.1109/69.317711
   Gomez de Villar Fernando Macias, 2016, MULTI2016 P 3 INT WO, P66
   Grossmann Reinhardt., 1983, The Categorical Structure of the World
   Guizzardi G, 2002, LECT NOTES COMPUT SC, V2503, P65
   Igamberdiev Muzaffar, 2016, CEUR WORKSHOP P, V1722, P45
   Jácome-Guerrero SP, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103390
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Jarke M, 2010, LECT NOTES COMPUT SC, V5936, P95
   Jeusfeld MA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P66, DOI 10.1109/MODELS-C.2019.00016
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Kaczmarek-Hess M., 2018, P 5 INT WORKSH MULT
   Kaczmarek-Hess M, 2017, BUS INFORM SYST ENG+, V59, P315, DOI 10.1007/s12599-017-0482-4
   Kahneman D., 1982, JUDGMENT UNCERTAINTY, P201, DOI DOI 10.1017/CBO9780511809477
   Karna J., 2009, 9 OOPSLA WORKSH DOM
   Kelly S., 2008, Domain-Specific Modeling
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kuhn TS., 1962, The Structure of Scientific Revolutions
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   LAKOFF G, 1991, LANG COMMUN, V11, P53, DOI 10.1016/0271-5309(91)90018-Q
   Lakoff George., 1987, WOMEN FIRE DANGEROUS
   Lakoff George, 1980, METAPHORS WE LIVE BY
   Langacker RW, 1998, NEW PSYCHOLOGY OF LANGUAGE, P1
   Lange A., 2018, MODELS WORKSHOPS, P653
   Lethbridge TC, 2016, LECT NOTES COMPUT SC, V9953, P187, DOI 10.1007/978-3-319-47169-3_14
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   METZGER W, 1986, GESTALT PSYCHOL AUSG
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr B, 2009, LECT NOTES COMPUT SC, V5833, P189, DOI 10.1007/978-3-642-04947-7_23
   Neumayr Bernd., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling, V96, P107
   Newell A., 1969, Progress in Operations Research, V3, P361
   Nolte M., 2019, HUMAN PRACTICE DIGIT, P1433
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   OMG, 2014, MOD DRIV ARCH MDA MD
   OMG, 2006, MET OBJ FACT MOF COR
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Popper, 1960, LOGIC SCI DISCOVERY, V2
   Rosch E., 1978, COGNITION CATEGORIZA, P27, DOI DOI 10.1016/B978-1-4832-1446-7.50028-5
   Rossini A, 2015, LECT NOTES COMPUT SC, V9153, P18, DOI 10.1007/978-3-319-21151-0_2
   Schuette R., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P240
   Selway M, 2017, DATA KNOWL ENG, V109, P85, DOI 10.1016/j.datak.2017.03.006
   Siau K, 2006, INFORM SYST MANAGE, V23, P43, DOI 10.1201/1078.10580530/46108.23.3.20060601/93706.5
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Tuggy David., 2007, OXFORD HDB COGNITIVE, P82
   VOLTER M., 2013, DSL ENG DESIGNING IM
   Volz B. W, 2011, WERKZEUGUNTERSTUTZUN
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   Watzlawick P., 2011, CHANGE PRINCIPLES PR
   Yang YR, 2000, MEM COGNITION, V28, P452, DOI 10.3758/BF03198560
NR 108
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 451
EP 480
DI 10.1007/s10270-021-00955-1
EA JAN 2022
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0I4GL
UT WOS:000738415700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fellner, A
   Befrouei, MT
   Weissenbacher, G
AF Fellner, Andreas
   Tabaei Befrouei, Mitra
   Weissenbacher, Georg
TI Mutation testing with hyperproperties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB We present a new method for model-based mutation-driven test case generation. Mutants are generated by making small syntactical modifications to the model or source code of the system under test. A test case kills a mutant if the behavior of the mutant deviates from the original system when running the test. In this work, we use hyperproperties-which allow to express relations between multiple executions-to formalize different notions of killing for both deterministic as well as non-deterministic models. The resulting hyperproperties are universal in the sense that they apply to arbitrary reactive models and mutants. Moreover, an off-the-shelf model checking tool for hyperproperties can be used to generate test cases. Furthermore, we propose solutions to overcome the limitations of current model checking tools via a model transformation and a bounded SMT encoding. We evaluate our approach on a number of models expressed in two different modeling languages by generating tests using a state-of-the-art mutation testing tool.
C1 [Fellner, Andreas] AIT Austrian Inst Technol, Seibersdorf, Austria.
   [Tabaei Befrouei, Mitra] TU Wien, Vienna, Austria.
   [Weissenbacher, Georg] TU Wien, Fac Informat, Vienna, Austria.
C3 Austrian Institute of Technology (AIT); Technische Universitat Wien;
   Technische Universitat Wien
RP Fellner, A (corresponding author), AIT Austrian Inst Technol, Seibersdorf, Austria.
EM fellner.a@gmail.com
OI Weissenbacher, Georg/0000-0002-0143-632X
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P20, DOI 10.1007/978-3-642-38916-0_2
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   Aichernig BK, 2009, FORM ASP COMPUT, V21, P33, DOI 10.1007/s00165-008-0083-6
   Aichernig Bernhard K., 2014, Model-Based Mutation Testing of an Industrial Measurement Device
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   [Anonymous], 1992, CMUCS92131
   Arcaini P, 2017, IEEE INT CONF SOFTW, P476, DOI 10.1109/ICST.2017.54
   Arcaini P, 2015, SOFTW TEST VERIF REL, V25, P629, DOI 10.1002/stvr.1530
   Bardin S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P173, DOI 10.1109/ICST.2014.30
   Bardoczi S., 2015, 2015: Landscape Odyssey-Landscape Architecture in Hungary, P1, DOI DOI 10.1109/ICST.2015.7102607
   Biere A., 2011, Inst. Formal Models Verif.
   Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Boroday S., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P355
   Boroday S, 2007, ELECTRON NOTES THEOR, V190, P3, DOI 10.1016/j.entcs.2007.08.002
   Brayton R.K:, 1993, VL2MV COMPILER VERIL
   Brett N, 2017, LECT NOTES COMPUT SC, V10206, P77, DOI 10.1007/978-3-662-54580-5_5
   Clarkson M.R., 2014, LNCS, V8414, P265, DOI [10.1007/978-3-642-54792, DOI 10.1007/978-3-642-54792]
   Clarkson MR, 2010, J COMPUT SECUR, V18, P1157, DOI 10.3233/JCS-2009-0393
   Coenen N., 2019, P 34 ANN ACM IEEE S, P1
   Coenen N, 2019, LECT NOTES COMPUT SC, V11561, P121, DOI 10.1007/978-3-030-25540-4_7
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Enoiu EP, 2016, LECT NOTES COMPUT SC, V9976, P155, DOI 10.1007/978-3-319-47443-4_10
   Enoiu EP, 2016, INT J SOFTW TOOLS TE, V18, P335, DOI 10.1007/s10009-014-0355-9
   Fellner A, 2017, MEMOCODE 2017: PROCEEDINGS OF THE 15TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P57, DOI 10.1145/3127041.3127049
   Fellner A, 2019, LECT NOTES COMPUT SC, V11724, P203, DOI 10.1007/978-3-030-30446-1_11
   Finkbeiner B, 2019, FORM METHOD SYST DES, V54, P336, DOI 10.1007/s10703-019-00334-z
   Finkbeiner B, 2017, LEIBNIZ INT PR INFOR, V66, DOI 10.4230/LIPIcs.STACS.2017.30
   Finkbeiner B, 2017, LECT NOTES COMPUT SC, V10427, P564, DOI 10.1007/978-3-319-63390-9_29
   Finkbeiner B, 2015, LECT NOTES COMPUT SC, V9206, P30, DOI 10.1007/978-3-319-21690-4_3
   Fraser G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P41, DOI 10.1109/ICST.2009.33
   Fraser G, 2009, LECT NOTES COMPUT SC, V5668, P58
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jagadeesan R., 2016, LIPICS, V59
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Karimpour J, 2015, IFIP ADV INF COMM TE, V455, P82, DOI 10.1007/978-3-319-18467-8_6
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Lal A, 2009, FORM METHOD SYST DES, V35, P73, DOI 10.1007/s10703-009-0078-9
   Marcozzi M, 2017, IEEE INT CONF SOFTW, P436, DOI 10.1109/ICST.2017.48
   McLean John., 1992, J COMPUT SECUR, V1, P37, DOI [10.3233/JCS-1992-1103, DOI 10.3233/JCS-1992-1103]
   NELSON G, 1989, ACM T PROGR LANG SYS, V11, P517, DOI 10.1145/69558.69559
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Sayward F.G:, 1979, TECHNICAL REPORT DTI
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   van der Meyden R, 2007, ELECTRON NOTES THEOR, V168, P61, DOI 10.1016/j.entcs.2006.11.002
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wang KY, 2018, PROC IEEE ACM INT C, P29, DOI 10.1145/3183440.3183488
   Yesha Y.:, 2003, P 2002 WSEAS INT C S, P1351
NR 54
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 405
EP 427
DI 10.1007/s10270-020-00850-1
EA APR 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000635949200001
PM 34720800
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Pol'la, M
   Buccella, A
   Cechich, A
AF Pol'la, Matias
   Buccella, Agustina
   Cechich, Alejandra
TI Analysis of variability models: a systematic literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Variability analysis; Software Product Line; Variability management;
   Supporting tools
ID SOFTWARE PRODUCT LINES; RULE-BASED APPROACH; INCONSISTENCY; MANAGEMENT
AB Dealing with variability, during Software Product Line Engineering (SPLE), means trying to allow software engineers to develop a set of similar applications based on a manageable range of variable functionalities according to expert users' needs. Particularly, variability management (VM) is an activity that allows flexibility and a high level of reuse during software development. In the last years, we have witnessed a proliferation of methods, techniques and supporting tools for VM in general, and for its analysis in particular. More precisely, a specific field has emerged, named (automated) variability analysis, focusing on verifying variability models across the SPLE's phases. In this paper, we introduce a systematic literature review of existing proposals (as primary studies) focused on analyzing variability models. We define a classification framework, which is composed of 20 sub-characteristics addressing general aspects, such as scope and validation, as well as model-specific aspects, such as variability primitives, reasoner type. The framework allows to look at the analysis of variability models during its whole life cycle-from design to derivation-according to the activities involved during an SPL development. Also, the framework helps us answer three research questions defined for showing the state of the art and drawing challenges for the near future. Among the more interesting challenges, we can highlight the needs of more applications in industry, the existence of more mature tools, and the needs of providing more semantics in the way of variability primitives for identifying inconsistencies in the models.
C1 [Pol'la, Matias; Buccella, Agustina; Cechich, Alejandra] Univ Nacl Comahue, Dept Ingn Sistemas, Fac Informat, GIISCO Res Grp, RA-1400 Buenos Aires, Neuquen, Argentina.
C3 Universidad Nacional del Comahue
RP Buccella, A (corresponding author), Univ Nacl Comahue, Dept Ingn Sistemas, Fac Informat, GIISCO Res Grp, RA-1400 Buenos Aires, Neuquen, Argentina.
EM agustina.buccella@fi.uncoma.edu.ar
FU UNComa Project [04/F009]
FX This work is partially supported by the UNComa Project 04/F009 "Reuso de
   Software orientado a Dominios-Parte II" part of the program "Desarrollo
   de Software Basado en Reuso-Parte II".
CR Abele Andreas, 2012, ACM International Conference Proceeding Series, V2, P246
   Abele Andreas., 2010, Proceedings of the 4th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'10), V37, P101
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Afriyanti I., 2017, ARXIV170702511 CORR
   Aleixo FA, 2013, LECT NOTES COMPUT SC, V7983, P153, DOI 10.1007/978-3-642-39259-7_14
   Alves Pereira Juliana, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P73, DOI 10.1007/978-3-319-14130-5_6
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2009, P 2009 ACM S APPL CO
   Asadi M, 2016, SOFTW SYST MODEL, V15, P257, DOI 10.1007/s10270-014-0402-8
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Beuche D, 2013, PURE VARIANTS, P173
   Bhushan M, 2018, J SYST SOFTWARE, V137, P605, DOI 10.1016/j.jss.2017.06.002
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Braun G.A., 2017, P 30 INT WORKSH DESC
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buccella A, 2013, COMPUT GEOSCI-UK, V54, P9, DOI 10.1016/j.cageo.2012.11.014
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Choi T, 2012, 2012 9TH INTERNATIONAL CONFERENCE ON UBIQUITOUS ROBOTS AND AMBIENT INTELLIGENCE (URAL), P553, DOI 10.1109/URAI.2012.6463072
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Das Nakul C., 2014, Lecture Notes on Software Engineering, V2, P210, DOI 10.7763/LNSE.2014.V2.125
   Dhungana D, 2013, IEEE INT CONF AUTOM, P551, DOI 10.1109/ASE.2013.6693112
   Djebbi O, 2007, LECT NOTES COMPUT SC, V4495, P279
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   Eichelberger Holger., 2013, Proceedings of the 17th International Software Product Line Conference (SPLC'13), P12
   El Dammagh M, 2011, LECT NOTES COMPUT SC, V6999, P120, DOI 10.1007/978-3-642-24574-9_17
   Elfaki AO, 2016, EXPERT SYST, V33, P3, DOI 10.1111/exsy.12116
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Groher I., 2008, P 7 INT C ASP OR SOF
   Guedes G, 2015, P BRAZ SYMP SOFTW, P90, DOI 10.1109/SBCARS.2015.20
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kang K., 1990, Technical Report CMU/ SEI- 90- TR- 21
   Karatas AS, 2013, SCI COMPUT PROGRAM, V78, P2295, DOI 10.1016/j.scico.2012.06.004
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kowal M, 2017, ACM SIGPLAN NOTICES, V52, P132, DOI [10.1145/3093335.2993248, 10.1145/2993236.2993248]
   Krieter S, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P42, DOI 10.1145/3109729.3109751
   Langermeier M, 2014, LECT NOTES COMPUT SC, V8377, P225, DOI 10.1007/978-3-319-06859-6_20
   Lesta U., 2015, P FMSPLE 2015
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Lutzenberger Marco, 2013, Engineering Multi-Agent Systems. First International Workshop, EMAS 2013. Revised Selected Papers: LNCS 8245, P156, DOI 10.1007/978-3-642-45343-4_9
   Mauro J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P18, DOI 10.1145/3109729.3109752
   Mazo R., 2015, P 19 INT C SOFTW PRO, P374, DOI [10.1145/2791060.2791103, DOI 10.1145/2791060.2791103]
   Meinicke J., 2014, P 18 INT SOFTW PROD, P94, DOI DOI 10.1145/2647908.2655972
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Nakajima S., 2010, P SAC 10 2010 ACM S, P2191, DOI [10.1145/1774088.1774550, DOI 10.1145/1774088.1774550]
   Noorian M., 2011, P DMS P 17 INT C DISTR MUL, V11, P158
   Pereira JA, 2013, P BRAZ SYMP SOFTW, P20, DOI 10.1109/SBCARS.2013.13
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pol'la M, 2018, LECT NOTES COMPUT SC, V10963, P365, DOI 10.1007/978-3-319-95171-3_29
   Proceedings ( ICB Research, 2009, P 3 INT WORKSH VAR M, V29, P29
   Rincón L, 2015, ELECTRON NOTES THEOR, V314, P61, DOI 10.1016/j.entcs.2015.05.005
   Rincón LF, 2014, ELECTRON NOTES THEOR, V302, P111, DOI 10.1016/j.entcs.2014.01.023
   Ripon Shamim, 2014, International Journal of Computer and Electrical Engineering, V6, P1, DOI 10.7763/IJCEE.2014.V6.783
   Roos-frantz F., FEATURE MODEL ORTHOG
   Roos-Frantz F., 2012, 16 INT SOFTW PROD LI, V2, P250
   Sannella M., 1994, UIST '94. Seventh Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P137, DOI 10.1145/192426.192485
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sree-Kumar A, 2016, ELECTRON P THEOR COM, P46, DOI 10.4204/EPTCS.206.5
   Teixeira L, 2013, J SYST SOFTWARE, V86, P1038, DOI 10.1016/j.jss.2012.11.006
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thurimella A. K., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P313, DOI 10.1109/SPLC.2011.17
   Tomassetti Federico, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P91, DOI 10.1049/ic.2012.0012
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
   Trujillo-Tzanahua GI, 2018, TRENDS APPL SOFTWARE, P117, DOI [10.1007/978-3-319-69341-5_11, DOI 10.1007/978-3-319-69341-5_11]
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Von Der Massen T., 2004, P WORKSH SOFTW VAR M
   Wang B, 2014, J COMPUT SCI TECH-CH, V29, P724, DOI 10.1007/s11390-014-1462-5
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   Whittle J, 2013, MODEL DRIVEN ENG LAN, V1, P17
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 83
TC 7
Z9 7
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1043
EP 1077
DI 10.1007/s10270-020-00839-w
EA NOV 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000591576300001
DA 2024-07-18
ER

PT J
AU Steinau, S
   Andrews, K
   Reichert, M
AF Steinau, Sebastian
   Andrews, Kevin
   Reichert, Manfred
TI Coordinating large distributed relational process structures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process interactions; Relational process structure; Coordination
   process; Distributed process execution; BPM in the cloud
ID BUSINESS PROCESS MANAGEMENT; FRAMEWORK; SUPPORT; BPM
AB Representing a business process as a collaboration of interacting processes has become feasible with the emergence of data-centric business process management paradigms. Usually, these interacting processes have relations and, thereby, form a complex relational process structure. The interactions of processes within this relational process structure need to be coordinated to arrive at a meaningful overall business goal. However, relational process structures may become arbitrarily large. With the use of cloud technology, they may additionally be distributed over multiple nodes, allowing for scalability. Coordination processes have been proposed to coordinate relational process structures, where processes may have one-to-many and many-to-many relations at run-time. This paper shows how multiple coordination processes can be used in a decentralized fashion to more efficiently coordinate large, distributed process structures. The main challenge of using multiple coordination processes is to effectively realize the coordination responsibility of each coordination process. Key components of the solution are the subsidiary principle and the hierarchy of the relational process structure. Finally, an implementation of the coordination process concept based on microservices was developed, which allows for fast and concurrent enactment of multiple, decentralized coordination processes in large, distributed process structures.
C1 [Steinau, Sebastian; Andrews, Kevin; Reichert, Manfred] Ulm Univ, Inst Databases & Informat Syst, Bldg O27 Level 5,James Franck Ring, D-89081 Ulm, Germany.
C3 Ulm University
RP Steinau, S (corresponding author), Ulm Univ, Inst Databases & Informat Syst, Bldg O27 Level 5,James Franck Ring, D-89081 Ulm, Germany.
EM Sebastian.Steinau@uni-ulm.de; Kevin.Andrews@uni-ulm.de;
   Manfred.Reichert@uni-ulm.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Agha G., 1988, READINGS DISTRIBUTED, P398
   ANDREWS K, 2019, INF SYST
   Andrews K, 2018, LECT NOTES COMPUT SC, V11230, P80, DOI 10.1007/978-3-030-02671-4_5
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   Baeyens Tom, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P10, DOI 10.1007/978-3-642-40176-3_3
   Bauer T, 2003, INT J COOP INF SYST, V12, P295, DOI 10.1142/S0218843003000760
   Belardinelli F., 2012, Service-Oriented Computing, V7636. Lecture Notes in Computer Science, P17, DOI [DOI 10.1007/978-3-642-34321-6_2, 10.1007/978-3-642-34321-6_2]
   Bonini M., 2018, 15 INT C INF CONTR A, V2, P380
   Ceri S, 1997, SEVENTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES IN DATA ENGINEERING, PROCEEDINGS, P76, DOI 10.1109/RIDE.1997.583705
   Chiao C.M., 2013, INT J ADV LIFE SCI, V5, P11
   Cohn D, 2008, LECT NOTES COMPUT SC, V5364, P722, DOI 10.1007/978-3-540-89652-4_63
   Decker G, 2011, INFORM SYST, V36, P292, DOI 10.1016/j.is.2010.06.005
   Deutsch A, 2016, ARXIV E PRINTS
   Duipmans EF, 2012, IEEE INT ENTERP, P165, DOI 10.1109/EDOCW.2012.30
   Duipmans EF, 2014, J GRID COMPUT, V12, P191, DOI 10.1007/s10723-013-9278-z
   Fahland D., 2011, CEUR WORKSHOP P, V705, P9
   Fahland D, 2019, LECT NOTES COMPUT SC, V11522, P3, DOI 10.1007/978-3-030-21571-2_1
   Güdemann M, 2013, LECT NOTES COMPUT SC, V7793, P226, DOI 10.1007/978-3-642-37057-1_16
   Hariri Babak Bagheri, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P379, DOI 10.1007/978-3-642-23059-2_28
   Hariri BB, 2013, LECT NOTES COMPUT SC, V8274, P600, DOI 10.1007/978-3-642-45005-1_51
   Heath F, 2013, LECT NOTES COMPUT SC, V8274, P705, DOI 10.1007/978-3-642-45005-1_65
   Hull B, 2011, CHANDOS INF PROF SER, P51
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Hull R, 2009, LECT NOTES COMPUT SC, V5900, P1, DOI 10.1007/978-3-642-10383-4_1
   Kamath M, 1996, LNCS, V1057, P425
   Knuplesch David, 2013, 9th IEEE International Conference on Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom 2013), P133, DOI 10.4108/icst.collaboratecom.2013.254095
   Künzle V, 2011, INT J INF SYST MODEL, V2, P19, DOI 10.4018/jismd.2011040102
   Lohmann N, 2011, LECT NOTES COMPUT SC, V7084, P92, DOI 10.1007/978-3-642-25535-9_7
   Lohmann N, 2010, LECT NOTES COMPUT SC, V6470, P32, DOI 10.1007/978-3-642-17358-5_3
   Müller D, 2007, LECT NOTES COMPUT SC, V4803, P131
   Müller D, 2008, LECT NOTES COMPUT SC, V5074, P48
   Müller D, 2006, LECT NOTES COMPUT SC, V4102, P368
   Nandi P., 2005, Proc. Intl. Conf. on Enterprise Information Systems, P179
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Rahman M, 2010, FUTURE GENER COMP SY, V26, P753, DOI 10.1016/j.future.2009.07.002
   Schulte S, 2015, FUTURE GENER COMP SY, V46, P36, DOI 10.1016/j.future.2014.09.005
   Steinau S, 2019, LNBIP, V340, P25
   Steinau S, 2019, LECT NOTES BUS INF P, V352, P19, DOI 10.1007/978-3-030-20618-5_2
   Steinau S, 2019, SOFTW SYST MODEL, V18, P2679, DOI 10.1007/s10270-018-0695-0
   Steinau S, 2018, LECT NOTES COMPUT SC, V11229, P21, DOI 10.1007/978-3-030-02610-3_2
   Steinau S, 2018, LECT NOTES COMPUT SC, V10816, P53, DOI 10.1007/978-3-319-91563-0_4
   Steinau S, 2017, CONF BUS INFORM, V1, P33, DOI 10.1109/CBI.2017.53
   Sun Y., 2012, ICSOC, P420
   Van der Aalst WMP, 2001, INT J COOP INF SYST, V10, P443, DOI 10.1142/S0218843001000412
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1901, P198
NR 45
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1403
EP 1435
DI 10.1007/s10270-020-00835-0
EA NOV 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000587599100001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Barquero, G
   Troya, J
   Vallecillo, A
AF Barquero, Gala
   Troya, Javier
   Vallecillo, Antonio
TI Improving query performance on dynamic graphs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data stream processing; Dynamic graphs; Performance optimization;
   Precomputing systems; Data queries
AB Querying large models efficiently often imposes high demands on system resources such as memory, processing time, disk access or network latency. The situation becomes more complicated when data are highly interconnected, e.g. in the form of graph structures, and when data sources are heterogeneous, partly coming from dynamic systems and partly stored in databases. These situations are now common in many existing social networking applications and geo-location systems, which require specialized and efficient query algorithms in order to make informed decisions on time. In this paper, we propose an algorithm to improve the memory consumption and time performance of this type of queries by reducing the amount of elements to be processed, focusing only on the information that is relevant to the query but without compromising the accuracy of its results. To this end, the reduced subset of data is selected depending on the type of query and its constituent filters. Three case studies are used to evaluate the performance of our proposal, obtaining significant speedups in all cases.
C1 [Barquero, Gala; Vallecillo, Antonio] Univ Malaga, ITIS Software, Malaga, Spain.
   [Troya, Javier] Univ Seville, Inst I3US, SCORE Lab, Seville, Spain.
C3 Universidad de Malaga; University of Sevilla
RP Troya, J (corresponding author), Univ Seville, Inst I3US, SCORE Lab, Seville, Spain.
EM gala@lcc.uma.es; jtroya@us.es; av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Troya, Javier/B-6951-2017
OI Vallecillo, Antonio/0000-0002-8139-9986; Troya,
   Javier/0000-0002-1314-9694; Barquero, Gala/0000-0003-2032-7003
FU European Commission (FEDER); Spanish Government [APOLO (US-1264651),
   HORATIO (RTI2018-101204-B-C21), EKIPMENT-PLUS (P18-FR-2895), COSCA
   (PGC2018-094905-B-I00)]
FX This work is partially supported by the European Commission (FEDER) and
   the Spanish Government under projects APOLO (US-1264651), HORATIO
   (RTI2018-101204-B-C21), EKIPMENT-PLUS (P18-FR-2895) and COSCA
   (PGC2018-094905-B-I00).
CR Acharya S., 2000, SIGMOD Record, V29, P487, DOI 10.1145/335191.335450
   Agarwal S, 2012, PROC VLDB ENDOW, V5, P1902, DOI 10.14778/2367502.2367533
   Angles R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3104031
   [Anonymous], 2014, P AMT MODELS 14
   Barcelo P, 2013, P ACM S PRINC DAT SY, P175, DOI [10.1145/2463664.2465216, DOI 10.1145/2463664.2465216]
   Barquero G., SDR ALGORITHM GIT RE
   Barquero G, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P166, DOI 10.1145/3239372.3239402
   Barquero G, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a9
   BBVA, 2013, IMP MOB WORLD C DYN
   Bergmann G., 2008, Proceedings of 3rd International Workshop on Graph and Model Transformation (GRaMoT 2008). 30th International Conference on Software Engineering, P25, DOI [10.1145/1402947.1402953, DOI 10.1145/1402947.1402953]
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Besta M., 2019, ARXIV191009017 CORR
   Besta M., 2019, ARXIV191212740 CORR
   Bouabdellaoui M, 2018, PHYS REV MATER, V2, DOI 10.1103/PhysRevMaterials.2.035203
   Callidus Software Inc.: OrientDB, DAT DES MOD WORLD
   Chaudhuri S, 2001, PROC INT CONF DATA, P534, DOI 10.1109/ICDE.2001.914867
   CHAUDHURI S, 2001, P ACM SIGMOD INT C M, P295
   Chaudhuri S, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P511, DOI 10.1145/3035918.3056097
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Etzion O., 2010, Event Processing in Action, Vfirst
   Fan WF, 2015, PODS'15: PROCEEDINGS OF THE 33RD ACM SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P173, DOI 10.1145/2745754.2745771
   Fan WF, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P301, DOI 10.1145/2588555.2610513
   Fan WF, 2010, PROC VLDB ENDOW, V3, P264, DOI 10.14778/1920841.1920878
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holzschuher F., 2013, P JOINT EDBT ICDT 20, P195, DOI DOI 10.1145/2457317.2457351
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   José RS, 2014, SPRINGER PR COMPLEX, P599, DOI 10.1007/978-3-319-04379-1__99
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kafka Apache., A Distributed Streaming Platform
   Kalavri V, 2018, IEEE T KNOWL DATA EN, V30, P305, DOI 10.1109/TKDE.2017.2762294
   Lee K, 2013, PROC VLDB ENDOW, V6, P1894, DOI 10.14778/2556549.2556571
   Li KY, 2018, DATA SCI ENG, V3, P379, DOI 10.1007/s41019-018-0074-4
   Ltd M., MEMGR DIFF NEO4J CYP
   Luckham D, 2012, EVENT PROCESSING FOR BUSINESS: ORGANIZING THE REAL-TIME ENTERPRISE, P1
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Memgraph Ltd, MEMGR GRAPH DAT
   Memgraph Ltd, MEMGR IND
   Mhedhbi A., 2020, ARXIV200400130 CORR
   Page L, 1998, P 7 INT WORLD WID WE, DOI DOI 10.1007/978-3-319-08789-4_10
   Peng P, 2019, IEEE T KNOWL DATA EN, V31, P670, DOI 10.1109/TKDE.2018.2841389
   Perliger A, 2011, PS-POLIT SCI POLIT, V44, P45, DOI 10.1017/S1049096510001848
   Razavi A, 2012, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE.2012.6227160
   Robinson Ian, 2013, GRAPH DATABASES
   Szarnyas G., 2018, ARXIV180607344 CORR
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Tinkerpop A., INTERFACE VERTEX PRO
   Trushkowsky B, 2016, COMMUN ACM, V59, P118, DOI 10.1145/2845644
   Trushkowsky B, 2013, PROC INT CONF DATA, P673, DOI 10.1109/ICDE.2013.6544865
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Uta A, 2019, INT CONF MANAGE DATA, P2009, DOI 10.1145/3299869.3320227
   W3C, RDF DAT ACC WORK GRO
   Wang Y, 2013, PROC INT CONF DATA, P709, DOI 10.1109/ICDE.2013.6544868
   Yang Christopher C., 2007, 2007 IEEE Intelligence and Security Informatics, P55
NR 55
TC 1
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1011
EP 1041
DI 10.1007/s10270-020-00832-3
EA NOV 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000583635300001
DA 2024-07-18
ER

PT J
AU Rockai, P
   Baranova, Z
   Mrazek, J
   Kejstova, K
   Barnat, J
AF Rockai, Petr
   Baranova, Zuzana
   Mrazek, Jan
   Kejstova, Katarina
   Barnat, Jirii
TI Reproducible execution of POSIX programs with DiOS
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software verification; Operating systems; POSIX; Reproducibility; C; C
   plus plus
AB In this paper, we describe DiOS , a lightweight model operating system, which can be used to execute programs that make use of POSIX APIs. Such executions are fully reproducible: running the same program with the same inputs twice will result in two exactly identical instruction traces, even if the program uses threads for parallelism. DiOS is implemented almost entirely in portable C and C++: although its primary platform is DiVM , a verification-oriented virtual machine, it can be configured to also run in KLEE, a symbolic executor. Finally, it can be compiled into machine code to serve as a user-mode kernel. Additionally, DiOS is modular and extensible. Its various components can be combined to match both the capabilities of the underlying platform and to provide services required by a particular program. Components can be added to cover additional system calls or APIs or removed to reduce overhead. The experimental evaluation has three parts. DiOS is first evaluated as a component of a program verification platform based on DiVM . In the second part, we consider its portability and modularity by combining it with the symbolic executor KLEE. Finally, we consider its use as a standalone user-mode kernel.
C1 [Rockai, Petr; Baranova, Zuzana; Mrazek, Jan; Kejstova, Katarina; Barnat, Jirii] Masaryk Univ, Fac Informat, Brno, Czech Republic.
C3 Masaryk University Brno
RP Rockai, P (corresponding author), Masaryk Univ, Fac Informat, Brno, Czech Republic.
EM xrockai@fi.muni.cz
OI Barnat, Jiri/0000-0003-2044-2861; Rockai, Petr/0000-0002-8484-1063;
   Mrazek, Jan/0000-0002-3433-9788
FU Czech Science Foundation [18-02177S]; Red Hat, Inc.
FX This work has been partially supported by the Czech Science Foundation
   grant No. 18-02177S and by Red Hat, Inc.
CR Baranová Z, 2017, LECT NOTES COMPUT SC, V10482, P201, DOI 10.1007/978-3-319-68167-2_14
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Chirigati F., 2013, THEORY PRACTICE PROV
   Daum M, 2010, LECT NOTES COMPUT SC, V6396, P105, DOI 10.1007/978-3-642-16265-7_9
   Frew J, 2008, CONCURR COMP-PRACT E, V20, P485, DOI 10.1002/cpe.1247
   Goel S, 2014, EMERGING TECHNOLOGIES AND MANAGEMENT OF CROP STRESS TOLERANCE, VOL 1: BIOLOGICAL TECHNIQUES, P99, DOI 10.1016/B978-0-12-800876-8.00005-9
   Inverso O, 2015, IEEE INT CONF AUTOM, P807, DOI 10.1109/ASE.2015.108
   Joshi Shrinivas, 2007, 2007 IEEE International Conference on Software Maintenance, P234, DOI 10.1109/ICSM.2007.4362636
   Kejstova K, 2019, THESIS
   Kejstová K, 2017, LECT NOTES COMPUT SC, V10548, P225, DOI 10.1007/978-3-319-67531-2_14
   Kong S, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P758, DOI 10.1109/ITNG.2009.80
   Krekel H, 2004, Pytest, Patent No. 532
   Lauko H, 2019, LECT NOTES COMPUT SC, V11429, P204, DOI 10.1007/978-3-030-17502-3_14
   Leungwattanakit W, 2014, IEEE T SOFTWARE ENG, V40, P483, DOI 10.1109/TSE.2013.49
   Mackinnon Tim., 2001, ENDO TESTING UNIT TE, P287
   Mostafa S, 2014, INT CONF QUAL SOFTW, P127, DOI 10.1109/QSIC.2014.19
   Musuvathi M., 2008, S OP SYST DES IMPL U
   Rockai P, 2018, J SYST SOFTWARE, V143, P1, DOI 10.1016/j.jss.2018.04.026
   Still V, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P54, DOI 10.1109/QRS.2017.15
   Wachter B, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P210
   Yang Y, 2008, TECHNICAL REPORT
NR 23
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 363
EP 382
DI 10.1007/s10270-020-00837-y
EA OCT 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000582103200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Opdahl, AL
   Tessem, B
AF Opdahl, Andreas L.
   Tessem, Bjornar
TI Ontologies for finding journalistic angles
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Computational journalism; Data journalism; Journalistic knowledge
   platforms; News angles; Knowledge graphs; Ontology
ID KNOWLEDGE GRAPHS; DESIGN SCIENCE; SEMANTIC WEB; MACHINE
AB Journalism relies more and more on information and communication technology (ICT). ICT-basedjournalistic knowledge platformscontinuously harvest potentially news-relevant information from the Internet and make it useful for journalists. Because information about the same event is available from different sources and formats vary widely,knowledge graphsare emerging as a preferred technology for integrating, enriching, and preparing information for journalistic use. The paper explores how journalistic knowledge graphs can be augmented with support fornews angles, which can help journalists to detect newsworthy events and make them interesting for the intended audience. We argue that finding newsworthy angles on news-related information is an important example of a topical problem in information science: that of detecting interesting events and situations in big data sets and presenting those events and situations in interesting ways.
C1 [Opdahl, Andreas L.; Tessem, Bjornar] Univ Bergen, Dept Informat Sci & Media Studies, N-5020 Bergen, Norway.
C3 University of Bergen
RP Opdahl, AL (corresponding author), Univ Bergen, Dept Informat Sci & Media Studies, N-5020 Bergen, Norway.
EM Andreas.Opdahl@uib.no; Bjornar.Tessem@uib.no
RI Opdahl, Andreas Lothe/B-5508-2015
OI Opdahl, Andreas Lothe/0000-0002-3141-1385
FU University of Bergen - Norwegian Research Council [275872]
FX Open Access funding provided by University of Bergen. The News Angler
   project is funded by the Norwegian Research Council's IKTPLUSS programme
   as Project 275872.
CR Al-Moslmi M. Gallofre, 2019, 3 EURDATA COMPUT JOU, P3
   Al-Moslmi T, 2020, IEEE ACCESS, V8, P32862, DOI 10.1109/ACCESS.2020.2973928
   Allemang D, 2011, SEMANTIC WEB FOR THE WORKING ONTOLOGIST: EFFECTIVE MODELING IN RDFS AND OWL, 2ND EDITION, P1
   [Anonymous], 2018, ARXIV180807699
   [Anonymous], 2007, SCANDINAVIAN J INFOR
   [Anonymous], 2004, AIS
   Berven A., 2018, NOKOBIT, V26, P1
   Bizer C, 2011, SEMANTIC SERVICES, INTEROPERABILITY AND WEB APPLICATIONS: EMERGING CONCEPTS, P205, DOI 10.4018/978-1-60960-593-3.ch008
   Breslin JG, 2005, LECT NOTES COMPUT SC, V3532, P500
   Brown A, 2011, TPM-PHILOS MAG, P87, DOI 10.5840/tpm201155112
   Corcoglioniti F, 2016, IEEE T KNOWL DATA EN, V28, P3261, DOI 10.1109/TKDE.2016.2602206
   Gallofre Ocana M., 2018, 4 NORW BIG DAT S NOB, P17
   Gangemi A, 2002, LECT NOTES ARTIF INT, V2473, P166
   Gangemi A., 2009, RDF OWL ONTOLOGY
   Gangemi A, 2017, SEMANT WEB, V8, P873, DOI 10.3233/SW-160240
   Germann U, 2018, NLP OPEN SOURCE SOFTWARE (NLP-OSS), P47
   Gervás P, 2009, AI MAG, V30, P49, DOI 10.1609/aimag.v30i3.2250
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Hak Lae Kim, 2008, 2008 Second IEEE International Conference on Semantic Computing (ICSC), P315, DOI 10.1109/ICSC.2008.79
   Harcup T, 2017, JOURNALISM STUD, V18, P1470, DOI 10.1080/1461670X.2016.1150193
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Kim HL, 2010, J INF SCI, V36, P57, DOI 10.1177/0165551509346785
   Kobilarov G, 2009, LECT NOTES COMPUT SC, V5554, P723, DOI 10.1007/978-3-642-02121-3_53
   Latar N.L., 2015, The New World of Transitioned Media, P65
   Leban G, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P107, DOI 10.1145/2567948.2577024
   Liu XM, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P207, DOI 10.1145/2983323.2983363
   Lohmann S., 2011, P 7 INT C SEM SYST I, P95, DOI DOI 10.1145/2063518.2063531
   Lohmann S, 2015, LECT NOTES ARTIF INT, V8982, P154, DOI 10.1007/978-3-319-17966-7_21
   Machill M, 2009, JOURNALISM STUD, V10, P178, DOI 10.1080/14616700802337768
   Mendes Pablo N, 2011, P 7 INT C SEM SYST, P1, DOI [DOI 10.1145/2063518.2063519, 10.1145/2063518.2063519]
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Miroshnichenko A, 2018, INFORMATION, V9, DOI 10.3390/info9070183
   NEWMAN R, 2005, TAG ONTOLOGY
   Opdahl A. L., 2016, NOKOBIT, V24, P1
   Opdahl AL, 2019, LECT NOTES BUS INF P, V352, P279, DOI 10.1007/978-3-030-20618-5_19
   Passant Alexandre, 2008, LDOW
   Peroni S., 2011, P 7 INT C SEM SYST, P111, DOI DOI 10.1145/2063518.2063533
   Raimond Yves, 2007, THE EVENT ONTOLOGY
   Raval Mihir, 2012, BMC Res Notes, V5, P594, DOI 10.1186/1756-0500-5-594
   Rospocher M, 2016, J WEB SEMANT, V37-38, P132, DOI 10.1016/j.websem.2015.12.004
   Scherp A, 2009, K-CAP'09: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE, P137
   Segers R., 2015, P MAPLEX
   Segers R., 2017, P EVENTS STORIES NEW, P37
   Shaw R, 2009, LECT NOTES COMPUT SC, V5926, P153, DOI 10.1007/978-3-642-10871-6_11
   Shekarpour S, 2019, IEEE INT C SEMANT CO, P385, DOI [10.1109/ICOSC.2019.8665605, 10.1109/ICSC.2019.00076]
   Shoemaker P.J., 1995, MEDIATING MESSAGE TH
   Tessem B, 2019, INT CONF RES CHAL, P323, DOI 10.1109/rcis.2019.8877058
   Thurman N, 2019, HDB JOURNALISM STUDI
   Troncy R, 2008, LECT NOTES COMPUT SC, V5318, P483, DOI 10.1007/978-3-540-88564-1_31
   van Hage WR, 2011, J WEB SEMANT, V9, P128, DOI 10.1016/j.websem.2011.03.003
   Vossen P, 2016, KNOWL-BASED SYST, V110, P60, DOI 10.1016/j.knosys.2016.07.013
NR 51
TC 11
Z9 11
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 71
EP 87
DI 10.1007/s10270-020-00801-w
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000539961500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Miyazawa, A
   Ribeiro, P
   Li, W
   Cavalcanti, A
   Timmis, J
   Woodcock, J
AF Miyazawa, Alvaro
   Ribeiro, Pedro
   Li, Wei
   Cavalcanti, Ana
   Timmis, Jon
   Woodcock, Jim
TI RoboChart: modelling and verification of the functional behaviour of
   robotic applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE State machines; Formal semantics; Process algebra; CSP; Model checking;
   Timed properties; Domain-specific language for robotics
ID FINITE-STATE MACHINE; SPECIFICATION; STATECHARTS; FRAMEWORK; SEMANTICS;
   CHECKING; SWARM
AB Robots are becoming ubiquitous:from vacuum cleaners to driverless cars, there is a wide variety of applications, many with potential safety hazards. The work presented in this paper proposes a set of constructs suitable for both modelling robotic applications and supporting verification via model checking and theorem proving. Our goal is to support roboticists in writing models and applying modern verification techniques using a language familiar to them. To that end, we present RoboChart, a domain-specific modelling language based on UML, but with a restricted set of constructs to enable a simplified semantics and automated reasoning. We present the RoboChart metamodel, its well-formedness rules, and its process-algebraic semantics. We discuss verification based on these foundations using an implementation of RoboChart and its semantics as a set of Eclipse plug-ins called RoboTool.
C1 [Miyazawa, Alvaro; Ribeiro, Pedro; Cavalcanti, Ana; Woodcock, Jim] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
   [Li, Wei; Timmis, Jon] Univ York, Dept Elect Engn, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK; University of York - UK
RP Miyazawa, A (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
EM Alvaro.Miyazawa@york.ac.uk; Pedro.Ribeiro@york.ac.uk; Wei.Li@york.ac.uk;
   Ana.Cavalcanti@york.ac.uk; Jon.Timmis@york.ac.uk;
   Jim.Woodcock@york.ac.uk
RI Miyazawa, Alvaro/M-7118-2019
OI Miyazawa, Alvaro/0000-0003-2233-9091; Cavalcanti, Ana Lucia
   Caneca/0000-0002-0831-1976; Woodcock, James/0000-0001-7955-2702
FU EPSRC [EP/M025756/1, EP/R025479/1]; Royal Academy of Engineering; EPSRC
   [EP/M025756/1, EP/R025479/1] Funding Source: UKRI
FX This work is funded by the EPSRC Grants EP/M025756/1 and EP/R025479/1,
   and by the Royal Academy of Engineering. No new primary data was created
   during this study. We thank James Baxter and Augusto Sampaio for many
   suggestions to improve RoboChart and this paper. The icons used in
   RoboChart have been made by Sarfraz Shoukat, Freepik, Google, Icomoon
   andMadebyoliver from www.flaticon.com, and are licensed under CC 3.0 BY.
CR Akhlaki KB, 2007, SCI COMPUT PROGRAM, V65, P41, DOI 10.1016/j.scico.2006.08.005
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2012, OMG SYST MOD LANG OM
   [Anonymous], 2015, Journal of Software Engineering for Robotics (JOSER)
   [Anonymous], 2015, OMG UN MOD LANG
   Baar T, 2016, LECT NOTES COMPUT SC, V9609, P50, DOI 10.1007/978-3-319-41579-6_5
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   BERGSTRA JA, 1989, LECT NOTES COMPUT SC, V354, P50, DOI 10.1007/BFb0013021
   Berthomieu B, 2006, INT CONF QUANT EVAL, P123
   Bjerknes J. D., 2013, FAULT TOLERANCE SCAL, P431
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Broy M., 2007, TECHNICAL REPORT
   Brunner SG, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P3283, DOI 10.1109/IROS.2016.7759506
   Buchanan E, 2016, LECT NOTES COMPUT SC, V9882, P113, DOI 10.1007/978-3-319-44427-7_10
   CALVEZ JP, 1992, MICROPROC MICROPROG, V35, P133, DOI 10.1016/0165-6074(92)90307-S
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Cavalcanti A, 2006, LECT NOTES COMPUT SC, V3167, P220
   Chen JN, 2013, IEEE INT CONF ROBOT, P863, DOI 10.1109/ICRA.2013.6630674
   David A, 2002, LECT NOTES COMPUT SC, V2306, P218
   DAVIES J, 1995, THEOR COMPUT SCI, V138, P243, DOI 10.1016/0304-3975(94)00169-J
   Davies J., 2003, Formal Aspects of Computing, V15, P118, DOI 10.1007/s00165-003-0008-3
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEANTONI J, 2012, TIMESQUARE TREAT YOU, V7304, P34
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Dixon C, 2012, ROBOT AUTON SYST, V60, P1429, DOI 10.1016/j.robot.2012.03.003
   DRUSINSKY D, 1989, IEEE T COMPUT AID D, V8, P798, DOI 10.1109/43.31537
   DUTT ND, 1991, COMPUTER HARDWARE DESCRIPTION LANGUAGES AND THEIR APPLICATIONS, P407
   Endo Y, 2004, IEEE T SYST MAN CY C, V34, P168, DOI 10.1109/TSMCC.2004.826285
   Espiau Bernard., 1996, Robotics research, P225
   Farrell M, 2018, LECT NOTES COMPUT SC, V11023, P161, DOI 10.1007/978-3-319-98938-9_10
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   Foster Simon, 2018, Formal Aspects of Component Software. 15th International Conference (FACS 2018). Proceedings: Lecture Notes in Computer Science (LNCS 11222), P137, DOI 10.1007/978-3-030-02146-7_7
   Foster Simon, 2015, Unifying Theories of Programming 5th International Symposium, UTP 2014. Revised Selected Papers: LNCS 8963, P21, DOI 10.1007/978-3-319-14806-9_2
   Foster S., 2017, LECT NOTES COMPUTER, V10160, P39
   Foster S., 2016, LECT NOTES COMPUTER
   Foster S, 2016, LECT NOTES COMPUT SC, V9965, P295, DOI 10.1007/978-3-319-46750-4_17
   Foughali M, 2016, LECT NOTES COMPUT SC, V10009, P383, DOI 10.1007/978-3-319-47846-3_24
   Gauci M, 2014, INT J ROBOT RES, V33, P1145, DOI 10.1177/0278364914525244
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gobillot N, 2014, LECT NOTES COMPUT SC, V8810, P303, DOI 10.1007/978-3-319-11900-7_26
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Hilder JA, 2012, IEEE T SYST MAN CY C, V42, P1730, DOI 10.1109/TSMCC.2012.2218236
   HILTON EC, 2018, DISTRIBUTED AUTONOMO
   Hoare C. A. R., 1998, Unifying Theories of Programming
   Hoare CAR., 1985, Communicating Sequential Processes
   Hochgeschwender N, 2013, IEEE INT C INT ROBOT, P3907, DOI 10.1109/IROS.2013.6696915
   Kuske S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P11
   Kwiatkowska M., 2004, International Journal on Software Tools for Technology Transfer, V6, P128, DOI 10.1007/s10009-004-0140-2
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Lima Lucas, 2017, Software and Systems Modeling, V16, P875, DOI 10.1007/s10270-015-0492-y
   Lima L, 2017, SOFTW SYST MODEL, V16, P875, DOI 10.1007/s10270-015-0492-y
   Lowe G, 2008, FORM ASP COMPUT, V20, P277, DOI 10.1007/s00165-007-0065-0
   Luckcuck M., 2018, CORR
   Mallet F, 2008, INNOV SYST SOFTW ENG, V4, P309, DOI 10.1007/s11334-008-0055-2
   Maloney J, 2004, SECOND INTERNATIONAL CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P104
   Maoz S., 2018, SPECTRA LANGUAGE SPE
   Maoz S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P17, DOI 10.1145/3196558.3196561
   Maoz S, 2016, ELECTRON P THEOR COM, P58, DOI 10.4204/EPTCS.202.5
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Menghi Claudio, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P434, DOI 10.1145/3183440.3195044
   Milner R., 1989, Communication and concurrency
   Miyazawa A, 2017, IEEE INT C INT ROBOT, P3869, DOI 10.1109/IROS.2017.8206238
   Miyazawa A, 2014, LECT NOTES COMPUT SC, V8739, P155, DOI 10.1007/978-3-319-10181-1_10
   Miyazawa A, 2012, SCI COMPUT PROGRAM, V77, P1151, DOI 10.1016/j.scico.2011.07.007
   Naylor B., 2014, P 14 INT C SYNTH SIM, P290
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Ölveczky PC, 2010, LECT NOTES COMPUT SC, V6117, P47, DOI 10.1007/978-3-642-13464-7_5
   Park HW, 2013, IEEE T ROBOT, V29, P331, DOI 10.1109/TRO.2012.2230992
   Pembeci Izzet., 2002, Proceedings of the 4th ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP '02, P168
   Rabbath CA, 2013, J INTELL ROBOT SYST, V70, P233, DOI 10.1007/s10846-012-9692-7
   Ramaswamy A, 2014, IEEE INT C INT ROBOT, P1517, DOI 10.1109/IROS.2014.6942757
   Ramos R, 2005, LECT NOTES COMPUT SC, V3535, P99
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   Ribeiro Pedro, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P18, DOI 10.1007/978-3-319-66845-1_2
   RoboCalc Project, 2017, ROBOCALC PROJECT ROB
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Schillinger P, 2016, IEEE INT CONF ROBOT, P2796, DOI 10.1109/ICRA.2016.7487442
   Schlick C.M., 2009, Industrial Engineering and Ergonomics: Visions, Concepts, Methods and Tools, P1, DOI [DOI 10.1007/978-3-642-01293-8, 10.1007/978-3-642-01293-8]
   Schneider S, 2000, Concurrent and real-time systems
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Sherif A, 2010, FORM ASP COMPUT, V22, P153, DOI 10.1007/s00165-009-0119-6
   Soetens P, 2005, IEEE INT CONF ROBOT, P259
   Spichkova M., 2012, P 2 WORKSH FORM METH, DOI [10.4204/EPTCS.86.3, DOI 10.4204/EPTCS.86.3]
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   The Math Works Inc., STAT STAT COD 7 US G
   Tomic T, 2012, IEEE ROBOT AUTOM MAG, V19, P46, DOI 10.1109/MRA.2012.2206473
   University of York, ROBOTOOL REF MAN
   University of York, ROBOCHART REF MAN
   WEI K, 2011, INT C ENG COMPL COMP, P55, DOI DOI 10.1109/ICECCS.2011.13
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Zhu H., 2013, LECT NOTES COMPUTER, V7681, P224
   ZIC JJ, 1994, ACM T PROGR LANG SYS, V16, P1661, DOI 10.1145/197320.197322
NR 100
TC 51
Z9 51
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3097
EP 3149
DI 10.1007/s10270-018-00710-z
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500013
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Cremona, F
   Lohstroh, M
   Broman, D
   Lee, EA
   Masin, M
   Tripakis, S
AF Cremona, Fabio
   Lohstroh, Marten
   Broman, David
   Lee, Edward A.
   Masin, Michael
   Tripakis, Stavros
TI Hybrid co-simulation: it's about time
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Co-simulation; Functional mock-up interface; Time
AB Model-based design methodologies are commonly used in industry for the development of complex cyber-physical systems (CPSs). There are many different languages, tools, and formalisms for model-based design, each with its strengths and weaknesses. Instead of accepting some weaknesses of a particular tool, an alternative is to embrace heterogeneity, and to develop tool integration platforms and protocols to leverage the strengths from different environments. A fairly recent attempt in this direction is the functional mock-up interface (FMI) standard that includes support for co-simulation. Although this standard has reached acceptance in industry, it provides only limited support for simulating systems that mix continuous and discrete behavior, which are typical of CPS. This paper identifies the representation of time as a key problem, because the FMI representation does not support well the discrete events that typically occur at the cyber-physical boundary. We analyze alternatives for representing time in hybrid co-simulation and conclude that a superdense model of time using integers only solves many of these problems. We show how an execution engine can pick an adequate time resolution, and how disparities between time representations internal to co-simulated components and the resulting effects of time quantization can be managed. We propose a concrete extension to the FMI standard for supporting hybrid co-simulation that includes integer time, automatic choice of time resolution, and the use of absent signals. We explain how these extensions can be implemented modularly within the frameworks of existing simulation environments.
C1 [Cremona, Fabio; Tripakis, Stavros] Univ Calif Berkeley, Berkeley, CA 94720 USA.
   [Lohstroh, Marten] Univ Calif Berkeley, Comp Sci, Berkeley, CA 94720 USA.
   [Lee, Edward A.] Univ Calif Berkeley, EECS, Berkeley, CA 94720 USA.
   [Lee, Edward A.] Univ Calif Berkeley, EE Div, Berkeley, CA 94720 USA.
   [Lee, Edward A.] Univ Calif Berkeley, EECS Dept, Berkeley, CA 94720 USA.
   [Broman, David] KTH Royal Inst Technol, Model Based Comp Syst MCS Res Grp, Stockholm, Sweden.
   [Masin, Michael] IBM Res Haifa, Syst & IoT Engn Grp, Haifa, Israel.
   [Tripakis, Stavros] Aalto Univ, Espoo, Finland.
C3 University of California System; University of California Berkeley;
   University of California System; University of California Berkeley;
   University of California System; University of California Berkeley;
   University of California System; University of California Berkeley;
   University of California System; University of California Berkeley;
   Royal Institute of Technology; Aalto University
RP Lee, EA (corresponding author), Univ Calif Berkeley, EECS, Berkeley, CA 94720 USA.; Lee, EA (corresponding author), Univ Calif Berkeley, EE Div, Berkeley, CA 94720 USA.; Lee, EA (corresponding author), Univ Calif Berkeley, EECS Dept, Berkeley, CA 94720 USA.
EM f.cremona@eecs.berkeley.edu; marten@eecs.berkeley.edu; dbro@kth.se;
   eal@eecs.berkeley.edu; michaelm@il.ibm.com; stavros@eecs.berkeley.edu
RI Lee, Edward/AAU-4604-2021
OI Lee, Edward/0000-0002-5663-0584; Tripakis, Stavros/0000-0002-1777-493X;
   Lohstroh, Marten/0000-0001-8833-4117
FU TerraSwarm Research Center - MARCO; TerraSwarm Research Center - DARPA;
   National Science Foundation (NSF) [1446619, 1329759, 1139138]; iCyPhy
   (the Industrial Cyber-Physical Systems Research Center); Denso; National
   Instruments; Toyota; Swedish Research Council [623-2013-8591]; Swedish
   Foundation for Strategic Research; Academy of Finland; Direct For
   Computer & Info Scie & Enginr [1446619] Funding Source: National Science
   Foundation; Division Of Computer and Network Systems [1446619] Funding
   Source: National Science Foundation; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [1329759] Funding
   Source: National Science Foundation
FX This work is partially based on previous work published by the authors
   [7,8,15], but the contributions presented in this article stand on their
   own. This work was supported in part by the TerraSwarm Research Center,
   one of six centers administered by the STARnet phase of the Focus Center
   Research Program (FCRP) a Semiconductor Research Corporation program
   sponsored by MARCO and DARPA, by the National Science Foundation (NSF)
   awards #1446619 (Mathematical Theory of CPS), #1329759 (COSMOI) and
   #1139138 (ExCAPE), and by iCyPhy (the Industrial Cyber-Physical Systems
   Research Center) and the following companies: Denso, National
   Instruments, and Toyota. This work was also financially supported by the
   Swedish Research Council #623-2013-8591, by the Swedish Foundation for
   Strategic Research, and by the Academy of Finland.
CR ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], P 11 INT MOD C
   [Anonymous], 2009, VERIFICATION CONTROL
   [Anonymous], 2011, P INT MOD C
   [Anonymous], 2014, FUNCT MOCK UP INT MO
   [Anonymous], 1999, Creating Computer Simulation Systems: an Introduction to the High Level Architecture
   [Anonymous], MOD UN OBJ OR LANG P
   Bastian Jens., 2011, Em, P115, DOI DOI 10.3384/ECP11063115
   Benveniste A, 2012, J COMPUT SYST SCI, V78, P877, DOI 10.1016/j.jcss.2011.08.009
   Bliudze S, 2009, FUND INFORM, V91, P251, DOI 10.3233/FI-2009-0043
   Broman D., 2013, P INT C EMB SOFTW EM
   Broman David., 2012, MPM MODELS 12 MULTIP, P49, DOI DOI 10.1145/2508443.2508452
   Broman David, 2012, UCBEECS2012173
   Broman David., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control, HSCC '15, P179, DOI DOI 10.1145/2728606.2728629
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   Cassandras Christos., 1993, Discrete Event Systems: Modeling and Performance Analysis
   Cataldo Adam, 2006, WORKSH DISCR EV SYST
   Clauss C., 2012, P 9 INT MODELICA C, P205, DOI DOI 10.3384/ECP12076205
   Cremona F., 2016, S APPL COMP SAC
   Cremona F., 2016, INT C FORM METH MOD
   Eidson J., 2006, MEASUREMENT CONTROL
   Feldman Y.A., 2014, P 10 TH INT MOD C, P43, DOI DOI 10.3384/ECP1409643
   Fishman George S., 2001, SPRING S OPERAT RES, DOI 10.1007/978-1-4757-3552-9
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Fritzson P., 2003, Principles of object-oriented modeling and simulation with modelica 2.1
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Henzinger TA, 2000, NATO ADV SCI I F-COM, V170, P265
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Karsai G., 2005, SOFTWARE SYSTEMS MOD, V4, P157, DOI DOI 10.1007/S10270-004-0073-Y
   Kofman E., 2001, T SOC MODEL SIMUL IN, V18, P2
   Kopke P., 1995, ACM S THEORY COMPUTI, P372
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lee Edward A., 2017, ACM Transactions on Cyber-Physical Systems, V1, DOI 10.1145/2912149
   Lee E. A., 2015, INT C EMB SOFTW EMSO
   Lee EA, 2005, LECT NOTES COMPUT SC, V3414, P25
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   Lee EA, 1999, ANN SOFTW ENG, V7, P25, DOI 10.1023/A:1018998524196
   MALER O, 1992, LECT NOTES COMPUT SC, V600, P447, DOI 10.1007/BFb0032003
   Manna Z., 1993, Hybrid Systems, P4
   Migoni G, 2013, SIMUL MODEL PRACT TH, V35, P118, DOI 10.1016/j.simpat.2013.03.004
   Mills DL, 2003, ACM SIGCOMM COMP COM, V33, P9, DOI 10.1145/956981.956983
   Modelisar Consortium and Modelica Association Project FMI, 2014, FUNCT MOCK UP INT MO
   Otter M., 2009, MOD C
   Otter M., 2005, P 4 INT MOD C HAMB G, P45
   Pohlmann U., 2012, 9 MOD C, p[Av, 765], DOI [10.3384/ecp12076765, DOI 10.3384/ECP12076765]
   Ptolemaeus C., 2014, System Design, Modeling, and Simulation using Ptolemy II
   Tripakis S, 2015, INT C EMB COMP SYST
   Tripakis S, 2013, MATH STRUCT COMP SCI, V23, P834, DOI 10.1017/S0960129512000278
   Yang Zhu, 2010, 2010 9th International Symposium on Antennas, Propagation & EM Theory (ISAPE 2010), P1, DOI 10.1109/ISAPE.2010.5695146
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zimmer D., 2010, THESIS U ETH ZURICH
NR 51
TC 35
Z9 37
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1655
EP 1679
DI 10.1007/s10270-017-0633-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Guana, V
   Stroulia, E
AF Guana, Victor
   Stroulia, Eleni
TI End-to-end model-transformation comprehension through fine-grained
   traceability information
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-transformation comprehension; Transformation comprehension;
   Traceability analysis; Software maintenance; Development environments
ID SOFTWARE; DEPLOYMENT
AB The construction and maintenance of model-to-model and model-to-text transformations pose numerous challenges to novice and expert developers. A key challenge involves tracing dependency relationships between artifacts of a transformation ecosystem. This is required to assess the impact of metamodel evolution, to determine metamodel coverage, and to debug complex transformation expressions. This paper presents an empirical study that investigates the performance of developers reflecting on the execution semantics of model-to-model and model-to-text transformations. We measured the accuracy and efficiency of 25 developers completing a variety of traceability-driven tasks in two model-based code generators. We compared the performance of developers using ChainTracker, a traceability analysis environment developed by our team, and that of developers using Eclipse Modeling. We present statistically significant evidence that ChainTracker improves the performance of developers reflecting on the execution semantics of transformation ecosystems. We discuss how developers supported by off-the-shelf development environments are unable to effectively identify dependency relationships in nontrivial model-transformation chains.
C1 [Guana, Victor; Stroulia, Eleni] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Guana, V (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM guana@ualberta.ca; stroulia@ualberta.ca
RI Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
FU Killam Trust; NSERC (the Discovery program); NSERC (IRC program); GRAND
   NCE; IBM Canada; AGE-WELLNCE
FX This work was supported by The Killam Trust, NSERC (the Discovery and
   the IRC program), the GRAND NCE and IBM Canada. The development of
   PhyDSL was supported by the AGE-WELLNCE. Wewould like to thankKelsey
   Gaboriau andVina Nguyen for their support during the development of
   ChainTracker. We would also like to thank Kelly Garces for her generous
   help during the execution of this study.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Almeida JP, 2006, IEEE INT ENTERP DIST, P355
   Amar B., 2008, ECMDA TRAC WORKSH EC, P7
   [Anonymous], P 2 EUR C MOD DRIV A
   [Anonymous], P EUR C MOD DRIV ARC
   [Anonymous], 2015, MET FAC MOF 2 0 QUER
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bragança A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/SPLC.2008.41
   Burgueno L., 2015, MOD DRIV ENG LANG SY
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   CARD DN, 1992, J SYST SOFTWARE, V17, P219, DOI 10.1016/0164-1212(92)90110-6
   Cariou E, 2011, LECT NOTES COMPUT SC, V6698, P3, DOI 10.1007/978-3-642-21470-7_2
   Cariou Eric., 2004, Workshop of OCL and Model Driven Engineering, V12, P69
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Clements P., 2002, DOCUMENTING SOFTWARE
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Czarnecki K., 2002, Software Reuse: Methods, Techniques, and Tools, V2319, P477, DOI DOI 10.1007/3-540-46020-9_38
   Di Rocco J., 2014, U STUDI AZ AQUILA IT, P22
   Di Ruscio Davide, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P114, DOI 10.1109/SEAA.2013.22
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Di Ruscio Davide, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P20, DOI 10.1007/978-3-642-33654-6_2
   Duan C., 2006, 2006 1 INT WORKSH RE, P5
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Ermel C., 2009, ELECT COMMUNICATIONS, V18
   Falleri J.-R., 2006, ECMDA TW 06 ECMDA TR
   Finot O., 2013, ANAL MODEL TRANSFORM
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   García J, 2014, LECT NOTES COMPUT SC, V8568, P42
   Gravino C., 2012, INT C MOD DRIV ENG L, P185
   Group O. M., 2005, PROP MDA FDN MOD
   Guana V., 2014, P 2014 INT C SOFTW M
   Guana V., BUILDING GAME ENGINE
   Guana V, 2014, LECT NOTES COMPUT SC, V8568, P146
   Guana Victor, 2015, 1 INT WORKSH HUM FAC, P33
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Hemel Z., 2008, CODE GENERATION MODE, P183
   Hermans Felienne, 2016, Proceedings of the 24th International Conference on Program Comprehension, P1, DOI [DOI 10.1109/ICPC.2016, 10.1109/icpc.2016.7503706, DOI 10.1109/ICPC.2016.7503706, 10.1109/ICPC.2016.7503706]
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   INSELBERG A, 1990, PROCEEDINGS OF THE FIRST IEEE CONFERENCE ON VISUALIZATION - VISUALIZATION 90, P361, DOI 10.1109/VISUAL.1990.146402
   Janeway C.A., 2005, IMMUNOBIOLOGY, P14
   Jouault F., SAT EV MODELS 2005 C, P128
   Kavimandan A, 2009, LECT NOTES COMPUT SC, V5581, P18, DOI 10.1007/978-3-642-02351-4_2
   KEMERER CF, 1992, IEEE SOFTWARE, V9, P23, DOI 10.1109/52.136161
   Kleppe A., 2006, TRCTIT0634
   Kleppe A., 2006, 1 EUR WORKSH COMP MO
   Kolovos D., 2013, P 1 WORKSH SCAL MOD, P1
   Kolovos D. S., 2013, P WORKSH SCAL MOD DR, P2
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Matragkas N. D., 2013, AMT MODELS
   Musset J., 2006, ACCELEO USER GUIDE
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   Olsen GK, 2007, LECT NOTES COMPUT SC, V4530, P144
   Pinheiro FAC, 2004, SPRING INT SER ENG C, V753, P91
   Ricca F., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P77, DOI 10.1109/MISE.2012.6226018
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Rocco J. D., 2013, P 2 WORKSH GRAPH MOD, P51
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Santiago I., 2014, INT J EPIDEMIOL, P1
   Santiago I, 2013, LECT NOTES COMPUT SC, V8217, P429, DOI 10.1007/978-3-642-41924-9_35
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Selim GMK, 2015, SOFTW SYST MODEL, V14, P365, DOI 10.1007/s10270-013-0365-1
   Serebrenik A., 2011, PREPR 1 WORKSH COMP
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Storrle H., 2016, SOFTW SYST MODEL, P1
   Stroulia E., 2015, ACM IEEE 18 INT C MO
   Stroulia E., 2014, 2014 IEEE GAM ENT ME
   T. project (IRISA), 2006, MET LANG KERM
   Tong T, 2015, PROCEDIA COMPUT SCI, V69, P96, DOI 10.1016/j.procs.2015.10.010
   van Amstel Marcel F., 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P152, DOI 10.1007/978-3-642-30476-7_10
   Van Den Brand M. G., 2011, MODEL TRANSFORMATION, P108
   van Deursen A., 2007, Proceedings of the Workshop on Model-Driven Software Evolution (MoDSE), P41
   van Ravensteijn W., 2011, VISUAL TRACEABILITY
   Vanhooff B., 2008, MODEL DRIVEN ARCHITE
   Vara JM, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1012, DOI 10.1145/1244002.1244222
   Vara JM, 2012, J SYST SOFTWARE, V85, P2368, DOI 10.1016/j.jss.2012.04.080
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   von Pilgrim J, 2009, INFORM VISUAL, V8, P107, DOI 10.1057/ivs.2009.9
   Walderhaug S., 2008, DESIGNING SOFTWARE I, P133, DOI DOI 10.4018/978-1-59904-699-0.CH006
   Wang J., 2006, 2006 Australian Software Engineering Conference
   Wang J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P432, DOI 10.1109/ASWEC.2008.42
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   WEGMAN EJ, 1990, J AM STAT ASSOC, V85, P664, DOI 10.2307/2290001
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wieringa R.J., 1995, INTRO REQUIREMENTS T
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
NR 91
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1305
EP 1344
DI 10.1007/s10270-017-0602-0
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400026
DA 2024-07-18
ER

PT J
AU Cheng, Z
   Monahan, R
   Power, JF
AF Cheng, Zheng
   Monahan, Rosemary
   Power, James F.
TI Formalised EMFTVM bytecode language for sound verification of model
   transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; EMFTVM; Boogie; Model transformation verification; Intermediate
   verification language
AB Model-driven engineering is an effective approach for addressing the full life cycle of software development. Model transformation is widely acknowledged as one of its central ingredients. With the increasing complexity of model transformations, it is urgent to develop verification tools that prevent incorrect transformations from generating faulty models. However, the development of sound verification tools is a non-trivial task, due to unimplementable or erroneous execution semantics encoded for the target model transformation language. In this work, we develop a formalisation for the EMFTVM bytecode language by using the Boogie intermediate verification language. It ensures the model transformation language has an implementable execution semantics by reliably prototyping the implementation of the model transformation language. It also ensures the absence of erroneous execution semantics encoded for the target model transformation language by using a translation validation approach.
C1 [Cheng, Zheng; Monahan, Rosemary; Power, James F.] Maynooth Univ, Dept Comp Sci, Maynooth, Kildare, Ireland.
C3 Maynooth University
RP Cheng, Z (corresponding author), Maynooth Univ, Dept Comp Sci, Maynooth, Kildare, Ireland.
EM zcheng@cs.nuim.ie; rosemary@cs.nuim.ie; jpower@cs.nuim.ie
OI Monahan, Rosemary/0000-0003-3886-4675
FU Maynooth University; MONDO Project [EU ICT-611125]
FX Zheng Cheng is funded by the Doctoral Teaching scholarship and John &
   Pat Hume scholarship from Maynooth University and the MONDO (EU
   ICT-611125) Project. We thank the reviewers for their feedback to
   improve the representation of this submission.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   Anastasakis K., 2007, ModeVVa'07, P47
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Asztalos M, 2013, SOFTW TEST VERIF REL, V23, P405, DOI 10.1002/stvr.1502
   ATLAS Group, 2005, TECH REP
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Benelallam A, 2015, P 2015 ACM SIGPLAN I, P37
   Berry Gerard, 2008, Formal Methods for Industrial Critical Systems. 12th International Workshop, FMICS 2007. Revised Selected Papers
   Bock C., 2015, FORMAL20150301
   Bornat R, 2000, LECT NOTES COMPUT SC, V1837, P102
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Chan K., 10 INT C WORKSH ENT, P41
   Cheng Z., 2016, ONLINE REPOSITORY FO
   Cheng Z, 2016, THESIS
   Cheng Z., 8 INT C MOD TRANSF I, P133
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dahlweid M, 2009, PROC INT CONF SOFTW, P429, DOI 10.1109/ICSE-COMPANION.2009.5071046
   Darvas A, 2006, J OBJECT TECHNOL, V5, P59, DOI 10.5381/jot.2006.5.5.a3
   Darvas A, 2007, LECT NOTES COMPUT SC, V4422, P336
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Filliatre J. C., 2003, TECH REP
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Ge YT, 2009, ANN MATH ARTIF INTEL, V55, P101, DOI 10.1007/s10472-009-9153-6
   Guerra E, 2014, SOFTW SYST MODEL, V13, P1447, DOI 10.1007/s10270-012-0292-6
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Jouault F., 2007, RESOLVE ALGORITHM IM
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Klatt B., 2007, Xpand: A closer look at the model2text transformation language
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Lehner H, 2007, ELECTRON NOTES THEOR, V190, P35, DOI 10.1016/j.entcs.2007.02.059
   Leino K. R. M., 2008, THIS IS BOOGIE 2, V2
   Leino K.R. M., 2009, Proceedings of the 2009 ACM Symposium on Applied Computing, SAC '09, P615, DOI 10.1145/1529282.1529411
   Leino KRM, 2009, LECT NOTES COMPUT SC, V5503, P231
   Lucio L., 2013, 2 WORKSH VER MOD TRA
   Lúcio L, 2010, LECT NOTES COMPUT SC, V6394, P136
   MANNA Z, 1969, MACH INTELL, V5, P27
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Pnueli A., 4 INT C TOOLS ALG CO, P151
   Poernomo I, 2008, LECT NOTES COMPUT SC, V5063, P214, DOI 10.1007/978-3-540-69927-9_15
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Schatz B., 2010, 9 INT WORKSH GRAPH T, P130
   Selim Gehan M. K., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P90, DOI 10.1007/978-3-642-31491-9_9
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Syriani E, 2013, SOFTW SYST MODEL, V12, P387, DOI 10.1007/s10270-011-0205-0
   Tristan JB, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P295
   Tristan JB, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P83, DOI 10.1145/1706299.1706311
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Tschannen J., 2011, COMPUTING RES REPOSI
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Vepa E., 2006, SUMMARY 2006 MODEL S
   Vignaga A., 2009, TECH REP
   Wagelaar, 2014, 2 SOFTW DEV AUT C AM
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Wagelaar D., 2011, RESOLVE ALGORITHM IM
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wimmer M., 2009, 9 OOPSL WORKSH DOM S, P101
   Wu H, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P175, DOI 10.1109/TASE.2013.31
NR 73
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1197
EP 1225
DI 10.1007/s10270-016-0553-x
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000007
DA 2024-07-18
ER

PT J
AU Wang, QS
   Wolter, K
AF Wang, Qiushi
   Wolter, Katinka
TI Accelerating task completion in mobile offloading systems through
   adaptive restart
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE Mobile offloading; Restart; Unreliable network
ID PERFORMANCE; VISION
AB Mobile application offloading is an efficient technique to unload the burden of intensive computation from thin clients to powerful servers. In a mobile offloading system, cloud computing is utilized to complete some heavy tasks which are migrated from resource-constrained mobile devices to the Cloud. To assure system performance, the quality of the wireless network connection plays an important role. In previous work we experimentally explored the impact of packet loss and delay in wireless networks on the completion time of an offloading task. We investigated a local restart mechanism to mitigate these effects. In the presence of unreliable communication, once the waiting time for the response of a cloud server exceeds a given threshold, exploiting the local resources of a mobile client can accelerate the task completion.
   In this paper, we upgrade the restart mechanism by allowing several offloading retries before a job eventually is locally restarted and finally completed in the client device itself. This is an adaptive restart scheme which aims first at completing the job using restart with offloading. If several successive offloading attempts fail the job is completed locally. Adaptively selecting the right retry threshold and automatically restarting at the appropriate moment can balance out undesired effects. This paper extends Wang and Wolter (Proceedings of the 6th ACM/SPEC international conference on performance engineering. ACM, pp 3-13, 2015) by adding an adaptive retry scheme, a mathematical derivation of the optimal limit for offloading attempts so as to minimize the task completion time using a greedy method, and by the results of a practical evaluation study which shows the efficiency and benefits of the adaptive restart scheme.
C1 [Wang, Qiushi; Wolter, Katinka] Free Univ Berlin, Dept Math & Comp Sci, Takustr 9, Berlin, Germany.
C3 Free University of Berlin
RP Wang, QS (corresponding author), Free Univ Berlin, Dept Math & Comp Sci, Takustr 9, Berlin, Germany.
EM qiushi.wang@fu-berlin.de
CR [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2012, Cuckoo: A computation offloading framework for smartphones, DOI DOI 10.1007/978-3-642-29336-84
   [Anonymous], 1996, ACM SIGMOD RECORD
   Asmussen S, 2008, MATH OPER RES, V33, P932, DOI 10.1287/moor.1080.0329
   Balan RK, 2003, PROCEEDINGS OF MOBISYS 2003, P273, DOI 10.1145/1066116.1066125
   Bobbio A., 1990, Stochastic Models, V6, P133
   Chun BG, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P301
   Clark C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI '05), P273
   Cochran WilliamGemmell., 1999, Sampling techniques, V3d
   Crovella ME, 1998, PRACTICAL GUIDE TO HEAVY TAILS, P3
   Danilkina A, 2013, ELECTRON NOTES THEOR, V291, P3, DOI 10.1016/j.entcs.2012.11.014
   Deboosere L, 2011, FUTURE GENER COMP SY, V27, P681, DOI 10.1016/j.future.2010.12.010
   Di S, 2013, INT C HIGH PERFORM, P69, DOI 10.1109/HiPC.2013.6799101
   Egwutuoha IP, 2013, J SUPERCOMPUT, V65, P1302, DOI 10.1007/s11227-013-0884-0
   Fernando N, 2013, FUTURE GENER COMP SY, V29, P84, DOI 10.1016/j.future.2012.05.023
   Flinn J, 2002, INT CON DISTR COMP S, P217, DOI 10.1109/ICDCS.2002.1022259
   Fourneau J.-M., 2013, ACMSPEC INT C PERFOR, P39, DOI [10.1145/2479871.2479880, DOI 10.1145/2479871.2479880]
   Hargrove PH, 2006, J PHYS CONF SER, V46, P494, DOI 10.1088/1742-6596/46/1/067
   Horváth A, 2002, LECT NOTES COMPUT SC, V2324, P82
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kristensen Mads Daro, 2010, 2010 IEEE International Conference on Pervasive Computing and Communications (PerCom 2010), P217, DOI 10.1109/PERCOM.2010.5466972
   KULKARNI VG, 1986, J SYST SOFTWARE, V6, P175, DOI 10.1016/0164-1212(86)90038-5
   KULKARNI VG, 1987, ADV APPL PROBAB, V19, P932, DOI 10.2307/1427109
   Matias Y., 2000, VLDB 00, P101
   Maurer SM, 2001, J ECON DYN CONTROL, V25, P641, DOI 10.1016/S0165-1889(00)00040-3
   Ni Xiang, 2013, P INT C HIGH PERF CO, P7
   Nicolae B, 2013, J PARALLEL DISTR COM, V73, P698, DOI 10.1016/j.jpdc.2013.01.013
   O'Donoghue B., 2013, FOUND COMPUT MATH, p[1, 2013], DOI DOI 10.1007/S10208-013-9150-3
   Reinecke P., 2004, Service Availability. First International Service Availability Symposium, ISAS 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol.3335), P86
   Reinecke P, 2012, COMPUT MATH APPL, V64, P3840, DOI 10.1016/j.camwa.2012.03.016
   Satyanarayanan M, 2001, IEEE PERS COMMUN, V8, P10, DOI 10.1109/98.943998
   Satyanarayanan M, 2009, IEEE PERVAS COMPUT, V8, P14, DOI 10.1109/MPRV.2009.82
   Sheahan R., 2006, Performance Evaluation Review, V34, P24, DOI 10.1145/1215956.1215967
   Shrivastava N., 2004, P 2 INT C EMBEDDED N, P239, DOI DOI 10.1145/1031495.1031524
   Smith R, 2007, PROC INT CONF DOC, P629, DOI 10.1109/icdar.2007.4376991
   Telek M., 2002, International Journal of Simulation Systems, Science Technology, V3, P47
   Thümmler A, 2006, IEEE T DEPEND SECURE, V3, P245, DOI 10.1109/TDSC.2006.27
   van Moorsel APA, 2006, IEEE T SOFTWARE ENG, V32, P547, DOI 10.1109/TSE.2006.73
   van Moorsel APA, 2004, INT CONF QUANT EVAL, P195
   VANMOORSEL A, 2004, P 12 GI ITG C MEAS M, P155
   Wang JF, 2008, J SUPERCOMPUT, V45, P296, DOI 10.1007/s11227-008-0173-5
   Wang QS, 2013, PROC INT SYMP SOFTW, P31, DOI 10.1109/ISSRE.2013.6698902
   Wang Qiushi., 2015, P 6 ACMSPEC INT C PE, P3, DOI [10.1364/acpc.2015.as3d.2, DOI 10.1364/ACPC.2015.AS3D.2]
   Yongshao Ruan, 2002, Principles and Practice of Constraint Programming - CP 2002. 8th International Conference, CP 2002. Proceedings (Lecture Notes in Computer Science Vol.2470), P573
NR 46
TC 1
Z9 1
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 397
EP 413
DI 10.1007/s10270-016-0531-3
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300004
DA 2024-07-18
ER

PT J
AU Crick, C
   Chew, EK
AF Crick, Charles
   Chew, Eng K.
TI Business processes in the agile organisation: a socio-technical
   perspective
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Socio-technical systems; Organisational agility; Business process;
   Technology affordance
ID GUEST EDITORS INTRODUCTION; INFORMATION-TECHNOLOGY; DYNAMIC
   CAPABILITIES; ROUTINES; ALIGNMENT; COEVOLUTIONARY; FRAMEWORK; EVOLUTION;
   STRATEGY; SCIENCE
AB This paper takes a cross-disciplinary view of the ontology of "business process": how the concept is treated in the IS research literature and how related concepts (with stronger human behavioural orientation) from organisation and management sciences can potentially inform this IS perspective. In particular, is there room for socio-technical concepts such as technology affordance, derived from the constructivist tradition, in improving our understanding of operational business processes, particularly human-centric business processes? The paper presents a theoretical framework for understanding the role of business processes in organisational agility that distinguishes between the process-as-designed and the process-as-practiced. How this practice aspect of business processes also leads to the improvisation of various information technology enablers, is explored using a socio-technical lens. The posited theoretical framework is illustrated and validated with data drawn from an interpretive empirical case study of a large IT services company. The research suggests that processes within the organisation evolve both by top-down design and by the bottom-up routinisation of practice and that the tension between these is driven by the need for flexibility.
C1 [Crick, Charles] Univ Technol Sydney, Sydney, NSW, Australia.
   [Chew, Eng K.] Univ Technol Sydney, Business & IT Strategy, Sydney, NSW, Australia.
C3 University of Technology Sydney; University of Technology Sydney
RP Crick, C (corresponding author), Univ Technol Sydney, Sydney, NSW, Australia.
EM charlescrick@computer.org; Eng.Chew@uts.edu.au
CR [Anonymous], 2009, TOGAF VERS 9
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 24 INT C INF SYST SE
   Augier M, 2009, ORGAN SCI, V20, P410, DOI 10.1287/orsc.1090.0424
   Becker MC, 2004, IND CORP CHANGE, V13, P643, DOI 10.1093/icc/dth026
   Benbya H, 2006, J INF TECHNOL-UK, V21, P284, DOI 10.1057/palgrave.jit.2000080
   Boisot M, 2010, ACAD MANAGE REV, V35, P415, DOI 10.5465/AMR.2010.51142028
   Britz B., 2014, Agenda Overview for the IT Services Market, 2014
   Crick C., 2014, Enterprise, Business?Process and Information Systems Modeling (BPMDS 2014), P230
   Dosi G., 2000, The nature and dynamics of organizational capabilities, P1
   Dubé L, 2003, MIS QUART, V27, P597
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Feldman MS, 2011, ORGAN SCI, V22, P1240, DOI 10.1287/orsc.1100.0612
   Feldman MS, 2003, ADMIN SCI QUART, V48, P94, DOI 10.2307/3556620
   Giddens A., 1984, The constitution of society: Outline of the theory of structuration
   Gregor S, 2006, MIS QUART, V30, P611
   Hafeez K, 2002, IEEE T ENG MANAGE, V49, P28, DOI 10.1109/17.985745
   Hammer M., 1993, Reengineering the Corporation -A Manifesto for Business Revolution
   Helfat C.E., 2007, DYNAMIC CAPABILITIES
   Helfat CE, 2000, STRATEGIC MANAGE J, V21, P955, DOI 10.1002/1097-0266(200010/11)21:10/11<955::AID-SMJ136>3.3.CO;2-J
   Helfat CE, 2003, STRATEGIC MANAGE J, V24, P997, DOI 10.1002/smj.332
   Helfat CE, 2011, STRATEGIC MANAGE J, V32, P1243, DOI 10.1002/smj.955
   Henderson J., 1996, COMPETING INFORM AGE, P21
   Henderson J. C., 1999, IBM Systems Journal, V38, P472, DOI [10.1147/sj.382.0472, 10.1147/SJ.1999.5387096]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Kuutti K., 1996, Context and consciousness: activity theory and human-computer interaction, P17
   Latour B., 1987, SCI ACTION
   Leonardi PM, 2011, MIS QUART, V35, P147
   Leont'ev A.N., 1989, SOV PSYCHOL, V27, P22, DOI DOI 10.2753/RPO1061-0405270122
   Lovelock J., 2013, Worldwide IT Spending Forecast, 3Q13 Update - Impact of Emerging Markets
   Majchrzak A., 2012, ENCY MANAGEMENT THEO
   McKelvey B, 1999, ORGAN SCI, V10, P294, DOI 10.1287/orsc.10.3.294
   McKelvey B., 2008, Complexity and Leadership, VI
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   Melville N, 2004, MIS QUART, V28, P283
   Merton R.K., 1990, The focused interview: A manual of problems and procedures
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Morgan G., 1997, IMAGES ORG
   Nardi B., 1995, Activity Theory and Human?Computer Interaction
   Olsson M, 2017, INFORM RES, V22
   Pentland BT, 2012, J MANAGE STUD, V49, P1484, DOI 10.1111/j.1467-6486.2012.01064.x
   Pentland BT, 2005, IND CORP CHANGE, V14, P793, DOI 10.1093/icc/dth070
   Rettig C, 2007, MIT SLOAN MANAGE REV, V49, P21
   Rong Zeng Cao, 2012, 2012 IEEE International Conference on Service Operations and Logistics and Informatics, P468
   Rosemann Michael, 2008, International Journal of Business Process Integration and Management, V3, P47, DOI 10.1504/IJBPIM.2008.019347
   Ross Ashby W., 1957, An Introduction to Cybernetics
   Saidani O., 2007, WORKSH BUS PROC MOD, P1
   Sambamurthy V, 2003, MIS QUART, V27, P237
   Schreyögg G, 2007, STRATEGIC MANAGE J, V28, P913, DOI 10.1002/smj.613
   Siggelkow N, 2007, ACAD MANAGE J, V50, P20, DOI 10.5465/amj.2007.24160882
   Stirna J., 2012, CAPABILITY DRIVEN DE
   Suder GGS, 2006, CORPORATE STRATEGIES UNDER INTERNATIONAL TERRORISM AND ADVERSITY, P1
   Tallon P., 2003, CIO Insight, V1, P75
   Tallon PP, 2011, MIS QUART, V35, P463
   Teece D, STRATEG MANAG J, V28, P1319
   Teece DJ, 1997, STRATEGIC MANAGE J, V18, P509, DOI 10.1002/(SICI)1097-0266(199708)18:7<509::AID-SMJ882>3.0.CO;2-Z
   Tell A., 2014, Perspectives in business informatics research: 13th International Conference, BIR 2014, P1
   Trkman P, 2010, INT J INFORM MANAGE, V30, P125, DOI 10.1016/j.ijinfomgt.2009.07.003
   Tsang EWK, 2014, J STRATEGIC INF SYST, V23, P174, DOI 10.1016/j.jsis.2013.09.002
   Van Der Aalst WM., 2003, BUSINESS PROCESS MAN
   van der Weerdt NP, 2012, INFORM ORGAN DES SER, V9, P105, DOI 10.1007/978-1-4614-1284-7_7
   Vidgen R, 2006, J INF TECHNOL, V21, P262, DOI 10.1057/palgrave.jit.2000076
   Virkkunen J., 2000, ACCOUNTING MANAGEMEN, V10, P291, DOI [10.1016/S0959-8022(00)00005-9, DOI 10.1016/S0959-8022(00)00005-9]
   Volberda HW, 2003, J MANAGE STUD, V40, P2111, DOI 10.1046/j.1467-6486.2003.00414.x
   Volkoff O, 2007, ORGAN SCI, V18, P832, DOI 10.1287/orsc.1070.0288
   Winter SG, 2003, STRATEGIC MANAGE J, V24, P991, DOI 10.1002/smj.318
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Yoo Y, 2012, ORGAN SCI, V23, P1398, DOI 10.1287/orsc.1120.0771
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zammuto RF, 2007, ORGAN SCI, V18, P749, DOI 10.1287/orsc.1070.0307
   Zhijie Li, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P403, DOI 10.1109/SERVICES.2013.78
NR 72
TC 4
Z9 6
U1 3
U2 41
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 631
EP 648
DI 10.1007/s10270-015-0506-9
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FD2MA
UT WOS:000407367800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moran, M
   Heather, J
   Schneider, S
AF Moran, Murat
   Heather, James
   Schneider, Steve
TI Automated anonymity verification of the ThreeBallot and VAV voting
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Formal methods; Voting systems; Anonymity; Automatic verification;
   ThreeBallot; VAV
AB In recent years, a large number of secure voting protocols have been proposed in the literature. Often these protocols contain flaws, but because they are complex protocols, rigorous formal analysis has proven hard to come by. Rivest's ThreeBallot and Vote/Anti-Vote/Vote (VAV) voting systems are important because they aim to provide security (voter anonymity and voter verifiability) without requiring cryptography. In this paper, we construct CSP models of ThreeBallot and VAV, and use them to produce the first automated formal analysis of their anonymity properties. Along the way, we discover that one of the crucial assumptions under which ThreeBallot and VAV (and many other voting systems) operate-the short ballot assumption-is highly ambiguous in the literature. We give various plausible precise interpretations and discover that in each case, the interpretation either is unrealistically strong or else fails to ensure anonymity. We give a revised version of the short ballot assumption for ThreeBallot and VAV that is realistic but still provides a guarantee of anonymity.
C1 [Moran, Murat] Giresun Univ, Giresun, Turkey.
   [Heather, James] Chiast Secur, Guildford, Surrey, England.
   [Schneider, Steve] Univ Surrey, Guildford, Surrey, England.
C3 Giresun University; University of Surrey
RP Moran, M (corresponding author), Giresun Univ, Giresun, Turkey.
EM muratmoran@gmail.com; drfudgeboy@gmail.com; s.schneider@surrey.ac.uk
RI Moran, Murat/AAE-5628-2019
OI Moran, Murat/0000-0001-5557-4827; Schneider, Steve/0000-0001-8365-6993
FU EPSRC [EP/G025797/1] Funding Source: UKRI
CR [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 2002, IACR CRYPTOLOGY EPRI
   Appel A. W., 2007, DEFEAT RIVESTS THREE
   Backes M, 2008, CSF 2008: 21ST IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, PROCEEDINGS, P195, DOI 10.1109/CSF.2008.26
   Canetti R, 2001, ANN IEEE SYMP FOUND, P136, DOI 10.1109/sfcs.2001.959888
   Chaum D, 2005, LECT NOTES COMPUT SC, V3679, P118
   CHAUM DL, 1981, COMMUN ACM, V24, P84, DOI 10.1145/358549.358563
   Cichon J, 2008, LECT NOTES COMPUT SC, V4910, P585
   Clark J., 2007, IAVOSS WORKSH TRUSTW
   de Marneffe O, 2007, LECT NOTES COMPUT SC, V4896, P137, DOI 10.1007/978-3-540-77493-8_12
   Fujioka A., 1993, Advances in Cryptology - AUSCRYPT '92. Workshop on the Theory and Application of Cryptographic Techniques Proceedings, P244
   Gardiner P., FDR2 USER MANUAL
   Henry K, 2009, IEEE T INF FOREN SEC, V4, P699, DOI 10.1109/TIFS.2009.2031914
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Küsters R, 2011, P IEEE S SECUR PRIV, P538, DOI 10.1109/SP.2011.21
   Lazic R, 1999, THESIS
   Moran M, 2014, FORM ASP COMPUT, V26, P63, DOI 10.1007/s00165-012-0268-x
   Rivest R., 2007, P USENIX ACCURATE EL
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Ryan PYA, 2006, LECT NOTES COMPUT SC, V4189, P313
   Smyth B., 2011, THESIS
   STRAUSS C, 2006, TROUBLE TRIPLES CR 1
   Strauss Charlie E. M., 2006, CRITICAL REV TRIPL 2
   Tjostheim T., 2007, VOCOMP
NR 24
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1049
EP 1062
DI 10.1007/s10270-014-0445-x
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800007
DA 2024-07-18
ER

PT J
AU Zugal, S
   Soffer, P
   Haisjackl, C
   Pinggera, J
   Reichert, M
   Weber, B
AF Zugal, Stefan
   Soffer, Pnina
   Haisjackl, Cornelia
   Pinggera, Jakob
   Reichert, Manfred
   Weber, Barbara
TI Investigating expressiveness and understandability of hierarchy in
   declarative business process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Declarative business process models;
   Modularization; Understandability; Cognitive psychology
ID UML STATECHART DIAGRAMS; COGNITIVE LOAD; SYSTEMS; LANGUAGES; SUPPORT;
   DESIGN
AB Hierarchy has widely been recognized as a viable approach to deal with the complexity of conceptual models. For instance, in declarative business process models, hierarchy is realized by sub-processes. While technical implementations of declarative sub-processes exist, their application, semantics, and the resulting impact on understandability are less understood yet-this research gap is addressed in this work. More specifically, we discuss the semantics and the application of hierarchy and show how sub-processes enhance the expressiveness of declarative modeling languages. Then, we turn to the influence of hierarchy on the understandability of declarative process models. In particular, we present a cognitive-psychology-based framework that allows to assess the impact of hierarchy on the understandability of a declarative process model. To empirically test the proposed framework, a combination of quantitative and qualitative research methods is followed. While statistical tests provide numerical evidence, think-aloud protocols give insights into the reasoning processes taking place when reading declarative process models.
C1 [Zugal, Stefan; Haisjackl, Cornelia; Pinggera, Jakob; Weber, Barbara] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Soffer, Pnina] Univ Haifa, IL-31999 Haifa, Israel.
   [Reichert, Manfred] Univ Ulm, D-89069 Ulm, Germany.
C3 University of Innsbruck; University of Haifa; Ulm University
RP Zugal, S (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM stefan.zugal@uibk.ac.at; spnina@is.haifa.ac.il;
   cornelia.haisjackl@uibk.ac.at; jakob.pinggera@uibk.ac.at;
   manfred.reichert@uni-ulm.de; barbara.weber@uibk.ac.at
RI soffer, pnina/P-8893-2019; Reichert, Manfred U/ABB-4469-2020
OI Weber, Barbara/0000-0002-6004-4860
FU Austrian Science Fund (FWF) [P23699-N23]
FX This research is supported by Austrian Science Fund (FWF): P23699-N23.
CR Bobrik R, 2005, Sixteenth International Workshop on Database and Expert Systems Applications, Proceedings, P948, DOI 10.1109/DEXA.2005.165
   Burton-Jones A, 2006, INFORM SYST RES, V17, P38, DOI 10.1287/isre.1050.0079
   Claes J, 2013, LECT NOTES BUS INF P, V132, P744
   Claes J, 2012, LECT NOTES COMPUT SC, V7481, P33, DOI 10.1007/978-3-642-32885-5_3
   Cruz-Lemus J., 2005, PROC QAOOSE, V5, P97
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3770, P12, DOI 10.1007/11568346_3
   Cruz-Lemus JA, 2008, LECT NOTES COMPUT SC, V4895, P129
   Cruz-Lemus JA, 2007, LECT NOTES COMPUT SC, V4802, P213
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Damij N, 2007, BUS PROCESS MANAG J, V13, P70, DOI 10.1108/14637150710721131
   de Weger M.K., 1998, THESIS U TWENTE
   Dumas Marlon, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P31, DOI 10.1007/978-3-642-31095-9_3
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Fahland D., 2009, 1 INT WORKSH EMP RES, P65
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   GOGUEN JA, 1979, INT J GEN SYST, V5, P31, DOI 10.1080/03081077908960886
   GOPHER D, 1984, HUM FACTORS, V26, P519, DOI 10.1177/001872088402600504
   Haisjackl C., 2012, THESIS U INNSBRUCK A
   Johannsen F, 2012, BUS INFORM SYST ENG+, V4, P271, DOI 10.1007/s12599-012-0229-1
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Kock N., 1996, Business Process Management Journal, V2, P8
   Kolb J., 2012, PROC INT C SERVICE O, V6470, P484
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Melcher J, 2009, PROCEEDINGS OF THE 10TH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, P564, DOI 10.1109/SYNASC.2008.24
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   MENDLING J, 2007, THESIS VIENNA U EC B
   Montali M., 2010, SPECIFICATION VERIFI
   Moody DL, 2004, LECT NOTES COMPUT SC, V3255, P129
   Paas F, 2003, EDUC PSYCHOL, V38, P1, DOI 10.1207/S15326985EP3801_1
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Parsons J, 2005, DATA KNOWL ENG, V55, P327, DOI 10.1016/j.datak.2004.12.008
   Pesic M, 2007, LECT NOTES COMPUT SC, V4803, P77
   Pesic M., 2008, THESIS TU EINDHOVEN
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pichler P, 2012, LECT NOTES BUS INF P, V99, P383
   Pinggera J, 2013, LNBIP, V2013, P438
   Pinggera J, 2012, LECT NOTES BUS INF P, V113, P151
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Polyvyanyy A, 2008, IEEE INT ENTERP DIST, P325, DOI 10.1109/EDOC.2008.17
   Quartel D., 1998, THESIS U TWENTE
   Quartel DAC, 1997, COMPUT NETWORKS ISDN, V29, P413, DOI 10.1016/S0169-7552(97)83471-X
   Reichert Manfred., 2012, P 27 ANN ACM S APPL, P1653
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   ROYALL RM, 1986, AM STAT, V40, P313, DOI 10.2307/2684616
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   Sharp A., 2011, WORKFLOW MODELING TO
   Shoval P, 2004, REQUIR ENG, V9, P217, DOI 10.1007/s00766-004-0201-9
   Smirnov S, 2010, LECT NOTES COMPUT SC, V6470, P1, DOI 10.1007/978-3-642-17358-5_1
   Smirnov S, 2010, LECT NOTES COMPUT SC, V6412, P1, DOI 10.1007/978-3-642-16373-9_1
   Soffer P, 2005, LECT NOTES COMPUT SC, V3716, P47
   SWELLER J, 1994, COGNITION INSTRUCT, V12, P185, DOI 10.1207/s1532690xci1203_1
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   Vogt W.P., 2011, Dictionary of Statistics Methodology: A Non-Technical Guide for the Social Sciences, V4th
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B., 2009, P CAISE 09, P270
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Zugal S., IJISMD IN PRESS
   Zugal S, 2011, P EESSMOD 11, P123
   Zugal S., 2011, P C ADV INF SYST ENG, P16
   Zugal S., 2011, P EMISA 2011, V2011, P177
   Zugal S., 2012, P 2 EDITION INT WORK, DOI DOI 10.1145/2424563.2424571
   Zugal S, 2012, LECT NOTES BUS INF P, V113, P167
   Zugal S, 2011, LECT NOTES BUS INF P, V81, P163
   Zugal S, 2012, J SOFTW-EVOL PROC, V24, P285, DOI 10.1002/smr.554
NR 68
TC 31
Z9 31
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1081
EP 1103
DI 10.1007/s10270-013-0356-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CQ7DX
UT WOS:000360764200004
OA hybrid
DA 2024-07-18
ER

PT J
AU Farias, K
   Garcia, A
   Lucena, C
AF Farias, Kleinner
   Garcia, Alessandro
   Lucena, Carlos
TI Effects of stability on model composition effort: an exploratory study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model composition; Software development effort; Design stability
AB Model composition plays a central role in many software engineering activities, e.g., evolving design models to add new features. To support these activities, developers usually rely on model composition heuristics. The problem is that the models to-be-composed usually conflict with each other in several ways and such composition heuristics might be unable to properly deal with all emerging conflicts. Hence, the composed model may bear some syntactic and semantic inconsistencies that should be resolved. As a result, the production of the intended model is an error-prone and effort-consuming task. It is often the case that developers end up examining all parts of the output composed model instead of prioritizing the most critical ones, i.e., those that are likely to be inconsistent with the intended model. Unfortunately, little is known about indicators that help developers (1) to identify which model is more likely to exhibit inconsistencies, and (2) to understand which composed models require more effort to be invested. It is often claimed that software systems remaining stable over time tends to have a lower number of defects and require less effort to be fixed than unstable systems. However, little is known about the effects of software stability in the context of model evolution when supported by composition heuristics. This paper, therefore, presents an exploratory study analyzing stability as an indicator of inconsistency rate and resolution effort on model composition activities. Our findings are derived from 180 compositions performed to evolve design models of three software product lines. Our initial results, supported by statistical tests, also indicate which types of changes led to lower inconsistency rate and lower resolution effort.
C1 [Farias, Kleinner; Garcia, Alessandro; Lucena, Carlos] Pontifical Catholic Univ Rio de Janeiro, OPUS Res Grp, Dept Informat, Rio De Janeiro, RJ, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Farias, K (corresponding author), Pontifical Catholic Univ Rio de Janeiro, OPUS Res Grp, Dept Informat, Rio De Janeiro, RJ, Brazil.
EM kleinner@gmail.com; afgarcia@inf.puc-rio.br; lucena@inf.puc-rio.br
RI Lucena, Carlos/GQP-2277-2022; Farias, Kleinner/ABH-4944-2020
CR [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Asklund U., 1994, P NORD WORKSH PROGR, P86
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BOUCKE N, 2006, MULTIAGENT SYSTEMS S, P87
   Brewer M., 2000, RES DESIGN ISSUES VA
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Campbell D.T., 1998, Social Experimentation
   Chitchyan R., 2009, INT C ASP OR SOFTW D, P36
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Farias Kleinner, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P676, DOI 10.1007/978-3-642-33666-9_43
   Farias Kleinner, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P219, DOI 10.1007/978-3-642-33666-9_15
   Farias K., 2011, 8 EXP SOFTW ENG LAT
   Farias K, 2012, 9 INT C ASP OR SOFTW, P73
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Jayaraman P, 2007, LECT NOTES COMPUT SC, V4735, P151
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kitchenham B., 2006, EMPIRICAL PARADIGM R, P25
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Meyer B., 1988, Object-Oriented Software Construction
   Mitchell M., 2001, Research Design Explained, V4th
   Molesini A., 2009, J SYST SOFTW, V38, P711
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Norris N., 2011, GOVERNING MANAGING 1
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   OMG, 2008, UN MOD LANG INFR VER
   Perry DE, 1998, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE.1998.671134
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Whittle J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656252
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WUST J, SOFTWARE DESIGN METR
NR 42
TC 9
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1473
EP 1494
DI 10.1007/s10270-012-0308-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300013
OA hybrid
DA 2024-07-18
ER

PT J
AU von Detten, M
   Platenius, MC
   Becker, S
AF von Detten, Markus
   Platenius, Marie Christin
   Becker, Steffen
TI Reengineering component-based software systems with Archimetrix
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reengineering; Reverse engineering; Software architecture;
   Component-based software systems
ID ARCHITECTURE RECOVERY
AB Many software development, planning, or analysis tasks require an up-to-date software architecture documentation. However, this documentation is often outdated, unavailable, or at least not available as a formal model which analysis tools could use. Reverse engineering methods try to fill this gap. However, as they process the system's source code, they are easily misled by design deficiencies (e.g., violations of component encapsulation) which leaked into the code during the system's evolution. Despite the high impact of design deficiencies on the quality of the resulting software architecture models, none of the surveyed related works is able to cope with them during the reverse engineering process. Therefore, we have developed the Archimetrix approach which semiautomatically recovers the system's concrete architecture in a formal model while simultaneously detecting and removing design deficiencies. We have validated Archimetrix on a case study system and two implementation variants of the CoCoME benchmark system. Results show that the removal of relevant design deficiencies leads to an architecture model which more closely matches the system's conceptual architecture.
C1 [von Detten, Markus; Platenius, Marie Christin; Becker, Steffen] Univ Paderborn, Software Engn Grp, Heinz Nixdorf Inst, D-33098 Paderborn, Germany.
C3 University of Paderborn
RP von Detten, M (corresponding author), Univ Paderborn, Software Engn Grp, Heinz Nixdorf Inst, Warburger Str 100, D-33098 Paderborn, Germany.
EM Markus.von.Detten@upb.de; Marie.Christin.Platenius@upb.de;
   Steffen.Becker@upb.de
FU German Research Foundation (DFG) [CRC 901]
FX We thank Oleg Travkin for his contributions in the development of
   Archimetrix. We would also like to thank Christian Heinzemann, Dietrich
   Travkin, and the anonymous reviewers for their valuable comments. This
   work was partially supported by the German Research Foundation (DFG)
   within the Collaborative Research Centre "On-The-Fly Computing" (CRC
   901).
CR Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   [Anonymous], P MATHW AUT C
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Arendt T., 2011, SYNTACTICAL MODEL QU
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Bauer M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3, DOI 10.1109/CSMR.2004.1281401
   Becker S, 2010, EUR CON SFTWR MTNCE, P194, DOI 10.1109/CSMR.2010.34
   Bianchi A, 2003, IEEE T SOFTWARE ENG, V29, P225, DOI 10.1109/TSE.2003.1183932
   Binkley David, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P25, DOI 10.1109/ASEW.2008.4686318
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cho ES, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419
   Chouambe L, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P93
   Coello CAC, 2010, STUD COMPUT INTELL, V272, P1
   Dong J, 2009, INT J SOFTW ENG KNOW, V19, P823, DOI 10.1142/S021819400900443X
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   EPPSTEIN D, 1995, PROCEEDINGS OF THE SIXTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P632
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Frey S, 2010, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, GRIDS, AND VIRTUALIZATION (CLOUD COMPUTING 2010), P155
   Glass R., 2003, FACTS FALLACIES SOFT
   Herold S, 2008, LECT NOTES COMPUT SC, V5153, P16
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Koziolek H., 2011, P 33 INT C SOFTW ENG
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Krikhaar R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P371, DOI 10.1109/ICSM.1999.792635
   Krikhaar RL, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P4, DOI 10.1109/ICSM.1997.624225
   Krogmann K., 2010, THESIS
   Krogmann K, 2010, IEEE T SOFTWARE ENG, V36, P865, DOI 10.1109/TSE.2010.69
   Mancoridis S, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/WCRE.2001.957826
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Platenius M.C., 2011, THESIS
   Platenius MC, 2012, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2012.33
   RAUSCH A, 2008, LECT NOTES COMPUTER, V5153
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Sartipi K, 2003, PROC IEEE INT CONF S, P293, DOI 10.1109/ICSM.2003.1235434
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Travkin O., 2011, THESIS
   Travkin O., 2011, P 3 WORKSH GI WORK G
   Trifu A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P174, DOI 10.1109/CSMR.2004.1281418
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   von Detten M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P299, DOI 10.1145/1810295.1810360
   von Detten M, 2013, THESIS
   von Detten M., 2010, TRRI10312
   von Detten M., 2010, TRRI1032
   von Detten M., 2012, RI12324 TR
   von Detten Markus., 2011, Proceedings of the joint ACM SIGSOFT conference - QoSA and ACM SIGSOFT symposium - ISARCS on Quality of software architectures - QoSA and architecting critical systems - ISARCS, QoSA-ISARCS '11, P23
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zillmann C, 2011, EUR CON SFTWR MTNCE, P339, DOI 10.1109/CSMR.2011.48
NR 62
TC 9
Z9 9
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1239
EP 1268
DI 10.1007/s10270-013-0341-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300004
DA 2024-07-18
ER

PT J
AU Haddar, NZ
   Makni, L
   Ben Abdallah, H
AF Haddar, Nahla Zaaboub
   Makni, Lobna
   Ben Abdallah, Hanene
TI Literature review of reuse in business process modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Workflow pattern; Activity pattern; Action pattern; Semantic business
   process pattern; Reference model; Business process modeling
ID PATTERNS
AB Business process models play an important role in the analysis and improvement of the performance of an enterprise. Evidently, the quality of a business process model has a direct effect on the business performance. This evidence has motivated both the academic and industrial communities to look for suitable methods for creating good quality business process models. In particular, there is a wide agreement that reuse can accelerate the design process and produce high quality solutions by adopting best practices and agreed-up-on solutions. However, faced with various types of reusable artifacts, business process designers need a set of criteria to determine which type would suit best their needs and design context. To assist designers in their choice, we first present a set of criteria influencing the design phase in terms of effort required and the quality of the resulting model. Secondly, we use this set of criteria to present a state of the art on the most significant reusable design artifacts.
C1 [Haddar, Nahla Zaaboub; Makni, Lobna; Ben Abdallah, Hanene] Univ Sfax, Fac Econ Sci & Management, Mir Cl Lab, Sfax, Tunisia.
C3 Universite de Sfax; Universite de Monastir
RP Haddar, NZ (corresponding author), Univ Sfax, Fac Econ Sci & Management, Mir Cl Lab, Sfax, Tunisia.
EM nahla_haddar@yahoo.fr; lobna.makni@fsegs.rnu.tn;
   hanene.benabdallah@fsegs.rnu.tn
RI Haddar, Nahla Zaaboub/AAT-4087-2020; Ben-Abdallah, Hanene/L-1239-2014
OI Ben-Abdallah, Hanene/0000-0001-9215-4661
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], ECIS 2011 P
   Becker J, 2004, Innovations Through Information Technology, Vols 1 and 2, P615
   Becker J., 2007, Reference Modeling, P27
   Börger E, 2012, SOFTW SYST MODEL, V11, P305, DOI 10.1007/s10270-011-0214-z
   Buschmarm F, 2007, IEEE SOFTWARE, V24, P31, DOI 10.1109/MS.2007.115
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Delfmann P., 2006, ADAPTIVE REFERENCE M
   Dumas Marlon., 2001, ≪ UML≫ 2001-The Unified Modeling Language. Modeling Languages, Concepts, P76, DOI 10.1007/3-540-45441-17
   Fettke P, 2004, WIRTSCHAFTSINF, V46, P331, DOI 10.1007/BF03250947
   Fettke P., 2005, WORKSH BUS PROC REF
   Frank U, 1999, ASSOCIATION FOR INFORMATION SYSTEMS - PROCEEDINGS OF THE FIFTH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 1999), P695
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gottschalk F, 2008, LECT NOTES COMPUT SC, V5331, P418
   Gschwind T, 2008, LECT NOTES COMPUT SC, V5240, P4, DOI 10.1007/978-3-540-85758-7_4
   Kiepuszewski B., 2003, THESIS QUEENSLAND U
   Knackstedt R, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P135
   Koehler J., 2007, AGTIVE 2007
   La Rosa M., 2008, CONFIGURABLE PROCESS
   La Rosa M., 2008, THESIS QUEENSLAND U
   La Rosa M, 2010, LECT NOTES COMPUT SC, V6426, P96
   La Rosa M, 2011, INFORM SYST, V36, P313, DOI 10.1016/j.is.2010.07.001
   Makni L., 2011, 6 INT C SOFTW DAT TE
   Matook S, 2009, DECIS SUPPORT SYST, V47, P60, DOI 10.1016/j.dss.2008.12.006
   MEDICKE J, 2004, BUSINESS INTEGRATION, V1, P32
   Mulyar N.A., 2009, THESIS TECHNISCHE U
   Recker J, 2007, REFERENCE MODELING B, P22
   Recker J.C., 2007, 18 AUSTR C INF SYST
   Reichert M., 2005, 21 INT C DAT ENG IEE
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Russell N, 2004, 126 WP EINDH U TECHN
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   RUSSELL N, 2004, FITTR200401 QUEENSL
   Russell NC, 2007, THESIS QUEENSLAND U
   Scheer AW, 2000, LECT NOTES COMPUT SC, V1806, P376
   Schumm D., 2010, ISD
   Smirnov S, 2011, LECT NOTES BUS INF P, V66, P251
   Smirnov S, 2009, LECT NOTES COMPUT SC, V5900, P115, DOI 10.1007/978-3-642-10383-4_8
   Soffer P., 2007, 8 WORKSH BUS PROC MO
   Ter Hofstede A.H. M., 2010, Modern business process automation: YAWL and its support environment, DOI DOI 10.1007/978-3-642-03121-2
   Thom L.H., 2006, WFMC WORKFLOW HDB
   Thom Lucineia, 2009, 3 WORKSH BUS PROC MA
   THOMAS O, 2005, P 1 INT WORKSH BUS P, P16
   Thorn Lucineia Heloisa, 2009, International Journal of Business Process Integration and Management, V4, P93, DOI 10.1504/IJBPIM.2009.027778
   Tran H. N., 2007, P SEKE KNOWL SYST I, P57
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1901, P18
   Vom Brocke J., 2006, P 12 AM C INF SYST C, P680
   WEIDLICH M, 2009, COMPUTATION BEHAV PR
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   WOHED P, 2006, P 4 INT C BUS PROC M
   [No title captured]
NR 53
TC 10
Z9 11
U1 0
U2 35
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 975
EP 989
DI 10.1007/s10270-012-0286-4
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600005
DA 2024-07-18
ER

PT J
AU Horkoff, J
   Barone, D
   Jiang, L
   Yu, E
   Amyot, D
   Borgida, A
   Mylopoulos, J
AF Horkoff, Jennifer
   Barone, Daniele
   Jiang, Lei
   Yu, Eric
   Amyot, Daniel
   Borgida, Alex
   Mylopoulos, John
TI Strategic business modeling: representation and reasoning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business intelligence; Business model; Conceptual modeling languages;
   Influence diagrams; Goal; Situation; Key performance indicators;
   Strategic planning
ID GOAL MODELS; DECISION; TROPOS
AB Business intelligence (BI) offers tremendous potential for business organizations to gain insights into their day-to-day operations, as well as longer term opportunities and threats. However, most of today's BI tools are based on models that are too much data-oriented from the point of view of business decision makers. We propose an enterprise modeling approach to bridge the business-level understanding of the enterprise with its representations in databases and data warehouses. The business intelligence model (BIM) offers concepts familiar to business decision making-such as goals, strategies, processes, situations, influences, and indicators. Unlike many enterprise models which are meant to be used to derive, manage, or align with IT system implementations, BIM aims to help business users organize and make sense of the vast amounts of data about the enterprise and its external environment. In this paper, we present core BIM concepts, focusing especially on reasoning about situations, influences, and indicators. Such reasoning supports strategic analysis of business objectives in light of current enterprise data, allowing analysts to explore scenarios and find alternative strategies. We describe how goal reasoning techniques from conceptual modeling and requirements engineering have been applied to BIM. Techniques are also provided to support reasoning with indicators linked to business metrics, including cases where specifications of indicators are incomplete. Evaluation of the proposed modeling and reasoning framework includes an on-going prototype implementation, as well as case studies.
C1 [Horkoff, Jennifer; Barone, Daniele; Jiang, Lei; Mylopoulos, John] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
   [Yu, Eric] Univ Toronto, Fac Informat, Toronto, ON, Canada.
   [Amyot, Daniel] Univ Ottawa, EECS, Ottawa, ON, Canada.
   [Borgida, Alex] Rutgers State Univ, Dept Comp Sci, Camden, NJ 08102 USA.
C3 University of Toronto; University of Toronto; University of Ottawa;
   Rutgers University System; Rutgers University New Brunswick; Rutgers
   University Camden
RP Horkoff, J (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
EM jenhork@cs.utoronto.ca; barone@cs.toronto.edu; leijiang@cs.toronto.edu;
   eric.yu@utoronto.ca; damyot@eecs.uottawa.ca; borgida@cs.rutgers.edu;
   jm@cs.toronto.edu
RI Amyot, Daniel/AAI-6948-2020
OI Amyot, Daniel/0000-0003-2414-1791; Horkoff, Jennifer/0000-0002-2019-5277
CR Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], P 27 ANN ACM S APPL
   [Anonymous], 2004, Strategy & leadership, DOI DOI 10.1016/J.BMC.2004.12.042
   [Anonymous], DYNAMIC SWOT ANAL
   Barone Daniele, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P502, DOI 10.1007/978-3-642-31095-9_33
   Barone D., 2010, CSRG607 U TOR DEP CO
   Barone D, 2011, LECT NOTES BUS INF P, V92, P82
   Barone D, 2011, LECT NOTES COMPUT SC, V6998, P448, DOI 10.1007/978-3-642-24606-7_35
   Barone D, 2011, LECT NOTES BUS INF P, V78, P17
   Barone D, 2010, LECT NOTES BUS INF P, V68, P31
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Chung L., 2000, INT SERIES SOFTWARE, V5
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Elahi G, 2010, REQUIR ENG, V15, P41, DOI 10.1007/s00766-009-0090-z
   Elahi Golnaz., 2011, P 2011 ACM S APPL CO, P651
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Giorgini P., 2004, J DATA SEMANT, V1, P1
   Horkoff J, 2010, LECT NOTES COMPUT SC, V6412, P59, DOI 10.1007/978-3-642-16373-9_5
   Horkoff J, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010100101
   Howard R, 2005, Decision Analysis, V2, P127, DOI [10.1287/deca.1050.0020, DOI 10.1287/DECA.1050.0020]
   IBM, 2012, COGN EXPR REP
   Isik O, 2011, INTELL SYST ACCOUNT, V18, P161, DOI 10.1002/isaf.329
   Jablonski S., 1995, SIGOIS Bulletin, V16, P33, DOI 10.1145/209891.209899
   Jiang L, 2011, LECT NOTES COMPUT SC, V6998, P429, DOI 10.1007/978-3-642-24606-7_33
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Loucopoulos P., 1992, SIGOIS Bulletin, V13, P28, DOI 10.1145/134376.134384
   Object Management Group, 2009, TECHNICAL REPORT
   Object Management Group, 2002, TECHNICAL REPORT
   Parmenter D., 2007, Key Performance Indicators, V1st
   Pentaho Corporation, 2011, PENT OP SOURC BUS IN
   Popova V, 2011, DATA KNOWL ENG, V70, P335, DOI 10.1016/j.datak.2011.01.001
   Pourshahid A, 2011, LECT NOTES BUS INF P, V78, P100
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Rolland C., 2000, Requirements Engineering, V5, P180, DOI 10.1007/PL00010350
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Sebastiani R, 2004, BIOMED SCI INSTRUM, V3084, P20
   Souza VES, 2011, LECT NOTES COMPUT SC, V6998, P346, DOI 10.1007/978-3-642-24606-7_26
   Stirna J., 2007, Proceedings of the 11th International Workshop on Exploring Modeling Methods in Systems Analysis and Design (EMMSAD'07), P99
   Stroh F, 2011, BUS INFORM SYST ENG+, V3, P33, DOI 10.1007/s12599-010-0138-0
   SUTHERLAND J, 1995, ACM COMPUT SURV, V27, P274, DOI 10.1145/210376.210394
   The Open Group, 2012, ARCHIMATE 2 0 OP GRO
   Uchil A., 2009, GOALS BASED STRATEGI
   van Lamsweerde A, 2009, LECT NOTES COMPUT SC, V5600, P380, DOI 10.1007/978-3-642-02463-4_20
   Wetzel T., 2008, The Stanford Encyclopedia of Philosophy
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 49
TC 90
Z9 95
U1 1
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1015
EP 1041
DI 10.1007/s10270-012-0290-8
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600007
DA 2024-07-18
ER

PT J
AU Autili, M
   Caporuscio, M
   Issarny, V
   Berardinelli, L
AF Autili, Marco
   Caporuscio, Mauro
   Issarny, Valerie
   Berardinelli, Luca
TI Model-driven engineering of middleware-based ubiquitous services
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service-oriented development; Model-driven service engineering;
   Service-oriented middleware; Ubiquitous computing
ID PROFILE
AB Supporting the execution of service-oriented applications over ubiquitous networks specifically calls for a service-oriented middleware (SOM), which effectively enables ubiquitous networking while benefiting from the diversity and richness of the networking infrastructure. However, developing ubiquitous applications that exploit the specific features offered by a SOM might be a time-consuming task, which demands a deep knowledge spanning from the application domain concepts down to the underlying middleware technicalities. In this paper, first we present the model-driven development process underpinning ubiSOAP, a SOM for the ubiquitous networking domain. Then, based on the domain concepts defined by the conceptual model of ubiSOAP, its architecture and its technicalities, we propose a domain-specific environment, called ubiDSE, that aids the development of applications that exploits the ubiSOAP features, from design to implementation. ubiDSE allows developers to focus on the main behavior of the modeled systems, rather than on complex details inherent to ubiquitous environments. As part of ubiDSE, specific tools are provided to automatically generate skeleton code for service-oriented applications to be executed on ubiSOAP-enabled devices, hence facilitating the exploitation of ubiSOAP by developers.
C1 [Autili, Marco; Berardinelli, Luca] Univ Aquila, Dip Ingn Sci Informaz & Matemat, I-67100 Laquila, Italy.
   [Caporuscio, Mauro] Politecn Milan, Dip Elettron Informaz & Bioingn, Milan, Italy.
   [Issarny, Valerie] INRIA Paris Rocquencourt, Le Chesnay, France.
C3 University of L'Aquila; Polytechnic University of Milan
RP Caporuscio, M (corresponding author), Politecn Milan, Dip Elettron Informaz & Bioingn, Milan, Italy.
EM marco.autili@univaq.it; mauro.caporuscio@polimi.it;
   valerie.issarny@inria.fr; luca.berardinelli@univaq.it
RI AUTILI, Marco/AAG-7127-2020; Caporuscio, Mauro/AAB-1320-2021;
   Berardinelli, Luca/AAJ-8012-2021
OI AUTILI, Marco/0000-0001-5951-1567; Caporuscio,
   Mauro/0000-0001-6981-0966; Berardinelli, Luca/0000-0003-2416-2867
FU IST PLASTIC project - European Commission [026955]; European Commission
   [227077-SMScom]; European Community [257178]
FX The work was initially supported by the IST PLASTIC project funded by
   the European Commission, FP6 contract number 026955.,
   http://www.ist-plastic.org. Then, further research has been funded by
   the European Commission, Program IDEAS-ERC, Project 227077-SMScom,
   http://www.erc-smscom.org, and by European Community's Seventh Framework
   Programme FP7/2007-2013 under grant agreement number 257178 (project
   CHOReOS-http://www.choreos.eu).
CR 3GPP, IP MULT SUBS
   3GPP, UNL MOB ACCESS
   [Anonymous], 2006, Technical Report
   [Anonymous], 2004, WEB SERVICES ARCHITE
   [Anonymous], P 6 INT WORKSH SOFTW
   [Anonymous], 80221 IEEE
   [Anonymous], REF ARCH SERV OR ARC
   Autili M, 2007, LECT NOTES COMPUT SC, V4749, P442
   Autili M, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P9, DOI 10.1109/ASEW.2008.4686288
   Autili M., UDIDSE DOMAIN SPECIF
   Autili M., 2012, P 4 INT WORKSH PRINC
   Autili M., 2008, ECEASST, V11, P1
   Autili M, 2009, LECT NOTES COMPUT SC, V5503, P124
   Berardinelli L., 2009, 2 INT WORKSH NON FUN
   Berardinelli L, 2010, EUROMICRO CONF PROC, P199, DOI 10.1109/SEAA.2010.47
   Berardinelli L, 2010, LECT NOTES COMPUT SC, V6013, P353, DOI 10.1007/978-3-642-12029-9_25
   Bertolino A, 2011, J SYST SOFTWARE, V84, P1089, DOI 10.1016/j.jss.2011.01.054
   Caporuscio M, 2007, LECT NOTES COMPUT SC, V4401, P18
   Caporuscio M, 2012, IEEE T SERV COMPUT, V5, P86, DOI 10.1109/TSC.2010.60
   Colombo M, 2005, LECT NOTES COMPUT SC, V3826, P48
   France R., 2007, FUTURE SOFTWARE ENG
   Grassi V, 2004, LECT NOTES COMPUT SC, V3273, P128
   ISSARNY V, 2007, FUTURE SOFTWARE ENG
   IST Gollum, GEN OP LINK LAY API
   Mabrouk NebilBen., 2009, Proceedings of the 10th ACM/IFIP/USENIX International Conference on Middleware, P1
   OASIS, WEB SERV QUAL MOD WS
   Object Management Group (OMG), SYST MOD LANG SYSML
   OMG, SERV OR ARCH MOD LAN
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Plastic Consortium, PLASTIC PROV LIGHT W
   Sachs J., 2004, WIRELESS WORLD RES F
   SAP, UN SERV DESCR LANG 3
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   Strickera V., 2010, FUTURE INTERNET EMER
   Sun JZ, 2005, IEEE WIREL COMMUN, V12, P18, DOI 10.1109/MWC.2005.1561941
   Zahariadis T, 2004, IEEE WIREL COMMUN, V11, P3, DOI 10.1109/MWC.2004.1351675
   Zdun U, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1361186.1361191
NR 38
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 481
EP 511
DI 10.1007/s10270-013-0344-6
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300004
DA 2024-07-18
ER

PT J
AU Westfechtel, B
AF Westfechtel, Bernhard
TI Merging of EMF models Formal foundations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE EMF models; Three-way merging; Version control
ID CONFLICT DETECTION; SPECIFICATION
AB Inadequate version control for models significantly impedes the application of model-driven software development. In particular, sophisticated support for merging model versions is urgently needed. In this paper, we present a formal approach to both two- and three-way merging of models in the EMF framework. The approach may be applied to instances of arbitrary Ecore models. We specify context-free as well as context-sensitive rules for model merging which both detect and resolve merge conflicts. Based on these rules, a merge algorithm is developed which produces a consistent model from consistent input models. The merge algorithm does neither assume unique object identifiers, nor does it require change logs. In contrast, it relies on matchings among the input models which identify common elements (state-based approach). The requirements imposed on these matchings are reduced to a minimum, e.g., there are no restrictions on the relative positions of matched elements. Altogether, the merge algorithm is widely applicable, preserves consistency, and offers advanced features, such as merging of ordered collections in the presence of arbitrary moves and handling of context-sensitive conflicts which are hard to detect and to resolve.
C1 Univ Bayreuth, D-95440 Bayreuth, Germany.
C3 University of Bayreuth
RP Westfechtel, B (corresponding author), Univ Bayreuth, POB 101251, D-95440 Bayreuth, Germany.
EM Bernhard.Westfechtel@uni-bayreuth.de
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K, 2010, INT J ENTERP INF SYS, V6, P68, DOI 10.4018/jeis.2010120206
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   Andries M, 1999, SCI COMPUT PROGRAM, V34, P1, DOI 10.1016/S0167-6423(98)00023-9
   Bartelt Christian., 2008, P 1 INT WORKSHOP COM, P13
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Deusser R., 2008, THESIS TU DARMSTADT
   Ebert J., 2008, P 2008 INT WORKSH CO
   Ehrig H, 2011, LECT NOTES COMPUT SC, V6603, P202, DOI 10.1007/978-3-642-19811-3_15
   Engel KD, 2006, LECT NOTES COMPUT SC, V4066, P143
   Förtsch S, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P90
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Kelter U., 2005, SOFTWARE ENG, P105
   KOEGEL M, 2010, P 1 INT WORKSH MOD C, P21, DOI DOI 10.1145/1826147.1826154
   KOGEL M, 2008, P 2008 INT WORKSH CO, P19, DOI DOI 10.1145/1370152.1370158
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Letkeman K., 2005, COMP MERGING UML M 3
   Lindholm Tancred., 2004, Proceedings of the 2004 ACM Symposium on Document Engineering, Milwaukee, Wisconsin, USA, October 28-30, 2004, P1
   Lippe E., 1992, ACM SIGSOFT SOFTWARE, P78
   Pottinger R., 2003, P 29 INT C VER LARG, P826
   Rönnau S, 2012, COMPUT SCI-RES DEV, V27, P95, DOI 10.1007/s00450-010-0140-2
   Rossini A, 2010, J LOGIC ALGEBR PROGR, V79, P636, DOI 10.1016/j.jlap.2009.10.003
   Rutle A, 2009, LECT NOTES COMPUT SC, V5503, P64
   Steinberg D., 2009, ECLIPSE SERIES
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Vesperman Jennifer., 2006, Essential CVS
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31, DOI DOI 10.1145/1826147.1826155
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
NR 35
TC 22
Z9 26
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 757
EP 788
DI 10.1007/s10270-012-0279-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300015
DA 2024-07-18
ER

PT J
AU Grossmann, G
   Schrefl, M
   Stumptner, M
AF Grossmann, Georg
   Schrefl, Michael
   Stumptner, Markus
TI Design for service compatibility
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service compatibility; Petri net; BPMN; Business process modelling;
   Behavior diagrams; Consistency rules
ID WEB SERVICES; BPEL; SPECIFICATION; SEMANTICS; MODELS
AB Service composition is a recent field that has seen a flurry of different approaches proposed towards the goal of flexible distributed heterogeneous interoperation of software systems, usually based on the expectation that such systems must be derived from higher-level models rather than be coded at low level. In practice, achieving service interoperability nonetheless continues to require significant modelling approach at multiple abstraction levels, and existing formal approaches typically require the analysis of the global space of joint executions of interacting services. Based on our earlier work on providing locally checkable consistency rules for guaranteeing the behavioural consistency of inheritance hierarchies, a model-driven approach for creating consistent service orchestrations is proposed. Service execution and interaction is represented with a high-level model in terms of extended Petri net notation; formal criteria are provided for service consistency that can be checked in terms of local model properties, and give a multi-step design approach for developing services that are guaranteed to be interoperable. Finally, it is outlined how the presented results can be carried over and applied to modelling processes using the Business Process Modelling Notation (BPMN).
C1 [Grossmann, Georg; Schrefl, Michael; Stumptner, Markus] Univ S Australia, Sch Comp & Informat Sci, Adelaide, SA 5001, Australia.
C3 University of South Australia
RP Grossmann, G (corresponding author), Univ S Australia, Sch Comp & Informat Sci, Adelaide, SA 5001, Australia.
EM georg.grossmann@cs.unisa.edu.au
RI Stumptner, Markus/B-5558-2009
OI Grossmann, Georg/0000-0003-4415-2228; Schrefl,
   Michael/0000-0003-1741-0252
FU Australian Research Council (ARC) [DP0988961]; CRC for Infrastructure
   Engineering Asset Management (CIEAM); Australian Research Council
   [DP0988961] Funding Source: Australian Research Council
FX This research was supported by the Australian Research Council (ARC)
   under grant DP0988961 and the CRC for Infrastructure Engineering Asset
   Management (CIEAM).
CR Benatallah B, 2006, DATA KNOWL ENG, V58, P327, DOI 10.1016/j.datak.2005.07.006
   Bichler P, 1997, LECT NOTES COMPUT SC, V1250, P423
   Bonchi F, 2008, LECT NOTES COMPUT SC, V5062, P52, DOI 10.1007/978-3-540-68746-7_8
   Bordeaux L, 2005, LECT NOTES COMPUT SC, V3324, P15
   Briol P., 2010, BPMN 2 0 DISTILLED
   Bultan T, 2008, SERV ORIENTED COMPUT, V2, P27, DOI 10.1007/s11761-008-0022-7
   Cavallaro L., 2008, P 2008 INT WORKSHOP, P129
   De Backer M, 2009, DATA KNOWL ENG, V68, P531, DOI 10.1016/j.datak.2008.12.002
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Dong WL, 2006, IEEE INT ENTERP DIST, P441
   Eshuis R, 2006, LECT NOTES COMPUT SC, V4102, P97
   Foster H, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P738, DOI 10.1109/ICWS.2004.1314806
   Genrich H.J., 1981, LNCS, V254, P207
   Grossmann G, 2010, LECT NOTES COMPUT SC, V6395, P17
   Guermouche N, 2008, ELECTRON NOTES THEOR, V200, P155, DOI 10.1016/j.entcs.2008.04.098
   Haller A., 2006, P 15 INT C WORLD WID, P1055
   Hamadi R., 2003, Proceedings of the 14th Australasian database conference, V17, P191
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Kappel G., 1991, Proceedings. Seventh International Conference on Data Engineering (Cat. No.91CH2968-6), P530, DOI 10.1109/ICDE.1991.131502
   Kappel G., 1991, P INT WORK C DYN MOD, P121
   Kiepuszewski B, 2000, LECT NOTES COMPUT SC, V1789, P431
   Kindler E, 2000, LECT NOTES COMPUT SC, V1806, P235
   Lang P, 1997, PROC INT CONF DATA, P455, DOI 10.1109/ICDE.1997.582006
   Leymann F, 2006, LECT NOTES COMPUT SC, V4275, P2
   Li XT, 2011, IEEE T SYST MAN CY A, V41, P510, DOI 10.1109/TSMCA.2010.2093884
   Liang QH, 2008, LECT NOTES COMPUT SC, V5364, P407, DOI 10.1007/978-3-540-89652-4_31
   Lohmann N, 2008, DATA KNOWL ENG, V64, P38, DOI 10.1016/j.datak.2007.06.006
   Martens A., 2003, PETRI NET NEWSLETTER, V65, P12
   Massuthe P., 2006, ROL BUS PROC SERV OR
   Moser S, 2006, LECT NOTES COMPUT SC, V4102, P458
   OMG, 2011, OMG Document Number: formal/ 2011-01-03
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Schrefl M, 2002, ACM T SOFTW ENG METH, V11, P92, DOI 10.1145/504087.504091
   Tan W, 2007, LECT NOTES COMPUT SC, V4443, P1062
   Tan W, 2009, IEEE T AUTOM SCI ENG, V6, P94, DOI 10.1109/TASE.2008.916747
   van der Aalst W. M. P., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P140
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6336, P78, DOI 10.1007/978-3-642-15618-2_8
   Wodtke D, 1997, LECT NOTES COMPUT SC, V1186, P230
   Wombacher A., 2006, P INT C E TECHN E CO, P39
   Wu Z, 2009, KNOWL INF SYST, V19, P107, DOI 10.1007/s10115-008-0143-5
   Xueqiang Gong, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P243, DOI 10.1109/COMPSAC.2009.141
   Zaha JM, 2008, IEEE T SYST MAN CY C, V38, P302, DOI 10.1109/TSMCC.2008.919193
   Zhou ZB, 2008, LECT NOTES COMPUT SC, V5333, P27
NR 47
TC 0
Z9 1
U1 0
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 489
EP 515
DI 10.1007/s10270-012-0229-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300007
DA 2024-07-18
ER

PT J
AU Mohagheghi, P
   Gilani, W
   Stefanescu, A
   Fernandez, MA
   Nordmoen, B
   Fritzsche, M
AF Mohagheghi, Parastoo
   Gilani, Wasif
   Stefanescu, Alin
   Fernandez, Miguel A.
   Nordmoen, Bjorn
   Fritzsche, Mathias
TI Where does model-driven engineering help? Experiences from three
   industrial cases
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Domain-specific language; Simulation;
   Experience report; Eclipse; Complex systems
AB There have been few experience reports from industry on how Model-Driven Engineering (MDE) is applied and what the benefits are. This paper summarizes the experiences of three large industrial participants in a European research project with the objective of developing techniques and tools for applying MDE on the development of large and complex software systems. The participants had varying degrees of previous experience with MDE. They found MDE to be particularly useful for providing abstractions of complex systems at multiple levels or from different viewpoints, for the development of domain-specific models that facilitate communication with non-technical experts, for the purposes of simulation and testing, and for the consumption of models for analysis, such as performance-related decision support and system design improvements. From the industrial perspective, a methodology is considered to be useful and cost-efficient if it is possible to reuse solutions in multiple projects or products. However, developing reusable solutions required extra effort and sometimes had a negative impact on the performance of tools. While the companies identified several benefits of MDE, merging different tools with one another in a seamless development environment required several transformations, which increased the required implementation effort and complexity. Additionally, user-friendliness of tools and the provision of features for managing models of complex systems were identified as crucial for a wider industrial adoption of MDE.
C1 [Mohagheghi, Parastoo] SINTEF, Oslo, Norway.
   [Mohagheghi, Parastoo] Norwegian Univ Sci & Technol, Oslo, Norway.
   [Gilani, Wasif; Fritzsche, Mathias] SAP Res Ctr, Belfast, Antrim, North Ireland.
   [Stefanescu, Alin] Univ Pitesti, Pitesti, Romania.
   [Fernandez, Miguel A.] Ericsson, Valladolid, Spain.
   [Nordmoen, Bjorn] WesternGeco, R&E Dept, Asker, Norway.
C3 SINTEF; Norwegian University of Science & Technology (NTNU); National
   University of Science & Technology POLITEHNICA Bucharest; University of
   Pitesti; Ericsson
RP Mohagheghi, P (corresponding author), SINTEF, Oslo, Norway.
EM parastoo.mohagheghi@sintef.no; wasif.gilani@sap.com;
   alin.stefanescu@upit.ro; miguel.a.fernandez@ericsson.com;
   nordmoen@slb.com; mathias.fritzsche@sap.com
RI Stefanescu, Alin/B-8580-2012; Stefanescu, Alin/GVT-2423-2022
OI Stefanescu, Alin/0000-0002-8418-2643
FU MODELPLEX project (IST-FP6-2006) [34081]; European Commission; Romanian
   research grant CNCS-UEFISCDI [7/05.08.2010]
FX This work was supported by MODELPLEX project (IST-FP6-2006 Contract No.
   34081), co-funded by the European Commission as part of the sixth
   Framework Program (FP6). Alin Stefanescu was also supported by the
   Romanian research grant CNCS-UEFISCDI no. 7/05.08.2010.
CR Brown A., 2004, INTRO MODEL DRIVEN 1
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Evans A, 2009, LECT NOTES COMPUT SC, V5562, P301, DOI 10.1007/978-3-642-02674-4_22
   Ferrari A., 2010, P 2 INT WORKSH SOFTW
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Fritzsche M., 2010, P MOD 2010, V161, P213
   Fritzsche M, 2008, LECT NOTES COMPUT SC, V5095, P369, DOI 10.1007/978-3-540-69100-6_26
   Fritzsche M, 2009, LECT NOTES COMPUT SC, V5701, P97, DOI 10.1007/978-3-642-03848-8_8
   Hastbacka D., 2011, J SYST SOFT IN PRESS, DOI [10.1016/j.jss.2011.01.63, DOI 10.1016/J.JSS.2011.01.63]
   Johannes J, 2010, LECT NOTES COMPUT SC, V6138, P132, DOI 10.1007/978-3-642-13595-8_12
   Katker S., 2009, Business Services: Konzepte, Technologien, Anwendungen, 9, V1, P171
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kirstan S, 2010, P ECMFA 2010 WORKSH, P18
   Mohagheghi P, 2010, 5 C2M EEMDD WORKSH E, P6
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Schmidt M, 2010, LECT NOTES COMPUT SC, V6138, P261, DOI 10.1007/978-3-642-13595-8_21
   Stefanescu A, 2009, LECT NOTES COMPUT SC, V5562, P313, DOI 10.1007/978-3-642-02674-4_23
   van Amstel M., 2008, P 12 ECOOP WORKSH QU, P41
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
NR 19
TC 51
Z9 56
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 619
EP 639
DI 10.1007/s10270-011-0219-7
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300013
DA 2024-07-18
ER

PT J
AU Ehrig, K
   Küster, JM
   Taentzer, G
AF Ehrig, Karsten
   Kuester, Jochen Malte
   Taentzer, Gabriele
TI Generating instance models from meta models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Meta model; UML; Graph grammar; Instance generation
ID GRAMMATICAL INFERENCE; GRAPH TRANSFORMATION
AB Meta modeling is a wide-spread technique to define visual languages, with the UML being the most prominent one. Despite several advantages of meta modeling such as ease of use, the meta modeling approach has one disadvantage: it is not constructive, i.e., it does not offer a direct means of generating instances of the language. This disadvantage poses a severe limitation for certain applications. For example, when developing model transformations, it is desirable to have enough valid instance models available for large-scale testing. Producing such a large set by hand is tedious. In the related problem of compiler testing, a string grammar together with a simple generation algorithm is typically used to produce words of the language automatically. In this paper, we introduce instance-generating graph grammars for creating instances of meta models, thereby overcoming the main deficit of the meta modeling approach for defining languages.
C1 [Ehrig, Karsten] Univ Leicester, Dept Comp Sci, Leicester, Leics, England.
   [Kuester, Jochen Malte] IBM Zurich, Res Lab, CH-8803 Ruschlikon, Switzerland.
   [Taentzer, Gabriele] Univ Marburg, Dept Comp Sci, Fac Math & Comp Sci, Marburg, Germany.
C3 University of Leicester; International Business Machines (IBM); Philipps
   University Marburg
RP Ehrig, K (corresponding author), Univ Leicester, Dept Comp Sci, Leicester, Leics, England.
EM karsten@mcs.le.ac.uk; jku@zurich.ibm.com;
   taentzer@mathematik.uni-marburg.de
FU SENSORIA (Software Engineering for Service-Oriented Overlay Computers)
   [IST-2005-16004]; German Research Foundation
FX This work has been partially sponsored by the IST-2005-16004 Integrated
   Project SENSORIA (Software Engineering for Service-Oriented Overlay
   Computers), and the German Research Foundation with project "Application
   of graph transformation to visual modeling languages". The authors would
   also like to thank their former colleague Jessica Winkelmann for her
   contributions to the presented work and the referees for their useful
   comments.
CR ALANEN M, 2003, 606 TUCS TURK CTR CO
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], The AGG Homepage
   [Anonymous], MDA GUID VERS 1 0 1
   [Anonymous], XSL TRANSFORMATIONS
   [Anonymous], 2006, MONOGRAPHS THEORETIC
   Bardohl R, 2004, LECT NOTES COMPUT SC, V2984, P214
   BOGER M, 2003, POSEIDON UML USERS G
   Boujarwah AS, 1997, INFORM SOFTWARE TECH, V39, P617, DOI 10.1016/S0950-5849(97)00017-7
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Corradini Andrea., 1997, HDB GRAPH GRAMMARS C, V1, P163
   Courcelle B., 1997, HDB GRAPH GRAMMARS C, V1, P313
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P287
   EHRIG K, 2005, 200509 TU BERL DEP C
   Ehrig K, 2006, LECT NOTES COMPUT SC, V4037, P156
   FU KS, 1975, IEEE T SYST MAN CYB, VSMC5, P95, DOI 10.1109/TSMC.1975.5409159
   FU KS, 1975, IEEE T SYST MAN CYB, VSMC5, P409, DOI 10.1109/TSMC.1975.5408432
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Hartman A, 2005, LECT NOTES COMPUT SC, V3297, P277
   *IBM, IBM RAT SOFTW ARCH V
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   JELTSCH E, 1991, LECT NOTES COMPUT SC, V532, P461, DOI 10.1007/BFb0017406
   Karsai G, 2003, J UNIVERS COMPUT SCI, V9, P1296
   Kirshin A, 2007, LECT NOTES COMPUT SC, V4364, P324
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   Maraee A, 2007, LECT NOTES COMPUT SC, V4530, P17
   Mens T, 2006, LECT NOTES COMPUT SC, V4143, P219
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   *OMG, 2005, PTC20050606 OMG
   *OMG, 2003, PTS030802 OMG
   *OMONDO, OMONDO ECL UML 3 2 0
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   WINKELMANN J, 2006, P 5 INT WORKSH GRAPH, P153
   ALLOY ANAL 4 0
   2005, XMI XML METADATA INT
NR 39
TC 53
Z9 59
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 479
EP 500
DI 10.1007/s10270-008-0095-y
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costal, D
   Gómez, C
   Queralt, A
   Raventós, R
   Teniente, E
AF Costal, Dolors
   Gomez, Cristina
   Queralt, Anna
   Raventos, Ruth
   Teniente, Ernest
TI Improving the definition of general constraints in UML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE conceptual modeling; integrity constraints; UML profile
AB An important aspect in the specification of conceptual schemas is the definition of general constraints that cannot be expressed by the predefined constructs provided by conceptual modeling languages. This is generally achieved by using general-purpose languages like OCL. In this paper we propose a new approach that facilitates the definition of such general constraints in UML. More precisely, we define a profile that extends the set of predefined UML constraints by adding certain types of constraints that are commonly used in conceptual schemas. We also show how our proposal facilitates reasoning about the constraints and their automatic code generation, study the application of our ideas to the specification of two real-life applications, and present a prototype tool implementation.
C1 [Costal, Dolors; Gomez, Cristina; Queralt, Anna; Raventos, Ruth; Teniente, Ernest] Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Costal, D (corresponding author), Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Barcelona, Spain.
EM dolors@lsi.upc.edu; cristina@lsi.upc.edu; aqueralt@lsi.upc.edu;
   raventos@lsi.upc.edu; teniente@lsi.upc.edu
RI Queralt, Anna/X-2265-2019; Teniente, Ernest/L-4313-2014; Costal,
   Dolors/F-7862-2016
OI Queralt, Anna/0000-0003-2782-2955; Costal, Dolors/0000-0002-7340-0414;
   Gomez Seoane, Cristina/0000-0002-3872-0439
CR Ackermann J, 2006, LECT NOTES COMPUT SC, V4001, P255, DOI 10.1007/11767138_18
   Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   Booch G., 2005, The Unified Modeling Language User Guide
   COSTAL D, 2006, LSI0614R
   Costal D, 2006, LECT NOTES COMPUT SC, V4199, P260
   Frias L., 2003, LSI0359R
   Halpin T., 2001, INFORM MODELING RELA
   LENZERINI M, 1990, INFORM SYST, V15, P453, DOI 10.1016/0306-4379(90)90048-T
   MCALLISTER AJ, DATA KNOWLEDGE ENG, V27, P255
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   MILIAUSKAIT E, 2005, INF TECHNOL CONTROL, V34
   Olivé A, 2003, LECT NOTES COMPUT SC, V2813, P349
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2005, UML2 0 OCL SPEC OMG
   *OMG, 2006, UN MOD LANG SUP V 2
   QUERALT A, 2007, SOFTW SYST IN PRESS
   Stein D, 2004, LECT NOTES COMPUT SC, V3273, P98
   van Griethuysen J.J., 1982, CONCEPTS TERMINOLOGY
   Wahler M., 2006, P MODELS WORKSHOP OC, P111
   WARMER J, 2003, OBJECT CONSTRAINT LA
NR 20
TC 15
Z9 16
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 469
EP 486
DI 10.1007/s10270-007-0078-4
PG 18
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 348CI
UT WOS:000259188200006
DA 2024-07-18
ER

PT J
AU Jiang, L
   Eberlein, A
   Far, BH
   Mousavi, M
AF Jiang, Li
   Eberlein, Armin
   Far, Behrouz H.
   Mousavi, Majid
TI A methodology for the selection of requirements engineering techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Technique evaluation; Decision support;
   Clustering
AB The complexity of software projects as well as the multidisciplinary nature of requirements engineering (RE) requires developers to carefully select RE techniques and practices during software development. Nevertheless, the selection of RE techniques is usually based on personal preference or existing company practice rather than on characteristics of the project at hand. Furthermore, there is a lack of guidance on which techniques are suitable for a certain project context. So far, only a limited amount of research has been done regarding the selection of RE techniques based on the attributes of the project under development. The few approaches that currently exist for the selection of RE techniques provide only little guidance for the actual selection process. We believe that the evaluation of RE techniques in the context of an application domain and a specific project is of great importance. This paper describes a Methodology for Requirements Engineering Techniques Selection (MRETS) as an approach that helps requirements engineers select suitable RE techniques for the project at hand. The MRETS has three aspects: Firstly, it aids requirements engineers in establishing a link between the attributes of the project and the attributes of RE techniques. Secondly, based on the evaluation schema proposed in our research, MRETS provides an opportunity to analyze RE techniques in detail using clustering. Thirdly, the objective function used in our approach provides an effective decision support mechanism for the selection of RE techniques. This paper makes contributions to RE techniques analysis, the application of RE techniques in practice, RE research, and software engineering in general. The application of the proposed methodology to an industrial project provides preliminary information on the effectiveness of MRETS for the selection of RE techniques.
C1 [Jiang, Li] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
   [Eberlein, Armin] Amer Univ Sharjah, Dept Comp Engn, Sharjah, U Arab Emirates.
   [Far, Behrouz H.; Mousavi, Majid] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB, Canada.
C3 University of Adelaide; American University of Sharjah; University of
   Calgary
RP Jiang, L (corresponding author), Univ Adelaide, Sch Comp Sci, Room 2069, Adelaide, SA 5005, Australia.
EM ljiang@cs.adelaide.edu.au; eberlein@ucalgary.ca; far@ucalgary.ca;
   amousavi@ucalgary.ca
OI Eberlein, Armin/0000-0003-1104-8424
CR [Anonymous], CHALLENGES STRATEGIE
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   EMAM KE, 2000, IEEE T SOFTWARE ENG, V26, P541
   FITZGERALD B, 1996, 4 EUR C INF SYST, P143
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   HICKEY AM, 2003, P 36 ANN HAW INT C S, P96
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 20
TC 24
Z9 27
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 303
EP 328
DI 10.1007/s10270-007-0055-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 322NZ
UT WOS:000257383900006
DA 2024-07-18
ER

PT J
AU Mens, T
   Taentzer, G
   Runge, O
AF Mens, Tom
   Taentzer, Gabriele
   Runge, Olga
TI Analysing refactoring dependencies using graph transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Graph Transformations
CY SEP 17-23, 2006
CL Natal, BRAZIL
SP Brazilian Comp Soc, European Assoc Theoret Comp Sci, European Assoc Software Sci & Technol, Formal Methods Europe, Int Federat Informat Proc
DE refactoring; graph transformation; critical pair analysis; dependency
   analysis; AGG
AB Refactoring is a widely accepted technique to improve the structure of object-oriented software. Nevertheless, existing tool support remains restricted to automatically applying refactoring transformations. Deciding what to refactor and which refactoring to apply still remains a difficult manual process, due to the many dependencies and interrelationships between relevant refactorings. In this paper, we represent refactorings as graph transformations, and we propose the technique of critical pair analysis to detect the implicit dependencies between refactorings. The results of this analysis can help the developer to make an informed decision of which refactoring is most suitable in a given context and why. We report on several experiments we carried out in the AGG graph transformation tool to support our claims.
C1 [Mens, Tom] Univ Mons, Software Engn Lab, B-7000 Mons, Belgium.
   [Taentzer, Gabriele] Univ Marburg, Fac Math & Comp Sci, D-35032 Marburg, Germany.
   [Runge, Olga] Tech Univ Berlin, D-10587 Berlin, Germany.
C3 University of Mons; Philipps University Marburg; Technical University of
   Berlin
RP Mens, T (corresponding author), Univ Mons, Software Engn Lab, B-7000 Mons, Belgium.
EM tom.mens@umh.ac.be; gabi@cs.tu-berlin.de; olga@cs.tu-berlin.de
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020
CR [Anonymous], 1993, TERM GRAPH REWRITING
   Boger M., 2002, P INT C EXTR PROGR F, P77
   Bottoni P, 2000, IEEE VISLANG, P59, DOI 10.1109/VL.2000.874351
   Bottoni P., 2005, TRANSFORMATION KNOWL
   BOTTONI P, 2004, LNCS, V3062, P220, DOI DOI 10.1007/978-3-540-25959-6_16
   Corradini A., 1996, Fundamenta Informaticae, V26, P241
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   DEMEYER S, 2002, ELECT NOTES THEOR CO, V72
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Lambers L, 2006, ELECTRON NOTES THEOR, V152, P97, DOI 10.1016/j.entcs.2006.01.017
   Marinescu R, 1998, LECT NOTES COMPUT SC, V1543, P252
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mens T, 2000, LECT NOTES COMPUT SC, V1779, P127
   MENS T, 2004, ELECT NOTES THEOR CO
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Roberts D., 1999, Ph. D. Dissertation
   SCHIPPERS H, 2004, ELECT NOTES THEOR CO
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   TAENTZER G, 1996, THESIS TU BERLIN SHA
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   Tichelaar S., 2001, Ph.D. thesis
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Van Eetvelde N, 2004, LECT NOTES COMPUT SC, V3256, P399
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Zhang J, 2005, MODEL DRIVEN SOFTWAR
NR 38
TC 83
Z9 89
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2007
VL 6
IS 3
BP 269
EP 285
DI 10.1007/s10270-006-0044-6
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WT
UT WOS:000254667900005
DA 2024-07-18
ER

PT J
AU Hadad, M
   Engelberg, G
   Soffer, P
AF Hadad, Moshe
   Engelberg, Gal
   Soffer, Pnina
TI From network traffic data to business activities: a conceptualization
   and a recognition approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Activity recognition; Event abstraction; Sequence models; Process
   mining; Interleaved data; Network traffic
ID ARCHITECTURE; ABSTRACTION; MODEL
AB Event logs are the main source for business process mining techniques. However, readily available logs are produced only by part of the existing systems, which may not always be part of an investigated environment. Furthermore, logs that are created by a given information system may reflect only parts of the full process, while other parts may span additional systems. We suggest that data generated by communication network traffic that is associated with business processes can fill this gap, both in availability and in span. However, traffic data are technically oriented and noisy, and there is a huge conceptual gap between these data and business meaningful event logs. Considering the above, we set the following aims. First, to assess whether the gap between technical-level traffic data and conceptual-level business activities can be bridged. Once this is established, to automatically recognize business activities within network traffic data, considering that these data hold interleaving activities that are performed in parallel. To address the first aim, we develop a conceptual model of traffic behavior that corresponds to a business activity. We use simulated traffic data annotated by the originating activity and perform an iterative process of abstracting and filtering the data, along with the application of process discovery. As a result, we obtained distinct process models for specific activity types and a generic higher-level model of traffic behavior in a business activity. To address the second aim, relying on the insights gained from the conceptual models, we propose a method utilizing sequence learning to identify activity types, and their boundaries (start and end) within network traffic data. Evaluation shows that the proposed approach has a high precision and recall in classifying packets by activities, even while these activities are performed in parallel to each other and their data are interleaved.
C1 [Hadad, Moshe; Engelberg, Gal; Soffer, Pnina] Univ Haifa, Abba Khoushy Ave 199, IL-3498838 Haifa, Israel.
   [Hadad, Moshe; Engelberg, Gal] Accenture Labs, Tel Aviv, Israel.
C3 University of Haifa
RP Engelberg, G (corresponding author), Univ Haifa, Abba Khoushy Ave 199, IL-3498838 Haifa, Israel.; Engelberg, G (corresponding author), Accenture Labs, Tel Aviv, Israel.
EM moshe.hadad@accenture.com; gal.engelberg@accenture.com;
   spnina@is.haifa.ac.il
FU This work was done in collaboration with Accenture Labs, Israel;
   Accenture Labs, Israel
FX This work was done in collaboration with Accenture Labs, Israel
CR Ackermann C, 2009, WORK CONF REVERSE EN, P53, DOI 10.1109/WCRE.2009.34
   [Anonymous], 2016, 1849-2016, DOI [10.1109/IEEESTD.2016.7740858, DOI 10.1109/IEEESTD.2016.7740858]
   Baier T, 2018, SOFTW SYST MODEL, V17, P573, DOI 10.1007/s10270-017-0603-z
   Baier T, 2014, INFORM SYST, V46, P123, DOI 10.1016/j.is.2014.04.004
   Bayomie D, 2019, LECT NOTES COMPUT SC, V11788, P136, DOI 10.1007/978-3-030-33223-5_12
   Bayomie D, 2016, LECT NOTES COMPUT SC, V9694, P274, DOI 10.1007/978-3-319-39696-5_17
   Bogarín A, 2018, PSICOTHEMA, V30, P322, DOI 10.7334/psicothema2018.116
   Bose RPJC, 2009, LECT NOTES COMPUT SC, V5701, P159, DOI 10.1007/978-3-642-03848-8_12
   Brzychczy E, 2019, ADV INTELL SYST COMP, V835, P611, DOI 10.1007/978-3-319-97490-3_58
   Calvanese D, 2017, LECT NOTES BUS INF P, V288, P220, DOI 10.1007/978-3-319-59336-4_16
   CERF VG, 1983, COMPUT NETWORKS ISDN, V7, P307, DOI 10.1016/0376-5075(83)90042-9
   Chen LM, 2012, IEEE T SYST MAN CY C, V42, P790, DOI 10.1109/TSMCC.2012.2198883
   Chen LM, 2009, INT J WEB INF SYST, V5, P410, DOI 10.1108/17440080911006199
   de Murillas EGL, 2019, SOFTW SYST MODEL, V18, P1209, DOI 10.1007/s10270-018-0664-7
   Diba K, 2020, WIRES DATA MIN KNOWL, V10, DOI 10.1002/widm.1346
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Engelberg Gal, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P3, DOI 10.1007/978-3-030-79186-5_1
   Engelberg G., 2023, UNCERTAINTY AWARE EV
   Fazzinga B, 2018, LECT NOTES COMPUT SC, V10816, P257, DOI 10.1007/978-3-319-91563-0_16
   Folino F, 2014, LECT NOTES COMPUT SC, V8484, P533, DOI 10.1007/978-3-319-07881-6_36
   Ganesh A, 2016, INT CONF ADV COMPU, P112, DOI 10.1109/IACC.2016.30
   Gunther Christian., 2006, MINING ACTIVITY CLUS
   Hernaus T, 2012, BALT J MANAG, V7, P376, DOI 10.1108/17465261211272148
   Huser V., 2012, Process mining: Discovery, conformance and enhancement of business processes
   Kasteren T.V., 2007, International Conference on Intelligent Environments, P209
   Lafferty John, 2001, INT C MACH LEARN ICM
   Lara OD, 2013, IEEE COMMUN SURV TUT, V15, P1192, DOI 10.1109/SURV.2012.110112.00192
   Leemans M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P44, DOI 10.1109/MODELS.2015.7338234
   Leonardi G., 2019, Data-Driven Process Discovery and Analysis. 7th IFIP WG 2.6 International Symposium (SIMPDA 2017). Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 340), P45, DOI 10.1007/978-3-030-11638-5_3
   Li J, 2022, IEEE T KNOWL DATA EN, V34, P50, DOI 10.1109/TKDE.2020.2981314
   Mannhardt F., 2017, BPM DEMOS
   Mannhardt F, 2018, INFORM SYST, V76, P1, DOI 10.1016/j.is.2018.01.009
   McCallum Andrew, 2003, Proceedings of the Seventh Conference on Natural Language Learning at HLT-NAACL 2003, P188, DOI DOI 10.3115/1119176.1119206
   Nguyen B, 2021, MACH LEARN APPL, V5, DOI 10.1016/j.mlwa.2021.100072
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pfeiffer P, 2021, LECT NOTES COMPUT SC, V12875, P327, DOI 10.1007/978-3-030-85469-0_21
   Poelmans J, 2010, LECT NOTES ARTIF INT, V6171, P505, DOI 10.1007/978-3-642-14400-4_39
   Pontieri L, 2015, P 18 INT C BUS INF S, P165
   PostgreSQL, WORLDS MOST ADV OP S
   Pourmirza S, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420023
   Rebmann A., MULTIPERSPECTIVE IDE, P12
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Senderovich A, 2016, LECT NOTES COMPUT SC, V9694, P257, DOI 10.1007/978-3-319-39696-5_16
   Soffer P, 2013, INT J INF SYST MODEL, V4, P44, DOI 10.4018/jismd.2013040103
   Suriadi Suriadi, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P449, DOI 10.1007/978-3-642-38709-8_29
   Sutskever I, 2014, ADV NEUR IN, V27
   Tax N., 2018, Intelligent Systems and Applications, Studies in Computational Intelligence, P83, DOI DOI 10.1007/978-3-319-69266-1_5
   Tax N, 2018, LECT NOTE NETW SYST, V15, P251, DOI 10.1007/978-3-319-56994-9_18
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst W.M.P., 2015, BPM-Driving innovation in a digital world, P105, DOI 10.1007/978-3-319-14430-6_8
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Eck ML, 2016, INT CONF RES CHAL, P323, DOI 10.1109/RCIS.2016.7549355
   van Kasteren T, 2008, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING (UBICOMP 2008), P1, DOI 10.1145/1409635.1409637
   van Zelst SJ, 2021, GRANULAR COMPUT, V6, P719, DOI 10.1007/s41066-020-00226-2
   Wakup C., 2014, P BUS PROC MAN WORKS, P353
   Wang JD, 2019, PATTERN RECOGN LETT, V119, P3, DOI 10.1016/j.patrec.2018.02.010
   WERBOS PJ, 1990, P IEEE, V78, P1550, DOI 10.1109/5.58337
   Wolny S, 2019, IEEE INT C EMERG, P57, DOI [10.1109/ETFA.2019.8869502, 10.1109/etfa.2019.8869502]
   Yazdi MA, 2021, PROCEEDINGS OF THE 13TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT (KDIR), VOL 1:, P27, DOI 10.5220/0010652000003064
   ZIMMERMANN H, 1980, IEEE T COMMUN, V28, P425, DOI 10.1109/TCOM.1980.1094702
NR 61
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1827
EP 1854
DI 10.1007/s10270-023-01135-z
EA NOV 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001097334600001
DA 2024-07-18
ER

PT J
AU Mercer, E
   Slind, K
   Amundson, I
   Cofer, D
   Babar, J
   Hardin, D
AF Mercer, Eric
   Slind, Konrad
   Amundson, Isaac
   Cofer, Darren
   Babar, Junaid
   Hardin, David
TI Synthesizing verified components for cyber assured systems engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE AADL; OSATE; Assume-guarantee reasoning; Synthesis; Cyber hardening;
   Formal verification; Model-based systems engineering
AB Safety-critical systems such as avionics need to be engineered to be cyber resilient meaning that systems are able to detect and recover from attacks or safely shutdown. As there are few development tools for cyber resiliency, designers rely on guidelines and checklists, sometimes missing vulnerabilities until late in the process where remediation is expensive. Our solution is a model-based approach with cyber resilience-improving transforms that insert high-assurance components such as filters to block malicious data or monitors to detect and alarm anomalous behavior. Novel is our use of model checking and a verified compiler to specify, verify, and synthesize these components. We define code contracts as formal specifications that designers write for high-assurance components, and test contracts as tests to validate their behavior. A model checker proves whether or not code contracts satisfy test contracts in an iterative development cycle. The same model checker also proves whether or not a system with the inserted components, assuming they adhere to their code contracts, provides the desired cyber resiliency for the system. We define an algorithm to synthesize implementations for code contracts in a semantics-preserving way that is backed by a verified compiler. The entire workflow is implemented as part of the open source BriefCASE toolkit. We report on our experience using BriefCASE with a case study on a UAV system that is transformed to be cyber resilient to communication and supply chain cyber attacks. Our case study demonstrates that writing code contracts and then synthesizing correct implementations from them are feasible in real-world systems engineering for cyber resilience.
C1 [Mercer, Eric] Brigham Young Univ, Provo, UT 84602 USA.
   [Slind, Konrad; Amundson, Isaac; Cofer, Darren] Collins Aerosp, Appl Res & Technol, Minneapolis, MN USA.
   [Babar, Junaid; Hardin, David] Collins Aerosp, Appl Res & Technol, Cedar Rapids, IA USA.
C3 Brigham Young University; Raytheon Technologies; Collins Aerospace
RP Mercer, E (corresponding author), Brigham Young Univ, Provo, UT 84602 USA.
EM egm@cs.byu.edu
OI Mercer, Eric/0000-0002-2264-2958
FU Defense Advanced Research Projects Agency (DARPA) CASE program
FX This work was funded in part by the Defense Advanced Research Projects
   Agency (DARPA) CASE program. The views expressed are those of the
   authors and do not reflect the official policy or position of DARPA or
   the US Government.
CR Abrahamsson O., 2020, PROOF PRODUCING SYNT, DOI [10.1007/s10817-020-09559-8, DOI 10.1007/S10817-020-09559-8]
   AMUNDSON I, 2021, DESIGN AUTOMATION CY
   [Anonymous], 2000, Log. J. IGPL, DOI [10.1093/jigpal/8.1.55, DOI 10.1093/JIGPAL/8.1.55]
   Backes J, 2015, LECT NOTES COMPUT SC, V9058, P82, DOI 10.1007/978-3-319-17524-9_7
   Biernacki D, 2008, ACM SIGPLAN NOTICES, V43, P121, DOI 10.1145/1379023.1375674
   Bourke T, 2017, ACM SIGPLAN NOTICES, V52, P586, DOI [10.1145/3140587.3062358, 10.1145/3062341.3062358]
   CakeML, US
   CASE, CASE CYB ASS SYST EN
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Cofer Darren, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P126, DOI 10.1007/978-3-642-28891-3_13
   Cofer D., 2022, IEEE SECUR PRIV, V15, P2
   Colaco J L, 2005, P 5 ACM INT C EMB SO, P173, DOI DOI 10.1145/1086228.1086261
   Colaço JL, 2003, LECT NOTES COMPUT SC, V2855, P134
   collinsaerospace, COLL AER COMM AV ARC
   compcom, US
   Cyber Assured Systems Engineering (CASE), TA6 PLATF ASS CAMKES
   Cyber Assured Systems Engineering (CASE), CYB ASS SYST ENG CAS
   dafny, About us
   Dimoulas C, 2012, LECT NOTES COMPUT SC, V7211, P214, DOI 10.1007/978-3-642-28869-2_11
   Findler RB, 2002, ACM SIGPLAN NOTICES, V37, P48, DOI 10.1145/583852.581484
   Gacek A, 2015, LECT NOTES COMPUT SC, V9058, P173, DOI 10.1007/978-3-319-17524-9_13
   Gérard L, 2012, ACM SIGPLAN NOTICES, V47, P51, DOI [10.1145/2345141.1967685, 10.1145/2345141.2248426]
   github, FORM METH WORKB
   github, AGREE SPEC EX
   github, SMT BAS INF STAT MOD
   Gómez-Londoño A, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428272
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAMR Sireum, 2021, SIR HAMR HIGH ASS MO
   Hardin D.S., 2021, P 7 WORKSH LANG THEO
   Hardin D.S., 2020, P 53 HAW INT C SYST, P6365
   Hatcliff J., 2021, Leveraging Applications of Formal Methods, Verification and Validation: 10th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2021, Rhodes, Greece, October 1729, 2021, Proceedings, P274, DOI [DOI 10.1007/978-3-030-89159-6_18, 10.1007/978-3-030-89159-618, DOI 10.1007/978-3-030-89159-618]
   Hatcliff John., 2021, INT S LEVERAGING APP, P253, DOI DOI 10.1007/978-3-030-89159-617
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Katis A., 2017, SYNTHESIS ASSUME GUA
   Katis A, 2018, LECT NOTES COMPUT SC, V10806, P176, DOI 10.1007/978-3-319-89963-3_10
   Katis A, 2016, LECT NOTES COMPUT SC, V9593, P110, DOI 10.1007/978-3-319-29613-5_7
   King DL, 2017, INT J MENT HEALTH AD, V15, P1270, DOI [10.1109/CCA.2016.7587813, 10.1007/s11469-016-9699-6]
   Klein G, 2018, COMMUN ACM, V61, P68, DOI 10.1145/3230627
   Klein G, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2560537
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Laddaga R., 2019, ARXIV
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   Liu C, 2022, LECT NOTES COMPUT SC, V13260, P355, DOI 10.1007/978-3-031-06773-0_19
   Murugesan Anitha., 2013, Proceedings of the 2013 ACM SIGAda Annual Conference on High Integrity Language Technology, P51
   Myreen MO, 2012, ACM SIGPLAN NOTICES, V47, P115, DOI 10.1145/2398856.2364545
   Nguyundefinedn PC., 2017, P ACM PROGR LANG, VPOPL, P511
   Patten T, 2020, PR INT CONF INF WAR, P597, DOI 10.34190/ICCWS.20.040
   Petz A., 2021, P 13 NASA FORM METH
   Pike L, 2013, INNOV SYST SOFTW ENG, V9, P235, DOI 10.1007/s11334-013-0223-x
   Saadatmand M., 2012, Proceedings of the 2012 Ninth International Conference on Information Technology: New Generations (ITNG), P437, DOI 10.1109/ITNG.2012.103
   SAE, 2009, AS5506 SAE
   Slind K.L., 2021, P 12 INT C INT THEOR
   THIAGARAJAN H, 2021, INNOVATIONS SYSTEMS
   Whalen MW, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2012.173
NR 54
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1451
EP 1471
DI 10.1007/s10270-023-01096-3
EA MAR 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000953658900001
DA 2024-07-18
ER

PT J
AU Lourenco, H
   Ferreira, C
   Seco, JC
   Parreira, J
AF Lourenco, Hugo
   Ferreira, Carla
   Costa Seco, Joao
   Parreira, Joana
TI OSTRICH: a rich template language for low-code development (extended
   version)
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodel templating; Typechecking templates; Parameter constraints;
   Low-code; Development productivity; Model reuse
ID UML; PRODUCTIVITY
AB Low-code platforms aim at allowing non-experts to develop complex systems and knowledgeable developers to improve their productivity in orders of magnitude. The greater gain comes from using components developed by experts capturing common patterns across all layers of the application, from the user interface to the data layer and integration with external systems. Often, cloning sample code fragments is the only alternative in such scenarios, requiring extensive adaptation to reach the intended use. Such customization activities require deep knowledge outside of the comfort zone of low code. To effectively speed up the reuse, composition, and adaptation of pre-defined components, low-code platforms need to provide safe and easy-to-use language mechanisms. This paper introduces OSTRICH, a strongly typed rich templating language for a low-code platform (OutSystems) that builds on metamodel annotations and allows the correct instantiation of templates. We conservatively extend the existing metamodel and ensure that the resulting code is always well-formed. The results we present include a novel type safety verification of template definitions, and template arguments, providing model consistency across application layers. We implemented this template language in a prototype of the OutSystems platform and ported nine of the top ten most used sample code fragments, thus improving the reuse of professionally designed components.
C1 [Lourenco, Hugo] OutSystems, Lisbon, Portugal.
   [Ferreira, Carla; Costa Seco, Joao; Parreira, Joana] NOVA LINCS & NOVA Univ Lisbon, Lisbon, Portugal.
RP Seco, JC (corresponding author), NOVA LINCS & NOVA Univ Lisbon, Lisbon, Portugal.
EM joao.seco@fct.unl.pt
RI Ferreira, Carla/A-7015-2010; Seco, João Costa/D-2035-2010
OI Costa Seco, Joao/0000-0002-2840-3966; Ferreira,
   Carla/0000-0003-3680-7634
FU FCT/MCTES [UIDB/04516/2020, PTDC/CCI-INF/32081/2017,
   Lisboa-01-0247-Feder-045917]
FX We thank the anonymous reviewers for their comments that helped improve
   the paper. This work is partially supported by FCT/MCTES grants
   UIDB/04516/2020, PTDC/CCI-INF/32081/2017, and GOLEM
   Lisboa-01-0247-Feder-045917.
CR [Anonymous], 2021, HANDLEBARS MINIMAL T
   [Anonymous], 2017, MODELING LANGUAGE SP
   [Anonymous], The ATLAS Transformation Language
   [Anonymous], 2021, MUSTACHE LOGIC LESS
   Bracha Gilad., 2004, GENERICS JAVA PROGRA
   Caires L., 2019, UIDCEC045162019 PTDC
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Cardelli L., 1988, Phase distinctions in type theory
   Caron O, 2004, LECT NOTES COMPUT SC, V3273, P27
   Cheney James, 2003, Technical Report
   Cuccuru A, 2009, LECT NOTES COMPUT SC, V5795, P644, DOI 10.1007/978-3-642-04425-0_51
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Davies R, 2001, J ACM, V48, P555, DOI 10.1145/382780.382785
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   De Rosso SP, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P79, DOI 10.1145/3359591.3359728
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Jetbrains, 2020, JETBR MET PROGR SYST
   Kiselyov O, 2014, LECT NOTES COMPUT SC, V8475, P86, DOI 10.1007/978-3-319-07151-0_6
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Liskov B., 1986, ABSTRACTION SPECIFIC
   Lourenco H., 2020, P 23 ACM IEEE INT C
   Lourenço H, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P216, DOI 10.1109/MODELS50736.2021.00030
   Lourenço H, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P362, DOI 10.1109/MODELS-C.2019.00056
   McConnell Steve, 2004, Code Complete: A Practical Handbook of Software Construction. Best Practices for Developers, V2nd
   Mendix, 2021, PAG TEMPL
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   OutSystems, 2021, PLATF OV
   OutSystems, 2020, OUTSYSTEMS SCREEN TE
   Parr T.J., 2004, P 13 INT C WORLD WID, P224, DOI [DOI 10.1145/988672.988703, 10.1145/988672.988703]
   Pech V., 2013, P 2013 INT C PRINC P, P165, DOI [DOI 10.1145/2500828.2500846, 10.1145/2500828.2500846]
   Seco JC, 2017, J FUNCT PROGRAM, V27, DOI 10.1017/S095679681700017X
   Sheard T, 2002, ACM SIGPLAN NOTICES, V37, P60, DOI 10.1145/636517.636528
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Vanwormhoudt G., 2020, MODELS 20, P47, DOI [10.1145/3365438.3410988, DOI 10.1145/3365438.3410988]
   Vanwormhoudt G, 2017, SOFTW SYST MODEL, V16, P469, DOI 10.1007/s10270-015-0463-3
NR 35
TC 1
Z9 1
U1 3
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1645
EP 1663
DI 10.1007/s10270-022-01066-1
EA DEC 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000899758900001
DA 2024-07-18
ER

PT J
AU Tsai, CH
   Zdravkovic, J
   Söder, F
AF Tsai, Chen Hsi
   Zdravkovic, Jelena
   Soder, Fredrik
TI A method for digital business ecosystem design: situational method
   engineering in an action research project
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Digital business ecosystem; Situational method engineering; Method
   chunks; Action research
ID INFORMATION-SYSTEMS; SCIENCE
AB Digital business ecosystem (DBE) is a paradigm that enables developing and monitoring novel business models of collaborating organisations and individuals using ICT as the foundation. Different from traditional online networked models such as manufacturer, retailer, or franchise centred, using a shared digital environment, DBE fosters heterogeneity, symbiosis, coevolution, and self-organisation of its multiple actors, which enables it to span different business domains as well as exhibits diverse interests. For many organisations and individuals, DBE presents a new collaborative approach to leverage offered and desired resources among the involved members to meet each of their goals. As such, it is foreseen to be of high value to the involved actors, but at the same time, it is often complex due to many correlated interactions of these actors and thus difficult to design and manage. Furthermore, the current state of the art shows a lack of methodological guidance for DBE design. We propose a method for DBE design that follows the requirements collected from industry experts and practitioners by applying situational method engineering to enable its modularised design. The method for design is validated by action research in the setting of Digital Vaccine, a Swedish DBE managing health-related services.
C1 [Tsai, Chen Hsi; Zdravkovic, Jelena] Stockholm Univ, Dept Comp & Syst Sci, Postbox 7003, S-16407 Kista, Sweden.
   [Soder, Fredrik] Hlth Integrator AB, Kivra 559119-1498, S-10631 Stockholm, Sweden.
C3 Stockholm University
RP Tsai, CH (corresponding author), Stockholm Univ, Dept Comp & Syst Sci, Postbox 7003, S-16407 Kista, Sweden.
EM chenhsi.tsai@dsv.su.se; jelenaz@dsv.su.se;
   fredrik.soder@healthintegrator.eu
OI Zdravkovic, Jelena/0000-0002-0870-0330; Tsai, Chen
   Hsi/0000-0001-9765-9845
FU Stockholm University
FX Open access funding provided by Stockholm University.
CR Aldea A, 2018, CONF BUS INFORM, P156, DOI 10.1109/CBI.2018.10064
   [Anonymous], 1985, Regulatory policy and the social sciences
   [Anonymous], 2017, IEEE INT C LOGISTICS
   Baskerville R, 2018, J ASSOC INF SYST, V19, P358, DOI 10.17705/1jais.00495
   Basole RC, 2018, ACM TRANS MANAG INF, V9, DOI 10.1145/3185047
   Battistella C, 2013, TECHNOL FORECAST SOC, V80, P1194, DOI 10.1016/j.techfore.2012.11.002
   Bork D., 2014, 2014 9 INT C SOFTW P
   Bork D, 2015, LECT NOTES ARTIF INT, V9403, P177, DOI 10.1007/978-3-319-25159-2_16
   Chen Hsi Tsai, 2020, Advanced Information Systems Engineering. CAiSE Forum 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 386), P126, DOI 10.1007/978-3-030-58135-0_11
   Coghlan D., 2018, Conducting action research for business and management students
   Coghlan D., 2014, SAGE ENCY ACTION RES, V1-2
   Eden C., 1996, BRIT J MANAGE, V7, P75, DOI [DOI 10.1111/J.1467-8551.1996.TB00107.X, 10.1111/j.1467-8551.1996.tb00107.x]
   Faber A., 2018, 29 AUSTR C INF SYST
   Faber A, 2018, INFORMATION, V9, DOI 10.3390/info9110270
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   GIESECKE R, 2014, 9 INT C EC VEH REN E, P1
   Goldkuhl Goran, 2018, Designing for a Digital and Globalized World. 13th International Conference, DESRIST 2018. Proceedings: LNCS 10844, P67, DOI 10.1007/978-3-319-91800-6_5
   Henderson-Sellers B., 2014, Situational Method Engineering
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Johannesson PaulErik Perjons., 2014, INTRO DESIGN SCI, P1, DOI DOI 10.1007/978-3-030-78132-3
   Johnson KE, 1996, MOD LANG J, V80, P556, DOI 10.2307/329758
   Kumar R., 2016, Valuation: Theories and concepts
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   MOORE JF, 1993, HARVARD BUS REV, V71, P75
   Mulder MAT, 2021, LECT NOTES COMPUT SC, V12751, P499, DOI 10.1007/978-3-030-79382-1_30
   Nachira F., 2007, Introductory Paper, V106, P1
   Pittl B, 2017, LECT NOTES COMPUT SC, V10371, P178, DOI 10.1007/978-3-319-61240-9_17
   Ralyte J., 2001, Procs. 20th International Conf erence Conceptual Modelling (ER2001), V2224, P471
   Rehm SV, 2017, INFORM MANAGE-AMSTER, V54, P438, DOI 10.1016/j.im.2016.10.003
   Repenning NP, 2002, ORGAN SCI, V13, P109, DOI 10.1287/orsc.13.2.109.535
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Sein MK, 2011, MIS QUART, V35, P37
   Senyo PK, 2019, ADV INTELL SYST, V783, P206, DOI 10.1007/978-3-319-94709-9_21
   Senyo PK, 2019, INT J INFORM MANAGE, V47, P52, DOI 10.1016/j.ijinfomgt.2019.01.002
   Shani AB, 2021, ACTION RES-LONDON, V19, P518, DOI 10.1177/1476750319852147
   The Open Group, ARCHIMATE 3 1 SPEC S
   The open group, TOGAF STAND VERS 9 2
   Tottmar M., 2022, DAGENS NYHETER
   Tsai C., 2020, P FORUM PRACTICE ENT, P1
   Tsai CH., 2022, COMPLEX SYST INF MOD, V30, P1, DOI DOI 10.7250/CSIMQ.2022-30.01
   Tsai CH, 2021, LECT NOTES BUS INF P, V430, P236, DOI 10.1007/978-3-030-87205-2_16
   Tsai CH, 2021, LECT NOTES BUS INF P, V432, P134, DOI 10.1007/978-3-030-91279-6_10
   Weill P., 2018, HATS YOUR DIGITAL BU
   Wieringa RJ, 2019, CONF BUS INFORM, P147, DOI 10.1109/CBI.2019.00024
   Windrum P, 1999, AM BEHAV SCI, V42, P1531, DOI 10.1177/00027649921957874
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 47
TC 0
Z9 0
U1 6
U2 23
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 573
EP 598
DI 10.1007/s10270-022-01068-z
EA NOV 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4G5
UT WOS:000889402000001
OA hybrid
DA 2024-07-18
ER

EF