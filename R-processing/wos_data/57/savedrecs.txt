FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Tröls, MA
   Marchezan, L
   Mashkoor, A
   Egyed, A
AF Troels, Michael Alexander
   Marchezan, Luciano
   Mashkoor, Atif
   Egyed, Alexander
TI Instant and global consistency checking during collaborative engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Consistency checking; Multi-developer environment; Model-driven
   engineering
ID MODEL; SYSTEM
AB Engineering projects involve a variety of artifacts such as requirements, design, or source code. These artifacts, many of which tend to be interdependent, are often manipulated concurrently. To keep artifacts consistent, engineers must continuously consider their work in relation to the work of multiple other engineers. Traditional consistency checking approaches reason efficiently over artifact changes and their consistency implications. However, they do so solely within the boundaries of specific tools and their specific artifacts (e.g., consistency checking between different UML models). This makes it difficult to examine the consistency between different types of artifacts (e.g., consistency checking between UML models and the source code). Global consistency checking can help addressing this problem. However, it usually requires a disruptive and time-consuming merging process for artifacts. This article presents a novel, cloud-based approach to global consistency checking in a multi-developer/-tool engineering environment. It allows for global consistency checking across all artifacts that engineers work on concurrently. Moreover, it reasons over artifact changes immediately after the change happened, while keeping the (memory/CPU) cost of consistency checking minimal. The feasibility and scalability of our approach were demonstrated by a prototype implementation and through an empirical validation.
C1 [Troels, Michael Alexander; Marchezan, Luciano; Mashkoor, Atif; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Johannes Kepler University Linz
RP Mashkoor, A (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM michael.troels@jku.at; luciano.marchezan_de_paula@jku.at;
   atif.mashkoor@jku.at; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
FU Austrian Science Fund (FWF) [P31989-N31, I 4744-N]; LIT Secure and
   Correct System Lab - province of Upper Austria; Austrian COMET K1-Centre
   Pro2Future of the Austrian Research Promotion Agency (FFG); Austrian
   ministry BMVIT; Austrian ministry BMDW
FX The research reported in this paper has been partly funded by the
   Austrian Science Fund (FWF) (Grant #P31989-N31 as well as Grant #I
   4744-N), the YYLIT Secure and Correct System Lab sponsored by the
   province of Upper Austria, and by the Austrian COMET K1-Centre
   Pro2Future of the Austrian Research Promotion Agency (FFG) with funding
   from the Austrian ministries BMVIT and BMDW.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2004, W3C recommendation
   Ball A, 2008, ADV ENG INFORM, V22, P222, DOI 10.1016/j.aei.2007.10.003
   Beyer D., 2006, 28th International Conference on Software Engineering Proceedings, P807, DOI 10.1145/1134285.1134420
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Debreceni C, 2018, IEEE SOFTWARE, V35, P32, DOI 10.1109/MS.2018.290101728
   Demuth A, 2016, IEEE INT CONF AUTOM, P590, DOI 10.1145/2970276.2970304
   Demuth A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1486, DOI 10.1145/2695664.2695697
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Fradet P, 1999, LECT NOTES COMPUT SC, V1687, P410, DOI 10.1145/318774.319258
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Ghabi A, 2015, J SYST SOFTWARE, V108, P178, DOI 10.1016/j.jss.2015.06.037
   Grundy JC, 2013, IEEE T SOFTWARE ENG, V39, P487, DOI 10.1109/TSE.2012.33
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Koshima AA, 2015, SCI COMPUT PROGRAM, V113, P3, DOI 10.1016/j.scico.2015.07.004
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Langlois B., 2014, P 14 WORKSHOP DOMAIN, P19
   Loeliger J., 2009, VERSION CONTROL GIT
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Pilato C.M., 2008, VERSION CONTROL SUBV
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2010, P IEEE ACM INT C AUT, P347, DOI DOI 10.1145/1858996.1859069
   Reiss SP, 2006, IEEE T SOFTWARE ENG, V32, P682, DOI 10.1109/TSE.2006.91
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Riedl-Ehrenleitner M, 2014, P INT COMP SOFTW APP, P85, DOI 10.1109/COMPSAC.2014.91
   Sabetzadeh M, 2007, INT REQUIR ENG CONF, P221, DOI 10.1109/RE.2007.18
   Sabetzadeh M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P815, DOI 10.1145/1368088.1368208
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sun C., 2006, ACM Transactions on Computer-Human Interaction, V13, P531, DOI 10.1145/1188816.1188821
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Tröls M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2308
   Tröls MA, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1572, DOI 10.1145/3412841.3442127
   Tröls MA, 2019, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'19), DOI 10.1145/3319499.3328232
   Tröls MA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P278, DOI 10.1109/MODELS-C.2019.00044
   Tröls MA, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1776, DOI 10.1145/3297280.3297454
   Trols M.A., 2021, P INT C SOFTW SYST P
   Tröls MA, 2021, PROC IEEE ACM INT C, P250, DOI 10.1109/ICSE-Companion52605.2021.00116
   Tröls MA, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P83, DOI 10.1109/ICSSP-ICGSE52873.2021.00018
   Vierhauser M., 2010, P IEEEACM INT C AUTO, P63
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
NR 51
TC 4
Z9 4
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2489
EP 2515
DI 10.1007/s10270-022-00984-4
EA APR 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000781262600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Nair, A
   Ning, X
   Hill, JH
AF Nair, Arvind
   Ning, Xia
   Hill, James H.
TI Using recommender systems to improve proactive modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling languages; Proactive modeling; Recommender
   systems
ID SUS
AB This article investigates using recommender systems within graphical domain-specific modeling languages (DSMLs). The objective of using recommender systems within a graphical DSML is to overcome a shortcoming of proactive modeling where the modeler must inform the model intelligence engine how to progress when it cannot automatically determine the next modeling action to execute (e.g., add, delete, or edit). To evaluate our objective, we implemented a recommender system into the Proactive Modeling Engine, which is an add-on for the Generic Modeling Environment. We then conducted experiments to subjectively and objectively evaluate enhancements to the Proactive Modeling Engine. The results of our experiments show that extending proactive modeling with a recommender system results in an average reciprocal hit-rank of 0.871. Likewise, the enhancements yield a System Usability Scale rating of 77. Finally, user feedback shows that integrating recommender systems into DSMLs increases usability and learnability.
C1 [Nair, Arvind; Hill, James H.] Indiana Univ Purdue Univ, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
   [Ning, Xia] Ohio State Univ, Comp Sci & Engn, Columbus, OH 43210 USA.
C3 Indiana University System; Indiana University Indianapolis; University
   System of Ohio; Ohio State University
RP Hill, JH (corresponding author), Indiana Univ Purdue Univ, Dept Comp & Informat Sci, Indianapolis, IN 46202 USA.
EM arvnair@alumni.iu.edu; ning.104@osu.edu; hilljh@iupui.edu
CR Adomavicius G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P217, DOI 10.1007/978-0-387-85820-3_7
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1996, Advances in Knowledge Discovery and Data Mining, V12, P307, DOI DOI 10.1007/978-3-319-31750-2.
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2006, OBJECT CONSTRAINT LA
   [Anonymous], 2001, HCI New Millennium
   [Anonymous], 1999, P 1 ACM C EL COMM
   Balasubramanian K, 2005, RTAS 2005: 11th IEEE Real Time and Embedded Technology and Applications Symposium, Proceedings, P190
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Bodden E, 2004, P OOPSLA WORKSH DOM
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Burke R., 2007, The adaptive web: methods and strategies of web personalization, P377, DOI [10.1007/978-3-540-72079-9_12, DOI 10.1007/978-3-540-72079-9_12]
   Cabot Sagrera, 2017, CEUR WORKSH P
   Clegg BA, 1998, TRENDS COGN SCI, V2, P275, DOI 10.1016/S1364-6613(98)01202-9
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Deshpande M, 2004, ACM T INFORM SYST, V22, P143, DOI 10.1145/963770.963776
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Freund Y., 1996, INT C MACHINE LEARNI, P148
   Gray J., 2007, HDB DYNAMIC SYSTEM M, V7
   Gray J., 2009, MODEL TRANSFORMATION, DOI 10.1007/978-3-642-04425-0_58
   Hessellund A, 2007, LECT NOTES COMPUT SC, V4735, P46
   Hill JH, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P120, DOI 10.1109/ECBS.2011.22
   Jamali M., 2010, P 4 ACM C REC SYST, P135, DOI DOI 10.1145/1864708.1864736
   Janota M, 2008, LECT NOTES COMPUT SC, V5301, P431, DOI 10.1007/978-3-540-87875-9_31
   KAPPEL G, 2012, MODEL TRANSFORMATION, P197
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Koren Y, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P447
   Ledeczi Akos., 2001, The Generic Modeling Environment
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   Mahmood T, 2009, 20TH ACM CONFERENCE ON HYPERTEXT AND HYPERMEDIA (HYPERTEXT 2009), P73
   Manouselis N, 2011, RECOMMENDER SYSTEMS HANDBOOK, P387, DOI 10.1007/978-0-387-85820-3_12
   O'Neil E. J., 1993, SIGMOD Record, V22, P297, DOI 10.1145/170036.170081
   ODonovan John, 2005, P 10 INT C INTELLIGE, P167, DOI [10.1145/1040830.1040870, DOI 10.1145/1040830.1040870]
   Opitz D., 1999, J ARTIF INTELL RES, V11, P169, DOI DOI 10.1613/JAIR.614
   Pati, 2012, THESIS PURDUE U
   Pati T., 2012, P 2012 WORKSH DOM SP, P7, DOI DOI 10.1145/2420918.2420921
   Polikar R., 2006, IEEE Circuits and Systems Magazine, V6, P21, DOI 10.1109/MCAS.2006.1688199
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Resnick P, 1997, COMMUN ACM, V40, P56, DOI 10.1145/245108.245121
   RICCI F, 2011, REC SYST HDB
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Santos O., 2011, Educational Recommender Systems and Technologies: Practices and Challenges: Practices and Challenges. Premier reference source
   Schapire RE, 1998, ANN STAT, V26, P1651
   Schapire RE, 1999, MACH LEARN, V37, P297, DOI 10.1023/A:1007614523901
   Sen S, 2008, LECT NOTES COMPUT SC, V5002, P259
   Shani G., 2002, P 18 C UNCERTAINTY A, P453
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Toscher Andreas, 2009, BIGCHAOS SOLUTION NE, P1
   Tullis T.S., 2004, USABILITY PROFESSION, P1
   VarruE D., 2006, MODEL TRANSFORMATION, DOI 10.1007/11880240_29
   White Jules, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P22
   WHITE J, 2006, GPCE4QOS
   White Jules., 2007, Model-Driven Development Tool Implementers Forum, TOOLS, V7
   Woerndl W, 2009, INT J INF TECHNOL WE, V4, P67, DOI 10.4018/jitwe.2009010105
   Wu S, 2016, IEEE T KNOWL DATA EN, V28, P2000, DOI 10.1109/TKDE.2016.2562621
   Xia Ning, 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P497, DOI 10.1109/ICDM.2011.134
NR 60
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1159
EP 1181
DI 10.1007/s10270-020-00841-2
EA JAN 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000611442000001
DA 2024-07-18
ER

PT J
AU Kretschmer, R
   Khelladi, DE
   Lopez-Herrejon, RE
   Egyed, A
AF Kretschmer, Roland
   Khelladi, Djamel Eddine
   Lopez-Herrejon, Roberto Erick
   Egyed, Alexander
TI Consistent change propagation within models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Inconsistency repair; Change propagation;
   Consistency detection
ID REPAIR; STATE
AB Developers change models with clear intentions-e.g., for refactoring, defects removal, or evolution. However, in doing so, developers are often unaware of the consequences of their changes. Changes to one part of a model may affect other parts of the same model and/or even other models, possibly created and maintained by other developers. The consequences are incomplete changes and with it inconsistencies within or across models. Extensive works exist on detecting and repairing inconsistencies. However, the literature tends to focus on inconsistencies as errors in need of repairs rather than on incomplete changes in need of further propagation. Many changes are non-trivial and require a series of coordinated model changes. As developers start changing the model, intermittent inconsistencies arise with other parts of the model that developers have not yet changed. These inconsistencies are cues for incomplete change propagation. Resolving these inconsistencies should be done in a manner that is consistent with the original changes. We speak of consistent change propagation. This paper leverages classical inconsistency repair mechanisms to explore the vast search space of change propagation. Our approach not only suggests changes to repair a given inconsistency but also changes to repair inconsistencies caused by the aforementioned repair. In doing so, our approach follows the developer's intent where subsequent changes may not contradict or backtrack earlier changes. We argue that consistent change propagation is essential for effective model-driven engineering. Our approach and its tool implementation were empirically assessed on 18 case studies from industry, academia, and GitHub to demonstrate its feasibility and scalability. A comparison with two versioned models shows that our approach identifies actual repair sequences that developers had chosen. Furthermore, an experiment involving 22 participants shows that our change propagation approach meets the workflow of how developers handle changes by always computing the sequence of repairs resulting from the change propagation.
C1 [Kretschmer, Roland; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Khelladi, Djamel Eddine] Univ Rennes 1, CNRS, Rennes, France.
   [Lopez-Herrejon, Roberto Erick] ETS Univ Quebec, Dept Genie Logiciel & TI, Quebec City, PQ, Canada.
C3 Johannes Kepler University Linz; Centre National de la Recherche
   Scientifique (CNRS); Universite de Rennes; University of Quebec; Ecole
   de Technologie Superieure - Canada
RP Kretschmer, R (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM roland.kretschmer@jku.at; djamel-eddine.khelladi@irisa.fr;
   roberto.lopez@etsmtl.ca; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Demuth A, 2016, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2016.50
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Eramo R., 2014, P 6 INT WORKSHOP MOD, P37
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jongeling R., 2019, 15 EUR C MOD FDN APP
   Jongeling R, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P642, DOI 10.1109/MODELS-C.2019.00098
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Khelladi DE, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1518, DOI 10.1145/2695664.2695789
   König H, 2017, LECT NOTES COMPUT SC, V10376, P161, DOI 10.1007/978-3-319-61482-3_10
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Kretschmer R, 2017, ASIA PAC SOFWR ENG, P456, DOI 10.1109/APSEC.2017.52
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Macedo N, 2013, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2013.6693135
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   Martinez M, 2019, J SYST SOFTWARE, V151, P65, DOI 10.1016/j.jss.2019.01.069
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Muslu K, 2012, ACM SIGPLAN NOTICES, V47, P669, DOI 10.1145/2398857.2384665
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   OMG, 2014, OBJ CONSTR LANG
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2013, IEEE T SOFTWARE ENG, V39, P1531, DOI 10.1109/TSE.2013.30
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Semerath O., 2016, BX ETAPS, P40
   Semeráth O, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P306, DOI 10.1145/2976767.2976788
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Steimann F, 2016, ACM SIGPLAN NOTICES, V51, P711, DOI 10.1145/3022671.2984007
   Steimann F, 2012, LECT NOTES COMPUT SC, V7313, P535, DOI 10.1007/978-3-642-31057-7_24
   Taentzer G, 2017, LECT NOTES COMPUT SC, V10202, P283, DOI 10.1007/978-3-662-54494-5_16
   Tröls MA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P278, DOI 10.1109/MODELS-C.2019.00044
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wohlin C., 2012, Experimentation in Software Engineering
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 54
TC 6
Z9 6
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 539
EP 555
DI 10.1007/s10270-020-00823-4
EA AUG 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000563012000001
PM 34720801
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Reenskaug, TMH
AF Reenskaug, Trygve M. H.
TI Personal programming and the object computer
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Personal programming; Laypeople programming; IoT; Smart home; Industry
   5; 0; Loke; Object computer; BabyIDE; MVC; DCI; Smalltalk; Squeak
AB My objective is to create an intuitive computer for laypeople who want to go beyond ready-made apps and create programs to control their electronic environment. I submit Loke, a new kind of computer that is a universe of objects and nothing but objects. I call it anobject computer. Loke is implemented in Squeak, a variant of Smalltalk, and is an extensible, conceptual model for execution, inspection, and exploration. It was first used to demonstrate how Ellen, a novice, programs a smart alarm clock through a GUI adapted to her competence, needs, and preferences. Informal demonstrations indicated that laypeople immediately grasp the idea of communicating objects that represent real things in their environment. They also wanted to use it for their own purposes. They were creative in identifying personal opportunities for Loke and in sketching out their implementations. Interestingly, expert programmers who attended the demonstration did not see the point of Loke. I have completed the programming of Loke qua conceptual model. The model underpins its potential security and privacy and sustains its object and message models. The Loke qua programming environment is still in its infancy, and its inherent security and privacy properties are still not realized in practice. A futureLoke devicewill be accessible from anywhere and embedded in its own hardware to achieve them. The Loke IDE rests on Data-Context-Interaction (DCI), a new programming paradigm that leads to readable code with a clear architecture. I submit Loke for the pleasure of personal programming.
C1 [Reenskaug, Trygve M. H.] Univ Oslo, Dept Informat, Morgedalsvn 5, N-0378 Oslo, Norway.
C3 University of Oslo
RP Reenskaug, TMH (corresponding author), Univ Oslo, Dept Informat, Morgedalsvn 5, N-0378 Oslo, Norway.
EM trygver@ifi.uio.no
CR [Anonymous], ACM SIGPLAN NOTICES
   [Anonymous], 1972, PERSONAL COMPUTER CH
   Bluemke I, 2015, EXPERIENCES DCI PATT, P87
   Coplien J., 2010, LEAN ARCHITECTURE AG
   Dahl OJ., 1967, SIMULA 67 COMMON BAS
   Dijkstra E.W, 1969, C SPON NATO SCI COMM, P16
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   Emery F., 1976, INT SERIES QUALITY W
   Gamma Erich., 1994, DESIGN PATTERNS
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Hameed S, 2019, J COMPUT NETW COMMUN, V2019, DOI 10.1155/2019/9629381
   Hoare C, 1981, COMMUN ACM, P859
   Kay A, 1972, ACM 72 P ACM ANN C, V1
   Reenskaug T, 2006, SOFTW SYST MODEL, V5, P3, DOI [10.1007/s10270-006-0005-0, DOI 10.1007/S10270-006-0005-0]
   Reenskaug T., 1977, IFIP P, P717
   Reenskaug T, 1973, ICCAS C
   Reenskaug T, 2007, EXPERT COMMENTARY CA, P3
   Reenskaug Trygve., 1996, WORKING OBJECTS OORA
   Valdecantos H.A, 2016, THESIS
   Wirfs-Brock Rebecca, 2003, Object Design: Roles, Responsibilities, and Collaborations
NR 20
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 787
EP 824
DI 10.1007/s10270-019-00768-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000550793200002
OA hybrid
DA 2024-07-18
ER

PT J
AU Haeusler, M
   Trojer, T
   Kessler, J
   Farwick, M
   Nowakowski, E
   Breu, R
AF Haeusler, Martin
   Trojer, Thomas
   Kessler, Johannes
   Farwick, Matthias
   Nowakowski, Emmanuel
   Breu, Ruth
TI ChronoSphere: a graph-based EMF model repository for IT landscape models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model repositories; Versioning; Graph
   database; IT landscape
ID ARCHITECTURE
AB IT Landscape models are representing the real-world IT infrastructure of a company. They include hardware assets such as physical servers and storage media, as well as virtual components like clusters, virtual machines and applications. These models are a critical source of information in numerous tasks, including planning, error detection and impact analysis. The responsible stakeholders often struggle to keep such a large and densely connected model up-to-date due to its inherent size and complexity, as well as due to the lack of proper tool support. Even though modeling techniques are very suitable for this domain, existing tools do not offer the required features, scalability or flexibility. In order to solve these challenges and meet the requirements that arise from this application domain, we combine domain-driven modeling concepts with scalable graph-based repository technology and a custom language for model-level queries. We analyze in detail how we synthesized these requirements from the application domain and how they relate to the features of our repository. We discuss the architecture of our solution which comprises the entire data management stack, including transactions, queries, versioned persistence and metamodel evolution. Finally, we evaluate our approach in a case study where our open-source repository implementation is employed in a production environment in an industrial context, as well as in a comparative benchmark with an existing state-of-the-art solution.
C1 [Haeusler, Martin] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Kessler, Johannes; Nowakowski, Emmanuel; Breu, Ruth] Univ Innsbruck, Dept Comp Sci, A-6020 Innsbruck, Austria.
   [Trojer, Thomas; Farwick, Matthias] Txture GmbH, A-6020 Innsbruck, Austria.
C3 University of Innsbruck; University of Innsbruck
RP Haeusler, M (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM martin.haeusler@uibk.ac.at; thomas.trojer@txture.io;
   johannes.kessler@uibk.ac.at; matthias.farwick@txture.io;
   emmanuel.nowakowski@uibk.ac.at; ruth.breu@uibk.ac.at
FU Austrian Science Fund (FWF); research project "txtureSA" (FWF-Project)
   [P 29022]; Austrian Science Fund (FWF) [P29022] Funding Source: Austrian
   Science Fund (FWF)
FX Open access funding provided by Austrian Science Fund (FWF). This work
   was partially funded by the research project "txtureSA" (FWF-Project P
   29022).
CR [Anonymous], P 8 INT ACM SIGSOFT
   [Anonymous], P 24 PHD MIN S
   [Anonymous], ENT DISTR OBJ COMP C
   [Anonymous], DATA 2017
   [Anonymous], ELECT COMMUN EASST
   [Anonymous], 2014, ACM EUROSYS
   [Anonymous], 2006, Eclipse Modeling Symposium, P1
   [Anonymous], HAW INT C SYST SCI H
   [Anonymous], P 50 HAW INT C SYST
   [Anonymous], CODD DATE
   [Anonymous], INT C ENT INF SYST I
   [Anonymous], 2012, OMG OBJ CONSTR LANG
   [Anonymous], P WORKSH EDBT ICDT
   [Anonymous], P 2012 EXTR MOD EXTR
   Barmpis Konstantinos., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering, page, P6, DOI [10.1145/2487766.2487771, DOI 10.1145/2487766.2487771]
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bennaceur Amel, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P19
   BERNSTEIN PA, 1983, ACM T DATABASE SYST, V8, P465, DOI 10.1145/319996.319998
   Cannon D., 2007, ITIL Service Operation
   Castelltort A, 2013, 2013 EIGHTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P228, DOI 10.1109/ICDIM.2013.6694022
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Daniel Gwendal, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549343
   Demuth Birgit., 2009, Proceedings of the Russian-German Workshop Innovation Information Technologies: theory and practice, P687
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   DIRIX M, 2013, ECOOP, P95696
   EASTON MC, 1986, IBM J RES DEV, V30, P230, DOI 10.1147/rd.303.0230
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Farwick M, 2012, LECT NOTES BUS INF P, V131, P129
   Felber P, 2014, SYM REL DIST SYST, P95, DOI 10.1109/SRDS.2014.35
   Ferry N., 2017, MODEL DRIVEN DEV OPE, P23
   Francois F., 2014, ARXIV14056817
   Giese H, 2010, LECT NOTES COMPUT SC, V5765, P555, DOI 10.1007/978-3-642-17322-6_24
   Haeusler M, 2018, LECT NOTES COMPUT SC, V10706, P153, DOI 10.1007/978-3-319-73117-9_11
   Haeusler M, 2016, DATA: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON DATA MANAGEMENT TECHNOLOGIES AND APPLICATIONS, P79, DOI 10.5220/0005938700790086
   Hanschke I., 2010, Strategic IT Management
   HANSON EN, 1991, LECT NOTES COMPUT SC, V519, P153
   Hart M., 2004, ORACLE DATABASE 10G, V1
   Hartmann T, 2014, LECT NOTES COMPUT SC, V8767, P252, DOI 10.1007/978-3-319-11653-2_16
   Hartmann Thomas., 2017, P 29 INT C SOFTWARE, P596
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   ISO, 2011, 90752011 ISO IEC
   Keith Mike., 2009, Pro JPA, V2, P69
   Khelladi DE, 2015, LECT NOTES COMPUT SC, V9097, P263, DOI 10.1007/978-3-319-19069-3_17
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   LOMET D, 1989, SIGMOD REC, V18, P315, DOI 10.1145/66926.66956
   Lomet D., 2006, INT C DATA ENG ICDE, P35
   Lomet D, 2008, PROC VLDB ENDOW, V1, P870, DOI 10.14778/1453856.1453951
   LouisMRose Richard F, 2009, PROC JOINT MODSE MCC, P6
   McGregor A, 2014, SIGMOD REC, V43, P9, DOI 10.1145/2627692.2627694
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Nascimento MA, 1996, LECT NOTES COMPUT SC, V1134, P779, DOI 10.1007/BFb0034730
   OMG, 2007, XML MET INT XMI
   Patino~ Martinez M., 2016, ADV DATABASE TECHNOL
   Pigne Y., 2008, EMERGENT PROPERTIES
   Ramaswamy S, 1997, LECT NOTES COMPUT SC, V1186, P419
   Rodriguez MA, 2012, ADV DATA MIN DATABAS, P29, DOI 10.4018/978-1-61350-053-8.ch002
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Salzberg B, 1999, ACM COMPUT SURV, V31, P158, DOI 10.1145/319806.319816
   Salzberg Betty., 1988, File structures: an analytic approach
   Saracco CynthiaM., 2012, A matter of time: Temporal data management in db2 10
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schmidt JM, 2009, LECT NOTES COMPUT SC, V5878, P163, DOI 10.1007/978-3-642-10631-6_18
   Semertzidis K, 2016, PROC INT CONF DATA, P541, DOI 10.1109/ICDE.2016.7498269
   Seybold D, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P46, DOI 10.1145/2997364.2997380
   SNODGRASS R, 1986, COMPUTER, V19, P35, DOI 10.1109/MC.1986.1663327
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Trojer Thomas, 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P458
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
NR 75
TC 7
Z9 8
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3487
EP 3526
DI 10.1007/s10270-019-00725-0
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600011
PM 31975977
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fernández, DM
   Böhm, W
   Vogelsang, A
   Mund, J
   Broy, M
   Kuhrmann, M
   Weyer, T
AF Fernandez, Daniel Mendez
   Boehm, Wolfgang
   Vogelsang, Andreas
   Mund, Jakob
   Broy, Manfred
   Kuhrmann, Marco
   Weyer, Thorsten
TI Artefacts in software engineering: a fundamental positioning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software engineering artefacts; Metamodelling; Propaedeutics; Syntax of
   artefacts; Semantics of artefacts; Equivalence of artefacts
AB Artefacts play a vital role in software and systems development processes. Other terms like documents, deliverables, or work products are widely used in software development communities instead of the term artefact. In the following, we use the term artefact' including all these other terms. Despite its relevance, the exact denotation of the term artefact' is still not clear due to a variety of different understandings of the term and to a careless negligent usage. This often leads to approaches being grounded in a fuzzy, unclear understanding of the essential concepts involved. In fact, there does not exist a common terminology. Therefore, it is our goal that the term artefact be standardised so that researchers and practitioners have a common understanding for discussions and contributions. In this position paper, we provide a positioning and critical reflection upon the notion of artefacts in software engineering at different levels of perception and how these relate to each other. We further contribute a metamodel that provides a description of an artefact that is independent from any underlying process model. This metamodel defines artefacts at three levels. Abstraction and refinement relations between these levels allow correlating artefacts to each other and defining the notion of related, refined, and equivalent artefacts. Our contribution shall foster the long overdue and too often underestimated terminological discussion on what artefacts are to provide a common ground with clearer concepts and principles for future software engineering contributions, such as the design of artefact-oriented development processes and tools.
C1 [Fernandez, Daniel Mendez; Boehm, Wolfgang; Broy, Manfred] Tech Univ Munich, Boltzmannstr 3, D-85748 Garching, Germany.
   [Vogelsang, Andreas] Tech Univ Berlin, Ernst Reuter Pl 7, D-10587 Berlin, Germany.
   [Mund, Jakob] Tableau Germany GmbH, Maximilianstr 35, D-80539 Munich, Germany.
   [Kuhrmann, Marco] Tech Univ Clausthal, Wallstr 6, D-38640 Goslar, Germany.
   [Weyer, Thorsten] Univ Duisburg Essen, Gerlingstr 16, D-45127 Essen, Germany.
C3 Technical University of Munich; Technical University of Berlin; TU
   Clausthal; University of Duisburg Essen
RP Fernández, DM (corresponding author), Tech Univ Munich, Boltzmannstr 3, D-85748 Garching, Germany.
EM Daniel.Mendez@tum.de; boehmw@in.tum.de; andreas.vogelsang@tu-berlin.de;
   JMund@Tableau.com; broy@in.tum.de; kuhrmann@acm.org;
   thorsten.weyer@paluno.uni-due.de
RI Mendez, Daniel/ABA-4579-2021
OI Mendez, Daniel/0000-0003-0619-6027; Vogelsang,
   Andreas/0000-0003-1041-0815
CR Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Bohm W, 2013, DRITT WORKSH ZUK ENT
   Braun C, 2005, P 20 ACM S APPL COMP
   Braun P, 2014, COMPUT SCI-RES DEV, V29, P21, DOI 10.1007/s00450-010-0136-y
   Broy M, 2018, INT J SOFTW SYST MOD, V60, P1
   Brunet G, 2006, P INT WORKSH GLOB IN
   Butting A, 2017, NEED ARTIFACT MODELS
   CARLEY K, 1992, SOC FORCES, V70, P601, DOI 10.2307/2579746
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Kuhrmann M, 2013, P 153H 8 INT C GLOB
   Kuhrmann M, 2015, IET SOFTW, V9, P157, DOI 10.1049/iet-sen.2014.0190
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mendez Fernandez D, P 13 INT C MOD DRIV
   Nejati S., 2007, P 29 INT C SOFTW ENG
   *OMG, 2008, SOFTW SYST PROC ENG
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Silva M, 2008, SOFTWARE ARTIFACT ME
NR 17
TC 12
Z9 12
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2777
EP 2786
DI 10.1007/s10270-019-00714-3
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500001
DA 2024-07-18
ER

PT J
AU He, X
   Zhang, T
   Pan, MX
   Ma, ZY
   Hu, CJ
AF He, Xiao
   Zhang, Tian
   Pan, Minxue
   Ma, Zhiyi
   Hu, Chang-Jun
TI Template-based model generation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model generation; Templates; Performance testing; Model-oriented
   operations; Model-based engineering
ID VARIABILITY; BENCHMARK
AB Given their vital roles in model-based software engineering, the performance of model-related operations (MOs, such as model transformations) must be systematically tested. However, how to produce a set of large input models that conform to structure-related constraints presents a major challenge to such test. This paper proposes a template-based approach to efficient model generation. Firstly, a DSL is provided to describe templates that specify how to generate a valid model that conforms to structure-related constraints. Secondly, a folding semantic is defined to convert templates into a wrapper metamodel. Thirdly, a wrapper model is generated using the existing model generators (e.g., a random model generator) according to the wrapper metamodel. Fourthly, an unfolding semantics is specified to translate the wrapper model into the desired test input. This paper also presents five case studies to evaluate the proposed approach, and the results demonstrate that such approach can generate large models based on structure-related constraints and facilitate the performance testing of MOs.
C1 [He, Xiao; Hu, Chang-Jun] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
   [Zhang, Tian; Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Ma, Zhiyi] Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
C3 University of Science & Technology Beijing; Nanjing University; Peking
   University
RP He, X (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
EM hexiao@ustb.edu.cn
RI Pan, Minxue/AIC-5169-2022; Ma, Zhiyi/AAE-8353-2020
FU National Natural Science Foundation of China [61300009, 61472180,
   61502228, 61672046]; Jiangsu Province Research Foundation [BK20141322,
   BK20150589]
FX This work was supported by the National Natural Science Foundation of
   China (Grant Nos. 61300009, 61472180, 61502228, and 61672046) and
   Jiangsu Province Research Foundation (Grant Nos. BK20141322,
   BK20150589).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], LECT NOTES INFORM
   Arendt T, 2014, LECT NOTES COMPUT SC, V8571, P97
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bailey C, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P135, DOI 10.1145/2593929.2593945
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Chen X, 2015, FRONT COMPUT SCI-CHI, V9, P540, DOI 10.1007/s11704-015-4362-0
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Finot Olivier, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P189, DOI 10.1007/978-3-642-38883-5_17
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Fürst L, 2015, SOFTW SYST MODEL, V14, P1297, DOI 10.1007/s10270-013-0380-2
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   He X., 2014, P 38 ANN INT COMP SO
   He X, 2016, J SYST SOFTWARE, V121, P247, DOI 10.1016/j.jss.2016.04.044
   He X, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P57, DOI 10.1109/TASE.2016.26
   He X, 2015, P INT COMP SOFTW APP, P298, DOI 10.1109/COMPSAC.2015.64
   Izso B., 2014, TECHNICAL REPORT
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Koning M, 2009, INFORM SOFTWARE TECH, V51, P258, DOI 10.1016/j.infsof.2007.12.002
   Kuhlmann M, 2012, SOFTW SYST MODEL, V11, P165, DOI 10.1007/s10270-010-0174-8
   McQuillan Jacqueline A., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P288, DOI 10.1109/ICST.2008.58
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   OASIS, 2007, TECHNICAL REPORT
   Object Management Group, 2012, OMG OBJ CONSTR LANG
   Perez C. A. G., 2012, P FORM METH SOFTW EN
   Popoola S, 2016, LECT NOTES COMPUT SC, V9765, P36, DOI 10.1007/978-3-319-42064-6_3
   Radke H, 2016, THESIS
   Radke H, 2015, LECT NOTES COMPUT SC, V9151, P155, DOI 10.1007/978-3-319-21145-9_10
   Scheidgen M., 2015, PROC 3 WORKSHOP SCAL, P1
   Sen Sagar, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P328, DOI 10.1109/ICST.2008.62
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Song H, 2011, J SYST SOFTWARE, V84, P711, DOI 10.1016/j.jss.2010.12.009
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Taentzer G., 2012, ECEASST, V47, P1, DOI [10. 14279/tuj. eceasst. 47. 727, DOI 10.14279/TUJ.ECEASST.47.727]
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
NR 45
TC 4
Z9 5
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2051
EP 2092
DI 10.1007/s10270-017-0634-5
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100024
DA 2024-07-18
ER

PT J
AU Seiger, R
   Huber, S
   Heisig, P
   Assmann, U
AF Seiger, Ronny
   Huber, Steffen
   Heisig, Peter
   Assmann, Uwe
TI Toward a framework for self-adaptive workflows in cyber-physical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Workflows for the Internet of Things; Cyber-physical Systems;
   Self-adaptiveWorkflows; Real-world processes; Cyber-physical consistency
ID BUSINESS; EXTENSION; INTERNET; THINGS; MODEL
AB With the establishment of Cyber-physical Systems (CPS) and the Internet of Things, the virtual world of software and services and the physical world of objects and humans move closer together. Despite being a useful means for automation, BPM technologies and workflow systems are yet not fully capable of executing processes in CPS. The effects on and possible errors and inconsistencies in the physical world are not considered by "traditional" workflow engines. In this work we propose a framework for self-adaptive workflows in CPS based on the MAPE-K feedback loop. Within this loop monitoring and analysis of additional sensor and context data is used to check for unanticipated errors in the physical world. Planning and execution of compensation actions restores Cyber-physical Consistency, which leads to an increased resilience of the process execution environment. The framework facilitates the separation of CPS aspects from the "regular" workflow views. We show the feasibility of this approach in a smart home scenario and discuss the application of our approach for legacy BPM systems.
C1 [Seiger, Ronny; Huber, Steffen; Heisig, Peter; Assmann, Uwe] Tech Univ Dresden, Inst Software & Multimedia Technol, D-01062 Dresden, Germany.
C3 Technische Universitat Dresden
RP Seiger, R (corresponding author), Tech Univ Dresden, Inst Software & Multimedia Technol, D-01062 Dresden, Germany.
EM Ronny.Seiger@tu-dresden.de; Steffen.Huber@tu-dresden.de;
   Peter.Heisig@tu-dresden.de; Uwe.Assmann@tu-dresden.de
RI Seiger, Ronny/AAF-4765-2019; Heisig, Peter/E-5617-2013
OI Seiger, Ronny/0000-0003-1675-2592; Assmann, Uwe/0000-0002-3513-6448
FU European Social Fund (ESF) [100268299]; German Federal State of Saxony
FX This research has received funding under the Grant Number 100268299
   ("CyPhyMan" project) by the European Social Fund (ESF) and the German
   Federal State of Saxony. Kudos to Andre Kuhnert for helping with the
   implementations.
CR Andonoff E, 2009, INFORMATICA-LITHUAN, V20, P323
   [Anonymous], PRINCIPLES KNOWLEDGE
   [Anonymous], 2008, BPMN modeling and reference guide: understanding and using BPMN
   Baumgrass A., 2015, Proceedings of the BPM Demo Session 2015: Co-located with the 13th International Conference on Business Process Management (BPM 2015), P75
   Bonino D, 2008, LECT NOTES COMPUT SC, V5318, P790, DOI 10.1007/978-3-540-88564-1_51
   Braberman Victor A., 2015, P 1 INT WORKSH CONTR, P9, DOI [10.1145/2804337.2804339, DOI 10.1145/2804337.2804339]
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Conti M, 2012, PERVASIVE MOB COMPUT, V8, P2, DOI 10.1016/j.pmcj.2011.10.001
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   De Lemos Rogerio, 2013, SOFTWARE ENG SELF AD, P1
   de Roo A., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P41, DOI 10.1109/SSIRI.2011.14
   Frincu M. E., 2011, Proceedings 2011 10th International Symposium on Parallel and Distributed Computing (ISPDC 2011), P215, DOI 10.1109/ISPDC.2011.39
   Glombitza N, 2011, LECT NOTES COMPUT SC, V6811, P294, DOI 10.1007/978-3-642-22450-8_23
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Guinard D., 2011, Mobile and Ubiquitous Systems: Computing, Networking, and Services (MobiQuitous 2011), P326
   Gurgen L, 2013, DES AUT TEST EUROPE, P1149
   Herzberg Nico, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P107, DOI 10.1109/EDOC.2013.20
   Hirmer P, 2017, COMPUTING, V99, P163, DOI 10.1007/s00607-016-0522-9
   Huber S, 2016, UBICOMP'16 ADJUNCT: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P285, DOI 10.1145/2968219.2971369
   Huber S, 2016, IEEE INT C SEMANT CO, P213, DOI 10.1109/ICSC.2016.75
   Kephart J., 2003, IBM
   Kim M, 2016, KSII T INTERNET INF, V10, P4008, DOI 10.3837/tiis.2016.08.032
   Koetter F., 2012, 15 BIS, P72
   Kopetz H., 2013, ARXIV13113629
   Kourtesis D, 2008, LECT NOTES COMPUT SC, V5021, P614
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Leotta F, 2015, LECT NOTES BUS INF P, V215, P298, DOI 10.1007/978-3-319-19243-7_28
   Marrella A, 2017, ACM T INTEL SYST TEC, V8, DOI 10.1145/2948071
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Meyer S, 2015, LECT NOTES BUS INF P, V215, P285, DOI 10.1007/978-3-319-19243-7_27
   Oliveira K, 2013, LECT NOTES BUS INF P, V147, P184
   Perrin O, 2004, DATA KNOWL ENG, V50, P63, DOI 10.1016/j.datak.2004.01.004
   Piechnick C., 2014, 6 INT C AD SELF AD S, P121
   Reuter A, 1992, T PROCESSING CONCEPT
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Saidani O, 2015, P ANN HICSS, P4120, DOI 10.1109/HICSS.2015.494
   Seiger R, 2016, LECT NOTES BUS INF P, V248, P3, DOI 10.1007/978-3-319-39429-9_1
   Seiger R, 2018, SOFTW SYST MODEL, V17, P551, DOI 10.1007/s10270-016-0551-z
   Seiger R, 2015, J COMPUT SCI-NETH, V10, P137, DOI 10.1016/j.jocs.2014.07.001
   Seiger R, 2014, INT CONF PERVAS COMP, P220, DOI 10.1109/PerComW.2014.6815205
   Seiger Ronny., 2015, Enterprise, Business-Process and Information Systems Modeling, volume 214 of Lecture Notes in Business Information Processing, V214, P265, DOI DOI 10.1007/978-3-319-19237-6_17
   Smirek L., 2014, IARIA Conference, Nice, France, P29
   Stork A, 2015, IEEE COMPUT GRAPH, V35, P21, DOI 10.1109/MCG.2015.46
   Talcott Carolyn, 2008, Software-Intensive Systems and New Computing Paradigms, P101
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Webber J., 2012, P 3 ANN C SYST PROGR, P217, DOI DOI 10.1145/2384716.2384777
   Weber B., 2005, 6 INT C CAS BAS REAS, P610
   Weidlich M, 2014, IEEE T KNOWL DATA EN, V26, P2759, DOI 10.1109/TKDE.2014.2302306
   Wieland M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS), P32, DOI 10.1109/PERCOMW.2015.7133989
   Wombacher Andreas, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P329, DOI 10.1007/978-3-642-23059-2_25
   Wombacher Andreas, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P226, DOI 10.1109/SCC.2011.24
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
NR 53
TC 30
Z9 35
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1117
EP 1134
DI 10.1007/s10270-017-0639-0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400018
DA 2024-07-18
ER

PT J
AU Birch, G
   Fischer, B
   Poppleton, M
AF Birch, Geoff
   Fischer, Bernd
   Poppleton, Michael
TI Fast test suite-driven model-based fault localisation with application
   to pinpointing defects in student programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Automated debugging; Model-based fault localisation; Symbolic execution;
   Automated assessment
AB Fault localisation, i.e. the identification of program locations that cause errors, takes significant effort and cost. We describe a fast model-based fault localisation algorithm that, given a test suite, uses symbolic execution methods to fully automatically identify a small subset of program locations where genuine program repairs exist. Our algorithm iterates over failing test cases and collects locations where an assignment change can repair exhibited faulty behaviour. Our main contribution is an improved search through the test suite, reducing the effort for the symbolic execution of the models and leading to speed-ups of more than two orders of magnitude over the previously published implementation by Griesmayer et al. We implemented our algorithm for C programs, using the KLEE symbolic execution engine, and demonstrate its effectiveness on the Siemens TCAS variants. Its performance is in line with recent alternative model-based fault localisation techniques, but narrows the location set further without rejecting any genuine repair locations where faults can be fixed by changing a single assignment. We also show how our tool can be used in an educational context to improve self-guided learning and accelerate assessment. We apply our algorithm to a large selection of actual student coursework submissions, providing precise localisation within a sub-second response time. We show this using small test suites, already provided in the coursework management system, and on expanded test suites, demonstrating the scalability of our approach. We also show compliance with test suites does not reliably grade a class of "almost-correct" submissions, which our tool highlights, as being close to the correct answer. Finally, we show an extension to our tool that extends our fast localisation results to a selection of student submissions that contain two faults.
C1 [Birch, Geoff] Univ Southampton, Comp Sci, Southampton SO17 1BJ, Hants, England.
   [Poppleton, Michael] Univ Southampton, Southampton SO17 1BJ, Hants, England.
   [Fischer, Bernd] Stellenbosch Univ, Comp Sci, ZA-7602 Matieland, South Africa.
C3 University of Southampton; University of Southampton; Stellenbosch
   University
RP Birch, G (corresponding author), Univ Southampton, Comp Sci, Southampton SO17 1BJ, Hants, England.
EM gb2g10@ecs.soton.ac.uk; bfischer@cs.sun.ac.za; mrp@ecs.soton.ac.uk
FU Engineering and Physical Sciences Research Council, UK [1239954]
FX We thank Ewan Tempero and Paul Denny at the University of Auckland for
   access to an anonymised copy of their student exercises and submissions
   to those exercises, from which we generated our student data set. We
   also thank Eli Bendersky, author of the PyCParser, the Automated
   Software Testing Group at Beihang University for Hawk-Eye, and
   contributors to all downstream components and tools used in our work.
   This academic research was funded by the Engineering and Physical
   Sciences Research Council, UK. Funding Number 1239954.
CR Ahmadzadeh M., 2005, SIGCSE Bulletin, V37, P84, DOI 10.1145/1151954.1067472
   [Anonymous], 2010, HAWK EYE STATEMENT C
   [Anonymous], 2012, HAIF VER C SPRING
   [Anonymous], P 2014 C INN TECHN C
   Antonucci P, 2015, ITICSE'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P320, DOI 10.1145/2729094.2742607
   Bendersky E, 2012, PyCParser C Parser and AST Generator Written in Python
   Benford S. D., 1995, Proceedings of the 33rd Annual Southeast Conference, P176, DOI 10.1145/1122018.1122050
   Birch G., 2016, P 2016 ACM C INNOVAT, P168
   Birch G, 2015, LECT NOTES COMPUT SC, V9154, P38, DOI 10.1007/978-3-319-21215-9_3
   Blau H, 2015, ITICSE'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P15, DOI 10.1145/2729094.2742622
   Buffardi K., 2012, Proceedings of the 17th ACM annual conference on Innovation and technology in computer science education (ITiCSE '12), P105, DOI DOI 10.1145/2325296.2325324
   Buffardi Kevin, 2014, P 2014 C INN TECHN C, P165, DOI [10.1145/2591708.2591756., DOI 10.1145/2591708.2591756]
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Cheeseman P.C., 1991, PROC 12 IJCAI, V91, P331, DOI [DOI 10.5555/1631171.1631221, 10.5555/1631171.1631221]
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Console L., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P85, DOI 10.1007/BFb0019402
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Cordeiro L, 2012, IEEE T SOFTWARE ENG, V38, P957, DOI 10.1109/TSE.2011.59
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   Denny P., 2014, Proceedings of the 2014 conference on Innovation technology in computer science education ss, P273, DOI DOI 10.1145/2591708.2591748
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Edwards S. H., 2004, P26, DOI 10.1145/971300.971312.
   Griesmayer A, 2010, SOFTW TEST VERIF REL, V20, P149, DOI 10.1002/stvr.421
   Griesmayer A, 2007, ELECTRON NOTES THEOR, V174, P95, DOI 10.1016/j.entcs.2006.12.032
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   Helmick MT, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P63, DOI 10.1145/1269900.1268805
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Insa D, 2015, ITICSE'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P39, DOI 10.1145/2729094.2742615
   Jackson D., 1997, SIGCSE Bulletin, V29, P335, DOI 10.1145/268085.268210
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jose M, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P437
   Joy Mike., 2005, J ED RESOURCES COMPU, V5, P2
   Konighofer Robert, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P92, DOI 10.1007/978-3-319-13338-6_8
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Laakso M.-J., 2004, P KOL KOL KOL CALL 4, P28
   Le HM, 2012, IEEE T COMPUT AID D, V31, P1249, DOI 10.1109/TCAD.2012.2188800
   Lister R., 2010, SIGCSE B, V41, P156
   Luxton-Reilly Andrew, 2013, P 18 ACM C INNOVATIO, P177, DOI [10.1145/2462476.2462505, DOI 10.1145/2462476.2462505]
   MacWilliam Tommy, 2013, P 18 ACM C INN TECHN, P147, DOI [10.1145/2462476.2462506, DOI 10.1145/2462476.2462506]
   Malmi L., 2002, SIGCSE Bulletin, V34, P55, DOI 10.1145/637610.544433
   McCracken M., 2001, ACM SIGCSE Bull., V33, P125, DOI [10.1145/572133.572137, DOI 10.1145/572133.572137, DOI 10.1145/572139.572181, 10.1145/]
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Perkins D. N., 1986, Journal of Educational Computing Research, V2, P37, DOI 10.2190/GUJT-JCBJ-Q6QU-Q9PL
   Pham H., 2000, SOFTWARE RELIABILITY
   Pham Long H., 2014, International Journal of Quality Assurance in Engineering and Technology Education, V3, P12, DOI 10.4018/ijqaete.2014040102
   Pieterse Vreda, 2013, P 3 COMPUTER SCI ED, P45
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Saikkonen R., 2001, SIGCSE Bulletin, V33, P133, DOI 10.1145/507758.377666
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Soloway E., 1988, Studying the Novice Programmer
   Spacco J., 2013, Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education, ITiCSE '13, P243
   Staber S, 2007, LECT NOTES COMPUT SC, V4501, P355
   Striewe M, 2009, CSEDU 2009: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON COMPUTER SUPPORTED EDUCATION, VOL II, P54
   Sulflow A, 2008, MBMV, P159
   Tillmann N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1117, DOI 10.1109/ICSE.2013.6606662
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Vujosevic-Janicic M, 2013, INFORM SOFTWARE TECH, V55, P1004, DOI 10.1016/j.infsof.2012.12.005
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   WOOD D, 1976, J CHILD PSYCHOL PSYC, V17, P89, DOI 10.1111/j.1469-7610.1976.tb00381.x
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Zeller A, 2003, PROG COMPREHEN, P296
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 73
TC 1
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 445
EP 471
DI 10.1007/s10270-017-0612-y
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HN1GA
UT WOS:000459934300019
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hinkel, G
   Goldschmidt, T
   Burger, E
   Reussner, R
AF Hinkel, Georg
   Goldschmidt, Thomas
   Burger, Erik
   Reussner, Ralf
TI Using internal domain-specific languages to inherit tool support and
   modularity for model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model transformation; Domain-specific
   language; Tool support; Extensibility
AB Model-driven engineering (MDE) has proved to be a useful approach to cope with today's ever-growing complexity in the development of software systems; nevertheless, it is not widely applied in industry. As suggested by multiple studies, tool support is a major factor for this lack of adoption. In particular, the development of model transformations lacks good tool support. Additionally, modularization techniques are inevitable for the development of larger model transformations to keep them maintainable. Existing tools for MDE, in particular model transformation approaches, are often developed by small teams and cannot keep up with advanced tool support for mainstream general-purpose programming languages, such as IntelliJ or Visual Studio. Internal DSLs are a promising solution to these problems. In this paper, we investigate the impact of design decisions of an internal DSL to the reuse of tool support and modularization concepts from the host language. We validate our findings in terms of understandability, applicability, tool support, and extensibility using three case studies from academia, a model-driven engineering platform, and the industrial automation domain where we apply an implementation of an internal model transformation language on the. NET platform. The results confirm the value of inherited modularity and tool support while conciseness and understandability are still competitive.
C1 [Hinkel, Georg] FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
   [Goldschmidt, Thomas] ABB Corp Res, Wallstadter Str 59, D-68526 Ladenburg, Germany.
   [Burger, Erik; Reussner, Ralf] Karlsruhe Inst Technol, Fasanengarten 5, D-76131 Karlsruhe, Germany.
C3 ABB; Helmholtz Association; Karlsruhe Institute of Technology
RP Hinkel, G (corresponding author), FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM hinkel@fzi.de; thomas.goldschmidt@de.abb.com; burger@kit.edu;
   reussner@kit.edu
RI Burger, Erik/KVZ-2777-2024
OI Hinkel, Georg/0000-0002-6462-5208; Burger, Erik/0000-0003-2832-3349;
   Reussner, Ralf/0000-0002-9308-6290
CR [Anonymous], P 1 EUR WORKSH COMP
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Ehrig H, 2005, LECT NOTES COMPUT SC, V3442, P49, DOI 10.1007/978-3-540-31984-9_5
   Fowler M., 2010, Domain-specific languages
   Geiss R, 2008, LECT NOTES COMPUT SC, V5088, P568
   Gelhausen Tom, 2008, P GRAMOT 08, P17, DOI DOI 10.1145/1402947.1402951
   George Lars, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P160, DOI 10.1007/978-3-642-30476-7_11
   Gorp P. V, 2013, 6 TRANSFORMATION TOO
   Havelund K., 2011, TRACECONTRACT SCALA
   Heidenreich F., 2009, TUDFI0910
   Heidenreich Florian, 2011, J OBJECT TECHNOLOGY, V10, P1, DOI [10.5381/jot.2011.10.1.a7, DOI 10.5381/JOT.2011.10.1.A7]
   Hein C., 2009, WORKSH FUT TRENDS MO
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hinkel G, 2013, THESIS
   Hinkel G, 2014, CEUR WORKSHOP P, V1281, P6
   Hinkel G., 2016, MODELLIERUNG, V2016
   Hinkel G., 2015, 2015 JOINT MORSE VAO
   Hinkel G., 2016, TECH REP
   Hinkel G, 2015, LECT NOTES COMPUT SC, V9152, P3, DOI 10.1007/978-3-319-21155-8_1
   Horn Tassilo, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P56, DOI 10.1007/978-3-642-38883-5_7
   Horn Tassilo, 2013, 6 TRANSFORMATION TOO
   Hülsbusch M, 2010, LECT NOTES COMPUT SC, V6396, P183, DOI 10.1007/978-3-642-16265-7_14
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jung R, 2016, LECT NOTES COMPUT SC, V9765, P141, DOI 10.1007/978-3-319-42064-6_10
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Krikava F, 2014, LECT NOTES COMPUT SC, V8767, P569, DOI 10.1007/978-3-319-11653-2_35
   Kusel A., 2013, J SOFTW SYST MODEL, P1
   Mahnke W, 2009, OPC unified architecture
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Object Management Group, 2011, MET FAC MOF 2 0 QUER
   Olsen G.K., 2006, P ECMDA COMPOSITION, P21
   Rentschler Andreas, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P141, DOI 10.1007/978-3-642-38883-5_14
   Rentschler A., 2015, THESIS, DOI [10.5445/KSP/1000045910, DOI 10.5445/KSP/1000045910]
   Rentschler A., 2014, P 13 INT C MOD, P217
   Rivera J. E., 2009, 14 JORN ING SOFTW BA, P158
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Trancon y Widemann Baltasar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P240, DOI 10.1007/978-3-642-30476-7_16
   Ujhelyi Zoltan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P1, DOI 10.1109/ICST.2012.80
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vanhooff B., 2010, THESIS
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wider A., 2014, P WORKSH EDBT ICDT J, P63
   Wijs A, 2012, INT C TOOLS ALG CONS, P565
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a3
   Wimmer Manuel, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P280, DOI 10.1007/978-3-642-30476-7_19
   Zundorf A., 2013, EPTCS
NR 64
TC 10
Z9 10
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 129
EP 155
DI 10.1007/s10270-017-0578-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300007
DA 2024-07-18
ER

PT J
AU Ogunyomi, B
   Rose, LM
   Kolovos, DS
AF Ogunyomi, Babajide
   Rose, Louis M.
   Kolovos, Dimitrios S.
TI Incremental execution of model-to-text transformations using property
   access traces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Scalability; Model-to-text transformation;
   Incrementality
AB Automatic generation of textual artefacts (including code, documentation, configuration files, build scripts, etc.) from models in a software development process through the application of model-to-text (M2T) transformation is a common MDE activity. Despite the importance of M2T transformation, contemporary M2T languages lack support for developing transformations that scale with the size of the input model. As MDE is applied to systems of increasing size and complexity, a lack of scalability in M2T transformation languages hinders industrial adoption. In this paper, we propose a form of runtime analysis that can be used to identify the impact of source model changes on generated textual artefacts. The structures produced by this runtime analysis, property access traces, can be used to perform efficient source-incremental transformation: our experiments show an average reduction of 60% in transformation execution time compared to non-incremental (batch) transformation.
C1 [Ogunyomi, Babajide; Rose, Louis M.; Kolovos, Dimitrios S.] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 University of York - UK
RP Ogunyomi, B (corresponding author), Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
EM bjo500@york.ac.uk; louis.rose@york.ac.uk; dimitris.kolovos@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; Rose, Louis M/L-8892-2014
OI Kolovos, Dimitris/0000-0002-1724-6563
FU European Commission, through the Scalable Modelling and Model-Management
   on the Cloud (MONDO) FP7 STREP project [611125]; European Commission;
   7th Framework Programme [218575]
FX This work was partially supported by the European Commission, through
   the Scalable Modelling and Model-Management on the Cloud (MONDO) FP7
   STREP project (Grant #611125). The motivating example discussed in this
   paper was taken from Rose's work on the INESS project, which was
   supported by the European Commission and co-funded under the 7th
   Framework Programme (Grant #218575).
CR [Anonymous], P 2 OOPSLA WORKSHOP
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2010, LECT NOTES COMPUT SC, V5765, P555, DOI 10.1007/978-3-642-17322-6_24
   Groote J.F., 2007, MUCK FORMAL SPECIFIC
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Holzmann G. J., 2004, SPIN MODEL CHECKER P, V1003
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kolovos D.S., 2008, CHAMDE 2008 WORKSH P, P10
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   Ogunyomi B., 2013, TECHNICAL REPORT
   Ogunyomi B, 2015, LECT NOTES COMPUT SC, V9153, P187, DOI 10.1007/978-3-319-21151-0_13
   Ogunyomi B, 2014, LECT NOTES COMPUT SC, V8767, P84, DOI 10.1007/978-3-319-11653-2_6
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Steinberg D., 2008, EMF ECLIPSE MODEL FR
NR 21
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 367
EP 383
DI 10.1007/s10270-018-0666-5
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300016
DA 2024-07-18
ER

PT J
AU Wu, DH
   Schnieder, E
AF Wu, Daohua
   Schnieder, Eckehard
TI Scenario-based system design with colored Petri nets: an application to
   train control systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Scenario; System design; Modeling; Verification; Colored Petri nets;
   Train control system
ID VERIFICATION; UML
AB For the goal of model-based system software development, this paper exploits the formalism of colored Petri nets (CPNs) to design complex systems based on scenarios. The specification of UML sequence diagrams which are easily understood by customers, requirement engineers and software developers are adopted to represent scenarios as specification models. A scenario is a partial description of the system behavior, describing how users, system components and the environment interact. Thus scenarios need to be synthesized in order to obtain an overall system behavior. A large number of works (e.g., Whittle and Schumann in Proceedings of the 2000 international conference on software engineering, pp 314-323, 2000; Elkoutbi and Keller in Application and theory of Petri nets, 2000; Damas et al. in Proceedings of the 14th ACM SIGSOFT international symposium on foundations of software engineering, pp 197-207, 2000; Uchitel et al. in IEEE Trans Softw Eng 29(2):99-115, 2003) have investigated scenario synthesis providing approaches or algorithms. These synthesis approaches and algorithms result in either Petri net models (e.g., Elkoutbi and Keller 2000; Ameedeen and Bordbar in 12th international IEEE enterprise distributed object computing conference (EDOC), pp 213-221, 2008) that are mainly suitable for scenario validation or other forms of behavior models (e.g., labeled transition systems in Damas et al. 2000; Uchitel et al. 2003 and statecharts in Kruger et al. in Distributed and parallel embedded systems, pp 61-71, 1999; Whittle et al. 2000) that may be regarded as design models. Petri nets are well known for describing distributed and concurrent complex systems. Furthermore, numerous techniques, e.g., simulation, testing, state space-based techniques, structural methods and model checking, are currently available for analyzing Petri net models. Therefore, design models in the form of Petri nets, integrating all scenarios into a coherent whole and fitting for further detailed design, are promising. To this end, we present a top-down approach to establish hierarchical CPNs in accordance with specified scenarios (i.e., sequence diagrams). This approach makes use of explicitly labeling component states in the sequence diagrams to correlate scenarios. In addition, the techniques of state space analysis and ASK-CTL model checking are used to verify the correctness and consistency of the CPN model with respect to standard and system-specific properties. As the inspiration of the presented approach derives from the development of train control systems, we present an running example of designing the on-board subsystem of a satellite-based train control system to show the feasibility of our approach.
C1 [Wu, Daohua] Beijing Jiaotong Univ, Natl Res Ctr Railway Safety Assessment, Shangyuancun 3, Beijing 100044, Peoples R China.
   [Schnieder, Eckehard] Tech Univ Carolo Wilhelmina Braunschweig, Inst Traff Safety & Automat Engn, Hermann Blenk Str 42, D-38108 Braunschweig, Germany.
C3 Beijing Jiaotong University; Braunschweig University of Technology
RP Wu, DH (corresponding author), Beijing Jiaotong Univ, Natl Res Ctr Railway Safety Assessment, Shangyuancun 3, Beijing 100044, Peoples R China.
EM dawwin.wu@gmail.com
FU BJTU Founds for Young Scientists [2015RC072]; National Natural Science
   Foundation of China [61502029]
FX This paper is partly supported by the BJTU Founds for Young Scientists
   under Grant 2015RC072 and the National Natural Science Foundation of
   China under Grant 61502029.
CR Ameedeen MA, 2008, IEEE INT ENTERP DIST, P213, DOI 10.1109/EDOC.2008.42
   Amyot D, 2003, TELECOMMUN SYST, V24, P61, DOI 10.1023/A:1025890110119
   [Anonymous], 2001, 501282001 CENELEC EN
   [Anonymous], 1999, EN501261 CENELEC
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barbu G., 2008, P S FORMS FORMAT 200
   Bjorner D., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P17
   Bjorner D., 1996, RAILW SYST COORD 97
   Chen LJ, 2012, RELIAB ENG SYST SAFE, V100, P8, DOI 10.1016/j.ress.2011.12.010
   Cheng A., 1997, DAIMI Report Series, V26
   Chiappini A., 1999, COMPUTER SAFETY RELI
   Cimatti A., 1998, Formal Aspects of Computing, V10, P361, DOI 10.1007/s001650050022
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Damas C., 2000, P 14 ACM SIGSOFT INT, P197
   Drewes J., 2005, P 5 EUR C EXH INT TR
   Elkoutbi M, 2000, LECT NOTES COMPUT SC, V1825, P166
   Esparza J, 2001, FUND INFORM, V47, P231
   Espensen K.L., P 10 CPN WORKSH, P41
   Fukuda M., 2000, P 9 IFAC S CONTR TRA, P187
   Girault C, 2001, Petri Nets for Systems Engineering: A Guide to Modelling, Verification, and Applications
   Hansen K. M., 1994, FME '94: Industrial Benefit of Formal Methods. Second International Symposium of Formal Methods Europe. Proceedings, P582
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harper R., 2011, Programming in Standard ML
   Haxthausen AE, 2000, IEEE T SOFTWARE ENG, V26, P687, DOI 10.1109/32.879808
   ITU-T, 2011, Z120022011 ITUT
   Janhsen A., 1997, P 8 IFAC S TRANSP SY, P1215
   Janota A., 2001, 4 INT SCI C EL 2001
   JANSEN L, 1998, P WORKSH PRACT US CO, P103
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Jones Cliff B., 1986, Systematic software development using VDM, V2
   Katsaros P, 2009, INFORM SOFTWARE TECH, V51, P235, DOI 10.1016/j.infsof.2008.01.005
   Khomenko V, 2003, THESIS
   Kruger I., 1999, Distributed and Parallel Embedded Systems. IFIP WG10.3/WG10.5 International Workshop on Distributed and Parallel Embedded Systems (DIPES'98), P61
   Lautenbach K., 2002, APPL THEORY PETRI NE, V2002, P281
   Lecomte T, 2007, P BRAZ S FORM METH S
   MCMILLAN KL, 1995, FORM METHOD SYST DES, V6, P45, DOI 10.1007/BF01384314
   Meyer zu Horste M., 2013, FM RAIL BOK WORKSH M
   Meyer zu Horste M., 2000, P COMPRAIL BOL IT, P1291
   Meyer zu Horste M., 1999, FMRAIL WORKSHOP, V3
   Mirabadi A., 2009, SIGNAL DRAHT, V3, P57
   Mortensen K. H., 1999, P 2 PRACT US CPN DES, P41
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nielsen M., 1989, FORM ASP COMPUT, V1, P85
   *OBJ MAN GROUP, 2009, OMG UN MOD LANG OMG
   Object Management Group, 2013, UN MOD LANG
   Object Management Group, 2014, Tech. Rep.
   Padberg Julia., 2001, Journal of Integrated Design and Process Science, V5, P3
   Philippi S, 2006, J SYST SOFTWARE, V79, P1444, DOI 10.1016/j.jss.2005.12.022
   Pope M., 2006, 7 WORLD C RAILW RES
   Rástocny K, 2004, LECT NOTES COMPUT SC, V3147, P174
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   Stadlmann Burkhard, 2012, Signal und Draht, V104, P28
   Stadlmann B., 2004, P IEEE FORMS FORMAT, P71
   Tretmans J., 2008, LECT NOTES COMPUTER, V4949
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Whittle J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656252
   Winter K., 2003, 26 AUSTRALASIAN COMP, P309
   Wu D., 2012, P 13 IFAC S CONTR TR, V13, P19
   Wu D, 2014, THESIS
   ZURAWSKI R, 1994, IEEE T IND ELECTRON, V41, P567, DOI 10.1109/41.334574
NR 61
TC 6
Z9 10
U1 1
U2 35
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 295
EP 317
DI 10.1007/s10270-016-0517-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100015
DA 2024-07-18
ER

PT J
AU Damiani, F
   Faitelson, D
   Gladisch, C
   Tyszberowicz, S
AF Damiani, Ferruccio
   Faitelson, David
   Gladisch, Christoph
   Tyszberowicz, Shmuel
TI A novel model-based testing approach for software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Java; Alloy; Software product line; Delta-oriented programming;
   Model-based testing; Refinement
ID GENERATION
AB Model-based testing relies on a model of the system under test. FineFit is a framework for model-based testing of Java programs. In the FineFit approach, the model is expressed by a set of tables based on Parnas tables. A software product line is a family of programs (the products) with well-defined commonalities and variabilities that are developed by (re) using common artifacts. In this paper, we address the issue of using the FineFit approach to support the development of correct software product lines. We specify a software product line as a specification product line where each product is a FineFit specification of the corresponding software product. The main challenge is to concisely specify the software product line while retaining the readability of the specification of a single system. To address this, we used delta-oriented programming, a recently proposed flexible approach for implementing software product lines, and developed: (1) delta tables as a means to apply the delta-oriented programming idea to the specification of software product lines; and (2) DeltaFineFit as a novel model-based testing approach for software product lines.
C1 [Damiani, Ferruccio] Univ Torino, Dipartimento Informat, Cso Svizzera 185, I-10149 Turin, Italy.
   [Faitelson, David] Afeka Tel Aviv Acad Coll Engn, Tel Aviv, Israel.
   [Gladisch, Christoph] Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Tyszberowicz, Shmuel] Acad Coll Tel Aviv Yaffo, Tel Aviv, Israel.
C3 University of Turin; Helmholtz Association; Karlsruhe Institute of
   Technology
RP Damiani, F (corresponding author), Univ Torino, Dipartimento Informat, Cso Svizzera 185, I-10149 Turin, Italy.
EM ferruccio.damiani@unito.it; davidf@afeka.ac.il; gladisch@ira.uka.de;
   tyshbe@tau.ac.il
RI Ferruccio, Damiani/D-2383-2011
OI Ferruccio, Damiani/0000-0001-8109-1706
FU HyVar; European Union's Horizon research and innovation programme
   [644298]; ICT COST Action [IC1402, IC1201]; Italian MIUR PRIN Project
   CINA [2010LHT4KM]; Ateneo/CSP project RunVar [D16D15000360005]; GIF
   [1131-9.6/2011]
FX The authors of this paper are listed in alphabetical order. This work
   has been partially supported by project HyVar (www.hyvar-project.eu),
   which has received funding from the European Union's Horizon 2020
   research and innovation programme under Grant Agreement No. 644298; by
   ICT COST Action IC1402 ARVI (www.cost-arvi.eu); by ICT COST Action
   IC1201 BETTY (www.behavioural-types.eu); by Italian MIUR PRIN 2010LHT4KM
   Project CINA (sysma.imtlucca.it/cina); by Ateneo/CSP D16D15000360005
   project RunVar; and by GIF (Grant No. 1131-9.6/2011).
CR [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel S, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P101
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Beckert B, 2011, INT J SYST ASSUR ENG, V2, P97, DOI 10.1007/s13198-011-0068-3
   Bettini L, 2013, ACTA INFORM, V50, P77, DOI 10.1007/s00236-012-0173-z
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Damiani F., 2013, P 2013 INT C PRINC P, P135, DOI [10.1145/2500828.2500841, DOI 10.1145/2500828.2500841]
   Damiani F., 2012, P16 INT SOFTW PROD L, V2, P53, DOI [10.1145/2364412.2364422, DOI 10.1145/2364412.2364422]
   Damiani F., 2011, P 15 INT SOFTW PROD, V2, DOI 10.1145/2019136.2019175
   Damiani F, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2480361.2371403
   de Roever W.P., 1998, CAMBRIDGE TRACTS THE, V46
   Delaware B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P243, DOI 10.1145/1595696.1595733
   Dovland J, 2010, J LOGIC ALGEBR PROGR, V79, P578, DOI 10.1016/j.jlap.2010.07.008
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Faitelson D, 2011, INT J SYST ASSUR ENG, V2, P144, DOI 10.1007/s13198-011-0060-y
   Hahnle Reiner, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P32, DOI 10.1007/978-3-642-34026-0_4
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Koscielny Jonathan, 2014, P 2014 INT C PRINC P, P63
   KOWALSKI Michal., 2013, Prawo do samoobrony jako srodek zwalczania terroryzmu miedzynarodowego, P1, DOI [10.1145/2451617.2451619, DOI 10.1145/2451617.2451619]
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lochau Malte, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P67, DOI 10.1007/978-3-642-30473-6_7
   Lochau M, 2014, J SYST SOFTWARE, V91, P63, DOI 10.1016/j.jss.2013.11.1096
   Lochau M, 2010, ELECTRON NOTES THEOR, V264, P37, DOI 10.1016/j.entcs.2010.12.013
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mugridge R., FIT DEV SOFTWARE FRA
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Parnas D.L., 1992, 260 MCMASTER U RES I
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Salem K, 2000, SIGMOD RECORD, V29, P129, DOI 10.1145/335191.335393
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schaefer Ina., 2011, P 10 INT C ASPECT OR, P43, DOI [10.1145/1960275.1960283, DOI 10.1145/1960275.1960283]
   Schaefer Ina, 2010, P 2 INT WORKSH FEAT, P49
   Spivey J.M, 2001, Z NOTATION REFERENCE
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
NR 42
TC 8
Z9 8
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1223
EP 1251
DI 10.1007/s10270-016-0516-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Front, A
   Rieu, D
   Santorum, M
   Movahedian, F
AF Front, Agnes
   Rieu, Dominique
   Santorum, Marco
   Movahedian, Fatemeh
TI A participative end-user method for multi-perspective business process
   elicitation and improvement
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Requirements engineering; Domain modeling;
   User interfaces modeling; Participative approach
AB A business process can be characterized by multiple perspectives (intentional, organizational, operational, functional, interactional, informational, etc). Business process modeling must allow different stakeholders to analyze and represent process models according to these different perspectives. This representation is traditionally built using classical data acquisition methods together with a process representation language such as BPMN or UML. These techniques and specialized languages can easily become hard, complex and time consuming. In this paper, we propose ISEA, a participative end-user modeling approach that allows the stakeholders in a business process to collaborate together in a simple way to communicate and improve the business process elicitation in an accurate and understandable manner. Our approach covers the organizational perspective of business processes, exploits the information compiled during the elicitation of the organizational perspective and touches lightly an interactional perspective allowing users to create customized interface sketches to test the user interface navigability and the coherence within the processes. Thus, ISEA can be seen as a participative end-user modeling approach for business process elicitation and improvement.
C1 [Front, Agnes; Rieu, Dominique; Santorum, Marco; Movahedian, Fatemeh] Univ Grenoble Alpes, LIG, F-38000 Grenoble, France.
   [Front, Agnes; Rieu, Dominique; Santorum, Marco; Movahedian, Fatemeh] CNRS, LIG, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Front, A (corresponding author), Univ Grenoble Alpes, LIG, F-38000 Grenoble, France.; Front, A (corresponding author), CNRS, LIG, F-38000 Grenoble, France.
EM Agnes.Front@imag.fr; Dominique.Rieu@imag.fr; Marco.Santorum@imag.fr;
   Fatemeh.Movahedian@imag.fr
RI Santórum G., Marco/ACW-1754-2022
OI Santórum G., Marco/0000-0001-7251-923X
FU Government of Ecuador (SENACYT-EPN)
FX The authors thank the Government of Ecuador (SENACYT-EPN) for funding
   this research and the MARVELIG platform for supporting the experiments.
CR Ågerfalk PJ, 2007, INT FED INFO PROC, V244, P359
   Ambler S.W., 2014, AGILEMODELING
   Becker J, 2007, LECT NOTES COMPUT SC, V4656, P68
   Berjis J, 2009, WINT SIM C, P3099
   Borges M., 1999, STRING PROC INF RETR
   Cardoso E., 2009, ENTERPRISE BUSINESS
   Céret E, 2013, INFORM SOFTWARE TECH, V55, P795, DOI 10.1016/j.infsof.2012.11.002
   Christensen E.H., 2007, The Certified Quality Process Analyst Handbook
   Cortes M., 2012, INT FRAGMENTS BRIDGI
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Debauche Bernard, 2004, BUSINESS PROCESS MAN
   Deming E, 1982, NATL PRODUCT REV, V1, P30
   Deneckere R, 2009, ENHANCING GUIDANCE I
   Espana S, 2012, COMMUNICATION ANAL M
   Gillot J.N., 2008, The complete guide to business process management: Business process transformation or a way of aligning the strategic objectives of the company and the information system through the processes
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Ishikawa K., 1985, What is total quality control?: The Japanese way, P215
   Jalali A., 2013, BUSINESS PROCESS INF, P199
   Koliadis G., 2006, ADV KNOWLEDGE ACQUIS
   Lapouchnian A, 2007, BUSINESS PROCESS MAN
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P587, DOI 10.1006/ijhc.2001.0503
   Mandran N., 2013, REV RSTI ISI, V18
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Morrison E. D, 2011, 7 INT WORKSH ENG SER
   Noye D., 2002, INSEP CONSULTING EDI
   Nurcan S., 2008, SURVEY FLEXIBILITY R, P378
   Pimsakul S., 2013, 19 INT C IND ENG
   Rieu D., 2014, ENTERPRISE BUSINESS, P33
   Sangiorgi U., 2012, 4 ACM SIGCHI S ENG I, P257
   Santorum M., 2011, 5 INT C RES CHALL IN
   Santorum M., 2013, CHIN 6 WORKSH BUS PR
   Schuman H., 1996, QUESTIONS ANSWERS AT
   Stirna J, 2007, LECT NOTES COMPUT SC, V4495, P546
   TARDIEU H, 1985, METHODE MERISE
   Thomas P., 2009, 6 SIGMA HDB
   Van-der-Aalst W., 2003, J INTEGR DES PROCESS
   Vanderdonckt J., 2004, W3CWORKSHOP MULT INT
   Wohlin C., 2012, Experimentation in Software Engineering
   [No title captured]
NR 39
TC 17
Z9 18
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 691
EP 714
DI 10.1007/s10270-015-0489-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800006
DA 2024-07-18
ER

PT J
AU Hudon, S
   Hoang, TS
   Ostroff, JS
AF Hudon, Simon
   Hoang, Thai Son
   Ostroff, Jonathan S.
TI The Unit-B method: refinement guided by progress concerns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Progress properties; Refinement; Fairness; Scheduling; Unit-B;
   Proof-based formal methods; Verification of cyber-physical systems
AB We present Unit-B, a formal method inspired by Event-B and UNITY. Unit-B aims at the stepwise design of software systems, satisfying safety and liveness properties. The method features the novel notion of coarse and fine schedules, a generalisation of weak and strong fairness for specifying events' scheduling assumptions. Based on events schedules, we propose proof rules to reason about progress properties and a refinement order preserving both liveness and safety properties. We illustrate our approach by an example to show that systems development can be driven by not only safety but also liveness requirements.
C1 [Hudon, Simon; Ostroff, Jonathan S.] York Univ, Elect Engn & Comp Sci, Toronto, ON, Canada.
   [Hoang, Thai Son] Swiss Fed Inst Technol, Inst Informat Secur, Zurich, Switzerland.
C3 York University - Canada; Swiss Federal Institutes of Technology Domain;
   ETH Zurich
RP Hoang, TS (corresponding author), Swiss Fed Inst Technol, Inst Informat Secur, Zurich, Switzerland.
EM simon@cse.yorku.ca; tshoang@gmail.com; jonathan@cse.yorku.ca
RI Hoang, Thai Son/H-6159-2019
OI Hoang, Thai Son/0000-0003-4095-0732
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], 1990, Predicate Calculus and Program Semantics
   [Anonymous], LECT NOTES COMPUTER
   Chandy M, 1989, PARALLEL PROGRAM DES
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dijkstra E. W., 2000, NOTATIONAL CONVENTIO
   Dijkstra R., 1998, COMPUTATION CALCULUS
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Gries D., 1993, LOGICAL APPROACH DIS
   Hudon S., 2011, THESIS
   Hudon S., 2013, INT C INTEGRATED FOR, P16
   Hudon S, 2011, ELECTRON NOTES THEOR, V280, P57, DOI 10.1016/j.entcs.2011.11.018
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Manna Z, 2010, LECT NOTES COMPUT SC, V6200, P279, DOI 10.1007/978-3-642-13754-9_13
   MEHTA FD, 2008, THESIS ETH ZURICH
   Spivey J.M., 1992, PRENTICE HALL INT SE
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   [No title captured]
NR 22
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1091
EP 1116
DI 10.1007/s10270-015-0456-2
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800009
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Fabry, J
   Zambrano, A
   Gordillo, S
AF Fabry, Johan
   Zambrano, Arturo
   Gordillo, Silvia
TI Expressing aspectual interactions in design: evaluating three AOM
   approaches in the slot machine domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Aspect-oriented modeling; Aspect interactions; Case study
ID ORIENTED SOFTWARE
AB In the context of an industrial project, we evaluated the implementation of the software of a casino slot machine. This software has a significant amount of crosscutting concerns that depend on and interact with each other as well as with the modular concerns. We therefore wished to express our design using an appropriate aspect-oriented modeling approach. We therefore evaluated three candidate methodologies: Theme/UML, WEAVR, and RAM to establish their suitability. Remarkably, only the last of the three has shown to allow an adequate expression of the interactions, albeit not fully explicit. The first two fall short because half of the interaction types cannot be expressed at all while the other half need to be expressed using a work-around that hides the intention of the design. Neither does RAM allow a fully explicit expression of interactions, but it would be the most adequate approach for the slot machine case.
C1 [Fabry, Johan] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
   [Zambrano, Arturo; Gordillo, Silvia] Univ Nacl La Plata, Fac Informat, LIFIA, La Plata, Buenos Aires, Argentina.
   [Zambrano, Arturo] Univ Nacl Quilmes, Dept Ciencia & Tecnol, Bernal, Argentina.
C3 Universidad de Chile; National University of La Plata
RP Fabry, J (corresponding author), Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
EM jfabry@dcc.uchile.cl
FU FONDECYT [1130253]
FX This article extends the article "Expressing Aspectual Interactions in
   Design: Experiences in the Slot Machine Domain" [14] that appeared in
   the Proceedings of the ACM/IEEE 14th International Conference on Model
   Driven Engineering Languages and Systems (MODELS 2011) Johan Fabry is
   partially funded by FONDECYT project 1130253.
CR [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel Sven, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P161, DOI 10.1109/ISSRE.2010.11
   Apel S, 2013, COMPUT NETW, V57, P2399, DOI 10.1016/j.comnet.2013.02.025
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Ayed A., 2013, P 5 ACM SIGCHI ANN I, V2:1-2:12
   Calder M, 2003, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VII, P295
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   CHITCHYAN R, 2005, ULANC9 AOSD
   Ciraci S, 2010, LECT NOTES COMPUT SC, V6210, P321
   CLARKE S., 2005, OBJECT TECHNOLOGY SE
   Cottenier T., 2006, P 10 INT WORKSH ASP
   Cottenier T., 2006, P INT C ASP OR SOFTW
   Cottenier T, 2007, J OBJECT TECHNOL, V6, P51, DOI 10.5381/jot.2007.6.7.a3
   Fabry J, 2011, LECT NOTES COMPUT SC, V6981, P93, DOI 10.1007/978-3-642-24485-8_8
   Filho R S S, 2007, 9 INT C FEAT INT SOF, P33
   Gaming Laboratories International, 2007, GAM DEV CAS
   Gaming Standard Association, 2008, GAM SERV G2S PROT SP
   HOMAYOON S, 1988, IEEE COMMUN MAG, V26, P42, DOI 10.1109/35.9139
   IBM, 2014, RAT TAU
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Katz E., 2008, INT WORKSHOP FDN ASP, P29, DOI DOI 10.1145/1394496.1394500
   Kellens A, 2006, LECT NOTES COMPUT SC, V4067, P501
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Liu J, 2005, J OBJECT TECHNOL, V4, P13, DOI 10.5381/jot.2005.4.3.a2
   Mehner K, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P69
   Metzger A, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P198
   Metzger A., 2005, P 8 INT C FEAT INT T
   Nakamura M., 2009, INT C FEAT INT SOFTW
   Nevada Gaming Commission, 2008, TECHN STAND GAM DEV
   Nhlabatsi Armstrong, 2008, Progress in Informatics, P75, DOI 10.2201/NiiPi.2008.5.8
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Sanen Frans, 2006, STUDY INTERACTION IS
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Z. 100: ITU, 2000, Z100 ITU
   Zambrano A, 2012, SCI COMPUT PROGRAM, V78, P65, DOI 10.1016/j.scico.2011.12.004
   Zambrano Arturo, 2010, P 2010 ACM S APPL CO, P2161
   Zhang J., 2006, WORKSH ASP OR MOD 9
   Zhang W., 2005, 2013 21 IEEE INT REQ, V0, P273
NR 40
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 881
EP 905
DI 10.1007/s10270-014-0442-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600012
OA Green Published
DA 2024-07-18
ER

PT J
AU Gonçalves, RC
   Batory, D
   Sobral, JL
AF Goncalves, Rui C.
   Batory, Don
   Sobral, Joao L.
TI ReFIO: an interactive tool for pipe-and-filter domain specification and
   program generation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE MDE; Tools; Software architectures; Design by transformation;
   Refinement; Optimization; Graph transformations
ID MODEL
AB ReFlO is a framework and interactive tool to record and systematize domain knowledge used by experts to derive complex pipe-and-filter (PnF) applications. Domain knowledge is encoded as transformations that alter PnF graphs by refinement (adding more details), flattening (removing modular boundaries), and optimization (substituting inefficient PnF graphs with more efficient ones). All three kinds of transformations arise in reverse-engineering legacy PnF applications. We present the conceptual foundation and tool capabilities of ReFlO, illustrate how parallel PnF applications are designed and generated, and howdomain-specific libraries of transformations are developed.
C1 [Goncalves, Rui C.; Sobral, Joao L.] Univ Minho, Dept Informat, Braga, Portugal.
   [Batory, Don] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 Universidade do Minho; University of Texas System; University of Texas
   Austin
RP Gonçalves, RC (corresponding author), Univ Minho, Dept Informat, Braga, Portugal.
EM rgoncalves@di.uminho.pt; batory@cs.utexas.edu; jls@di.uminho.pt
OI Sobral, Joao/0000-0002-1512-1126; Goncalves, Rui C./0000-0002-7203-8935
CR [Anonymous], THESIS U CALIFORNIA
   [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Baar T., 2006, Perspectives of Systems Informatics. 6th International Andrei Ershov Memorial Conference, PSI 2006. Revised Papers (Lecture Notes in Computer Science Vol. 4378), P84
   BARU CK, 1995, IBM SYST J, V34, P292, DOI 10.1147/sj.342.0292
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Batory D, 1997, IEEE T SOFTWARE ENG, V23, P67, DOI 10.1109/32.585497
   Batory D., 2011, TR1117 U TEX DEP COM
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Becker Steffen., 2008, WOSP 08 P 7 INT WORK, P103
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   BRUNETON E, 2004, FRACTAL COMPONENT MO
   BUNKE H, 1982, IEEE T PATTERN ANAL, V4, P574, DOI 10.1109/TPAMI.1982.4767310
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   Combemale B., 2008, ERTS 08
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Das D., 1995, THESIS U TEXAS AUSTI
   DeWitt D. J., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P44, DOI 10.1109/69.50905
   Diaconescu R, 1999, LECT NOTES COMPUT SC, V1709, P1644
   Dotan Dolev., 2007, OOPSLA 07 COMPANION, P838, DOI [10.1145/1297846.1297915, DOI 10.1145/1297846.1297915]
   Egyed A., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P96
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Feiler P, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P189, DOI 10.1109/CDS.1998.675773
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Fritzsche M, 2008, LECT NOTES COMPUT SC, V5002, P164
   Garlan D., 1994, CMUCS94166
   Goncalves R.C., THESIS U MINHO
   GORLICK MM, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P23, DOI 10.1109/ICSE.1991.130620
   Grassi Vincenzo., 2005, WOSP 05 P 5 INT WORK, P25
   Green C., 1983, TECHNICAL REPORT
   Guyer SZ, 2005, P IEEE, V93, P342, DOI 10.1109/JPROC.2004.840489
   Habel Annegret., 1992, HYPEREDGE REPLACEMEN
   Heckel R., 2004, Recent Trends in Algebraic Development Techniques. 17th International Workshop, WADT 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol.3423), P1
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Liskov B., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P118
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Lohman G. M., 1988, SIGMOD Record, V17, P18, DOI 10.1145/971701.50204
   Lowry M., 1994, Methodologies for Intelligent Systems. 8th International Symposium, ISMIS '94 Proceedings, P326
   Marker B., 2012, IWAPT 12
   Marker B., 2012, TECHNICAL REPORT
   Marker B, 2012, ACM SIGPLAN NOTICES, V47, P289, DOI 10.1145/2370036.2145858
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Nielson F., 1999, Principles of Program Analysis
   Paige RF, 2005, ELECTRON NOTES THEOR, V137, P151, DOI 10.1016/j.entcs.2005.04.029
   Perry D. E., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P2, DOI 10.1145/74587.74588
   Perry D. E., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P142
   PERRY DE, 1989, ACM SIGSOFT, V14, P114, DOI 10.1145/75309.75322
   Püschel M, 2004, INT J HIGH PERFORM C, V18, P21, DOI 10.1177/1094342004041291
   Ráth I, 2009, LECT NOTES COMPUT SC, V5795, P342, DOI 10.1007/978-3-642-04425-0_26
   Ratzer AV, 2003, LECT NOTES COMPUT SC, V2679, P450
   Riche TaylorL., 2012, GPCE 12 P 11 ACM INT, P84
   Saada Hajer, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P546, DOI 10.1007/978-3-642-33666-9_35
   Sun Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P980, DOI 10.1145/1985793.1985966
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Thies W., 2008, THESIS MIT
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Varró D, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P978, DOI 10.1145/1244002.1244217
   Wimmer M., 2012, JOT, V11, P3
   Wimmer M., 2007, HICSS 07
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
NR 66
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 377
EP 395
DI 10.1007/s10270-014-0403-7
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800006
DA 2024-07-18
ER

PT J
AU Song, SZ
   Zhang, JX
   Liu, Y
   Auguston, M
   Sun, J
   Dong, JS
   Chen, TM
AF Song, Songzheng
   Zhang, Jiexin
   Liu, Yang
   Auguston, Mikhail
   Sun, Jun
   Dong, Jin Song
   Chen, Tieming
TI Formalizing and verifying stochastic system architectures using Monterey
   Phoenix
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Model checking; Stochastic system architecture; Monterey Phoenix
AB The analysis of software architecture plays an important role in understanding the system structures and facilitate proper implementation of user requirements. Despite its importance in the software engineering practice, the lack of formal description and verification support in this domain hinders the development of quality architectural models. To tackle this problem, in this work, we develop an approach for modeling and verifying software architectures specified using Monterey Phoenix (MP) architecture description language. MP is capable of modeling system and environment behaviors based on event traces, as well as supporting different architecture composition operations and views. First, we formalize the syntax and operational semantics for MP; therefore, formal verification of MP models is feasible. Second, we extend MP to support shared variables and stochastic characteristics, which not only increases the expressiveness of MP, but also widens the properties MP can check, such as quantitative requirements. Third, a dedicated model checker for MP has been implemented, so that automatic verification of MP models is supported. Finally, several experiments are conducted to evaluate the applicability and efficiency of our approach
C1 [Song, Songzheng; Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Zhang, Jiexin; Dong, Jin Song] Natl Univ Singapore, Singapore 117548, Singapore.
   [Sun, Jun] Singapore Univ Technol & Design, Singapore, Singapore.
   [Auguston, Mikhail] Naval Postgrad Sch, Monterey, CA USA.
   [Chen, Tieming] Zhejiang Univ Technol, Hangzhou, Zhejiang, Peoples R China.
C3 Nanyang Technological University; National University of Singapore;
   Singapore University of Technology & Design; United States Department of
   Defense; United States Navy; Naval Postgraduate School; Zhejiang
   University of Technology
RP Song, SZ (corresponding author), Nanyang Technol Univ, Singapore 639798, Singapore.
EM songsz@ntu.edu.sg; jiexinzh@comp.nus.edu.sg; yangliu@ntu.edu.sg;
   maugusto@nps.edu; sunjun@sutd.edu.sg; dongjs@comp.nus.edu.sg;
   tmchen@zjut.edu.cn
RI yang, liu/HTN-9175-2023; liu, yang/HIU-0559-2022; Liu, Yang/D-2306-2013;
   LIU, YANG/HWQ-4615-2023; Liu, Yang/HNJ-6693-2023; liu,
   yang/HQY-7531-2023; yang, liu/GVU-8760-2022; liu, yang/HHY-8583-2022
OI Liu, Yang/0000-0001-7300-9215; Sun, Jun/0000-0002-3545-1392
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   [Anonymous], 1997, The Theory and Practice of Concurrency
   Auguston M., 2009, ACM SIGSOFT SOFTW EN, V34, P1, DOI DOI 10.1145/1598732.1598733
   Auguston M., 2010, P 15 ICCRTS C INT CO
   Auguston M., 2009, P 24 ACM SIGPLAN C C, P1031
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Chaki S, 2004, LECT NOTES COMPUT SC, V2999, P128
   Clarke EM, 1999, MODEL CHECKING, P1
   Corradini F, 2006, SCI COMPUT PROGRAM, V59, P171, DOI 10.1016/j.scico.2005.04.003
   Garlan D., 1997, P 1997 C CTR ADV STU
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kim J.S., 2006, ROSATEA '06, P70
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Liu Y, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P190, DOI 10.1109/ISSRE.2011.19
   Liu Y, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P919
   Mahony B, 1998, PROC INT CONF SOFTW, P95, DOI 10.1109/ICSE.1998.671106
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Schrijver A., 2003, COMBINATORIAL OPTIMI
   SELVIN S, 1975, AM STAT, V29, P134
   SELVIN S, 1975, AM STAT, V29, P67
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Stoelinga M., 2002, Bulletin of the European Association for Theoretical Computer Science, P176
   Sun J, 2010, LECT NOTES COMPUT SC, V6447, P388, DOI 10.1007/978-3-642-16901-4_26
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Tan L, 2011, LECT NOTES COMPUT SC, V6783, P490
   Zhang JX, 2012, ASIA PAC SOFWR ENG, P644, DOI 10.1109/APSEC.2012.60
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
NR 31
TC 7
Z9 7
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 453
EP 471
DI 10.1007/s10270-014-0411-7
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800009
DA 2024-07-18
ER

PT J
AU de Lara, J
   Guerra, E
   Boronat, A
   Heckel, R
   Torrini, P
AF de lara, Juan
   Guerra, Esther
   Boronat, Artur
   Heckel, Reiko
   Torrini, Paolo
TI Domain-specific discrete event modelling and simulation using graph
   transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graph transformation; Discrete event simulation; Domain-specific
   modelling
ID SEMANTICS; VERIFICATION
AB Graph transformation is being increasingly used to express the semantics of domain-specific visual languages since its graphical nature makes rules intuitive. However, many application domains require an explicit handling of time to accurately represent the behaviour of a real system and to obtain useful simulation metrics to measure throughputs, utilization times and average delays. Inspired by the vast knowledge and experience accumulated by the discrete event simulation community, we propose a novel way of adding explicit time to graph transformation rules. In particular, we take the event scheduling discrete simulation world view and provide rules with the ability to schedule the occurrence of other rules in the future. Hence, our work combines standard, efficient techniques for discrete event simulation (based on the handling of a future event set) and the intuitive, visual nature of graph transformation. Moreover, we show how our formalism can be used to give semantics to other timed approaches and provide an implementation on top of the rewriting logic system Maude.
C1 [de lara, Juan; Guerra, Esther] Univ Autonoma Madrid, Madrid, Spain.
   [Boronat, Artur; Heckel, Reiko; Torrini, Paolo] Univ Leicester, Leicester, Leics, England.
C3 Autonomous University of Madrid; University of Leicester
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es; aboronat@mcs.le.ac.uk;
   reiko@mcs.le.ac.uk; pt95@mcs.le.ac.uk
RI Heckel, Reiko/AAO-6439-2021; de Lara, Juan/B-5422-2014; Guerra,
   Esther/B-4977-2014
OI Heckel, Reiko/0000-0003-4719-0772; Boronat, Artur/0000-0003-2024-1736;
   Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry [TIN2011-24139]; R&D programme of the Community of
   Madrid [S2009/TIC-1650]
FX Work partially sponsored by the Spanish Ministry, under project "Go
   Lite" (TIN2011-24139) as well as by the R&D programme of the Community
   of Madrid, project "e-Madrid" (S2009/TIC-1650). We are grateful to the
   anonymous reviewers, who helped in improving previous versions of the
   paper.
CR [Anonymous], 2007, LNCS
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Balasubramanian Daniel, 2006, GRAPH REWRITING TRAN
   Bohl M., 2007, TOOLS STRUCTURED OBJ
   Boronat A, 2010, LECT NOTES COMPUT SC, V6013, P29, DOI 10.1007/978-3-642-12029-9_3
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   de Lara J., 2003, Bulletin of the European Association for Theoretical Computer Science, P180
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   de Lara J, 2010, LECT NOTES COMPUT SC, V6372, P266
   de Lara J, 2010, FORM ASP COMPUT, V22, P297, DOI 10.1007/s00165-009-0114-y
   Eckardt T., 2011, COMPUT SCI IN PRESS
   Rivera JE, 2009, LECT NOTES COMPUT SC, V5452, P54, DOI 10.1007/978-3-642-00434-6_5
   Edwards SA, 2003, SCI COMPUT PROGRAM, V48, P21, DOI 10.1016/S0167-6423(02)00096-5
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Ermel C., 2010, ECEASST, V32
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Fishman George S., 2001, SPRING S OPERAT RES, DOI 10.1007/978-1-4757-3552-9
   Gönczy L, 2007, ELECTRON NOTES THEOR, V175, P37, DOI 10.1016/j.entcs.2007.04.015
   Gyapay S, 2003, FUND INFORM, V58, P1
   Heckel R, 2006, FUND INFORM, V74, P63
   Kelly S., 2008, Domain-Specific Modeling
   Lambers L, 2006, LECT NOTES COMPUT SC, V4178, P61
   Lee E.A., 2007, Proceedings of the 7th ACM - IEEE international conference on Embedded software. EMSOFT '07, P114
   Lengyel L., 2006, IASTED C SOFTW ENG, P194
   Marsan M.A., 1995, MODELLING GEN STOCHA
   Mathaikutty DA, 2008, DES AUTOM EMBED SYST, V12, P1, DOI 10.1007/s10617-008-9012-4
   Naeem M, 2010, LECT NOTES COMPUT SC, V6013, P123, DOI 10.1007/978-3-642-12029-9_9
   NANCE RE, 1993, SIGPLAN NOTICES, V28, P149, DOI 10.1145/155360.155368
   Pegden CD, 2007, PROCEEDINGS OF THE 2007 WINTER SIMULATION CONFERENCE, VOLS 1-5, P2272
   PEGDEN CD, 1992, 1992 WINTER SIMULATION CONFERENCE PROCEEDINGS, P390, DOI 10.1145/167293.167390
   Repenning A, 2000, JASSS-J ARTIF SOC S, V3
   Rivera JE, 2010, LECT NOTES COMPUT SC, V6381, P174, DOI 10.1007/978-3-642-16310-4_12
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Schriber T. J., 1974, Simulation using GPSS
   Schriber TJ, 2010, WINT SIMUL C PROC, P151, DOI 10.1109/WSC.2010.5679165
   SCHRUBEN L, 1983, COMMUN ACM, V26, P957, DOI 10.1145/182.358460
   Strobl T., 2010, ECEASST, V29
   Syriani E, 2008, LECT NOTES COMPUT SC, V5088, P136
   Torrini P., 2010, ECEASST, V29
   VAUCHER JG, 1975, COMMUN ACM, V18, P223, DOI 10.1145/360715.360758
   Zeigler BP., 2000, Theory of Modeling and Simulation
NR 44
TC 5
Z9 7
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 209
EP 238
DI 10.1007/s10270-012-0242-3
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000012
DA 2024-07-18
ER

PT J
AU Castejón, HN
   von Bochmann, G
   Bræk, R
AF Castejon, Humberto Nicolas
   von Bochmann, Gregor
   Braek, Rolv
TI On the realizability of collaborative services
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service composition; Compositional specification of collaborations;
   Realizability of distributed implementations; Distributed system design;
   Design guidelines; Deriving component behavior from global
   specifications; Workflow for collaborations; UML activity diagrams;
   Service oriented architecture
ID RACE CONDITIONS; MODEL-CHECKING; SEQUENCE; SPECIFICATIONS
AB This paper considers compositional specifications of services using UML 2 collaborations, activity and interaction diagrams, and addresses the realizability problem for such specifications: given a global specification, can we construct a set of communicating system components whose joint behavior is precisely the specified global behavior? We approach the problem by looking at how the sequencing of collaborations and local actions may be described using UML activity diagrams. We identify the realizability problems for each of the sequencing operators, such as strong and weak sequence, choice of alternatives, loops, and concurrency. The nature of these realizability problems and possible solutions are discussed. This brings a new look at already known problems: we show that given some conditions, certain problems can already be detected at an abstract level, without looking at the detailed interactions of the collaborations, provided that we know the components that initiate and terminate the different collaborations.
C1 [von Bochmann, Gregor] Univ Ottawa, SITE, Ottawa, ON, Canada.
   [Castejon, Humberto Nicolas; Braek, Rolv] Norwegian Univ Sci & Technol, Dept Telemat, N-7034 Trondheim, Norway.
C3 University of Ottawa; Norwegian University of Science & Technology
   (NTNU)
RP Castejón, HN (corresponding author), Telenor ASA, Trandheim, Norway.
EM humberto.castejon@telenor.com; bochmann@site.uottawa.ca;
   rolv.braek@item.ntnu.no
OI Castejon, Humberto/0000-0002-6867-8235
FU Natural Sciences and Engineering Research Council of Canada
FX A preliminary version of this paper appeared in the proceedings of the
   14th Asia-Pacific Soft. Eng. Conf. (APSEC'07), IEEE Computer Society
   Press, pp. 73-80, 2007. This work was partially supported by a grant
   from the Natural Sciences and Engineering Research Council of Canada.
CR ABADI M, 1989, LECT NOTES COMPUT SC, V372, P1
   Alur R, 2005, THEOR COMPUT SCI, V331, P97, DOI 10.1016/j.tcs.2004.09.034
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Alur R, 1996, SOFTWARE-CONC TOOL, V17, P70
   ALUR R, 2000, P 22 INT C SOFTW ENG
   Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   [Anonymous], UML 2 2 SUP SPEC
   [Anonymous], 2007, P 16 INT C WORLD WID
   Baker P., 2005, P 10 EUR SOFTW ENG C, P50
   BAUDRU N, 2003, P ACIS 4 INT C SNDP, P210
   BENABDALLAH H, 1997, P 2 INT WORKSH TOOLS
   BOCHMANN GV, 1978, COMPUT NETWORKS ISDN, V2, P361, DOI 10.1016/0376-5075(78)90015-6
   Braek R., 1999, IFIP C P, V160
   Braek R., 1979, P INT SWITCH S ISS P
   BRAVETTI M, 2009, LNCS, V5387
   Broy M, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189753
   Castejon H.N., 2006, P 5 ICSE INT WORKSH
   Castejon H.N., 2009, DIRECT REALIZA UNPUB
   Castejon H.N., 2007, TECHNICAL REPORT
   Castejon H.N., 2008, THESIS NORWEGIAN U S
   Castejon H.N., 2006, LNCS, V4229
   Chen CA, 2005, LECT NOTES COMPUT SC, V3780, P195
   Decker G., 2007, P 5 INT C BUS PROC M
   Erl T., SERVICE ORIENTED ARC
   Fisler K., 2001, P 8 EUR SOFTW ENG C
   FOURNET C, 2004, LNCS, V3114
   Genest B, 2006, J COMPUT SYST SCI, V72, P617, DOI 10.1016/j.jcss.2005.09.007
   GOUDA MG, 1984, IEEE T COMMUN, V32, P779, DOI 10.1109/TCOM.1984.1096134
   Haugen O., 2006, 309 U OSL
   Helouet L., 2000, P 5 INT WORKSH FORM
   Helouet L., 2001, LNCS, V2078, P348
   IUT-T, 2000, SPEC DESCR LANG SDL
   IUT-T, 1998, MESS SEQ CHARTS MSC
   Kant C, 1996, DISTRIB COMPUT, V10, P29, DOI 10.1007/s004460050022
   Kathayat S.B., 2010, P ANN INT C SOFTW EN
   Kathayat S.B., 2011, LNCS, V6598
   Khendek F., 2005, LNCS, V3466
   Kraemer FA, 2009, J SYST SOFTWARE, V82, P2068, DOI 10.1016/j.jss.2009.06.057
   KRUGER I, 2003, LNCS, V2621
   Kruger I., 2003, LNCS, V3466
   Laamarti F., 2010, THESIS U OTTAWA
   Lohmann N., 2010, P 6 INT C WEB SERV F
   Lohrey M, 2003, THEOR COMPUT SCI, V309, P529, DOI 10.1016/j.tcs.2003.08.002
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Mitchell B, 2005, IEEE T SOFTWARE ENG, V31, P767, DOI 10.1109/TSE.2005.104
   MOOIJ A, 2006, LNCS, V4019
   MOOIJ AJ, 2005, LNCS, V3442
   Mousavi A., 2007, LNCS, V4767
   Mukund M., 2000, LNCS, V1877, P521
   Object Management Group, 2005, UML 2 0 SUP SPEC
   REENSKAUG T, 1992, J OBJECT-ORIENT PROG, V5, P27
   Reenskaug Trygve., 1995, Working With Objects: The Ooram Software Engineering Method
   Roohi N., 2011, INFORMATICA IN PRESS
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   von Bochmann G., 1986, Computer Communication Review, V16, P148, DOI 10.1145/1013812.18190
   von Bochmann G., 2008, P INT WORKSH MOD BAS
NR 56
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 597
EP 617
DI 10.1007/s10270-011-0216-x
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300012
DA 2024-07-18
ER

PT J
AU van der Aalst, WMP
   ter Hofstede, AHM
AF van der Aalst, W. M. P.
   ter Hofstede, A. H. M.
TI Workflow patterns put into context
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Workflow patterns; YAWL; Petri nets; Business process management
ID IDENTIFICATION; REPRESENTATION
AB In his paper "Approaches to Modeling Business Processes. A Critical Analysis of BPMN, Workflow Patterns and YAWL", Egon Borger criticizes the work of the Workflow Patterns Initiative in a rather provocative manner. Although the workflow patterns and YAWL are well established and frequently used, Borger seems to misunderstand the goals and contributions of the Workflow Patterns Initiative. Therefore, we put the workflow patterns and YAWL in their historic context. Moreover, we address some of the criticism of Borger by pointing out the real purpose of the workflow patterns and their relationship to formal languages (Petri nets) and real-life WFM/BPM systems.
C1 [van der Aalst, W. M. P.; ter Hofstede, A. H. M.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [van der Aalst, W. M. P.; ter Hofstede, A. H. M.] Queensland Univ Technol, Brisbane, Qld 4001, Australia.
C3 Eindhoven University of Technology; Queensland University of Technology
   (QUT)
RP van der Aalst, WMP (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM w.m.p.v.d.aalst@tue.nl; a.terhofstede@qut.edu.au
RI van der Aalst, Wil/G-1248-2011; ter Hofstede, Arthur/I-9787-2012
OI van der Aalst, Wil/0000-0002-0955-6940; ter Hofstede,
   Arthur/0000-0002-2730-0201
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Börger E, 2007, LECT NOTES COMPUT SC, V4801, P1
   Börger E, 2012, SOFTW SYST MODEL, V11, P305, DOI 10.1007/s10270-011-0214-z
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E., 1995, PROFESSIONAL COMPUTI
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Puhlmann F, 2009, LECT NOTES COMPUT SC, V5460, P64
   Rozinat A, 2009, DATA KNOWL ENG, V68, P834, DOI 10.1016/j.datak.2009.02.014
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell NC, 2007, THESIS QUEENSLAND U
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Ter Hofstede A.H. M., 2010, Modern business process automation: YAWL and its support environment, DOI DOI 10.1007/978-3-642-03121-2
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Van der Aalst WilM.P., 2002, P 4 WORKSHOP PRACTIC, V560, P1
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1901, P18
   VANDERAALST W, 1997, WORKFLOW MANAGEMENT
   Wohed P, 2009, INFORM SOFTWARE TECH, V51, P1187, DOI 10.1016/j.infsof.2009.02.002
   [No title captured]
   [No title captured]
NR 22
TC 20
Z9 21
U1 0
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 319
EP 323
DI 10.1007/s10270-012-0233-4
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Bibliowicz, A
   Dori, D
AF Bibliowicz, Arieh
   Dori, Dov
TI A graph grammar-based formal validation of object-process diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal system model; Object-process modeling; Graph transformation;
   Model verification
ID UML
AB Two basic requirements from a system's conceptual model are correctness and comprehensibility. Most modeling methodologies satisfy only one of these apparently contradicting requirements, usually comprehensibility, leaving aside problems of correctness and ambiguousness that are associated with expressiveness. Some formal modeling languages do exist, but in these languages a complete model of a complex system is fairly complicated to understand. Object-process methodology (OPM) is a holistic systems modeling methodology that combines the two major aspects of a system-structure and behavior-in one model, providing mechanisms to manage the complexity of the model using refinement-abstraction operations, which divide a complex system into many interconnected diagrams. Although the basic syntax and semantics of an OPM model are defined, they are incomplete and leave room for incorrect or ambiguous models. This work advances the formal definition of OPM by providing a graph grammar for creating and checking OPM diagrams. The grammar provides a validation methodology of the semantic and syntactic correctness of a single object-process diagram.
C1 [Bibliowicz, Arieh; Dori, Dov] Technion Israel Inst Technol, Fac Ind Engn & Management, IL-32000 Haifa, Israel.
   [Dori, Dov] MIT, Engn Syst Div, Dept Aeronaut & Astronaut, Cambridge, MA 02139 USA.
   [Dori, Dov] MIT, Sloan Business Sch, Cambridge, MA 02139 USA.
C3 Technion Israel Institute of Technology; Massachusetts Institute of
   Technology (MIT); Massachusetts Institute of Technology (MIT)
RP Bibliowicz, A (corresponding author), Technion Israel Inst Technol, Fac Ind Engn & Management, IL-32000 Haifa, Israel.
EM arbet@vainolo.com; dori@ie.technion.ac.il
OI Dori, Dov/0000-0002-2393-3124; Bibliowicz, Arieh/0000-0001-7640-7008
CR Bibliowicz A., 2008, THESIS TECHNION ISRA
   Breu R, 1997, LECT NOTES COMPUT SC, V1241, P344
   Bruel J.M., 1998, TRANSFORMING UML MOD
   CORRADINI A, 1997, HDB GRAPH GRAMMARS C, V1
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   Dori D, 2010, P 1 INT C MOD MAN EN, P147
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P287
   Ehrig H., 1997, HDB GRAPH GRAMMARS C, P247, DOI [10.1142/, DOI 10.1142/97898123847200004., DOI 10.1142/97898123847200004]
   Evans A, 1999, LECT NOTES COMPUT SC, V1618, P336
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Gogolla M., 1998, P PSMT 98 WORKSH PRE
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   HECKEL R, 1995, P C GRAPH TRANSF ITS
   JURJENS J., 2002, SAC, P1009
   Kobryn C., 2004, Software Systems Modeling, V3, P4
   Kong J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P492, DOI 10.1109/CMPSAC.2003.1245385
   Kuske S., 2001, Proceedings of the 4th International Conference on The Unified Modeling Language, Modeling Languages, Concepts, V2185, P241, DOI 10.1007/3-540-45441-1_19
   Kuske S, 2009, SOFTW SYST MODEL, V8, P403, DOI 10.1007/s10270-008-0101-4
   Mwaluseke G.W., 2001, UML FORMALISATION LI, DOI 10.1.1.119.9075
   Nestor A.O., MODELING LARGE COMPL, DOI 10.1.1.4.3347
   *OBJ MAN GROUP, 2003, UN MOD LANG UML 2 0
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Reinhartz-Berger I., 2005, BUSINESS SYSTEMS ANA
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Soffer P., 2001, Requirements Engineering, V6, P183, DOI 10.1007/PL00010359
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Storrle H., 2005, Software Engineering, P117
   Tchertchago A., 2002, FORMAL SEMANTICS UML
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   USA Department of Defense, 2009, DOD ARCH FRAM VERS 2
   Vanderperren Y, 2005, DES AUT TEST EUROPE, P716, DOI 10.1109/DATE.2005.319
   Wand Y., 1993, Journal of Information Systems, P217
   Ziemann P, 2005, ELECTRON NOTES THEOR, V127, P17, DOI 10.1016/j.entcs.2004.10.025
NR 33
TC 1
Z9 2
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 287
EP 302
DI 10.1007/s10270-011-0201-4
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300010
DA 2024-07-18
ER

PT J
AU van der Aalst, WMP
   Rubin, V
   Verbeek, HMW
   van Dongen, BF
   Kindler, E
   Günther, CW
AF van der Aalst, W. M. P.
   Rubin, V.
   Verbeek, H. M. W.
   van Dongen, B. F.
   Kindler, E.
   Gunther, C. W.
TI Process mining: a two-step approach to balance between underfitting and
   overfitting
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID PROCESS MODELS; PETRI NETS; DISCOVERY
AB Process mining includes the automated discovery of processes from event logs. Based on observed events (e.g., activities being executed or messages being exchanged) a process model is constructed. One of the essential problems in process mining is that one cannot assume to have seen all possible behavior. At best, one has seen a representative subset. Therefore, classical synthesis techniques are not suitable as they aim at finding a model that is able to exactly reproduce the log. Existing process mining techniques try to avoid such "overfitting" by generalizing the model to allow for more behavior. This generalization is often driven by the representation language and very crude assumptions about completeness. As a result, parts of the model are "overfitting" (allow only for what has actually been observed) while other parts may be "underfitting" (allow for much more behavior without strong support for it). None of the existing techniques enables the user to control the balance between "overfitting" and "underfitting". To address this, we propose a two-step approach. First, using a configurable approach, a transition system is constructed. Then, using the "theory of regions", the model is synthesized. The approach has been implemented in the context of ProM and overcomes many of the limitations of traditional approaches.
C1 [van der Aalst, W. M. P.; Verbeek, H. M. W.; van Dongen, B. F.; Gunther, C. W.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Rubin, V.] Software Design & Management sd&m AG, Offenbach, Germany.
   [Kindler, E.] Tech Univ Denmark, DK-2800 Lyngby, Denmark.
C3 Eindhoven University of Technology; Technical University of Denmark
RP van der Aalst, WMP (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM w.m.p.v.d.aalst@tue.nl; Vladimir.Rubin@sdm.de; h.m.w.verbeek@tue.nl;
   b.f.v.dongen@tue.nl; eki@imm.dtu.dk; c.w.gunther@tue.nl
RI Azonnoudo, Seyido/ISU-7505-2023; van Dongen, Boudewijn/C-2133-2011;
   Kindler, Ekkart/IAQ-0243-2023; van der Aalst, Wil/G-1248-2011
OI Kindler, Ekkart/0000-0003-3895-6297; van der Aalst,
   Wil/0000-0002-0955-6940; Verbeek, Eric/0000-0002-1658-9679; van Dongen,
   Boudewijn/0000-0002-3978-6464
CR Agrawal R, 1998, LECT NOTES COMPUT SC, V1377, P469
   Alves de Medeiros A.K., 2006, THESIS EINDHOVEN U T
   [Anonymous], BPM0630
   Badouel E, 1997, THEOR COMPUT SCI, V186, P107, DOI 10.1016/S0304-3975(96)00219-8
   Badouel E., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P529
   Bergenthum R, 2007, LECT NOTES COMPUT SC, V4714, P375
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cortadella J, 1997, IEICE T INF SYST, VE80D, P315
   Cortadella J, 1998, IEEE T COMPUT, V47, P859, DOI 10.1109/12.707587
   CORTADELLA J, 1995, P 1995 IEEE ACM INT, P164
   Datta A, 1998, INFORM SYST RES, V9, P275, DOI 10.1287/isre.9.3.275
   de Medeiros AKA, 2003, LECT NOTES COMPUT SC, V2888, P389
   Desel J, 1996, ACTA INFORM, V33, P297, DOI 10.1007/s002360050046
   Desel J., 1995, CAMBRIDGE TRACTS THE
   DESEL J, 2004, LECT NOTES COMPUTER, V3098
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   EHRENFEUCHT A, 1990, ACTA INFORM, V27, P315, DOI 10.1007/BF00264611
   Grigori D, 2004, COMPUT IND, V53, P321, DOI 10.1016/j.compind.2003.10.007
   Günther CW, 2006, LECT NOTES COMPUT SC, V4103, P81
   Herbst J, 2000, LECT NOTES ARTIF INT, V1810, P183
   *IDS SCHEER ARIS P, 2002, MEAS ANAL OPT YOUR B
   Kindler E, 2006, LECT NOTES COMPUT SC, V4103, P105
   Lorenz R, 2007, PROCEEDINGS OF THE 2007 WINTER SIMULATION CONFERENCE, VOLS 1-5, P616
   Lorenz R, 2007, INT CONF APPL CONCUR, P157, DOI 10.1109/ACSD.2007.34
   Reisig W., 1998, Lecture Notes in Computer Science, V1491
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Rozinat A, 2006, LECT NOTES COMPUT SC, V4102, P420
   Rozinat A, 2006, LECT NOTES COMPUT SC, V3812, P163
   SAYALM, 2002, P 28 INT C VER LARG, P880
   *TIBCO, 2005, TIBCO STAFFW PROC MO
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2007, LECT NOTES COMPUT SC, V4546, P484
   van der Aalst WMP, 2007, INFORM SYST, V32, P713, DOI 10.1016/j.is.2006.05.003
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3536, P48
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   van der Werf JMEM, 2008, LECT NOTES COMPUT SC, V5062, P368, DOI 10.1007/978-3-540-68746-7_24
   van Dongen B.F., 2005, PNCWB 2005 workshop, P35
   van Dongen BF, 2004, LECT NOTES COMPUT SC, V3288, P362
   Weijters AJMM, 2003, INTEGR COMPUT-AID E, V10, P151
   Wen L, 2007, DATA MIN KNOWL DISC, V15, P145, DOI 10.1007/s10618-007-0065-y
   ZURMUHLEN M, 2000, P 33 HAW INT C SYST, P1
NR 42
TC 208
Z9 224
U1 5
U2 37
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 87
EP 111
DI 10.1007/s10270-008-0106-z
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 526UZ
UT WOS:000272321500006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Pretschner, A
   Prenninger, WG
AF Pretschner, Alexander
   Prenninger, Wolfgang
TI Computing refactorings of state machines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
ID SYSTEMS; SPECIFICATIONS
AB For behavior models expressed in statechart-like formalisms, we show how to compute semantically equivalent yet structurally different models. These refactorings are defined by user-provided logical predicates that partition the system's state space and that characterize coherent parts - modes or control states - of the behavior. We embed the refactorings into an incremental development process that uses a combination of both tables and graphically represented state machines for describing systems.
C1 [Pretschner, Alexander] ETH, CH-8092 Zurich, Switzerland.
   [Prenninger, Wolfgang] BMW Grp, D-80788 Munich, Germany.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; BMW AG
RP Pretschner, A (corresponding author), ETH, CH-8092 Zurich, Switzerland.
EM Alexander.Pretschner@inf.ethz.ch
CR ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   Basin D, 2005, LECT NOTES COMPUT SC, V3582, P269
   Behm P, 1999, LECT NOTES COMPUT SC, V1708, P369
   BEINE M, 2004, PUBLICATION VEHICLE
   Bernard E, 2004, SOFTWARE PRACT EXPER, V34, P915, DOI 10.1002/spe.597
   Breitling M, 2000, LECT NOTES COMPUT SC, V1816, P11
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   CHENG Y, 2002, P INT S SOFTW TEST A, P164
   CORREA A, P 7 INT C UN MOD LAN, P173
   Dajani-Brown S, 2003, LECT NOTES COMPUT SC, V2648, P34
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Farchi E, 2002, IBM SYST J, V41, P89, DOI 10.1147/sj.411.0089
   FERRARI A, 2005, PUBLICATION SOFTWARE
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   HUBER F, 1997, LECT NOTES COMPUTER, V1313, P122
   Janicki R, 2001, IEEE T SOFTWARE ENG, V27, P577, DOI 10.1109/32.935852
   Jeffords R., 1998, Software Engineering Notes, V23, P56, DOI 10.1145/291252.288218
   LAMPORT L, 1995, IEEE T SOFTWARE ENG, V21, P768, DOI 10.1109/32.464544
   LYNCH N, 1992, LECT NOTES COMPUT SC, V600, P397, DOI 10.1007/BFb0032002
   Lynch Nancy A., 1987, PODC, P137
   MANNA Z, 1994, STANCSTR941518
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2003, ELECTRON NOTES THEOR, V82, P483, DOI [10.1016/S1571-0661(05)82624-6, DOI 10.1016/S1571-0661(05)82624-6]
   *MOST COOP, 2002, MOST SPEC REV 2 2
   PARNAS D, 1992, CRL260
   PARNAS D, 1995, SCI COMPUT PROGRAM, V1, P41
   Parnas DL, 1999, LECT NOTES COMPUT SC, V1579, P345
   Philipps J, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P203, DOI 10.1109/ICFEM.1997.630427
   Philipps J, 1999, LECT NOTES COMPUT SC, V1708, P96
   PHILIPPS J, 2003, ELEC NOTES THEORETIC, V80, P168
   Pretschner A, 2005, LECT NOTES COMPUT SC, V3713, P126, DOI 10.1007/11557432_10
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   PRETSCHNER A, 2004, J SOFTWARE TOOLS TEC, V5, P140, DOI DOI 10.1007/S10009-003-0128-3
   PROWELL S, 2003, IEEE TSE, V29, P1
   SHEN H, 1996, P 11 ANN C COMP ASS, P3
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   [No title captured]
   2006, FUNCTIONAL LOGIC LAN
NR 44
TC 5
Z9 6
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 381
EP 399
DI 10.1007/s10270-006-0037-5
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Röttger, S
   Zschaler, S
AF Roettger, Simone
   Zschaler, Steffen
TI Tool support for refinement of non-functional specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 7th Satellite Activities Conference on UML Modeling Languages and
   Applications
CY OCT 11-15, 2004
CL Lisbon, PORTUGAL
SP SINFIC, Springer, Mentor Graph, IBM, ACM SIGSOFT, IEEE Comp Soc, New Univ Lisbon, Turismo Lisboa, Object Management Grp
DE non-functional properties; model transformation; refinement; CASE tool
   support
ID FRAMEWORK
AB Model driven architecture (MDA) views application development as a continuous transformation of models of the target system. We propose a methodology which extends this view to non-functional properties. In previous publications we have shown how we can use so-called context models to make the specification of non-functional measurements independent of their application in concrete system specifications. We have also shown how this allows us to distinguish two roles in the development process: the measurement designer and the application designer.
   In this paper we use the notion of context models to allow the measurement designer to provide measurement definitions at different levels of abstraction. A measurement in our terminology is a non-functional dimension that can be constrained to describe a nonfunctional property. Requiring the measurement designer to define transformations between context models, and applying them to measurement definitions, enables us to provide tool support for refinement of nonfunctional constraints to the application designer. The paper presents the concepts for such tool support as well as a prototype implementation.
C1 [Roettger, Simone; Zschaler, Steffen] Tech Univ Dresden, Dresden, Germany.
C3 Technische Universitat Dresden
RP Röttger, S (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM Simone.Roettger@inf.tu-dresden.de; Steffen.Zschaler@inf.tu-dresden.de
RI Zschaler, Steffen/AAC-4911-2020
OI Zschaler, Steffen/0000-0001-9062-6637
CR Aagedal J., 2001, THESIS U OSLO
   AIGNER R, 2003, 16 INT C SOFTW SYST
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   BANDELOW D, 2004, ENTWICKLUNG EINER CQ
   BRUEL JM, 2003, P LEAD 1 INT WORKSH
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CLARK T, 2004, FDN LANGUAGE DRIVEN
   DEMAIRY E, 1999, 11 EUR C REAL TIM SY
   DIRCKZE R, 1999, JAVA METADATA INTERF
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GOKHALE A, 2002, P ACM OOPSLA 2002 WO
   HARTIG H, IN PRESS ENFORCEABLE
   Hussmann H, 2000, LECT NOTES COMPUT SC, V1939, P278
   *ISO IEC, 1998, 132361998 ISO IEC
   Issarny V, 1996, INT CON DISTR COMP S, P586, DOI 10.1109/ICDCS.1996.508009
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Malan R., 2001, Defining non functional requirements
   Matula M., 2003, Netbeans metadata repository
   MEDVIDOVIC N, 1997, P 6 EUR SOFTW ENG C, P60
   MEYER L, 2004, WERKZEUGUNTERSTUTZUN
   Meyerhöfer M, 2004, LECT NOTES COMPUT SC, V3054, P294
   *OBJ MAN GROUP, 2003, MET OBJ FAC SPEC
   *OBJ MAN GROUP, 2004, UML PROF MOD QUAL SE
   *OBJ MAN GROUP, 2003, UN MOD LANG SUP VERS
   Röttger S, 2004, LECT NOTES COMPUT SC, V3273, P275
   Rottger S., 2004, P IASTED INT C SOFTW
   Rottger Simone, CQML ENHANCEMENTS CQ, P43
   Sassen A.-M., 2002, AOSD EARL ASP WORKSH
   SHAW M, 1996, 3 INT CONF DISTR SYS
   SIMMONDS DM, MDA FRAMWORK MIDDLEW, P1
   Sommerville I, 2001, Software Engineering
   Stankovic JA, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P58, DOI 10.1109/RTTAS.2003.1203037
   TANNHAUSER F, 2003, KONZEPTION PROTOTYPI
   ZSCHALER S, 2004, P EUROMICRO C RENN I
NR 35
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2007
VL 6
IS 2
BP 185
EP 204
DI 10.1007/s10270-006-0024-x
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WR
UT WOS:000254667700005
DA 2024-07-18
ER

PT J
AU Misra, J
   Cook, WR
AF Misra, Jayadev
   Cook, William R.
TI Computation orchestration - A basis for wide-area computing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 2nd International Conference on Software Engineering and Formal Methods
CY SEP 28-30, 2004
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Tech Comm Complex Comp, UNU IIST, Peking Univ, Chinese Acad Sci, Acad Div
DE wide-area computing; web services; computation orchestration;
   distributed computing; process algebra; thread-based programming
AB The widespread deployment of networked applications and adoption of the internet has fostered an environment in which many distributed services are available. There is great demand to automate business processes and workflows among organizations and individuals. Solutions to such problems require orchestration of concurrent and distributed services in the face of arbitrary delays and failures of components and communication. We propose a novel approach, called Orc for orchestration, that supports a structured model of concurrent and distributed programming. This model assumes that basic services, like sequential computation and data manipulation, are implemented by primitive sites. Orc provides constructs to orchestrate the concurrent invocation of sites to achieve a goal - while managing time-outs, priorities, and failure of sites or communication.
C1 [Misra, Jayadev; Cook, William R.] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Misra, J (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM misra@cs.utexas.edu; cook@cs.utexas.edu
RI Cook, William/JFK-1866-2023
OI Cook, William/0000-0003-4918-8975
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0811536] Funding Source: National Science
   Foundation
CR [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   Benton N, 2004, ACM T PROGR LANG SYS, V26, P769, DOI 10.1145/1018203.1018205
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Cardelli L, 1999, IEEE T SOFTWARE ENG, V25, P309, DOI 10.1109/32.798321
   CARDELLI L, TRANSITIONS PROGRAMM
   Choi YR, 2002, LECT NOTES COMPUT SC, V2400, P1
   COOK WR, 2005, STRUCTURED ORCHESTRA
   Eriksson H., 2000, BUSINESS MODELING UM
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2472, P321
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2679, P296
   FLORES FF, 1986, INTELLECT BOOKS
   FOURNET C, 1996, P POPL
   Harel D., 1998, MODELING REACTIVE SY
   *HASKELL 98, 1999, NONSTR PUR FUNCT LAN
   Hoare C.A.R., 1984, Communicating Sequential Processes
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   HOARE T, 2004, NATO ASI SERIES
   *IBM BEA SYST MICR, BUS PROC EX LANG WEB
   JONES SP, 2000, P NATO ADV STUD I EN, P47
   KOZEN D, 1990, LECT NOTES COMPUT SC, V452, P26
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   MCCARTHY J, ELEPHANT 2000 PROGRA
   MENZEL G, 2004, IMPLEMENTATION ORC C
   Milner Robin., 1989, INT SERIES COMPUTER
   Misra J, 2004, NATO ASI SERIES
   Osgood Ian., 8 QUEENS MANY PROGRA
   Padget J., 1999, Agent Mediated Electronic Commerce. First International Workshop on Agent Mediated Electronic Trading. AMET-98. Selected Papers, P166
   Pierce BC, 2000, FOUNDAT COMPUT, P455
   REPPY JH, 1991, SIGPLAN NOTICES, V26, P293, DOI 10.1145/113446.113470
   Sangiorgi Davide, 2001, -calculus: A Theory of Mobile Processes
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   *WORLD WID WEB CON, 2001, XML ACT INF
NR 33
TC 78
Z9 85
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2007
VL 6
IS 1
BP 83
EP 110
DI 10.1007/s10270-006-0012-1
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WQ
UT WOS:000254667600006
DA 2024-07-18
ER

PT J
AU Michael, J
   Bork, D
   Wimmer, M
   Mayr, HC
AF Michael, Judith
   Bork, Dominik
   Wimmer, Manuel
   Mayr, Heinrich C.
TI Quo Vadis modeling?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Research communities; Software engineering; Software modeling; Data
   modeling; Process modeling; Information systems
ID SOFTWARE ENGINEERING BODY; SOCIAL NETWORK ANALYSIS; BIBLIOMETRIC
   ANALYSIS
AB Models are the key tools humans use to manage complexity in description, development, and analysis. This applies to all scientific and engineering disciplines and in particular to the development of software and data-intensive systems. However, different methods and terminologies have become established in the individual disciplines, even in the sub-fields of Informatics, which raises the need for a comprehensive and cross-sectional analysis of the past, present, and future of modeling research. This paper aims to shed some light on how different modeling disciplines emerged and what characterizes them with a discussion of the potential toward a common modeling future. It focuses on the areas of software, data, and process modeling and reports on an analysis of the research approaches, goals, and visions pursued in each, as well as the methods used. This analysis is based on the results of a survey conducted in the communities concerned, on a bibliometric study, and on interviews with a prominent representative of each of these communities. The paper discusses the different viewpoints of the communities, their commonalities and differences, and identifies possible starting points for further collaboration. It further discusses current challenges for the communities in general and modeling as a research topic in particular and highlights visions for the future.
C1 [Michael, Judith] Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
   [Bork, Dominik] TU Wien, Business Informat Grp, Vienna, Austria.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, CDL MINT, Linz, Austria.
   [Mayr, Heinrich C.] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
C3 RWTH Aachen University; Technische Universitat Wien; Johannes Kepler
   University Linz; University of Klagenfurt
RP Michael, J (corresponding author), Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
EM michael@se-rwth.de
RI Michael, Judith/AAE-2646-2022; Michael, Judith/S-2844-2016
OI Michael, Judith/0000-0002-4999-2544; Michael, Judith/0000-0002-4999-2544
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR adoxx, 2023, The ADOxx Metamodeling Plattform
   AI for Business Process Management (AI4BPM), 2023, about us
   [Anonymous], 2022, WORKSH ART INT MOD D
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   [Anonymous], 2000, Fundamentals of Database Systems
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Bork D., 2023, arXiv
   Bork D., 2023, arXiv, DOI [10.48550/arXiv.2303.06758, DOI 10.48550/ARXIV.2303.06758]
   Bork D., 2023, borkdominik/ModelingCommunities: online supplementary matrerial repository
   Bourque P, 1999, IEEE SOFTWARE, V16, P35, DOI 10.1109/52.805471
   Brambilla Marco, 2017, Modeldriven software engineering in practice, DOI 10.Engineeringin1007/978-3-031-02549-5
   Broy M., 2001, Specification and Development of Interactive Systems: Focus on Streams, Interfaces, and Refinement, DOI DOI 10.1007/978-1-4613-0091-5
   Burgueño L, 2019, SOFTW SYST MODEL, V18, P3193, DOI 10.1007/s10270-019-00746-9
   Cabot J., 2022, From models-to-code to models-to-prompts: The next MDE revolution?
   Cabot J, 2022, SOFTW SYST MODEL, V21, P2101, DOI 10.1007/s10270-022-01035-8
   Cabot J, 2018, COMMUN ACM, V61, P32, DOI 10.1145/3209580
   Cámara J, 2023, SOFTW SYST MODEL, V22, P781, DOI 10.1007/s10270-023-01105-5
   camunda, 2022, Introducing Camunda Platform 8. Design, automate, and improve any process across your organization
   Carmona J., 2018, Conformance checking: Relating processes and models, relating processes and models, DOI DOI 10.1007/978-3-319-99414-7
   Chakraborty T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3091106
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Colanzi TE, 2013, J SYST SOFTWARE, V86, P970, DOI 10.1016/j.jss.2012.07.041
   Conceptual Modeling Meets Artificial Intelligence (CMAI), 2021, about us
   Date C.J. E.F. Codd., 1974, P 1974 ACM SIGFIDET, P83
   De Carlo G, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P221, DOI 10.1145/3550355.3552412
   De Nart D, 2015, LECT NOTES COMPUT SC, V9146, P357, DOI 10.1007/978-3-319-20267-9_31
   Degueule T., 2015, P 8 INT C SOFTW LANG
   Delcambre LML, 2018, LECT NOTES COMPUT SC, V11157, P27, DOI 10.1007/978-3-030-00847-5_4
   Donthu N, 2021, J BUS RES, V133, P285, DOI 10.1016/j.jbusres.2021.04.070
   Dumas M., 2013, Fundamentals of Business Process Management, DOI [10.1007/978-3-642-33143-5, DOI 10.1007/978-3-642-33143-5]
   Embley D.W., 2012, Handbook of conceptual modeling: theory, practice, and research challenges
   Ferstl O. K., 2015, Grundlagen der Wirtschaftsinformatik
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Friedman J. H., 2017, The Elements of Statistical Learning: Data Mining,Inference, and Prediction
   Friedrich T., 2017, Towards Thought Leadership in Digital Transformation, V13
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Grundy J., 2020, ENASE, P229, DOI DOI 10.5220/0009806002290238
   GUARINO N., 1994, Philosophy and the Cognitive Science, P443
   Guerson J, 2015, IEEE INT ENTERP, P144, DOI 10.1109/EDOCW.2015.17
   Halpin T.Morgan., 2010, INFORM MODELING RELA, VSecond
   Hölldobler K, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.1.r1
   Holldobler K., 2021, MontiCore Language Workbench and Library Handbook: Edition 2021. Aachener Informatik-Berichte, Software Engineering, V48
   Kandjani H, 2013, LECT NOTES BUS INF P, V141, P452, DOI 10.1007/978-3-642-40654-6_27
   Karagiannis D., 2016, Domain-Specific Conceptual Modeling, P3, DOI [10.1007/978-3-319-39417-6, DOI 10.1007/978-3-319-39417-6]
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Katsikeas S, 2021, COMPUT SCI REV, V42, DOI 10.1016/j.cosrev.2021.100431
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation, DOI [10.1002/9780470249260, DOI 10.1002/9780470249260]
   Kent W., 1978, DATA REALITY
   Kofod-Petersen A, 2005, LECT NOTES ARTIF INT, V3946, P1
   Koren I., 2020, COMP P MOD 2020, V2542, P213
   Kramer F, 2014, FRONT ARTIF INTEL AP, V272, P224, DOI 10.3233/978-1-61499-472-5-224
   Krenn M, 2020, Arxiv, DOI arXiv:1906.06843
   Liu XM, 2005, INFORM PROCESS MANAG, V41, P1462, DOI 10.1016/j.ipm.2005.03.012
   Mäntylä MV, 2018, COMPUT SCI REV, V27, P16, DOI 10.1016/j.cosrev.2017.10.002
   Mayr HC, 2021, SOFTW SYST MODEL, V20, P7, DOI 10.1007/s10270-020-00836-z
   Metin H., 2023, P 26 INT C MOD DRIV
   Michael J, 2013, LECT NOTES COMPUT SC, V8217, P403, DOI 10.1007/978-3-642-41924-9_33
   MPS Meta Programming System, 2023, Create your own domain-specific language
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Otte E, 2002, J INF SCI, V28, P441, DOI 10.1177/016555150202800601
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   protege.stanford, 2023, A free, open-source ontology editor and framework for building intelligent systems
   research.webs, 2022, Human Factors in Modeling/Modeling of Human Factors (HuFaMo)
   Robinson S, 2015, WINT SIMUL C PROC, P2812, DOI 10.1109/WSC.2015.7408386
   Sciabolazza VL, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0182516
   Scott J, 2011, SOC NETW ANAL MIN, V1, P21, DOI 10.1007/s13278-010-0012-6
   Stachowiak H., 1973, Allgemeine Modelltheorie, DOI [10.1007/978-3-7091-8327-4, DOI 10.1007/978-3-7091-8327-4]
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Storm T., 2011, The Rascal Language Workbench
   Taylor R. W., 1976, Computing Surveys, V8, P67, DOI 10.1145/356662.356666
   Thalheim B., 2000, Entity-Relationship Modeling-Foundations of Database Technology, DOI [10.1007/978-3-662-04058-4, DOI 10.1007/978-3-662-04058-4]
   Thalheim B., 2015, Wissenschaft und Kunst der Modellierung, DOI [10.1515/9781501501234, DOI 10.1515/9781501501234]
   Thalheim B, 2018, ENTERP MODELLING INF, V13, P9
   The Eclipse Graphical Language Server Platform (GLSP), 2023, about us
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   Vernadat F, 2020, COMPUT IND, V122, DOI 10.1016/j.compind.2020.103265
   Welsh M, 2023, COMMUN ACM, V66, P34, DOI 10.1145/3570220
   Weske M, 2019, Business process management: concepts, languages, architectures, Vthird, P1, DOI [DOI 10.1007/978-3-662-59432-2, 10.1007/978-3-662-59432-2]
   Zaiane O.R., 2007, P 9 WEBKDD 1 SNA KDD, P74, DOI DOI 10.1145/1348549.1348558
   Zhang CC, 2013, BMC MED INFORM DECIS, V13, DOI 10.1186/1472-6947-13-52
NR 84
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 OCT 10
PY 2023
DI 10.1007/s12688-023-00620-z
EA OCT 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T9LI3
UT WOS:001081122100001
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Vick, C
   Kang, ES
   Tripakis, S
AF Vick, Cole
   Kang, Eunsuk
   Tripakis, Stavros
TI Counterexample classification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model checking; Formal modelling; debugging
ID AUTHENTICATION
AB In model checking, when a model fails to satisfy the desired specification, a typical model checker provides a counterexample that illustrates how the violation occurs. In general, there exist many diverse counterexamples that exhibit distinct violating behaviors, which the user may wish to examine before deciding how to repair the model. Unfortunately, (1) the number of counterexamples may be too large to enumerate one by one, and (2) many of these counterexamples are redundant, in that they describe the same type of violating behavior. In this paper, we propose a technique called counterexample classification. The goal of classification is to cover the space of all counterexamples into a finite set of counterexample classes, each of which describes a distinct type of violating behavior for the given specification. These classes are then presented as a summary of possible violating behaviors in the system, freeing the user from manually having to inspect or analyze numerous counterexamples to extract the same information. We have implemented a prototype of our technique on top of an existing formal modeling and verification tool, the Alloy Analyzer, and evaluated the effectiveness of the technique on case studies involving the well-known Needham-Schroeder and TCP protocols with promising results.
C1 [Vick, Cole] Univ Texas Austin, Austin, TX 78712 USA.
   [Kang, Eunsuk] Carnegie Mellon Univ, Pittsburgh, PA USA.
   [Tripakis, Stavros] Northeastern Univ, Boston, MA USA.
C3 University of Texas System; University of Texas Austin; Carnegie Mellon
   University; Northeastern University
RP Vick, C (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM cvick@cs.utexas.edu; eskang@cmu.edu; stavros@northeastern.edu
OI Vick, Cole/0000-0003-4436-8360
FU National Science Foundation under NSF SaTC award [CNS-1801546]
FX This work has been supported by the National Science Foundation under
   NSF SaTC award CNS-1801546.
CR Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Barrett C., 2016, The Satisfiability Modulo Theories Library (SMT-LIB)
   Beer I, 2009, LECT NOTES COMPUT SC, V5643, P94, DOI 10.1007/978-3-642-02658-4_11
   Chechik M, 2005, LECT NOTES COMPUT SC, V3442, P220, DOI 10.1007/978-3-540-31984-9_17
   Christiansen H, 2005, LECT NOTES COMPUT SC, V3668, P159, DOI 10.1007/11562931_14
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DENNING DE, 1981, COMMUN ACM, V24, P533, DOI 10.1145/358722.358740
   Dominguez A., 2013, GENERATING MULTIPLE
   Gomes CP., 2021, FRONTIERS ARTIFICIAL
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Hippel Max, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P133, DOI 10.1007/978-3-030-54549-9_9
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jhala R., 2018, HDB MODEL CHECKING, P447, DOI DOI 10.1007/978-3-319-10575-8_15
   Josephson SG., 1994, ABDUCTIVE INFERENCE, DOI [10.1017/CBO9780511530128, DOI 10.1017/CBO9780511530128]
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kakas A.C., 2001, IJCAI, P591, DOI DOI 10.1007/3-540-45402-0_29
   Kashyap S, 2008, LECT NOTES COMPUT SC, V5123, P491
   LOWE G, 1995, INFORM PROCESS LETT, V56, P131, DOI 10.1016/0020-0190(95)00144-2
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   Postel J., 1981, 793 RFC
   Shen SY, 2005, LECT NOTES COMPUT SC, V3385, P298
   Shlyakhter I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P94, DOI 10.1109/ASE.2003.1240298
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Song M, 2009, LECT NOTES BUS INF P, V17, P109
   Sulflow A., 2008, P 18 ACM GREAT LAKES, P77
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   Vick C, 2021, LECT NOTES COMPUT SC, V13085, P312, DOI 10.1007/978-3-030-92124-8_18
   Zeller A., 2021, DEBUGGING BOOK
NR 29
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2024
VL 23
IS 2
BP 455
EP 472
DI 10.1007/s10270-023-01118-0
EA JUL 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN0W0
UT WOS:001037111400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU van den Brand, M
AF van den Brand, Mark
TI A personal retrospective on language workbenches
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language engineering; DSLs; Programming environment generators; Language
   workbenches
AB Model-driven software engineering and specifically domain-specific languages have contributed to improve the quality of software and the efficiency in the development of software. However, the design and implementation of domain-specific languages requires still an enormous investment. Language workbenches are the most important tools in the field of software language engineering. The introduction of language workbenches has alleviated partly the development effort, but there are still a few major challenges that need to be tackled. This paper presents a personal perspective on the development of tools for language engineering and language workbenches in particular and future challenges to be tackled.
C1 [van den Brand, Mark] Eindhoven Univ Technol, Dept Math & Comp Sci, Groene Loper, NL-5612 AZ Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP van den Brand, M (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, Groene Loper, NL-5612 AZ Eindhoven, Netherlands.
EM m.g.j.v.d.brand@tue.nl
OI van den Brand, Mark/0000-0003-3529-6182
CR [Anonymous], 2015, LIPICS, DOI DOI 10.4230/LIPICS.RTA.2015.365
   Barais O, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P189, DOI 10.1109/ICSAW.2017.61
   Borras P., 1988, P SDE 3, P14
   Bovet J, 2008, SOFTWARE PRACT EXPER, V38, P1305, DOI 10.1002/spe.872
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Fowler M., 2010, Domain-specific languages
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Klint P, 2011, LECT NOTES COMPUT SC, V6491, P222, DOI 10.1007/978-3-642-18023-1_6
   Konat G., 2012, LNCS, P311, DOI [10.1007/978-3-642-36089-3_18, DOI 10.1007/978-3-642-36089]
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Lammel R., 2018, Software Languages: Syntax, Semantics, and Metaprogramming, DOI DOI 10.1007/978-3-319-90800-7
   Mooij AJ, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P662, DOI 10.1109/COMPSACW.2013.83
   Reps ThomasW., 1984, Generating language-based environments
   Schindler E., 2021, Domain-Specific Languages in Practice: with JetBrains MPS, P53
   Tikhonova U., CEUR WORKSHOP P
   Tikhonova U, 2019, SOFTW SYST MODEL, V18, P691, DOI 10.1007/s10270-017-0590-0
   Van Den Brand M., 1996, ACM Transactions on Software Engineering and Methodology, V5, P1, DOI 10.1145/226155.226156
   van den Brand M., 1996, Algebraic Methodology and Software Technology. 5th International Conference, AMAST '96. Proceedings, P9, DOI 10.1007/BFb0014303
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   Van Wyk E, 2008, ELECTRON NOTES THEOR, V203, P103, DOI 10.1016/j.entcs.2008.03.047
   vanden Brand M.G.J., 1992, THESIS RADBOUD U NIJ
   Verano merino Mauricio, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P61, DOI 10.1145/3567512.3567518
   Visser Eelco, 1997, Syntax Definition for Language Prototyping
   Voelter M, 2013, DSL ENG DESIGNING IM
   Voelter Markus., 2011, GENERATIVE TRANSFORM, P383, DOI [10.1007/978-3-642-35992-7_11, DOI 10.1007/978-3-642-35992-7_11]
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
NR 28
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 847
EP 850
DI 10.1007/s10270-023-01101-9
EA MAR 2023
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000956212900002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yigitbas, E
   Gorissen, S
   Weidmann, N
   Engels, G
AF Yigitbas, Enes
   Gorissen, Simon
   Weidmann, Nils
   Engels, Gregor
TI Design and evaluation of a collaborative UML modeling environment in
   virtual reality
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Collaborative modeling; Virtual reality; UML
AB Modeling is a key activity in conceptual design and system design. Through collaborative modeling, end-users, stakeholders, experts, and entrepreneurs are able to create a shared understanding of a system representation. While the Unified Modeling Language (UML) is one of the major conceptual modeling languages in object-oriented software engineering, more and more concerns arise from the modeling quality of UML and its tool-support. Among them, the limitation of the two-dimensional presentation of its notations and lack of natural collaborative modeling tools are reported to be significant. In this paper, we explore the potential of using virtual reality (VR) technology for collaborative UML software design by comparing it with classical collaborative software design using conventional devices (desktop PC/laptop). For this purpose, we have developed a VR modeling environment that offers a natural collaborative modeling experience for UML Class Diagrams. Based on a user study with 24 participants, we have compared collaborative VR modeling with conventional modeling with regard to efficiency, effectiveness, and user satisfaction. Results show that the use of VR has some disadvantages concerning efficiency and effectiveness, but the user's fun, the feeling of being in the same room with a remote collaborator, and the naturalness of collaboration were increased.
C1 [Yigitbas, Enes; Gorissen, Simon; Weidmann, Nils; Engels, Gregor] Paderborn Univ, Zukunftsmeile 2, D-33102 Paderborn, Germany.
C3 University of Paderborn
RP Yigitbas, E (corresponding author), Paderborn Univ, Zukunftsmeile 2, D-33102 Paderborn, Germany.
EM enes@mail.upb.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2022, SPATIAL
   [Anonymous], 2020, GENM
   Arif A.S., 2021, BRIEF NOTE SELECTING
   Badreddin O, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P245, DOI 10.1145/3239372.3239389
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barnum C.M., 2010, Usability Testing Essentials
   Boulila N., 2002, LECT NOTES INFORM
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Brown R., 2010, P 16 AM C INF SYST S, P1
   Brunschwig L, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P56, DOI 10.1109/ICSE-NIER52604.2021.00020
   Casey Ken, 2003, P 2 INT C PRINCIPLES, P63
   Chen WQ, 2006, INTERACT LEARN ENVIR, V14, P233, DOI 10.1080/10494820600909165
   Dengel A, 2018, PR IEEE INT CONF TEA, P1107, DOI 10.1109/TALE.2018.8615288
   Erickson J., 2003, 9 AMERICAS C INFORM, P164
   Exit Games, 2021, EXIT GAMES PUN PLAYE
   Ferenc M, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P99, DOI 10.1109/VISSOFT.2017.19
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1723, P489
   Google LLC, 2021, GOOGL FORMS
   Gottschalk Sebastian, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P207, DOI 10.1007/978-3-030-64266-2_14
   Gottschalk Sebastian, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P84, DOI 10.1007/978-3-030-64266-2_5
   Greenwald ScottW., 2017, 12th International Conference on Computer Supported Collaborative Learning (CSCL), P1
   Herpieh F, 2014, SYMP VIRTUAL AUGMENT, P118, DOI 10.1109/SVR.2014.36
   Huotari K, 2017, ELECTRON MARK, V27, P21, DOI 10.1007/s12525-015-0212-z
   Jovanovikj Ivan, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P216, DOI 10.1007/978-3-030-64266-2_15
   Krings S., 2020, Companion Proceedings of the 12th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, DOI DOI 10.1145/3393672.3398640
   Leyer M, 2019, LECT NOTES COMPUT SC, V11483, P415, DOI 10.1007/978-3-030-21290-2_26
   LucidSoftware Inc, 2020, LUC
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Maletic Jonathan I., 2001, Proceedings of ICSE'01 Workshop on Software Visualization, P12
   Manakhov P., 2016, P 2016 CHI C HUM FAC
   McIntosh Paul, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P85, DOI 10.1109/ASWEC.2010.14
   Microsoft, 2022, ALTSP
   Microsoft, 2021, VIS ULT TOOL DIAGR
   Mikkelsen A, 2017, 9TH INTERNATIONAL CONFERENCE ON MANAGEMENT OF EMERGENT DIGITAL ECOSYSTEMS (MEDES 2017), P121, DOI 10.1145/3167020.3167039
   Oberhauser R, 2018, LECT NOTES BUS INF P, V319, P83, DOI 10.1007/978-3-319-94214-8_6
   Parong J, 2018, J EDUC PSYCHOL, V110, P785, DOI 10.1037/edu0000241
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pöhler L, 2020, LECT NOTES BUS INF P, V391, P375, DOI 10.1007/978-3-030-52306-0_27
   Radfelder O., 2000, Proceedings of the working conference on Advanced visual interfaces, P292
   Renger Michiel, 2008, International Journal of Simulation & Process Modelling, V4, P248, DOI 10.1504/IJSPM.2008.023686
   Reuter R, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7798
   Rodrigues CSC, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P451, DOI 10.1145/2889160.2889199
   Sauro Jef, 2011, A Practical Guide to the System Usability Scale: Background, Benchmarks, and Best Practices
   Seiger R, 2021, SOFTW SYST MODEL, V20, P1465, DOI 10.1007/s10270-020-00859-6
   TheCampfire Union, 2022, VRKEYS
   Unity Technologies, 2021, UN ENG
   von Pilgrim J, 2009, INFORM VISUAL, V8, P107, DOI 10.1057/ivs.2009.9
   von Pilgrim J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P95
   Walsh K.R., 2002, Communications of the Associations of the Information Systems, V8 issue1, p, P20, DOI DOI 10.17705/1CAIS.00820
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Yigitbas Enes, 2020, VRST '20: 26th ACM Symposium on Virtual Reality Software and Technology, DOI 10.1145/3385956.3422106
   Yigitbas Enes, 2020, MuC'20: Proceedings of the Conference on Mensch und Computer, P505, DOI 10.1145/3404983.3410419
   Yigitbas E., 2021, EICS 21 ACM SIGCHI S
   Yigitbas E., 2021, ARXIV
   Yigitbas E., 2022, P 25 INT C MODEL DRI
   Yigitbas E., 2022, DEV EVALUATION COLLA
   Yigitbas E, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P261, DOI 10.1109/MODELS50736.2021.00034
   Yigitbas E, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P30, DOI 10.1109/SEAMS51251.2021.00015
   Yigitbas E, 2020, LECT NOTES COMPUT SC, V11930, P107, DOI 10.1007/978-3-030-46540-7_11
   Zenner A, 2020, IEEE T VIS COMPUT GR, V26, P2104, DOI 10.1109/TVCG.2020.2973476
   Zhang B., 2005, P 38 ANN HAW INT C S
NR 62
TC 2
Z9 2
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1397
EP 1425
DI 10.1007/s10270-022-01065-2
EA NOV 2022
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000885400900001
PM 36438014
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Cámara, J
   Troya, J
   Vallecillo, A
   Bencomo, N
   Calinescu, R
   Cheng, BHC
   Garlan, D
   Schmerl, B
AF Camara, Javier
   Troya, Javier
   Vallecillo, Antonio
   Bencomo, Nelly
   Calinescu, Radu
   Cheng, Betty H. C.
   Garlan, David
   Schmerl, Bradley
TI The uncertainty interaction problem in self-adaptive systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Uncertainty; Modeling; Self-adaptation; Assurances
AB The problem of mitigating uncertainty in self-adaptation has driven much of the research proposed in the area of software engineering for self-adaptive systems in the last decade. Although many solutions have already been proposed, most of them tend to tackle specific types, sources, and dimensions of uncertainty (e.g., in goals, resources, adaptation functions) in isolation. A special concern are the aspects associated with uncertainty modeling in an integrated fashion. Different uncertainties are rarely independent and often compound, affecting the satisfaction of goals and other system properties in subtle and often unpredictable ways. Hence, there is still limited understanding about the specific ways in which uncertainties from various sources interact and ultimately affect the properties of self-adaptive, software-intensive systems. In this SoSym expert voice, we introduce the Uncertainty Interaction Problem as a way to better qualify the scope of the challenges with respect to representing different types of uncertainty while capturing their interaction in models employed to reason about self-adaptation. We contribute a characterization of the problem and discuss its relevance in the context of case studies taken from two representative application domains. We posit that the Uncertainty Interaction Problem should drive future research in software engineering for autonomous and self-adaptive systems, and therefore, contribute to evolving uncertainty modeling towards holistic approaches that would enable the construction of more resilient self-adaptive systems.
C1 [Camara, Javier; Troya, Javier; Vallecillo, Antonio] Univ Malaga, ITIS Software, Malaga, Spain.
   [Bencomo, Nelly] Univ Durham, Dept Comp Sci, Durham, England.
   [Calinescu, Radu] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Cheng, Betty H. C.] Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
   [Garlan, David; Schmerl, Bradley] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
C3 Universidad de Malaga; Durham University; University of York - UK;
   Michigan State University; Carnegie Mellon University
RP Cámara, J (corresponding author), Univ Malaga, ITIS Software, Malaga, Spain.
EM jcamara@uma.es; jtroya@uma.es; av@uma.es; nelly.bencomo@durham.ac.uk;
   radu.calinescu@york.ac.uk; chengb@msu.edu; garlan@cs.cmu.edu;
   schmerl@cs.cmu.edu
RI Vallecillo, Antonio/B-1884-2014; Bencomo, Nelly/GZL-1379-2022
OI Vallecillo, Antonio/0000-0002-8139-9986; Calinescu,
   Radu/0000-0002-2678-9260
FU Assuring Autonomy International Programme project "Ambient Assisted
   Living for Long-term Monitoring and Interaction Integration"; European
   Commission (FEDER); Junta de Andalucia [US-1264651, P20-00067-FR,
   P18-FR-2895]; Spanish Government (FEDER/Ministerio de Ciencia e
   Innovacion-Agencia Estatal de Investigacion) [PGC2018-094905-B-I00];
   FundacAo para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) through the Carnegie Mellon Portugal Program
   [SFRH/BD/150643/2020, POCI-01-0247-FEDER-045915,
   POCI-01-0247-FEDER-045907]; NASA [80NSSC20K1720]; EPSRC Research Project
   Twenty20Insight [EP/T017627/1]; National Science Foundation
   [DBI-0939454]; Ford Motor Company; General Motors Research; ZF; Air
   Force Research Laboratory (AFRL) [FA8750-16-2-0284, FA8750-19-2-0002];
   EPSRC [EP/T017627/2] Funding Source: UKRI; SPF [EP/V026747/1] Funding
   Source: UKRI
FX This work was partially supported by the Assuring Autonomy International
   Programme project "Ambient Assisted Living for Long-term Monitoring and
   Interaction Integration," the European Commission (FEDER) and Junta de
   Andalucia under projects APOLO (US-1264651), MBT-I4A (P20-00067-FR) and
   EKIPMENT-PLUS (P18-FR-2895), by the Spanish Government (FEDER/Ministerio
   de Ciencia e Innovacion-Agencia Estatal de Investigacion) under project
   COSCA (PGC2018-094905-B-I00), by FundacAo para a Ciencia e a Tecnologia
   (Portuguese Foundation for Science and Technology) through the Carnegie
   Mellon Portugal Program under Grant SFRH/BD/150643/2020, projects
   (POCI-01-0247-FEDER-045915, POCI-01-0247-FEDER-045907), by NASA (Award
   80NSSC20K1720). Bencomo's work has been sponsored by the EPSRC Research
   Project Twenty20Insight (Grant No. EP/T017627/1). Cheng's work has been
   sponsored by National Science Foundation (DBI-0939454), Ford Motor
   Company, General Motors Research, and ZF; and the research has also been
   sponsored by Air Force Research Laboratory (AFRL) under agreement
   numbers FA8750-16-2-0284 and FA8750-19-2-0002. The U.S. Government is
   authorized to reproduce and distribute reprints for Governmental
   purposes notwithstanding any copy-right notation thereon. The views and
   conclusions contained herein are those of the authors and should not be
   interpreted as necessarily representing the official policies or
   endorsements, either expressed or implied, of Air Force Research
   Laboratory (AFRL), the U.S. Government, National Science Foundation,
   Ford, GM, ZF, or other research sponsors.
CR Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bekiroglu K, 2021, INT J CONTROL, V94, P2318, DOI 10.1080/00207179.2019.1706101
   Bencomo N, 2015, INT REQUIR ENG CONF, P236, DOI 10.1109/RE.2015.7320429
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Bertoa MF, 2020, SOFTW SYST MODEL, V19, P1163, DOI 10.1007/s10270-019-00741-0
   bipm, JCGM 1002008 2008 EV
   Burgueno L., 2022, ACM T SOFTW ENG METH
   Camara J., 2013, REVISED SELECTED INV, V9640, P154
   Cámara J, 2018, SCI COMPUT PROGRAM, V167, P51, DOI 10.1016/j.scico.2018.07.002
   Cheng BHC, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P1, DOI 10.1109/CMSBSE.2013.6604427
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng S.W., 2007, P IWLU ASE 07
   Critch A., CREDENCE USING SUBJE
   DeMarco T, 1986, CONTROLLING SOFTWARE
   DeVries, 2021, 16 INT S SOFTWARE EN
   DeVries B, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P94, DOI 10.1145/3194133.3194141
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Famelis M, 2019, SOFTW SYST MODEL, V18, P1249, DOI 10.1007/s10270-017-0594-9
   Feller W., 1991, An introduction to probability theory and its applications, V2
   Giese Holger, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P47
   Hao JW, 2021, IEEE INT CONF CLOUD, P398, DOI 10.1109/CLOUD53861.2021.00053
   Hezavehi SM, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3487921
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Josang A, 2016, ARTIF INTELL-FOUND, P1, DOI 10.1007/978-3-319-42337-1
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kinneer C, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3440119
   Langford MA, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3460959
   Langford MA, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P115, DOI 10.1109/ICAC.2019.00023
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Moreno GA, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P51, DOI 10.1145/3194133.3194144
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Oberkampf WL, 2002, RELIAB ENG SYST SAFE, V75, P333, DOI 10.1016/S0951-8320(01)00120-X
   Oquendo F, 2019, 2019 14TH ANNUAL CONFERENCE SYSTEM OF SYSTEMS ENGINEERING (SOSE), P131, DOI [10.1109/sysose.2019.8753842, 10.1109/SYSOSE.2019.8753842]
   Paterson C, 2020, IEEE T SOFTWARE ENG, V46, P526, DOI 10.1109/TSE.2018.2864159
   Perez-Palacin D., 2014, UNCERTAINTIES MODELI, P3, DOI [10.1145/2568088.2568095, DOI 10.1145/2568088.2568095]
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Rausand M., 2013, RISK ASSESSMENT O, V1229, P91003
   Russell Stuart J., 2010, Artificial Intelligence: A Modern Approach, V3rd
   Samin H, 2022, SOFTW SYST MODEL, V21, P2213, DOI 10.1007/s10270-021-00956-0
   Schmerl Bradley R., 2014, P HOTSOS 14, P2
   Seely AJE, 2004, CRIT CARE, V8, pR367, DOI 10.1186/cc2948
   Thunnissen DanielP., 2003, 3rd annual predictive methods conference, P1
   Troya J, 2021, SOFTW SYST MODEL, V20, P1183, DOI 10.1007/s10270-020-00842-1
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Zimmermann H.-J., 2001, Fuzzy Set Theory-and Its Applications, DOI DOI 10.1007/978-94-010-0646-0
NR 47
TC 12
Z9 12
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1277
EP 1294
DI 10.1007/s10270-022-01037-6
EA AUG 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000842576300001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Cabot, J
   Vallecillo, A
AF Cabot, Jordi
   Vallecillo, Antonio
TI Modeling should be an independent scientific discipline
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling; Abstraction; Discipline; Transdisciplinarity; Science;
   Engineering
AB Software modeling started as a paradigm to help developers build better software faster by enabling them to specify, reason and manipulate software systems at a higher-abstraction level while ignoring irrelevant low-level technical details. But this same principle manifests in any other domain that has to deal with complex systems, software-based or not. We argue that bringing to other engineering and scientific fields, our modeling expertise is a win-win opportunity where we can all learn from each other as we all model, but in complementary ways. Nevertheless, to fully unleash the benefits of this collaboration, we must go beyond individual efforts trying to adapt single techniques from one field to another. It requires a deeper reformulation of modeling as a whole. It is time for modeling to become an independent discipline where all fields of knowledge can contribute and benefit from.
C1 [Cabot, Jordi] Univ Oberta Catalunya, ICREA, Barcelona, Spain.
   [Vallecillo, Antonio] Univ Malaga, ITIS Software, Malaga, Spain.
C3 ICREA; UOC Universitat Oberta de Catalunya; Universidad de Malaga
RP Cabot, J (corresponding author), Univ Oberta Catalunya, ICREA, Barcelona, Spain.
EM jordi.cabot@icrea.cat; av@lcc.uma.es
RI Cabot, Jordi/P-7723-2015; Vallecillo, Antonio/B-1884-2014
OI Vallecillo, Antonio/0000-0002-8139-9986
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Aho A, 2022, COMMUN ACM, V65, P76, DOI 10.1145/3490685
   [Anonymous], 2011, The Wall Street Journal
   Barisic A, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111081
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Booch G, 2018, IEEE SOFTWARE, V35, P108, DOI 10.1109/MS.2018.3571234
   Bronowski J., 1973, ASCENT MAN
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burgueño L, 2019, SOFTW SYST MODEL, V18, P3193, DOI 10.1007/s10270-019-00746-9
   Cabot J., 2020, P 23 ACM IEEE INT C, P1
   Cabot J, 2011, COMPUT SCI EDUC, V21, P389, DOI 10.1080/08993408.2011.630131
   Cabot J, 2016, LECT NOTES COMPUT SC, V9975, P207, DOI 10.1007/978-3-319-47717-6_18
   Clerx M, 2020, J INTEGR BIOINFORMAT, V17, DOI 10.1515/jib-2020-0021
   Cohen E.B., 2014, International Journal of an Emerging Transdiscipline, V17, P189
   Combemale B, 2021, IEEE SOFTWARE, V38, P71, DOI 10.1109/MS.2020.2995125
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Di Ruscio D, 2022, SOFTW SYST MODEL, V21, P437, DOI 10.1007/s10270-021-00970-2
   Easterbrook S., 2015, ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems (MODELS'15), P1, DOI [10.1109/MODELS.2015.7338227, DOI 10.1109/MODELS.2015.7338227]
   France RB, 2012, PROC INT CONF SOFTW, P1471, DOI 10.1109/ICSE.2012.6227059
   Kirchhof J.C., 2020, P 23 ACM IEEE INT C, P90, DOI 10.1145/3365438.3410941
   Kramer J, 2007, COMMUN ACM, V50, P37
   Krishnan A., 2009, NCRM Working Paper Series, V03/09
   Bui TMA, 2019, BMC BIOINFORMATICS, V20, DOI 10.1186/s12859-019-2843-0
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Solís B, 2022, WATER RES, V215, DOI 10.1016/j.watres.2022.118223
   Thalheim B, 2022, SOFTW SYST MODEL, V21, P9, DOI 10.1007/s10270-021-00954-2
   Vangheluwe H., 2002, AI, P9
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Zhidchenko V., 2018, Journal of Physics: Conference Series, V1096, DOI 10.1088/1742-6596/1096/1/012071
NR 32
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2101
EP 2107
DI 10.1007/s10270-022-01035-8
EA AUG 2022
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000835610400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Martins, BF
   Gil, LJS
   Román, JFR
   Panach, JI
   Pastor, O
   Hadad, M
   Rochwerger, B
AF Franco Martins, Beatriz
   Serrano Gil, Lenin Javier
   Reyes Roman, Jose Fabian
   Ignacio Panach, Jose
   Pastor, Oscar
   Hadad, Moshe
   Rochwerger, Benny
TI A framework for conceptual characterization of ontologies and its
   application in the cybersecurity domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Ontology classification; Cybersecurity ontology;
   Ontology
ID FORMAL ONTOLOGY; PRINCIPLES; LANGUAGES
AB Organizations are actively seeking efficient solutions for the management and protection of their assets. However, Cybersecurity is a vast and complex domain, especially for large enterprises because it requires an interdisciplinary approach. Knowledge Graphs are one of the mechanisms that organizations use to explore security among assets and possible attacks. The grounding of concepts is fundamental to implementing Knowledge Graphs, and it is one of the most relevant ontology applications. Therefore, Cybersecurity Ontologies have emerged as an important research subject. The first contribution of this paper is a search for previously existing works that have defined Cybersecurity Ontologies. We found twenty-eight ontologies in this search. Based on this result, we propose a Cybersecurity Terminological Validation and a Framework for Classifying Ontologies. Then, we provide a cross-analysis of these two proposals and present a proposal of best practices for improving the ontological approach in the cybersecurity domain. We also discuss the impact of this proposal with regard to the Ontology Engineering process. Our goal is to provide a solution that meets the organization's needs in terms of Cybersecurity and to contribute to Ontology Engineering research.
C1 [Franco Martins, Beatriz; Serrano Gil, Lenin Javier; Reyes Roman, Jose Fabian; Pastor, Oscar] Univ Politecn Valencia, Valencian Res Inst Artificial Intelligence VRAIN, Camino Vera S-N, Valencia 46022, Spain.
   [Serrano Gil, Lenin Javier] Univ Pontificia Bolivariana, Ingn Sistemas & Informat, Km 7 Via Bucaramanga, Santander, Colombia.
   [Ignacio Panach, Jose] Univ Valencia, Escola Tecn Super dEngn, Avinguda Univ, Valencia 46100, Spain.
   [Hadad, Moshe; Rochwerger, Benny] Accenture Israel Cyber R&D Lab, Tel Aviv, Israel.
C3 Universitat Politecnica de Valencia; Universidad Pontificia Bolivariana;
   University of Valencia
RP Martins, BF; Pastor, O (corresponding author), Univ Politecn Valencia, Valencian Res Inst Artificial Intelligence VRAIN, Camino Vera S-N, Valencia 46022, Spain.
EM bmartins@pros.upv.es; lserrano@pros.upv.es; jreyes@pros.upv.es;
   joigpana@uv.es; opastor@dsic.upv.es; moshe.hadad@accenture.com;
   benny.rochwerger@accenture.com
RI Hadad, Moshe/JQI-1218-2023; Pastor Lopez, Oscar/S-4216-2016
OI Panach Navarrete, Jose Ignacio/0000-0002-7043-6227; Franco Martins,
   Beatriz/0000-0001-9190-1047; Serrano Gil, Lenin
   Javier/0000-0002-1631-7139; Pastor Lopez, Oscar/0000-0002-1320-8471
FU Accenture LTD (Accenture Labs, Tel Aviv, Israel); Spanish State Research
   Agency under the projects "Digital Knowledge Graph - Adaptable Analytics
   API"; ERDF; European Union NextGenerationEU/PRTR
FX This work has been developed with the financial support of the Accenture
   LTD (Accenture Labs, Tel Aviv, Israel) and Spanish State Research Agency
   under the projects "Digital Knowledge Graph - Adaptable Analytics API"
   and MICIN/AEI/10.13039/501100011033 and co-financed with ERDF and the
   European Union NextGenerationEU/PRTR.
CR Agrawal V., 2016, HAISA
   Almeida J P. A., 2019, gUFO: A Lightweight Implementation of the Unified Foundational Ontology
   Almeida JPA, 2013, COMPUT STAND INTER, V35, P257, DOI 10.1016/j.csi.2012.01.007
   [Anonymous], 2005, Ontological foundations for structural conceptual models
   [Anonymous], 2018, ISO/IEC 27005:2018 Information technology-Security techniques-Information security risk management
   [Anonymous], 2011, 270052011 ISOIEC
   [Anonymous], 2018, ISO/IEC 27000:2018
   Babiceanu RF, 2017, STUD COMPUT INTELL, V694, P167, DOI 10.1007/978-3-319-51100-9_15
   Ben-Asher N., 2015, Stids, P34
   Benevides AB, 2009, LECT NOTES BUS INF P, V24, P528
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Blanco C, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P813, DOI 10.1109/ARES.2008.33
   Booth H., 2016, FRAMEWORK CHARACTERI
   Borgo S, 2010, THEORY AND APPLICATIONS OF ONTOLOGY: COMPUTER APPLICATIONS, P279, DOI 10.1007/978-90-481-8847-5_13
   Borst WN., 1997, Construction of engineering ontologies for knowledge sharing and reuse"
   de Almeida Falbo Ricardo, 2009, International Journal of Business Process Integration and Management, V4, P239, DOI 10.1504/IJBPIM.2009.032281
   deAlmeidaFalbo R., 2014, CEUR WORKSHOP PROC, V1301
   Degen W., 2001, Formal Ontology in Information Systems. Collected Papers from the Second International Conference, P34, DOI 10.1145/505168.505173
   Duarte BB, 2018, LECT NOTES COMPUT SC, V11157, P349, DOI 10.1007/978-3-030-00847-5_25
   Duarte BB, 2016, FRONT ARTIF INTEL AP, V283, P255, DOI 10.3233/978-1-61499-660-6-255
   Elnagdy SA, 2016, 2016 IEEE 3RD INTERNATIONAL CONFERENCE ON CYBER SECURITY AND CLOUD COMPUTING (CSCLOUD), P301, DOI 10.1109/CSCloud.2016.45
   Fensel Dieter., 2001, ONTOLOGIES ONTOLOGIE, P11, DOI DOI 10.1007/978-3-662-04396-7_2
   Fernandez M., 1997, Methontology: From ontological art towards ontological engineering
   Gailly F., 2009, INT WORKSH ONT DRIV
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gasmi H, 2019, 2019 INTERNATIONAL CONFERENCE ON CYBER SECURITY FOR EMERGING TECHNOLOGIES (CSET), DOI 10.1109/cset.2019.8904905
   Gerth J., 2015, P 10 ANN CYB INF SEC, P1, DOI DOI 10.1145/2746266.2746278
   Giunchiglia F., 2007, Lightweight Ontologies
   Gómez-Pérez A, 2002, IEEE INTELL SYST, V17, P54, DOI 10.1109/5254.988453
   Gomez-Perez A., 2004, Ontological Engineering, V2nd, P1
   Grégio A, 2014, 2014 IEEE 23RD INTERNATIONAL WETICE CONFERENCE (WETICE), P453, DOI 10.1109/WETICE.2014.72
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   GUARINO N, 1995, TOWARDS VERY LARGE KNOWLEDGE BASES, P25
   Guarino N, 1995, INT J HUM-COMPUT ST, V43, P623, DOI 10.1006/ijhc.1995.1064
   Guarino N, 1998, FR ART INT, V46, P3
   Guarino N., 1994, Philosophy and the Cognitive Sciences
   Guarino N, 2009, LECT NOTES COMPUT SC, V5600, P52, DOI 10.1007/978-3-642-02463-4_4
   Guizzardi G, 2005, LECT NOTES COMPUT SC, V3713, P691, DOI 10.1007/11557432_51
   Guizzardi G., 2006, 7 INT BALTIC C DATAB
   Guizzardi G., 2013, Domain engineering, Product Lines, Languages, and Conceptual Models, P317
   Guizzardi G, 2014, SCI COMPUT PROGRAM, V96, P417, DOI 10.1016/j.scico.2014.02.022
   Guizzardi G, 2014, LECT NOTES COMPUT SC, V8824, P13, DOI 10.1007/978-3-319-12206-9_2
   Guizzardi G, 2007, FR ART INT, V155, P18
   Haav Helemai., 2001, 5th East-European Conference, ADBIS 2001, P29
   Hadar E, 2019, INT REQUIR ENG CONF, P330, DOI 10.1109/RE.2019.00042
   Herre H, 2010, THEORY AND APPLICATIONS OF ONTOLOGY: COMPUTER APPLICATIONS, P297, DOI 10.1007/978-90-481-8847-5_14
   Islam C, 2019, LECT NOTES COMPUT SC, V11483, P513, DOI 10.1007/978-3-030-21290-2_32
   ISO Central Secretary, 2012, 270322012 ISOIEC
   Jacobsen A, 2020, DATA INTELLIGENCE, V2, P10, DOI 10.1162/dint_r_00024
   Jia Y, 2018, ENGINEERING-PRC, V4, P53, DOI 10.1016/j.eng.2018.01.004
   Jurisica I, 1999, P ASIS ANN, V36, P482
   Kang D, 2010, EXPERT SYST APPL, V37, P1456, DOI 10.1016/j.eswa.2009.06.073
   Keil JM, 2019, SEMANT WEB, V10, P33, DOI 10.3233/SW-180310
   Kiesling E, 2019, LECT NOTES COMPUT SC, V11779, P198, DOI 10.1007/978-3-030-30796-7_13
   Langer L, 2015, 2015 International Symposium on Smart Electric Distribution Systems and Technologies (EDST), P475, DOI 10.1109/SEDST.2015.7315255
   Lassila O., 2001, LINKOPING ELECTRONIC, V6, P2001
   Li K., 2020, Security and Privacy in Digital Economy: First International Conference, P100, DOI DOI 10.1007/978-981-15-9129-7_8
   M?ller DPF., 2020, CYBERSECURITY ONTOLO, P99, DOI [10.1007/978-3-030-60570-4_7, DOI 10.1007/978-3-030-60570-4_7]
   Martin-Harris B., 2021, Perspect ASHA Special Interest Groups, V6, P610, DOI [DOI 10.1044/2021_PERSP-20-00303, 10.1007/s12551-022-00935-9, DOI 10.1007/S12551-022-00935-9, 10.1044/2021PERSP-20-00303, DOI 10.1044/2021PERSP-20-00303]
   Martins, 2021, CONSOLIDATION CYBERS
   Martins Beatriz F., 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P323, DOI 10.1007/978-3-030-63479-7_22
   Mascardi Viviana., 2007, Proceedings of WOA, Workshop dagli Oggetti agli Agenti, P55
   Masolo C., 2003, IST Project 2001-33052 WonderWeb: Ontology infrastructure for the semantic web,
   Masolo C., 2002, WONDERWEB DELIVERABL, V17, P2002
   Mizoguchi R., 1998, J JAPANESE SOC ARTIF, V13, P9
   Mozzaquatro BA, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18093053
   Mundie D. A., 2014, CEUR WORKSHOP PROC, P62
   Narayanan S., 2018, ARXIV PREPRINT ARXIV
   Nurse J. R. C., 2011, 2011 Workshop on Socio-Technical Aspects in Security and Trust, P60, DOI 10.1109/STAST.2011.6059257
   Obrst L., 2012, P 9 INT C SEM TECHN, P49
   Oltramari A, 2010, LREC 2010 - SEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P3873
   Oltramari A, 2014, Semantic Technologies for Intelligence, Defense, and Security (STIDS), P54
   Oltramari A., 2018, Journal of Information Warfare, V17, P49
   Oltramari A, 2015, IEEE MILIT COMMUN C, P318, DOI 10.1109/MILCOM.2015.7357462
   Oltramari Alessandro., 2015, STIDS, P26
   Onwubiko C., 2018, 2018 INT C CYBER SIT, P1
   Ou XM, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P113
   Parmelee M.C., 2010, CEUR WORKSHOP PROC, V713, P116
   Pecina Koldo., 2011, Proceedings - International Carnahan Conference on Security Technology, P1, DOI DOI 10.1109/CCST.2011.6095895
   Pipa A.M.C., 2018, THESIS I U LISBOA
   Polemi N., 2017, Port Cybersecurity: Securing Critical Information Infrastructures and Supply Chains
   Qin S., 2019, Cyberspace Data and Intelligence, and Cyber-Living, Syndrome, and Health, P3
   Sales, 2019, ONTOBRAS
   Sales TP, 2018, LECT NOTES COMPUT SC, V11157, P121, DOI 10.1007/978-3-030-00847-5_11
   Scarpato N, 2019, APPL ARTIF INTELL, V33, P643, DOI 10.1080/08839514.2019.1592344
   Schumacher M., 2003, Lecture Notes in Computer Science: Vol. 2754. Security Engineering with Patterns, P87, DOI DOI 10.1007/B11930
   Serrano L., 2021, ENCUESTA ACERCA DEFI
   Sikos LF, 2019, INTEL SYST REF LIBR, V151, P1, DOI 10.1007/978-3-319-98842-9_1
   Simperl E, 2012, J WEB SEMANT, V16, P1, DOI 10.1016/j.websem.2012.07.001
   Singhal, 2017, SECURITY RISK ANAL E, P53
   Souag A, 2012, LECT NOTES BUS INF P, V112, P61
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Syed, 2018, CYBERSECURITY VULNER
   Syed R, 2020, INFORM MANAGE-AMSTER, V57, DOI 10.1016/j.im.2020.103334
   Syed Zareen., 2016, Workshops of the Thirtieth AAAI Conference on Artificial Intelligence Artificial Intelligence for Cyber Security: Technical ReportWS-16-03, P195
   Takahama T., 2010, IEEE C EV COMP, P1, DOI DOI 10.1109/CEC.2010.5586484
   Takahashi, 2011, J NATL I INF COMMUN, V58
   Takahashi T., 2010, Proceedings of the 3rd international conference on Security of information and networks (SIN '10), P100
   Takahashi T, 2015, COMPUT J, V58, P2297, DOI 10.1093/comjnl/bxu101
   Tissir Najat, 2021, Journal of Reliable Intelligent Environments, V7, P69, DOI 10.1007/s40860-020-00115-0
   Undercofer J, 2003, WORKSHOP ONTOLOGIES
   Uschold M, 2004, SIGMOD REC, V33, P58, DOI 10.1145/1041410.1041420
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   vanHeijst G, 1997, INT J HUM-COMPUT ST, V46, P183, DOI 10.1006/ijhc.1996.0090
   WAND Y, 1995, INFORM SYST J, V5, P203, DOI 10.1111/j.1365-2575.1995.tb00108.x
   Wang JB, 2009, INT C POWER ELECT DR, P1, DOI 10.1109/PES.2009.5275867
   Wang JZ, 2005, 2005 IEEE/WIC/ACM International Conference on Web Intelligence, Proceedings, P372, DOI 10.1109/WI.2005.28
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
   Zuanelli E., 2017, E AGE2017, P1
NR 109
TC 1
Z9 1
U1 4
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1437
EP 1464
DI 10.1007/s10270-022-01013-0
EA JUL 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000819903400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Andree, K
   Ihde, S
   Weske, M
   Pufahl, L
AF Andree, Kerstin
   Ihde, Sven
   Weske, Mathias
   Pufahl, Luise
TI An exception handling framework for case management
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Exception handling; Knowledge-intensive processes; Flexible processes;
   Case management
ID FLEXIBILITY
AB In order to achieve their business goals, organizations heavily rely on the operational excellence of their business processes. In traditional scenarios, business processes are usually well-structured, clearly specifying when and how certain tasks have to be executed. Flexible and knowledge-intensive processes are gathering momentum, where a knowledge worker drives the execution of a process case and determines the exact process path at runtime. In the case of an exception, the knowledge worker decides on an appropriate handling. While there is initial work on exception handling in well-structured business processes, exceptions in case management have not been sufficiently researched. This paper proposes an exception handling framework for stage-oriented case management languages, namely Guard Stage Milestone Model, Case Management Model and Notation, and Fragment-based Case Management. The effectiveness of the framework is evaluated with two real-world use cases showing that it covers all relevant exceptions and proposed handling strategies.
C1 [Andree, Kerstin; Ihde, Sven; Weske, Mathias] Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
   [Pufahl, Luise] Tech Univ Berlin, Software & Business Engn, Sekr EN 6,Einsteinufer 17-3rd Floor, D-10587 Berlin, Germany.
C3 University of Potsdam; Technical University of Berlin
RP Ihde, S (corresponding author), Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
EM kerstin.andree@student.hpi.de; sven.ihde@hpi.de; mathias.weske@hpi.de;
   luise.pufahl@tu-berlin.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Agostini A, 2000, LECT NOTES COMPUT SC, V1806, P218
   Andaloussi AA, 2020, INFORM SYST, V91, DOI 10.1016/j.is.2020.101505
   Andree Kerstin, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P20, DOI 10.1007/978-3-030-49418-6_2
   Andrews K, 2018, IEEE INT ENTERP, P220, DOI 10.1109/EDOCW.2018.00041
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Fahland D., 2005, Proc. 12th International Workshop on Abstract State Machines, P131
   Fahland D., 2010, THESIS HUMBOLDT U BE
   Fahland D, 2009, LECT NOTES BUS INF P, V17, P254
   Gonzalez-Lopez F, 2019, LECT NOTES BUS INF P, V352, P87, DOI 10.1007/978-3-030-20618-5_6
   Haarmann S., 2015, PRODUCTION CASE MANA
   Hauder M, 2014, IEEE INT ENTERP, P98, DOI 10.1109/EDOCW.2014.24
   Hewelt M., 2016, Lecture Notes in Business Information Processing, V260, P38, DOI DOI 10.1007/978-3-319-45468-9_3
   Hewelt M, 2020, SOFTW SYST MODEL, V19, P1367, DOI 10.1007/s10270-019-00766-5
   Holfter A, 2019, LECT NOTES BUS INF P, V362, P400, DOI 10.1007/978-3-030-37453-2_33
   Hull R., 1997, P 16 ACMSIGACTSIG MO, P51, DOI DOI 10.1145/2002259.2002270
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kurz M., 2013, INT C SUBJ OR BUS PR, P123, DOI [10.1007/978-3-642-36754-0_8, DOI 10.1007/978-3-642-36754-0_8]
   Luo ZW, 2000, APPL INTELL, V13, P125, DOI 10.1023/A:1008388412284
   Marin MA, 2016, LECT NOTES BUS INF P, V256, P5, DOI 10.1007/978-3-319-42887-1_1
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   OMG, 2011, NOT BPMN VERS 2 0 OM, P22
   OMG, 2014, NOT CMMN VERS 1 0 OM
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pufahl Luise, 2020, Business Information Systems. 23rd International Conference, BIS 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 389), P210, DOI 10.1007/978-3-030-53337-3_16
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Sid I, 2019, ENTERP INF SYST-UK, V13, P376, DOI 10.1080/17517575.2018.1556815
   Slaats Tijs, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P339, DOI 10.1007/978-3-642-40176-3_28
   Steinau S, 2019, SOFTW SYST MODEL, V18, P2679, DOI 10.1007/s10270-018-0695-0
   van der Aalst W. M. P., 2001, GROUP'01. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, P42, DOI 10.1145/500286.500296
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weber B, 2013, LECT NOTES BUS INF P, V147, P261
   Zimmermann B., 2011, P 16 EUR C PATT LANG, P1
NR 34
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 939
EP 962
DI 10.1007/s10270-022-00993-3
EA APR 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000781262600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hjerppe, K
   Ruohonen, J
   Leppänen, V
AF Hjerppe, Kalle
   Ruohonen, Jukka
   Leppanen, Ville
TI Extracting LPL privacy policy purposes from annotated web service source
   code
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data protection; privacy engineering; privacy language; static analysis;
   semantic web; GDPR
ID LANGUAGE; CONSENT
AB Privacy policies are a mechanism used to inform users of the World Wide Web about the processing of their personal data. Such processing has special requirements, since personal data are regulated by data protection legislation. For example, a consent or another legal basis is typically needed. Privacy policies are documents used, among other things, to inform the data subject about processing of their personal data. These are formally represented by privacy languages. In this paper, we present a technique for constructing Layered Privacy Language policy data from web service code bases. Theoretically, we model the purposes of processing within web services by extending the privacy language with composition. We also present a formal analysis method for generating privacy policy purposes from the source code of web services. Furthermore, as a practical contribution, we present a static analysis tool that implements the theoretical solution. Finally, we report a brief case study for validating the tool
C1 [Hjerppe, Kalle; Ruohonen, Jukka; Leppanen, Ville] Univ Turku, Fac Technol, Turku, Finland.
C3 University of Turku
RP Hjerppe, K (corresponding author), Univ Turku, Fac Technol, Turku, Finland.
EM kphjer@utu.fi; juanruo@utu.fi; ville.leppanen@utu.fi
RI Ruohonen, Jukka/AFB-9028-2022
OI Ruohonen, Jukka/0000-0001-5147-3084; Hjerppe, Kalle/0000-0002-3737-4669;
   Leppanen, Ville/0000-0001-5296-677X
FU University of Turku (UTU); Turku University Central Hospital; Strategic
   Research Council at the Academy of Finland [327391]; Geniem Oy
FX Open Access funding provided by University of Turku (UTU) including
   Turku University Central Hospital. This research was partially supported
   by the Strategic Research Council at the Academy of Finland (grant
   number 327391) and Geniem Oy.
CR Aktug I, 2008, SCI COMPUT PROGRAM, V74, P2, DOI 10.1016/j.scico.2008.09.004
   Amato F, 2020, FUTURE GENER COMP SY, V106, P393, DOI 10.1016/j.future.2020.01.019
   Ardagna C. A., 2009, P 1 ACM WORKSH INF S, P49
   Assembly U. G., 1948, UN GEN ASSEMBLY, V302, P14
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Baca D., 2011, ICSSP, V11, P149
   Bashir M., 2015, P ASS INFORM SCI TEC, V52, P1, DOI [DOI 10.1002/PRA2.2015.145052010043, 10.1002/pra2.2015. 145052010043, 10.1002/pra2.2015.145052010043]
   Basin D, 2018, LECT NOTES COMPUT SC, V10957, P20, DOI 10.1007/978-3-662-58387-6_2
   Bechmann A, 2014, J MEDIA RES STUD, V11, P21, DOI 10.1080/16522354.2014.11073574
   Bednar K, 2019, INFORM SOC, V35, P122, DOI 10.1080/01972243.2019.1583296
   Belli L, 2017, HEALTH TECHNOL-GER, V7, P453, DOI 10.1007/s12553-017-0185-3
   Bieker F, 2016, LECT NOTES COMPUT SC, V9857, P21, DOI 10.1007/978-3-319-44760-5_2
   Blanco-Lainé G, 2019, LECT NOTES BUS INF P, V369, P199, DOI 10.1007/978-3-030-35151-9_13
   Bonatti P.A., 2020, ARXIV200108930
   Chowdhury Sankalan Pal, 2019, ARXIV PREPRINT ARXIV
   Cranor L.F., 2002, Web privacy with P3P
   Dahlberg T., 2015, Business, Management, and Education, V13, P25, DOI DOI 10.3846/BME.2015.254
   Dastgheib S., 2017, ISWC2017 16 INT SEM, P1
   Degeling M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23378
   Diver Laurence, 2017, INT REV LAW COMPUTER, V31, P68
   Ed-douibi H, 2017, LECT NOTES COMPUT SC, V10376, P267, DOI 10.1007/978-3-319-61482-3_16
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Fielding R., 1999, RFC 2616, DOI DOI 10.17487/RFC2616
   Fouad I, 2020, 2020 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2020), P326, DOI 10.1109/EuroSPW51379.2020.00051
   Gerl, 2019, THESIS U LYON
   Gerl A., 2018, EXTENDING LAYERED PR, DOI [10.14236/ewic/hci2018.177, DOI 10.14236/EWIC/HCI2018.177]
   Gerl A., 2019, P HUM INT EM TECHN N, P790, DOI [10.1007/978-3-030-25629-6_123, DOI 10.1007/978-3-030-25629-6_123]
   Gerl A, 2018, LECT NOTES COMPUT SC, V10940, P41, DOI 10.1007/978-3-662-57932-9_2
   Giannopoulou A, 2020, INTERNET POLICY REV, V9, DOI 10.14763/2020.1.1452
   Gürses S, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.37
   Hamadi R., 2003, Proceedings of the 14th Australasian database conference, V17, P191
   Hirsch DennisD., 2013, ME L REV, V66, P373
   Hjerppe K., 2019, PRIVACY IDENTITY MAN, P343
   Hjerppe K, 2020, 2020 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2020), P318, DOI 10.1109/EuroSPW51379.2020.00050
   Hjerppe K, 2019, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2019.00036
   Huth D, 2019, IEEE INT ENTERP DIST, P98, DOI 10.1109/EDOC.2019.00021
   Khurat A, 2017, COMPUT SECUR, V67, P122, DOI 10.1016/j.cose.2017.02.015
   Leicht J., 2021, TECHNICAL REPORT EXT
   Libert T, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P207, DOI 10.1145/3178876.3186087
   Lin L, 2016, FRONT COMPUT SCI-CHI, V10, P1142, DOI 10.1007/s11704-016-5503-9
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martín YS, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2018), P108, DOI 10.1109/EuroSPW.2018.00021
   Matte C., 2020, ANN PRIV FOR APF 202
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Ramezanifarkhani T, 2018, J LOG ALGEBR METHODS, V99, P1, DOI 10.1016/j.jlamp.2018.04.001
   Ruoxi Sun, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P270, DOI 10.1145/3383219.3383247
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Salnitri M, 2020, SOFTW SYST MODEL, V19, P467, DOI 10.1007/s10270-019-00744-x
   Sandra DR, 2018, LECT NOTES COMPUT SC, V11230, P258, DOI 10.1007/978-3-030-02671-4_15
   Senarath AR, 2018, TELEMAT INFORM, V35, P1845, DOI 10.1016/j.tele.2018.05.012
   Spiekermann S, 2015, COMPUT LAW SECUR REV, V31, P181, DOI 10.1016/j.clsr.2015.01.009
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Standard, 2013, EXT ACC CONTR MARK L
   Tómasdóttir KF, 2020, IEEE T SOFTWARE ENG, V46, P863, DOI 10.1109/TSE.2018.2871058
   Tumer A, 2005, LECT NOTES ARTIF INT, V3169, P289
   Van Alsenoy, 2019, J DATA PROT PRIVACY, V3, P113
   Vanezi E., 2019, INT C EV NOV APPR SO, P135
   Verborgh R., 2014, REST: Advanced Research Topics and Practical Applications, P69
   Weitzner Daniel J, 2006, Web and information security, P1
   Wilhelm S., 2019, BTW 2019 WORKSH
   Yan DF, 2013, 2013 5TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK & MULTIMEDIA TECHNOLOGY (IC-BNMT), P312, DOI 10.1109/ICBNMT.2013.6823964
   Yin SohS., 2019, EDPL, V5, P65
   Zaveri A, 2017, LECT NOTES COMPUT SC, V10250, P154, DOI 10.1007/978-3-319-58451-5_11
NR 63
TC 2
Z9 2
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 331
EP 349
DI 10.1007/s10270-022-00998-y
EA APR 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000781262600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Grosser, K
   Riediger, V
   Jürjens, J
AF Grosser, Katharina
   Riediger, Volker
   Juerjens, Jan
TI Requirements document relations A reuse perspective on traceability
   through standards
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Requirement document relations; Requirement reuse; Standards; Space
   engineering requirements; ECSS; Traceability
ID SECURITY REQUIREMENTS
AB Relations between requirements are part of nearly every requirements engineering approach. Yet, relations of views, such as requirements documents, are scarcely considered. This is remarkable as requirements documents and their structure are a key factor in requirements reuse, which is still challenging. Explicit formalized relations between documents can help to ensure consistency, improve completeness, and facilitate review activities in general. For example, this is relevant in space engineering, where many challenges related to complex document dependencies occur: 1. Several contractors contribute to a project. 2. Requirements from standards have to be applied in several projects. 3. Requirements from previous phases have to be reused. We exploit the concept of "layered traceability", explicitly considering documents as views on sets of individual requirements and specific traceability relations on and between all of these representation layers. Different types of relations and their dependencies are investigated with a special focus on requirement reuse through standards and formalized in an Object-Role Modelling (ORM) conceptual model. Automated analyses of requirement graphs based on this model are able to reveal document inconsistencies. We show examples of such queries in Neo4J/Cypher for the EagleEye case study. This work aims to be a step toward a better support to handle highly complex requirement document dependencies in large projects with a special focus on requirements reuse and to enable automated quality checks on dependent documents to facilitate requirements reviews.
C1 [Grosser, Katharina; Riediger, Volker; Juerjens, Jan] Univ Koblenz Landau, Inst Software Technol IST, Univ Str 1, D-56070 Koblenz, Germany.
   [Juerjens, Jan] Fraunhofer Inst Software & Syst Engn ISST, Dortmund, Germany.
C3 University of Koblenz & Landau; Fraunhofer Gesellschaft
RP Grosser, K (corresponding author), Univ Koblenz Landau, Inst Software Technol IST, Univ Str 1, D-56070 Koblenz, Germany.
EM grosser@uni-koblenz.de; riediger@uni-koblenz.de; juerjens@uni-koblenz.de
OI Grosser, Katharina/0000-0003-4532-0270
FU European Space Agency's (ESA) NPI program under NPI
   [4000118174/16/NL/MH/GM]
FX We gratefully acknowledge financial support by European Space Agency's
   (ESA) NPI program under NPI No. 4000118174/16/NL/MH/GM. Furthermore, we
   are thankful for the fruitful collaboration with ECSS and ESA's ESTEC,
   Noordwijk. In particular, the contributions of Serge Valera, Andreas
   Jung, and the whole TEC/SW team. Our best thanks for constructive
   discussions and feedback also to Marsha Chechik, Daniel Struber,
   Veronika Vasileva, and Jakob Gro ss er, as well as the anonymous
   reviewers, who helped to improve the quality of the paper. Modeling of
   ORM performed with NORMA [122] and UML with Astah [123].
CR Abbas M, 2020, PROC INT CONF SOFTW, P190, DOI 10.1145/3377812.3381399
   Ahmadian AS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P989, DOI 10.1145/3106237.3122823
   Alvarez JL, 2016, PROC SPIE, V9911, DOI 10.1117/12.2231373
   [Anonymous], 2014, GLOSSARY REQUIREMENT
   [Anonymous], NAT ORM ARCH VIS STU
   [Anonymous], 2017, OMG Unified Modeling Language (OMG UML), Version 2.5.1
   [Anonymous], 2010, 247652010E ISO IEC I
   [Anonymous], AST PROF
   [Anonymous], 1996, ARIANE 5, Flight 501 Failure
   [Anonymous], 2002, 1 INT WORKSHOP TRACE
   [Anonymous], 2014, 983482014 ISO IEC
   [Anonymous], 2018, 291482018E ISO IEC I
   [Anonymous], 2011, 420102011 ISO IEC IE
   [Anonymous], 2013, Business Process Model and Notation (BPMN), Version 2.0.2
   [Anonymous], 2003, Software requirements
   [Anonymous], 2011, ORM 2 GRAPHICAL NOTA
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Ayuso A, 2004, TOSEMSVSRFSPC0001 SE
   Bartodziej C., 2017, CONCEPT IND 4 0 BEST, DOI DOI 10.1007/978-3-658-16502-4_3
   Bos V., 2013, DATA SYSTEMS AEROSPA, V720, P22
   Bos V, 2016, IEEE INT SYMP SOFTW, P17, DOI 10.1109/ISSREW.2016.49
   Braimniotis M, 2017, THESIS RADBOUD U NIJ
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Castaneda V., 2010, Global Journal of Researches in Engineering, V10, P2
   da Silva L.F., 2006, ELECTR COMMUN, DOI [10.14279/tuj.eceasst.3.39.21, DOI 10.14279/TUJ.ECEASST.3.39.21]
   Darimont R, 1997, PROC INT CONF SOFTW, P612, DOI 10.1145/253228.253499
   Dick J., 2002, P 1 INT WORKSH TRAC, P18
   Ebert J., 1995, GRAPH THEORETIC CONC, P380
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSEST1006C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSEST40C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2005, ECSSEST40 ECSS 2B
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST5013C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2012, ECSSSST0001C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2004, ECSSE60A ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2003, ECSSE7041A ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2014, ECSSD0001C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST6010C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2007, ECSSE5004A ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSEST6020C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2008, ECSSSST00C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2009, ECSSMST10C ECSS
   ECSS Secretariat and ESA-ESTEC Requirements & Standards Division, 2003, ECSSEST40 ECSS 1B
   Edwards PR, 2019, PROCEEDINGS OF 2019 ESA WORKSHOP ON AEROSPACE EMC (AEROSPACE EMC), DOI 10.23919/aeroemc.2019.8788967
   ESA TEC-QR, 2014, ESSBD000 ESA, V1st
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   Espinoza Limon A., 2005, ECMDA TRACEABILITY W
   Favaro J., 2012, 22 ANN INCOSE INT S
   Gärtner S, 2014, INT REQUIR ENG CONF, P103, DOI 10.1109/RE.2014.6912252
   Gamma Erich., 1994, DESIGN PATTERNS
   Gaspard-Boulinc H, 2017, INT REQUIR ENG CONF, P223, DOI 10.1109/RE.2017.20
   Gervasi V, 2019, 2 WORKSH NAT LANG PR
   Goknil A, 2011, SOFTW SYST MODEL, V10, P31, DOI 10.1007/s10270-009-0142-3
   Goknil Arda, 2008, ECMDA TRAC WORKSH EC, P59
   Goldin L., 2010, Proceedings of the IEEE International Conference on Software, Science, Technology and Engineering (SWSTE 2010), P55, DOI 10.1109/SwSTE.2010.17
   Goodrum M, 2017, INT REQUIR ENG CONF, P90, DOI 10.1109/RE.2017.65
   Gotel O., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P100, DOI 10.1109/ISRE.1995.512550
   Gotel O, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P169, DOI 10.1109/ISRE.1997.566866
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grosser K., REQUIREMENTS DOCUMEN
   Guo J, 2017, EMPIR SOFTW ENG, V22, P1103, DOI 10.1007/s10664-016-9479-8
   Haidrar S, 2017, 2017 INTERNATIONAL CONFERENCE ON WIRELESS TECHNOLOGIES, EMBEDDED AND INTELLIGENT SYSTEMS (WITS)
   Halpin T., 2015, Object-Role Modeling Fundamentals: A Practical Guide to Data Modeling with ORM
   Halpin T.Morgan., 2010, INFORM MODELING RELA, VSecond
   Halpin Terry, 2009, Encyclopedia of Database Systems, P1941
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Joppich R., 2014, REQUIREMENTS ENG MAN, V6th, P215
   Kadhim AI, 2019, ARTIF INTELL REV, V52, P273, DOI 10.1007/s10462-018-09677-1
   Kallio H, 2016, J ADV NURS, V72, P2954, DOI 10.1111/jan.13031
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Leite J. C. S. P., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P108, DOI 10.1109/ISRE.1995.512551
   Leite JCSD, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P44, DOI 10.1007/BF02745371
   Lexico, MEAN DOC ENGL
   Li FL, 2015, LECT NOTES COMPUT SC, V9013, P164, DOI 10.1007/978-3-319-16101-3_11
   Maletic J.I., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'03), P47
   Mavin A, 2017, INT REQUIR ENG CONF, P174, DOI 10.1109/RE.2017.40
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   Naish J., 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P42, DOI 10.1109/RePa.2011.6046721
   Opdenakker R., 2006, FORUM QUAL SOZIALFOR, V7, P11, DOI [10.17169/fqs-7.4.175, DOI 10.17169/FQS-7.4.175]
   Owen A., 2017, THESIS U KOBLENZ LAN
   Pace F., 2009, ATBRACD5 ESA ESTEC
   Pace F., 2010, ATBRACD8 ESA ESTEC
   Pace F., 2010, ATBRACD8D ESA ESTEC
   Palm S.U, 2013, TERATBCTSICD004
   Palm S.U, 2014, TERATBCTSREQ001 TERM
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Pinheiro FAC, 2004, SPRING INT SER ENG C, V753, P91
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rath M., 2017, REFSQ WORKSH
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Renault S., 2009, INT J COMPUT SCI APP, V6, P175
   RequirementsWorking Group, 2019, GUID WRIT REQ
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rupp C., 2014, REQUIREMENTS ENG MAN, V6th, P123
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Samer R, 2019, PROC INT C TOOLS ART, P1265, DOI 10.1109/ICTAI.2019.00-91
   SAVOIR, 2016, SAVOIRTN000 ESA ESTE
   Schneider K, 2012, REQUIR ENG, V17, P35, DOI 10.1007/s00766-011-0141-0
   Schwarz H, 2010, IEEE INT C ENG COMP, P183, DOI [10.1109/ICECCS.2010.27, 10.1109/ICECCS.2010.66]
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Siegemund K., 2011, P 10 INT SEM WEB C I
   Siena Alberto, 2008, 2008 Requirements Engineering and Law. RELAW'08, P6, DOI 10.1109/RELAW.2008.6
   Siena A., 2009, 2009 2 INT WORKSHOP, P45
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Srungavruksham D.T, 2017, EERTBSSFSRS005 SSF
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tekinerdogan B., 2017, Proceedings of the Symposium on Applied Computing, P1799
   Valera S, 2018, ESATECSWMSOW009970 E
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang WT, 2022, IEEE T SOFTWARE ENG, V48, P1665, DOI 10.1109/TSE.2020.3030745
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Zeni N, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P65, DOI 10.1109/RELAW.2013.6671349
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 123
TC 1
Z9 1
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2022 JAN 25
PY 2022
DI 10.1007/s10270-021-00958-y
EA JAN 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YM8LI
UT WOS:000746819800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bucaioni, A
   Cicchetti, A
   Ciccozzi, F
AF Bucaioni, Alessio
   Cicchetti, Antonio
   Ciccozzi, Federico
TI Modelling in low-code development: a multi-vocal systematic review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Low-code development; Modelling; Model-driven engineering; Systematic
   review
ID PLATFORM
AB In 2014, a new software development approach started to get a foothold: low-code development. Already from its early days, practitioners in software engineering have been showing a rapidly growing interest in low-code development. In 2021 only, the revenue of low-code development technologies reached 13.8 billion USD. Moreover, the business success of low-code development has been sided by a growing interest from the software engineering research community. The model-driven engineering community has shown a particular interest in low-code development due to certain similarities between the two. In this article, we report on the planning, execution, and results of a multi-vocal systematic review on low-code development, with special focus to its relation to model-driven engineering. The review is intended to provide a structured and comprehensive snapshot of low-code development in its peak of inflated expectations technology adoption phase. From an initial set of potentially relevant 720 peer-reviewed publications and 199 grey literature sources, we selected 58 primary studies, which we analysed according to a meticulous data extraction, analysis, and synthesis process. Based on our results, we tend to frame low-code development as a set of methods and/or tools in the context of a broader methodology, often being identified as model-driven engineering.
C1 [Bucaioni, Alessio; Cicchetti, Antonio; Ciccozzi, Federico] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
C3 Malardalen University
RP Cicchetti, A (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM alessio.bucaioni@mdh.se; antonio.cicchetti@mdh.se;
   federico.ciccozzi@mdh.se
RI Cicchetti, Antonio/D-2375-2015
OI Cicchetti, Antonio/0000-0003-0416-1787
FU Swedish Knowledge Foundation (KKS); Sweden's Innovation Agency (VINNOVA)
FX The work in this paper has been supported by the SwedishKnowledge
   Foundation (KKS) through the A-CPS, HERO, and SACSys projects and by the
   Sweden's Innovation Agency (VINNOVA) through the PANORAMA and BUMBLE
   projects.
CR Adrian Benjamin, 2020, Advances in Human Factors and Systems Interaction. Proceedings of the AHFE 2020 Virtual Conference on Human Factors and Systems Interaction. Advances in Intelligent Systems and Computing (AISC 1207), P45, DOI 10.1007/978-3-030-51369-6_7
   Adrian O., 2020, INTRO MODEL DRIVEN A
   Adrian P., 2021, WHAT IS LOW CODE
   Al Alamin MA, 2021, IEEE WORK CONF MIN S, P46, DOI 10.1109/MSR52588.2021.00018
   Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   Ali Qurat ul ain, 2020, P 23 ACMIEEE INT C M, DOI [10.1145/3417990.3420207, DOI 10.1145/3417990.3420207]
   Almonte L., 2020, P MODELS C, DOI [10.1145/3417990.3420200, DOI 10.1145/3417990.3420200]
   [Anonymous], 2013, CEUR WORKSHOP PROC
   Arora Rachit, 2020, 2020 International Conference on Industry 4.0 Technology (I4Tech), P13, DOI 10.1109/I4Tech48345.2020.9102703
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Black R., 2020, 5 FAQS LOW CODE APPR
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brown E., 2020, MODEL DRIVEN DEV VER
   Brunschwig L., 2020, P MODELS C, P1
   BURNETT MM, 1995, COMPUTER, V28, P14
   Burnham M., LOW CODE SUPPORT
   Burnham M., TOP EVALUATION CRITE
   Cabot J., 2020, P 23 ACM IEEE INT C
   CASE AF, 1985, DATA BASE, V17, P35, DOI 10.1145/1040694.1040698
   Charmaz K., 2007, Blackwell Encyclopaedia of Sociology Online, DOI [DOI 10.1002/9781405165518.WBEOSG070, DOI 10.1002/9781405165518.WBEOSG070.PUB2]
   Colantoni Alessandro, 2020, P 23 ACM IEEE INT C, P1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   den Haan J., INTRO LOW CODE MANIF
   den Haan J., PROCESS MEETS INTELL
   den Haan J., 2020, LOW CODE PRINCIPLE 1
   Di Sipio Claudio, 2020, P 23 ACM IEEE INT C, P1, DOI 10.1145/3417990.3420202
   Dimanidis A, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P1869, DOI 10.1145/3184558.3191654
   Eager A., 2019, ENTERPRISE SOFTWARE
   Estefan J.A., 2008, INCOSETD200700301
   Franzosi Roberto., 2010, QUANTITATIVE NARRATI
   Garms C., 2020, GET RIGHT MIX LOW CO
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henriques H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P200, DOI 10.1145/3239372.3239387
   Horva<prime>th B., 2020, P MODELS C, P1, DOI DOI 10.1145/3417990.3420199
   Ihirwe F., 2020, P 23 ACMIEEE INT C M, P1, DOI [10.1145/3417990.3420208, DOI 10.1145/3417990.3420208]
   Khorram F., 2020, P 23 ACM IEEE INT C, P1, DOI [DOI 10.1145/3417990, 10.1145/3417990.3420204, DOI 10.1145/3417990.3420204]
   Khoshafian S., 2021, NO CODE LOW CODE WHY
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kourouklidis P., 2020, P 23 ACMIEEE INT C M, P1
   Kovacevic S., 2020, LOW CODE APPL MODEL
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Martins Ricardo, 2020, 2020 International Conference on Smart Technologies in Computing, Electrical and Electronics (ICSTCEE), P395, DOI 10.1109/ICSTCEE49637.2020.9277404
   Mendix, LOW COD US CAS
   Metrolho J, 2019, EDULEARN PROC, P7200
   Metrôlho JC, 2020, INTED PROC, P8601
   Mironescu G., 2018, WEM NO CODE DEV DEMO
   Niiranen J., 2021, WHAT WILL POWER FX M
   Pantelimon SG, 2019, 2019 IEEE 5TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P566, DOI [10.1109/wf-iot.2019.8767313, 10.1109/WF-IoT.2019.8767313]
   Peinl R, 2019, LECT NOTES BUS INF P, V362, P441, DOI 10.1007/978-3-030-37453-2_36
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Phillips JD, 2021, PHYS GEOGR, V42, P50, DOI 10.1080/02723646.2020.1743613
   Richardson C., 2014, Tech. rep
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Rossi Gustavo, 2016, CLEIej, V19, P5, DOI 10.19153/cleiej.19.3.1
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Sakhnyuk P. A., 2020, IOP Conference Series: Materials Science and Engineering, V873, DOI 10.1088/1757-899X/873/1/012016
   Sanchis R, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10010012
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Silva C, 2021, HUM FACTORS, V63, P1012, DOI 10.1177/0018720820920429
   Spiegel R., SIEMENS PLM BECOMES
   Strand Erlend Barstad, EVALUATING LOW CODE
   Tisi M., 2019, STAF 2019 COLOCATED
   van der Weel H., 2017, LOW CODENO CODE ENTE
   van Kooten J., 2016, DO MODEL DRIVEN DEV
   Vanner C., 2021, WHAT IS LOW CODE AUT
   VerkstadsForum,, LOW COD PLATF HOT SO
   Vincent P., CRITICAL CAPABILITIE
   Waszkowski R, 2019, IFAC PAPERSONLINE, V52, P376, DOI 10.1016/j.ifacol.2019.10.060
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yuanling Z., 2019, ALIBABAS SOLUTION LO
   Zolotas C, 2018, ENTERP INF SYST-UK, V12, P1007, DOI 10.1080/17517575.2018.1462403
NR 80
TC 11
Z9 11
U1 11
U2 92
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1959
EP 1981
DI 10.1007/s10270-021-00964-0
EA JAN 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000744412600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Montalvo, A
   Parra, P
   Polo, OR
   Carrasco, A
   Da Silva, A
   Martínez, A
   Sánchez, S
AF Montalvo, Aaron
   Parra, Pablo
   Rodriguez Polo, Oscar
   Carrasco, Alberto
   Da Silva, Antonio
   Martinez, Agustin
   Sanchez, Sebastian
TI Model-driven system-level validation and verification on the space
   software domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Validation; Verification; Space; Software; ECSS
ID MDE
AB The development process of on-board software applications can benefit from model-driven engineering techniques. Model validation and model transformations can be applied to drive the activities of specification, requirements definition, and system-level validation and verification according to the space software engineering standards ECSS-E-ST-40 and ECSS-Q-ST-80. This paper presents a model-driven approach to completing these activities by avoiding inconsistencies between the documents that support them and providing the ability to automatically generate the system-level validation tests that are run on the Ground Support Equipment and the matrices required to complete the software verification. A demonstrator of the approach has been built using as a proof of concept a subset of the functionality of the software of the control unit of the Energetic Particle Detector instrument on-board Solar Orbiter.
C1 [Montalvo, Aaron; Parra, Pablo; Rodriguez Polo, Oscar; Carrasco, Alberto; Da Silva, Antonio; Martinez, Agustin; Sanchez, Sebastian] Univ Alcala, Space Res Grp, Madrid, Spain.
C3 Universidad de Alcala
RP Montalvo, A (corresponding author), Univ Alcala, Space Res Grp, Madrid, Spain.
EM aaron.montalvo@uah.es
RI Prieto, Sebastian Sanchez/JAC-4347-2023; Prieto, Sebastian
   Sanchez/P-6130-2015; R. Polo, Oscar/I-2857-2015; Martinez Hellin,
   Agustin/I-9253-2014
OI Prieto, Sebastian Sanchez/0000-0002-6729-7932; Prieto, Sebastian
   Sanchez/0000-0002-6729-7932; Montalvo, Aaron/0000-0002-6896-5226; R.
   Polo, Oscar/0000-0002-7893-4247; Da Silva, Antonio/0000-0002-3737-743X;
   Martinez Hellin, Agustin/0000-0002-5600-9253
FU Spanish Ministerio de Economia y Competitividad [ESP2013-48346-C22-R,
   ESP2015-68266-R, ESP2017-88436-R]
FX This work was supported by Spanish Ministerio de Economia y
   Competitividad under the grants ESP2013-48346-C22-R, ESP2015-68266-R,
   and ESP2017-88436-R.
CR [Anonymous], 2022, ENTERPRISE ARCHITECT
   [Anonymous], 2011, P INT C PROD FOC SOF
   [Anonymous], 2010, The Unified Modeling Language(UML)
   Baudry B, 2007, IEEE INT ENTERP DIST, P459, DOI 10.1109/EDOC.2007.15
   Bünder H, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1742, DOI 10.1145/3297280.3297450
   Cichos H, 2011, LECT NOTES COMPUT SC, V6981, P425, DOI 10.1007/978-3-642-24485-8_31
   da Silva AR, 2007, IET SOFTW, V1, P294, DOI 10.1049/iet-sen:20070012
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dongyue Mou, 2012, 2012 IEEE First International Workshop on the Twin Peaks of Requirements and Architecture (Twin Peaks), P27, DOI 10.1109/TwinPeaks.2012.6344557
   ECMA International, 2016, ECMA376 ECMA INT, V5th
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fowler M., 2001, Software Development, V9, P28
   Garrido J, 2017, IFAC PAPERSONLINE, V50, P5875, DOI 10.1016/j.ifacol.2017.08.1303
   Grant Emanuel S., 2016, International Journal of Future Computer and Communication, V5, P120, DOI 10.18178/ijfcc.2016.5.2.457
   Horner JK., 2019, Philos Technol, V32, P363, DOI DOI 10.1007/S13347-019-00342-1
   Hovsepyan A., 2014, 1 INT WORKSHOP MODEL, V1249, P28
   Hugues J, 2008, P IEEE RAP SYST PROT, P10, DOI 10.1109/RSP.2008.19
   IBM, IBM ENG REQ MAN DOOR
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Javed AbuZafer., 2007, AST, P3, DOI DOI 10.1109/AST.2007.2
   Koskela L., 2008, TEST DRIVEN
   Marquez J, 2020, PHYSIOTHER THEOR PR, V36, P779, DOI 10.1080/09593985.2018.1494233
   North Dan., 2006, Better Software, V12
   Parra P., 2011, P 14 INT ACM SIGSOFT, P1
   Parra P, 2021, IEEE T EMERG TOP COM, V9, P78, DOI 10.1109/TETC.2018.2866024
   Parra P, 2021, ACTA ASTRONAUT, V178, P314, DOI 10.1016/j.actaastro.2020.09.017
   Paz A, 2016, IEEE INT SYMP SOFTW, P229, DOI 10.1109/ISSREW.2016.12
   Peccia N., 2003, 2003 GROUND SYST ARC
   Lamancha BP, 2009, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2009.5306324
   Perovich D, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P201, DOI 10.1109/WICSA.2009.5290806
   Pomante L, 2015, 2015 IEEE AEROSPACE CONFERENCE, DOI 10.1109/AERO.2015.7119032
   Ramler R, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P503, DOI 10.1109/QRS-C.2019.00096
   Rodríguez-Pacheco J, 2020, ASTRON ASTROPHYS, V642, DOI 10.1051/0004-6361/201935287
   Sadeghi A, 2012, INT J SOFTW ENG KNOW, V22, P1085, DOI 10.1142/S0218194012500295
   Schatz B., 2005, INFORMATIK 2005 INFO, V2
   Secretariat E.C.S.S, 2003, ECSSE7041C
   Secretariat E.C.S.S., 2017, ECSSEST80C
   Sivanandan Sandeep, 2014, 2014 20th Annual International Conference on Advanced Computing and Communications (ADCOM). Proceedings, P22, DOI 10.1109/ADCOM.2014.7103243
   Snook C, 2018, LECT NOTES COMPUT SC, V11232, P21, DOI 10.1007/978-3-030-02450-5_2
   Sommer J., 2017, P ESA SW PROD ASS EN
   Steel J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P151, DOI 10.1109/ISSRE.2004.23
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tavares H.L., 2010, ARXIV PREPRINT ARXIV
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Wieczorek S, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P82, DOI 10.1109/TAIC-PART.2008.17
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
NR 46
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2367
EP 2394
DI 10.1007/s10270-021-00940-8
EA NOV 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000716285200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Procter, S
   Wrage, L
AF Procter, Sam
   Wrage, Lutz
TI Guided architecture trade space exploration: fusing model-based
   engineering and design by shopping
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design space exploration; Search-based system engineering; Model-based
   engineering; Guided optimization; Architecture analysis and design
   language (AADL); Open source AADL tool environment (OSATE); ARL trade
   space visualizer (ATSV)
AB Advances in model-based system engineering have greatly increased the predictive power of models and the analyses that can be run on them. At the same time, designs have become more modular and component-based. It can be difficult to manually explore all possible system designs due to the sheer number of possible architectures and configurations; trade space exploration has arisen as a solution to this challenge. In this work, we present a new software tool: the Guided Architecture Trade Space Explorer (GATSE), which connects an existing model-based engineering language (AADL) and modeling environment (OSATE) to an existing trade space exploration tool (ATSV). GATSE, AADL, and OSATE are all designed to be easily extended by users, which enables relatively straightforward domain-customizations. ATSV, combined with these customizations, lets system designers "shop" for candidate architectures and interactively explore the architectural trade space according to any quantifiable quality attribute or system characteristic. We evaluate GATSE according to an established framework for variable system architectures, and demonstrate its use on an avionics subsystem.
C1 [Procter, Sam; Wrage, Lutz] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 Software Engineering Institute; Carnegie Mellon University
RP Procter, S (corresponding author), Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
EM sprocter@sei.cmu.edu; lwrage@sei.cmu.edu
OI Procter, Sam/0000-0003-4379-2362
FU Department of Defense [FA8702-15-D-0002]; Carnegie Mellon University
FX The authors wish to thank Julien Delange, Min Young Nam, and Peter
   Feiler for the original concept and feedback; Joseph Seibel for the
   configuration validator implementation; and the anonymous reviewers for
   their feedback which has been invaluable in improving this paper. We
   also gratefully acknowledge the assistance of Gary Stump and Penn State
   University's Applied Research Laboratory for their help and the
   modifications made to ATSV as a result of this effort. Copyright 2021
   Carnegie Mellon University. This material is based upon work funded and
   supported by the Department of Defense under Contract No.
   FA8702-15-D-0002 with Carnegie Mellon University for the operation of
   the Software Engineering Institute, a federally funded research and
   development center. NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND
   SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS"
   BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND,
   EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED
   TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR
   RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY
   DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM
   PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT. [DISTRIBUTION STATEMENT A]
   This material has been approved for public release and unlimited
   distribution. Please see Copyright notice for non-US Government use and
   distribution. DM21-0323
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Aerospace S.A.E., 2011, AIR6110 SAE INT
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], 2015, AS2C SAE INT
   [Anonymous], 2016, P 19 INT WORKSH SOFT, DOI DOI 10.1145/2906363.2906367
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2011, AS2C SAE INT
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Balling R., 1999, P 3 WORLD C STRUCTUR, P295
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bertolino A., 1998, Software Testing, Verification and Reliability, V8, P155, DOI 10.1002/(SICI)1099-1689(1998090)8:3<155::AID-STVR163>3.0.CO;2-B
   Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   Bozzano M, 2015, LECT NOTES COMPUT SC, V9206, P518, DOI 10.1007/978-3-319-21690-4_36
   Chilenski J.J., 2015, SYSTEM ARCHITECTURE
   Clark, 2017, CMUSEI2017TR004
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Delange J., 2014, AADL Fault Modeling and Analysis Within an ARP4761 Safety Assessment
   DoD Architecture Framework Working Group, 2003, DOD ARCH FRAM WORK G
   Eder J., 2016, WORKSH OP SOURC SOFT
   Ericson CA., 2016, 2 HAZARD ANAL TECHNI, V2
   Esfahani N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P43, DOI 10.1109/ICSE.2013.6606550
   Feiler Peter, 2016, ACM SIGAda Ada Letters, V36, P39, DOI 10.1145/3092893.3092900
   Feiler P., 2009, SYSTEM ARCHITECTURE
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Frank S., 2020, EUR C SOFTW ARCH ECS, P107, DOI [10.1007/978-3-030-59155-7_9, DOI 10.1007/978-3-030-59155-7_9]
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Hwang C. L., 1979, Multiple objective decision makingmethods and applications. A state of the art survey
   Iacobucci J., 2012, Rapid Architecture Alternative Modeling (RAAM): A Framework for Capability-based Analysis of System of Systems Architectures
   Kerzhner, 2012, THESIS GEORGIA I TEC
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Koziolek, 2013, THESIS IPD, DOI 10.5445/KSP/1000032342
   Kroening D., 2016, Decision Procedures: an Algorithmic Point of View
   Owens B., 2006, ANN MIL AER PROGR LO, P1
   Procter, 2017, GUIDED ARCHITECTURE
   Procter S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P117, DOI 10.1109/MODELS.2019.000-9
   Rago A, 2017, XI BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS 2017), DOI 10.1145/3132498.3132509
   Ross JA, 2019, SOFTW SYST MODEL, V18, P739, DOI 10.1007/s10270-017-0592-y
   Selva D, 2013, AEROSP CONF PROC
   Simpson T., 2008, 49 AIAA ASME ASCE AH, DOI 10.2514/6.2008-2139
   Society for Automotive Engineers Inc, 1996, ARP4754 SAE INC
   Stewart Danielle, 2017, Model-Based Safety and Assessment. 5th International Symposium, IMBSA 2017. Proceedings: LNCS 10437, P97, DOI 10.1007/978-3-319-64119-5_7
   Stump G., 2004, 10 AIAA ISSMO MULT A
   Stump G.M., 2003, Proceedings of ASME 2002 Design Engineering Technical Conferences, V2, P795, DOI DOI 10.1115/DETC2003/DAC-48785
   Stump G, 2009, J COMPUT INF SCI ENG, V9, DOI 10.1115/1.3243633
   Tseitin G.S., 1966, LEN SEM MATH LOG LEN, P1
   Verendel V, 2009, NEW SECURITY PARADIGMS WORKSHOP 2009, PROCEEDINGS, P37
   Watkins Celeste., 2006, 25th Digital Avionics Systems Conference, 2006 IEEE/AIAA, P1, DOI [10.1109/DASC.2006.313743, DOI 10.1109/DASC.2006.313743]
   Zantema H., 2003, FTP 2003, P162, DOI [10.1016/S1571-0661(04)80661-3, DOI 10.1016/S1571-0661(04)80661-3]
   Zimmermann H.-J., 2001, Fuzzy Set Theory-and Its Applications, DOI DOI 10.1007/978-94-010-0646-0
NR 52
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2023
EP 2045
DI 10.1007/s10270-021-00889-8
EA JUN 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000663233900002
DA 2024-07-18
ER

PT J
AU Gonzalez-Lopez, F
   Pufahl, L
   Munoz-Gama, J
   Herskovic, V
   Sepúlveda, M
AF Gonzalez-Lopez, Fernanda
   Pufahl, Luise
   Munoz-Gama, Jorge
   Herskovic, Valeria
   Sepulveda, Marcos
TI Case model landscapes: toward an improved representation of
   knowledge-intensive processes using the fCM-language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Case management; Knowledge-intensive process; Process landscape; Process
   map; Process architecture
ID BUSINESS PROCESS ARCHITECTURES; REQUIREMENTS; GUIDELINES
AB Case Management is a paradigm to support knowledge-intensive processes. The different approaches developed for modeling these types of processes tend to result in scattered information due to the low abstraction level at which the inherently complex processes are represented. Thus, readability and understandability are more challenging than in imperative process models. This paper extends a case modeling language-the fragment-based Case Management (fCM) language-to a so-called fCM landscape (fCML) with the goal of modeling a single knowledge-intensive process from a higher abstraction level. Following the Design Science Research (DSR) methodology, we first define requirements for an fCML, and then review how literature-in the fields of process overviews and case management-could support them. Design decisions are formalized by specifying a syntax for an fCML and the transformation rules from a given fCM model. The proposal is empirically evaluated via a laboratory experiment. Quantitative results imply that interpreting an fCML requires less effort in terms of time-and is thus more efficient-than interpreting its equivalent fCM case model. Qualitative results provide indications on the factors affecting case model interpretation and guidelines for future work.
C1 [Gonzalez-Lopez, Fernanda] Pontificia Univ Catolica Valparaiso, Valparaiso, Chile.
   [Gonzalez-Lopez, Fernanda] Pontificia Univ Catolica Chile, Human & Proc Data Sci Res Lab HAPLAB, Santiago, Chile.
   [Gonzalez-Lopez, Fernanda; Munoz-Gama, Jorge; Herskovic, Valeria; Sepulveda, Marcos] Pontificia Univ Catolica Chile, Dept Comp Sci, Santiago, Chile.
   [Pufahl, Luise] Tech Univ Berlin, Software & Business Engn, Berlin, Germany.
C3 Pontificia Universidad Catolica de Valparaiso; Pontificia Universidad
   Catolica de Chile; Pontificia Universidad Catolica de Chile; Technical
   University of Berlin
RP Gonzalez-Lopez, F (corresponding author), Pontificia Univ Catolica Chile, Human & Proc Data Sci Res Lab HAPLAB, Santiago, Chile.; Gonzalez-Lopez, F (corresponding author), Pontificia Univ Catolica Chile, Dept Comp Sci, Santiago, Chile.
EM fgonlop@uc.cl
RI Herskovic, Valeria/D-1687-2014; Sepulveda, Marcos/C-4007-2011;
   Munoz-Gama, Jorge/E-7135-2013
OI Herskovic, Valeria/0000-0002-2650-6507; Sepulveda,
   Marcos/0000-0002-9467-7666; Munoz-Gama, Jorge/0000-0002-6908-3911;
   Gonzalez Lopez, Maria Fernanda/0000-0002-3381-5156
FU Beca Postdoctorado Escuela de Ingenieria, Pontificia Universidad
   Catolica de Chile; CORFO Engineering [2030 14ENI2-26862];
   CONICYTFONDECYT [11170092, 1200206, 1181162]
FX This work is supported by the Beca Postdoctorado Escuela de Ingenieria,
   Pontificia Universidad Catolica de Chile, and CORFO Engineering 2030
   14ENI2-26862. The work is also supported by CONICYTFONDECYTprojects
   11170092, 1200206, and 1181162. We thank JavierMadariaga for his help in
   reviewing part of the statistical analysis. We would also like to
   sincerely thank the reviewers for their constructive feedback during the
   review process.
CR [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Beckerman J., 2007, Plant Health Progress, P1
   Burton-Jones A, 2009, J ASSOC INF SYST, V10, P495
   Chiao C.M., 2013, CPSM ICSM, P1, DOI [10.1109/BIBE.2013.6701699, DOI 10.1109/BIBE.2013.6701699]
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   De Smedt J, 2018, INFORM SYST, V74, P40, DOI 10.1016/j.is.2018.01.001
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Dijkman R, 2016, ENTERP INF SYST-UK, V10, P129, DOI 10.1080/17517575.2014.928951
   Eid-Sabbagh RH, 2013, LECT NOTES COMPUT SC, V8274, P533, DOI 10.1007/978-3-642-45005-1_43
   Eid-Sabbagh RH, 2012, LECT NOTES COMPUT SC, V7481, P65, DOI 10.1007/978-3-642-32885-5_5
   Gonzalez-Lopez F, 2019, LECT NOTES BUS INF P, V352, P87, DOI 10.1007/978-3-030-20618-5_6
   Gonzalez-Lopez F, 2019, BUS PROCESS MANAG J, V25, P1317, DOI 10.1108/BPMJ-09-2017-0258
   Gonzalez-Lopez F, 2019, ENG MANAG J, V31, P127, DOI 10.1080/10429247.2018.1522565
   Green S., 2004, 5 WORKSHOP BUSI NESS, P154
   Gruhn V, 2001, J SYST SOFTWARE, V59, P333, DOI 10.1016/S0164-1212(01)00073-5
   Hartson R., 2012, The UX Book: Process and Guidelines for Ensuring a Quality User Experience
   Hewelt M, 2020, SOFTW SYST MODEL, V19, P1367, DOI 10.1007/s10270-019-00766-5
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hull R., 1997, P 16 ACMSIGACTSIG MO, P51, DOI DOI 10.1145/2002259.2002270
   Krogstie J, 2012, LECT NOTES BUS INF P, V134, P76
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Lantow B, 2018, LECT NOTES BUS INF P, V335, P157, DOI 10.1007/978-3-030-02302-7_10
   Lucero A, 2015, LECT NOTES COMPUT SC, V9297, P231, DOI 10.1007/978-3-319-22668-2_19
   Lunn K, 2003, INFORM SOFTWARE TECH, V45, P1045, DOI 10.1016/S0950-5849(03)00132-0
   Malinova, 2016, THESIS VIENNA U EC B
   Matthes, 2015, BPM WORKSHOP
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J., 2014, CAISE FORUM
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Norman D. A., 1986, Cognitive Engineering, P31, DOI [10.1201/b15703-3, DOI 10.1201/B15703]
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2016, CAS MAN MOD NOT VERS
   Parsons J, 2005, DATA KNOWL ENG, V55, P327, DOI 10.1016/j.datak.2004.12.008
   Pastor, 2016, BUSINESS PROCESS MAN, V260
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Pichler P, 2012, LECT NOTES BUS INF P, V99, P383
   Sachse, 2015, INFORM SYSTEMS NEURO, V10
   Steinau S, 2019, SOFTW SYST MODEL, V18, P2679, DOI 10.1007/s10270-018-0695-0
   Steinau S, 2018, LECT NOTES COMPUT SC, V10816, P53, DOI 10.1007/978-3-319-91563-0_4
   Steven Mertens, 2015, Lecture Notes in Business Information Processing, P151, DOI [10.1007/978-3-319-19237-6_10, DOI 10.1007/978-3-319-19237-6_10]
   ter Hofstede AHM, 1998, INFORM SOFTWARE TECH, V40, P519, DOI 10.1016/S0950-5849(98)00078-0
   The Open Group, 2017, ARCHIMATE 3 0 1 SPEC
   Vaculín R, 2011, IEEE INT ENTERP DIST, P151, DOI 10.1109/EDOC.2011.36
   van der Aalst W. M. P., 2001, GROUP'01. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, P42, DOI 10.1145/500286.500296
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Weske, 2018, ENTERPRISE BUSINESS, V318
   Weske, 2020, BIS 2020, V389
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Zensen A, 2018, IEEE INT ENTERP DIST, P105, DOI 10.1109/EDOC.2018.00023
NR 53
TC 1
Z9 1
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1353
EP 1377
DI 10.1007/s10270-021-00885-y
EA APR 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000641243500002
DA 2024-07-18
ER

PT J
AU Le Calvar, T
   Chhel, F
   Jouault, F
   Saubion, F
AF Le Calvar, Theo
   Chhel, Fabien
   Jouault, Frederic
   Saubion, Frederic
TI Coupling solvers with model transformations to generate explorable model
   sets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Constraint solving; Model set exploration
AB Model transformation is an effective technique to produce target models from source models. Most transformation approaches focus on generating a single target model from a given source model. However, there are situations where a collection of possible target models is preferred over a single one. Such situations arise when some choices cannot be encoded in the transformation. Then, search techniques can be used to help find a target model having specific properties. In this paper, we present an approach that combines model transformation and constraint programming to generate explorable sets of models. We extend previous work by adding support for multiple solvers, as well as extending ATL, a declarative transformation language used to write such transformations. We evaluate our approach and language on a task scheduling case study including both scheduling constraints and schedule visualization.
C1 [Le Calvar, Theo; Saubion, Frederic] Univ Angers, LERIA, SFR MATHSTIC, F-49000 Angers, France.
   [Le Calvar, Theo] Univ Montreal, DIRO, Montreal, PQ, Canada.
   [Chhel, Fabien; Jouault, Frederic] ESEO Grp, ERIS Team, Angers, France.
C3 Universite d'Angers; Universite de Montreal
RP Le Calvar, T (corresponding author), Univ Angers, LERIA, SFR MATHSTIC, F-49000 Angers, France.; Le Calvar, T (corresponding author), Univ Montreal, DIRO, Montreal, PQ, Canada.
EM theo.lecalvar@univ-angers.fr; fabien.chhel@eseo.fr;
   frederic.jouault@eseo.fr; frederic.saubion@univ-angers.fr
RI Saubion, Frédéric/HLG-9747-2023
OI Jouault, Frederic/0000-0002-2395-9623; Le Calvar,
   Theo/0000-0003-2273-2053; Chhel, Fabien/0000-0003-2224-8296
FU Angers Loire Metropole
FX Work was partially funded by Angers Loire Metropole and RFI Atlanstic
   2020. We would like to thank Daniel Varro for his helpful comments.
CR Anastasakis K., 2007, ModeVVa'07, P47
   Apt K.R., 2003, PRINCIPLES CONSTRAIN, DOI DOI 10.1017/CBO9780511615320
   Badros G. J., 2001, ACM Transactions on Computer-Human Interaction, V8, P267, DOI 10.1145/504704.504705
   Beldiceanu N, 2013, CONSTRAINTS, V18, P1, DOI 10.1007/s10601-012-9132-0
   Benhamou F., 1996, Algebraic and Logic Programming. 5th International Conference, ALP'96 Proceedings, P62
   Blazewicz J., 2014, Handbook on Scheduling: From Theory to Applications
   Boussemart F., 2016, CoRR abs/1611.03398
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Calvar T.L., 2018, OCL 18, V2245, P160
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Codognet, 1993, PPCP, V93, P190
   Cunha A, 2014, LECT NOTES COMPUT SC, V8411, P17
   Diskin Z, 2014, LECT NOTES COMPUT SC, V8568, P57
   FREEMANBENSON BN, 1990, COMMUN ACM, V33, P54, DOI 10.1145/76372.77531
   Horváth A, 2012, SOFTW SYST MODEL, V11, P385, DOI 10.1007/s10270-010-0185-5
   Horváth A, 2009, LECT NOTES COMPUT SC, V5795, P107, DOI 10.1007/978-3-642-04425-0_9
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2016, 16 INT WORKSH OCL TE, P121
   Jouault F, 2018, LECT NOTES COMPUT SC, V10748, P302, DOI 10.1007/978-3-319-74730-9_27
   Kleiner Mathias, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P54, DOI 10.1007/978-3-642-39013-5_5
   Kleiner M, 2010, LECT NOTES COMPUT SC, V6138, P173, DOI 10.1007/978-3-642-13595-8_15
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Le Calvar T, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1837, DOI 10.1145/3297280.3297461
   Leblebici E., 2014, ELECT COMMUN EASST, V67
   Lecoutre C., 2009, CONSTRAINT NETWORKS, DOI [10.1002/9780470611821, DOI 10.1002/9780470611821]
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2015, LECT NOTES COMPUT SC, V9033, P301, DOI 10.1007/978-3-662-46675-9_20
   Michel Laurent., 2018, MiniCP: A lightweight solver for constraint programming
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Panda B, 2003, P 2003 ACM S APPL CO, P367, DOI [10.1145/952532.952606, DOI 10.1145/952532.952606]
   Petter A, 2009, LECT NOTES COMPUT SC, V5563, P132, DOI 10.1007/978-3-642-02408-5_10
   Prud'homme C., 2017, TASC - LS2N CNRS UMR 6241
   Schatz Bernhard, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P173, DOI 10.1109/ECBS.2010.25
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2016, LECT NOTES COMPUT SC, V9633, P87, DOI 10.1007/978-3-662-49665-7_6
   Sen S., 2007, 17 INT C APPL DECL P, P59
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   WILSON M, 1993, J LOGIC PROGRAM, V16, P277, DOI 10.1016/0743-1066(93)90046-J
   Zheng GL, 2020, LECT NOTES COMPUT SC, V12076, P29, DOI 10.1007/978-3-030-45234-6_2
NR 44
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1633
EP 1652
DI 10.1007/s10270-021-00867-0
EA FEB 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000623122500001
DA 2024-07-18
ER

PT J
AU Käppel, M
   Ackermann, L
   Schönig, S
   Jablonski, S
AF Kaeppel, Martin
   Ackermann, Lars
   Schoenig, Stefan
   Jablonski, Stefan
TI Language-independent look-ahead for checking multi-perspective
   declarative process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Declarative process models; Multi-perspective; Look-ahead; Model
   checking; Predictive business process monitoring; SAT solving
ID ISSUE
AB Declarative process modelling languages focus on describing a process by restrictions over the behaviour, which must be satisfied throughout the whole process execution. Hence, they are well suited for modelling knowledge-intensive processes with many decision points. However, such models can be hard to read and understand, which affect the modelling and maintenance of the process models tremendously as well as their execution. When executing such declarative (multi-perspective) process models, it may happen that the execution of activities or the change of data values may result in the non-executability of crucial activities. Hence, it would be beneficial to know all consequences of decisions to give recommendations to the process participants. A look-ahead attempts to predict the effects of executing an activity towards possible consequences within an a priori defined time window. The prediction is based on the current state of the process execution, the intended next event and the underlying process model. While execution engines for single-perspective imperative process models already implement such functionality, execution approaches, for multi-perspective declarative process models that involve constraints on data and resources, are less mature. In this paper, we introduce a simulation-based look-ahead approach for multi-perspective declarative process models. This approach transforms the problem of a context-aware process simulation into a SAT problem, by translating a declarative multi-perspective process model and the current state of a process execution into a specification of the logic language Alloy. Via a SAT solver, process trajectories are generated that either satisfy or violate this specification. The simulated process trajectories are used to derive consequences and effects of certain decisions at any time of process execution. We evaluate our approach by means of three examples and give some advice for further optimizations.
C1 [Kaeppel, Martin] Univ Bayreuth, Inst Comp Sci, Bayreuth, Germany.
   [Ackermann, Lars; Jablonski, Stefan] Univ Bayreuth, Inst Comp Sci, Comp Sci, Bayreuth, Germany.
   [Schoenig, Stefan] Univ Regensburg, Informat Syst, Inst Management Informat Syst, Regensburg, Germany.
C3 University of Bayreuth; University of Bayreuth; University of Regensburg
RP Käppel, M (corresponding author), Univ Bayreuth, Inst Comp Sci, Bayreuth, Germany.
EM martin.kaeppel@uni-bayreuth.de; lars.ackermann@uni-bayreuth.de;
   stefan.schoenig@ur.de; stefan.jablonski@uni-bayreuth.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Ackermann L, 2018, LECT NOTES COMPUT SC, V11230, P154, DOI 10.1007/978-3-030-02671-4_9
   Ackermann L, 2017, LECT NOTES BUS INF P, V281, P61, DOI 10.1007/978-3-319-58457-7_5
   Alman A., P ICPM DOCTORAL CONS, V2703, P51
   Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   [Anonymous], 1996, PRIISM 96 C P
   [Anonymous], 2014, COLLABORATIVE COMPUT
   Belardinelli F., 2012, Service-Oriented Computing, V7636. Lecture Notes in Computer Science, P17, DOI [DOI 10.1007/978-3-642-34321-6_2, 10.1007/978-3-642-34321-6_2]
   Burattin A, 2016, EXPERT SYST APPL, V65, P194, DOI 10.1016/j.eswa.2016.08.040
   Camargo M, 2019, LECT NOTES COMPUT SC, V11675, P286, DOI 10.1007/978-3-030-26619-6_19
   Cook S. A., 1971, P 3 ANN ACM S THEOR, P151, DOI [10.1145/800157.805047, DOI 10.1145/800157.805047]
   de Leoni M, 2016, INFORM SYST, V56, P235, DOI 10.1016/j.is.2015.07.003
   De Smedt J, 2018, INFORM SYST, V74, P40, DOI 10.1016/j.is.2018.01.001
   De Smedt J, 2016, LECT NOTES COMPUT SC, V9694, P83, DOI 10.1007/978-3-319-39696-5_6
   De Smedt J, 2016, BUS INFORM SYST ENG+, V58, P19, DOI 10.1007/s12599-015-0416-y
   Di Ciccio C, 2017, INFORM SYST, V64, P425, DOI 10.1016/j.is.2016.09.005
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   GABBAY D, 1989, LECT NOTES COMPUT SC, V398, P409
   Goedertier Stijn, 2008, International Journal of Business Process Integration and Management, V3, P194, DOI 10.1504/IJBPIM.2008.023219
   Gonzalez P., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P25, DOI 10.1109/ICWS.2012.31
   Group O.M., 2011, TECHNICAL REPORT
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Hildebrandt T, 2013, J LOGIC ALGEBR PROGR, V82, P164, DOI 10.1016/j.jlap.2013.05.005
   Hull B, 2011, CHANDOS INF PROF SER, P51
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Käppel M, 2019, LECT NOTES BUS INF P, V352, P53, DOI 10.1007/978-3-030-20618-5_4
   Lars Ackermannund Stefan Sch nig., 2016, Online Proceedings of the BPM Demo Track. CEUR-WS.org, P12
   Montali M., 2009, THESIS
   Pesic M., 2008, THESIS
   Reichert M, 2012, Enabling Flexibility in Process-Aware Information Systems-Challenges, Methods. Technologies, DOI DOI 10.1007/978-3-642-30409-5
   Rozinat A, 2009, INFORM SYST, V34, P305, DOI 10.1016/j.is.2008.09.002
   Schönig S, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P271, DOI 10.5220/0006533502710278
   Schönig S, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P314, DOI 10.5220/0006772003140319
   Schonig S., LECT NOTES COMPUTER, V9936, P87
   Skydanienko V., 2018, BPM DEMOS
   Slaats Tijs, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P339, DOI 10.1007/978-3-642-40176-3_28
   StrOmsted R., 2018, BPM
   Sturm C., P BPM DEM TRACK BPM, V1920
   Torlak E, 2013, MATH STRUCT COMP SCI, V23, P915, DOI 10.1017/S0960129512000291
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Zazkis R., 2008, Educational Studies in Mathematics, V68, P195, DOI [https://doi.org/10.1007/s10649-007-9110-4, DOI 10.1007/S10649-007-9110-4]
NR 44
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1379
EP 1401
DI 10.1007/s10270-020-00857-8
EA JAN 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000606351200002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
AF Cuadrado, Jesus Sanchez
TI A verified catalogue of OCL optimisations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformations; OCL; Refactoring; Verification
ID MODEL; VERIFICATION; LANGUAGE; VALIDATION; DESIGN
AB OCL is widely used by model-driven engineering tools with different purposes like writing integrity constraints for meta-models, as a navigation language in model transformation languages or to define transformation specifications. Another scenario is the automatic generation of OCL code by a repair system. These generated expressions tend to be complex and unreadable due to the nature of the generative process. However, to be useful this code should be simple and resemble manually written code as much as possible when a developer must manually maintain it. There exists refactorings approaches for manually written OCL code, but there is no tool targeted to the optimisation of OCL expressions which have been automatically synthesised. Moreover, there is no available catalogue of OCL refactorings which can be integrated seamlessly into a tool. In this work, we contribute a set of refactorings intended to optimise OCL expressions, notably covering cases likely to arise in generated OCL code. We also contribute the implementation of these refactorings, built as a generic transformation catalogue using bento, a transformation reuse tool for ATL. This makes it possible to specialise the catalogue for any OCL variant based on Ecore. Moreover, we propose a method to verify the correctness of the implemented catalogue based on translation validation and model finding. We describe the design and implementation of the catalogue and evaluate it by optimising a large amount of OCL expressions and proving the correctness of each optimisation execution. We also derive working implementations of the catalogue for ATL, EMF/OCL and SimpleOCL made available in a tool called BeautyOCL.
C1 [Cuadrado, Jesus Sanchez] Univ Murcia, Languages & Syst Dept, Murcia, Spain.
C3 University of Murcia
RP Cuadrado, JS (corresponding author), Univ Murcia, Languages & Syst Dept, Murcia, Spain.
EM jesusc@um.es
RI Sanchez Cuadrado, Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616
CR Ab Rahim L, 2010, LECT NOTES COMPUT SC, V6394, P166
   Ackermann J, 2006, LECT NOTES COMPUT SC, V4001, P255, DOI 10.1007/11767138_18
   [Anonymous], P 40 HAW INT INT C S
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Assiri FY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P273, DOI 10.1109/ICST.2014.40
   Bracha G, 2015, ACM SIGPLAN NOTICES, V50, P35, DOI 10.1145/2854695.2854699
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Cheng Z, 2018, SOFTW SYST MODEL, V17, P1197, DOI 10.1007/s10270-016-0553-x
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Cuadrado J. S., 2016, SOFTW SYST MODEL, P1
   Cuadrado J.S, IEEE T SOFTW ENG, V17, P779
   Cuadrado J.S., 2018, 40 INT C SOFTW ENG I
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Giese M, 2005, LECT NOTES COMPUT SC, V3713, P309, DOI 10.1007/11557432_23
   Gogolla M, 2018, COMPUT LANG SYST STR, V54, P474, DOI 10.1016/j.cl.2017.10.001
   Hassam K, 2011, EUR CON SFTWR MTNCE, P151, DOI 10.1109/CSMR.2011.21
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kumar R, 2014, ACM SIGPLAN NOTICES, V49, P179, DOI 10.1145/2535838.2535841
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   LOVEMAN DB, 1977, J ACM, V24, P121, DOI 10.1145/321992.322000
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Mottu JM, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P88, DOI 10.1109/ISSRE.2015.7381802
   Necula GC, 2002, NATO SCI SER II-MATH, V62, P261
   Necula GC, 2000, ACM SIGPLAN NOTICES, V35, P83, DOI 10.1145/358438.349314
   OMG, 2014, OBJ CONSTR LANG OCL
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Pnueli A, 1999, LECT NOTES COMPUT SC, V1710, P231
   Reimann J., 2012, Proceedings of the 12th Workshop on OCL and Textual Modelling, P7
   Rose L, 2013, SOFTW SYST MODEL, V12, P201, DOI 10.1007/s10270-011-0203-2
   Cuadrado JS, 2018, LECT NOTES COMPUT SC, V10890, P28, DOI 10.1007/978-3-319-92997-2_3
   Cuadrado JS, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P12, DOI 10.1109/MODELS.2017.12
   Cuadrado JS, 2015, LECT NOTES COMPUT SC, V9152, P59, DOI 10.1007/978-3-319-21155-8_5
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Cuadrado JS, 2014, LECT NOTES COMPUT SC, V8568, P186
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Tibermacine C., 2011, P 14 INT ACM SIGS S, P31
   Tisi M, 2018, LECT NOTES COMPUT SC, V10888, P142, DOI 10.1007/978-3-319-93317-7_7
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Varro Daniel., 2003, Critical Systems Development workshop in UML03: 6th International Conference on the Unified Modeling Language, LNCS, V2863, P63
   Wagelaar D., SIMPLEOCL
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
NR 49
TC 0
Z9 0
U1 2
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1139
EP 1161
DI 10.1007/s10270-019-00740-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000569120800006
DA 2024-07-18
ER

PT J
AU Leduc, M
   Degueule, T
   Van Wyk, E
   Combemale, B
AF Leduc, Manuel
   Degueule, Thomas
   Van Wyk, Eric
   Combemale, Benoit
TI The Software Language Extension Problem
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific language; Extension; Composition; Expression problem
AB The problem of software language extension and composition drives much of the research in Software Language Engineering (SLE). Although various solutions have already been proposed, there is still little understanding of the specific ins and outs of this problem, which hinders the comparison and evaluation of existing solutionsIn this SoSyM Expert Voice, we introduce the Language Extension Problem as a way to better qualify the scope of the challenges related to language extension and compositionThe formulation of the problem is similar to the seminal Expression Problem introduced by Wadler in the late 1990s and lifts it from the extensibility of single constructs to the extensibility of groups of constructs, i.e., software languages. We provide a comprehensive definition of the actual constraints when considering language extension and believe the Language Extension Problem will drive future research in SLE, the same way the original Expression Problem helped to understand the strengths and weaknesses of programming languages and drove much research in programming languages.
C1 [Leduc, Manuel] Univ Rennes, INRIA, CNRS, IRISA, Rennes, France.
   [Degueule, Thomas] CWI, Amsterdam, Netherlands.
   [Van Wyk, Eric] Univ Minnesota, Minneapolis, MN USA.
   [Combemale, Benoit] Univ Toulouse, Toulouse, France.
   [Combemale, Benoit] INRIA, Toulouse, France.
C3 Universite de Rennes; Inria; Centre National de la Recherche
   Scientifique (CNRS); University of Minnesota System; University of
   Minnesota Twin Cities; Universite de Toulouse; Inria
RP Combemale, B (corresponding author), Univ Toulouse, Toulouse, France.; Combemale, B (corresponding author), INRIA, Toulouse, France.
EM manuel.leduc@irisa.fr; degueule@cwi.nl; evw@umn.edu;
   benoit.combemale@irit.fr
RI Degueule, Thomas/AEJ-3192-2022
OI Degueule, Thomas/0000-0002-5961-7940
CR [Anonymous], LECT NOTES COMPUTER
   Biboudis A, 2017, ACM SIGPLAN NOTICES, V52, P2, DOI [10.1145/3093335.2993239, 10.1145/2993236.2993239]
   Butting A, 2019, J SYST SOFTWARE, V152, P50, DOI 10.1016/j.jss.2019.02.026
   DEGUEULE T, 2016, COMPUT LANG SYST STR, V49, P30, DOI DOI 10.1016/j.cl.2016.09.001
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Erdweg S., 2012, P 12 WORKSH LANG DES, P1, DOI DOI 10.1145/2427048.2427055
   Erdweg S, 2011, ACM SIGPLAN NOTICES, V46, P391, DOI 10.1145/2076021.2048099
   Hills M, 2011, LECT NOTES COMPUT SC, V6705, P228, DOI 10.1007/978-3-642-21952-8_17
   Kaminski T, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3138224
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Leduc M, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P47, DOI 10.1145/3276604.3276622
   Leduc M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P112, DOI 10.1109/MODELS.2017.23
   Mendonça JCF, 2009, ADV CHEM RES, P269
   Mernik M, 2013, J SYST SOFTWARE, V86, P2451, DOI 10.1016/j.jss.2013.04.087
   Oliveira BCDS, 2012, LECT NOTES COMPUT SC, V7313, P2, DOI 10.1007/978-3-642-31057-7_2
   Torgersen M, 2004, LECT NOTES COMPUT SC, V3086, P123
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Van Wyk E, 2010, SCI COMPUT PROGRAM, V75, P39, DOI 10.1016/j.scico.2009.07.004
   Volter M, 2011, INT SUMMER SCH GENER, V7680, P383
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wadler Philip, 1998, The Expression Problem
   Zenger M., 2004, TECH REP
   Zhang W, 2017, DARTS, V3, P10
NR 23
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 263
EP 267
DI 10.1007/s10270-019-00772-7
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Llado, CM
   Smith, CU
AF Llado, Catalina M.
   Smith, Connie U.
TI Broadened support for software and system model interchange
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Performance modeling; Interoperability; Model interchange formats;
   Software performance engineering (SPE); Queueing networks; Software
   performance models
ID PERFORMANCE
AB Although sound performance analysis theories and techniques exist, they are not widely used because they require extensive expertise in performance modeling and measurement. The overall goal of our work is to make performance modeling more accessible by automating much of the modeling effort. We have proposed a model interoperability framework that enables performance models to be automatically exchanged among modeling (and other) tools. The core of the framework is a set of model interchange formats (MIF): a common representation for data required by performance modeling tools. Our previous research developed a representation for system performance models (PMIF) and another for software performance models (S-PMIF), both based on the Queueing Network Modeling (QNM) paradigm. In order to manage the research scope and focus on model interoperability issues, the initial MIFs were limited to QNMs that can be solved by efficient, exact solution algorithms. The overall model interoperability approach has now been demonstrated to be viable. This paper broadens the scope of PMIF and S-PMIF to represent models that can be solved with additional methods such as analytical approximations or simulation solutions. It presents the extensions considered, describes the extended meta-models, and provides verification with examples and a case study.
C1 [Llado, Catalina M.] Univ Illes Balears, Dept Cienc Matemat & Informat, Ctra Valldemossa,Km 7-6, Palma De Mallorca 07071, Spain.
   [Smith, Connie U.] Software Performance Engn, 2028 E Ben White Blvd 240-1321, Austin, TX 78741 USA.
C3 Universitat de les Illes Balears
RP Llado, CM (corresponding author), Univ Illes Balears, Dept Cienc Matemat & Informat, Ctra Valldemossa,Km 7-6, Palma De Mallorca 07071, Spain.
EM cllado@uib.es
FU US Air Force [FA8750-15-C-0171, 88ABW-2016-3702]
FX Smith's participation was sponsored by US Air Force Contract
   FA8750-15-C-0171 Case number 88ABW-2016-3702.
CR [Anonymous], 2007, Unified Modeling Language: Superstructure Specification
   [Anonymous], 2013, TUTORIAL INTRO LAYER
   Balsamo S., 2005, P 5 INT WORKSH SOFTW
   Bandyopadhyay A., 2007, P INT C SOFTW ENG AP
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Berardinelli L., 2017, SOFTW SYST MODEL, P1
   Berardinelli L, 2016, IEEE INTL CONF IND I, P383, DOI 10.1109/INDIN.2016.7819190
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   CA Hyperformix, 2016, CA HYP DOC MAN
   Casale G., 2011, TOOLS PERFORMANCE EV, P24
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Drake J. M., 2001, ROBOT TELEOPERADO EJ
   Electronics Industries Association, 1994, EIAIS106
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   García D, 2006, INT CONF QUANT EVAL, P121
   Gómez A, 2018, LECT NOTES COMPUT SC, V11150, P105, DOI 10.1007/978-3-030-01042-3_7
   Grassi V, 2008, LECT NOTES COMPUT SC, V5153, P327
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Llado C. M., 2013, LNCS, V8168
   Llado C. M., 2014, P 8 INT C PERF EV ME
   Medina J. L., 2011, UML PROFILE MARTE MO
   Medina J.L., 2011, SIGBED Rev, V8, P64
   Merseguer J, 2012, DISCRETE EVENT DYN S, V22, P163, DOI 10.1007/s10626-011-0111-1
   Mohammad A, 2012, INT J ELECT COMPUT E, V1, P35
   Mohammad A., 2012, PROC INT C EL COMP S
   Moreno GA, 2010, PERFORM EVALUATION, V67, P612, DOI 10.1016/j.peva.2009.07.008
   Object Management Group, UML PROF MARTE MOD A
   Petriu D., 2010, CHAPTER SOFTWARE MOD, P139
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Simulog, 1996, MODLINE 2 0 QNAP2 9
   Smith C. U., P 8 ACM SPEC INT C P, P227
   Smith C. U., 2011, P SYST SOFTW TECHN C
   Smith C. U., 2011, MODEL INTEROPERABILI, P10
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith C.U., 2005, P 5 INT WORKSHOP SOF, P87
   Smith C. U., PROC 1 JOINT WOSP SI, P255
   Smith CU, 2011, COMPUT J, V54, P674, DOI 10.1093/comjnl/bxq065
   Smith CU, 2010, PERFORM EVALUATION, V67, P548, DOI 10.1016/j.peva.2010.01.006
   Smith CU, 1999, J SYST SOFTWARE, V49, P63, DOI 10.1016/S0164-1212(99)00067-9
   Smith CU, 2004, INT CONF QUANT EVAL, P38
   SMITH CU, 2002, PERFORMANCE SOLUTION
   SPE-ED, SPE ED
   Troya J, 2014, COMPUT STAND INTER, V36, P863, DOI 10.1016/j.csi.2014.01.002
   Williams L. G., 1995, Quantitative Evaluation of Computing and Communication Systems. 8th International Conference on Modelling Techniques and Tools for Computer Performance Evaluation Performance Tools '95. 8th GI/ITG Conference on Measuring, Modelling and Evaluating Computing and Communication Systems MMB'95. Proceedings, P86, DOI 10.1007/BFb0024309
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
   Zallocco S., INTRO WEASEL WEB SER
NR 48
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3527
EP 3550
DI 10.1007/s10270-019-00728-x
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600012
DA 2024-07-18
ER

PT J
AU Hewelt, M
   Pufahl, L
   Mandal, S
   Wolff, F
   Weske, M
AF Hewelt, Marcin
   Pufahl, Luise
   Mandal, Sankalita
   Wolff, Felix
   Weske, Mathias
TI Toward a methodology for case modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Case management; Goal modeling; Object lifecycle; Process elicitation;
   Process modeling; t; BPM
ID BUSINESS; REQUIREMENTS; DESIGN
AB Case management is increasingly used to capture and enact flexible, knowledge-intensive processes in organizations. None of the existing case management approaches provides a methodology for case model elicitation and modeling. In this contribution, three modeling methods for fragment-based case management are presented: one which focuses on the control-flow view, the process-first method, one which has a data-centric view, the object lifecycle-first method, and one which focuses on the goals of a case, the goals-first method. Following the design science process, each of the three methods was evaluated in two case modeling workshops with two different stakeholder groups (PhD students and secretaries), resulting in a total of six workshops. All participants were novices in case management and most of them as well in process modeling. The results indicate that the process-first method can be quickly learned by novices and it might be useful for scenarios where the focus is on the main process with some degree of flexibility. The object lifecycle-first method yields more flexible and consistent case models, but requires a higher initial modeling effort, as the lifecycle of the main case object has to be designed first. The goals-first method leads to a detailed and consistent case model and additionally provides, by means of the defined goals, a checklist what needs to be done for a case. This method requires in addition to the process modeling notation another model type, the goal hierarchy, and therefore is less suited for novice modelers, as found by the workshop results.
C1 [Hewelt, Marcin; Pufahl, Luise; Mandal, Sankalita; Wolff, Felix; Weske, Mathias] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
C3 University of Potsdam
RP Pufahl, L (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
EM marcin.hewelt@hpi.de; Luise.Pufahl@hpi.de; sankalita.mandal@hpi.de;
   felix.wolff@hpi.de; mathias.weske@hpi.de
OI Pufahl, Luise/0000-0002-5182-2587; Mandal, Sankalita/0000-0003-0310-4000
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Antunes P, 2013, J NETW COMPUT APPL, V36, P1466, DOI 10.1016/j.jnca.2013.03.014
   Bhattacharya K., 2009, HDB FRESEARCH BUSINE, P503
   Claes J., 2016, STRUCTURED PROCESS M
   Claes J, 2015, INFORM SYST FRONT, V17, P1401, DOI 10.1007/s10796-015-9585-y
   Combi C, 2017, J HEALTHC INFORM RES, V1, P157, DOI 10.1007/s41666-017-0007-4
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   FELDER RM, 1988, ENG EDUC, V78, P674
   Front A, 2017, SOFTW SYST MODEL, V16, P691, DOI 10.1007/s10270-015-0489-6
   Gonzalez-Lopez F, 2019, LECT NOTES BUS INF P, V352, P87, DOI 10.1007/978-3-030-20618-5_6
   Haarmann S., 2015, P BPM DEMO SESSION B, V1418, P110
   Hewelt M., 2016, P BPM DEMO TRACK CEU, V1789, P67
   Hewelt M, 2018, LECT NOTES BUS INF P, V318, P181, DOI 10.1007/978-3-319-91704-7_12
   Hewelt Marcin, 2016, LECT NOTES BUSINESS, P38
   Kueng P., 1997, Business Process Reengineering and Management Journal, V3, P17
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Lapouchnian A, 2005, TECHNICAL REPORT
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Lubbe A, 2011, THESIS
   Marin M.A., 2015, LECT NOTES BUSINESS
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Meyer JM, 2015, ENGAGING THE EVERYDAY: ENVIRONMENTAL SOCIAL CRITICISM AND THE RESONANCE DILEMMA, P167
   Moody D, 2003, ECIS 2003 P
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2014, FORMAL20140505 OMG
   Oppl S, 2016, INT J INF SYST MODEL, V7, P1, DOI 10.4018/IJISMD.2016040101
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Rosemann M., 2011, P 32 INT C INF SYST, P1
   Sedrakyan G, 2014, COMPUT HUM BEHAV, V41, P486, DOI 10.1016/j.chb.2014.09.054
   Turetken O, 2011, INFORM MANAGE-AMSTER, V48, P235, DOI 10.1016/j.im.2011.06.001
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Van der Aalst WMP, 2001, INT J COOP INF SYST, V10, P443, DOI 10.1142/S0218843001000412
   van der Aalst WMP, 2016, PROCESS MINING DATA, V2nd, DOI DOI 10.1007/978-3-662-49851-4
NR 39
TC 8
Z9 8
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1367
EP 1393
DI 10.1007/s10270-019-00766-5
EA NOV 2019
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000494785700001
DA 2024-07-18
ER

PT J
AU Derakhshanmanesh, M
   Ebert, J
   Grieger, M
   Engels, G
AF Derakhshanmanesh, Mahdi
   Ebert, Juergen
   Grieger, Marvin
   Engels, Gregor
TI Model-integrating development of software systems: a flexible
   component-based approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-integrating development; Model-integrating components;
   Model-integrating software; Software components; Modeling language
   engineering; Models at runtime; Self-adaptive software
AB A promising way to develop flexible software systems is to include models that are analyzed, modified and executed at runtime as an integrated part of the system. Building such model-integrating systems is a challenging task since the respective modeling languages have to be supported comprehensively at runtime, and these systems still need to be developable in a modular way by composing them from basic building blocks. Model-driven (MDD) and component-based development (CBD) are two established orthogonal approaches that can tackle the mentioned challenges. MDD is based on the use of models and modeling languages as first-class entities to systematically engineer software systems. CBD enables the engineering of modular systems by facilitating a divide-and-conquer approach with reuse. However, combining and aligning the individual principles from both approaches is an open research problem. In this article, we describe model-integrating development (MID), an engineering approach that enables the systematic development of component-based, model-integrating software. MID combines principles from MDD and CBD and is based on the central assumption that models and code shall be treated equally as first-class entities of software throughout its life cycle. In particular, MID leverages the added flexibility that comes with models at runtime, i.e., when models are an integral part of running software. The practicability of the proposed solution concept is rationalized based on a reference implementation that provides the basis for a thoroughly described and critically discussed feasibility study: a dynamic access control product line. The obtained benefits are presented in a distilled way, and future research challenges are identified.
C1 [Ebert, Juergen] Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
   [Derakhshanmanesh, Mahdi] MHP, MHPLab Berlin, Berlin, Germany.
   [Grieger, Marvin; Engels, Gregor] Paderborn Univ, Dept Comp Sci, Paderborn, Germany.
C3 University of Koblenz & Landau; University of Paderborn
RP Ebert, J (corresponding author), Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
EM mahdi.derakhshanmanesh@mhp.com; ebert@uni-koblenz.de;
   mail@marvingrieger.de; engels@uni-paderborn.de
CR Amoui M, 2012, J SYST SOFTWARE, V85, P2720, DOI 10.1016/j.jss.2012.05.033
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], COMPONENT SOFTWARE O
   [Anonymous], THESIS
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], WHIT PAP DIR MOD EX
   [Anonymous], 2010, LECT NOTES COMPUTER
   [Anonymous], P WORKSH OBJ OR TECH
   [Anonymous], MODEL INTEGRATING SO
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 1 WORKSH CONT SOFT
   [Anonymous], SOFTWARETECHNIK TREN
   [Anonymous], P SOFTW ENG 2009
   [Anonymous], P 10 WORKSH MOD RUN
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], P 3 WORKSH MOD BAS M
   [Anonymous], INTEGRATE MODELS COD
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2001, AUTONOMIC COMPUTING
   [Anonymous], LNCS
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], SEM FDN SUBS EX UML
   [Anonymous], OCL OBJ CONSTR LANG
   [Anonymous], MODELS RUN TIME
   Atkinson R, 2009, URBAN RES PRACT, V2, P1, DOI 10.1080/17535060902727009
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Ballagny C, 2009, INT CONF SELF SELF, P206, DOI 10.1109/SASO.2009.11
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Ciccozzi Federico, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P153, DOI 10.1109/SEAA.2013.31
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Derakhshanmanesh M, 2014, LECT NOTES COMPUT SC, V8767, P386, DOI 10.1007/978-3-319-11653-2_24
   Derakhshanmanesh Mahdi, 2011, P 6 INT S SOFTW ENG, P128, DOI DOI 10.1145/1988008.1988026
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Haber A, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P19
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5560, P39, DOI 10.1007/978-3-642-03764-1_2
   Herrmann Christoph, 2009, Proceedings of the 2009 International Conference on Software Engineering Research & Practice. SERP 2009, P172
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   OMG: Business process model and notation (BPMN) version 2. 0, 2011, TECHNICAL REPORT
   Plotkin G. D., 1981, A structural approach to operational semantics
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Sztipanovits J, 1997, COMPUTER, V30, P110, DOI 10.1109/2.585163
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
NR 53
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2557
EP 2586
DI 10.1007/s10270-018-0682-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900008
DA 2024-07-18
ER

PT J
AU Hilken, F
   Gogolla, M
   Burgueño, L
   Vallecillo, A
AF Hilken, Frank
   Gogolla, Martin
   Burgueno, Loli
   Vallecillo, Antonio
TI Testing models and model transformations using classifying terms
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Model transformations; Contract-based specifications; Equivalence
   partitioning
ID PARTITION; UML
AB This paper proposes the use of equivalence partitioning techniques for testing models and model transformations. In particular, we introduce the concept of classifying terms, which are general OCL terms on a class model enriched with OCL constraints. Classifying terms permit defining equivalence classes, in particular for partitioning the source and target model spaces of the transformation, defining for each class a set of equivalent models with regard to the transformation. Using these classes, a model validator tool is able to automatically construct object models for each class, which constitute relevant test cases for the transformation. We show how this approach of guiding the construction of test cases in an orderly, systematic and efficient manner can be effectively used in combination with Tracts for testing both directional and bidirectional model transformations and for analyzing their behavior.
C1 [Hilken, Frank] Univ Bremen, Database Syst Res Grp, Bremen, Germany.
   [Gogolla, Martin] Univ Bremen, Comp Sci, Bremen, Germany.
   [Burgueno, Loli; Vallecillo, Antonio] Univ Malaga, Malaga, Spain.
C3 University of Bremen; University of Bremen; Universidad de Malaga
RP Hilken, F (corresponding author), Univ Bremen, Database Syst Res Grp, Bremen, Germany.
EM fhilken@informatik.uni-bremen.de; gogolla@informatik.uni-bremen.de;
   loli@lcc.uma.es; av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Burgueño, Lola/L-3817-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueño,
   Lola/0000-0002-7779-8810
FU Spanish Research Project [TIN2014-52034-R]
FX We would like to thank Romina Eramo and Alfonso Pierantonio for their
   help and support with JTL. This work was partially funded by Spanish
   Research Project TIN2014-52034-R.
CR Amrani M., 2014, CEUR WS, V1325
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], 2015, MET FAC MOF 2 0 QUER
   [Anonymous], 2011, 250222016 ISOIEC
   Aranega V., 2009, P ICSOFT 09
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Baudry B., 2006, ECMDA WS INTEGRATION
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Burgueno Loli, 2013, CEUR Workshop Proceedings, V1115, P76
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cariou E., 2004, P OCL MDE, P1
   Ciancone A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P97, DOI 10.1109/QUATIC.2010.15
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Dingel J., 2014, CEUR WS P, V1277
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Foster JN, 2008, ACM SIGPLAN NOTICES, V43, P383, DOI 10.1145/1411203.1411257
   Gabmeyer S., 2013, P 1 VOLT WORKSH
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gogolla M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P312, DOI 10.1109/MODELS.2015.7338262
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   González CA, 2014, LECT NOTES COMPUT SC, V8568, P25
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Group A, 2016, ATL ZOO
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hibberd M, 2007, LECT NOTES COMPUT SC, V4735, P589
   Hilken F., 2015, P AMT 2015 CEUR WORK, V1500, P1
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Lammel R., 2004, 1 INT WORKSH SOFTW E
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mu SC, 2004, LECT NOTES COMPUT SC, V3302, P2
   Offutt A. J., 1995, Technology of Object-Oriented Languages and Systems TOOLS 17. Proceedings of the Seventeenth International Conference, P293
   Offutt J, 2014, EMPIR SOFTW ENG, V19, P558, DOI 10.1007/s10664-012-9229-5
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Roldan M., 2011, ECEASST, V44
   Stevens P., 2012, ECEASST, V49
   Stevens P, 2013, SOFTW SYST MODEL, V12, P175, DOI 10.1007/s10270-011-0198-8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Vallecillo A., FORMAL METHODS MODEL
   Van der Straeten R, 2011, LECT NOTES COMPUT SC, V6698, P69, DOI 10.1007/978-3-642-21470-7_6
   Wimmer M., 2009, P ASE 09
   Wohlin C., 2012, Experimentation in Software Engineering
   Yue T, 2016, SOFTW SYST MODEL, V15, P757, DOI 10.1007/s10270-014-0438-9
   Zhenjiang Hu, 2008, Higher-Order and Symbolic Computation, V21, P89, DOI 10.1007/s10990-008-9025-5
NR 61
TC 18
Z9 18
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 885
EP 912
DI 10.1007/s10270-016-0568-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kolovos, DS
   García-Domínguez, A
   Rose, LM
   Paige, RF
AF Kolovos, Dimitrios S.
   Garcia-Dominguez, Antonio
   Rose, Louis M.
   Paige, Richard F.
TI Eugenia: towards disciplined and automated development of GMF-based
   graphical model editors
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graphical modelling; Model transformation; Eclipse; GMF
ID LANGUAGE
AB EMF and GMF are powerful frameworks for implementing tool support for modelling languages in Eclipse. However, with power comes complexity, implementing a graphical editor for a modelling language using EMF and GMF requires developers to handcraft and maintain several detailed interconnected models through a loosely guided, labour-intensive, and error-prone process. We demonstrate how the application of metamodel annotation and model transformation techniques can help to manage the complexity of GMF and EMF and deliver significant productivity, quality, and maintainability benefits. We present Eugenia, an open-source tool that implements the proposed approach, illustrate its functionality with an example, evaluate it through an empirical study, and report on the community's response to the tool.
C1 [Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Rose, Louis M.] Univ York, Enterprise Syst, York, N Yorkshire, England.
   [Paige, Richard F.] Univ York, Enterprise Syst, Enterprise Syst Res Grp, York, N Yorkshire, England.
   [Garcia-Dominguez, Antonio] Univ Cadiz, Cadiz, Spain.
C3 University of York - UK; University of York - UK; University of York -
   UK; Universidad de Cadiz
RP Kolovos, DS (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM dkolovos@cs.york.ac.uk; antonio.garciadominguez@uca.es;
   louis@cs.york.ac.uk; paige@cs.york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; Rose, Louis M/L-8892-2014;
   Garcia-Dominguez, Antonio/K-4755-2014
OI Kolovos, Dimitris/0000-0002-1724-6563
FU European Commission [611125]; University of Cadiz
   [PU-EPIF-FPI-C2010-065]; MoDSOA Project of the National Research,
   Development and Innovation Program of the Spanish Ministry of Science
   and Innovation [TIN2011-27242]
FX Parts of this work were supported by the European Commission's Seventh
   Framework Programme, through Grant #611125 (MONDO). Other parts of this
   work were supported by the doctoral scholarship PU-EPIF-FPI-C2010-065
   from the University of Cadiz and by the MoDSOA Project (TIN2011-27242)
   of the National Research, Development and Innovation Program of the
   Spanish Ministry of Science and Innovation. The authors would also like
   to thank Adolfo Sanchez-Barbudo Herrera and Horacio Hoyos Rodriguez for
   their help with the evaluation experiments discussed in Sect. 5.
CR Baetens N., 2011, TECHNICAL REPORT
   Calvillo J, 2013, INT J MED INFORM, V82, P58, DOI 10.1016/j.ijmedinf.2012.02.006
   Dayibas O, 2012, P INT COMP SOFTW APP, P105, DOI 10.1109/COMPSAC.2012.20
   de Lara J., 2002, ICEIS 2002. Proceedings of the Fourth International Conference on Enterprise Information Systems, P642
   Demirli E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P355, DOI 10.1109/WICSA.2011.57
   Di Ruscio Davide, 2010, P 32 ACM IEEE INT C, V1, P85, DOI DOI 10.1145/1806799.1806816
   El Kouhen A., 2012, TECHNICAL REPORT
   Frantz RZ, 2011, INT J COOP INF SYST, V20, P143, DOI 10.1142/S0218843011002225
   Garcia J., 2013, DESARROLLO SOFTWARE
   García-Domínguez A, 2011, LECT NOTES COMPUT SC, V6981, P395, DOI 10.1007/978-3-642-24485-8_29
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kolovos D.S., 2008, P 1 INT C MOD TRANSF
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Noguero A., 2012, 2012 7 IB C INF SYST, P1
   Pena Carlos, 2010, Proceedings 2010 IEEE 12th International Conference on Commerce and Enterprise Computing (CEC 2010), P80, DOI 10.1109/CEC.2010.25
   Schnepel E., 2008, P SPEC INT GROUP MOD
   Seehusen Fredrik, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P152, DOI 10.1007/978-3-642-21732-6_11
   Steinberg D., 2008, ECLIPSE SERIES
   Sun Y., 2011, P 2 INT C ENG MET
   Sun Y., 2012, LNCS, V7590
   Temate S., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P743, DOI 10.1109/ITNG.2011.131
   Wienands C, 2009, LECT NOTES COMPUT SC, V5795, P453, DOI 10.1007/978-3-642-04425-0_35
   Williams J. R., 2011, IDENTIFYING DESIRABL, V6956
NR 24
TC 37
Z9 39
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 229
EP 255
DI 10.1007/s10270-015-0455-3
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500014
DA 2024-07-18
ER

PT J
AU Atkinson, C
   Gerbig, R
   Tunjic, CV
AF Atkinson, Colin
   Gerbig, Ralph
   Tunjic, Christian Vjekoslav
TI Enhancing classic transformation languages to support multi-level
   modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level transformation; Orthogonal classification architecture;
   Ontological classification; Linguistic classification
AB As practical tools for disciplined multi-level modeling have begun to mature, the problem of supporting simple and efficient transformations to-and-from multi-level models to facilitate interoperability has assumed growing importance. The challenge is not only to support efficient transformations between multi-level models, but also between multi-level and two-level model content represented in traditional modeling infrastructures such as the UML and programming languages. Multi-level model content can already be accessed by traditional transformation languages such as ATL and QVT, but in a way that is blind to the ontological classification information they contain. In this paper, we present an approach for making rule-based transformation languages "multi-level aware" so that the semantics of ontological classification as well as linguistic classification can be exploited when writing transformations.
C1 [Atkinson, Colin; Gerbig, Ralph; Tunjic, Christian Vjekoslav] Univ Mannheim, Chair Software Engn, D-68131 Mannheim, Germany.
C3 University of Mannheim
RP Gerbig, R (corresponding author), Univ Mannheim, Chair Software Engn, D-68131 Mannheim, Germany.
EM atkinson@informatik.uni-mannheim.de; gerbig@informatik.uni-mannheim.de;
   tunjic@informatik.uni-mannheim.de
OI Atkinson, Colin/0000-0002-3164-5595
CR [Anonymous], MET FAC MOF 2 0 QUER
   [Anonymous], 2006, ECL SUMM EUR ECL MOD
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson Colin, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P208, DOI 10.1007/978-3-642-30476-7_14
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C., 2002, LECT NOTES COMPUTER
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   de Lara Juan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P259, DOI 10.1007/978-3-642-31491-9_20
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Demuth Andreas, 2011, P 19 ACM SIGSOFT S 1, P452, DOI [10.1145/2025113.2025189, DOI 10.1145/2025113.2025189]
   Eclipse Foundation, ATL DEV GUID REG VM
   Eclipse Foundation, ATL US GUID ATL LANG
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Jablonski S, 2010, P 10 WORKSH DOM SPEC
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kurtev Bezivin J., 2002, COOPIS DOA 2002 FED
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   University of Mannheim-Software Engineering Group, MELANEE MULT MOD ONT
   University of Mannheim - Software Engineering Group, NAOMI OPEN AD ORTH M
   Volz B., 2011, ICSE 2011 WORKSH FLE
   [No title captured]
NR 28
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 645
EP 666
DI 10.1007/s10270-013-0384-y
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400007
DA 2024-07-18
ER

PT J
AU Misbhauddin, M
   Alshayeb, M
AF Misbhauddin, Mohammed
   Alshayeb, Mohammad
TI Extending the UML use case metamodel with behavioral information to
   facilitate model analysis and interchange
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Use case diagram; Metamodel; Behavior specification
ID REQUIREMENTS; GOAL
AB Use case diagrams are primary artifacts used for modeling functional requirements. Use case diagrams are part of the Unified Modeling Language (UML) suite of models that has become a de facto standard for modeling object oriented languages. Each model in this suite is described by a metamodel that dictates its syntax and semantics. The use case diagram is considered the most controversial diagram in UML. Practitioners claim that the use case diagram cannot be used as a valuable artifact for requirement analysis. The main reason behind this concern is the lack of behavioral description of a use case depicted within the model. Quite a few extensions to the use case metamodel have been proposed in literature to incorporate behavioral aspect of a use case within the metamodel. All these extensions omit a few important features like generalization and most of them can only be used for model representation and cannot be used for model analysis and evaluation. In this paper, we propose an extension to the UML use case metamodel with use case behavior specification elements. The main objective of the proposed extension is to provide a complete metamodel for use case diagrams which includes representation for all its elements and relationships in a conflict-free manner and one that includes information for model analysis, evaluation, and interchange among modeling tools. In order to include all valuable information related to a use case, a number of use case representation templates were considered for the proposed extension. Simultaneously, to enable the use case models generated based on the proposed metamodel to be used for analysis, pertinent information related to model usage in analysis such as effort estimation, use case scheduling, and use case metrics evaluation were considered from published studies, tools, and paradigms and included within the proposed metamodel.
C1 [Misbhauddin, Mohammed; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, POB 5066, Dhahran 31261, Saudi Arabia.
EM mdmisbha@kfupm.edu.sa; alshayeb@kfupm.edu.sa
RI ; Alshayeb, Mohammad/B-5941-2015
OI Misbhauddin, Mohammed/0000-0002-4940-575X; Alshayeb,
   Mohammad/0000-0001-7950-0099
FU King Abdul Aziz City for Science & Technology (KACST); Deanship of
   Scientific Research of the King Fahd University of Petroleum and
   Minerals
FX This research work is partially supported by King Abdul Aziz City for
   Science & Technology (KACST) as well as the Deanship of Scientific
   Research of the King Fahd University of Petroleum and Minerals.
CR ADOLPH S, 2003, PATTERNS EFFECTIVE U
   Almendros-Jiménez JM, 2007, COMPUT J, V50, P116, DOI 10.1093/comjnl/bx1053
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   [Anonymous], XML MET INT SPEC 2 1
   [Anonymous], 2009, VIS US CAS
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 6 ECOOP WORKSH QUANT
   Arlow Jim., 2002, UML UNIFIED PROCESS
   Armour F., 2001, ADV USE CASE MODELIN
   Back R.-J., 1999, TECHNICAL REPORT
   Bernárdez B, 2004, J RES PRACT INF TECH, V36, P247
   Bittner K., 2003, USE CASE MODELING
   Bragança A, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P123
   Braz MR, 2006, P INT COMP SOFTW APP, P221
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Constantine LL, 2001, AW OBJ TECHNOL S, P245
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Díaz I, 2004, INFORM MANAGE-AMSTER, V41, P961, DOI 10.1016/j.im.2003.10.003
   Diev S., 2006, SIGSOFT SOFTWARE ENG, V31, P1, DOI DOI 10.1145/1118537.1118540
   do P. Leite J. C. S., 2000, Requirements Engineering, V5, P38, DOI 10.1007/PL00010342
   Dranidis D., 2003, P 1 S E EUR WORKSH F
   Durán A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P165, DOI 10.1109/ICRE.2002.1048519
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Fliedl G, 2007, DATA KNOWL ENG, V61, P433, DOI 10.1016/j.datak.2006.06.012
   Grieskamp W, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P167, DOI 10.1109/APAQS.2001.990016
   Grieskamp W, 2000, ICFEM 2000: THIRD INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P111, DOI 10.1109/ICFEM.2000.873811
   Gutiérrez JJ, 2008, LECT NOTES COMPUT SC, V5301, P83, DOI 10.1007/978-3-540-87875-9_6
   Hilsbos M, 2005, LECT NOTES COMPUT SC, V3770, P53, DOI 10.1007/11568346_7
   Hoffmann V, 2009, J OBJECT TECHNOL, V8, P85, DOI 10.5381/jot.2009.8.3.a2
   Hornbaek K., 2007, P 11 IFIP TC 13 INT
   Issa AA, 2007, LECT NOTES ENG COMP, P523
   KARNER G, 1993, THESIS U LINKOPING S
   Kim J, 2006, DATA KNOWL ENG, V58, P21, DOI 10.1016/j.datak.2005.05.006
   Kim Y, 2007, LECT NOTES COMPUT SC, V4439, P108
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kruchten P., 2000, RATIONAL UNIFIED PRO, V2
   Laguna MA, 2009, COMM COM INF SC, V47, P62
   Larman C., 2001, APPL UML PATTERNS IN, V2
   Lei M, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P843, DOI 10.1109/ICACTE.2008.83
   Li LW, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P293, DOI 10.1109/ASE.2000.873681
   Metz P., 2003, J OBJECT TECHNOL, V2, P111
   Miller I., 2003, MDA GUIDE VERSION 1
   Misbhauddin M., 2011, UCDESC, V2012
   Nakatani T, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P251, DOI 10.1109/APSEC.2001.991485
   Nunes NJ, 2010, LECT NOTES COMPUT SC, V5963, P131, DOI 10.1007/978-3-642-11797-8_11
   Ochodek M., 2011, 2 CENTRAL E EUROPEAN, P55
   *OMG, 2006, MET FAC MOF
   OMG, 2011, VERS 2 4 1
   Overmyer SP, 2001, PROC INT CONF SOFTW, P401, DOI 10.1109/ICSE.2001.919113
   Phillips C., 2001, P 13 AUSTR C SOFTW E
   Regnell B., 1996, P IEEE S WORKSH ENG
   Repond J., 2011, 4 INDIA SOFTWARE ENG, P135
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Rui K., 2003, P 25 AUSTRALASIAN CO, P301
   Rui K, 2007, THESIS CONCORDIA U
   Rumbaugh J., 2005, UNIFIED MODELING LAN, V2
   Sampaio Americo., 2005, P 20 IEEEACM INT C A, P352
   Sawyer P., 1996, TECHNICAL REPORT
   Schneider G., 2001, APPL USE CASES PRACT, V2
   Serlio, 2011, CASECOMPLETE
   Sinha A, 2009, I C DEPEND SYS NETWO, P327, DOI 10.1109/DSN.2009.5270320
   Sinha A, 2008, LECT NOTES COMPUT SC, V5301, P97, DOI 10.1007/978-3-540-87875-9_7
   Some S.S., 2007, 6 INT WORKSHOP SCENA, P4
   Somé SS, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P190
   Somé SS, 2009, J OBJECT TECHNOL, V8, P87, DOI 10.5381/jot.2009.8.7.a2
   Somé SS, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P724
   Toro A.D., 1999, WORKSHOP ENGENHARIA, P17
   Toutanova K., 2003, STANFORD POS TAGGER
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Yu E, 2005, TECHNICAL REPORT
   Yue T., 2010, TECHNICAL REPORT
   Zelinka L, 2009, 2009 1ST IEEE EASTERN EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, P1, DOI 10.1109/ECBS-EERC.2009.26
NR 74
TC 15
Z9 18
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 813
EP 838
DI 10.1007/s10270-013-0333-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400019
DA 2024-07-18
ER

PT J
AU Büttner, F
   Cabot, J
AF Buettner, Fabian
   Cabot, Jordi
TI Lightweight string reasoning in model finding
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model instantiation; OCL; String constraints; Constraint logic
   programming; Constraint handling rules
AB Models play a key role in assuring software quality in the model-driven approach. Precise models usually require the definition of well-formedness rules to specify constraints that cannot be expressed graphically. The Object Constraint Language (OCL) is a de-facto standard to define such rules. Techniques that check the satisfiability of such models and find corresponding instances of them are important in various activities, such as model-based testing and validation. Several tools for these activities have been developed, but to our knowledge, none of them supports OCL string operations on scale that is sufficient for, e.g., model-based testing. As, in contrast, many industrial models do contain such operations, there is evidently a gap. We present a lightweight solver that is specifically tailored to generate large solutions for tractable string constraints in model finding, and that is suited to directly express the main operations of the OCL datatype String. It is based on constraint logic programming (CLP) and constraint handling rules, and can be seamlessly combined with other constraint solvers in CLP. We have integrated our solver into the EMFtoCSP model finder, and we show that our implementation efficiently solves several common string constraints on large instances.
C1 [Buettner, Fabian; Cabot, Jordi] Ecole Mines Nantes INRIA, AtlanMod, Nantes, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique
RP Büttner, F (corresponding author), Ecole Mines Nantes INRIA, AtlanMod, Nantes, France.
EM fabian.buettner@inria.fr; jordi.cabot@inria.fr
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489
FU European Project CESAR
FX This work has been partly funded by the European Project CESAR.
CR Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2009, ELECT COMMUN EUR ASS
   Bjorner N, 2009, LECT NOTES COMPUT SC, V5505, P307, DOI 10.1007/978-3-642-00768-2_27
   Buttner Fabian, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P244, DOI 10.1007/978-3-642-31491-9_19
   Cabot J., 2007, P AUT SOFTW ENG ASE
   Cadoli M., 2004, P CP 2004 WORKSH CSP
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Fruhwirth T., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P13, DOI 10.1145/1140335.1140337
   Fruhwirth TW, 1994, LECT NOTES COMPUTER, V910, P90
   Golden K., 2003, LNCS, V2833
   Gonzalez C.A., 2012, FORMAL METHODS SOFTW
   Gonzalez Perez C. A., 2012, FORMAL METHODS SOFTW
   Hooimeijer P, 2012, AUTOMAT SOFTW ENG, V19, P531, DOI 10.1007/s10515-012-0111-x
   Hooirneijer P, 2011, LECT NOTES COMPUT SC, V6538, P248, DOI 10.1007/978-3-642-18275-4_18
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jha Susmit., 2009, CoRR
   Kiezun A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377662
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Malgouyres Y., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1804, DOI 10.1145/1141277.1141703
   Maraee A, 2007, LECT NOTES COMPUT SC, V4530, P17
   OMG, 2012, FORMAL20120101 OMG
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Schimpf J, 2012, THEOR PRACT LOG PROG, V12, P127, DOI 10.1017/S1471068411000469
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Veanes Margus, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P498, DOI 10.1109/ICST.2010.15
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
NR 31
TC 3
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 413
EP 427
DI 10.1007/s10270-013-0332-x
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Memon, M
   Menghwar, GD
   Depar, MH
   Jalbani, AA
   Mashwani, WM
AF Memon, Mukhtiar
   Menghwar, Gordhan D.
   Depar, Mansoor H.
   Jalbani, Akhtar A.
   Mashwani, Waqar M.
TI Security modeling for service-oriented systems using security pattern
   refinement approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven security; Security patterns; SOA security; Model
   transformation
ID FRAMEWORK
AB Security is one of the critical aspects of current systems, which are based on loosely coupled and technology-agnostic service-oriented architectures (SOA). Though SOA is the driving force for enterprises to open their ends for global business collaborations, nevertheless it evolves many challenges for modeling and enforcing security. One of the main problems for designing secure systems is the lack of consistent frameworks and methodologies for modeling security concerns. Traditional approaches consider security at the end of system development, which evolves inflexible and un-configurable systems, which are too difficult to maintain and manage. The other major problem with current approaches is that they assume pre-defined and hard-coded security patterns and mechanisms for secure system design. Whereas, the evolving SOA systems require configurable security to realize different security patterns and security policies in a variety of business scenarios. To solve these problems, it is necessary to model security concerns from the beginning of system modeling in a platform-independent way. This paper proposes a pattern refinement approach for security modeling to achieve configurable and declarative security, based on the principles of abstraction, refinement, separation-of-concerns and maintainability to achieve flexible configurations of SOA security. In the proposed approach, a Domain Expert defines abstract policies using common security vocabulary and a Security Expert models security with patterns and refines them for a target architecture in successive systematic refinements. Furthermore, it facilitates the transformation of abstract security models into executable security policies for the target platforms.
C1 [Memon, Mukhtiar; Menghwar, Gordhan D.; Depar, Mansoor H.; Jalbani, Akhtar A.] Sindh Agr Univ, Ctr Informat Technol, Tandojam, Pakistan.
   [Mashwani, Waqar M.] COMSATS Inst Informat Technol, Dept Comp Sci, Wah, Pakistan.
C3 Sindh Agricultural University; COMSATS University Islamabad (CUI)
RP Memon, M (corresponding author), Sindh Agr Univ, Ctr Informat Technol, Tandojam, Pakistan.
EM mukhtiar.memon@sau.edu.pk; gdas@sau.edu.pk; mansoor.hyder@sau.edu.pk;
   akjalbani@sau.edu.pk; drwaqar@ciitwah.edu.pk
RI ; Memon, Mukhtiar/X-8532-2018
OI Menghwar, Gordhan Das/0000-0003-1484-4776; Memon,
   Mukhtiar/0000-0002-9882-1469; Jalbani, Akhtar/0000-0001-7597-8183
CR Adams C., 1998, 2479 RFC INT ENG TAS
   Alam Masoom, 2007, Journal of Software, V2, P47, DOI 10.4304/jsw.2.1.47-59
   Alam M.M., 2007, THESIS U INNSBRUCK
   Alam M, 2007, COMPUT SYST SCI ENG, V22, P289
   [Anonymous], WEB SERV POL 1 2 FRA
   [Anonymous], 2007, Web Services Business Process Execution Language (BPEL)
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bauer B., 2004, WEB ENG, P779
   Best B, 2007, PROC INT CONF SOFTW, P581
   Cheng BHC, 2003, IEEE WORKSH REQ HIGH, P13
   Delessy N., PROCS 2 IEEE INT MUL, DOI [DOI 10.1109/ICCGI.2007.5, 10.1109/ICCGI.2007.5]
   Delessy NA, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P416, DOI 10.1109/ARES.2008.89
   Dong J, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P80
   Fernandez E.B., 2008, SPAQU 08 2 INT WORKS
   Fernandez E.B., 2001, PLOP 01 C PATT LANG
   Fernandez E.B., 2006, P ADV INT C TELECOMM, P157
   Gardner T., 2003, P 1 EUR WORKSH OBJ O, V2003
   Gutiérrez C, 2006, J RES PRACT INF TECH, V38, P57
   Hafner M, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P533
   Hafner M., 2006, THESIS U INNSBRUCK
   HAFNER M, 2005, P 7 INT C ENT INF SY, P128
   HAFNER M, 2008, SECURITY ENG SERVICE
   Hafner M, 2006, INTERNET RES, V16, P491, DOI 10.1108/10662240610710978
   Hafner M, 2009, J UNIVERS COMPUT SCI, V15, P2916
   Han J, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P71
   HINTON HH, 2005, SECURITY PATTERNS SE
   JUERJENS J, 2004, SECURE SYSTEMS DEV U
   Juerjens J., 2002, EUROPLOP 02 7 EUR C
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kanneganti R., 2007, SOA SEC ACT
   Kremer S, 2002, COMPUT COMMUN, V25, P1606, DOI 10.1016/S0140-3664(02)00049-X
   Krzysztof C., 2003, OOPSLA3 WORKSH GEN T
   LANG U, 2002, DEV SECURE DISTRIBUT
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   MANTELL K, 2005, UML BPEL
   McGraw G., 2000, 10 SOFTWARE SECURITY
   Memon M., 2011, SECURITY PATTERN REF
   Memon M., 2009, WOSIS 09 7 INT WORKS
   OASIS, 2007, WSSEC POL
   OSOA, 2007, SERV COMP ARCH
   Reznik J, 2007, ELECTRON NOTES THEOR, V163, P65, DOI 10.1016/j.entcs.2006.10.016
   Roehm A.W., 1999, ACSAC 99 P 15 ANN CO, P22
   Rosado DG, 2006, INT J COMPUT SCI NET, V6, P139
   Rosado DG, 2006, INTERNET RES, V16, P519, DOI 10.1108/10662240610710996
   Satoh F, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P307, DOI 10.1109/SERVICES-1.2008.82
   Satoh F, 2008, P IEEE I C SERV COMP, P13, DOI 10.1109/SCC.2008.72
   Satoh F, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P513
   Satoh F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P585
   Scacchi W., 2001, PROCESSMODELS SOFTWA
   Schumacher Markus., 2003, SECURITY ENG PATTERN
   Stefanov V, 2005, LECT NOTES COMPUT SC, V3589, P53, DOI 10.1007/11546849_6
   Vivas JL, 2003, LECT NOTES COMPUT SC, V2851, P381
   Washizaki H., 2007, SPAQU 07 1 INT WORKS
   WENDEHALS L, 2003, P ICSE WORKSH DYN AN, P29
   Wolter C., 2008, MODELLIERUNG, P197
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Zhou J., 1999, ACISP 99 4 AUSTR C I
NR 57
TC 8
Z9 9
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 549
EP 572
DI 10.1007/s10270-012-0268-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300006
DA 2024-07-18
ER

PT J
AU Ebert, C
AF Ebert, Christof
TI Improving engineering efficiency with PLM/ALM
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Application lifecycle management (ALM); Product lifecycle management
   (PLM); Efficiency; Industry voice
AB Rising cost pressure is forcing manufacturers and their suppliers to jointly and consistently master product development. Our industry case study shows how a leading automotive OEM over time has achieved effective interaction of engineering processes, tools, and people on the basis of product and application life-cycle management (PLM/ALM). Its scope is first an introduction to PLM/ALM on the basis of a model-driven engineering (MDE) for one or several products or product families. Second, PLM and ALM need tool support to the degree necessary to ease handling and drive reuse and consistency. Third, introducing MDE needs profound change management. Starting from establishing the relevant engineering processes, we show how they can be effectively automated for best possible usage across the enterprise and even for suppliers. We practically describe how such a profound change process is successfully managed together with impacted engineers and how the concepts can be transferred to other companies. Concrete results for efficiency improvement, shorter lead time, and better quality in product development combined with better global engineering underline the business value.
C1 Vector Consulting Serv, D-70499 Stuttgart, Germany.
RP Ebert, C (corresponding author), Vector Consulting Serv, Ingersheimer Str 24, D-70499 Stuttgart, Germany.
EM christof.ebert@vector.com
RI Ebert, Christof/JXM-5500-2024
CR Chrissis M B., 2011, CMMI: Guidelines for Process Integration and Product Improvement
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   Ebert C, 2008, INFORM SOFTWARE TECH, V50, P579, DOI 10.1016/j.infsof.2007.06.007
NR 3
TC 16
Z9 20
U1 2
U2 33
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 443
EP 449
DI 10.1007/s10270-013-0347-3
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300003
DA 2024-07-18
ER

PT J
AU Cicchetti, A
   Di Ruscio, D
   Iovino, L
   Pierantonio, A
AF Cicchetti, Antonio
   Di Ruscio, Davide
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Managing the evolution of data-intensive Web applications by
   model-driven techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Migration; Data-intensive Web applications; Model differencing; Coupled
   evolution; Ecore
ID DIFFERENCE; METAMODEL; LANGUAGE
AB The adoption of Model-Driven Engineering (MDE) in the development of Web Applications permitted to decouple the functional description of applications from the underlying implementation platform. This is of paramount relevance for preserving the intellectual property encoded in models and making applications, languages and processes resilient to technological changes. This paper proposes a model-driven approach for supporting the migration and evolution of data-intensive Web applications. In particular, model differencing techniques are considered to realize a migration facility capable of detecting the modifications a model underwent during its lifecycle and to automatically derive from them the programs that are capable of migrating/adapting also those aspects which are not directly derivable from the source models, as for instance the data persistently stored in a database and the page layout usually written using graphic templates. The approach is validated by considering applications described with the beContent and WebML modeling languages.
C1 [Cicchetti, Antonio] Malardalen Univ, MRTC Res Ctr, S-72123 Vasteras, Sweden.
   [Di Ruscio, Davide; Iovino, Ludovico; Pierantonio, Alfonso] Univ Aquila, Dept Comp Sci, I-67010 Laquila, Italy.
C3 Malardalen University; University of L'Aquila
RP Di Ruscio, D (corresponding author), Univ Aquila, Dept Comp Sci, Via Vetoio Coppito, I-67010 Laquila, Italy.
EM antonio.cicchetti@mdh.se; davide.diruscio@univaq.it;
   ludovico.iovino@univaq.it; alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Cicchetti, Antonio/D-2375-2015
OI Di Ruscio, Davide/0000-0002-5077-6793; Cicchetti,
   Antonio/0000-0003-0416-1787; Iovino, Ludovico/0000-0001-6552-2609
CR Aksit M., 2002, INT FED C DOA ODBASE
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Brun C., 2008, UPGRADE MODEL DR APR
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2008, SCI COMPUT PROGRAM, V70, P62, DOI 10.1016/j.scico.2007.10.002
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5648, P518, DOI 10.1007/978-3-642-02818-2_52
   Curino CA, 2008, PROC VLDB ENDOW, V1, P761, DOI 10.14778/1453856.1453939
   Domínguez E, 2008, DATA KNOWL ENG, V65, P419, DOI 10.1016/j.datak.2007.12.001
   FRASINCAR F, 2002, P 11 INT WORLD WID W
   GARZOTTO F, 2002, 6 WORLD MULT SYST CY
   Gómez J, 2003, INFORMATION MODELING FOR INTERNET APPLICATIONS, P144
   Jakovljevic M., 2006, ICWE 06
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Koch N, 2003, LECT NOTES COMPUT SC, V2722, P497
   Koch N., 2002, PROC IWWOST02, P105
   Koegel M., 2009, P JOINT MODSE MCCM W
   Kolovos D., 2006, GAMMA 06, P13, DOI DOI 10.1145/1138304.1138308
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Lammel R., 2004, 1 INT WORKSH SOFTW E
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Murugesan S., 2007, WEB ENG MODELLING IM, P7
   Nguyen T.N., 2006, WWW 06, P437
   Ohst D., 2003, Software Engineering Notes, V28, P227, DOI 10.1145/949952.940102
   Pierantonio A., 2004, INT J WEB ENG TECHNO, V1, P320
   Ploski J, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.17
   Read RC., 1977, J GRAPH THEOR, V1, P339, DOI DOI 10.1002/JGT.3190010410
   Ricca F., 2009, International Journal on Software Tools for Technology, V11, P419
   Rivera JE, 2008, LECT NOTES BUS INF, V11, P141
   Rossi G, 2007, HUMAN COMPUTER INTER
   Schauerhuber A, 2007, IET SOFTW, V1, P81, DOI 10.1049/iet-sen:20060066
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schwabe D, 1998, THEOR PRACT OBJ SYST, V4, P207, DOI 10.1002/(SICI)1096-9942(1998)4:4<207::AID-TAPO2>3.0.CO;2-2
   Schwinger W, 2008, INT J WEB INF SYST, V4, P234, DOI 10.1108/17440080810901089
   SHANKARANARAYAN.G, 2003, 200315 U AR
   Thiran P, 2006, ACM T SOFTW ENG METH, V15, P329, DOI 10.1145/1178625.1178626
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
   Visser J, 2008, ELECTRON NOTES THEOR, V200, P3, DOI 10.1016/j.entcs.2008.04.090
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
NR 45
TC 11
Z9 11
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 53
EP 83
DI 10.1007/s10270-011-0193-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800006
DA 2024-07-18
ER

PT J
AU Schwarz, H
   Ebert, J
   Winter, A
AF Schwarz, Hannes
   Ebert, Juergen
   Winter, Andreas
TI Graph-based traceability: a comprehensive approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Traceability; Graph technology; Model transformations; Software
   engineering
AB In recent years, traceability has been globally accepted as being a key success factor of software development projects. However, the multitude of different, poorly integrated taxonomies, approaches and technologies impedes the application of traceability techniques in practice. This paper presents a comprehensive view on traceability, pertaining to the whole software development process. Based on the state of the art, the field is structured according to six specific activities related to traceability as follows: definition, recording, identification, maintenance, retrieval, and utilization. Using graph technology, a comprehensive and seamless approach for supporting these activities is derived, combining them in one single conceptual framework. This approach supports the definition of metamodels for traceability information, recording of traceability information in graph-based repositories, identification and maintenance of traceability relationships using transformations, as well as retrieval and utilization of traceability information using a graph query language. The approach presented here is applied in the context of the ReDSeeDS project (Requirements Driven Software Development System) that aims at requirements-based software reuse. ReDSeeDS makes use of traceability information to determine potentially reusable architectures, design, or code artifacts based on a given set of reusable requirements. The project provides case studies from different domains for the validation of the approach.
C1 [Schwarz, Hannes; Ebert, Juergen] Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
   [Winter, Andreas] Carl von Ossietzky Univ Oldenburg, Dept Comp Sci, Oldenburg, Germany.
C3 University of Koblenz & Landau; Carl von Ossietzky Universitat Oldenburg
RP Schwarz, H (corresponding author), Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
EM hschwarz@uni-koblenz.de; ebert@uni-koblenz.de;
   andreas.winter@informatik.uni-oldenburg.de
FU European Commission [IST-2006-33596, ICT-2008-216691]
FX This work has been partially funded by the European Commission within
   the 6th Framework Programme project ReDSeeDS, no. IST-2006-33596,
   http://www.redseeds.eu, and the 7th Framework Programme project MOST no.
   ICT-2008-216691, http://most-project.eu.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   AIZENBUDRESHEF N, 2005, ECMDA TRAC WORKSH EC
   AMBROZIEWICZ A, 2008, P 2 INT WORKSH MOD R, P27
   [Anonymous], P QUER TECHN APPL PR
   [Anonymous], REFERENZ METASCHEMA
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   BERGMANN G, 2008, GRAMOT 2008, P25
   BILDHAUER D, 2009, FINAL SOFTW IN PRESS
   BILDHAUER D, 2007, SOFTWARE CASE MARKIN
   BILDHAUER D, 2008, P 2 INT WORKSH MORSE, P9
   BILDHAUER D, 2007, REPOSITORY SELECTION
   BOHLEN B, 2006, PARAMETRISIERBARES G
   BOJARSKI J, 2008, P 2 INT WORKSH MORSE, P35
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cysneiros G, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P71
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Del Fabro M. D., 2006, ECLIPSE MODELING S, P37
   DICK J, 2002, P 1 INT WORKSH TRAC
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Ebert J., 1995, Graph-Theoretic Concepts in Computer Science. 20th International Workshop. WG'94. Proceedings, P38
   EBERT J, 2002, ELECT NOTES THEOR CO, V72
   EBERT J, 2009, GRETL TRANS IN PRESS
   EBERT J, 2008, GI LECT NOTES INFORM, V126, P67
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   GLABBEEK R, 2008, P 13 INT C IMPL APPL, P161
   Goknil Arda, 2008, ECMDA TRAC WORKSH EC, P59
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GRECHANIK M, 2007, 6 JOINT M EUROPEAN S
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   HORN T, 2009, OPTIMIERER GREQL2
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   KAINDL H, 1993, ACM SOFTWARE ENG NOT, V18, P30
   KALNINS A, 2005, P WORKSH GRAPH MOD T, P162
   KALNINS A, 2004, MODEL DRIVEN ARCHITE
   KALNINS A, 2007, REUSABLE CASE TRANSF
   KAMP M, 1998, 198 U KOBL LAND I IN
   KIESEL N, 1995, INFORM SYST, V20, P21, DOI 10.1016/0306-4379(95)00002-L
   KREBS T, 2007, MODELLING TRANSFORMA
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   KURTEV I, 2007, ECMDA TRAC WORKSH EC, P57
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   MALETIC JI, 2005, P 3 INT WORKSH TRAC, P67
   Marcus A., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering. TEFSE'05, P56, DOI [DOI 10.1145/1107656.1107669, 10.1145/1107656.1107669.1107669, DOI 10.1145/1107656.1107669.1107669]
   Mehlhorn K, 1997, LECT NOTES COMPUT SC, V1256, P7
   Moon M, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P927, DOI 10.1109/CIT.2007.117
   *OBJ MAN GROUP, 2007, OMG UN MOD LANG OMG
   Object Management Group, 2008, MET FAC MOF 2 0 QUER
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   PINHEIRO FAC, 2000, WER00 WORKSH ENG REQ
   Pohl K., 1996, Requirements engineering: An overview
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   SCHWARZ H, 2008, 10 WORKSH SOFTW REEN
   SHERBA SA, 2003, P 2 INT WORKSH TRAC
   SMIALEK M, 2006, MODELS
   SOSTAKS A, 2008, SCI PAPERS U LATVIA, V733
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   VONKNETHEN A, 2002, 09501E FRAUNH IESE
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Witte R, 2007, LECT NOTES COMPUT SC, V4519, P37
NR 62
TC 23
Z9 26
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2010
VL 9
IS 4
BP 473
EP 492
DI 10.1007/s10270-009-0141-4
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 646SW
UT WOS:000281564100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jackson, E
   Sztipanovits, J
AF Jackson, Ethan
   Sztipanovits, Janos
TI Formalizing the structural semantics of domain-specific modeling
   languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based Design; Domain-specific modeling languages; Structural
   semantics; Metamodeling; Formal logic; Horn logic
ID GRAPH TRANSFORMATION
AB Model-based approaches to system design are now widespread and successful. These approaches make extensive use of model structure to describe systems using domain-specific abstractions, to specify and implement model transformations, and to analyze structural properties of models. In spite of its general importance the structural semantics of modeling languages are not well-understood. In this paper we develop the formal foundations for the structural semantics of domain-specific modeling languages (DSML), including the mechanisms by which metamodels specify the structural semantics of DSMLs. Additionally, we show how our formalization can complement existing tools, and how it yields algorithms for the analysis of DSMLs and model transformations.
C1 [Jackson, Ethan] Microsoft Res, Fdn Software Engn Grp, Redmond, WA USA.
   [Sztipanovits, Janos] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN USA.
   [Sztipanovits, Janos] Vanderbilt Univ, Dept Elect & Comp Engn, Nashville, TN USA.
C3 Microsoft; Vanderbilt University; Vanderbilt University
RP Jackson, E (corresponding author), Microsoft Res, Fdn Software Engn Grp, Redmond, WA USA.
EM ejackson@microsoft.com; janos.sztipanovits@vanderbilt.edu
OI Sztipanovits, Janos/0000-0002-8360-6299
FU National Science Foundation (NSF) [CCR-0225610, CCF-0424422]; Air Force
   Office of Scientific Research (AFOSR) [FA9550-06-0312]
FX Special thanks to Dr. Constantine Tsinakis. His expertise in Universal
   Algebra and his clarity of explanation helped to improve the algebraic
   presentation of this work. Also, special thanks to all the reviewers
   whose careful inspection lead to many improvements. This work was
   supported in part by the National Science Foundation (NSF award
   #CCR-0225610 and #CCF-0424422), the Air Force Office of Scientific
   Research (AFOSR award #FA9550-06-0312).
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   AITKACI H, 1991, WARR ABSTR MACH TUT
   Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Andreae C, 2006, ACM SIGPLAN NOTICES, V41, P57, DOI 10.1145/1167515.1167479
   [Anonymous], MDA GUID VERS 1 0 1
   [Anonymous], 1988, International Symposium on Logic Programming
   [Anonymous], WORKSH INT SIGN PROC
   [Anonymous], CONCEPTUAL MATH 1 IN
   [Anonymous], OBJ CONSTR LANG V2 0
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   BANACH R, 2005, FORMAL SPECIFICATION, P203
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   BORGER E, 1987, COMPUTATION THEORY L, P37
   Brucker AD, 2003, J UNIVERS COMPUT SCI, V9, P152
   BURCH J, 2002, INTEGRATED DESIGN PR
   CARNES JR, 1996, ECBS 96, P356
   CHAN D, 1989, P NACLP, P447
   CHEN K, 2005, P 5 ACM INT C EMB SO
   Chomsky N., 1959, INFORM CONTR, V2, P137, DOI [10.1016/S0019-9958(59)90362-6, DOI 10.1016/S0019-9958(59)90362-6]
   COLMERAUER A, 1993, HOPL PREPRINTS, P37
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DEALFARO L, 2004, P MARKT SUMM SCH KLU
   Drewes F, 2002, J COMPUT SYST SCI, V64, P249, DOI 10.1006/jcss.2001.1790
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Ehrig H, 2006, FUND INFORM, V74, P31
   Emerson MJ, 2004, J UNIVERS COMPUT SCI, V10, P1357
   EVANS A, P 8 OOPSLA WORKSH BE
   Farrow R., 1992, 19th ACM Symp. on Prin. of Programming Languages (POPL), P223
   FOSDICK LD, 1976, COMPUT SURV, V8, P305, DOI 10.1145/356674.356676
   *GEN MOD FRAM TEAM, GMF DOC
   GIRSCHICK M, 2006, P TRENDS ENT APPL AR, P127
   GOSSLER G, 2006, PROGRAM ANAL COMPILA, P201
   GRAF S, 2006, STTT, V8, P113
   GRAY J, 2004, AOSD 04 P 3 INT C SP, P36
   Greenfield J, 2004, LECT NOTES COMPUT SC, V3154, P324
   HAMON G, 2005, LNCS, V2984, P229
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D, 2004, LECT NOTES COMPUT SC, V3147, P325
   HAREL D, 2004, IEEE COMPUTER    OCT, P64, DOI DOI 10.1109/MC.2004.172
   Henzinger TA, 2003, IEEE CONTR SYST MAG, V23, P50, DOI 10.1109/MCS.2003.1172829
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   *I SOFTW INT SYST, 2005, GME 5 US GUID
   JACKSON D, 2000, SIGSOFT FSE, P130
   Jackson D., 1999, COMP OBJECT MODELLIN
   JACKSON E, P MODELS 07
   JACKSON E, 2008, MSRTR200886
   JACKSON EK, 2008, P IFIP WG 6 1 INT C, P1
   JACKSON EK, 2008, P WORKSH SOFTW ENG S
   JACKSON EK, 2006, ECBS, P164
   JACKSON EK, 2007, P 10 INT C MOD DRIV, P405
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Jürjens J, 2005, PROC INT CONF SOFTW, P322
   Kahn Gilles, 1977, Information Processing, P993
   Kakita Shinjiro, 2006, 6 INT C APPL CONCURR, P229, DOI [/10.1109/ACSD.2006.8, DOI 10.1109/ACSD.2006.8]
   Karsai G, 2003, J UNIVERS COMPUT SCI, V9, P1296
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   KNUTH DE, 1990, LECT NOTES COMPUT SC, V461, P1
   KONIGS A, 2004, LANGUAGE ENG MODEL D
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   LARSEN KG, 2003, LECT NOTES COMPUTER, V2791
   Lee EA, 2004, FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P33
   Lee EA, 2003, J CIRCUIT SYST COMP, V12, P231, DOI 10.1142/S0218126603000751
   LEE EA, 1995, P IEEE, V83, P773, DOI 10.1109/5.381846
   Long E, 1998, COMPUTER, V31, P35, DOI 10.1109/2.707615
   MARCANO R, 2002, WORKSH CONS PROBL UM, P91
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P143, DOI 10.1016/j.entcs.2005.10.022
   Minker J., 1996, Logic in Databases. International Workshop LID '96 Proceedings, P3
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Neema S, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P275, DOI 10.1109/VLHCC.2005.14
   Neema S, 2003, LECT NOTES COMPUT SC, V2855, P290
   *OBJ MAN GROUP, 2002, MET OBJ FAC SPEC V1
   *OBJ MAN GROUP, 2003, MET OBJ FAC MOF 2 0
   *OBJ MAN GROUP, 2007, UN MOD LANG SUP VERS
   *OBJ MAN GROUP, 2003, UN MOD LANG INFR VER
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Pinto A, 2006, LECT NOTES COMPUT SC, V3927, P491
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   SANGIOVANNIVINC.A, 2004, P DES AUT C DAC 04 J
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   WEIJLAND WP, 1988, ICALP, P710
   [No title captured]
NR 87
TC 29
Z9 33
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 451
EP 478
DI 10.1007/s10270-008-0105-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900002
DA 2024-07-18
ER

PT J
AU Baar, T
AF Baar, Thomas
TI Correctly defined concrete syntax
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE visual languages; concrete syntax; metamodeling; OCL;
   Triple-Graph-Grammars (TGGs)
ID FRAMEWORK; LANGUAGE; TOOL
AB Due to their complexity, the syntax of modern modeling languages is preferably defined in two steps. The abstract syntax identifies all modeling concepts whereas the concrete syntax should clarify how these concepts are rendered by graphical and/or textual elements. While the abstract syntax is often defined in form of a metamodel, there does not exist such standard format yet for concrete syntax definitions. The diversity of definition formats-ranging from EBNF grammars to informal text-is becoming a major obstacle for advances in modeling language engineering, including the automatic generation of editors. In this paper, we propose a uniform format for concrete syntax definitions. Our approach captures both textual and graphical model representations and even allows to assign more than one rendering to the same modeling concept. Consequently, following our approach, a model can have multiple, fully equivalent representations, but-in order to avoid ambiguities when reading a model representation-two different models should always have distinguishable representations. We call a syntax definition correct, if all well-formed models are represented in a non-ambiguous way. As the main contribution of this paper, we present a rigorous analysis technique to check the correctness of concrete syntax definitions.
C1 Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP Baar, T (corresponding author), Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
EM thomas.baar@acm.org
CR Alanen M, 2006, LECT NOTES COMPUT SC, V4199, P454
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Baar T, 2006, LECT NOTES COMPUT SC, V4199, P111
   Bardohl R, 2004, LECT NOTES COMPUT SC, V2984, P214
   Bardohl R, 2002, SCI COMPUT PROGRAM, V44, P181, DOI 10.1016/S0167-6423(02)00038-2
   Beckert Bernhard., 2007, LNCS, V4334
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   DETLEFS DL, 1996, SIMPLIFY ESC THEOREM
   *ECL, 2007, ECL PROJ
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   Glinz M, 2002, INFORM SYST, V27, P425, DOI 10.1016/S0306-4379(02)00015-7
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   MARKOVIC S, 2006, LNCS, V4199, P660
   MINAS M, 2002, ELECT NOTES THEORETI, V72, P102
   Muller PA, 2006, LECT NOTES COMPUT SC, V4199, P98
   *OMG, 2006, DIAGR INT VERS 1 0 F
   *OMG, 2006, PTC061101 OMG
   Presburger M., 1927, Comptes Rendus du Premier Congres des Mathematicienes des Pays Slaves, P92
   RUMBAUGH J, 2005, OBJECT TECHNOLOGY SE
   SCHURR A, 1995, LNCS, V903, P151
   Xia Y, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P186
NR 23
TC 4
Z9 4
U1 2
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 383
EP 398
DI 10.1007/s10270-008-0086-z
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 348CI
UT WOS:000259188200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Markovic, S
   Baar, T
AF Markovic, Slavisa
   Baar, Thomas
TI Semantics of OCL specified with QVT
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE QVT; OCL semantics; graph-transformations; DSL
ID GRAPHICAL APPROACH
AB The Object Constraint Language (OCL) has been for many years formalized both in its syntax and semantics in the language standard. While the official definition of OCL's syntax is already widely accepted and strictly supported by most OCL tools, there is no such agreement on OCL's semantics, yet. In this paper, we propose an approach based on metamodeling and model transformations for formalizing the semantics of OCL. Similarly to OCL's official semantics, our semantics formalizes the semantic domain of OCL, i.e. the possible values to which OCL expressions can evaluate, by a metamodel. Contrary to OCL's official semantics, the evaluation of OCL expressions is formalized in our approach by model transformations written in QVT. Thanks to the chosen format, our semantics definition for OCL can be automatically transformed into a tool, which evaluates OCL expressions in a given context. Our work on the formalization of OCL's semantics resulted also in the identification and better understanding of important semantic concepts, on which OCL relies. These insights are of great help when OCL has to be tailored as a constraint language of a given DSL. We show on an example, how the semantics of OCL has to be redefined in order to become a constraint language in a database domain.
C1 [Markovic, Slavisa; Baar, Thomas] Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP Markovic, S (corresponding author), Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
EM slavisa.markovic@epfl.ch; thomas.baar@epfl.ch
CR AKEHURST D, 2005, P MODELS 05 C WORKSH, P30
   AKEHURST DH, 2001, P LECT NOTES COMPUTE, V2185, P91
   [Anonymous], OBJ CONSTR LANG OMG
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   Baar T, 2005, LECT NOTES COMPUT SC, V3530, P32
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P70
   BARR T, 2003, THESIS U KARLSRUHE L
   Bauerdick H, 2004, LECT NOTES COMPUT SC, V3273, P188
   Berkenkötter K, 2007, LECT NOTES COMPUT SC, V4364, P159
   *BORL, 2007, TOG TECHN
   Bottoni P, 2000, LECT NOTES COMPUT SC, V1939, P294
   Brucker A.D., 2006, HOL OCL BOOK
   Brucker Achim D., 2007, THESIS ETH ZURICH
   BRUCKER AD, 2006, OCL META MODELS MULT, P213
   Cariou Eric., 2004, Workshop of OCL and Model Driven Engineering, V12, P69
   Cengarle M. V., 2001, LECT NOTES COMPUTER, P118
   CENGARLE MV, 2004, SOFTW SYST MODEL, V3, P30
   CHIARADIA JM, 2006, OCL META MODELS MULT, P229
   CHIOREAN D, 2005, TOOL SUPPORT OCL REL, P68
   CLARK T, 2002, P LNCS, V2306, P159
   Cook S, 2002, LECT NOTES COMPUT SC, V2263, P115
   DEMUTH B, 1999, P LECT NOTES COMPUTE, V1723
   DEMUTH B, 2001, LNCS, V2185, P104, DOI DOI 10.1007/3-540-45441-1_
   *DRESD OCL TEAM, 2007, DRESD OCL TOOLK
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   FLAKE S, 2004, ELECT NOTES THEOR CO, V102, P63
   HAREL D, 2004, IEEE COMPUTER    OCT, P64, DOI DOI 10.1109/MC.2004.172
   HENNICKER R, 2004, ELECT NOTES THEORETI, V102, P111
   KOLOVOS DS, 2006, OCL META MODELS MULT, P26
   MARKOVIC S, 2006, LNCS, V4199, P660
   *MDT OCL TEAM, 2007, ECL MDT OCL PROJ
   Object Management Group (OMG), 2005, PTC051101 OMG
   *OCLE TEAM, 2007, OCLE OBJ CONSTR LANG
   *OCTOPUS TEAM, 2007, OCTOPUS OCI TOOL PRE
   *OMG, 2003, PTC030915 OMG
   OSLO T, 2007, OSLO PROJECT
   Richters M, 1999, LECT NOTES COMPUT SC, V1723, P156
   RICHTERS M, 2001, THESIS U BREMEN LOGO
   RICHTERS M, 1998, LNCS, V1507, P449
   *ROCLET TEAM, 2007, ROCLET PROJ
   STEPHAN F, 2003, J SOFTW SYST MODEL S, V2, P164
   *USE TEAM, 2007, USE UML BAS SPEC ENV
   Varró D, 2002, LECT NOTES COMPUT SC, V2505, P378
NR 43
TC 8
Z9 9
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 399
EP 422
DI 10.1007/s10270-008-0083-2
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 348CI
UT WOS:000259188200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Liebel, G
AF Chakraborty, Shalini
   Liebel, Grischa
TI Modelling guidance in software engineering: a systematic literature
   review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Modelling styles; Modelling training; Modelling guidance; Modelling
   method; Systematic literature review
ID DESIGN; EXPERIENCES; GUIDELINES; UML
AB Despite potential benefits in Software Engineering, adoption of software modelling in industry is low. Technical issues such as tool support have gained significant research before, but individual guidance and training have received little attention. As a first step towards providing the necessary guidance in modelling, we conduct a systematic literature review to explore the current state of the art. We searched academic literature for guidance on model creation and selected 35 papers for full-text screening through three rounds of selection. We find research on model creation guidance to be fragmented, with inconsistent usage of terminology, and a lack of empirical validation or supporting evidence. We outline the different dimensions commonly used to provide guidance on software and system model creation. Additionally, we provide definitions of the three terms modelling method, style, and guideline as current literature lacks a well-defined distinction between them. These definitions can help distinguishing between important concepts and provide precise modelling guidance.
C1 [Chakraborty, Shalini; Liebel, Grischa] Reykjavik Univ, Menntavegur 1, IS-102 Reykjavik, Iceland.
C3 Reykjavik University
RP Chakraborty, S (corresponding author), Reykjavik Univ, Menntavegur 1, IS-102 Reykjavik, Iceland.
EM shalini19@ru.is; grischal@ru.is
OI Liebel, Grischa/0000-0002-3884-815X
CR ABBOTT RJ, 1983, COMMUN ACM, V26, P882, DOI 10.1145/182.358441
   Allinson CW, 1996, J MANAGE STUD, V33, P119, DOI 10.1111/j.1467-6486.1996.tb00801.x
   [Anonymous], 1984, Educ. Psychol, DOI DOI 10.1080/00461528409529283
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Bezivin J., 1999, LECT NOTES COMPUTER, V1618, DOI [10.1007/b72309, DOI 10.1007/B72309]
   Bordeleau F., 2000, THESIS CARLETON U
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Burgueño L, 2022, SOFTW SYST MODEL, V21, P963, DOI 10.1007/s10270-022-00988-0
   Cai L, 2003, NINTH IEEE WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, PROCEEDINGS, P56
   Cámara J, 2023, SOFTW SYST MODEL, V22, P781, DOI 10.1007/s10270-023-01105-5
   Chaaben M.B., 2022, ARXIV
   Claes J, 2015, INFORM SYST FRONT, V17, P1401, DOI 10.1007/s10796-015-9585-y
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Corallo A, 2011, KNOWL PROCESS MANAG, V18, P194, DOI 10.1002/kpm.381
   Corradini F, 2023, ROBOT AUTON SYST, V160, DOI 10.1016/j.robot.2022.104322
   Das TK, 2018, SOFTW SYST MODEL, V17, P717, DOI 10.1007/s10270-016-0549-6
   Deng F., 2019, P 31 INT C SOFTW ENG
   Douglass B.P., 1999, DOING HARD TIME DEV, V1
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Fang JR, 2023, IEEE T PARALL DISTR, V34, P304, DOI 10.1109/TPDS.2022.3219819
   Fatwanto A., 2008, 2008 INT S INF TECHN, V1, P1, DOI [10.1109/ITSIM.2008.4631619, DOI 10.1109/ITSIM.2008.4631619]
   Fernandes J. M., 2000, Proceedings of the Eighth International Workshop on Hardware/Software Codesign. CODES 2000 (IEEE Cat. No.00TH8518), P18, DOI 10.1109/HSC.2000.843700
   Firesmith D. G., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P184, DOI 10.1109/TOOLS.1999.787548
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Frank U, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P522, DOI 10.1109/MODELS-C53483.2021.00081
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Giraldo FD, 2014, INT CONF RES CHAL
   Goncalves Madalena, 2013, Model-Based Methodologies for Pervasive and Embedded Software. 8th International Workshop, MOMPES 2012. Revised Papers, P126, DOI 10.1007/978-3-642-38209-3_8
   Goncalves R.F., 2022, AN 18 S BRAS SIST IN
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Guiochet J, 2004, INT FED INFO PROC, V152, P177
   Guizzardi G, 2011, LECT NOTES BUS INF P, V83, P402
   Gwet K. L., 2010, Handbook of inter-rater reliability
   Harbo SKR, 2021, 2021 16TH INTERNATIONAL SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE), P88, DOI 10.1109/SOSE52739.2021.9497495
   Hennicker R, 2000, LECT NOTES COMPUT SC, V1939, P410
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Isaksen SG, 2016, J CREATIVE BEHAV, V50, P268, DOI 10.1002/jocb.75
   Juhrisch M., 2010, MODELLIERUNG BETRIEB, P111
   Kaewkasi C, 2002, P INT COMP SOFTW APP, P603, DOI 10.1109/CMPSAC.2002.1045070
   Kharchenko V, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22134865
   Kiliç S, 2015, J MOOD DISORD, V5, P142, DOI 10.5455/jmood.20150920115439
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Langford MA, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P182, DOI 10.1109/MODELS50736.2021.00027
   Liebel G., 2016, MODEL BASED REQUIREM
   Liebel G, 2019, SOFTW SYST MODEL, V18, P2587, DOI 10.1007/s10270-018-0683-4
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Lohmeyer Q., 2015, INT C ENG DESIGN ICE, V15
   Long F., 2013, Java coding guidelines: 75 recommendations for reliable and secure programs
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Lunkeit A., 2018, ARCS WORKSH 2018 31, P1
   Machado RJ, 2010, IFIP ADV INF COMM TE, V329, P19
   Maier A., 2014, P INT C HUM BEH DES
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   Marincic J., 2008, P 3 INT WORKSH APPL, P67, DOI [10.1145/1370811.1370825, DOI 10.1145/1370811.1370825]
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Milani F, 2016, INFORM SYST, V56, P55, DOI 10.1016/j.is.2015.09.003
   Mindock Jennifer, 2008, 2008 IEEE Aerospace Conference Proceedings, P1, DOI 10.1109/AERO.2008.4526595
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Nguyen PH, 2013, ASIA PAC SOFWR ENG, P432, DOI 10.1109/APSEC.2013.64
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Pinggera J, 2012, LECT NOTES BUS INF P, V113, P151
   Reggio G., 2012, P 2 INT WORKSH EXP E, DOI 10.1145/2424563.2424574
   Rivera L. F., 2020, P IEEEACM 42 INT C S, P631
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saini R, 2022, SOFTW SYST MODEL, V21, P1015, DOI 10.1007/s10270-021-00942-6
   Santos M, 2018, LECT NOTES COMPUT SC, V11157, P424, DOI 10.1007/978-3-030-00847-5_30
   Santos M, 2018, INT REQUIR ENG CONF, P228, DOI 10.1109/RE.2018.00031
   Schatz B., 2015, CYBER PHYS EUROPEAN
   Schuette R., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P240
   Softer P, 2012, LECT NOTES BUS INF P, V99, P357
   Somogyi FA, 2020, SOFTW SYST MODEL, V19, P693, DOI 10.1007/s10270-019-00760-x
   Sousa K, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P553
   Storrle H, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962609
   Störrle H, 2018, SOFTW SYST MODEL, V17, P115, DOI 10.1007/s10270-016-0529-x
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Sunkle S, 2022, SOFTW SYST MODEL, V21, P1, DOI 10.1007/s10270-022-00982-6
   Sutter Herb, 2004, C++ coding standards: 101 rules, guidelines, and best practices
   Wang ZQ, 2012, 2012 IEEE FIFTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P176, DOI 10.1109/ICACI.2012.6463145
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wu J, 2015, SOFTWARE PRACT EXPER, V45, P893, DOI 10.1002/spe.2281
   Zhang L, 2018, J COMPUT SCI TECH-CH, V33, P876, DOI 10.1007/s11390-018-1864-x
   Zhao X, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P323, DOI 10.5220/0007388703230331
   Zheng C, 2016, COMPUT IND, V76, P24, DOI 10.1016/j.compind.2015.12.002
NR 103
TC 0
Z9 0
U1 4
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 249
EP 265
DI 10.1007/s10270-023-01117-1
EA JUL 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:001031346800001
DA 2024-07-18
ER

PT J
AU Carré, B
   Vanwormhoudt, G
   Caron, O
AF Carre, Bernard
   Vanwormhoudt, Gilles
   Caron, Olivier
TI Model projection relative to submetamodeling dimensions A form of
   submodel circumscribing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model projection; Submodel extraction; Submodel; Submetamodel
AB Model-based engineering (MBE) recognizes models as central in software construction with the possibility of their management in libraries and repositories with proper structuring of their spaces and operations. Due to this success, models (and metamodels) are becoming larger and larger and technics are needed in order to comprehend and exploit them, such as circumscribing sub(meta)models of interest, which is the subject of this paper. Following MBE, there are mainly two ways for circumscribing submodels: only at the model level (by selecting model elements of interest) or through the meta level (by selecting a submetamodeling dimension of interest). In a preceding paper, we deeply studied the first way. Here we concentrate on the second way. Model projection deeply relies on the concepts of submodels and submetamodels with their inclusion qualities for model space structuring and has to be systematically examined from this point of view. It is important to point out that model treatment has to deal with full models (as offered by "off the shelf" libraries) but also with not necessarily well-formed ones, such as unspecified model chunks, due, for example, to the storage in repositories of incomplete engineering choices or of intermediate results of operations. It is a difficulty to encompass all these forms of models, being well-formed or not, in a homogeneous manner through MBE operations. The operation for "Model projection relative to submetamodeling dimensions" presented here does take this difficulty into account.
C1 [Carre, Bernard; Vanwormhoudt, Gilles; Caron, Olivier] Univ Lille, CNRS, UMR 9189 CRIStAL, F-59000 Lille, France.
   [Vanwormhoudt, Gilles] Inst Mines Telecom, F-59000 Lille, France.
C3 Universite de Lille; Centre National de la Recherche Scientifique
   (CNRS); IMT - Institut Mines-Telecom; Universite de Lille; IMT Nord
   Europe
RP Carré, B (corresponding author), Univ Lille, CNRS, UMR 9189 CRIStAL, F-59000 Lille, France.
EM Bernard.Carre@univ-lille.fr; Gilles.Vanwormhoudt@univ-lille.fr;
   Olivier.Caron@univ-lille.fr
OI Carre, Bernard/0000-0002-7299-9461
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Amálio N, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P106, DOI 10.1109/MODELS.2015.7338241
   Amrani M, 2021, SOFTW SYST MODEL, V20, P611, DOI 10.1007/s10270-021-00876-z
   Androutsopoulos K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/1985793.1985834
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9381, P317, DOI 10.1007/978-3-319-25264-3_23
   Burger E, 2016, SOFTW SYST MODEL, V15, P473, DOI 10.1007/s10270-014-0413-5
   Caron O., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P135
   Carre B., 1992, ACT C REPR OBJ RPO 9
   Carré B, 2018, SOFTW SYST MODEL, V17, P1105, DOI 10.1007/s10270-016-0540-2
   Carré B, 2015, SOFTW SYST MODEL, V14, P861, DOI 10.1007/s10270-013-0340-x
   Cicchetti A., 2011, ELECTR COMMUN
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   DelFabro D., 2007, 1 INT WORKSH TOW MOD
   Diskin Z, 2013, LECT NOTES COMPUT SC, V8225, P322, DOI 10.1007/978-3-319-02654-1_18
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Fondement F, 2013, LECT NOTES COMPUT SC, V8107, P138, DOI 10.1007/978-3-642-41533-3_9
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Hebig R., 2011, P 4 INT WORKSH MULT, V42
   Hendrickson S, 2006, LECT NOTES COMPUT SC, V4199, P722
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kienzle J, 2019, SOFTW SYST MODEL, V18, P3005, DOI 10.1007/s10270-018-00707-8
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Ma Q, 2018, PROCEEDINGS 2018 12TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2018), P138, DOI 10.1109/TASE.2018.00026
   Maoz Shahar, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P194, DOI 10.1007/978-3-642-21210-9_19
   Marvie R, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P144, DOI 10.1109/EDOC.2002.1137704
   MDA, 1997, HOM PAG
   Melnik Sergey., 2003, SIGMOD C, P193, DOI DOI 10.1145/872757.872782
   ObjectManagement Group, MET FAC MOF 2 0 QUER
   Renaux E, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P268, DOI 10.1109/SOSE.2013.47
   Salay R, 2009, LECT NOTES COMPUT SC, V5565, P141, DOI 10.1007/978-3-642-02144-2_15
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Siikarla M., 2006, Nordic Journal of Computing, V13, P180
   Solberg A., 2005, P 4 WORKSH SOFTW MOD
   Sriplakich P, 2006, PROC IEEE INT CONF S, P244
   Sriplakich P, 2006, LECT NOTES COMPUT SC, V4199, P631
   Sriplakich P, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P674
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Struber D., 2013, BIGMDE 2013, P7, DOI DOI 10.1145/2487766.2487773
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Strüber D, 2013, LECT NOTES COMPUT SC, V7793, P6, DOI 10.1007/978-3-642-37057-1_2
   Vignaga A, 2013, SOFTW SYST MODEL, V12, P105, DOI 10.1007/s10270-011-0191-2
NR 60
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 223
EP 248
DI 10.1007/s10270-023-01116-2
EA JUL 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:001024119500001
DA 2024-07-18
ER

PT J
AU Sharbaf, M
   Zamani, B
   Sunyé, G
AF Sharbaf, Mohammadreza
   Zamani, Bahman
   Sunye, Gerson
TI Conflict management techniques for model merging: a systematic mapping
   review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Conflict management; Model merging conflict; Collaborative modeling;
   Model driven engineering; Taxonomy; Systematic mapping
ID CHANGE OPERATIONS; VERSION CONTROL; DESIGN; CLASSIFICATION; SEMANTICS;
   FRAMEWORK; PAPER
AB Model merging conflicts occur when different stakeholders aim to integrate their contradicting changes that are applied concurrently to update software models. We conduct an extensive systematic mapping study on conflict management techniques and relevant collaboration attributes to the versioning and merging models from 2001 to the middle of 2021. This study follows the standard guidelines within the software engineering domain. We analyzed a total of 105 articles extracted from an initial pool of more than 1800 articles to infer a taxonomy for conflict management techniques. We use this taxonomy to classify existing approaches to understand characteristics, shortcomings, and challenges on conflict management techniques in merging models. It also provides a solid foundation for future work in this area. We show that syntactic conflicts are the most studied type and that the top three popular conflict detection techniques are constraint violation, change overlapping, and pattern matching. We observe the lack of a comprehensive state-of-the-art comparison between academic or industrial tools, as well as the need for real-world case studies. Finally, we show that recent trends have focused on online collaboration, where teams of stakeholders work on large-scale models.
C1 [Sharbaf, Mohammadreza; Zamani, Bahman] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Sharbaf, Mohammadreza; Sunye, Gerson] Univ Nantes, LS2N, Nantes, France.
C3 University of Isfahan; Nantes Universite
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM m.sharbaf@eng.ui.ac.ir; zamani@eng.ui.ac.ir; gerson.sunye@univ-nantes.fr
OI Zamani, Bahman/0000-0001-6424-1442; Sunye, Gerson/0000-0001-6407-8075;
   Sharbaf, Mohammadreza/0000-0001-5113-7689
CR Addazi L., 2020, J OBJECT TECHNOL, V19, P1
   Altmanninger K, 2011, ELEKTROTECH INFORMAT, V128, P421, DOI 10.1007/s00502-011-0063-z
   Altmanninger K., 2007, P INT WORKSH SEM BAS
   Altmanninger K, 2008, LECT NOTES COMPUT SC, V5002, P293
   Altmanninger K, 2010, INT J ENTERP INF SYS, V6, P68, DOI 10.4018/jeis.2010120206
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2010, P 14 INT C EV ASS SO
   Assunçao WKG, 2017, LECT NOTES COMPUT SC, V10221, P95, DOI 10.1007/978-3-319-56856-0_7
   Bang JY, 2018, IEEE SOFTWARE, V35, P25, DOI 10.1109/MS.2018.290110057
   Bang JY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P97, DOI 10.1109/ICSA.2017.45
   Bang JY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P155, DOI 10.1109/WICSA.2015.15
   Baqasah A, 2014, 16TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS 2014), P430, DOI 10.1145/2684200.2684302
   Barrett S., 2008, PROC 2 WORKSHOP MODE
   Barrett SC, 2011, LECT NOTES COMPUT SC, V6698, P329, DOI 10.1007/978-3-642-21470-7_23
   Bartelt C., 2010, PALADYN, P1
   Bartelt C., 2011, P 44 HAWAII INT C SY, P1
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brosch Petra, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P246, DOI 10.1007/978-3-642-29645-1_24
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Brosch Petra, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P184, DOI 10.1007/978-3-642-21210-9_18
   Brosch P., 2010, P 1 INT WORKSHOP MOD, P42
   Brosch P., 2010, ACM SIGPLAN C OBJ OR, P43
   Brosch P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a2
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Cai Hong-ming, 2015, Journal of Shanghai Jiaotong University (Science), V20, P86, DOI 10.1007/s12204-015-1593-z
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P83, DOI 10.1109/ICGSE.2009.16
   Chechik M, 2012, INNOV SYST SOFTW ENG, V8, P3, DOI 10.1007/s11334-011-0155-2
   Chong H, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P127, DOI 10.1109/SNPD.2016.7515890
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Costa V.O., 2013, P 25 INT C SOFTWARE, P656
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   López AJC, 2016, AD-MINIST, P147, DOI 10.17230/ad-minister.29.7
   Dam H.K., 2011, P 12 INT WORKSH PRIN, P121, DOI DOI 10.1145/2024445.2024468]
   David I, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P273, DOI 10.1109/MODELS50736.2021.00035
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2009.35
   Debreceni C, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P199, DOI 10.1109/MODELS.2017.33
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Demuth A, 2016, IEEE INT CONF AUTOM, P590, DOI 10.1145/2970276.2970304
   Derntl M, 2015, LECT NOTES COMPUT SC, V9381, P344, DOI 10.1007/978-3-319-25264-3_25
   Di Ruscio D, 2017, PROC IEEE ACM INT C, P219, DOI 10.1109/ICSE-C.2017.143
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   Edded S, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110422
   Ehrig H, 2011, LECT NOTES COMPUT SC, V6603, P202, DOI 10.1007/978-3-642-19811-3_15
   Erol S, 2013, IEEE INT ENTERP, P250, DOI 10.1109/EDOCW.2013.34
   Farias K, 2019, IET SOFTW, V13, P575, DOI 10.1049/iet-sen.2018.5104
   Foucault M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P31, DOI 10.1109/MiSE.2013.6595293
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Fritsche L, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P39, DOI 10.1145/3426425.3426931
   FRUHWIRTH T, 1992, LECT NOTES ARTIF INT, V636, P3
   Gerth C, 2013, SOFTW SYST MODEL, V12, P517, DOI 10.1007/s10270-011-0226-8
   Gerth C, 2010, LECT NOTES COMPUT SC, V6395, P93
   Goldberg Adele., 2002, J OBJECT TECHNOL, V1, P1, DOI [10.5381/jot.2002.1.1.c1, DOI 10.5381/JOT.2002.1.1.C1]
   Goncales L., 2015, P 27 INT C SOFTW ENG, P546
   Grossmann G, 2015, INT J COOP INF SYST, V24, DOI 10.1142/S021884301540002X
   Hachemi Asma, 2020, Software Engineering Perspectives in Intelligent Systems. Proceedings of 4th Computational Methods in Systems and Software 2020. Advances in Intelligent Systems and Computing (AISC 1294), P336, DOI 10.1007/978-3-030-63322-6_27
   Dam HK, 2016, J SYST SOFTWARE, V112, P137, DOI 10.1016/j.jss.2015.06.044
   Hoa Khanh Dam, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P153, DOI 10.1109/WICSA.2014.31
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Iswari N.M.S., 2014, P INT C DATA SOFTWAR, P1
   Jahed K, 2021, SOFTW SYST MODEL, V20, P267, DOI 10.1007/s10270-020-00804-7
   Jyani N. C., 2021, P INT C COMM COMP TE, P623
   Kallweit B, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P183, DOI 10.1145/3344948.3344980
   Kanagasabai N, 2018, LECT NOTES COMPUT SC, V11150, P202, DOI 10.1007/978-3-030-01042-3_12
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Kelly S, 2018, LECT NOTES COMPUT SC, V10748, P20, DOI 10.1007/978-3-319-74730-9_3
   Kessentini M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1453
   Kitchenham B., 2007, 23 SCH COMP SCI MATH
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   KOEGEL M, 2010, P 1 INT WORKSH MOD C, P21, DOI DOI 10.1145/1826147.1826154
   Koegel M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P43, DOI 10.1109/CVSM.2009.5071721
   König H, 2017, LECT NOTES COMPUT SC, V10376, P161, DOI 10.1007/978-3-319-61482-3_10
   König H, 2016, LECT NOTES COMPUT SC, V9764, P19, DOI 10.1007/978-3-319-42061-5_2
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Koshima A., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P113, DOI 10.1109/ICGSE.2011.18
   Koshima A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P55
   Koshima AA, 2015, SCI COMPUT PROGRAM, V113, P3, DOI 10.1016/j.scico.2015.07.004
   Küster JM, 2009, LECT NOTES COMPUT SC, V5562, P158, DOI 10.1007/978-3-642-02674-4_12
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kuiter E, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09892-x
   Kuiter E, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P257, DOI 10.1145/3336294.3336308
   Mafazi S., 2014, P 10 AS PAC C CONC M, V154, P39
   Mandel L, 1999, LECT NOTES COMPUT SC, V1708, P854
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Masson C., 2017, ser. CEUR Workshop Proceedings, V2019, P164
   Mazo, 2020, P INT C EV NOV APPR, P1, DOI DOI 10.5220/0009346102970304
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5523, P16, DOI 10.1007/978-3-642-02164-0_2
   Murta L, 2007, SCI COMPUT PROGRAM, V65, P249, DOI 10.1016/j.scico.2006.05.011
   Nejati S., 2005, P 20 IEEEACM INT C A, P456, DOI DOI 10.1145/1101908.1101998
   Nicolaescu P, 2018, INFORM SYST, V74, P23, DOI 10.1016/j.is.2017.07.008
   Nicolaescu P, 2016, LECT NOTES COMPUT SC, V9694, P3, DOI 10.1007/978-3-319-39696-5_1
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Perrouin G, 2009, LECT NOTES COMPUT SC, V5512, P89, DOI 10.1007/978-3-642-02050-6_8
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Phalp K, 2012, IFIP ADV INF COMM TE, V380, P262
   Pottinger R.A., 2003, P 29 VLDB C, P826, DOI DOI 10.1016/B978-012722442-8/50081-1
   Rajbhoj A, 2013, LECT NOTES COMPUT SC, V8107, P422, DOI 10.1007/978-3-642-41533-3_26
   Ram S, 1998, ACM T INFORM SYST, V16, P347, DOI 10.1145/291128.291130
   Rossini A., 2018, P 3 INT WORKSH COLL, P1
   Rossini A, 2010, J LOGIC ALGEBR PROGR, V79, P636, DOI 10.1016/j.jlap.2009.10.003
   Rutle A, 2009, LECT NOTES COMPUT SC, V5503, P64
   Sabetzadeh M, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P306, DOI 10.1109/RE.2005.8
   Sabetzadeh M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ASE.2003.1240290
   Sabetzadeh M, 2007, INT REQUIR ENG CONF, P221, DOI 10.1109/RE.2007.18
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Sabetzadeh M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P815, DOI 10.1145/1368088.1368208
   Schaathun H.G., 2018, NORSK IKT KONFERANSE, P1
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schröpfer J, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P268, DOI 10.1109/MODELS-C.2019.00043
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   Schwartz F.J., 2013, Prototype: Design and Craft in the 21st Century, P1, DOI DOI 10.1109/WPNC.2013.6533297
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   Sharbaf Mohammadreza, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P1, DOI 10.1145/3419804.3421447
   Sharbaf M, 2022, J COMPUT LANG, V71, DOI 10.1016/j.cola.2022.101123
   Sharbaf M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P5, DOI 10.1109/MODELS-C53483.2021.00009
   Sharbaf M, 2020, SOFTWARE PRACT EXPER, V50, P1565, DOI 10.1002/spe.2835
   Sharbaf M, 2017, 2017 IEEE 4TH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P197, DOI 10.1109/KBEI.2017.8324972
   Sharbaf M, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P860, DOI 10.1109/KBEI.2015.7436156
   Spencer D., 2009, CARD SORTING DESIGNI
   Sriplakich P, 2006, PROC IEEE INT CONF S, P244
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   St┬u┬ankel P., 2021, FORM ASP COMPUT, V66, P1
   Stünkel P, 2020, LECT NOTES COMPUT SC, V12076, P335, DOI 10.1007/978-3-030-45234-6_17
   Sunyé G, 2017, LECT NOTES COMPUT SC, V10376, P197, DOI 10.1007/978-3-319-61482-3_12
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Tröls MA, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1572, DOI 10.1145/3412841.3442127
   Tröls MA, 2019, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'19), DOI 10.1145/3319499.3328232
   Tröls MA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P278, DOI 10.1109/MODELS-C.2019.00044
   Tröls MA, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1776, DOI 10.1145/3297280.3297454
   Trols M.A., 2021, P INT C SOFTW SYST P
   Tröls MA, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P83, DOI 10.1109/ICSSP-ICGSE52873.2021.00018
   Vredenburg K., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P471, DOI 10.1145/503376.503460
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31, DOI DOI 10.1145/1826147.1826155
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   Wieland K, 2013, COMPUT SUPP COOP W J, V22, P181, DOI 10.1007/s10606-012-9172-4
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Zerrouk M, 2018, 2018 IEEE 5TH INTERNATIONAL CONGRESS ON INFORMATION SCIENCE AND TECHNOLOGY (IEEE CIST'18), P117, DOI 10.1109/CIST.2018.8596542
   Zhang P, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY PROCEEDINGS - CYBERC 2016, P146, DOI 10.1109/CyberC.2016.37
   Zhang Z, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/650748
   Zhu H., 2006, P 9 INT C COMP MOD S, P47
   Zolkifli Nazatul Nurlisa, 2018, Procedia Computer Science, V135, P408, DOI 10.1016/j.procs.2018.08.191
   Zweihoff P, 2019, LECT NOTES COMPUT SC, V11424, P101, DOI 10.1007/978-3-030-16722-6_6
NR 157
TC 2
Z9 2
U1 3
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 1031
EP 1079
DI 10.1007/s10270-022-01050-9
EA OCT 2022
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000869227500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Döller, V
   Karagiannis, D
   Utz, W
AF Doeller, Victoria
   Karagiannis, Dimitris
   Utz, Wilfrid
TI METAMORPH: formalization of domain-specific conceptual modeling
   methods-an evaluative case study, juxtaposition and empirical assessment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Agile modeling method engineering; Domain-specific
   modeling language; Formal language; Logic; Evaluation
AB Models have evolved from mere pictures supporting human understanding and communication to sophisticated knowledge structures processable by machines and establish value through their processing capabilities. This entails an inevitable need for computer-understandable modeling languages and causes formalization to be a crucial part in the lifecycle of engineering a modeling method. An appropriate formalism must be a means for providing a structural definition to enable a theoretical investigation of conceptual modeling languages and a unique, unambiguous way of specifying the syntax and semantics of an arbitrary modeling language. For this purpose, it must be generic and open to capturing any domain and any functionality. This paper provides a pervasive description of the formalism METAMORPH based on logic and model theory-an approach fulfilling the requirements above for modeling method engineering. The evaluation of the formalism is presented following three streams of work: First, two evaluative case studies illustrate the applicability of METAMORPH formalism concept by concept on the modeling language PROVIS from the domain of stochastic education and the well-known Entity-Relationship language. PROVIS as well as ER comprise only a few objects and relation types but with high interconnection and expressive power and are therefore considered interesting specimens for formalization. Second, a comprehensive juxtaposition of METAMORPH to three other formalization approaches based on different foundational theories is outlined concept by concept to underpin the formalism design. Third, an empirical evaluation has been performed, assessing the usability and adequacy of the formalism within a classroom assessment. The results allow for conclusions on the completeness, intuitiveness, and complexity as well as on interdependencies with engineers' skills.
C1 [Doeller, Victoria; Karagiannis, Dimitris] Univ Vienna, Res Grp Knowledge Engn, Fac Comp Sci, Wahringer Str 29, A-1090 Vienna, Austria.
   [Utz, Wilfrid] OMiLAB NPO, Lutzowufer 1, D-10785 Berlin, Germany.
C3 University of Vienna
RP Döller, V (corresponding author), Univ Vienna, Res Grp Knowledge Engn, Fac Comp Sci, Wahringer Str 29, A-1090 Vienna, Austria.
EM victoria.doeller@univie.ac.at; dimitris.karagiannis@univie.ac.at;
   wilfrid.utz@omilab.org
OI Doller, Victoria/0000-0002-5770-635X
CR ADOxx.org, ADOXX MET PLATF
   Baader F., 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   Bork D, 2014, P ANN HICSS, P3400, DOI 10.1109/HICSS.2014.422
   Bork D, 2019, COMMUN ASSOC INF SYS, V44, P673, DOI 10.17705/1CAIS.04432
   Brachman R.J., 1989, READINGS ARTIFICIAL, P207, DOI DOI 10.1016/B978-0-934613-53-8.50019-4
   Buchmann R. A., 2019, Complex Systems Informatics and Modeling Quarterly, V21, P21, DOI [10.7250/csimq.2019-21.02, DOI 10.7250/CSIMQ.2019-21.02]
   Burger E., 2014, FLEXIBLE VIEWS VIEW, DOI [10.5445/KSP/1000043437, DOI 10.5445/KSP/1000043437]
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Chang C.C., 1990, Model theory
   Choe Y., 2016, Domain-Specific Conceptual Modeling: Concepts, Methods and Tools, P335, DOI [10.1007/978-3-319-39417-6_15, DOI 10.1007/978-3-319-39417-6_15]
   Clyde Stephen W., 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P151, DOI 10.1007/978-3-642-28279-9_12
   D?ller V., 2020, PRACTICE ENTERPRISE, DOI [10.1007/978-3-030-63479-7_8, DOI 10.1007/978-3-030-63479-7_8]
   Delcambre LML, 2019, LECT NOTES COMPUT SC, V11877, P40, DOI 10.1007/978-3-030-33246-4_3
   Delcambre LML, 2018, LECT NOTES COMPUT SC, V11157, P27, DOI 10.1007/978-3-030-00847-5_4
   Döller V, 2022, SOFTW SYST MODEL, V21, P1411, DOI 10.1007/s10270-022-00986-2
   Doller Victoria, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P245, DOI 10.1007/978-3-030-79186-5_16
   Doller V., 2022, Domain-Specific Conceptual Modeling: Concepts, Methods and ADOxx Tools, P481, DOI [10.1007/978-3-030-93547, DOI 10.1007/978-3-030-93547]
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Enderton H. B., 2001, A mathematical introduction to logic
   Fill Hans-Georg, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P133
   Frank U., 2013, Domain Engineering, P133
   GARNAUT R, 1992, ECONOMIC REFORM AND INTERNATIONALISATION: CHINA AND THE PACIFIC REGION, P1
   Guarino N, 2020, FRONT ARTIF INTEL AP, V321, P1, DOI 10.3233/FAIA200002
   Guizzardi G., 2005, THESIS U TWENTE WILE
   Guizzardi G., 2013, Domain engineering, Product Lines, Languages, and Conceptual Models, P317
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heckel Reiko, 2020, Graph Transformation for Software Engineers-With Applications to Model-Based Development and Domain-Specific Language Engineering, DOI [10.1007/978-3-030-43916-3, DOI 10.1007/978-3-030-43916-3]
   Henderson-Sellers B., 2012, MATH MODELLING METAM, DOI [10.1007/978-3-642-29825-7, DOI 10.1007/978-3-642-29825-7]
   Henderson-Sellers B., 2014, Situational method engineering, DOI DOI 10.1007/978-3-642-41467-1
   Henderson-Sellers B, 2015, LECT NOTES COMPUT SC, V9381, P3, DOI 10.1007/978-3-319-25264-3_1
   Jackson E, 2009, SOFTW SYST MODEL, V8, P451, DOI 10.1007/s10270-008-0105-0
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Karagiannis D, 2002, LECT NOTES COMPUT SC, V2455, P182
   Karagiannis D., 2019, ART STRUCTURING, P75, DOI [10.1007/978-3-030-06234-7_8, DOI 10.1007/978-3-030-06234-7_8]
   Karagiannis D., 2016, Domain-Specific Conceptual Modeling, P3, DOI [10.1007/978-3-319-39417-6, DOI 10.1007/978-3-319-39417-6]
   Karagiannis D, 2019, INT REQUIR ENG CONF, P199, DOI 10.1109/RE.2019.00030
   Karagiannis D, 2018, LECT NOTES BUS INF P, V273, P3, DOI 10.1007/978-3-319-73459-0_1
   Kaschek R, 2018, ENTERP MODELLING INF, V13, P28
   Kern H., 2011, SPLASH 11 WORKSH, P7
   Koubarakis M, 2021, REQUIR ENG, V26, P1, DOI 10.1007/s00766-020-00329-x
   Mayr HC, 2021, SOFTW SYST MODEL, V20, P7, DOI 10.1007/s10270-020-00836-z
   metacase, METACASE METAEDIT DO
   Muck C., 2022, Domain-Specific Conceptual Modeling, P567
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMiLAB NPO, 2022, OMILAB OP MOD IN LAB
   Partridge C, 2013, LECT NOTES COMPUT SC, V8217, P96, DOI 10.1007/978-3-642-41924-9_9
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Sandkuhl K, 2018, BUS INFORM SYST ENG+, V60, P69, DOI 10.1007/s12599-017-0516-y
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Silberschatz A., 2011, Database system concepts, VSixth
   Sprinkle J, 2010, LECT NOTES COMPUT SC, V6100, P57, DOI 10.1007/978-3-642-16277-0_3
   Stachowiak H., 1973, Allgemeine Modelltheorie, DOI [10.1007/978-3-7091-8327-4, DOI 10.1007/978-3-7091-8327-4]
   Sumereder A., 2022, Domain-Specific Conceptual Modeling, DOI DOI 10.1007/978-3-030-93547-4_18
   Thalheim B, 2019, LECT NOTES COMPUT SC, V11815, P123, DOI 10.1007/978-3-030-32065-2_9
   Thalheim B, 2018, ENTERP MODELLING INF, V13, P9
   Thalheim B, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P543
   Utz, 2018, 11 IFIP WG 81 WORKIN, V2234, P47
   Weisemöller I, 2008, LECT NOTES COMPUT SC, V5301, P386, DOI 10.1007/978-3-540-87875-9_28
NR 60
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 75
EP 110
DI 10.1007/s10270-022-01047-4
EA OCT 2022
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000864545900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fossdal, FH
   Heldal, R
   Dyvik, J
   Rutle, A
AF Fossdal, Frikk H.
   Heldal, Rogardt
   Dyvik, Jens
   Rutle, Adrian
TI Fabricatable axis: an approach for modelling customized fabrication
   machines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model driven engineering; Digital fabrication; Machine building; CNC;
   CAD; CAM
AB Digital fabrication tools such as 3D printers, computer-numerically controlled (CNC) milling machines, and laser cutters are becoming increasingly available, ranging from consumer to industrial versions. Recent studies have shown that users, ranging from researchers, to industry professionals, to hobbyists, are interested in modifying and changing the inherit workflows these tools provide. As an answer to this, these users are increasingly modifying and customizing their machines by changing the work envelope, adding different end-effectors, and creating their own fabrication workflows in software. However, customizing, modifying and creating digital fabrication machines and the workflows they provide require extensive knowledge within multiple different engineering domains and is non-trivial. In this article we present a model-driven approach that enables users to expand their digital fabrication scope by providing a high-level tool that facilitates the customization of fabrication tools. We present The Farbicatable Axis, a model that enables users to create customized linear actuators. The model takes high-level input parameters such as length and gearing-parameters, and outputs a CAD model of a linear motion axis consisting of fabricatable parts. We then present how instances of the Fabricatable Axis can be combined and used to design and implement Fabricatable Machines.
C1 [Fossdal, Frikk H.] Western Norway Univ Appl Sci, Bergen, Norway.
   [Heldal, Rogardt] Western Norway Univ Appl Sci, Software Engn, Bergen, Norway.
   [Rutle, Adrian] Western Norway Univ Appl Sci, Dept Comp Sci Elect Engn & Math Sci, Bergen, Norway.
   [Dyvik, Jens] Dyvik Design, Oslo, Norway.
C3 Western Norway University of Applied Sciences; Western Norway University
   of Applied Sciences; Western Norway University of Applied Sciences
RP Fossdal, FH (corresponding author), Western Norway Univ Appl Sci, Bergen, Norway.
EM ffo@hvl.no; rohe@hvl.no; jens@dyvikdesign.com; aru@hvl.no
OI Fossdal, Frikk/0000-0002-8113-0303
FU Western Norway University Of Applied Sciences
FX Open access funding provided by Western Norway University Of Applied
   Sciences.
CR [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2020, ROBOT COMPONENTS
   [Anonymous], 2008, REPORTS REVISED SELE, DOI DOI 10.1007/978-3-642-01648-6_6
   Au C.K., 2000, COMPUT AIDED DESIGN, V32.1, P6374, DOI [10.1016/S0010-4485(99)00085-8, DOI 10.1016/S0010-4485(99)00085-8]
   Autodesk, FUSION360 ENUS LIB C
   Bosch, 2019, REXROTH
   Dalibor M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P431, DOI 10.1109/MODELS-C.2019.00069
   Duro-Royo J., 2015, MRS Online Proc. Libr. (OPL), V1800, pmrss15, DOI [10.1557/opl.2015.647, DOI 10.1557/OPL.2015.647]
   Educause ELI, 2013, 7 THINGS YOU SHOULD
   Eliasson U, 2014, LECT NOTES COMPUT SC, V8767, P433, DOI 10.1007/978-3-319-11653-2_27
   Engstrm E., 2019, ARXIV190412742 CS
   Fablab, WWWFABLABSIO
   Firefly, 2010, TEXT
   food4rhino, 2019, FOOD4RHINO TEXT
   Fossdal F.H., 2020, P 23 ACMIEEE INT C M, P143, DOI [10.1145/3365438.3410960, DOI 10.1145/3365438.3410960]
   Fossdal FH, 2020, TEI'20: PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON TANGIBLE, EMBEDDED, AND EMBODIED INTERACTION, P411, DOI 10.1145/3374920.3374929
   Gantt M., 1992, Gardeners and gurus: patterns of cooperation among CAD users, DOI 10.1145/142750.142767
   Gao W, 2015, UIST'15: PROCEEDINGS OF THE 28TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P437, DOI 10.1145/2807442.2807476
   Hevner A.R, 2004, MIS QUART, V75105
   Hochgeladen R., CAD CAM REPORT
   Hofmann M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173875
   Holland D, 2017, IEEE ROBOT AUTOM MAG, V24, P57, DOI 10.1109/MRA.2016.2639067
   Koo BJ, 2014, ACM T GRAPHIC, V33, DOI 10.1145/2661229.2661289
   Lau Manfred., 2011, ACM Transactions on Graphics (TOG), V30, P1, DOI DOI 10.1145/2010324.1964980
   Malone E, 2007, RAPID PROTOTYPING J, V13, P245, DOI 10.1108/13552540710776197
   Maslow, 2019, MASLOW US
   MatLab, SIMULINK SIMULATION
   McNeel, THE GRASSHOPPER
   Mehta AM, 2018, SPR PROC ADV ROBOT, V3, P631, DOI 10.1007/978-3-319-60916-4_36
   National Instruments, LabVIEW
   Oh H, 2017, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON TANGIBLE, EMBEDDED, AND EMBODIED INTERACTION (TEI'17), P131, DOI 10.1145/3024969.3024991
   OpenBuilds, 2019, OPENBUILDS
   Peek N, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P3657, DOI 10.1145/3025453.3025491
   Peng HS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P887, DOI 10.1145/2858036.2858106
   Peng HS, 2016, UIST 2016: PROCEEDINGS OF THE 29TH ANNUAL SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P553, DOI 10.1145/2984511.2984523
   Ramesh R, 2017, PROCEEDINGS SCF 2017: ACM SYMPOSIUM ON COMPUTATIONAL FABRICATION, DOI 10.1145/3083157.3083159
   Reprap, 2019, REPRAP
   Roumen T, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173637
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Scheffler R., 2016, P 4 INT C MODEL DRIV
   SideFx, HOUDINI
   Srai JS, 2016, INT J PROD RES, V54, P6917, DOI 10.1080/00207543.2016.1192302
   Taco ABB, 2016, TEXT
   Teibrich A, 2015, UIST'15: PROCEEDINGS OF THE 28TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P83, DOI 10.1145/2807442.2807467
   Vasquez J, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376425
   Vilbrandt T., 2008, Heterogeneous Objects Modelling and Applications, P259, DOI 10.1007/978-3-540-68443-5_11
   Wang GY, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5743, DOI 10.1145/2858036.2858281
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Yildirim N, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376621
NR 50
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1907
EP 1929
DI 10.1007/s10270-022-01007-y
EA MAY 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000791875100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Jongeling, R
   Ciccozzi, F
   Carlson, J
   Cicchetti, A
AF Jongeling, Robbert
   Ciccozzi, Federico
   Carlson, Jan
   Cicchetti, Antonio
TI Consistency management in industrial continuous model-based development
   settings: a reality check
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based development; Consistency management; Agile
ID CONTINUOUS INTEGRATION; COEVOLUTION
AB This article presents the state of practice of consistency management in thirteen industrial model-based development settings. Our analysis shows a tight coupling between adopting shorter development cycles and increasingly pressing consistency management challenges. We find that practitioners desire to adopt shorter development cycles, but immature modeling practices slow them down. We describe the different patterns that emerge from the various industrial settings. There is an opportunity for researchers to provide practitioners with a migration path toward practices that enable more automated consistency management, and ultimately, continuous model-based development.
C1 [Jongeling, Robbert; Ciccozzi, Federico; Carlson, Jan; Cicchetti, Antonio] Malardalen Univ, Dept Innovat Design & Engn IDT, Vasteras, Sweden.
C3 Malardalen University
RP Jongeling, R (corresponding author), Malardalen Univ, Dept Innovat Design & Engn IDT, Vasteras, Sweden.
EM robbert.jongeling@mdu.se; federico.ciccozzi@mdu.se; jan.carlson@mdu.se;
   antonio.cicchetti@mdu.se
RI ; Carlson, Jan/D-4717-2012; Cicchetti, Antonio/D-2375-2015
OI Jongeling, Robbert/0000-0002-1863-3987; Carlson,
   Jan/0000-0002-8461-0230; ciccozzi, federico/0000-0002-0401-1036;
   Cicchetti, Antonio/0000-0003-0416-1787
FU Malardalen University
FX Open access funding provided by Malardalen University
CR Alfraihi H, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P451, DOI 10.5220/0006207004510458
   Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2004, OOPSLA GPCE WORKSH 0
   Atkinson C, 2008, LECT NOTES COMPUT SC, V4961, P93, DOI 10.1007/978-3-540-78743-3_7
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2019, SOFTW SYST MODEL, V18, P3207, DOI 10.1007/s10270-018-00713-w
   Denil Joachim., 2017, MODELS (Satellite Events), P424
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Eliasson U, 2014, LECT NOTES COMPUT SC, V8767, P433, DOI 10.1007/978-3-319-11653-2_27
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Fowler M., 2001, Software Development, V9, P28
   Garcia J, 2019, LECT NOTES COMPUT SC, V11350, P19, DOI 10.1007/978-3-030-06019-0_2
   García-Díaz V, 2016, COMPUT INFORM, V35, P299
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hu ZJ, 2011, SIGMOD REC, V40, P35, DOI 10.1145/2007206.2007217
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   INCOSE, 2011, SYST ENG HDB V3 2 2
   Jongeling R, 2019, EUROMICRO CONF PROC, P434, DOI 10.1109/SEAA.2019.00071
   Kanakis G, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a10
   Knapp Alexander., 2018, Graph Transformation, Specifications, and Nets, P37
   Knauss E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962639
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Olsson H.H., 2014, CONTINUOUS SOFTWARE, P15
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Rapos EJ, 2016, 2016 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P34, DOI [10.1109/MiSE.2016.014, 10.1145/2896982.2896983]
   Reineke J, 2019, SOFTW SYST MODEL, V18, P1577, DOI 10.1007/s10270-017-0638-1
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seibel A, 2010, SOFTW SYST MODEL, V9, P493, DOI 10.1007/s10270-009-0146-z
   Stevens P, 2020, SOFTW SYST MODEL, V19, P39, DOI 10.1007/s10270-019-00736-x
   Stünkel P, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.1.a2
   Tian FC, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106705
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Ul Muram F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3037755
   Usman M, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P57, DOI 10.1109/ASEA.2008.40
   Pham VC, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P239, DOI 10.1109/ICSA.2017.41
   Wang SN, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P272, DOI 10.1109/SANER50967.2021.00033
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 54
TC 7
Z9 7
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1511
EP 1530
DI 10.1007/s10270-022-01000-5
EA APR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000782313500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cai, SM
   Gallina, B
   Nyström, D
   Seceleanu, C
AF Cai, Simin
   Gallina, Barbara
   Nystrom, Dag
   Seceleanu, Cristina
TI Specification and automated verification of atomic concurrent real-time
   transactions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Transaction; Atomicity; Isolation; Temporal correctness; Unified
   modeling language; Model checking
ID SYSTEMS
AB Many database management systems (DBMS) need to ensure atomicity and isolation of transactions for logical data consistency, as well as to guarantee temporal correctness of the executed transactions. Since the mechanisms for atomicity and isolation may lead to breaching temporal correctness, trade-offs between these properties are often required during the DBMS design. To be able to address this concern, we have previously proposed the pattern-based UPPCART framework, which models the transactions and the DBMS mechanisms as timed automata, and verifies the trade-offs with provable guarantee. However, the manual construction of UPPCART models can require considerable effort and is prone to errors. In this paper, we advance the formal analysis of atomic concurrent real-time transactions with tool-automated construction of UPPCART models. The latter are generated automatically from our previously proposed UTRAN specifications, which are high-level UML-based specifications familiar to designers. To achieve this, we first propose formal definitions for the modeling patterns in UPPCART, as well as for the pattern-based construction of DBMS models, respectively. Based on this, we establish a translational semantics from UTRAN specifications to UPPCART models, to provide the former with a formal semantics relying on timed automata, and develop a tool that implements the automated transformation. We also extend the expressiveness of UTRAN and UPPCART, to incorporate transaction sequences and their timing properties. We demonstrate the specification in UTRAN, automated transformation to UPPCART, and verification of the traded-off properties, via an industrial use case.
C1 [Cai, Simin; Gallina, Barbara; Nystrom, Dag; Seceleanu, Cristina] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
C3 Malardalen University
RP Cai, SM (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM simin.cai@mdh.se; barbara.gallina@mdh.se; dag.nystrom@mdh.se;
   cristina.seceleanu@mdh.se
RI Gallina, Barbara/AAP-7867-2021
OI Seceleanu, Cristina/0000-0003-2870-2680
FU Malardalen University; Swedish Research Council (VR)
FX Open access funding provided by Malardalen University. The Swedish
   Research Council (VR) is gratefully acknowledged for supporting this
   research by the project "Adequacy-based Testing of Extra-Functional
   Properties of Embedded Systems".
CR ABBOTT RK, 1992, ACM T DATABASE SYST, V17, P513, DOI 10.1145/132271.132276
   Adya A., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P67, DOI 10.1109/ICDE.2000.839388
   André É, 2013, IEEE INT C ENG COMP, P125, DOI 10.1109/ICECCS.2013.26
   [Anonymous], 1992, 90751992 ISOIEC
   Arntsen A.-B., 2005, P 4 WORKSH REFL AD M, P4
   Biehl M, 2010, ACM SIGPLAN NOTICES, V45, P125, DOI 10.1145/1755951.1755907
   Biliris A., 1994, SIGMOD Record, V23, P44, DOI 10.1145/191843.191848
   Cai S., 2019, P 24 IEEE C EM TECHN
   Cai S., 2019, CODE REPOSITORY
   Cai S., TECH REP
   Cai SM, 2017, IEEE IND ELEC, P8397, DOI 10.1109/IECON.2017.8217475
   Cai SM, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P3, DOI 10.1145/2997465.2997495
   Charfi A, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P149, DOI 10.1109/ECOWS.2007.17
   CHRYSANTHIS PK, 1994, ACM T DATABASE SYST, V19, P450, DOI 10.1145/185827.185843
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   Derks W, 2000, PROCEEDINGS OF THE THIRD INTERNATIONAL SYMPOSIUM ON COOPERATIVE DATABASE SYSTEMS FOR ADVANCED APPLICATIONS, P140, DOI 10.1109/CODAS.2001.945160
   Distante D., 2007, International Journal of Web Engineering and Technology, V3, P43, DOI 10.1504/IJWET.2007.011527
   Dong JS, 2008, IEEE T SOFTWARE ENG, V34, P844, DOI 10.1109/TSE.2008.52
   Elmasri R., 2004, FUNDAMENTALS DATABAS, V3rd
   Enoiu EP, 2012, IEEE INT C ENG COMP, P328, DOI 10.1109/ICECCS.2012.42
   Fabry J., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1615, DOI 10.1145/1141277.1141655
   Gallina B., 2010, THESIS
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   Gioldasis N, 2002, WISE 2002: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, P115, DOI 10.1109/WISE.2002.1181649
   Han S, 2013, IEEE T KNOWL DATA EN, V25, P2325, DOI 10.1109/TKDE.2012.173
   Lanotte R, 2006, LECT NOTES COMPUT SC, V4037, P108
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Liu S., 2016, P 31 ANN ACM S APPL, P1700
   Marouane H., J KING SAUD U COMPUT
   Mazzini S., 2016, EduSymp/OSS4MDE@ MoDELS, P59
   Mekki A., 2009, 3 INT WORKSH VER EV
   Milner R., 1989, Communication and concurrency
   Moss E.B., 1981, THESIS
   Mottu Jean-Marie, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P105, DOI 10.1109/ICSTW.2008.27
   RAMAMRITHAM K, 1993, DISTRIB PARALLEL DAT, V1, P199, DOI 10.1007/BF01264051
   Reuter A, 1992, T PROCESSING CONCEPT
   Soparkar N., 1994, CIKM 94. Proceedings of the Third International Conference on Information and Knowledge Management, P187, DOI 10.1145/191246.191276
   Stankovic JA, 1999, COMPUTER, V32, P29, DOI 10.1109/2.769440
   Sun CA, 2011, IEEE T SERV COMPUT, V4, P167, DOI 10.1109/TSC.2010.50
   Sun Y, 2018, INT C ELECTR MACH SY, P21, DOI 10.23919/ICEMS.2018.8549388
   Watahiki K, 2011, IEEE SYS MAN CYBERN, P1173, DOI 10.1109/ICSMC.2011.6083857
NR 42
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 557
EP 589
DI 10.1007/s10270-020-00819-0
EA JUL 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000555671800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mustafiz, S
   Hassane, O
   Dupont, G
   Khendek, F
   Toeroe, M
AF Mustafiz, Sadaf
   Hassane, Omar
   Dupont, Guillaume
   Khendek, Ferhat
   Toeroe, Maria
TI Model-driven process enactment for NFV systems with MAPLE
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process enactment; Megamodelling; Papyrus; Network functions
   virtualization (NFV)
AB The network functions virtualization (NFV) advent is making way for the rapid deployment of network services (NS) for telecoms. Automation of network service management is one of the main challenges currently faced by the NFV community. Explicitly defining a process for the design, deployment, and management of network services and automating it is therefore highly desirable and beneficial for NFV systems. The use of model-driven orchestration means has been advocated in this context. As part of this effort to support automated process execution, we propose a process enactment approach with NFV systems as the target application domain. Our process enactment approach is megamodel-based. An integrated process modelling and enactment environment, MAPLE, has been built into Papyrus for this purpose. Process modelling is carried out with UML activity diagrams. The enactment environment transforms the process model to a model transformation chain, and then orchestrates it with the use of megamodels. In this paper, we present our approach and environment MAPLE, its recent extension with new features as well as application to an enriched case study consisting of NS design and onboarding process.
C1 [Mustafiz, Sadaf] Ryerson Univ, CS, Toronto, ON, Canada.
   [Hassane, Omar; Dupont, Guillaume; Khendek, Ferhat] Concordia Univ, ECE, Montreal, PQ, Canada.
   [Toeroe, Maria] Ericsson Inc, Montreal, PQ, Canada.
C3 Toronto Metropolitan University; Concordia University - Canada; Ericsson
RP Mustafiz, S (corresponding author), Ryerson Univ, CS, Toronto, ON, Canada.
EM sadaf.mustafiz@ryerson.ca; o_assane@encs.concordia.ca;
   gdupont@encs.concordia.ca; ferhat.khendek@concordia.ca;
   maria.toeroe@ericsson.com
OI Khendek, Ferhat/0000-0002-3337-9841
FU NSERC; Ericsson
FX This work is partly funded by NSERC and Ericsson, and carried out within
   MAGIC, the NSERC/Ericsson Industrial Research Chair in Model Based
   Software Management.
CR Afzal W, 2017, 2017 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P494, DOI 10.1109/DSD.2017.50
   [Anonymous], 2017, WHIT PAP ZER TOUCH N
   [Anonymous], 04 OASIS
   [Anonymous], GENERATIVE TRANSFORM
   [Anonymous], MET FAC 2 0 QUER VIE
   [Anonymous], PAP
   [Anonymous], 2018, THESIS
   [Anonymous], ECLIPSE
   [Anonymous], 016 ETSI GR NFVIFA
   [Anonymous], EPSILON
   [Anonymous], DZONE
   [Anonymous], 04006 ITEA EUREKA
   [Anonymous], MOD WORKFL ENG 2 MWE
   [Anonymous], UN MOD LANG UML 2 5
   [Anonymous], ECMDA WORKSH MOD DRI
   [Anonymous], ECL TECHN EXCHANGE W
   [Anonymous], 1 EUR WORKSH COMP MO
   [Anonymous], 14 EUR C MOD FDN APP
   [Anonymous], THESIS
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], 015 ETSI GR NFVIFA
   [Anonymous], 2011, SEKE
   [Anonymous], 318763 SOFTEAM
   [Anonymous], ONAP ORCHESTRATION R
   [Anonymous], MOD DRIV TOOL PROC I
   Aranega Vincent, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P562, DOI 10.1007/978-3-642-33666-9_36
   Artac M., 2016, Proceedings of the 2nd International Workshop on Quality-Aware DevOps, P40
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Brambilla Marco., 2012, Model-driven software engineering in practice, V1
   Chen YL, 2015, INT CONF NETW SER, P410, DOI 10.1109/CNSM.2015.7367393
   Chiosi M., 2012, SDN OPENFLOW WORLD C, P22
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2319, P351
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Di Sandro A., 2015, MODELS 15, P16
   Etien Anne, 2012, 1 WORKSH AN MOD TRAN, P9, DOI [10.1145/2432497.2432500, DOI 10.1145/2432497.2432500]
   Ferry N, 2014, INT CONF UTIL CLOUD, P269, DOI 10.1109/UCC.2014.36
   Fritzsche M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P244, DOI 10.1109/ECBS.2009.33
   Heidenreich F, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a7
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2010, P 2010 ACM S APPL CO, P2011, DOI DOI 10.1145/1774088.1774511
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kling Wolfgang, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P180, DOI 10.1007/978-3-642-28830-2_10
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Maciel Rita Suzana Pitangueira, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P104, DOI 10.1109/SBES.2009.18
   Mijumbi R, 2016, IEEE COMMUN MAG, V54, P98, DOI 10.1109/MCOM.2016.7378433
   Mustafiz S, 2017, LECT NOTES COMPUT SC, V10567, P99, DOI 10.1007/978-3-319-68015-6_7
   Mustafiz S, 2016, 15TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (IEEE NCA 2016), P131, DOI 10.1109/NCA.2016.7778607
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3543, P108
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Seibel Andreas, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P19, DOI 10.1007/978-3-642-28830-2_2
   Simmonds J, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P406, DOI 10.1109/MODELS.2015.7338272
   van Lingen F, 2017, IEEE COMMUN MAG, V55, P28, DOI 10.1109/MCOM.2017.1600907
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Vanhooff B, 2006, LECT NOTES COMPUT SC, V4017, P39, DOI 10.1007/11796435_6
NR 57
TC 1
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1263
EP 1282
DI 10.1007/s10270-020-00783-9
EA FEB 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000517027700001
DA 2024-07-18
ER

PT J
AU Yigitbas, E
   Jovanovikj, I
   Biermeier, K
   Sauer, S
   Engels, G
AF Yigitbas, Enes
   Jovanovikj, Ivan
   Biermeier, Kai
   Sauer, Stefan
   Engels, Gregor
TI Integrated model-driven development of self-adaptive user interfaces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven UI development; UI adaptation; Self-adaptive UIs;
   Context-aware applications
ID FRAMEWORK; ADAPTATION
AB Modern user interfaces (UIs) are increasingly expected to be plastic, in the sense that they retain a constant level of usability, even when subjected to context changes at runtime. Self-adaptive user interfaces (SAUIs) have been promoted as a solution for context variability due to their ability to automatically adapt to the context-of-use at runtime. The development of SAUIs is a challenging and complex task as additional aspects like context management and UI adaptation have to be covered. In classical model-driven UI development approaches, these aspects are not fully integrated and hence introduce additional complexity as they represent crosscutting concerns. In this paper, we present an integrated model-driven development approach where a classical model-driven development of UIs is coupled with a model-driven development of context-of-use and UI adaptation rules. We base our approach on the core UI modeling language IFML and introduce new modeling languages for context-of-use (ContextML) and UI adaptation rules (AdaptML). The generated UI code, based on the IFML model, is coupled with the context and adaptation services, generated from the ContextML and AdaptML model, respectively. The integration of the generated artifacts, namely UI code, context, and adaptation services in an overall rule-based execution environment, enables runtime UI adaptation. The benefit of our approach is demonstrated by two case studies, showing the development of SAUIs for different application scenarios and a usability study which has been conducted to analyze end-user satisfaction of SAUIs.
C1 [Yigitbas, Enes; Jovanovikj, Ivan; Biermeier, Kai; Sauer, Stefan; Engels, Gregor] Paderborn Univ, Furstenallee 11, D-33102 Paderborn, Germany.
C3 University of Paderborn
RP Yigitbas, E (corresponding author), Paderborn Univ, Furstenallee 11, D-33102 Paderborn, Germany.
EM enes@mail.upb.de
RI Yigitbas, Enes/ABE-6865-2021
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Akiki Pierre A., 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P72
   Akiki PA, 2016, IEEE T SOFTWARE ENG, V42, P1118, DOI 10.1109/TSE.2016.2553035
   Akiki PA, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2597999
   [Anonymous], 2005, 35 EISB C SUST ENTR, DOI [10.1007/978-1-4020-2686-7, DOI 10.1145/1101480.1101483]
   [Anonymous], COMMUNICATIONS SIWN
   Balme L, 2004, LECT NOTES COMPUT SC, V3295, P291
   Bardram JE, 2005, LECT NOTES COMPUT SC, V3468, P98
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Coutaz J, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P1
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Duarte C, 2006, P 11 INT C INT US IN, P132
   FEUERSTACK S, 2006, LECT NOTES INFORM, P131
   Gajos KZ, 2010, ARTIF INTELL, V174, P910, DOI 10.1016/j.artint.2010.05.005
   Gamecho B, 2016, LECT NOTES COMPUT SC, V10069, P469, DOI 10.1007/978-3-319-48746-5_48
   IBM, 2005, An architectural blueprint for autonomic computing
   Jaouadi I, 2018, SOFTW SYST MODEL, V17, P1169, DOI 10.1007/s10270-016-0550-0
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Limbourg Q, 2004, ENGINEERING ADVANCED WEB APPLICATIONS, P325
   López-Jaquero V, 2011, STUD COMPUT INTELL, V340, P241
   Motti VG, 2013, INT CONF RES CHAL
   *OMG, 2017, 20171205 OMG
   *OMG, 2015, 20150205 OMG
   Pater no F., 2012, Proceedings of the 4th ACM SIGCHI symposium on Engineering interactive computing systems-EICS'12. EICS'12, DOI [DOI 10.1145/2305484.2305494, 10.1145/2305484.2305494]
   PATERN F, 2013, ENCY HUMAN COMPUTER
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Peissner D., 2012, 4 ACM SIGCHI S ENG I, P81
   Ruiz-Lopez Tomas, 2013, Ubiquitous Computing and Ambient Intelligence. Context-Awareness and Context-Driven Interaction. 7th International Conference, UCAmI 2013. Proceedings: LNCS 8276, P46, DOI 10.1007/978-3-319-03176-7_7
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sottet JS, 2007, LECT NOTES COMPUT SC, V4662, P397
   VANVELSEN L, 2008, USER CTR EVALUATION
   YIGITBAS E, 2019, PACMHCI, V3
   Yigitbas E, 2019, LECT NOTES COMPUT SC, V11749, P563, DOI 10.1007/978-3-030-29390-1_38
   Yigitbas E, 2017, LECT NOTES COMPUT SC, V10586, P624, DOI 10.1007/978-3-319-67585-5_61
   Yigitbas E, 2017, LECT NOTES COMPUT SC, V10376, P126, DOI 10.1007/978-3-319-61482-3_8
   Yigitbas E, 2016, LECT NOTES COMPUT SC, V9881, P114, DOI 10.1007/978-3-319-46963-8_10
   Yigitbas E, 2016, LECT NOTES COMPUT SC, V9856, P281, DOI 10.1007/978-3-319-44902-9_18
NR 39
TC 20
Z9 20
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1057
EP 1081
DI 10.1007/s10270-020-00777-7
EA JAN 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000509338500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cicchetti, A
   Ciccozzi, F
   Pierantonio, A
AF Cicchetti, Antonio
   Ciccozzi, Federico
   Pierantonio, Alfonso
TI Multi-view approaches for software and system modelling: a systematic
   literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model-driven engineering; Multi-view modelling; Viewpoints; Views;
   Consistency
ID FRAMEWORK
AB Over the years, a number of approaches have been proposed on the description of systems and software in terms of multiple views represented by models. This modelling branch, so-called multi-view software and system modelling, praises a differentiated and complex scientific body of knowledge. With this study, we aimed at identifying, classifying, and evaluating existing solutions for multi-view modelling of software and systems. To this end, we conducted a systematic literature review of the existing state of the art related to the topic. More specifically, we selected and analysed 40 research studies among over 8600 entries. We defined a taxonomy for characterising solutions for multi-view modelling and applied it to the selected studies. Lastly, we analysed and discussed the data extracted from the studies. From the analysed data, we made several observations, among which: (i) there is no uniformity nor agreement in the terminology when it comes to multi-view artefact types, (ii) multi-view approaches have not been evaluated in industrial settings and (iii) there is a lack of support for semantic consistency management and the community does not appear to consider this as a priority. The study results provide an exhaustive overview of the state of the art for multi-view software and systems modelling useful for both researchers and practitioners.
C1 [Cicchetti, Antonio; Ciccozzi, Federico] Malardalen Univ, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
   [Pierantonio, Alfonso] Univ Aquila, DISIM, Laquila, Italy.
C3 Malardalen University; University of L'Aquila
RP Ciccozzi, F (corresponding author), Malardalen Univ, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
EM antonio.cicchetti@mdh.se; federico.ciccozzi@mdh.se;
   alfonso.pierantonio@univaq.it
OI ciccozzi, federico/0000-0002-0401-1036; Pierantonio,
   Alfonso/0000-0002-5231-3952
FU Knowledge Foundation through the project MOMENTUM [20160153]; Knowledge
   Foundation through the project Strategic Knowledge Enhancement
   [20150056]
FX This work has been supported by the Knowledge Foundation through the
   projects MOMENTUM (Ref. 20160153) and Strategic Knowledge Enhancement
   (Ref. 20150056).
CR Ali NB, 2014, INT S EMP SOFTW ENG, P14
   Andrade J, 2004, IEEE T SOFTWARE ENG, V30, P282, DOI 10.1109/TSE.2004.1
   [Anonymous], 2011, CATEGORICAL DATA ANA
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2014, OBJ CONSTR LANG SPEC
   [Anonymous], INCONSISTENCY MANAGE
   [Anonymous], 1982, SELECTED WRITINGS CO, DOI DOI 10.1007/978-1-4612-5695-3_12
   [Anonymous], 2011, BUS PROC MOD NOT SPE
   Atkinson C, 2009, ENASE 2009: EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Awadid A, 2019, SOFTW SYST MODEL, V18, P1097, DOI 10.1007/s10270-017-0629-2
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bhave A, 2011, ACM IEEE INT CONF CY, P151, DOI 10.1109/ICCPS.2011.17
   Bork D., 2014, 2014 9 INT C SOFTW P
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9381, P317, DOI 10.1007/978-3-319-25264-3_23
   Cicchetti A., 2011, P 5 INT WORKSH MULT
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   France R., FUTURE SOFTWARE ENG
   France R, 2008, SOFTW SYST MODEL, V7, P1, DOI 10.1007/s10270-007-0071-y
   Franzosi Roberto., 2010, QUANTITATIVE NARRATI
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gleitze J, 2017, DECLARATIVE LANGUAGE
   Information Processing Systems-Open Systems Interconnection-LOTOS, 1989, 88071989 ISOIEC, P1
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Leff A, 2001, FIFTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P118, DOI 10.1109/EDOC.2001.950428
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Object Management Group (OMG), 2016, MOF 2 0 QUER VIEW TR
   OMG, 2017, UN MOD LANG SPEC VER
   Persson M., 2013, EMSOFT
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shah AA, 2010, LECT NOTES COMPUT SC, V5765, P580, DOI 10.1007/978-3-642-17322-6_25
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Stevens P, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P1, DOI 10.1109/MODELS.2017.8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Vallecillo A., 2001, DINTEL SOFTWARE ENG, V3, P66
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yingfei Xiong, 2013, Software and Systems Modeling, V12, P89, DOI 10.1007/s10270-010-0187-3
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 51
TC 39
Z9 41
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3207
EP 3233
DI 10.1007/s10270-018-00713-w
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Czepa, C
   Amiri, A
   Ntentos, E
   Zdun, U
AF Czepa, Christoph
   Amiri, Amirali
   Ntentos, Evangelos
   Zdun, Uwe
TI Modeling compliance specifications in linear temporal logic, event
   processing language and property specification patterns: a controlled
   experiment on understandability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Controlled experiment; Understandability; Linear temporal logic;
   Property specification patterns; Complex event processing; Event
   processing language
ID LTL; NUMBER
AB Mature verification and monitoring approaches, such as complex event processing and model checking, can be applied for checking compliance specifications at design time and runtime. Little is known about the understandability of the different formal and technical languages associated with these approaches. This uncertainty regarding understandability might be a major obstacle for the broad practical adoption of those techniques. This article reports a controlled experiment with 215 participants on the understandability of modeling compliance specifications in representative modeling languages, namely linear temporal logic (LTL), the complex event processing-based event processing language (EPL) and property specification patterns (PSP). The formalizations in PSP were overall more correct. That is, the pattern-based approach provides a higher level of understandability than EPL and LTL. More advanced users, however, seemingly are able to cope equally well with PSP and EPL in modeling compliance specifications.
C1 [Czepa, Christoph; Amiri, Amirali; Ntentos, Evangelos; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
C3 University of Vienna
RP Czepa, C (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
EM christoph.czepa@univie.ac.at; amirali.amiri@univie.ac.at;
   evangelos.ntentos@univie.ac.at; uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
FU Austrian Science Fund (FWF); FFG (Austrian Research Promotion Agency)
   project CACAO [843461]; FWF (Austrian Science Fund) [I 2885-N33]; FFG
   project DECO [864707]
FX Open access funding provided by Austrian Science Fund (FWF). We would
   like to thank all the participants of the controlled experiment. This
   work was supported by: FFG (Austrian Research Promotion Agency) project
   CACAO, no. 843461; FWF (Austrian Science Fund) project ADDCompliance: I
   2885-N33; FFG project DECO (no. 864707).
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], EPL REF
   [Anonymous], 2017, SEM BUS VOC RUL SBVR
   [Anonymous], DESIGN SYNTHESIS SYN
   [Anonymous], 2011, BPMN 2 0
   [Anonymous], 2010, BAS 3 INT FRAM LIQ R
   Awad A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1203, DOI 10.1145/2695664.2699488
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Carew D, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P247, DOI 10.1109/ISESE.2005.1541834
   Chomsky Noam, 1957, SYNTACTIC STRUCT, V35, P26, DOI DOI 10.1515/9783112316009
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cugola Gianpaolo., 2010, Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems - DEBS'10, P50
   Czepa C., 28 INT C ADV INF SYS
   Czepa C., 2016, 5 INT WORKSH AD CAS
   Czepa C., 2017, IEEE INT C SOFTW ARC
   Czepa C., 2016, 7 INT WORKSH ENT MOD
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   da Silva AR, 2017, GENET MOL RES, V16, DOI 10.4238/gmr16029655
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   De Giacomo G, 2014, AAAI CONF ARTIF INTE, P1027
   De Giacomo G, 2014, LECT NOTES COMPUT SC, V8659, P1, DOI 10.1007/978-3-319-10172-9_1
   De Smedt J, 2016, IMPROVING UNDERSTAND, P83
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Elgammal A, 2016, SOFTW SYST MODEL, V15, P119, DOI 10.1007/s10270-014-0395-3
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Ferri F., 2002, P 17 ACM ANN S APPL, P432, DOI [10. 1145/508791. 508873, DOI 10.1145/508791.508873]
   Fox J., 2018, R COMPANION APPL REG
   Habiballa H., 2004, INT J MATH ED SCI TE, V35, P829, DOI DOI 10.1080/00207390412331271267
   Haisjackl C, 2014, INVESTIGATING DIFFER, P194
   Haisjackl C, 2013, MAKING SENSE DECLARA, P2
   Harel D., 2000, TECH REP
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hindawi M, 2009, LECT NOTES COMPUT SC, V5421, P291, DOI 10.1007/978-3-642-01648-6_31
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P95, DOI 10.1109/QUATIC.2014.19
   Holmes T, 2011, SERVICE ENGINEERING: EUROPEAN RESEARCH RESULTS, P117, DOI 10.1007/978-3-7091-0415-6_5
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jost G, 2016, COMPUT STAND INTER, V48, P90, DOI 10.1016/j.csi.2016.04.006
   Juristo N., 2013, BASICS SOFTWARE ENG
   Khoshafian S., 2013, INTELLIGENT BPM NEXT
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Knobelsdorf M, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER'16), P73, DOI 10.1145/2960310.2960331
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Lytra I, 2015, INFORM SOFTWARE TECH, V63, P58, DOI 10.1016/j.infsof.2015.03.006
   Maggi F.M., 2012, Runtime Verification: Second International Conference, RV 2011, San Francisco, CA, USA, September 27-30, 2011, Revised Selected Papers 2, P131
   Michael G, 2002, 3763 SARBANES OXLEY
   Montali M, 2010, CONDEC LANGUAGE, P47
   Montali M, 2013, ACM T INTEL SYST TEC, V5, DOI 10.1145/2542182.2542199
   Naimi B, 2014, ECOGRAPHY, V37, P191, DOI 10.1111/j.1600-0587.2013.00205.x
   Pesic M., 2007, P 11 IEEE INT ENT DI
   Pesic M, 2010, LECT NOTES COMPUT SC, V6349, P146
   Pichler P, 2012, IMPERATIVE VERSUS DE, P383
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Revilla MA, 2014, SOCIOL METHOD RES, V43, P73, DOI 10.1177/0049124113509605
   Rodrigues RD, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P41, DOI 10.1109/SBES.2015.12
   Rovani M, 2015, EXPERT SYST APPL, V42, P9236, DOI 10.1016/j.eswa.2015.07.040
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Spichkova M, 2016, LECT NOTES COMPUT SC, V9946, P242, DOI 10.1007/978-3-319-50230-4_18
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tran T., 2016, 5 INT WORKSH AD CAS
   Tran T., 2015, 13 INT C BUS PROC MA
   Tran T., 2015, 4 INT WORKSH AD CAS
   Tran T., 2017, BUSINESS PROCESS MAN
   United States Environmental Protection Agency, 2011, EPAS LEAD BAS PAINT
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   Weber B., 2012, ENABLING FLEXIBILITY
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wickham H, 2009, USE R, P1, DOI 10.1007/978-0-387-98141-3
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zugal S, 2015, SOFTW SYST MODEL, V14, P1081, DOI 10.1007/s10270-013-0356-2
NR 80
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3331
EP 3371
DI 10.1007/s10270-019-00721-4
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600007
PM 31975976
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kienzle, J
   Mussbacher, G
   Combemale, B
   Deantoni, J
AF Kienzle, Jorg
   Mussbacher, Gunter
   Combemale, Benoit
   Deantoni, Julien
TI A unifying framework for homogeneous model composition
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model composition; Symmetric merge; Event scheduling; Event structures;
   Separation of concerns
AB The growing use of models for separating concerns in complex systems has lead to a proliferation of model composition operators. These composition operators have traditionally been defined from scratch following various approaches differing in formality, level of detail, chosen paradigm, and styles. Due to the lack of proper foundations for defining model composition (concepts, abstractions, or frameworks), it is difficult to compare or reuse composition operators. In this paper, we stipulate the existence of a unifying framework that reduces all structural composition operators to structural merging, and all composition operators acting on discrete behaviors to event scheduling. We provide convincing evidence of this hypothesis by discussing how structural and behavioral homogeneous model composition operators (i.e., weavers) can be mapped onto this framework. Based on this discussion, we propose a conceptual model of the framework and identify a set of research challenges, which, if addressed, lead to the realization of this framework to support rigorous and efficient engineering of model composition operators for homogeneous and eventually heterogeneous modeling languages.
C1 [Kienzle, Jorg] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
   [Mussbacher, Gunter] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Combemale, Benoit] Univ Toulouse, Toulouse, France.
   [Deantoni, Julien] Univ Cote Azur, I3S, INRIA, Nice, France.
C3 McGill University; McGill University; Universite de Toulouse; Inria;
   Universite Cote d'Azur
RP Combemale, B (corresponding author), Univ Toulouse, Toulouse, France.
EM joerg.kienzle@mcgill.ca; gunter.mussbacher@mcgill.ca;
   benoit.combemale@irit.fr; julien.deantoni@polytech.unice.fr
OI Deantoni, Julien/0000-0001-6962-7846
CR AlAbed W., 2015, LNCS, V6368
   André C, 2007, LECT NOTES COMPUT SC, V4735, P559
   [Anonymous], [No title captured]
   [Anonymous], DES AUT TEST EUR C E
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Bockisch C., 2011, 10 INT C ASP OR SOFT
   Bull CN, 2014, IEEE SOFTWARE, V31, P44, DOI 10.1109/MS.2014.52
   Cjlitia Calm, 2012, LECT NOTES ELECT ENG, V106, P223
   Clarke Siobhan., 2005, ASPECT ORIENTED SOFT, P425
   Clavreul M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P69, DOI 10.1145/1810295.1810306
   Combemale B, 2013, LECT NOTES COMPUT SC, V8225, P365, DOI 10.1007/978-3-319-02654-1_20
   DeAntoni J., 2010, SIGSOFT FSE, P377, DOI DOI 10.1145/1882291
   DeAntoni J, 2012, LECT NOTES COMPUT SC, V7304, P34, DOI 10.1007/978-3-642-30561-0_4
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   France R, 2007, IEEE INT ENTERP DIST, P253, DOI 10.1109/EDOC.2007.55
   GAMMA E, 1995, DESIGN PATTERNS
   Garces K., 2011, SEAA 2011
   Gefei Zhang, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P104
   Goknil A., 2013, ICECCS 2013
   Holzl M, 2010, MODELING CAR CRASH C, P234
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Klein Jacques., 2006, AOSD, P27
   Kramer Max E., 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P108, DOI 10.1007/978-3-642-38883-5_12
   Larsen M. E. Vara, 2015, INT C MOD DRIV ENG L
   Larsen M. V., 2013, GEMOC WORKSH 2013 IN
   Latombe F., 2015, P ACM SIGPLAN INT C, P125, DOI DOI 10.1145/2814251.2814261
   Lee EA, 1996, TAGGED SIGNAL MODEL, P96
   Mallet F, 2010, INNOV SYST SOFTW ENG, V6, P99, DOI 10.1007/s11334-009-0109-0
   McNeile A., 2006, SOFTWARE SYSTEM MODE, V5, P91
   Mosser S, 2010, LECT NOTES COMPUT SC, V6210, P200
   Mussbacher G., 2010, THESIS
   Mussbacher G., 2013, ASPECT ORIENTED REQU
   Mussbacher G., 2012, WORKSH CMA 12
   Nejati S., 2007, ICSE
   Nielsen M., 1979, LNCS, V70
   Object Management Group, 2015, UN MOD LANG V2 5 0
   OMG, 2010, UML INFR SPEC V2 4
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Winskel G., 1987, ADV PETRI NETS 198 2
NR 42
TC 13
Z9 13
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3005
EP 3023
DI 10.1007/s10270-018-00707-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500009
DA 2024-07-18
ER

PT J
AU Tekinerdogan, B
   Arkin, E
AF Tekinerdogan, Bedir
   Arkin, Ethem
TI ParDSL: a domain-specific language framework for supporting deployment
   of parallel algorithms
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven software development; Parallel programming;
   High-performance computing; Domain-specific language; Architecture
   framework
ID CODE GENERATION
AB An important challenge in parallel computing is the mapping of parallel algorithms to parallel computing platforms. This requires several activities such as the analysis of the parallel algorithm, the definition of the logical configuration of the platform and the implementation and deployment of the algorithm to the computing platform. However, in current parallel computing approaches very often only conceptual and idiosyncratic models are used which fall short in supporting the communication and analysis of the design decisions. In this article, we present ParDSL, a domain-specific language framework for providing explicit models to support the activities for mapping parallel algorithms to parallel computing platforms. The language framework includes four coherent set of domain-specific languages each of which focuses on an activity of the mapping process. We use the domain-specific languages for modeling the design as well as for generating the required platform-specific models and the code of the selected parallel algorithm. In addition to the languages, a library is defined to support systematic reuse. We discuss the overall architecture of the language framework, the separate DSLs, the corresponding model transformations and the toolset. The framework is illustrated for four different parallel computing algorithms.
C1 [Tekinerdogan, Bedir] Wageningen Univ, Informat Technol, Wageningen, Netherlands.
   [Arkin, Ethem] Aselsan, Ankara, Turkey.
C3 Wageningen University & Research; Aselsan
RP Tekinerdogan, B (corresponding author), Wageningen Univ, Informat Technol, Wageningen, Netherlands.
EM bedir.tekinerdogan@wur.nl; earkin@aselsan.com.tr
RI Tekinerdogan, Bedir/K-3639-2019
OI Tekinerdogan, Bedir/0000-0002-8538-7261
CR Aizcorbe A, 2005, SCAND J ECON, V107, P603, DOI 10.1111/j.1467-9442.2005.00429.x
   [Anonymous], 2011, 420102007 ISOIEC
   [Anonymous], 2008, EXASCALE COMPUTING S
   [Anonymous], 2011, P INT C HIGH PERF CO
   [Anonymous], 1967, AFIPS, DOI 10.1145/1465482.1465560
   Arkin E, 2016, CONCURR COMP-PRACT E, V29, P21
   ARKIN E, 2013, P ACM IEEE 16 INT C
   Arkin E, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P40
   Arora R, 2012, J SUPERCOMPUT, V59, P1079, DOI 10.1007/s11227-010-0490-3
   Arrango G, 1994, DOMAIN ANAL METHODS, P17
   Baklouti M, 2011, P IEEE RAP SYST PROT, P149, DOI 10.1109/RSP.2011.5929989
   Baransel C, 2012, J SUPERCOMPUT, V62, P486, DOI 10.1007/s11227-011-0730-1
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Casanova H, 2014, J PARALLEL DISTR COM, V74, P2899, DOI 10.1016/j.jpdc.2014.06.008
   Challenger M, 2016, SOFTWARE QUAL J, V24, P755, DOI 10.1007/s11219-015-9291-5
   Elhaji M, 2012, DES AUTOM EMBED SYST, V16, P161, DOI 10.1007/s10617-012-9101-2
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fahringer T, 2004, LECT NOTES COMPUT SC, V3038, P456
   Fowler M., 2010, Domain-specific languages
   Fowler M., 1999, UML distilled, object oriented series
   Franchetti F, 2009, IEEE SIGNAL PROC MAG, V26, P90, DOI 10.1109/MSP.2009.934155
   Frank MP, 2002, COMPUT SCI ENG, V4, P16, DOI 10.1109/5992.998637
   Gamatié A, 2011, ACM T EMBED COMPUT S, V10, DOI 10.1145/2043662.2043663
   GUSTAFSON JL, 1988, COMMUN ACM, V31, P532, DOI 10.1145/42411.42415
   Hernandez F., 2005, Proceedings of the Second International Workshop on Software Engineering for High Performance Computing System Applications, P50
   Imre KM, 2011, INT J PARALLEL PROG, V39, P746, DOI 10.1007/s10766-011-0169-2
   Jacob F, 2012, J SUPERCOMPUT, V62, P1560, DOI 10.1007/s11227-012-0821-7
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kleppe AnnekeG., 2009, SOFTWARE LANGUAGE EN
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Moore GE, 1998, P IEEE, V86, P82, DOI 10.1109/JPROC.1998.658762
   Oliveira N., 2009, P 3 COMPILERS PROGRA, P35
   Palyart M., 2011, P 15 INT C INT SYST
   Palyart M., 2012, P 1 INT WORKSH MOD D, P6
   Pazel D. P., 2006, SOFTVIS 06, P169
   Pllana S, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P497, DOI 10.1109/WSC.2002.1172922
   Prasad G, 2004, P SOC PHOTO-OPT INS, V5423, P264, DOI 10.1117/12.542285
   Püschel M, 2005, P IEEE, V93, P232, DOI 10.1109/JPROC.2004.840306
   Rodrigues AWO, 2013, COMPUT SCI ENG, V15, P46, DOI 10.1109/MCSE.2012.35
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   TALIA D, 2001, PARALLEL ALGORITHMS, V0016, P00145
   Tekinerdogan B., 2013, P 9 INT ACM SIGS C Q, P89
   Tekinerdogan B, 2005, INTEGRATING PLATFORM, P159
   Tekinerdogan B, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P185
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wang Mengmeng, 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P623, DOI 10.1109/CloudCom.2011.96
   Xu Zhen, 2009, 2009 WRI World Congress on Computer Science and Information Engineering, CSIE, P479, DOI 10.1109/CSIE.2009.806
   Yu HF, 2008, INNOV SYST SOFTW ENG, V4, P215, DOI 10.1007/s11334-008-0059-y
   [No title captured]
NR 53
TC 8
Z9 8
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2907
EP 2935
DI 10.1007/s10270-018-00705-w
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500006
OA hybrid
DA 2024-07-18
ER

PT J
AU Nassour, J
   Elhadad, M
   Sturm, A
   Yu, E
AF Nassour, Jumana
   Elhadad, Michael
   Sturm, Arnon
   Yu, Eric
TI Evaluating the comprehension of means-ends maps
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Knowledge mapping; Literature review; ME-MAP; Evaluation; Controlled
   experiment
ID KNOWLEDGE; DESIGN
AB Information and software systems development is rapidly changing due to exponential technology development. This acceleration is also impacting other technology or engineering domains. Thus, there is a need to identify problems and their solutions, and to reason about new options so as to better arrive at the right decision of which technology or solution should be adopted among various alternatives. In this paper, we argue that such know-how information can be mapped, to ease such tasks. In particular, we examine the hypothesis that know-how mapping, using an approach we call Means-Ends Map (ME-MAP), facilitates analysis in technological domains. We design a controlled experiment to assess the comprehension of ME maps with that of textual summaries in two different domains. We find that subjects exploring a domain using ME maps were able to better identify solutions and better understand the tradeoffs among alternative solutions. Furthermore, these subjects gained that understanding faster compared to those using textual summaries.
C1 [Nassour, Jumana; Elhadad, Michael; Sturm, Arnon] Ben Gurion Univ Negev, Beer Sheva, Israel.
   [Sturm, Arnon; Yu, Eric] Univ Toronto, Toronto, ON, Canada.
C3 Ben Gurion University; University of Toronto
RP Nassour, J (corresponding author), Ben Gurion Univ Negev, Beer Sheva, Israel.
EM jumanan@post.bgu.ac.il; elhadad@cs.bgu.ac.il; sturm@bgu.ac.il;
   eric.yu@utoronto.ca
RI STURM, ARNON/F-1510-2012; ELHADAD, MICHAEL/AIB-3614-2022
OI STURM, ARNON/0000-0002-4021-7752; ELHADAD, MICHAEL/0000-0002-5629-2351
FU Israel Science Foundation [495/14]; Natural Sciences and Engineering
   Research Council of Canada
FX This research is partially supported by the Israel Science Foundation
   (Grant No. 495/14) and the Natural Sciences and Engineering Research
   Council of Canada
CR [Anonymous], 2006, THEORY UNDERLYING CO
   [Anonymous], 1992, Encyclopedia of artificial intelligence
   Balaid A, 2016, INT J INFORM MANAGE, V36, P451, DOI 10.1016/j.ijinfomgt.2016.02.005
   Bracewell R, 2009, COMPUT AIDED DESIGN, V41, P173, DOI 10.1016/j.cad.2008.10.005
   Budd JW, 2004, J ECON EDUC, V35, P35, DOI 10.3200/JECE.35.1.35-46
   Carvalho M.R., 2001, 5 MULTICONFERENCE SY, P69
   Chmielewski TL, 1998, J EDUC PSYCHOL, V90, P407, DOI 10.1037/0022-0663.90.3.407
   EDEN C, 1992, J MANAGE STUD, V29, P309, DOI 10.1111/j.1467-6486.1992.tb00667.x
   Eric S., 2011, Social modeling for requirements engineering
   Falke T.G.I., 2017, C EMPIRICAL METHODS, P19
   Garud R., 1997, ADV STRATEG MANAG, P81
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   GENGLER CE, 1995, J ADVERTISING RES, V35, P19
   Greenstein LM, 2013, ASSESSING 21 CENTURY
   Gross D., 2013, ISTAR, P115
   Keller T, 2005, LECT NOTES COMPUT SC, V3426, P1
   Khwaja S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2926966
   Kremer R, 1998, P 11 BANFF KNOWL ACQ
   Kwasnik BH, 1999, LIBR TRENDS, V48, P22
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Maraee A, 2017, INT CONF RES CHAL, P234, DOI 10.1109/RCIS.2017.7956542
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nassour J., 2018, 7 INT WORKSH MIN SCI
   Sarewitz D., 2008, Innovations: Technology / Governance / Globalisation, V3, P101, DOI 10.1162/itgg.2008.3.1.101
   Shum S. B., 2000, International Journal on Digital Libraries, V3, P237, DOI 10.1007/s007990000034
   SOWA JF, 1976, IBM J RES DEV, V20, P336, DOI 10.1147/rd.204.0336
   Sturm A., 2017, BPMDS EMMSAD CAISE20, P272
   Sturm A., 2014, FOR C ADV INF SYST E, P102
   Sturm A, 2017, J KNOWL MANAG, V21, P454, DOI 10.1108/JKM-04-2016-0173
   Uren V, 2006, INT J HUM-COMPUT ST, V64, P420, DOI 10.1016/j.ijhcs.2005.09.004
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Wohlin C., 2012, Experimentation in Software Engineering
   Yadollahi A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057270
NR 35
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1885
EP 1903
DI 10.1007/s10270-018-0691-4
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HZ6XP
UT WOS:000468996100018
DA 2024-07-18
ER

PT J
AU Ivanchikj, A
   Pautasso, C
   Schreier, S
AF Ivanchikj, Ana
   Pautasso, Cesare
   Schreier, Silvia
TI Visual modeling of RESTful conversations with RESTalk
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE RESTful Web services; Conversations; BPMN Choreography; Modeling
   notation extension; Exploratory study; Domain-specific language;
   Questionnaire; RESTalk
ID QUALITY
AB The cost savings introduced by Web services through code reuse and integration opportunities have motivated many businesses to develop Web APIs, with ever increasing numbers opting for the REST architectural style. RESTful Web APIs are decomposed in multiple resources, which the client can manipulate through HTTP interactions with well-defined semantics. Getting the resource in the desired state might require multiple client-server interactions, what we define as a RESTful conversation. RESTful conversations are dynamically guided by hypermedia controls, such as links. Thus, when deciding whether and how to use a given RESTful service, the client might not be aware of all the interactions which are necessary to achieve its goal. This is because existing documentation of RESTful APIs describes the static structure of the interface, exposing low-level HTTP details, while little attention has been paid to conceptual, high-level, modeling of the dynamics of RESTful conversations. Low-level HTTP details can be abstracted from during the design phase of the API, or when deciding which API to use. We argue that, in these situations, visual models of the required client-server interactions might increase developers' efficiency and facilitate their understanding. Thus, to capture all possible interaction sequences in a given RESTful conversation, we propose RESTalk, an extension to the BPMN Choreography diagrams to render them more concise and yet sufficiently expressive in the specific REST domain. We also report on the results obtained from an exploratory survey we have conducted to assess the maturity of the field for a domain-specific language and to obtain feedback for future improvements of RESTalk.
C1 [Ivanchikj, Ana; Pautasso, Cesare] USI, Fac Informat, Lugano, Switzerland.
   [Schreier, Silvia] InnoQ Deutschland GmbH, Monheim, Germany.
C3 Universita della Svizzera Italiana
RP Ivanchikj, A (corresponding author), USI, Fac Informat, Lugano, Switzerland.
EM ana.ivanchikj@usi.ch
OI Pautasso, Cesare/0000-0002-2748-9665
CR Alarcon R., 2010, 3 WORKSH LINK DAT WE
   Amundsen Mike., 2011, Building Hypermedia APIs with HTML5 and Node: Creating Evolvable Hypermedia Applications
   [Anonymous], 2013, REMOTING PATTERNS FD
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2010, BPMN 2 0 INTRO STAND
   Barros A, 2005, LECT NOTES COMPUT SC, V3649, P302, DOI 10.1007/11538394_20
   Benatallah B, 2004, IEEE INTERNET COMPUT, V8, P46, DOI 10.1109/MIC.2004.1260703
   Cortes-Cornax M, 2011, LECT NOTES BUS INF P, V95, P103
   Daniel F, 2014, DATA CENTRIC SYST AP, DOI 10.1007/978-3-642-55049-2
   Decker G, 2008, LECT NOTES COMPUT SC, V4928, P208
   Fielding R., 2014, RFC 7231
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Goteti H., 2015, API DRIVEN DEV BRIDG
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gregorio J., 2012, Technical report
   Haupt F., 2015, P 12 WICSA 2015 MONT
   Haupt F, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P129, DOI 10.1109/ICWS.2014.30
   Hickson Ian., 2014, HTML5: A vocabulary and associated apis for html and xhtml
   Hohpe G, 2007, IEEE INTERNET COMPUT, V11, P78, DOI 10.1109/MIC.2007.68
   Ivanchikj A, 2016, LECT NOTES COMPUT SC, V9671, P583, DOI 10.1007/978-3-319-38791-8_53
   Jensen K., 2013, Coloured Petri Nets: Basic Concepts, Analysis Methods andPractical Use, V1
   Jordan D., 2011, BUS PROC MOD NOT BPM
   Li L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P631, DOI 10.1109/ICWS.2015.89
   Li Li, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P508, DOI 10.1109/ICWS.2011.54
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Masse M., 2011, REST API Design Rulebook: Designing Consistent RESTfulWeb Service Interface
   Mitra R, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1509, DOI 10.1145/2740908.2743040
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Newman S., 2015, BUILDING MICROSERVIC
   Nikaj A., 2015, 11 INT WORKSH ENG SE, P3
   Nikaj A, 2016, LECT NOTES COMPUT SC, V9671, P365, DOI 10.1007/978-3-319-38791-8_21
   Nottingham M., 2010, WEB LINKING
   Pautasso C, 2015, LECT NOTES COMPUT SC, V9278, P87, DOI 10.1007/978-3-319-23727-5_7
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Rauf I., 2014, THESIS
   Richardson Leonard, 2013, Restful web APIs
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Robinson S., 2010, Conceptual Modeling for Discrete-Event Simulation
   Schermann G., 2015, ALL SERVICES LARGE M
   Schreier S., 2011, Proceedings of the Second International Workshop on RESTful Design, P15, DOI [DOI 10.1145/1967428, 10.1145/1967428]
   Steiner T., 2011, Proceedings of the Second International Workshop on RESTful Design, WS-REST '11, New York, NY, USA, P11
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   van Porten O., 2012, THESIS
   Verborgh R, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P1399
   Wohlin C., 2012, Experimentation in Software Engineering
   Zaha JM, 2006, LECT NOTES COMPUT SC, V4275, P145
   Zuzak I, 2011, J WEB ENG, V10, P353
NR 49
TC 7
Z9 7
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 1031
EP 1051
DI 10.1007/s10270-016-0532-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ7YK
UT WOS:000435606000013
DA 2024-07-18
ER

PT J
AU Haisjackl, C
   Soffer, P
   Lim, SY
   Weber, B
AF Haisjackl, Cornelia
   Soffer, Pnina
   Lim, Shao Yi
   Weber, Barbara
TI How do humans inspect BPMN models: an exploratory study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process model quality; Process model maintainability; Empirical
   research; Human-centered support
ID BUSINESS PROCESS VERIFICATION
AB Even though considerable progress regarding the technical perspective on modeling and supporting business processes has been achieved, it appears that the human perspective is still often left aside. In particular, we do not have an in-depth understanding of how process models are inspected by humans, what strategies are taken, what challenges arise, and what cognitive processes are involved. This paper contributes toward such an understanding and reports an exploratory study investigating how humans identify and classify quality issues in BPMN process models. Providing preliminary answers to initial research questions, we also indicate other research questions that can be investigated using this approach. Our qualitative analysis shows that humans adapt different strategies on how to identify quality issues. In addition, we observed several challenges appearing when humans inspect process models. Finally, we present different manners in which classification of quality issues was addressed.
C1 [Haisjackl, Cornelia; Lim, Shao Yi] Univ Innsbruck, Innsbruck, Austria.
   [Weber, Barbara] Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
   [Weber, Barbara] Univ Innsbruck, Res Cluster Business Proc & Workflows, Innsbruck, Austria.
   [Soffer, Pnina] Univ Haifa, Dept Informat Syst, Haifa, Israel.
   [Weber, Barbara] Tech Univ Denmark, Software Engn, Kongens Lyngby, Denmark.
C3 University of Innsbruck; University of Innsbruck; University of
   Innsbruck; University of Haifa; Technical University of Denmark
RP Haisjackl, C (corresponding author), Univ Innsbruck, Innsbruck, Austria.
EM cornelia.haisjackl@uibk.ac.at; spnina@is.haifa.ac.il;
   shao.lim@student.uibk.ac.at; barbara.weber@uibk.ac.at
RI soffer, pnina/P-8893-2019
OI Weber, Barbara/0000-0002-6004-4860
FU University of Innsbruck; Medical University of Innsbruck; Austrian
   Science Fund (FWF) [P26140] Funding Source: Austrian Science Fund (FWF)
FX Open access funding provided by University of Innsbruck and Medical
   University of Innsbruck.
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2012, Model-based development and evolution of information systems a quality approach
   Arlow J, 1999, LECT NOTES COMPUT SC, V1618, P189
   Bassey M., 1999, CASE STUDY RES ED SE
   Beck Kent L., 2003, Test Driven Development By Example
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   Bernstein V, 2015, LECT NOTES BUS INF P, V215, P81, DOI 10.1007/978-3-319-19243-7_7
   BRANSFORD JD, 1972, J VERB LEARN VERB BE, V11, P717, DOI 10.1016/S0022-5371(72)80006-9
   Chandler P., 1991, COGNITION INSTRUCT, P292
   Costain G.F., 2007, THESIS U AUCKLAND
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dumas M, 2013, INFORM SYST, V38, P619, DOI 10.1016/j.is.2012.07.002
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Fahland D, 2009, LECT NOTES COMPUT SC, V5701, P278, DOI 10.1007/978-3-642-03848-8_19
   Gemino A, 2003, COMMUN ACM, V46, P79, DOI 10.1145/944217.944243
   Gschwind T., 2012, RZ3830 IBM RES
   Haisjackl C., 2015, LNBIP, V214, P217
   Heggset M., 2015, CAISE FORUM, P89
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   JOHNSON GI, 1989, APPL ERGON, V20, P255, DOI 10.1016/0003-6870(89)90187-7
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Koehler J., 2007, TECHNICAL REPORT
   Kühne S, 2010, J SOFTW MAINT EVOL-R, V22, P547, DOI 10.1002/smr.517
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   NIELSEN J, 1994, INT J HUM-COMPUT ST, V41, P385, DOI 10.1006/ijhc.1994.1065
   Paas F, 2003, EDUC PSYCHOL, V38, P1, DOI 10.1207/S15326985EP3801_1
   Parsons J, 2008, MIS QUART, V32, P839
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Purchase H., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P248, DOI 10.1007/3-540-63938-1_67
   Recker J.C., 2007, P 18 AUSTR C INF SYS, P356
   Recker J, 2007, AUSTRALAS J INF SYST, V14, P43
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Rittgen P., 2010, Proceedings of the ACM Symposium on Applied Computing, P65, DOI DOI 10.1145/1774088.1774105
   Rosa M. L., 2010, IEEE T IND INFORM, V7, P255
   Roy S, 2014, IEEE T SERV COMPUT, V7, P140, DOI 10.1109/TSC.2013.10
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   SCHOENFELD AH, 1982, J EXP PSYCHOL LEARN, V8, P484, DOI 10.1037/0278-7393.8.5.484
   Schrepfer M, 2009, LECT NOTES BUS INF P, V39, P161
   Smirnov S, 2012, INFORM SYST, V37, P784, DOI 10.1016/j.is.2012.05.007
   Snoeck M, 2015, LECT NOTES BUS INF P, V235, P111, DOI 10.1007/978-3-319-25897-3_8
   Soffer P., 2012, LNBIP, V99, P357
   Soffer P, 2015, J ASSOC INF SYST, V16, P345, DOI 10.17705/1jais.00396
   Soffer P, 2011, J DATABASE MANAGE, V22, P1, DOI 10.4018/jdm.2011070101
   Trcka N, 2009, LECT NOTES COMPUT SC, V5565, P425, DOI 10.1007/978-3-642-02144-2_34
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P483, DOI 10.1007/978-3-642-13094-6_37
   Wynn MT, 2009, BUS PROCESS MANAG J, V15, P74, DOI 10.1108/14637150910931479
   Zugal S, 2011, P EESSMOD 11, P123
   Zugal S., 2013, SOFTWARE SYSTEMS MOD, P1
   Zugal S, 2013, INT J INF SYST MODEL, V4, P23, DOI 10.4018/jismd.2013040102
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 64
TC 20
Z9 22
U1 3
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 655
EP 673
DI 10.1007/s10270-016-0563-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD5LK
UT WOS:000430548300015
PM 29706861
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Bae, JH
   Chae, HS
AF Bae, Jung Ho
   Chae, Heung Seok
TI Systematic approach for constructing an understandable state machine
   from a contract-based specification: controlled experiments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Systematic construction; Reverse engineering; Design by contract; State
   machine; Understandability; Technology-oriented controlled experiment;
   Human-oriented controlled experiment
ID OBJECT-Z; MAINTAINABILITY
AB Contract-based specifications using OCL or JML are employed widely to describe the behaviors of systems. However, complex behaviors might not be understood using these specifications because they focus on each individual method instead of the relationships between them. State machines (SMs) can be used to model the dynamic behavior including acceptable event sequences. However, the manual construction of SMs is a time-consuming and error-prone task. Many studies have aimed to construct SMs from contract-based specifications. However, existing SM construction approaches are not concerned with certain qualities of the SMs, such as understandability. In this study, we aimed to develop a combined atomic condition-based approach for constructing highly understandable SMs from formal specifications. We conducted two controlled experiments to evaluate the understandability of the SMs constructed: technology-oriented and human-oriented evaluations. Two existing SM construction approaches, i.e., condition-partitioning-based approach and experience-based approach, were used as the controls in the two experiments, for comparison with the proposed approach. In the technology-oriented experiment, 36 SMs were constructed from 12 specifications using the three approaches. A paired-samples Wilcoxon's signed-rank test was used to test the differences in the values of a SM understandability metric based on cohesion and coupling metrics. In the human-oriented experiment, we used 15 of the 36 SMs and the differences between the understandability correctness (the number of correct answers/the number of answered questions) measured by 23 participants were tested using an independent t test. The results of the two experiments showed that the understandability of SMs constructed using the proposed approach was significantly better than that of SMs constructed using the two control approaches (). The proposed approach does not support advanced features such as the containers of contract-based specifications and the hierarchy/concurrency of SMs.
C1 [Bae, Jung Ho] Agcy Def Dev, Busan, South Korea.
   [Chae, Heung Seok] Pusan Natl Univ, Dept Comp Sci & Engn, Busan, South Korea.
C3 Agency of Defense Development (ADD), Republic of Korea; Pusan National
   University
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Comp Sci & Engn, Busan, South Korea.
EM jhbae@add.re.kr; hschae@pusan.ac.kr
OI , Heung-Seok/0000-0002-6644-9500
FU National Research Foundation of Korea (NRF) - Korea government (MEST)
   [NRF-2012R1A2A2A01015660]
FX This work was supported by the National Research Foundation of Korea
   (NRF) grant funded by the Korea government (MEST) (No.
   NRF-2012R1A2A2A01015660).
CR Ali S, 2014, SOFTW SYST MODEL, V13, P1189, DOI 10.1007/s10270-012-0293-5
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 2012, EXPERIMENTATION SOFT
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 2001, STAT INFERENCE
   Cruz-Lemus JA, 2005, METRICS FOR SOFTWARE CONCEPTUAL MODELS, P237, DOI 10.1142/9781860946066_0007
   Antoniol G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/ISSRE.2002.1173268
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BACK RJR, 1988, ACTA INFORM, V25, P593, DOI 10.1007/BF00291051
   Bae JH, 2011, P INT COMP SOFTW APP, P383, DOI 10.1109/COMPSAC.2011.57
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Beckert B., 1998, THE KEY APPROACH
   Binder R.V., 2000, AW OBJ TECHNOL S
   Briand LC, 2003, LECT NOTES COMPUT SC, V2863, P249
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Canonical Ltd, 2010, UB MAN PYLINT
   Carrington D, 2000, SOFTW TEST VERIF REL, V10, P111, DOI 10.1002/1099-1689(200006)10:2<111::AID-STVR204>3.0.CO;2-P
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chan E., 1995, Proceedings of the Twenty-Seventh Southeastern Symposium on System Theory, P206, DOI 10.1109/SSST.1995.390583
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   David A, 2002, LECT NOTES COMPUT SC, V2306, P218
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Derrick J, 2008, LECT NOTES COMPUT SC, V5238, P280
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   DUKE R, 1995, COMP STAND INTER, V17, P511, DOI 10.1016/0920-5489(95)00024-O
   Eichelberger H, 2009, INFORM SOFTWARE TECH, V51, P1686, DOI 10.1016/j.infsof.2009.04.008
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Endres A., 1975, SIGPLAN Notices, V10, P327, DOI 10.1145/390016.808455
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Grunske L, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P91, DOI 10.1007/3-540-28554-7_5
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jung Ho Bae, 2009, 2009 16th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2009), P323, DOI 10.1109/ECBS.2009.36
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kohler H. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P241, DOI 10.1109/ICSE.2000.870415
   Kuske S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P11
   Leavens G.T., 1998, P INT WORKSH FORM UN
   Lei S, 2003, IEEE T SOFTWARE ENG, V29, P996, DOI 10.1109/TSE.2003.1245301
   Liang Hu, 2006, Proceedings 2006 10th International Conference on Computer Supported Cooperative Work in Design (IEEE Cat. No. 06EX1292), DOI 10.1145/1138953.1138956
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Maoz Shahar, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P335, DOI 10.1007/978-3-642-33666-9_22
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B., 1992, Eiffel: The Language
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Murray L, 1998, LECT NOTES COMPUT SC, V1493, P42, DOI 10.1007/BFb0056024
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Preibusch S, 2008, LECT NOTES COMPUT SC, V4916, P38
   Ruhroth T, 2009, LECT NOTES COMPUT SC, V5885, P620, DOI 10.1007/978-3-642-10373-5_32
   Scandurra Patrizia, 2012, P 27 ANN ACM S APPL, P1063
   Smith G., 1997, P FME 97 IND BEN FOR
   Stoddart B, 1998, LECT NOTES COMPUT SC, V1493, P24, DOI 10.1007/BFb0056023
   Sun J, 2005, IEEE INT C ENG COMP, P96
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Walkinshaw N, 2008, SOFTW TEST VERIF REL, V18, P99, DOI 10.1002/stvr.380
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Winkelmann J., 2006, P INT WORKSH GRAPH T, P159
   Yue T, 2011, LECT NOTES COMPUT SC, V6698, P115, DOI 10.1007/978-3-642-21470-7_9
   Zimmerman MK, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P33, DOI 10.1109/ICSE.2002.1007954
NR 67
TC 3
Z9 3
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 847
EP 879
DI 10.1007/s10270-014-0440-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600011
DA 2024-07-18
ER

PT J
AU Bak, K
   Diskin, Z
   Antkiewicz, M
   Czarnecki, K
   Wasowski, A
AF Bak, Kacper
   Diskin, Zinovy
   Antkiewicz, Michal
   Czarnecki, Krzysztof
   Wasowski, Andrzej
TI Clafer: unifying class and feature modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language design; Feature modeling; OOM; Semantics; Unification
ID SPECIFICATION; VARIABILITY; SOFTWARE; UML
AB We present Clafer (class, feature, reference), a class modeling language with first-class support for feature modeling. We designed Clafer as a concise notation for meta-models, feature models, mixtures of meta- and feature models (such as components with options), and models that couple feature models and meta-models via constraints (such as mapping feature configurations to component configurations or model templates). Clafer allows arranging models into multiple specialization and extension layers via constraints and inheritance. We identify several key mechanisms allowing a meta-modeling language to express feature models concisely. Clafer unifies basic modeling constructs, such as class, association, and property, into a single construct, called clafer. We provide the language with a formal semantics built in a structurally explicit way. The resulting semantics explains the meaning of hierarchical models whereby properties can be arbitrarily nested in the presence of inheritance and feature modeling constructs. The semantics also enables building consistent automated reasoning support for the language: To date, we implemented three reasoners for Clafer based on Alloy, Z3 SMT, and Choco3 CSP solvers. We show that Clafer meets its design objectives using examples and by comparing to other languages.
C1 [Bak, Kacper; Diskin, Zinovy; Antkiewicz, Michal; Czarnecki, Krzysztof] Univ Waterloo, GSD Lab, Waterloo, ON, Canada.
   [Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
C3 University of Waterloo; IT University Copenhagen
RP Bak, K (corresponding author), Univ Waterloo, GSD Lab, Waterloo, ON, Canada.
EM kbak@gsd.uwaterloo.ca; zdiskin@gsd.uwaterloo.ca;
   mantkiew@gsd.uwaterloo.ca; kczarnec@gsd.uwaterloo.ca; wasowski@itu.dk
OI Wasowski, Andrzej/0000-0003-0532-2685
CR Anastasakis K., 2007, MODEL DRIVEN ENG LAN
   [Anonymous], 1993, SPC92019CMC
   [Anonymous], 1988, INTRO HIGHER ORDER C
   [Anonymous], 2011, OMG Meta Object Facility (MOF) Core Specification Version 2.4.1
   [Anonymous], 2014, OMG OMG OBJECT CONST
   [Anonymous], 2012, P 6 INT WORKSH VAR M
   [Anonymous], 2005, INT WORKSH SOFTW FAC
   Antkiewicz M., 2013, 1 INT WORKSH MOD DRI
   Antkiewicz M., 2013, P 17 INT SOFTW PROD
   Antkiewicz M., 2009, SOFTW ENG IEEE T, V35, P521
   Asikainen T., 2006, SOFTW PROD LIN C 10
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Astels D., 2002, P 3 INT C EXTR PROGR
   Bak K., 2013, NEW ID EM RES NIER T
   Bak K., 2013, SOFTW LANG ENG
   Bak K., 2010, P 3 INT C SOFTW LANG, P102
   Barr Michael., 1990, Category theory for computing science, V10
   Berger T., 2013, P 7 INT WORKSH VAR M
   Berger T., 2010, P IEEE ACM INT C AUT
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Clauss M., 2001, YOUNG RES WORKSH GCS
   Consortium A., 2013, EAST ADL DOM MOD SPE
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2005, SOFTW PROCESS IMPROV, V10, P331
   Czarnecki K., 2006, SOFTW PROD LIN C 10
   CZARNECKI K, 2006, P 5 INT C GEN PROGR
   Czarnecki K, 2012, VAMOS
   Dahchour M, 2005, LECT NOTES COMPUT SC, V3730, P1
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Diskin Z, 2002, LECT NOTES ARTIF INT, V2317, P112
   Diskin Z, 2003, DATA KNOWL ENG, V47, P1, DOI 10.1016/S0169-023X(03)00047-8
   Diskin Z, 2000, LECT NOTES ARTIF INT, V1889, P345
   Diskin Z., 2008, OBJECTS COMPONENTS M
   Diskin Z., 1995, OBJECT ORIENTED ENTI
   Felfernig A, 2000, INT J SOFTW ENG KNOW, V10, P449, DOI 10.1142/S0218194000000249
   Gaeta J.A.P, 2014, THESIS
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Group O.M., 2012, SYSTEMS MODELING LAN
   Heidenreich F., 2008, COMP 30 INT C SOFTW
   Hubaux A., 2010, SOFTW LANG ENG
   IBM, 2012, TCS PROP COMM VAR LA
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2011, Software Abstractions: Logic, Language, and Anlysis
   Janota M, 2008, LECT NOTES COMPUT SC, V4961, P31, DOI 10.1007/978-3-540-78743-3_3
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Jussien Narendra, 2008, CPAIOR 08 WORKSH OP
   Kang K.C., 2010, P 4 INT WORKSH VAR M
   Kang Kyo C, 1990, Technical Report
   Liang J., 2012, 20120430 GSDLABTR
   Liang J., 2012, 20121230 GSDLABTR
   Michel R., 2011, P 5 WORKSH VAR MOD S
   Murashkin A, 2014, THESIS
   Murashkin Alexandr, 2013, SPLC
   Olaechea R., 2012, P 4 INT WORK NONFUNC
   Partnership A.D., 2013, AUTOMOTIVE OPEN SYST
   Partnership A.D., 2013, FEATURE MODEL EXCHAN
   Reiser M.O., 2007, P 1 INT WORKSH VAR M
   Rossini A, 2010, J LOGIC ALGEBR PROGR, V79, P636, DOI 10.1016/j.jlap.2009.10.003
   Rutle A, 2012, J LOGIC ALGEBR PROGR, V81, P422, DOI 10.1016/j.jlap.2012.03.006
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Stephan M., 2008, ECORE FMP TOOL EDITI
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
NR 65
TC 57
Z9 61
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 811
EP 845
DI 10.1007/s10270-014-0441-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600010
DA 2024-07-18
ER

PT J
AU Macedo, N
   Cunha, A
AF Macedo, Nuno
   Cunha, Alcino
TI Least-change bidirectional model transformation with QVT-R and ATL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Bidirectional transformation; Least-change
   principle; QVT-R; ATL; Alloy
AB QVT Relations (QVT-R) is the standard language proposed by the OMG to specify bidirectional model transformations. Unfortunately, in part due to ambiguities and omissions in the original semantics, acceptance and development of effective tool support have been slow. Recently, the checking semantics of QVT-R has been clarified and formalized. In this article, we propose a QVT-R tool that complies to such semantics. Unlike any other existing tool, it also supports meta-models enriched with OCL constraints (thus avoiding returning ill-formed models) and proposes an alternative enforcement semantics that works according to the simple and predictable "principle of least change." The implementation is based on an embedding of both QVT-R transformations and UML class diagrams (annotated with OCL) in Alloy, a lightweight formal specification language with support for automatic model finding via SAT solving. We also show how this technique can be applied to bidirectionalize ATL, a popular (but unidirectional) model transformation language.
C1 [Macedo, Nuno; Cunha, Alcino] INESC TEC, HASLab, Braga, Portugal.
   [Macedo, Nuno; Cunha, Alcino] Univ Minho, High Assurance Software Lab, Braga, Portugal.
   [Cunha, Alcino] Univ Minho, Braga, Portugal.
C3 INESC TEC; Universidade do Minho; Universidade do Minho
RP Macedo, N (corresponding author), INESC TEC, HASLab, Braga, Portugal.; Macedo, N (corresponding author), Univ Minho, High Assurance Software Lab, Braga, Portugal.
EM nfmmacedo@di.uminho.pt; alcino@di.uminho.pt
RI Macedo, Nuno/A-1539-2013; Cunha, Alcino/I-4104-2015
OI Macedo, Nuno/0000-0002-4817-948X; Cunha, Alcino/0000-0002-2714-8027
FU ERDF-European Regional Development Fund through COMPETE Programme;
   national funds through FCT-Fundacao para a Ciencia e a Tecnologia
   (Portuguese Foundation for Science and Technology)
   [FCOMP-01-0124-FEDER-020532]; FCT [SFRH/BD/69585/2010]; Fundação para a
   Ciência e a Tecnologia [SFRH/BD/69585/2010] Funding Source: FCT
FX This work is funded by ERDF-European Regional Development Fund through
   the COMPETE Programme (operational programme for competitiveness) and by
   national funds through the FCT-Fundacao para a Ciencia e a Tecnologia
   (Portuguese Foundation for Science and Technology) within project
   FCOMP-01-0124-FEDER-020532. The first author is also sponsored by FCT
   grant SFRH/BD/69585/2010. The authors would also like to thank all
   anonymous reviewers for the valuable comments and suggestions.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], SOFTWARE SYSTEMS MOD
   [Anonymous], 2014, EDBT ICDT 2014
   [Anonymous], THESIS
   ATLAS group, ATL US GUID
   Boronat A., 2006, LNCS, V3922
   Bradfield J, 2013, LECT NOTES COMPUT SC, V7793, P282, DOI 10.1007/978-3-642-37057-1_21
   Bradfield J, 2012, LECT NOTES COMPUT SC, V7212, P194, DOI 10.1007/978-3-642-28872-2_14
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Cunha A., 2013, SOFTWARE SYSTEMS MOD, P1
   Cunha A, 2014, LECT NOTES COMPUT SC, V8411, P17
   de Lara J, 2009, LECT NOTES COMPUT SC, V5795, P256, DOI 10.1007/978-3-642-04425-0_19
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Frias MF, 2004, LECT NOTES COMPUT SC, V3308, P162
   Garcia M., 2008, P 2 WORKSHOP MDSD TO, P21
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Greenyer J, 2011, LECT NOTES COMPUT SC, V6698, P144, DOI 10.1007/978-3-642-21470-7_11
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra E, 2012, FUND INFORM, V114, P73, DOI 10.3233/FI-2011-618
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Hidaka S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P480, DOI 10.1109/ASE.2011.6100104
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1188, DOI 10.1145/1141277.1141561
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kleiner M, 2010, LECT NOTES COMPUT SC, V6138, P173, DOI 10.1007/978-3-642-13595-8_15
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Macedo N., 2013, ECEASST, V57, P1
   Macedo N, 2013, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2013.6693135
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Meertens L., 2005, 3 WORKSH PROGR STRUC
   Milicevic Aleksandar, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P108, DOI 10.1007/978-3-642-30885-7_8
   Montaghami Vajih, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P122, DOI 10.1007/978-3-642-30885-7_9
   Near JP, 2010, LECT NOTES COMPUT SC, V5977, P118, DOI 10.1007/978-3-642-11811-1_10
   Oliveira JN, 2009, LECT NOTES COMPUT SC, V5520, P195, DOI 10.1007/978-3-642-03153-3_5
   OMG, 2011, OMG UN MOD LANG UML
   OMG, 2011, MOF 2 0 QUER VIEW TR
   OMG, 2013, OMG MET FAC MOF VERS
   OMG, 2012, OMG Object Constraint Language (OCL), Version 2.3.1
   Rayside D., 2007, ECEASST, V7, P1
   Sasano Isao, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P138, DOI 10.1007/978-3-642-21732-6_10
   Stevens P, 2013, SOFTW SYST MODEL, V12, P175, DOI 10.1007/s10270-011-0198-8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Tata Research Development and Design Centre, MODELMORF
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Van der Straeten R, 2011, LECT NOTES COMPUT SC, V6698, P69, DOI 10.1007/978-3-642-21470-7_6
   Voigt K., 2011, THESIS
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
NR 51
TC 31
Z9 33
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 783
EP 810
DI 10.1007/s10270-014-0437-x
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shin, D
   Jee, E
   Bae, DH
AF Shin, Donghwan
   Jee, Eunkyoung
   Bae, Doo-Hwan
TI Comprehensive analysis of FBD test coverage criteria using mutants
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE FBD model-based testing; Test coverage criteria; Mutation analysis
ID FORMAL ANALYSIS; MUTATION
AB Function block diagram (FBD), a graphical modeling language for programmable logic controllers, has been widely used to implement safety critical system software such as nuclear reactor protection systems. With the growing importance of structural testing for FBD models, structural test coverage criteria for FBD models have been proposed and evaluated using mutation analysis in our previous work. We extend the previous work by comprehensively analyzing the relationships among fault detection effectiveness, test suite size, and coverage level through several research questions. We generate a large number of test suites achieving an FBD test coverage ranging from 0 to 100 %, and we also generate many artificial faults (i.e. mutants) for the FBD models. Our analysis results show that the fault detection effectiveness of the FBD coverage criteria increases with increasing coverage levels, and the coverage criteria are highly effective at detecting faults in all subject models. Furthermore, the test suites generated with the FBD coverage criteria are more effective and efficient than the randomly generated test suites. The FBD coverage criteria are strong at detecting faults in Boolean edges, while relatively weak at detecting wrong constants in FBD models. Empirical knowledge regarding our experiments provide the validity of using the FBD coverage criteria, and therefore, of FBD model-based testing.
C1 [Shin, Donghwan; Jee, Eunkyoung] Korea Adv Inst Sci & Technol, Dept Comp Sci, Daejeon, South Korea.
   [Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Coll Informat Sci & Technol, Daejeon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Korea Advanced
   Institute of Science & Technology (KAIST)
RP Shin, D (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Daejeon, South Korea.
EM donghwan@se.kaist.ac.kr; ekjee@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011; Shin, Donghwan/N-2361-2019
OI Shin, Donghwan/0000-0002-0840-6449
FU Basic Science Research Program through National Research Foundation of
   Korea (NRF) - Ministry of Education [NRF-2013R1A1A2058618]; IT R&D
   program of MSIP/KEIT [10044457]
FX The authors thank the anonymous reviewers for their valuable comments
   and suggestions to improve the quality of the paper. This research was
   partially supported by Basic Science Research Program through the
   National Research Foundation of Korea (NRF) funded by the Ministry of
   Education (NRF-2013R1A1A2058618) and the IT R&D program of MSIP/KEIT
   [10044457, Development of Autonomous Intelligent Collaboration Framework
   for Knowledge Bases and Smart Devices].
CR Alyokhin V, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2004.15
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2006, KNICSRPSSDS23101
   [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], 1993, 11313 IEC 3
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2000, DISCRETE EVENT SYSTE
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P497, DOI 10.1109/TSE.2011.44
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Donghwan Shin, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P465, DOI 10.1007/978-3-642-33666-9_30
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Lakehal A, 2009, SOFTW TEST VERIF REL, V19, P133, DOI 10.1002/stvr.394
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   NRC, 2012, DRAFT REG GUID DG 12
   NRC, 1997, SOFTW UN TEST DIG CO
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Oh Y, 2005, RELIAB ENG SYST SAFE, V88, P215, DOI 10.1016/j.ress.2004.07.019
   Ould M.A., 1986, Testing in software development
   Papailiopoulou V, 2011, LECT NOTES COMPUT SC, V6959, P85, DOI 10.1007/978-3-642-24431-5_8
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rountev A, 2005, LECT NOTES COMPUT SC, V3442, P289, DOI 10.1007/978-3-540-31984-9_22
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H, 1996, IEEE T SOFTWARE ENG, V22, P248, DOI 10.1109/32.491648
NR 34
TC 8
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 631
EP 645
DI 10.1007/s10270-014-0428-y
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600003
DA 2024-07-18
ER

PT J
AU Stenzel, K
   Moebius, N
   Reif, W
AF Stenzel, Kurt
   Moebius, Nina
   Reif, Wolfgang
TI Formal verification of QVT transformations for code generation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Correctness of model transformations; QVT; Formal verification;
   Interactive theorem proving
AB We present a formal calculus for operational QVT. The calculus is implemented in the interactive theorem prover KIV and allows to prove properties of QVT transformations for arbitrary meta models. Additionally, we present a framework for provably correct Java code generation. The framework uses a meta model for a Java abstract syntax tree as the target of QVT transformations. This meta model is mapped to a formal Java semantics in KIV. This makes it possible to formally prove (interactively) with the QVT calculus that a transformation always generates a Java model (i.e. a program) that is type correct and has certain semantical properties. The Java model can be used to generate source code by a model-to-text transformation or byte code directly.
C1 [Stenzel, Kurt; Moebius, Nina; Reif, Wolfgang] Univ Augsburg, Inst Software & Syst Engn, D-86135 Augsburg, Germany.
C3 University of Augsburg
RP Stenzel, K (corresponding author), Univ Augsburg, Inst Software & Syst Engn, D-86135 Augsburg, Germany.
EM stenzel@informatik.uni-augsburg.de; moebius@informatik.uni-augsburg.de;
   reif@informatik.uni-augsburg.de
OI Reif, Wolfgang/0000-0002-4086-0043
FU Deutsche Forschungsgemeinschaft DFG [RE 828/8-1]
FX This work is partly sponsored by the Deutsche Forschungsgemeinschaft DFG
   with grant RE 828/8-1 (SecureMDD).
CR Anastasakis K., 2007, SPRINGER LNCS, V4735
   [Anonymous], 2019, LCP ISABELLE 2019
   [Anonymous], INT J SOFTW INFORM
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   Arendt T., 2010, SPRINGER LNCS, V6394
   BALSER M, 2000, SPRINGER LNCS, V1783
   Beckert B., 2007, SPRINGER LNAI, V4334
   Boronat A., 2009, SPRINGER LNCS, V5503
   Brucker A., 2010, SPRINGER LNCS, V6002
   BRUCKER AD, 2006, 525 ETH ZUR
   Buttner F., 2009, SPRINGER LNCS, V5421
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Clavel M, 2007, SPRINGER LNCS, V4350, DOI 10.1007/978-3-540-71999-1.
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Drossopoulou S., 1999, SPRINGER LNCS, V1523
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Engels G., 2008, SPRINGER LNCS, V5095
   Favre L., 2009, SPRINGER LNCS, V5570
   Giese H., 2006, P MODEVA WORKSH MODE
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   Gosling J., 2005, JAVA TM LANGUAGE SPE, V3rd
   Grandy H., 2007, SPRINGER LNCS, V4468
   Haneberg D., 2006, ELECT NOTES THEOR CO
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Huisman M., 2000, SPRINGER LNCS, V1783
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jouault F., 2006, 21 ACM S APPL COMP
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kastenberg H., 2006, SPRINGER LNCS, V3925
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Krieger M.P., 2008, ELECT COMMUNICATIONS, V15
   Lucas F.J., 2008, P FOR CAISE 08 C CEU
   Moebius N., 2008, INT J ADV SOFTW, V1, P59
   Moebius N., 2009, WORKSH SEC SOFTW ENG
   Moebius N., 2010, SPRINGER LNCS, V5965
   Moebius N., 2009, ICSE 2009 WORKSH INT
   Object Management Group (OMG), 2012, OBJ CONSTR LANG VERS
   OMG, 2011, MET FAC MOF 2 0 QUER
   Queralt A., 2010, SPRINGER LNCS, V6412
   Rahim L., 2010, SPRINGER LNCS, V6394
   Rensink A., 2004, SPRINGER LNCS, V3062
   Romeikat R., 2008, SPRINGER LNCS, V5063
   ROZENBERG G, 1997, HDB GRAPH GRAMMARS C, V3
   Schurr A, 1994, SPRINGER LNCS, V903
   Soeken M., 2011, SPRINGER LNCS, V6706
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   STENZEL K, 2004, SPRINGER LNCS, V3116
   Stenzel K., 2005, THESIS AUGSBURG U GE
   Troya J., 2010, LNCS, V6142
   Varro D., 2003, CSDUML 2003 CRITICAL
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varro Daniel, 2004, Journal of Software and Systems Modeling, V3, P85, DOI [10.1007/s10270-003-0050-x, DOI 10.1007/S10270-003-0050-X, 10.1007/ s10270-003-0050-x]
   VONOHEIMB D, 1999, LNCS, V1523
   Wirsing M., 1990, HDB THEORETICAL COMP, VB, P675, DOI [10.1016/B978-0-444-88074-1.50018-4, DOI 10.1016/B978-0-444-88074-1.50018-4]
NR 55
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 981
EP 1002
DI 10.1007/s10270-013-0351-7
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400026
DA 2024-07-18
ER

PT J
AU Puissant, JP
   Van der Straeten, R
   Mens, T
AF Puissant, Jorge Pinna
   Van der Straeten, Ragnhild
   Mens, Tom
TI Resolving model inconsistencies using automated regression planning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Automated planning; Inconsistency resolution; Software modeling
ID GENERATION; FF
AB One of the main challenges in model-driven software engineering is to automate the resolution of design model inconsistencies. We propose to use the artificial intelligence technique of automated planning for the purpose of resolving such inconsistencies through the generation of one or more resolution plans. We implemented Badger, a regression planner in Prolog that generates such plans. We assess its scalability on the resolution of different types of structural inconsistencies in UML models using both generated models and reverse-engineered models of varying sizes, the largest ones containing more than 10,000 model elements. We illustrate the metamodel-independence of our approach by applying it to the resolution of code smells in a Java program. We discuss how the user can adapt the order in which resolution plans are presented by modifying the cost function of the planner algorithm.
C1 [Puissant, Jorge Pinna; Mens, Tom] Univ Mons, Inst COMPLEXYS, Serv Genie Logiciel, B-7000 Mons, Belgium.
   [Van der Straeten, Ragnhild] Vrije Univ Brussel, Software Languages Lab, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Puissant, JP (corresponding author), Univ Mons, Inst COMPLEXYS, Serv Genie Logiciel, Pl Parc 20, B-7000 Mons, Belgium.
EM jorgepinna@gmail.com; rvdstrae@vub.ac.be; tom.mens@umons.ac.be
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020
FU F.R.S.-FNRS through FRFC [2.4515.09]; Ministere de la Communaute
   francaise - Direction generale de l'Enseignement non obligatoire et de
   la Recherche scientifique, Belgium [AUWB-08/12-UMH]
FX This work has been partially supported by the F.R.S.-FNRS through FRFC
   project 2.4515.09 "Research Center on Software Adaptability"; and by
   research project AUWB-08/12-UMH "Model-Driven Software Evolution", an
   Action de Recherche Concertee financed by the Ministere de la Communaute
   francaise - Direction generale de l'Enseignement non obligatoire et de
   la Recherche scientifique, Belgium.
CR [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   Blanc X, 2012, ERCIM NEWS, P18
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Bratko I., 2001, Prolog Programming for Artificial Intelligence
   Castro S., 2009, P INT WORKSH SMALLT, P8
   da Silva M.A.A., 2010, LECT NOTES COMPUTER
   Dean T., 1990, AAAI-90 Proceedings. Eighth National Conference on Artificial Intelligence, P1010
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghallab M., 2004, AUTOMATED PLANNING T
   Harman M, 2006, LECT NOTES COMPUT SC, V3994, P740
   Hoffmann J, 2001, J ARTIF INTELL RES, V14, P253, DOI 10.1613/jair.855
   Hoffmann J, 2001, AI MAG, V22, P57
   Jimenez Celorrio S., 2010, THESIS U CARLOS 3 MA
   Koehler J., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P273, DOI 10.1007/3-540-63912-8_92
   KORF RE, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P533
   Küster JM, 2007, LECT NOTES COMPUT SC, V4735, P136
   Le Noir J, 2011, LECT NOTES COMPUT SC, V6698, P85, DOI 10.1007/978-3-642-21470-7_7
   Marcelloni F, 2004, FUZZY SET SYST, V145, P57, DOI 10.1016/j.fss.2003.10.005
   Marcelloni F, 2001, INFORM SOFTWARE TECH, V43, P725, DOI 10.1016/S0950-5849(01)00181-1
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5523, P16, DOI 10.1007/978-3-642-02164-0_2
   Nau D, 2003, J ARTIF INTELL RES, V20, P379, DOI 10.1613/jair.1141
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Object Management Group, 2010, UN MOD LANG SUP VERS
   Perez J., 2011, THESIS U VALLADOLID
   Pinna Puissant J., 2010, 3 WORKSH LIV INC SOF
   Pinna Puissant J., 2012, THESIS U MONS
   Puissant Jorge Pinna, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P146, DOI 10.1007/978-3-642-31491-9_13
   Russell S., 2010, ARTIF INTELL, V3rd
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Van Der Straeten R., 2005, THESIS VRIJE U BRUSS
   Van der Straeten R, 2011, LECT NOTES COMPUT SC, V6698, P69, DOI 10.1007/978-3-642-21470-7_6
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   VERE SA, 1983, IEEE T PATTERN ANAL, V5, P246, DOI 10.1109/TPAMI.1983.4767389
   Wu D., 2003, WWW POST
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 42
TC 34
Z9 34
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 461
EP 481
DI 10.1007/s10270-013-0317-9
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100026
DA 2024-07-18
ER

PT J
AU Selim, GMK
   Wang, SG
   Cordy, JR
   Dingel, J
AF Selim, Gehan M. K.
   Wang, Shige
   Cordy, James R.
   Dingel, Juergen
TI Model transformations for migrating legacy deployment models in the
   automotive industry
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development (MDD); Model transformations; AUTOSAR;
   Transformation languages and tools; Automotive control software;
   Black-box testing
ID INTEROPERABILITY; SEMANTICS; PROOF; TOOL
AB Many companies in the automotive industry have adopted model-driven development in their vehicle software development. As a major automotive company, General Motors (GM) has been using a custom-built, domain-specific modeling language, implemented as an internal proprietary metamodel, to meet the modeling needs in its control software development. Since AUTomotive Open System ARchitecture (AUTOSAR) has been developed as a standard to ease the process of integrating components provided by different suppliers and manufacturers, there has been a growing demand to migrate these GM-specific, legacy models to AUTOSAR models. Given that AUTOSAR defines its own metamodel for various system artifacts in automotive software development, we explore applying model transformations to address the challenges in migrating GM-specific, legacy models to their AUTOSAR equivalents. As a case study, we have built and validated a model transformation using the MDWorkbench tool, the Atlas Transformation Language, and the Metamodel Coverage Checker tool. This paper reports on the case study, makes observations based on our experience to assist in the development of similar types of transformations, and provides recommendations for further research.
C1 [Selim, Gehan M. K.; Cordy, James R.; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON K7L 2N8, Canada.
   [Wang, Shige] Gen Motors Res & Dev, Elect & Controls Integrat Lab, Warren, MI 48090 USA.
C3 Queens University - Canada; General Motors
RP Selim, GMK (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 2N8, Canada.
EM gehan@cs.queensu.ca; shige.wang@gm.com; cordy@cs.queensu.ca;
   dingel@cs.queensu.ca
RI Cordy, James R/G-9736-2011; Selim, Gehan/GVS-8529-2022
FU NSERC as part of the NECSIS Automotive Partnership; General Motors; IBM
   Canada; Malina Software Corp.
FX This work is supported in part by NSERC, as part of the NECSIS
   Automotive Partnership with General Motors, IBM Canada and Malina
   Software Corp.
CR Ali S., 2010, 201001 SIM RES LAB
   Anastasakis K., 2007, ModeVVa'07, P47
   Andrews A, 2003, SOFTW TEST VERIF REL, V13, P95, DOI 10.1002/stvr.270
   [Anonymous], MOD DRIV TOOL PROC I
   Anssi Saoussen, 2011, 2011 Proceedings of IEEE 14th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC 2011), P152, DOI 10.1109/ISORC.2011.28
   Aranda Jorge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P692, DOI 10.1007/978-3-642-33666-9_44
   Aziz K, 2011, EVALUATING MODEL TRA
   Bauer Eduard, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P78, DOI 10.1007/978-3-642-21732-6_6
   Bauer E, 2011, LECT NOTES COMPUT SC, V6705, P3, DOI 10.1007/978-3-642-21952-8_3
   Becker Basil, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P123, DOI 10.1007/978-3-642-21732-6_9
   Beydeda S., 2005, Model-driven software development, V15
   Bezivin J., 2003, WORKSH GEN TECHN CON
   Bezivin J., 2005, WORKSH SOFTW MOD ENG, V2
   Biehl M, 2010, EUROMICRO CONF PROC, P131, DOI 10.1109/SEAA.2010.11
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   Bouhoula A, 2000, THEOR COMPUT SCI, V236, P35, DOI 10.1016/S0304-3975(99)00206-6
   Broy M, 2010, P IEEE, V98, P526, DOI 10.1109/JPROC.2009.2037771
   Brunelière H, 2010, LECT NOTES COMPUT SC, V6138, P32, DOI 10.1007/978-3-642-13595-8_5
   Buttner F., 2012, INT C FORM ENG METH
   Clavel M., 2007, LNCS, V4350, P50
   Claypool KT, 2001, SIGMOD RECORD, V30, P606
   Cottenier Thomas., 2007, Aspect-Oriented Software Development (AOSD), V32
   Daghsen A., 2010, EMBEDDED REAL TIME S
   Doyle D., 2006, INT WORKSH MET SCHEM
   Drago ML, 2011, LECT NOTES COMPUT SC, V6981, P2, DOI 10.1007/978-3-642-24485-8_2
   *ECL, ECL MOD FRAM EMF
   Eclipse, 2012, ATL TRANSF LANG ATL
   Rivera JE, 2009, LECT NOTES COMPUT SC, V5452, P54, DOI 10.1007/978-3-642-00434-6_5
   Fleurey F, 2004, SIVOES-MODEVA 2004, PROCEEDINGS, P29, DOI 10.1109/MODEVA.2004.1425846
   Fleurey F, 2007, LECT NOTES COMPUT SC, V4735, P482
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Gardner Tracy, 2003, P METAMODELLING MDA, P178
   Giese H, 2010, LECT NOTES COMPUT SC, V5765, P555, DOI 10.1007/978-3-642-17322-6_24
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Haschemi S, 2009, MODEL DRIVEN ENG VER
   Hausmann J.H, 2003, MODEL MAPPING MDA, P147
   Hemel Z, 2010, SOFTW SYST MODEL, V9, P375, DOI 10.1007/s10270-009-0136-1
   IBM, IBM RAT RHAPS
   IBM, IBM RAT ASS MAN RAM
   IRISA, 2012, MET COV CHECK MMCC
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kent S., 2003, ELECT NOTES THEOR CO, V82, P151
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Mandelin D., 2006, 28th International Conference on Software Engineering Proceedings, P222, DOI 10.1145/1134285.1134317
   Maskeri G., 2002, PATTERN BASED APPROA
   McQuillan J., 2005, TECHNICAL REPORT
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Narayanan A., 2008, ELECT COMMUNICATION, V10
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OMG O, 2002, MET FAC MOF SPEC VER
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Pressman R.S., 2009, SOFTWARE ENG PRACT A
   Rozenberg Grzegorz., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Foundations, V1
   Salay Rick, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P383, DOI 10.1007/978-3-642-33666-9_25
   Schatz Bernhard, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P173, DOI 10.1109/ECBS.2010.25
   Selim G., 2012, 2012592 QUEENS U SCH
   Selim G., 2012, ANAL MODEL TRANSFORM
   Selim Gehan M. K., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P90, DOI 10.1007/978-3-642-31491-9_9
   Soley R., 2000, OMG STAFF MODEL DRIV
   Steinberg D., 2008, EMF ECLIPSE MODELING
   Syriani E, 2009, TECHNICAL REPORT
   Teppola Susanna, 2009, Proceedings of the 2009 Fourth International Conference on Software Engineering Advances (ICSEA), P15, DOI 10.1109/ICSEA.2009.11
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Wu Y, 2003, LECT NOTES COMPUT SC, V2580, P251
NR 70
TC 6
Z9 8
U1 1
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 365
EP 381
DI 10.1007/s10270-013-0365-1
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100022
DA 2024-07-18
ER

PT J
AU Barnes, JM
   Garlan, D
   Schmerl, B
AF Barnes, Jeffrey M.
   Garlan, David
   Schmerl, Bradley
TI Evolution styles: foundations and models for software architecture
   evolution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture
ID CHECKING; DESIGN
AB As new market opportunities, technologies, platforms, and frameworks become available, systems require large-scale and systematic architectural restructuring to accommodate them. Today's architects have few techniques to help them plan this architecture evolution. In particular, they have little assistance in planning alternative evolution paths, trading off various aspects of the different paths, or knowing best practices for particular domains. In this paper, we describe an approach for planning and reasoning about architecture evolution. Our approach focuses on providing architects with the means to model prospective evolution paths and supporting analysis to select among these candidate paths. To demonstrate the usefulness of our approach, we show how it can be applied to an actual architecture evolution. In addition, we present some theoretical results about our evolution path constraint specification language.
C1 [Barnes, Jeffrey M.; Garlan, David; Schmerl, Bradley] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Barnes, JM (corresponding author), Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
EM jmbarnes@cs.cmu.edu; garlan@cs.cmu.edu; schmerl@cs.cmu.edu
OI Schmerl, Bradley/0000-0001-7828-622X
FU Software Engineering Institute; IBM; NASA's Jet Propulsion Laboratory
FX We are grateful to the Software Engineering Institute, IBM, and NASA's
   Jet Propulsion Laboratory for providing support for this work. We would
   especially like to thank Ipek Ozkaya, Sridhar Iyengar, S Sivakumar, and
   Brian Giovannoni. Finally, we would like to thank the anonymous
   reviewers for their constructive suggestions, which improved the
   manuscript greatly.
CR Abi-Antoun M, 2006, IEEE INT CONF AUTOM, P47
   ALUR R, 1989, ANN IEEE SYMP FOUND, P164, DOI 10.1109/SFCS.1989.63473
   [Anonymous], 4627 RFC IETF
   [Anonymous], UN MOD LANG UML
   [Anonymous], MET FAC MOF 2 0 QUER
   [Anonymous], 2011, Documenting Software Architectures: Views and Beyond
   Baldwin CarlissY., 1999, DESIGN RULES, V1
   Barnes JeffreyM., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P3, DOI DOI 10.1145/2304696.2304700
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Berard B., 2001, Systems and Software Verification
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   BLACKBURN P., 1999, LOG J IGPL, V7, P27
   Blackburn P., J LOGIC COMPUT
   Boehm BW., 1981, Software Engineering Economics
   Brown N, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P103, DOI 10.1109/WICSA.2011.22
   Cariou E., 2004, P WORKSH OCL MOD DRI
   Chaki S., 2004, Proceedings of the Workshop on Specification and Verification of Component Based Systems (SAVCBS), P55
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Demri S, 2010, THEOR COMPUT SCI, V411, P2298, DOI 10.1016/j.tcs.2010.02.021
   Ecma International, 2009, ECMA262
   Erder M., 2006, IT Professional, V8, P10, DOI 10.1109/MITP.2006.77
   Franceschet M., 2006, Journal of Applied Logic, V4, P279, DOI [DOI 10.1016/J.JAL.2005.06.010, 10.1016/j.jal.2005.06.010]
   Gamma Erich., 1994, DESIGN PATTERNS
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Garlan D., 1997, P CASCON, V97, P169
   Garlan D, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P131, DOI 10.1109/WICSA.2009.5290799
   Garlan D, 2009, PROC INT CONF SOFTW, P591, DOI 10.1109/ICSE.2009.5070563
   Gerevini AE, 2009, ARTIF INTELL, V173, P619, DOI 10.1016/j.artint.2008.10.012
   Ghezzi C., 1991, Fundamentals of Software Engineering
   Goranko V., 1994, Temporal Logic. First International Conference, ICTL '94 Proceedings, P133, DOI 10.1007/BFb0013985
   Grunske L, 2005, SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERNG, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING AND FIRST AICS INTERNATIONAL WORKSHOP ON SELF-ASSEMBLING WIRELESS NETWORKS, PROCEEDINGS, P324, DOI 10.1109/SNPD-SAWN.2005.37
   HENZINGER TA, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P281, DOI 10.1145/93385.93429
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   Ivers J., 2004, CMUSEI2004TR2008
   Kazman R, 2006, J SYST SOFTWARE, V79, P1207, DOI 10.1016/j.jss.2006.05.001
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Laursen E., 2011, HIGH END TRADING STR
   Le Goaer Olivier, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P311, DOI 10.1109/COMPSAC.2008.104
   Le Goaer O., 2009, THESIS LINA NANTES
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Markey N, 2003, LECT NOTES COMPUT SC, V2761, P251
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Opdyke WilliamF., 1990, Symposium on Object-Oriented Programming Emphasizing Practical Applications, P145
   Oussalah M., 2006, P INT ERCIM WORKSH S, P137
   Ozkaya I., 2007, CMUSEI2007TR003
   Parnas D. L., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P339
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   RICHARDSON J, 1992, PROC INT CONF VERY L, P127
   Rushby JohnM., 2001, Proceedings of the 1st International Workshop on Embedded Software, P306
   Schmerl B, 2004, PROC INT CONF SOFTW, P704, DOI 10.1109/ICSE.2004.1317497
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Spitznagel B, 2003, PROC INT CONF SOFTW, P374, DOI 10.1109/ICSE.2003.1201216
   Spitznagel B, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P148, DOI 10.1109/WICSA.2001.948424
   Tamzalit D., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P336
   Tamzalit D., 2006, P SEKE 06 SAN FRANC, P296
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   Varia J., 2010, MIGRATING YOUR EXIST
   Wermelinger M, 2002, SCI COMPUT PROGRAM, V44, P133, DOI 10.1016/S0167-6423(02)00036-9
   Yourdon E., 1979, STRUCTURED DESIGN
NR 63
TC 21
Z9 25
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 649
EP 678
DI 10.1007/s10270-012-0301-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bocciarelli, P
   D'Ambrogio, A
AF Bocciarelli, Paolo
   D'Ambrogio, Andrea
TI A model-driven method for enacting the design-time QoS analysis of
   business processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process; MDA; BPMN; Performance; QoS; LQN
ID WEB; PERFORMABILITY
AB Business Process Management (BPM) is a holistic approach for describing, analyzing, executing, managing, and improving large enterprise business processes. A business process can be seen as a flow of tasks that are orchestrated to accomplish well-defined goals such as goods production or services delivery. From an IT perspective, BPM is closely related to a business process automation approach carried out by use of IT standards and technologies, such as service-oriented architectures (SOAs) and Web Services. This paper specifically focuses on fully automated business processes that are defined and executed as orchestrations of software services. In a BPM context, the ability to predict at design time the business process behavior assumes a strategic relevance, both to early assess whether or not the business goals are achieved and to gain a competitive advantage. A business process is typically specified by use of Business Process Modeling Notation (BPMN), the standard language for the high-level description of business processes. Unfortunately, BPMN does not support the characterization of the business process in terms of nonfunctional or QoS properties, such as performance and reliability. To overcome such a limitation, this paper introduces Performability-enabled BPMN (PyBPMN), a lightweight BPMN extension for the specification of performance and reliability properties. PyBPMN enables the design time prediction of the business processes behavior, in terms of performance and reliability properties. Such prediction activity requires the use of models that are to be first built and then evaluated. In this respect, this work introduces a model-driven method that exploits PyBPMN to predict, at design time, the performance and the reliability of a business process, either to select the process configuration that provides the best behavior or to check if a given configuration satisfies the overall requirements. The proposed model-driven method that enacts the automated analysis of a business process behavior embraces the complete business process development cycle, from the specification phase down to the implementation phase. The paper also describes how the proposed model-driven method is implemented. The several model transformations at the core of the method have been implemented by use of QVT, and the standard language for specifying model transformations provided by OMG's MDA. The availability of such automated model transformations allows business analysts to predict the process behavior with no extra effort and without being required to own specific skills of performance or reliability theory, as shown by use of an example application.
C1 [Bocciarelli, Paolo; D'Ambrogio, Andrea] Univ Roma Tor Vergata, Dept Enterprise Engn, Rome, Italy.
C3 University of Rome Tor Vergata
RP Bocciarelli, P (corresponding author), Univ Roma Tor Vergata, Dept Enterprise Engn, Rome, Italy.
EM paolo.bocciarelli@uniroma2.it; dambro@uniroma2.it
RI D'Ambrogio, Andrea/AAN-9429-2021
OI D'Ambrogio, Andrea/0000-0001-5711-1527; bocciarelli,
   paolo/0000-0003-3656-5372
FU University of Roma TorVergata research on Performance Validation of
   Complex Systems; CERTIA Research Center of the University of Roma Tor
   Vergata
FX The authors wish to thank the anonymous reviewers for the substantial
   contribution they have given to improve the quality of the paper. This
   work has been partially supported by funds from the University of Roma
   TorVergata research on Performance Validation of Complex Systems and by
   the CERTIA Research Center of the University of Roma Tor Vergata.
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   Amsden J., 2010, MODELING SOAML SERVI
   [Anonymous], 2009, SERV OR ARCH MOD LAN
   [Anonymous], 2006, 7 WORKSHOP TUTORIAL
   [Anonymous], P 8 INT TAG WIRTSCH
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], PROCESS MANAGEMENT G
   [Anonymous], 2003, MDA GUIDE VERSION 1
   [Anonymous], 4 INT WORKSH SOFTW P
   Apache Software Foundation, AP ODE ORCH DIR ENG
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bernardi S, 2008, LECT NOTES COMPUT SC, V5301, P736, DOI 10.1007/978-3-540-87875-9_51
   Bocciarelli P., 2011, BUSINESS PROCESS MOD, P1
   Bocciarelli P., 2011, P S THEOR MOD SIM DE
   Bocciarelli P., 2008, SPEC INT PERF EVAL W, V5119
   Bocciarelli P, 2011, SOFTW SYST MODEL, V10, P265, DOI 10.1007/s10270-010-0150-3
   Braghetto KR, 2011, LECT NOTES COMPUT SC, V6977, P42, DOI 10.1007/978-3-642-24749-1_5
   Brambilla M, 2006, ACM T SOFTW ENG METH, V15, P360, DOI 10.1145/1178625.1178627
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Carleton University Real-Time and Distributed Systems Group, LAY QUEUEING NETW SO
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   D'Ambrogio A., 2005, P ACM 5 INT WORKSHOP, P75, DOI DOI 10.1145/1071021.1071029
   D'Ambrogio A., 2007, P 6 INT WORKSHOP SOF, P78
   Dahman K., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P155, DOI 10.1109/ECOWS.2010.14
   Eclipse Foundation, ECL QVT TRANSF ENG
   Eclipse Foundation, UML2 ECL EMF BAS IMP
   Ferreira J. E., 2009, RR7065 INRIA
   Fujun Yang, 2010, 2010 IEEE International Conference on Systems, Man and Cybernetics (SMC 2010), P2587, DOI 10.1109/ICSMC.2010.5641910
   Gilmore S, 2005, LECT NOTES COMPUT SC, V3670, P200
   Grefen P, 2000, COMPUT SYST SCI ENG, V15, P277
   Gu, 2005, P 5 INT WORKSHOP SOF, P99
   Kamrani F, 2010, IEEE WORKSH PRINC AD, P1
   Kettinger WJ, 1997, MIS QUART, V21, P55, DOI 10.2307/249742
   Ko R.K. L., 2009, CROSSROADS, V15, p4:11, DOI DOI 10.1145/1558897.1558901
   Krishnaswamy S, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P72
   Mayerl C, 2007, INFORMATION TECHNOLOGY MANAGEMENT FROM A BUSINESS PERSPECTIVE, P1, DOI 10.1109/BDIM.2007.375006
   Menascé DA, 2004, IEEE INTERNET COMPUT, V8, P90, DOI 10.1109/MIC.2004.1260710
   MEYER JF, 1980, IEEE T COMPUT, V29, P720, DOI 10.1109/TC.1980.1675654
   Musa J.D., 1990, SOFTWARE RELIABILITY
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2007, XML MET INT XMI SPEC
   OMG, 2009, UML PROF MOD AN REAL
   OMG, 2008, MET OBJ FAC MOF 2 0
   Oussena S., 2009, P 11 INT C ENT INF S, V3, P168
   Ouyang C, 2008, INT J WEB SERV RES, V5, P42, DOI 10.4018/jwsr.2008010103
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Raedts I., 2007, MSVVEIS, P126
   Ryan J, 2006, COMPUT IND, V57, P437, DOI 10.1016/j.compind.2006.02.002
   Sam Chung, 2009, 2009 IEEE Asia-Pacific Services Computing Conference (APSCC 2009), P246, DOI 10.1109/APSCC.2009.5394115
   Silver B., 2006, Optimizing Business Performance with Business Process Management
   Silver GA, 2003, 7TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL I, PROCEEDINGS, P420
   SMITH RM, 1988, IEEE T COMPUT, V37, P406, DOI 10.1109/12.2184
   Song HG, 2005, LECT NOTES COMPUT SC, V3733, P392
   Torres V, 2006, LECT NOTES COMPUT SC, V4102, P322
   van der Aalst WMP, 2010, INT HANDB INFORM SYS, P313, DOI 10.1007/978-3-642-00416-2_15
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Van Moorsel A., 2001, 5 INT WORKSH PERF MO
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Wetzstein B., 2008, 9 WORKSH BUS PROC MO
   White S., 2004, Work ow Handbook, V2004, P265
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Woodside M., 2002, Tutorial introduction to layered modeling of software performance
   Yacoub S. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P22, DOI 10.1109/ISSRE.1999.809307
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng Z., P 39 INT C DEP SYST, p[239, 209]
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
NR 72
TC 18
Z9 19
U1 0
U2 24
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 573
EP 598
DI 10.1007/s10270-013-0345-5
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300007
DA 2024-07-18
ER

PT J
AU Fdhila, W
   Dumas, M
   Godart, C
   García-Bañuelos, L
AF Fdhila, Walid
   Dumas, Marlon
   Godart, Claude
   Garcia-Banuelos, Luciano
TI Heuristics for composite Web service decentralization
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service composition; Decentralized service execution; Quality of service
ID QOS; FRAMEWORK; LOOPS
AB A composite service is usually specified by means of a process model that captures control-flow and data-flow relations between activities that are bound to underlying component services. In mainstream service orchestration platforms, this process model is executed by a centralized orchestrator through which all interactions are channeled. This architecture is not optimal in terms of communication overhead and has the usual problems of a single point of failure. In previous work, we proposed a method for executing composite services in a decentralized manner. However, this and similar methods for decentralized composite service execution do not optimize the communication overhead between the services participating in the composition. This paper studies the problem of optimizing the selection of services assigned to activities in a decentralized composite service, both in terms of communication overhead and overall quality of service, and taking into account collocation and separation constraints that may exist between activities in the composite service. This optimization problem is formulated as a quadratic assignment problem. The paper puts forward a greedy algorithm to compute an initial solution as well as a tabu search heuristic to identify improved solutions. An experimental evaluation shows that the tabu search heuristic achieves significant improvements over the initial greedy solution. It is also shown that the greedy algorithm combined with the tabu search heuristic scale up to models of realistic size.
C1 [Fdhila, Walid; Godart, Claude] Univ Lorraine, Nancy, France.
   [Fdhila, Walid] Univ Vienna, Vienna, Austria.
   [Dumas, Marlon; Garcia-Banuelos, Luciano] Univ Tartu, Inst Comp Sci, EE-50090 Tartu, Estonia.
C3 Universite de Lorraine; University of Vienna; University of Tartu
RP Fdhila, W (corresponding author), Univ Lorraine, Nancy, France.
EM fdhilawa@loria.fr
RI Garcia-Banuelos, Luciano/R-1277-2016; Fdhila, Walid/AAJ-2263-2020;
   Dumas, Marlon/H-2757-2015
OI Garcia-Banuelos, Luciano/0000-0001-9076-903X; Fdhila,
   Walid/0000-0002-5245-6128; Dumas, Marlon/0000-0002-9247-7476
FU ERDF through the Estonian Centre of Excellence in Computer Science
FX This work was conducted while the second author was a Visiting Professor
   at LORIA-INRIA Nancy. The second and fourth authors were also supported
   by the ERDF through the Estonian Centre of Excellence in Computer
   Science.
CR AARTS EH, 1997, DISCRETE MATH OPTIMI
   Ai LF, 2011, FUTURE GENER COMP SY, V27, P157, DOI 10.1016/j.future.2010.08.003
   [Anonymous], COLL COMP NETW APPL
   [Anonymous], 1997, The Definition of Standard ML
   Benatallah B, 2003, IEEE INTERNET COMPUT, V7, P40, DOI 10.1109/MIC.2003.1167338
   Benatallah Boualem., 2005, Distributed and Parallel Databases
   BOKHARI SH, 1988, IEEE T COMPUT, V37, P48, DOI 10.1109/12.75137
   Burkard R. E., 1996, Integer Programming and Combinatorial Optimization. 5th International IPCO Conference Proceedings, P204
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Cardoso J., 2004, J. Web Semant., V1, P281, DOI [10.1016/j.websem.2004.03.001, DOI 10.1016/J.WEBSEM.2004.03.001]
   Chafle G., 2004, INT WORLDWIDE WEB C, P134
   Dumas M, 2010, LECT NOTES COMPUT SC, V6470, P213, DOI 10.1007/978-3-642-17358-5_15
   Esfahani FS, 2011, J SYST SOFTWARE, V84, P1591, DOI 10.1016/j.jss.2011.03.031
   Fdhila W, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P847, DOI 10.1109/ICWS.2009.41
   Glover F., 1998, Tabu Search
   Hendrickson B, 2000, APPL MATH MODEL, V25, P99, DOI 10.1016/S0307-904X(00)00042-1
   Hildebrandt T, 2011, LECT NOTES COMPUT SC, V7041, P237, DOI 10.1007/978-3-642-24690-6_17
   Hwang SY, 2007, INFORM SCIENCES, V177, P5484, DOI 10.1016/j.ins.2007.07.011
   Hwang SY, 2004, LECT NOTES COMPUT SC, V3288, P596
   Jaeger MC, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P181, DOI 10.1109/EEE.2005.110
   Jaeger MC, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/EDOC.2004.1342512
   Khalaf R, 2008, INT J COOP INF SYST, V17, P259, DOI 10.1142/S0218843008001828
   Khalaf R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P770
   KOOPMANS TC, 1957, ECONOMETRICA, V25, P53, DOI 10.2307/1907742
   Liu Y., 2004, 13 INT WORLD WIDE WE, P66, DOI DOI 10.1145/1013367.1013379
   Merz P, 2002, J HEURISTICS, V8, P197, DOI 10.1023/A:1017912624016
   Mitra S, 2008, P IEEE I C SERV COMP, P395, DOI 10.1109/SCC.2008.82
   Mitra S, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P493, DOI 10.1109/ICWS.2009.71
   Polyvyanyy A, 2012, INFORM SYST, V37, P518, DOI 10.1016/j.is.2011.10.005
   Ramalingam G, 2002, ACM T PROGR LANG SYS, V24, P455, DOI 10.1145/570886.570887
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Sadiq W, 2006, P IEEE I C SERV COMP, P281, DOI 10.1109/SCC.2006.71
   Sarkar V., 1989, RES MONOGRAPHS PARAL
   Sreedhar VC, 1996, ACM T PROGR LANG SYS, V18, P649, DOI 10.1145/236114.236115
   Trandac H., 2002, P 21 DIG AV SYST C, V1
   Wodtke D, 1996, PROC INT CONF DATA, P556, DOI 10.1109/ICDE.1996.492206
   Yang Y., 2012, J SYST SOFTW
   Yildiz U, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P9
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 39
TC 14
Z9 16
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 599
EP 619
DI 10.1007/s10270-012-0262-z
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300008
DA 2024-07-18
ER

PT J
AU Lano, K
   Kolahdouz-Rahimi, S
   Poernomo, I
   Terrell, J
   Zschaler, S
AF Lano, K.
   Kolahdouz-Rahimi, S.
   Poernomo, I.
   Terrell, J.
   Zschaler, S.
TI Correct-by-construction synthesis of model transformations using
   transformation patterns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Patterns; Model-driven development; Verification
AB Model transformations are an essential part of model-based development approaches, such as Model-driven Architecture (MDA) and Model-driven Development (MDD). Model transformations are used to refine and abstract models, to re-express models in a new modelling language, and to analyse, refactor, compare and improve models. Therefore, the correctness of model transformations is critically important for successful application of model-based development: software developers should be able to rely upon the correct processing of their models by transformations in the same way that they rely upon compilers to produce correct executable versions of their programs. In this paper, we address this problem by defining standard structures for model transformation specifications and implementations, which serve as patterns and strategies for constructing a wide range of model transformations. These are incorporated into a tool-supported process which automatically synthesises implementations of model transformations from their specifications, these implementations are correct-by-construction with respect to their specifications.
C1 [Lano, K.; Kolahdouz-Rahimi, S.; Poernomo, I.; Terrell, J.; Zschaler, S.] Kings Coll London, Dept Informat, London WC2R 2LS, England.
C3 University of London; King's College London
RP Lano, K (corresponding author), Kings Coll London, Dept Informat, London WC2R 2LS, England.
EM klano@hotmail.com
RI Zschaler, Steffen/AAC-4911-2020
OI Zschaler, Steffen/0000-0001-9062-6637; Lano, Kevin
   Charles/0000-0002-9706-1410
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   Akehurst D., 2005, MODEL TRANSFORMATION
   Anastasakis K., 2010, SOSYM, V9
   [Anonymous], 2010, OPTXWARE VIATRA I MO
   [Anonymous], P 2 OOPSLA WORKSHOP
   Bezivin J., 2003, MODEL TRANSFORMATION
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   CLEAVELAND C, 2001, PROGRAM GENERATORS X
   Cuadrado J.S., 2008, LNCS, V5421
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Duddy K., 2003, 7 INT ENT DISTR OBJ
   Eclipse organisation, 2011, EMF ECOR SPEC
   ESA, 2011, HOOD REF MAN R4
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   France R., 2007, FOSE 07
   Gamma Erich., 1994, DESIGN PATTERNS
   Goldschmidt T., 2011, REFINEMENT TRANSFORM
   Guerra E., 2010, LNCS, V6394
   Iacob M.E., 2008, ENT DISTR OBJ COMP C
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Kolahdouz-Rahimi L., 2012, SCI COMPUT PRO UNPUB
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I., 2006, P 2006 ACM S APPL CO, P1202
   Lano K., 2006, CATALOGUE UML MODEL
   LANO K, 1996, B LANGUAGE METHOD
   Lano K., 2012, COMPOSITION EVOLUTIO
   Lano K., 2011, SPECIFICATION GMF MI
   Lano K., 2011, SEPCIFICATION HELLO
   Lano K., 2011, MODEL DRIVEN DEV MOD
   Lano K., 2012, TRANSFORMATION INVER
   Lano K., 2009, UML 2 SEMANTICS APPL
   Lano K., 2012, MOD WORKSH MODELS
   Lano K., 2011, SLICING TECHNIQUES U
   Lano K, 2010, MODEL MIGRATION TRAN
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   Markovic S, 2008, SOFTW SYST MODEL, V7, P399, DOI 10.1007/s10270-008-0083-2
   Mens T., 2005, TAXONOMY MODEL TRANS, P04101
   Object Management Group (OMG), 2005, PTC051101 OMG
   OMG, 2004, MOD DRIV ARCH
   OMG, 2010, QUER VIEW TRANSF SPE
   *OMG, 2006, FORMAL060101 OMG
   Orejas F, 2009, LECT NOTES COMPUT SC, V5728, P383, DOI 10.1007/978-3-642-03741-2_26
   Poernomo I., 2008, PROOFS MODEL TRANSFO
   Poernomo I., 2010, CORRECT BY CONSTRUCT
   Pons Claudia, 2009, Proceedings of the 28th International Conference of the Chilean Computer Science Society (SCCC 2009), P105, DOI 10.1109/SCCC.2009.14
   Rensink A., 2009, P GT VMT 2009 EL COM, V18
   Romeikat R., 2008, TRANSLATION QVT RELA
   Rose L., 2012, SOSYM IN PRESS
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Syriani E., 2010, P 9 INT WORKSH GTVMT
   Taentzer G., 2005, Model transformation by graph transformation: A comparative study
   Tisi M, 2010, LECT NOTES COMPUT SC, V6142, P215, DOI 10.1007/978-3-642-13688-7_15
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   Van Gorp P., 2010, TTC 2010
   Varro D., 2007, LNCS, V5088, P540, DOI [10.1007/978-3-540-89020-1_36, DOI 10.1007/978-3-540-89020-1_36]
NR 57
TC 8
Z9 9
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 873
EP 907
DI 10.1007/s10270-012-0291-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300020
DA 2024-07-18
ER

PT J
AU Sachs, K
   Kounev, S
   Buchmann, A
AF Sachs, Kai
   Kounev, Samuel
   Buchmann, Alejandro
TI Performance modeling and analysis of message-oriented event-driven
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Event-based; Performance model; Performance evaluation; Message-oriented
   middleware; Performance pattern
ID PETRI NETS
AB Message-oriented event-driven systems are becoming increasingly ubiquitous in many industry domains including telecommunications, transportation and supply chain management. Applications in these areas typically have stringent requirements for performance and scalability. To guarantee adequate quality-of-service, systems must be subjected to a rigorous performance and scalability analysis before they are put into production. In this paper, we present a comprehensive modeling methodology for message-oriented event-driven systems in the context of a case study of a representative application in the supply chain management domain. The methodology, which is based on queueing Petri nets, provides a basis for performance analysis and capacity planning. We study a deployment of the SPECjms2007 standard benchmark on a leading commercial middleware platform. A detailed system model is built in a step-by-step fashion and then used to predict the system performance under various workload and configuration scenarios. After the case study, we present a set of generic performance modeling patterns that can be used as building blocks when modeling message-oriented event-driven systems. The results demonstrate the effectiveness, practicality and accuracy of the proposed modeling and prediction approach.
C1 [Sachs, Kai] SAP AG, Virtualizat & Cloud Management Grp, Walldorf, Germany.
   [Kounev, Samuel] Karlsruhe Inst Technol, Res Grp, D-76021 Karlsruhe, Germany.
   [Buchmann, Alejandro] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
C3 SAP; Helmholtz Association; Karlsruhe Institute of Technology; Technical
   University of Darmstadt
RP Sachs, K (corresponding author), SAP AG, Virtualizat & Cloud Management Grp, Walldorf, Germany.
EM Kai.Sachs@sap.com; Kounev@kit.edu; Buchmann@dvs.tu-darmstadt.de
CR Bause F, 1998, PERFORM EVALUATION, V32, P265, DOI 10.1016/S0166-5316(98)00005-4
   Bause F., 1994, LECT NOTES COMPUT SC, V794
   Bause F., 1995, LNCS, P977
   Bause F., 1993, P 5 INT WORKSH PETR
   Bause F., 1997, P 9 ITG GI FACHT MES
   Bause F., 2002, Stochastic Petri Nets: An Introduction to the Theory
   BAUSE F, 1993, 461 U DORTM DEP CS
   Bellur U., 2004, WORLD SCI ENG AC SOC
   Bolch G., 2005, Queueing networks and Markov chains
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   Gamma E., 1993, LECT NOTES COMPUT SC, V707
   GENRICH HJ, 1981, THEOR COMPUT SCI, V13, P109, DOI 10.1016/0304-3975(81)90113-4
   HAPPE J, 2008, P 7 INT WORKSH SOFTW
   He F., 2007, LECT NOTES COMPUT SC, V4574
   Henjes R., 2006, P 26 IEEE INT C DIST
   Hinze A., 2009, P INT C DISTR EV BAS
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   JAEGER MA, 2005, P 13 IEEE INT S MOD
   JENSEN K, 1981, THEOR COMPUT SCI, V14, P317, DOI 10.1016/0304-3975(81)90049-9
   Jensen K., 1981, LECT NOTES COMPUT SC, V118
   JENSEN K, 1991, HIGH LEVEL PETRI NET
   Kounev S, 2006, PERFORM EVALUATION, V63, P364, DOI 10.1016/j.peva.2005.03.004
   Kounev S., 2011, 4 INT ICST C SIM TOO
   KOUNEV S, 2008, P 11 IEEE INT S OBJ
   Kounev S., 2005, THESIS TU DARMSTADT
   KOUNEV S, 2006, P 3 INT C QUANT EV S
   Kounev S., 2006, P SPEC BENCHM WORKSH
   Kounev S., 2009, ACM SIGMETRICS PERFO, V36
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Kounev S, 2009, IT-INF TECHNOL, V51, P262, DOI 10.1524/itit.2009.0550
   Lee N., 1998, P INT S SOFTW ENG PA
   Liu Y., 2005, LECT NOTES COMPUT SC, V3489
   Meier Philipp, 2011, 19 IEEE ACM INT S MO
   Menth M., 2006, P 26 IEEE INT C DIST
   Muhl G., 2009, LECT NOTES COMPUT SC, V5704
   Mulyar N., 2005, BETA WORKING PAPER S
   Mulyar N., 2005, P 6 WORKSH TUT PRACT
   Naedele M., 1998, P IEEE INT C EN COMP
   Pettit IV R., 2004, P WORK IEEE IFIP C S
   Pettit IV R., 2006, P IEEE INT S OBJ OR
   Pettit R. IV, 2007, P IEEE INT S OBJ OR
   Sachs K., 2010, LECT NOTES COMPUT SC, V6193
   Sachs K., 2010, THESIS TU DARMSTADT
   Sachs K, 2009, PERFORM EVALUATION, V66, P410, DOI 10.1016/j.peva.2009.01.003
   Schroter A., 2010, 4 ACM INT C DISTR EV
   Sun Microsystems, 2002, JAV MESS SERV JMS SP
NR 46
TC 8
Z9 9
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 705
EP 729
DI 10.1007/s10270-012-0228-1
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600005
DA 2024-07-18
ER

PT J
AU Visser, W
   Dwyer, MB
   Whalen, M
AF Visser, Willem
   Dwyer, Matthew B.
   Whalen, Michael
TI The hidden models of model checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model checking; Models temporal logic; Biological systems
ID SOFTWARE
AB In the past, applying formal analysis, such as model checking, to industrial problems required a team of formal methods experts and a great deal of effort. Model checking has become popular, because model checkers have evolved to allow domain-experts, who lack model checking expertise, to analyze their systems. What made this shift possible and what roles did models play in this? That is the main question we consider here. We survey approaches that transform domain-specific input models into alternative forms that are invisible to the user and which are amenable to model checking using existing techniques-we refer to these as hidden models. We observe that keeping these models hidden from the user is in fact paramount to the success of the domain-specific model checker. We illustrate the value of hidden models by surveying successful examples of their use in different areas of model checking (hardware and software) and how a lack of suitable models hamper a new area (biological systems).
C1 [Dwyer, Matthew B.] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Whalen, Michael] Univ Minnesota, Software Engn Ctr, Minneapolis, MN USA.
   [Visser, Willem; Dwyer, Matthew B.] Univ Stellenbosch, ZA-7600 Stellenbosch, South Africa.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University of Minnesota System; University of Minnesota Twin Cities;
   Stellenbosch University
EM visserw@sun.ac.za; dwyer@cse.unl.edu; whalen@cs.umn.edu
OI Dwyer, Matthew/0000-0002-1937-1544
CR Amla Nina., 2003, CONCUR, P423
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], DES AUT C
   [Anonymous], INT C FORM METH COMP
   [Anonymous], SPEC DESCR LANG
   [Anonymous], MODELSIM PROD
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], INC ENT SIM PROD
   [Anonymous], SIM DES VER PROD
   [Anonymous], ASE
   [Anonymous], GRUMBERG MODEL CHECK
   [Anonymous], 2000, LNCS, DOI [10.1007/10722167_20, DOI 10.1007/1072216720]
   [Anonymous], DANGERS LIVING X
   [Anonymous], THEOR COMPUT SCI
   [Anonymous], 199902 CAD BERK LABS
   [Anonymous], CAD INC FORM VER DAT
   [Anonymous], 2008, NDSS
   [Anonymous], 1990, HDB THEORETICAL COMP
   [Anonymous], REQUIR ENG
   [Anonymous], P ISSTA
   [Anonymous], 2008, P 2008 INT C FORM ME, DOI DOI 10.1109/FMCAD.2008.ECP.19
   [Anonymous], 2007, DEV DRIVERS WINDOWS
   [Anonymous], P ICCAD
   [Anonymous], SPEC PATTERNS
   [Anonymous], 2006, SYSTEM VERILOG DESIG
   [Anonymous], PROMELA DATABASE
   [Anonymous], NUSMV EXAMPLES COLLE
   [Anonymous], 2002, P INT C COMP AID VER
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Ball T, 2001, LECT NOTES COMPUT SC, V2102, P260
   Ball T, 2000, LECT NOTES COMPUT SC, V1885, P113
   Batt G, 2007, LECT NOTES COMPUT SC, V4424, P323
   Batt G, 2010, BIOINFORMATICS, V26, pi603, DOI 10.1093/bioinformatics/btq387
   Baumgartner J., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P72
   Beer I, 2001, FORM METHOD SYST DES, V18, P141, DOI 10.1023/A:1008779610539
   Berthomieu B, 2008, ERCIM NEWS, P32
   Bjesse P, 2004, ICCAD-2004: INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, IEEE/ACM DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.2004.1382541
   Brace K. S., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P40, DOI 10.1109/DAC.1990.114826
   BRAND D, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P534, DOI 10.1109/ICCAD.1993.580110
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Calder M, 2010, FORMAL METHODS: STATE OF THE ART AND NEW DIRECTIONS, P185, DOI 10.1007/978-1-84882-736-3_6
   Chan W, 2001, IEEE T SOFTWARE ENG, V27, P170, DOI 10.1109/32.908961
   Chan W., 1998, Software Engineering Notes, V23, P102, DOI 10.1145/271775.271798
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2004, LECT NOTES COMPUT SC, V2937, P85
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   DARRINGER JA, 1981, IBM J RES DEV, V25, P272, DOI 10.1147/rd.254.0272
   de Halleux J, 2010, LECT NOTES COMPUT SC, V6141, P253, DOI 10.1007/978-3-642-13953-6_14
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer MB, 2004, FORM METHOD SYST DES, V25, P199, DOI 10.1023/B:FORM.0000040028.49845.67
   Eisner C, 2006, INTEGR CIRCUIT SYST, P1
   Fisher J, 2008, LECT N BIOINFORMAT, V5054, P17, DOI 10.1007/978-3-540-68413-8_2
   Fisher J, 2007, NAT BIOTECHNOL, V25, P1239, DOI 10.1038/nbt1356
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Ganzinger H, 2004, LECT NOTES COMPUT SC, V3114, P175, DOI 10.1007/978-3-540-27813-9_14
   Giannakopoulou D, 2004, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2004.1317443
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 1996, Lecture Notes in Computer Science, V1032
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Groce A., 2004, International Journal on Software Tools for Technology Transfer, V6, P260, DOI 10.1007/s10009-003-0130-9
   Groce A, 2004, LECT NOTES COMPUT SC, V3114, P453
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Grosu Radu, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P396, DOI 10.1007/978-3-642-22110-1_31
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   Havelund K., 1998, MODEL CHECKING JAVA
   Heath J, 2008, THEOR COMPUT SCI, V391, P239, DOI 10.1016/j.tcs.2007.11.013
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Iosif R, 2005, FORM METHOD SYST DES, V26, P137, DOI 10.1007/s10703-005-1491-3
   Iosif R., 2004, International Journal on Software Tools for Technology Transfer, V6, P302, DOI 10.1007/s10009-004-0154-9
   Kahsai T, 2011, LECT NOTES COMPUT SC, V6617, P192, DOI 10.1007/978-3-642-20398-5_15
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kwiatkowska M, 2003, IEEE S LOG, P351, DOI 10.1109/LICS.2003.1210075
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   McMillan K. L., 1993, Symbolic model checking
   McMillan KennethL., Symbolic Model Verifer (SMV) - Cadence Berkeley Laboratories Version
   McMillan KL, 2005, LECT NOTES COMPUT SC, V3440, P1
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   Monteiro PT, 2008, BIOINFORMATICS, V24, pI227, DOI 10.1093/bioinformatics/btn275
   Musuvathi M., 2006, Logic-Based Program Synthesis and Transformation. 16th International Symposium, LOPSTR 2006. Revised Selected Papers (Lecture Notes in Computer Science Vol.4407), P15
   Owens NDL, 2008, LECT NOTES COMPUT SC, V5132, P12, DOI 10.1007/978-3-540-85072-4_2
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Pasareanu CS, 2008, FORM METHOD SYST DES, V32, P175, DOI 10.1007/s10703-008-0049-6
   Pasareanu CS, 1999, LECT NOTES COMPUT SC, V1680, P168
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pratt V, 1995, LECT NOTES COMPUT SC, V915, P97
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Thomas D., 1998, VERILOG HARDWARE DES, V4th
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tkachuk O, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/ASE.2003.1240300
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
NR 97
TC 14
Z9 17
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 541
EP 555
DI 10.1007/s10270-012-0281-9
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pareto, L
   Eriksson, P
   Ehnebom, S
AF Pareto, Lars
   Eriksson, Peter
   Ehnebom, Staffan
TI Concern coverage in base station development: an empirical investigation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model driven development (MDD); Software architecture; Embedded systems;
   Telecommunication systems
ID MODEL
AB Contemporary model driven development tools only partially support the abstractions occurring in complex embedded systems development. This article presents an interpretive case study in which architectural concerns important to seven engineers in a large product developing organization were compared to the views actually provided by the organization's models. The paper's main finding is an empirically grounded catalogue of architectural concerns for a large, complex embedded systems project, and an assessment of the degree to which the studied organization has managed to realize support for these concerns within economical and organizational constraints. In the studied case, 114 different architectural concerns were found to be important to the interviewed engineers. Of this sample, 75% were documented in models, structured text, or informal documentation, whereas 47% of all documented concerns were modeled. The paper's conclusion is that current modeling languages and methods inadequately address the full set of concerns that are important to engineers in base station development.
C1 [Pareto, Lars] Chalmers, Dept Appl Informat Technol, S-41296 Gothenburg, Sweden.
   [Pareto, Lars] Univ Gothenburg, S-41296 Gothenburg, Sweden.
   [Eriksson, Peter; Ehnebom, Staffan] Ericsson AB, Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Ericsson
RP Pareto, L (corresponding author), Chalmers, Dept Appl Informat Technol, S-41296 Gothenburg, Sweden.
EM pareto@chalmers.se; peter.r.eriksson@ericsson.com;
   staffan.ehnebom@ericsson.com
FU Ericsson Software Research through Ericsson's Software Architecture and
   Quality Centre (SAQC)
FX This work has been supported by Ericsson Software Research through
   Ericsson's Software Architecture and Quality Centre (SAQC). TietoEnator
   AB and Ericsson AB provided access to informants, and engaged in the
   validation. Critique by anonymous reviewers led to recognition of
   semantically covered concerns and distinction between neglected and
   omitted concerns. The manifest questions in the future works sections,
   the questions related to decision making, the directions for further
   exploration set out, are due to the anonymous reviewers-who also
   substantially contributed to the refinement, presentation, and
   positioning of the paper's results.
CR Borjesson A., 2006, THESIS GOTHENBURG U
   Clements P., 2003, SEI S SOFTW
   Dietz J.L. G., 2006, ENTERPRISE ONTOLOGY
   Greefhorst D, 2006, INFORM SYST FRONT, V8, P103, DOI 10.1007/s10796-006-7975-x
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hogrefe D, 2005, COMPUT NETW, V49, P622, DOI 10.1016/j.comnet.2005.05.002
   Hunt SD, 2008, ORGAN STUD, V29, P1469, DOI 10.1177/0170840608099521
   International Organization for Standardization, 2007, 42010 ISOIEC
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   Johansson C., 2000, SEKE 99 P 11 INT C S
   Kaaranen H, 2005, UMTS NETWORKS: ARCHITECTURE, MOBILITY AND SERVICES, 2ND EDITION, P1, DOI 10.1002/047001105X
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Pahl C, 2009, INFORM SOFTWARE TECH, V51, P1739, DOI 10.1016/j.infsof.2009.06.001
   Pareto L., 2010, LNCS, V6395
   Pareto L., 2010, RES REPORTS SOFTWARE, P01
   ROCKSTROM A, 1982, IEEE T COMMUN, V30, P1310, DOI 10.1109/TCOM.1982.1095599
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tarr P., 1999, 21 INT C SOFTW ENG I
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   WOHLIN C, 2003, LNCS, V2765
   Yin R.K., 2003, CASE STUDY RES DESIG
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zachrisson P, 2007, MANAGING MODEL BASED
NR 26
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 409
EP 429
DI 10.1007/s10270-010-0188-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600009
DA 2024-07-18
ER

PT J
AU Anastasakis, K
   Bordbar, B
   Georg, G
   Ray, I
AF Anastasakis, Kyriakos
   Bordbar, Behzad
   Georg, Geri
   Ray, Indrakshi
TI On challenges of model transformation from UML to Alloy
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th MODELS Conference 2007
CY SEP 30-OCT 05, 2007
CL Nashville, TN
AB The Unified Modeling Language (UML) is the de facto language used in the industry for software specifications. Once an application has been specified, Model Driven Architecture (MDA) techniques can be applied to generate code from such specifications. Since implementing a system based on a faulty design requires additional cost and effort, it is important to analyse the UML models at earlier stages of the software development lifecycle. This paper focuses on utilizing MDA techniques to deal with the analysis of UML models and identify design faults within a specification. Specifically, we show how UML models can be automatically transformed into Alloy which, in turn, can be automatically analysed by the Alloy Analyzer. The proposed approach relies on MDA techniques to transform UML models to Alloy. This paper reports on the challenges of the model transformation from UML class diagrams and OCL to Alloy. Those issues are caused by fundamental differences in the design philosophy of UML and Alloy. To facilitate better the representation of Alloy concepts in the UML, the paper draws on the lessons learnt and presents a UML profile for Alloy.
C1 [Anastasakis, Kyriakos; Bordbar, Behzad] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Georg, Geri; Ray, Indrakshi] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 University of Birmingham; Colorado State University
RP Anastasakis, K (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM K.Anastasakis@cs.bham.ac.uk; B.Bordbar@cs.bham.ac.uk;
   georg@cs.colostate.edu; iray@cs.colostate.edu
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Agrawal A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ASE.2003.1240339
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Akehurst D, 2007, SOFTW SYST MODEL, V6, P3, DOI 10.1007/s10270-006-0020-1
   Akehurst DH, 2006, LECT NOTES COMPUT SC, V4199, P351
   ANASTASAKIS K, 2007, USING ALLOY ANAL MOD
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], LNCS
   [Anonymous], 2019, LCP ISABELLE 2019
   Artale A, 1996, DATA KNOWL ENG, V20, P347, DOI 10.1016/S0169-023X(96)00013-4
   BABKIN E, 2007, THESIS COMPUTER SCI
   Beckert Bernhard, 2007, Verification of Object-oriented Software: The KeY Approach, DOI DOI 10.1007/978-3-540-69061-0
   Bordbar B., 2005, IADIS AC, P209
   Bordbar B, 2006, LECT NOTES COMPUT SC, V3888, P44
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   Brucker Achim D., 2007, THESIS ETH ZURICH
   DENNIS G, 2004, ISSTA 04, P165
   EVANS A, 1999, P OOPSLA 99 WORKSH B
   FLEUREY F, 2004, 1 INT WORKSH MOD DES, P29
   FOWLER M, 2003, OBJECT TECHNOLOGY SE
   GEORG G, 2001, LNI P, V7, P128
   GEORG G, SPECIAL ISS IN PRESS, DOI DOI 10.1016/J.INFSOF.2008.05.004
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1618, P92
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   HAREL D, 2000, FOUNDAT COMPUT, P3
   HE Y, 2006, SOFTWARE ENG RES PRA, V2, P671
   Henderson-Sellers B, 1999, TOOLS, V29, P236, DOI 10.1109/TOOLS.1999.779016
   Jackson D., 1999, COMP OBJECT MODELLIN
   JACKSON D, ALLOY ANAL WEBSITE
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   KIM SK, 2002, THESIS U QUEENSLAND
   KLEPPE A, 2003, ADDISONWESLEY OBJECT
   Kuster J. M., 2007, LNCS, V4364, P193
   Lowe G., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P147
   Marcano R., 2002, Workshop on consistency problems in UML-based software development. 5th International Conference on the Unified Modeling Language, P91
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   Olsen GK, 2007, LECT NOTES COMPUT SC, V4530, P144
   *OMG, FORMAL050705 OMG
   *OMG, FORMAL060501 OMG
   *OMG, FORMAL050704 OMG
   *OMG, PTC061101 OMG
   OMG, FORMAL20071104 OMG
   OMG, FORMAL060101 OMG
   OMGUnifiedModeling Languaje (OMGUML), FORMAL20071102 OMG
   PONS C, 2008, MBT 2008
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Richters M., 2002, BISS MONOGRAPHS, V14
   RUMBAUGH J, 1999, ADDISONWESLEY OBJECT
   Shlyakhter I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P94, DOI 10.1109/ASE.2003.1240298
   Taghdiri M, 2003, LECT NOTES COMPUT SC, V2767, P240
   *TLSWG, 1996, SSL 3 0 SPEC
   TORLAK E, 2005, MITCSAILTR2005066
   *U KENT SCH COMP, KENT MOD FRAM
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
   Wallace C, 2003, INFORM SOFTWARE TECH, V45, P1031, DOI 10.1016/S0950-5849(03)00131-9
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   ZITO A, 2006, P 1 ALL WORKSH ALL 0, P86
NR 59
TC 111
Z9 124
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 69
EP 86
DI 10.1007/s10270-008-0110-3
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 526UZ
UT WOS:000272321500005
DA 2024-07-18
ER

PT J
AU Dingel, J
   Diskin, Z
   Zito, A
AF Dingel, J.
   Diskin, Z.
   Zito, A.
TI Understanding and improving UML package merge
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE UML; semantics formalization; model composition; metamodeling techniques
AB Package merge allows the content of one package to be combined with that of another package. Package merge is used extensively in the UML 2 specification to modularize the definition of the UML 2 meta model and to define the four compliance levels of UML 2. Package merge is a novel construct in UML and currently not well understood. This paper summarizes our work to understand and improve package merge. First, we identify ambiguous and missing rules in the package merge definition and suggest corrections. Then, we formalize package merge and analyze it with respect to some desirable properties. Our analyses employs Alloy, a first-order modelling language with tool support, and concepts from mathematical logic which allow us to develop a general taxonomy of package extension mechanisms. The analyses reveal the unexpected failure of important properties.
C1 [Dingel, J.; Diskin, Z.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Diskin, Z.] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
   [Zito, A.] IBM Rat Software, Kanata, ON, Canada.
   [Dingel, J.] Tech Univ Carolo Wilhelmina Braunschweig, Inst Software & Syst Engn, Braunschweig, Germany.
C3 Queens University - Canada; University of Toronto; International
   Business Machines (IBM); Braunschweig University of Technology
RP Dingel, J (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM dingel@cs.queensu.ca; zdiskin@cs.queensu.ca; alanna_zito@ca.ibm.com
CR [Anonymous], 1977, Studies in Logic and the Foundations of Mathematics
   BAUDRY B, 2005, INT WORKSH ASP OR MO
   BERNSTEIN P, 2003, C INN DAT RES CIDR 0
   Bernstein PA, 2000, SIGMOD REC, V29, P55, DOI 10.1145/369275.369289
   Bezivin J., 2005, 0501 LINA
   Bordbar B., 2005, IADIS INT C APPL COM
   Bouzitouna S., 2005, P INT C SOFTW ENG RE
   Brunet G, 2006, LECT NOTES COMPUT SC, V4085, P98
   Clark T, 2002, LECT NOTES COMPUT SC, V2306, P159
   D'Souza D, 1999, LECT NOTES COMPUT SC, V1723, P265
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   Diskin Z, 2000, LECT NOTES ARTIF INT, V1889, P345
   DISKIN Z, 1999, 8 OOPSLA WORKSH BEH
   GEORG G, 2003, 4 WORKSH ASP OR SOFT
   GOGUEN JA, 1992, J ACM, V39, P95, DOI 10.1145/147508.147524
   Gordon M., 1993, INTRO HOL
   JACKSON A, 2006, 2 WORKSH MOD ASP HAN
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jossic A., 2007, INT C SYST ENG MOD I
   Kolovos Dimitrios S., 2006, LNCS
   NAUMENKO A, 2002, LECT NOTES COMPUT SC, V2460, P2
   *OBJ MAN GROUP, 2005, MOF 2 0 XMI MAPP SPE
   *OBJ MAN GROUP, 2007, UN MOD LANG INFR STR
   *OBJ MAN GROUP, 2007, UN MOD LANG SUP VERS
   Object Management Group, 2006, MET OBJ FAC MOF COR
   POTTINGER RA, 2003, UWCSE030203
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   RUMBAUGH J, 2005, OBJECT TECHNOLOGY SE
   Selic B, 2006, IBM SYST J, V45, P607, DOI 10.1147/sj.453.0607
   SELIC B, 2005, WHATS NEW UML 2 0 IB
   Simons AJH, 2005, Sixth Mexican International Conference on Computer Science, Proceedings, P121, DOI 10.1109/ENC.2005.52
   STRAW G, 2004, 7 INT C UML MOD LANG
   *TRM GROUP, 1995, BCS PRACT SER
   VARRO D, 2003, J SOFTWARE SYSTEMS M, V2, P187
   Zito A, 2006, THESIS QUEENS U
   [No title captured]
NR 36
TC 26
Z9 26
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 443
EP 467
DI 10.1007/s10270-007-0073-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 348CI
UT WOS:000259188200005
DA 2024-07-18
ER

PT J
AU Archibald, B
   Calder, M
   Sevegnani, M
   Xu, MW
AF Archibald, Blair
   Calder, Muffy
   Sevegnani, Michele
   Xu, Mengwei
TI Quantitative modelling and analysis of BDI agents
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE BDI agents; Quantitative analysis; Bigraphs; Probabilistic modelling;
   Robotic software
ID VERIFICATION
AB Belief-desire-intention (BDI) agents are a popular agent architecture. We extend conceptual agent notation (Can)-a BDI programming language with advanced features such as failure recovery and declarative goals-to include probabilistic action outcomes, e.g. to reflect failed actuators, and probabilistic policies, e.g. for probabilistic plan and intention selection. The extension is encoded in Milner's bigraphs. Through application of our BigraphER tool and the PRISM model checker, the probability of success (intention completion) under different probabilistic outcomes and plan/event/intention selection strategies can be investigated and compared. We present a smart manufacturing use case. A significant result is that plan selection has limited effect compared with intention selection. We also see that the impact of action failures can be marginal-even when failure probabilities are large-due to the agent making smarter choices.
C1 [Archibald, Blair; Calder, Muffy; Sevegnani, Michele; Xu, Mengwei] Univ Glasgow, Sch Comp Sci, Glasgow G12 8QQ, Scotland.
C3 University of Glasgow
RP Xu, MW (corresponding author), Univ Glasgow, Sch Comp Sci, Glasgow G12 8QQ, Scotland.
EM blair.archibald@glasgow.ac.uk; muffy.calder@glasgow.ac.uk;
   michele.sevegnani@glasgow.ac.uk; mengwei.xu@glasgow.ac.uk
OI Xu, Mengwei/0000-0003-4978-3061
FU Engineering and Physical Sciences Research Council [EP/S035362/1,
   EP/N007565/1]; EPSRC [EP/N007565/1] Funding Source: UKRI; SPF
   [EP/S035362/1] Funding Source: UKRI
FX This work is supported by the Engineering and Physical Sciences Research
   Council, under PETRAS SRF grants MAGIC and FARM(EP/S035362/1) and S4:
   Science of Sensor Systems Software (EP/N007565/1).
CR Abate A, 2021, APPL INTELL, V51, P6569, DOI 10.1007/s10489-021-02658-y
   Abu Bakar N, 2018, APPL INTELL, V48, P1251, DOI 10.1007/s10489-017-1112-z
   Archibald B., 2022, P INT C SOFTW ENG KN, P136
   Archibald B, 2022, FORM ASP COMPUT, V34, DOI 10.1145/3545180
   Archibald B, 2021, LECT NOTES COMPUT SC, V13085, P262, DOI 10.1007/978-3-030-92124-8_15
   Archibald B, 2022, SCI COMPUT PROGRAM, V215, DOI 10.1016/j.scico.2021.102760
   Archibald B, 2020, LECT NOTES COMPUT SC, V12150, P3, DOI 10.1007/978-3-030-51372-6_1
   Bauters K, 2017, J ARTIF INTELL RES, V58, P731, DOI 10.1613/jair.5287
   Benfield S.S., 2006, P AUT AG MULT SYST A, P10, DOI DOI 10.1145/1160633.1160938
   Bordini R., 2007, PROGRAMMING MULTIAGE
   Bordini R. H., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1294
   Bordini RH, 2006, AUTON AGENT MULTI-AG, V12, P239, DOI 10.1007/s10458-006-5955-7
   Braubach L., 2014, ADV INTELLIGENT COMP, P107
   Chen H, 2017, J IND INTEGR MANAG, V2, DOI 10.1142/S2424862217500129
   Dastani M, 2008, AUTON AGENT MULTI-AG, V16, P214, DOI 10.1007/s10458-008-9036-y
   Dekhtyar MI, 2008, LECT NOTES COMPUT SC, V4800, P256, DOI 10.1007/978-3-540-78127-1_14
   Dennis LA, 2016, AUTOMAT SOFTW ENG, V23, P305, DOI 10.1007/s10515-014-0168-9
   Dennis LA, 2018, J LOGIC COMPUT, V28, P499, DOI 10.1093/logcom/exv002
   Dennis LA, 2012, AUTOMAT SOFTW ENG, V19, P5, DOI 10.1007/s10515-011-0088-x
   Di Pierro A, 1998, 1998 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, PROCEEDINGS, P174, DOI 10.1109/ICCL.1998.674168
   Dries A, 2015, LECT NOTES ARTIF INT, V9286, P312, DOI 10.1007/978-3-319-23461-8_37
   Gluz Joao, 2014, 6th International Conference on Agents and Artificial Intelligence (ICAART 2014). Proceedings, P121
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hindriks K. V., 1999, Autonomous Agents and Multi-Agent Systems, V2, P357, DOI 10.1023/A:1010084620690
   Izzo P, 2016, IEEE DECIS CONTR P, P4985, DOI 10.1109/CDC.2016.7799031
   Jensen AB, 2022, ICAART, P245, DOI 10.5220/0010838700003116
   Keller T., 2012, 22 INT C AUTOMATED P
   Kieling G. L., 2011, Proceedings of the 2011 International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2011), P115, DOI 10.1109/CISIS.2011.26
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Logan B, 2017, AAMAS'17: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P768
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Ma JB, 2014, PROC INT C TOOLS ART, P83, DOI 10.1109/ICTAI.2014.23
   McDermott D., 1998, PDDL-The Planning Domain Definition Language
   Milner R., 2009, The Space and Motion of Communicating Agents, DOI DOI 10.1017/CBO9780511626661
   Moors A, 2013, EMOT REV, V5, P119, DOI 10.1177/1754073912468165
   Nide N., 2009, P CLIMA 09, P71
   Nugues P. M., 2006, An Introduction to ProLog
   Padgham L., 2013, P 12 INT C AUT AG MU, P1013, DOI DOI 10.5555/2484920.2485080
   Pallottino L, 2006, IEEE INT CONF ROBOT, P2448, DOI 10.1109/ROBOT.2006.1642069
   Pokahr A., 2013, Multiagent Systems and Applications, P21, DOI DOI 10.1007/978-3-642-33323-1
   Prosser P., 2011, J EXP ALGORITHMICS J, V16, P1
   Rao A. S., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P42, DOI 10.1007/BFb0031845
   Sardina S, 2011, AUTON AGENT MULTI-AG, V23, P18, DOI 10.1007/s10458-010-9130-9
   Schadd MPD, 2012, KNOWL-BASED SYST, V34, P3, DOI 10.1016/j.knosys.2011.08.008
   Sevegnani M, 2016, LECT NOTES COMPUT SC, V9780, P494, DOI 10.1007/978-3-319-41540-6_27
   Treur J., 2016, NETWORK ORIENTED MOD, DOI [10.1007/978-3-319-45213-5, DOI 10.1007/978-3-319-45213-5]
   van der Wal CN, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13094623
   Visser S., 2011, 22 INT JOINT C ART I
   Wal C. Natalie, 2017, Transactions on Computational Collective Intelligence XXVII. LNCS 10480, P139, DOI 10.1007/978-3-319-70647-4_11
   Winikoff M, 2005, MU S ART SOC SIM ORG, V15, P175, DOI 10.1007/0-387-26350-0_7
   Winikoff M., 2002, 8 INT C PRINC KNOWL
   Xu MW, 2019, PROC INT C TOOLS ART, P85, DOI 10.1109/ICTAI.2019.00021
   Yao Y, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P1227
   Younes H. L., 2004, Techn. Rep. CMU-CS-04-162, V2, P99
NR 54
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2024
VL 23
IS 2
BP 343
EP 367
DI 10.1007/s10270-023-01121-5
EA AUG 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN0W0
UT WOS:001060039900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gleirscher, M
   van de Pol, J
   Woodcock, J
AF Gleirscher, Mario
   van de Pol, Jaco
   Woodcock, Jim
TI A manifesto for applicable formal methods
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal methods; Formal verification; Software engineering; Tools;
   Research evaluation; Research transfer
ID SYMBOLIC MODEL CHECKING; SOFTWARE; VERIFICATION; MYTHS; CODE
AB Recently, formal methods have been used in large industrial organisations (including AWS, Facebook/Meta, and Microsoft) and have proved to be an effective part of a software engineering process finding important bugs. Perhaps because of that, practitioners are interested in using them more often. Nevertheless, formal methods are far less applied than expected, particularly for safety-critical systems where they are strongly recommended and have the most significant potential. We hypothesise that formal methods still seem not applicable enough or ready for their intended use in such areas. In critical software engineering, what do we mean when we speak of a formal method? And what does it mean for such a method to be applicable both from a scientific and practical viewpoint? Based on what the literature tells about the first question, with this manifesto, we identify key challenges and lay out a set of guiding principles that, when followed by a formal method, give rise to its mature applicability in a given scope. Rather than exercising criticism of past developments, this manifesto strives to foster increased use of formal methods in any appropriate context to the maximum benefit.
C1 [Gleirscher, Mario] Univ Bremen, Bibliothekstr 5, D-28359 Bremen, Germany.
   [Gleirscher, Mario] Univ York, Assuring Auton Int Programme AAIP, Deramore Lane, York YO10 5GH, England.
   [van de Pol, Jaco; Woodcock, Jim] Aarhus Univ, Abogade 34, DK-8200 Aarhus, Denmark.
   [van de Pol, Jaco] Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
   [Woodcock, Jim] Univ York, Deramore Lane, York YO10 5GH, England.
C3 University of Bremen; University of York - UK; Aarhus University;
   University of Twente; University of York - UK
RP Gleirscher, M (corresponding author), Univ Bremen, Bibliothekstr 5, D-28359 Bremen, Germany.; Gleirscher, M (corresponding author), Univ York, Assuring Auton Int Programme AAIP, Deramore Lane, York YO10 5GH, England.
EM gleirscher@uni-bremen.de; jaco@cs.au.dk; jim.woodcock@york.ac.uk
OI van de Pol, J.C./0000-0003-4305-0625; Gleirscher,
   Mario/0000-0002-9445-6863; Woodcock, James/0000-0001-7955-2702
CR Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   Ahrendt W., 2016, Lecture notes in computer science, V10001, DOI DOI 10.1007/978-3-319-49812-6
   Aichernig B.K., 2003, LNCS, V2757
   Andersen L. O., 1994, Ph.D. thesis
   Andreasen E. S., 2017, P 6 ACM SIGPLAN INT, P31, DOI [10.1145/3088515.3088521, DOI 10.1145/3088515.3088521]
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 2002, 13568 ISO IEC JTC Z
   [Anonymous], 1980, Software Development: A Rigorous Approach
   [Anonymous], 2010, Z100 ITU SDL
   [Anonymous], 1989, 8807 ISO
   [Anonymous], 1997, Fourth NASA Langley Formal Methods Workshop (LFM)
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   BARROCA LM, 1992, COMPUT J, V35, P579, DOI 10.1093/comjnl/35.6.579
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Baudin P, 2021, COMMUN ACM, V64, P56, DOI 10.1145/3470569
   Becker C. etal., 2015, SUSTAINABILITY DESIG
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Ben-David S, 2003, FORM METHOD SYST DES, V22, P101, DOI 10.1023/A:1022905120346
   Bertot Y., 2004, TEXT THEORET COMP S
   Blom Stefan, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P102, DOI 10.1007/978-3-319-66845-1_7
   Boulanger J-L., 2012, IND USE FORMAL METHO, DOI 10.1002/9781118561829
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   Broy M, 2023, COMMUN ACM, V66, P62, DOI 10.1145/3569927
   Broy M, 2010, COMPUT J, V53, P1758, DOI 10.1093/comjnl/bxq005
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Cantwell Smith Brian., 1985, ACM SIGCAS Computers and Society, V14, P18, DOI 10.1145/379486.379512
   Chien AA, 2017, COMMUN ACM, V60, P5, DOI 10.1145/3137136
   Choi BH, 2021, COMMUN ACM, V64, P22, DOI 10.1145/3457193
   Chong N, 2021, SOFTWARE PRACT EXPER, V51, P772, DOI 10.1002/spe.2949
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Collette P, 2000, FOUNDAT COMPUT, P277
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Ferrari A, 2022, IEEE T SOFTWARE ENG, V48, P4675, DOI 10.1109/TSE.2021.3124677
   Ferrari A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3520480
   Fitzgerald J, 2007, LECT NOTES COMPUT SC, V4700, P237
   Fix L, 2008, LECT NOTES COMPUT SC, V5000, P139
   Garavel H, 2020, LECT NOTES COMPUT SC, V12327, P3, DOI 10.1007/978-3-030-58298-2_1
   Garlan D., 1992, Software Engineering Education. SEI Conference 1992 Proceedings, P131
   Gleirscher M., 2021, EPTCS, V349
   Gleirscher M, 2023, SCI COMPUT PROGRAM, V226, DOI 10.1016/j.scico.2023.102930
   Gleirscher M, 2020, EMPIR SOFTW ENG, V25, P4473, DOI 10.1007/s10664-020-09836-5
   Gleirscher M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3357231
   Gnesi S., 2013, FORMAL METHODS IND C
   GormLarsen P., 2010, PROC FM AM, P13
   Gotterbarn D, 1997, COMMUN ACM, V40, P110, DOI 10.1145/265684.265699
   Hahnle R., 2023, ETAPS BLOG
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harrison J, 2003, IEEE S LOG, P45, DOI 10.1109/LICS.2003.1210044
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heiser G, 2020, COMMUN ACM, V63, P72, DOI 10.1145/3378426
   Hentschel M, 2016, LECT NOTES COMPUT SC, V9681, P3, DOI 10.1007/978-3-319-33693-0_1
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Hoare CAR, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592439
   HOARE CAR, 1981, COMMUN ACM, V24, P75, DOI 10.1145/358549.358561
   Hoare T., 1998, UNIFYING THEORIES PR
   Huber F, 1996, LECT NOTES COMPUT SC, V1135, P467
   Huth M., 2004, Logic in Computer Science: Modelling and Reasoning About Systems, DOI [DOI 10.1017/CBO9780511810275, 10.1017/ cbo9780511810275]
   KAPOR M, 1991, DR DOBBS J, V16, P62
   Ladkin P.B., 2018, 61508 IEC BIEL U FAC
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Leino KRM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1488, DOI 10.1109/ICSE.2013.6606754
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Lichtenberger F., 2015, FMSEE T CEUR WORKSHO, V1385
   Margaria T, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P431, DOI 10.1109/ECBS.2005.59
   McCormick JW., 2015, BUILDING HIGH INTEGR, DOI [1328.68009, DOI 10.1017/CBO9781139629294]
   McDermid J. etal., 1998, IND APPL FORM METH 3
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B., 2023, BLOG CACM
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Nipkow T., 2014, CONCRETE SEMANTICS I, DOI [DOI 10.1007/978-3-319-10542-0, 10.1007/ 978-3-319-10542-0]
   O'Hearn P, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P13, DOI 10.1145/3209108.3209109
   Owre S., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P411
   Owre Sam., 1992, P 11 INT C AUTOMATED, P748
   Parker D., 2022, PRISM MODEL CHECKER
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   Paulson LC, 2019, FORM ASP COMPUT, V31, P675, DOI 10.1007/s00165-019-00492-1
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   Rae A, 2020, SAFETY SCI, V126, DOI 10.1016/j.ssci.2020.104654
   Rager DL, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P149, DOI 10.1109/FMCAD.2016.7886673
   RUSHBY J, 1994, RELIAB ENG SYST SAFE, V43, P189, DOI 10.1016/0951-8320(94)90065-5
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   ter Beek MH., 2022, SOFTWARE, V1, P381, DOI [10.3390/software1040017, DOI 10.3390/SOFTWARE1040017]
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   Welsh M, 2023, COMMUN ACM, V66, P34, DOI 10.1145/3570220
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 95
TC 0
Z9 0
U1 4
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1737
EP 1749
DI 10.1007/s10270-023-01124-2
EA AUG 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001049986200001
OA Green Submitted, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Jalali, A
AF Jalali, Amin
TI Evaluating user acceptance of knowledge-intensive business process
   modeling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling; Knowledge-intensive; Case management; CMMN;
   DCR; Declare
ID UNDERSTANDABILITY; COMPLEXITY; ISSUE
AB Case Management has been evolving to support knowledge-intensive business process management, resulting in different modeling languages, e.g., Declare, Dynamic Condition Response (DCR), and Case Management Model and Notation (CMMN). A language will die if users do not accept and use it in practice-similar to extinct human languages. Thus, evaluating how users perceive languages is important to improve them. Although some studies have investigated how the process designers perceived Declare and DCR, there is a lack of research on how they perceive CMMN-especially in comparison with other languages. Therefore, this paper investigates and compares how process designers perceive these languages based on the Technology Acceptance Model. The paper includes two studies conducted in 2020 and 2022, both performed by educating participants through a course, with feedback on their assignments, to reduce biases. The perceptions are collected through questionnaires before and after feedback on the final practice. Results show that the perceptions change is insignificant after feedback due to the participants being well-trained. The reliability of responses was tested using Cronbach's alpha. The results of the first study show that both DCR and CMMN were perceived as having acceptable usefulness and ease of use, but CMMN was perceived as significantly better than DCR in terms of ease of use. The results of the second study show that only DCR was perceived significantly better than Declare in terms of usefulness. The participants' feedback shows potential areas for improvement in languages and tool support to enhance perceived usefulness and ease of use.
C1 [Jalali, Amin] Stockholm Univ, Forum 100, S-16440 Kista, Sweden.
C3 Stockholm University
RP Jalali, A (corresponding author), Stockholm Univ, Forum 100, S-16440 Kista, Sweden.
EM aj@dsv.su.se
RI Jalali, Amin/AAE-7345-2020
OI Jalali, Amin/0000-0002-6633-8587
CR Andaloussi AA, 2021, SOFTW SYST MODEL, V20, P1437, DOI 10.1007/s10270-020-00811-8
   Alman A, 2020, 2020 2ND INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2020), P121, DOI 10.1109/ICPM49681.2020.00027
   Andaloussi Amine Abbad, 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P475, DOI 10.1007/978-3-030-11641-5_37
   Andaloussi AA, 2020, LECT NOTES COMPUT SC, V12168, P417, DOI 10.1007/978-3-030-58666-9_24
   Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   Arachchilage NAG, 2013, COMPUT HUM BEHAV, V29, P706, DOI 10.1016/j.chb.2012.12.018
   Bider I, 2016, IEEE INT ENTERP, P33
   Bose R. P. Jagadeesh Chandra, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P97, DOI 10.1007/978-3-642-40176-3_9
   Burattin A, 2016, EXPERT SYST APPL, V65, P194, DOI 10.1016/j.eswa.2016.08.040
   Davis F. D., 1985, A technology acceptance model for empirically testing new end-user information systems: Theory and results, DOI DOI 10.1016/S0378-7206(01)00143-4
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Debois S, 2020, LECT NOTES COMPUT SC, V12546, P368, DOI 10.1007/978-3-030-63461-2_20
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Eberlein M, 2011, B ECON RES, V63, P177, DOI 10.1111/j.1467-8586.2009.00345.x
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Hildebrandt Thomas, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P343, DOI 10.1007/978-3-642-29320-7_23
   Hildebrandt T., 2010, PLACES WORKSH
   Hildebrandt T.T., 2011, ARXIV
   Hull R., 1997, P 16 ACMSIGACTSIG MO, P51, DOI DOI 10.1145/2002259.2002270
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Jalali Amin, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P147, DOI 10.1007/978-3-030-79186-5_10
   Jalali Amin, 2018, Perspectives in Business Informatics Research. 17th International Conference, BIR 2018. Proceedings. Lecture Notes in Business Information Processing (LNBIP 330), P250, DOI 10.1007/978-3-319-99951-7_17
   Jalali A., 2018, COMPLEX SYST INFORM, V15, P24, DOI [10.7250/csimq.2018-15.02, DOI 10.7250/CSIMQ.2018-15.02]
   Jalali A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1931
   Jost G, 2017, DECIS SUPPORT SYST, V103, P58, DOI 10.1016/j.dss.2017.09.003
   La Rosa M, 2011, IEEE T IND INFORM, V7, P614, DOI 10.1109/TII.2011.2166795
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   Maggi Fabrizio M., 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P433, DOI 10.1007/978-3-642-38709-8_28
   Maggi Fabrizio M., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P270, DOI 10.1007/978-3-642-31095-9_18
   Maggi F.M., 2013, BPM DEMOS, P1021
   Marquard M, 2015, LECT NOTES COMPUT SC, V9253, P209, DOI 10.1007/978-3-319-23063-4_15
   Masrom M., 2007, 12 INT C ED 21 24 MA
   Minhee Chae, 2002, Electronic Markets, V12, P38, DOI 10.1080/101967802753433254
   Object Management Group (OMG®), CAS MAN MOD NOT CMMN
   Palm Jean-Marc, 2006, AMIA Annu Symp Proc, P614
   Pesic, 2010, MODERN BUSINESS PROC, P327
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pesic Maja., 2008, CONSTRAINT BASED WOR
   Pichler P, 2012, LECT NOTES BUS INF P, V99, P383
   Reijers Hajo A., 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P307, DOI 10.1007/978-3-642-40176-3_26
   Routis I, 2021, SOFTW SYST MODEL, V20, P2089, DOI 10.1007/s10270-021-00880-3
   Routis I, 2020, SOFTW SYST MODEL, V19, P1395, DOI 10.1007/s10270-020-00802-9
   Routis I, 2018, LECT NOTES BUS INF P, V318, P199, DOI 10.1007/978-3-319-91704-7_13
   Sànchez-Ferreres J, 2020, IEEE T LEARN TECHNOL, V13, P552, DOI 10.1109/TLT.2020.2983916
   Slaats T, 2020, J DATA SEMANT, V9, P3, DOI 10.1007/s13740-020-00112-9
   Turetken O., 2019, BUS INFORM SYST ENG+, P1
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   Weber B, 2009, LECT NOTES COMPUT SC, V5565, P470, DOI 10.1007/978-3-642-02144-2_37
   Westergaard M., 2013, BPM DEMOS
   Zugal S, 2015, SOFTW SYST MODEL, V14, P1081, DOI 10.1007/s10270-013-0356-2
NR 53
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1803
EP 1826
DI 10.1007/s10270-023-01120-6
EA AUG 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001039663100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Roy, M
   Das, S
   Deb, N
   Cortesi, A
   Chaki, R
   Chaki, N
AF Roy, Mandira
   Das, Souvick
   Deb, Novarun
   Cortesi, Agostino
   Chaki, Rituparna
   Chaki, Nabendu
TI Correlating contexts and NFR conflicts from event logs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Sequential rule mining; Context correlation; Context-NFR conflict
   correlation; Goal models
AB In the design of autonomous systems, it is important to consider the preferences of the interested parties to improve the user experience. These preferences are often associated with the contexts in which each system is likely to operate. The operational behavior of a system must also meet various non-functional requirements (NFRs), which can present different levels of conflict depending on the operational context. This work aims to model correlations between the individual contexts and the consequent conflicts between NFRs. The proposed approach is based on analyzing the system event logs, tracing them back to the leaf elements at the specification level and providing a contextual explanation of the system's behavior. The traced contexts and NFR conflicts are then mined to produce Context-Context and Context-NFR conflict sequential rules. The proposed Contextual Explainability (ConE) framework uses BERT-based pre-trained language models and sequential rule mining libraries for deriving the above correlations. Extensive evaluations are performed to compare the existing state-of-the-art approaches. The best-fit solutions are chosen to integrate within the ConE framework. Based on experiments, an accuracy of 80%, a precision of 90%, a recall of 97%, and an F1-score of 88% are recorded for the ConE framework on the sequential rules that were mined.
C1 [Roy, Mandira; Chaki, Rituparna; Chaki, Nabendu] Univ Calcutta, Kolkata, India.
   [Deb, Novarun] Indian Inst Informat Technol, Vadodara, India.
   [Das, Souvick; Cortesi, Agostino] CaFoscari Univ, Venice, Italy.
C3 University of Calcutta; Universita Ca Foscari Venezia
RP Roy, M (corresponding author), Univ Calcutta, Kolkata, India.
EM mrcomp_rs@caluniv.ac.in; souvick.das@unive.it;
   novarun_deb@iiitvadodara.ac.in; cortesi@unive.it; rchaki@ieee.org;
   nabendu@ieee.org
RI CHAKI, NABENDU/A-5869-2015; Cortesi, Agostino/F-9637-2011
OI Cortesi, Agostino/0000-0002-0946-5440; ROY, MANDIRA/0000-0002-3131-6513;
   DAS, SOUVICK/0000-0002-3314-2537
FU SPIN-2021 Ressa_Rob - Ca'Foscari University; iNEST-Interconnected Nord
   Est Innovation Ecosystem; PNRR (Mission 4.2, Investment 1.5),
   NextGeneration EU [ECS00000043]
FX The work was partially supported by SPIN-2021 Ressa_Rob, funded by
   Ca'Foscari University and by iNEST-Interconnected Nord Est Innovation
   Ecosystem, funded by PNRR (Mission 4.2, Investment 1.5), NextGeneration
   EU-Project ID: ECS00000043.
CR Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Alsentzer E. etal, 2019, ARXIV, DOI DOI 10.48550/ARXIV.1904.03323
   Amyot D., 2012, LECT NOTES COMPUTER, P201
   [Anonymous], 2016, JUCMNAV 700
   Banerjee Shreya, 2016, International Journal of Metadata, Semantics and Ontologies, V11, P39
   Banerjee S, 2017, INT J HEALTHC TECHNO, V16, P271, DOI 10.1504/IJHTM.2017.088869
   Banerjee S, 2017, LECT NOTES COMPUT SC, V10244, P240, DOI 10.1007/978-3-319-59105-6_21
   Beaudouin Valerie, 2020, SOCIAL SCI RES NETW
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Botangen K.A., 2018, P AUSTR COMP SCI WEE, DOI 10.1145/3167918.3167945
   Carvalho RM, 2017, INT REQUIR ENG CONF, P544, DOI 10.1109/RE.2017.51
   Chazette L, 2021, INT REQUIR ENG CONF, P197, DOI 10.1109/RE51729.2021.00025
   Chazette L, 2020, REQUIR ENG, V25, P493, DOI 10.1007/s00766-020-00333-1
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Dalianis, 2018, CLIN TEXT MINING, DOI DOI 10.1007/978-3-319-78503-5_6
   Das Souvick, 2021, SN Computer Science, V2, P1
   Devlin J., 2018, BERT PRE TRAINING DE
   Dieber B., 2020, Studies in Computational Intelligence, VVolume 4, P183
   Doran Derek, 2017, arXiv
   Ferrara P, 2021, INT J SOFTW TOOLS TE, V23, P71, DOI 10.1007/s10009-020-00592-x
   Fournier-Viger P, 2016, LECT NOTES ARTIF INT, V9853, P36, DOI 10.1007/978-3-319-46131-1_8
   Fournier-Viger P, 2015, IEEE T KNOWL DATA EN, V27, P2203, DOI 10.1109/TKDE.2015.2405509
   Fournier-Viger P, 2014, LECT NOTES COMPUT SC, V8819, P108, DOI 10.1007/978-3-319-12571-8_10
   Fournier-Viger P, 2012, KNOWL-BASED SYST, V25, P63, DOI 10.1016/j.knosys.2011.07.005
   Goutte C, 2005, LECT NOTES COMPUT SC, V3408, P345
   Gupta M, 2020, IEEE ACCESS, V8, P34564, DOI 10.1109/ACCESS.2020.2975142
   Hamel L, 2006, PROCEEDINGS OF THE 2006 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN BIOINFORMATICS AND COMPUTATIONAL BIOLOGY, P148
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Jakulin A., 2005, Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining, P108, DOI DOI 10.1145/1081870.1081886
   Johnson AEW, 2016, SCI DATA, V3, DOI 10.1038/sdata.2016.35
   Kim B., 2015, iBCM: Interactive Bayesian case model empowering humans via intuitive interaction
   Koh PW, 2017, PR MACH LEARN RES, V70
   Konstan JA, 2012, USER MODEL USER-ADAP, V22, P101, DOI 10.1007/s11257-011-9112-x
   Kulesza T, 2013, S VIS LANG HUM CEN C, P3, DOI 10.1109/VLHCC.2013.6645235
   Liu Yinhan, 2019, ARXIV190711692
   Lu Y., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2202.10326
   Mairiza D, 2010, ENASE 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P20
   Mandal AK, 2019, SOFTWARE PRACT EXPER, V49, P1131, DOI 10.1002/spe.2698
   Mozina M, 2004, LECT NOTES ARTIF INT, V3202, P337
   Pika A, 2020, INT J ENV RES PUB HE, V17, DOI 10.3390/ijerph17051612
   Rasmy L, 2021, NPJ DIGIT MED, V4, DOI 10.1038/s41746-021-00455-y
   Reimers N, 2019, ARXIV
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roy M, 2021, INT REQUIR ENG CONF, P442, DOI 10.1109/RE51729.2021.00061
   Roy M, 2021, INNOV SYST SOFTW ENG, V17, P187, DOI 10.1007/s11334-021-00406-6
   Roy M, 2021, SYSTEMS ENG, V24, P158, DOI 10.1002/sys.21572
   Sadeghi M, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P181, DOI 10.1109/REW53955.2021.00033
   Samin H, 2020, INT REQUIR ENG CONF, P416, DOI 10.1109/RE48521.2020.00061
   Sanh V., 2019, P 33 C NEURAL INFORM
   Selvaraju RR, 2020, INT J COMPUT VISION, V128, P336, DOI [10.1007/s11263-019-01228-7, 10.1109/ICCV.2017.74]
   Sitikhu P., 2019, P 2019 ARTIFICIAL IN, VVolume 1, P1
   Tintarev N, 2012, USER MODEL USER-ADAP, V22, P399, DOI 10.1007/s11257-011-9117-5
   Vultureanu-Albisi A, 2021, INT CONF SYST THEO, P701, DOI 10.1109/ICSTCC52150.2021.9607106
   White R., 2018, IEEE INT C INTELL RO, DOI [10.1109/IROS.2018.859446, DOI 10.1109/IROS.2018.859446]
   Yu E.S.-K., 1996, Modelling strategic relationships for process reengineering
   Zaki MJ, 2001, MACH LEARN, V42, P31, DOI 10.1023/A:1007652502315
   Zevenbergen B., 2020, ARXIV
NR 57
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1987
EP 2010
DI 10.1007/s10270-023-01087-4
EA FEB 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:000939579400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Viger, T
   Murphy, L
   Di Sandro, A
   Menghi, C
   Shahin, R
   Chechik, M
AF Viger, Torin
   Murphy, Logan
   Di Sandro, Alessio
   Menghi, Claudio
   Shahin, Ramy
   Chechik, Marsha
TI The ForeMoSt approach to building valid model-based safety arguments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Safety; Assurance cases; Strategies; Theorem proving; Lean
ID VERIFICATION
AB Safety assurance cases (ACs) are structured arguments designed to comprehensively show that a system is safe. ACs are often model-based, meaning that a model of the system is a primary subject of the argument. ACs use reasoning steps called strategies to decompose high-level claims about system safety into refined subclaims that can be directly supported by evidence. Strategies are often informal and difficult to rigorously evaluate in practice, and consequently, AC arguments often contain reasoning errors. This has led to the deployment of unsafe systems, and caused severe real-world consequences. These errors can be mitigated by formalizing and verifying AC strategies using formal methods; however, these techniques are difficult to use without formal methods expertise. To mitigate potential challenges faced by engineers when developing and interpreting formal ACs, we present ForeMoSt, our tool-supported framework for rigorously validating AC strategies using the Lean theorem prover. The goal of the framework is to straddle the level of abstraction used by the theorem prover and by software engineers. We use case studies from the literature to demonstrate that ForeMoSt is able to (i) augment and validate ACs from the research literature, (ii) support AC development for systems with large models, and (iii) support different model types.
C1 [Viger, Torin; Murphy, Logan; Di Sandro, Alessio; Shahin, Ramy; Chechik, Marsha] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
   [Menghi, Claudio] McMaster Univ, Dept Comp & Software, Hamilton, ON, Canada.
C3 University of Toronto; McMaster University
RP Viger, T (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
EM torinviger@cs.toronto.edu; lmurphy@cs.toronto.edu;
   adisandro@cs.toronto.edu; menghic@mcmaster.ca; rshahin@cs.toronto.edu;
   chechik@cs.toronto.edu
RI MENGHI, CLAUDIO/AAC-2265-2022
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Di Sandro,
   Alessio/0000-0003-2429-4958
FU Natural Sciences and Engineering Research Council of Canada (NSERC); 
   [RGPIN-2022-04622];  [DGECR-2022-00406]
FX AcknowledgementsWe acknowledge the support of the Natural Sciences and
   Engineering Research Council of Canada (NSERC) (funding reference
   numbers RGPIN-2022-04622,DGECR-2022-00406). We are also grateful to
   anonymous reviewers for their help with improving this manuscript.
CR [Anonymous], 2018, Goal Structuring Notation Community Standard Version 2
   [Anonymous], 2021, IBM RHAPSODY
   [Anonymous], 2004, OOPSLA GPCE WORKSH 0
   [Anonymous], 2021, ANSYS MEDINI ANAL
   Arney, 2009, GENERIC INFUSION PUM
   Asterisk, 2021, About us
   Ayoub Anaheed, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P141, DOI 10.1007/978-3-642-28891-3_14
   BaekGyu Kim, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P155
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barranco M., 2011, P 16 IEEE INT C EM T, P1
   Bernasconi Anna, 2017, Software Engineering and Formal Methods. 15th International Conference, SEFM 2017. Proceedings: Lecture Notes in Computer Society (LNCS 10469), P54, DOI 10.1007/978-3-319-66197-1_4
   Blanchette J, 2020, CPP '20: PROCEEDINGS OF THE 9TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS, P367, DOI 10.1145/3372885.3373824
   Chowdhury Thomas, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P18, DOI 10.1007/978-3-030-54549-9_2
   Chowdhury T, 2017, IEEE INT SYMP SOFTW, P69, DOI 10.1109/ISSREW.2017.14
   Cimatti A, 2015, SCI COMPUT PROGRAM, V97, P333, DOI 10.1016/j.scico.2014.06.011
   Cimatti A, 2013, IEEE INT CONF AUTOM, P702, DOI 10.1109/ASE.2013.6693137
   Cimatti A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377659
   Cimatti A, 2012, EUROMICRO CONF PROC, P21, DOI 10.1109/SEAA.2012.68
   Cobleigh R. L., 2006, P 14 ACM SIGSOFT INT, P208, DOI [10.1145/1181775.1181801, DOI 10.1145/1181775.1181801]
   COQUAND T, 1990, LECT NOTES COMPUT SC, V417, P50
   Cruanes S, 2013, LECT NOTES COMPUT SC, V7737, P275
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   de Moura L, 2015, LECT NOTES ARTIF INT, V9195, P378, DOI 10.1007/978-3-319-21401-6_26
   Denney E, 2018, AUTOMAT SOFTW ENG, V25, P435, DOI 10.1007/s10515-017-0230-5
   Denney E, 2014, IEEE T RELIAB, V63, P830, DOI 10.1109/TR.2014.2335995
   Di Sandro A., 2020, J AUTOMOT SOFTW ENG, V1, P34, DOI DOI 10.2991/JASE.D.200912.001
   Di Sandro A., 2020, P 23 INT C MOD DRIV, P15
   Di Sandro A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P2, DOI 10.1109/MODELS-C.2019.00008
   Diskin Z, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P426, DOI 10.1145/3239372.3239413
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Ebner G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3110278
   Filipovikj P, 2016, P INT COMP SOFTW APP, P167, DOI 10.1109/COMPSAC.2016.140
   Gerard S., 2011, PAPYRUS UML2 TOOL DO, P361
   Giannakopoulou D., 2005, Automated Software Engineering, V12, P297, DOI 10.1007/s10515-005-2641-y
   Gleirscher M, 2017, IEEE HI ASS SYS ENGR, P53, DOI 10.1109/HASE.2017.15
   Greenwell W, 2006, P 24 INT SYST SAF C, P430
   Griggio A, 2021, FORM METHOD SYST DES, V57, P178, DOI 10.1007/s10703-021-00369-1
   Griggio A, 2018, PROCEEDINGS OF THE 2018 18TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P225
   GSN Working Group, 2011, GSN community standard version 2
   Haddon-Cave C., 2009, NIMROD REV INDEPENDE
   Hawkins R, 2011, ADVANCES IN SYSTEMS SAFETY, P3, DOI 10.1007/978-0-85729-133-2_1
   ISO, 2011, ISO-26262
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kelly T.P., 1999, Arguing safety: A systematic approach to managing safety cases
   Kelly T.P., 1997, INT C COMPUTER SAFET, V97, P55
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Leroy X, 2009, J AUTOM REASONING, V43, P363, DOI 10.1007/s10817-009-9155-4
   Magee J., 1999, STATE MODELS JAVA PR
   Matthews J, 2006, LECT NOTES ARTIF INT, V4246, P362, DOI 10.1007/11916277_25
   Menghi C, 2021, FORM ASP COMPUT, V33, P1039, DOI 10.1007/s00165-021-00564-1
   Menghi C, 2020, LECT NOTES COMPUT SC, V12076, P53, DOI 10.1007/978-3-030-45234-6_3
   Murphy L, 2021, LECT NOTES COMPUT SC, V13085, P23, DOI 10.1007/978-3-030-92124-8_2
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nemouchi Y, 2019, LECT NOTES COMPUT SC, V11918, P379, DOI 10.1007/978-3-030-34968-4_21
   Pakonen A, 2016, IEEE INT C EMERG
   Peled D., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P1
   Picardi Chiara, 2020, P WORKSH ART INT SAF, P23
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Rushby J., 2015, NASA Contractor Report NASA/CR-2015-218802
   Salay R, 2020, SOFTW SYST MODEL, V19, P231, DOI 10.1007/s10270-019-00738-9
   Sangiovanni-Vincentelli A, 2012, EUR J CONTROL, V18, P217, DOI 10.3166/EJC.18.217-238
   Shahin R, 2021, LECT NOTES COMPUT SC, V12852, P130, DOI 10.1007/978-3-030-83903-1_9
   Sljivo I, 2018, LECT NOTES COMPUT SC, V10873, P19, DOI 10.1007/978-3-319-92432-8_2
   Sljivo I, 2017, J SYST SOFTWARE, V131, P570, DOI 10.1016/j.jss.2016.07.034
   SOTIF, 2019, 214482019 SOTIF ISOP
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Viger Torin, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P34, DOI 10.1007/978-3-030-54549-9_3
   Viger T, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P194, DOI 10.1109/MODELS50736.2021.00028
NR 69
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1473
EP 1494
DI 10.1007/s10270-022-01063-4
EA NOV 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000911252100001
DA 2024-07-18
ER

PT J
AU Bucaioni, A
   Di Salle, A
   Iovino, L
   Malavolta, I
   Pelliccione, P
AF Bucaioni, Alessio
   Di Salle, Amleto
   Iovino, Ludovico
   Malavolta, Ivano
   Pelliccione, Patrizio
TI Reference architectures modelling and compliance checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven Engineering; Software architecture; Reference architecture
ID TRANSFORMATION; FRAMEWORK; DESIGN
AB Reference architectures (RAs) are successfully used to represent families of concrete software architectures in several domains such as automotive, banking, and the Internet of Things. RAs inspire architects when designing concrete architectures, and they help to guarantee compliance with architectural decisions, regulatory requirements, as well as architectural qualities. Despite their importance, reference architectures still suffer from a number of open technical issues, including (i) the lack of a common interpretation, a precise notation for their representation and documentation, and (ii) the lack of conformance mechanisms for checking the compliance of concrete architectures to their related reference architecture, architectural decisions, regulatory requirements, etc. This paper addresses these two issues by introducing a model-driven approach that leverages (i) a domain-independent metamodel for the representation of reference architectures and (ii) the combination of model transformation and weaving techniques for the automatic conformance checking of concrete architectures. We evaluate the applicability, effectiveness, and generalizability of our approach using illustrative examples from the web browsers and automotive domains, including an assessment from an independent practitioner.
C1 [Bucaioni, Alessio] Malardalen Univ, Vasteras, Sweden.
   [Di Salle, Amleto] Univ Aquila, Laquila, Italy.
   [Iovino, Ludovico; Pelliccione, Patrizio] Gran Sasso Sci Inst, Laquila, Italy.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 Malardalen University; University of L'Aquila; Gran Sasso Science
   Institute (GSSI); Vrije Universiteit Amsterdam
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM alessio.bucaioni@mdh.se; amleto.disalle@univaq.it;
   ludovicolovino@gssi.it; i.malavolta@vu.nl; patrizio.pelliccione@gssi.it
RI Pelliccione, Patrizio/Q-5118-2019; Malavolta, Ivano/E-9018-2017
OI Pelliccione, Patrizio/0000-0002-5438-2281; Iovino,
   Ludovico/0000-0001-6552-2609; DI SALLE, AMLETO/0000-0002-0163-9784;
   Malavolta, Ivano/0000-0001-5773-8346
FU Gran Sasso Science Institute - GSSI within the CRUI-CARE Agreement
FX Open access funding provided by Gran Sasso Science Institute -GSSI
   within the CRUI-CARE Agreement.
CR Alshuqayran N., 2020, PhD thesis
   Alshuqayran N, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P47, DOI 10.1109/ICSA.2018.00014
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   Angelov S, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P141, DOI 10.1109/WICSA.2009.5290800
   [Anonymous], EPSILON MODELINK LIN
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Behere S, 2016, INFORM SOFTWARE TECH, V73, P136, DOI 10.1016/j.infsof.2015.12.008
   Bernardi ML, 2011, IEEE INT S WEB SYST, P65, DOI 10.1109/WSE.2011.6081821
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Black Art, 2010, Proceedings of the ISCA 23rd International Conference on Computers and Their Applications in Industry and Engineering (CAINE-2010), P26
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Brogi A, 2016, LECT NOTES COMPUT SC, V9839, P334, DOI 10.1007/978-3-319-48992-6_25
   Broy M., 2009, tech. rep., White paper of the IBM Cooperation and technical report of the TUM
   Broy M, 2009, COMPUTER, V42, P98, DOI 10.1109/MC.2009.413
   Bucaioni A, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P46, DOI 10.1109/ICSA47634.2020.00013
   Bucaioni A, 2020, SOFTW SYST MODEL, V19, P1283, DOI 10.1007/s10270-020-00795-5
   Bucaioni A, 2018, IEEE ACCESS, V6, P6424, DOI 10.1109/ACCESS.2018.2789400
   Bucaioni A, 2017, LECT NOTES COMPUT SC, V10376, P285, DOI 10.1007/978-3-319-61482-3_17
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Chal┬u┬ G┬u┬Engora HG., 2013, ARCHIT DESIGN, P241
   Clements P., 2002, Software product lines
   Cuenot P, 2010, LECT NOTES COMPUT SC, V6100, P297, DOI 10.1007/978-3-642-16277-0_11
   Dajsuren Y., 2019, Defining Architecture Framework for Automotive Systems, P141
   Dajsuren Y., 2015, THESIS TU EINDHOVEN
   De Lara J, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340108
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   De Sanctis M, 2019, LECT NOTES COMPUT SC, V11681, P178, DOI 10.1007/978-3-030-29983-5_12
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Di Nitto E, 2007, LECT NOTES COMPUT SC, V4749, P295
   Di Ruscio Davide, 2010, 32 INT C SOFTWARE EN, P85, DOI [10.1145/1806799.1806816, DOI 10.1145/1806799.1806816]
   EKLUND U, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Fernandez SilverioMartinez., 2016, Gathering empirical evidence and building a business case for software reference architectures in industry
   Fernández-Montes A, 2014, COMPUT STAND INTER, V36, P928, DOI 10.1016/j.csi.2014.02.004
   Ganesan D, 2009, INFORM SOFTWARE TECH, V51, P1586, DOI 10.1016/j.infsof.2009.06.007
   Gomez-Abajo P., 2016, WODEL DOMAIN SPECIFI, V4, P1968
   Gomez-Abajo P., 2016, P SAC, P1968
   Neto VVG, 2015, COBRA'15 PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP ON EXPLORING COMPONENT-BASED TECHNIQUES FOR CONSTRUCTING REFERENCE ARCHITECTURES, P21, DOI 10.1145/2755567.2755572
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Guessi M., 2011, 23 INT C SOFTW ENG K, P782
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herold Sebastian, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P71, DOI 10.1109/EDOC.2013.17
   Herold S, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P24, DOI 10.1109/MiSE.2013.6595292
   Hochgeschwender N, 2018, 2018 SECOND IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P121, DOI 10.1109/IRC.2018.00026
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kolovos D., 2020, P 23 INT C MOD DRIV, P12, DOI [10.1145/3365438.3410943, DOI 10.1145/3365438.3410943]
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Magnusson A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P65, DOI 10.1145/3183519.3183526
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Maple C, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9235101
   Martinez-Fernandez Silverio, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P97, DOI 10.1007/978-3-642-38977-1_7
   Martínez-Fernández S, 2017, INFORM SOFTWARE TECH, V88, P37, DOI 10.1016/j.infsof.2017.03.011
   Miksovic C, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P270, DOI 10.1109/WICSA.2011.43
   Monroe RT, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.566427
   Pelliccione P, 2020, SCI COMPUT PROGRAM, V191, DOI 10.1016/j.scico.2020.102414
   Pelliccione P, 2017, J SYST ARCHITECT, V77, P83, DOI 10.1016/j.sysarc.2017.02.005
   Pruijt L, 2017, SOFTWARE PRACT EXPER, V47, P273, DOI 10.1002/spe.2421
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Scott, GARTNER HYPE CYCLE R
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Springer Fachmedien Wiesbaden, 2013, ATZEXTRA WORLDW, V18, P13, DOI [10.1007/s40111-013-0004-4, DOI 10.1007/S40111-013-0004-4]
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tokar Joyce L., 2016, ACM SIGAda Ada Letters, V36, P22, DOI 10.1145/3092893.3092897
   Turhan NK, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3004850
   Verdecchia R, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P35, DOI 10.1145/3197231.3198442
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Weinreich Rainer, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P95, DOI 10.1109/WICSA.2014.22
   Yimam D, 2016, INT CONF CLOUD ENG, P147, DOI 10.1109/IC2E.2016.16
NR 76
TC 9
Z9 9
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 891
EP 917
DI 10.1007/s10270-022-01022-z
EA AUG 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000836765000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gottschalk, S
   Yigitbas, E
   Nowosad, A
   Engels, G
AF Gottschalk, Sebastian
   Yigitbas, Enes
   Nowosad, Alexander
   Engels, Gregor
TI Continuous situation-specific development of business models: knowledge
   provision, method composition, and method enactment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business model development; Situational method engineering;
   Situation-specific; Business model canvas; Continuous development
ID DESIGN SCIENCE RESEARCH; INNOVATION; OPPORTUNITIES; TAXONOMY; CREATION
AB The development of new business models is essential for startups to become successful, as well as for established companies to explore new business opportunities. However, developing such business models is a continuous challenging activity where different tasks need to be performed, and business decisions need to be made. Both have to fit the constantly changeable situation in which the business model is developed to reduce the risk of developing ineffective business models with low market penetration. Therefore, a method for developing situation-specific business models is needed. As a solution, we refine the concept of situational method engineering (SME) to business model development. SME, in turn, provides means to construct situation-specific development methods out of fragments from a method repository. We develop a concept for the continuous situation-specific development of business models based on design science. The approach uses the roles of a domain expert, a method engineer, and a business developer together with a repository with method fragments for developing business models and a repository with modeling artifacts for supporting the development. Both repositories are filled by utilizing the experience of domain experts. Out of these repositories, situation-specific development methods for developing business models can be continuously composed based on the changeable situation by the method engineer and enacted by the business developer. We implement it as an open-source tool and evaluate its applicability in an industrial case study of developing a business model for a local event platform. Our results show that situation awareness supports the continuous development of business models.
C1 [Gottschalk, Sebastian; Yigitbas, Enes; Nowosad, Alexander; Engels, Gregor] Paderborn Univ, Software Innovat Lab, Zukunftsmeile 2, D-33102 Paderborn, Germany.
C3 University of Paderborn
RP Gottschalk, S (corresponding author), Paderborn Univ, Software Innovat Lab, Zukunftsmeile 2, D-33102 Paderborn, Germany.
EM sebastian.gottschalk@uni-paderborn.de; enes.yigitbas@uni-paderborn.de;
   anowosad@mail.uni-paderborn.de; gregor.engels@uni-paderborn.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Adali O. Ege, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P227, DOI 10.1007/978-3-030-49418-6_15
   Altmann J, 2007, LECT NOTES COMPUT SC, V4685, P29
   Alvarez SA, 2013, ORGAN SCI, V24, P301, DOI 10.1287/orsc.1110.0727
   Andries P, 2013, STRATEG ENTREP J, V7, P288, DOI 10.1002/sej.1170
   [Anonymous], Business Process Model and Notation
   [Anonymous], 2018, 26 EUROPEAN C INFORM
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Athanasopoulou A, 2020, ELECTRON MARK, V30, P495, DOI 10.1007/s12525-020-00418-3
   Augenstein Dominik, 2018, Designing for a Digital and Globalized World. 13th International Conference, DESRIST 2018. Proceedings: LNCS 10844, P205, DOI 10.1007/978-3-319-91800-6_14
   Berends H, 2016, STRATEG ORGAN, V14, P181, DOI 10.1177/1476127016632758
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Bland D., 2020, Testing business ideas
   Bosselmann S, 2017, Service Business Model Innovation in Healthcare and Hospital Management: Models, Strategies, Tools, P195
   Bouwman H, 2020, ELECTRON MARK, V30, P413, DOI 10.1007/s12525-020-00424-5
   Bouwman H, 2018, ELECTRON MARK, V28, P149, DOI 10.1007/s12525-016-0243-0
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Romero MC, 2015, COMPUT COLOMB CONF, P527, DOI 10.1109/ColumbianCC.2015.7333469
   CBInsights, CB INS 2019 TOP 20 R
   Chesbrough H, 2010, LONG RANGE PLANN, V43, P354, DOI 10.1016/j.lrp.2009.07.010
   Dellermann Dominik, 2019, Electronic Markets, V29, P423, DOI 10.1007/s12525-018-0309-2
   deReuver M., 2016, P BLED ECONFERENCE 2
   Ebel P, 2016, INFORM SYST J, V26, P519, DOI 10.1111/isj.12103
   Eppler MJ, 2011, INT J INNOV MANAG, V15, P1323, DOI 10.1142/S1363919611003751
   Fill HG, 2013, ENTERP MODELLING INF, V8, P4, DOI 10.1007/BF03345926
   Fleig C, 2018, LECT NOTES BUS INF P, V317, P105, DOI 10.1007/978-3-319-92901-9_10
   Frankenberger Karolin, 2013, International Journal of Product Development, V18, P249
   Fridgen G., 2018, P AM C INFORM SYSTEM
   Fritscher B, 2016, LECT NOTES BUS INF P, V257, P134, DOI 10.1007/978-3-319-40512-4_8
   Fritscher B, 2014, CONF BUS INFORM, P151, DOI 10.1109/CBI.2014.9
   Fritscher B, 2010, LECT NOTES COMPUT SC, V5963, P28, DOI 10.1007/978-3-642-11797-8_3
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gassmann O, 2014, The business model navigator: 55 models that will revolutionise your business
   Geissdoerfer M, 2017, PROCEDIA MANUF, V8, P262, DOI 10.1016/j.promfg.2017.02.033
   Geissdoerfer M, 2016, J CLEAN PROD, V135, P1218, DOI 10.1016/j.jclepro.2016.07.020
   General Electric Inc, GE GLOB INN BAR 2018
   Giray G, 2018, LECT NOTES BUS INF P, V319, P221, DOI 10.1007/978-3-319-94214-8_14
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Gottschalk Sebastian, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P262, DOI 10.1007/978-3-030-79186-5_17
   Gottschalk S., SITUATION SPECIFIC B
   GOTTSCHALK S, 2020, INT C BUS INF CBI
   Gottschalk S, 2021, LECT NOTES COMPUT SC, V13126, P103, DOI 10.1007/978-3-030-91452-3_7
   Gottschalk S, 2021, LECT NOTES BUS INF P, V422, P3, DOI 10.1007/978-3-030-79976-2_1
   Gottschalk S, 2019, LECT NOTES BUS INF P, V370, P192, DOI 10.1007/978-3-030-33742-1_16
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Gross JohnM., 2003, Kanban Made Simple - Demystifying and Applying Toyota's Legendary Manufacturing Process AMACOM
   Hamrouni B, 2018, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND NEW TECHNOLOGIES (ICSENT '18), DOI 10.1145/3330089.3330099
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Harmsen F., 1995, P 2 AS PAC SOFTW ENG, P430, DOI [10.1109/APSEC.1995.496992, DOI 10.1109/APSEC.1995.496992]
   Hartmann PM, 2016, INT J OPER PROD MAN, V36, P1382, DOI 10.1108/IJOPM-02-2014-0098
   Henderson-Sellers B., 2014, Situational Method Engineering
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   John T., 2017, Proceedings of the International Conference on Information Systems (ICIS)
   John T, 2016, P 37 INT C INF SYST
   Kijl B, 2010, AMCIS 2010 PROCEEDINGS
   Kuechler B, 2008, EUR J INFORM SYST, V17, P489, DOI 10.1057/ejis.2008.40
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lüdeke-Freund F, 2019, PAL STUD SUSTAIN BUS, P25, DOI 10.1007/978-3-319-93275-0_2
   Massa L, 2017, ACAD MANAG ANN, V11, P73, DOI 10.5465/annals.2014.0072
   McGrath RG, 2010, LONG RANGE PLANN, V43, P247, DOI 10.1016/j.lrp.2009.07.005
   Meertens L.O., 2012, P 27 ANN ACM S APPL, P1694
   Morschheuser B, 2018, INFORM SOFTWARE TECH, V95, P219, DOI 10.1016/j.infsof.2017.10.015
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Osterwalder A., 2014, VALUE PROPOSITION DE
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Remane G, 2017, INT J INNOV MANAG, V21, DOI 10.1142/S1363919617500049
   Ries Eric, 2014, The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses
   Robson C., 2016, REAL WORLD RES RESOU
   Rubel S., 2019, P INT C WIRTSCHAFTSI
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saebi T, 2017, LONG RANGE PLANN, V50, P567, DOI 10.1016/j.lrp.2016.06.006
   Schief M., 2014, BUSINESS MODELS SOFT, P169, DOI [10.1007/978-3-658-04352-0_6, DOI 10.1007/978-3-658-04352-0_6]
   Schwarz JS, 2020, ELECTRON MARK, V30, P421, DOI 10.1007/s12525-019-00379-2
   Shin J, 2009, IND MARKET MANAG, V38, P324, DOI 10.1016/j.indmarman.2007.06.017
   Simmert B, 2019, BUS INFORM SYST ENG+, V61, P451, DOI 10.1007/s12599-018-0556-y
   Sorri K., 2019, J BUS MODELS, DOI 10.5278/ojs.jbm.v7i2.1966
   Sosna M, 2010, LONG RANGE PLANN, V43, P383, DOI 10.1016/j.lrp.2010.02.003
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Szopinski D, 2019, PROCEEDINGS OF THE 2019 ON CREATIVITY AND COGNITION - C&C 19, P547, DOI 10.1145/3325480.3326572
   Szopinski D, 2020, ELECTRON MARK, V30, P469, DOI 10.1007/s12525-018-0326-1
   Täuscher K, 2017, CREAT INNOV MANAG, V26, P160, DOI 10.1111/caim.12208
   Teece DJ, 2010, LONG RANGE PLANN, V43, P172, DOI 10.1016/j.lrp.2009.07.003
   Terrenghi N., 2017, 13 INT C WIRTSCH, P972
   Tolvanen Juha-Pekka., 2003, COMPANION 18 ANN ACM, P92
   van Steenbergen M, 2019, LECT NOTES BUS INF P, V352, P156, DOI 10.1007/978-3-030-20618-5_11
   Veit D, 2014, BUS INFORM SYST ENG+, V6, P45, DOI 10.1007/s12599-013-0308-y
   Vogel P, 2017, ENTREP THEORY PRACT, V41, P943, DOI 10.1111/etap.12234
   Voigt M, 2013, LECT NOTES COMPUT SC, V7939, P456
   Wieland M., 2020, P MOD 2020, VP-302, P45
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 90
TC 0
Z9 0
U1 2
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 47
EP 73
DI 10.1007/s10270-022-01018-9
EA JUL 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000822236700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Barriga, A
   Heldal, R
   Rutle, A
   Iovino, L
AF Barriga, Angela
   Heldal, Rogardt
   Rutle, Adrian
   Iovino, Ludovico
TI PARMOREL: a framework for customizable model repair
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model repair; Reinforcement learning; Customizable framework
ID QUALITY
AB In model-driven software engineering, models are used in all phases of the development process. These models must hold a high quality since the implementation of the systems they represent relies on them. Several existing tools reduce the burden of manually dealing with issues that affect models' quality, such as syntax errors, model smells, and inadequate structures. However, these tools are often inflexible for customization and hard to extend. This paper presents a customizable and extensible model repair framework, PARMOREL, that enables users to deal with different issues in different types of models. The framework uses reinforcement learning to automatically find the best sequence of actions for repairing a broken model according to user preferences. As proof of concept, we repair syntactic errors in class diagrams taking into account a model distance metric and quality characteristics. In addition, we restore inter-model consistency between UML class and sequence diagrams while improving the coupling qualities of the sequence diagrams. Furthermore, we evaluate the approach on a large publicly available dataset and a set of real-world inspired models to show that PARMOREL can decide and pick the best solution to solve the issues present in the models to satisfy user preferences.
C1 [Barriga, Angela; Heldal, Rogardt; Rutle, Adrian] Western Norway Univ Appl Sci, Bergen, Norway.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 Western Norway University of Applied Sciences; Gran Sasso Science
   Institute (GSSI)
RP Barriga, A (corresponding author), Western Norway Univ Appl Sci, Bergen, Norway.
EM abar@hvl.no; rohe@hvl.no; aru@hvl.no; ludovico.iovino@gssi.it
OI Iovino, Ludovico/0000-0001-6552-2609
FU Western Norway University Of Applied Sciences
FX Open access funding provided by Western Norway University Of Applied
   Sciences.
CR Addazi L., 2016, ME MODELS, P4049
   Al-JaAfer  J., 2007, TECH REP
   Arendt T., 2014, THESIS U MARBURG
   Barriga A., 2020, P 23 ACMIEEE INT C M, P2434
   Barriga A., 2020, 2020 ACMIEEE 23 INT
   Barriga A, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a1
   Barriga A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a13
   Barriga A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P175, DOI 10.1109/MODELS-C.2019.00030
   Basciani F., 2016, 2016 10 INT C QUALIT, P8893
   Basciani F, 2019, J COMPUT LANG, V51, P173, DOI 10.1016/j.cola.2019.02.003
   Beck K., 1999, REFACTORING IMPROVIN, V1, P75
   Bellman R, 2013, DYNAMIC PROGRAMMING
   Bettini L., 2017, MODELS SATELLITE EVE, P7180
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Boehm B.W., 1976, P 2 INT C SOFTW ENG
   Briand L., 1997, P 19 INT C SOFTWARE
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Cabot J., 2017, FEDERATION INT C SOF
   Cervantes A.A., 2017, OTM CONFEDERATED INT, P5374
   Dirix M., 2013, GenMyModel: An Online UML Case Tool
   DiRuscio D., 2020, MODELLING FDN APPL
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Egyed A., 2006, P 28 INT C SOFTWARE
   Feldmann S, 2019, J SYST SOFTWARE, V153, P105, DOI 10.1016/j.jss.2019.03.060
   Genero M., 2001, 5 INT ECOOP WORKSHOP
   Ghannem A., 2013, INT S SEARCH BASED S, P96110
   Gray J., 2019, CONCEPTUAL DISTANCE
   Iovino L., 2020, J OBJECT TECHNOL, V19, P17
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Kehrer T., 2011, 2011 26 IEEEACM INT
   Kessentini M, 2017, EMPIR SOFTW ENG, V22, P670, DOI 10.1007/s10664-016-9442-8
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Kolovos D., 2010, STRUCTURE, V178, P1
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kretschmer R., 2018, P 40 INT C SOFTWARE
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lopes D., 2006, 2006 INT C SOFTWARE, P22
   Lpez-Fernndez J.J., 2014, MODEVVA MODELS, P312
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2013, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2013.6693135
   Moghadam I.H., 2011, P 4 WORKSHOP REFACTO, P4144
   Nassar N, 2017, LECT NOTES COMPUT SC, V10374, P171, DOI 10.1007/978-3-319-61473-1_12
   Nguyen P.T., 2019, 2019 ACMIEEE 22 INT
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Ohrndorf M., 2018, P 40 INT C SOFTWARE
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ortega M, 2003, SOFTWARE QUAL J, V11, P219, DOI 10.1023/A:1025166710988
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Selman B., 2006, HILL CLIMBING SEARCH
   Shafiq S., 2020, ARXIV PREPRINT ARXIV
   Sheldon FT, 2006, J SOFTW MAINT EVOL-R, V18, P333, DOI 10.1002/smr.336
   Sidhu BK., 2020, INT J COMPUT APPL, V44, P166
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strittmatter Misha, 2016, CHALLENGES EVOLUTION
   Syriani E, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a3
   Taentzer G, 2017, LECT NOTES COMPUT SC, V10202, P283, DOI 10.1007/978-3-662-54494-5_16
   Thrun S., 2000, AI Mag, V21, P103
   Torre D, 2018, J SYST SOFTWARE, V144, P121, DOI 10.1016/j.jss.2018.06.029
   Torrey L, 2010, HDB RES MACHINE LEAR
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Wust J., 2005, Sdmetrics: The software design metrics tool for uml
NR 63
TC 2
Z9 2
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1739
EP 1762
DI 10.1007/s10270-022-01005-0
EA MAY 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000790717800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hassine, J
   Tukur, M
AF Hassine, Jameleddine
   Tukur, Muhammad
TI Measurement and classification of inter-actor dependencies in goal
   models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Goal-oriented requirements; Metric; Inter-actor dependencies; GRL; URN
ID REQUIREMENTS ANALYSIS; INFORMATION-SYSTEMS
AB Goal-oriented requirements engineering approaches aim to capture desired goals and strategies of relevant stakeholders during early requirements engineering stages, using goal models. Socio-technical systems (STSs) involve a rich interplay of human actors (traditional stakeholders, described as actors in goal models) and technical systems. Actors may depend on each other for goals to be achieved, activities to be performed, and resources to be supplied. These dependencies create new opportunities by extending actors' capabilities but may make the actor vulnerable if the dependee fails to deliver the dependum (knowingly or unintentionally). This paper proposes a novel quantitative metric, called Actor Interaction Metric (AIM), to measure interactor dependencies in Goal-oriented Requirements Language (GRL) models. The metric is used to categorize inter-actor dependencies into positive (beneficial), negative (harmful), and neutral (no impact). Furthermore, the AIM metric is used to identify the most harmful/beneficial dependency for each actor. The proposed approach is implemented in a tool targeting the textual GRL language, part of the User Requirements Notation (URN) standard. We evaluate experimentally our approach using 13 GRL models, with positive results on applicability and scalability.
C1 [Hassine, Jameleddine; Tukur, Muhammad] KFUPM, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
   [Hassine, Jameleddine] KFUPM, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals
RP Hassine, J (corresponding author), KFUPM, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.; Hassine, J (corresponding author), KFUPM, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
EM jhassine@kfupm.edu.sa; g201708390@kfupm.edu.sa
RI Hassine, Jameleddine/E-5940-2015
OI Tukur, Muhammad/0000-0003-1103-9659
FU Deanship of Scientific Research at King Fahd University of Petroleum
   Minerals [IN171027]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals for funding this work through Project No. IN171027.
CR Abdelzad V, 2015, ISTAR, P61
   Abdelzad V, 2015, LECT NOTES COMPUT SC, V9369, P159, DOI 10.1007/978-3-319-24912-4_12
   Affleck Amy, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P88, DOI 10.1109/ICSSP.2012.6225987
   Akhigbe O, 2014, LECT NOTES COMPUT SC, V8824, P466, DOI 10.1007/978-3-319-12206-9_40
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Alkaf H, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110397
   Alkaf HS, 2017, LECT NOTES COMPUT SC, V10567, P157, DOI 10.1007/978-3-319-68015-6_10
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Anda AA, 2019, INT REQUIR ENG CONF, P245, DOI 10.1109/RE.2019.00034
   [Anonymous], 2016, JUCMNAV PROJ TOOL DO
   [Anonymous], 2008, 16 ACM SIGSOFT INT S
   Anton A. I., 1994, Advanced Information Systems Engineering. 6th International Conference, CAiSE '94. Proceedings, P94
   Bryl V., 2006, DIT06006 U TRENT
   Bryl V, 2006, LECT NOTES COMPUT SC, V4275, P533
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Dalpiaz F, 2013, REQUIR ENG, V18, P1, DOI 10.1007/s00766-011-0132-1
   Deb N, 2016, INT REQUIR ENG CONF, P397, DOI 10.1109/RE.2016.62
   DeVries B, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P257, DOI 10.1109/QRS.2018.00039
   Franch X, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P348
   Franch X, 2006, LECT NOTES COMPUT SC, V4001, P495, DOI 10.1007/11767138_33
   Fuxman A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P174
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Grau G, 2007, LECT NOTES COMPUT SC, V4758, P139
   Grau G, 2008, INFORM SOFTWARE TECH, V50, P76, DOI 10.1016/j.infsof.2007.10.006
   Grubb AM, 2017, INT REQUIR ENG CONF, P164, DOI 10.1109/RE.2017.19
   Hassine J., 2014, CEUR WORKSHOP PROC, V1157
   Hassine J, 2021, REQUIR ENG, V26, P399, DOI 10.1007/s00766-021-00349-1
   Hassine J, 2019, E-INFORMATICA, V13, P203, DOI 10.5277/e-Inf190106
   Hassine J, 2017, SOFTW SYST MODEL, V16, P279, DOI 10.1007/s10270-015-0460-6
   Hassine J, 2016, REQUIR ENG, V21, P285, DOI 10.1007/s00766-015-0221-7
   Horkoff J., 2006, PROC 2006 INT C PRIV, P9, DOI DOI 10.1145/1501434.1501446
   Horkoff J., 2009, CAISE FORUM
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Horkoff J, 2010, LECT NOTES BUS INF P, V68, P130
   Horkoff J, 2009, LECT NOTES BUS INF P, V39, P145
   ITU-T, 2018, REC 151 10 18 US REQ
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Kumar R, 2018, LECT NOTES COMPUT SC, V11150, P163, DOI 10.1007/978-3-030-01042-3_10
   Li T, 2018, SOFTW SYST MODEL, V17, P1253, DOI 10.1007/s10270-016-0560-y
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Lima P., 2016, CLEI ELECT J, V19, P6, DOI [10.19153/cleiej.19.3.6, DOI 10.19153/CLEIEJ.19.3.6]
   Liu L, 2004, INFORM SYST, V29, P187, DOI 10.1016/S0306-4379(03)00052-8
   Mirbel Isabelle, 2012, Computational Logic in Multi-Agent Systems. Proceedings of the 13th International Workshop, CLIMA XIII, P110, DOI 10.1007/978-3-642-32897-8_9
   Murukannaiah PK, 2015, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2015.7320418
   Neumaier A, 1991, ENCY MATH ITS APPL, P1, DOI [10.1017/CBO9780511526473.003, DOI 10.1017/CBO9780511526473.003]
   Osborne M.J., 2004, An introduction to game theory, V3
   Pastor O., 2011, SOCIAL MODELING REQU, P607
   Sadiq M, 2014, INT J SYST ASSUR ENG, V5, P711, DOI 10.1007/s13198-014-0236-3
   Subramanian C., 2015, 19 PACIFIC ASIA C IN, P89
   Sumesh S, 2019, COMPUT J, V62, P1557, DOI 10.1093/comjnl/bxy143
   Sutcliffe A. G., 1999, Advanced Information Systems Engineering. 11th International Conference, CAiSE'99. Proceedings (Lecture Notes in Computer Science Vol. 1626), P73
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   van Lamsweerde A, 2009, LECT NOTES COMPUT SC, V5600, P380, DOI 10.1007/978-3-642-02463-4_20
   Vinay S, 2013, ADV INTELL SYST, V174, P441
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Yu E. S. K., 1993, Conference on Organizational Computing Systems, P258, DOI 10.1145/168555.168584
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 60
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2267
EP 2310
DI 10.1007/s10270-021-00961-3
EA JAN 2022
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000744783800001
DA 2024-07-18
ER

PT J
AU Sakizloglou, L
   Ghahremani, S
   Barkowsky, M
   Giese, H
AF Sakizloglou, Lucas
   Ghahremani, Sona
   Barkowsky, Matthias
   Giese, Holger
TI Incremental execution of temporal graph queries over runtime models with
   history and its applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Runtime models; History-awareness; Historic data; Temporal graph
   queries; Incremental pattern matching; Runtime monitoring; Self-adaptive
   systems
ID GUIDELINES; INCQUERY; SAFETY; LOGIC
AB Modern software systems are intricate and operate in highly dynamic environments for which few assumptions can be made at design-time. This setting has sparked an interest in solutions that use a runtime model which reflects the system state and operational context to monitor and adapt the system in reaction to changes during its runtime. Few solutions focus on the evolution of the model over time, i.e., its history, although history is required for monitoring temporal behaviors and may enable more informed decision-making. One reason is that handling the history of a runtime model poses an important technical challenge, as it requires tracing a part of the model over multiple model snapshots in a timely manner. Additionally, the runtime setting calls for memory-efficient measures to store and check these snapshots. Following the common practice of representing a runtime model as a typed attributed graph, we introduce a language which supports the formulation of temporal graph queries, i.e., queries on the ordering and timing in which structural changes in the history of a runtime model occurred. We present a querying scheme for the execution of temporal graph queries over history-aware runtime models. Features such as temporal logic operators in queries, the incremental execution, the option to discard history that is no longer relevant to queries, and the in-memory storage of the model, distinguish our scheme from relevant solutions. By incorporating temporal operators, temporal graph queries can be used for runtime monitoring of temporal logic formulas. Building on this capability, we present an implementation of the scheme that is evaluated for runtime querying, monitoring, and adaptation scenarios from two application domains.
C1 [Sakizloglou, Lucas; Ghahremani, Sona; Barkowsky, Matthias; Giese, Holger] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Sakizloglou, Lucas] Brandenburg Technol Univ, Software Syst Engn Grp, Cottbus, Germany.
C3 University of Potsdam; Brandenburg University of Technology Cottbus
RP Sakizloglou, L (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.; Sakizloglou, L (corresponding author), Brandenburg Technol Univ, Software Syst Engn Grp, Cottbus, Germany.
EM lucas.sakizloglou@hpi.de; sona.ghahremani@hpi.de;
   matthias.barkowsky@hpi.de; holger.giese@hpi.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X; ghahremani, sona/0000-0003-0697-9195;
   Sakizloglou, Lucas/0000-0001-6971-1589
CR ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], ECLIPSE MODELING FRA
   Apache Foundation, EVENTSTRATEGY AP TIN
   Barkowsky M, 2020, J LOG ALGEBR METHODS, V114, DOI 10.1016/j.jlamp.2020.100563
   Barmpis K, 2015, LECT NOTES COMPUT SC, V9153, P137, DOI 10.1007/978-3-319-21151-0_10
   Barquero G, 2021, SOFTW SYST MODEL, V20, P1011, DOI 10.1007/s10270-020-00832-3
   Barquero G, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P166, DOI 10.1145/3239372.3239402
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci E, 2019, INT J SOFTW TOOLS TE, V21, P31, DOI 10.1007/s10009-017-0454-5
   Basin D, 2018, ACTA INFORM, V55, P309, DOI 10.1007/s00236-017-0295-4
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Basin David A., 2017, RV-CuBES, V3, P19
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Beaudoux O, 2010, LECT NOTES COMPUT SC, V6394, P91
   Bencomo N., 2014, LECT NOTES COMPUTER
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Bencomo N, 2012, IEEE INT C ENG COMP, P157, DOI 10.1109/ICECCS.2012.34
   Benelallam A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P181, DOI 10.1109/MODELS.2017.11
   Beyhl T, 2016, LECT NOTES COMPUT SC, V9761, P170, DOI 10.1007/978-3-319-40530-8_11
   Bezivin J., 2008, PERSP WORKSH MOD ENG
   Biermann E, 2010, LECT NOTES COMPUT SC, V5765, P121, DOI 10.1007/978-3-642-17322-6_7
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Búr M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P233, DOI 10.1109/MODELS.2019.00007
   Búr M, 2020, INT J SOFTW TOOLS TE, V22, P79, DOI 10.1007/s10009-019-00531-5
   Cheng Raymond, 2012, P 7 ACM EUR C COMP S, P85, DOI 10.1145/2168836.2168846
   Combi Carlo, 2012, P 2 ACM SIGHIT INT H, P141, DOI [10.1145/2110363.2110382event-place:Miami,Florida,USA, DOI 10.1145/2110363.2110382EVENT-PLACE:MIAMI,FLORIDA,USA]
   Courcelle B., 1997, HDB GRAPH GRAMMARS C, V1, P313
   Cruz JesusGorronogoitia., 2020, Open Source Systems, P183
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Dávid I, 2018, SOFTW SYST MODEL, V17, P135, DOI 10.1007/s10270-016-0533-1
   de Lemos R., 2013, LECT NOTES COMPUTER
   Debrouvier A, 2021, VLDB J, V30, P825, DOI 10.1007/s00778-021-00675-4
   DiCiccio TJ, 1996, STAT SCI, V11, P189
   Dou W, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P323, DOI 10.1109/MODELS.2017.9
   Eclipse Foundation, ECL HAWK
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Elhabbash A, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P57, DOI 10.1109/ICWS.2015.18
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   Esfahani N, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2856035
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   García-Domínguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P194, DOI 10.1109/MODELS.2019.000-2
   García-Domínguez A, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P18, DOI 10.1109/FAS-W.2019.00018
   Garlan D., 2009, Autonomic Computing and Networking, P31, DOI [DOI 10.1007/978-0-387-89828-5, DOI 10.1007/978-0-387-89828-52]
   Ghahremani S, 2020, ACM T AUTON ADAP SYS, V14, DOI 10.1145/3380965
   Giese Holger, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P137, DOI 10.1007/978-3-642-30982-3_5
   Giese H, 2019, LECT NOTES COMPUT SC, V11424, P282, DOI 10.1007/978-3-030-16722-6_16
   Giese Holger, 2009, ECEASST, V18, DOI [10.14279/tuj.eceasst.18.268, DOI 10.14279/TUJ.ECEASST.18.268]
   Gómez A, 2018, LECT NOTES COMPUT SC, V11157, P365, DOI 10.1007/978-3-030-00847-5_26
   Google Inc, GOOGL COR LIB JAV
   Grez A, 2020, 23 INT C DATABASE TH, P17, DOI [10.4230/lipics.icdt.2020.15, DOI 10.4230/LIPICS.ICDT.2020.15]
   Gyapay S, 2002, LECT NOTES COMPUT SC, V2505, P120
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Haeusler M, 2019, SOFTW SYST MODEL, V18, P3487, DOI 10.1007/s10270-019-00725-0
   Hallé S, 2016, LECT NOTES COMPUT SC, V10012, P68, DOI 10.1007/978-3-319-46982-9_6
   Han W., 2014, P 9 EUR C, DOI DOI 10.1145/2592798.2592799
   Hartmann Thomas., 2017, P 29 INT C SOFTWARE, P596
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HAVELUND K, 2018, GALLARDO MDM, P26
   Havelund K, 2020, LECT NOTES COMPUT SC, V12302, P3, DOI 10.1007/978-3-030-59152-6_1
   Havelund K, 2020, LECT NOTES COMPUT SC, V12399, P107, DOI 10.1007/978-3-030-60508-7_6
   Havelund K, 2018, LECT NOTES COMPUT SC, V11237, P90, DOI 10.1007/978-3-030-03769-7_7
   Hildebrandt Stephan, 2014, THESIS U POTSDAM
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khurana U, 2013, PROC INT CONF DATA, P997, DOI 10.1109/ICDE.2013.6544892
   Klein F, 2007, LECT NOTES COMPUT SC, V4422, P185
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Krause C, 2016, LECT NOTES COMPUT SC, V9761, P153, DOI 10.1007/978-3-319-40530-8_10
   Kumar P, 2020, ACM T STORAGE, V15, DOI 10.1145/3364180
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Lanese I, 2010, LECT NOTES COMPUT SC, V6084, P284, DOI 10.1007/978-3-642-15640-3_19
   Laroussinie F, 2002, IEEE S LOG, P383, DOI 10.1109/LICS.2002.1029846
   LDBC Social Network Benchmark task force, 2021, LDBC SOCIAL NETWORK
   Liu L., 2012, CEUR WORKSHOP PROC, V855, P131
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Mannhardt F, 2017, RADAR EMISA CAISE, V1859, P72
   Massri M, 2021, J ADV INFORM TECHNOL, V12, P169
   Mazak A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a14
   MDELab, 2020, INTEMPO ECL PLUG HOM
   Miao YS, 2015, ACM T STORAGE, V11, DOI 10.1145/2700302
   Moore R.E., 2009, Introduction to interval analysis, DOI DOI 10.1137/1.9780898717716
   Mouline L, 2018, PR INT CONF AUTONOM, P175, DOI 10.1109/ICAC.2018.00029
   National HealthService UK, 2016, REC MAN COD PRACT HL
   Office for Civil Rights (OCR), 2008, SUMM HIPAA PRIV RUL
   Peled Doron, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P218, DOI 10.1007/978-3-030-22348-9_14
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rhodes A, 2017, CRIT CARE MED, V45, P486, DOI 10.1097/CCM.0000000000002255
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Rötschke T, 2006, LECT NOTES COMPUT SC, V4178, P291
   Roy PC., 2017, SMART TECHNOLOGIES H, P195
   Sakizloglou L., 2020, P 23 ACM IEEE INT C, P175, DOI DOI 10.1145/3365438.3410961
   Sakizloglou L., 2020, SIMPLIFIED EVENT LOG
   Sakizloglou L, 2020, I W S E ADAP SM SYS, P188, DOI 10.1145/3387939.3388614
   Sanchez Cuadrado Jesus, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P1, DOI 10.1007/978-3-642-38883-5_1
   SAP OrientDB, LIV QUER ORIENTDB MA
   Schneider S, 2020, LECT NOTES COMPUT SC, V12150, P276, DOI 10.1007/978-3-030-51372-6_16
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Vogel Thomas, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P224, DOI 10.1007/978-3-642-21210-9_22
   Vogel T., 2010, P 2010 ICSE WORKSH S, P39, DOI [10.1145/1808984.1808989, DOI 10.1145/1808984.1808989]
   Waudby Jack, 2020, GRADESNDA 20 P 3 JOI, DOI [10.1145/3398682.3399165, DOI 10.1145/3398682.3399165]
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Wilson W, 2007, J AM DENT ASSOC, V138, P739, DOI 10.1161/CIRCULATIONAHA.106.183095
   Zundorf A, 2001, THESIS U PADERBORN
NR 111
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1789
EP 1829
DI 10.1007/s10270-021-00950-6
EA DEC 2021
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000733426800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hinkel, G
   Garcia-Dominguez, A
   Schöne, R
   Boronat, A
   Tisi, M
   Le Calvar, T
   Jouault, F
   Marton, J
   Nyíri, T
   Antal, JB
   Elekes, M
   Szarnyas, G
AF Hinkel, Georg
   Garcia-Dominguez, Antonio
   Schoene, Rene
   Boronat, Artur
   Tisi, Massimo
   Le Calvar, Theo
   Jouault, Frederic
   Marton, Jozsef
   Nyiri, Tamas
   Antal, Janos Benjamin
   Elekes, Marton
   Szarnyas, Gabor
TI A cross-technology benchmark for incremental graph queries
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graph queries; Graph analytics; Model-driven engineering; Performance
   benchmark; Graph databases; relational databases; Incremental queries;
   Incremental computing
ID LANGUAGE; PATTERN
AB To cope with the increased complexity of systems, models are used to capture what is considered the essence of a system. Such models are typically represented as a graph, which is queried to gain insight into the modelled system. Often, the results of these queries need to be adjusted according to updated requirements and are therefore a subject of maintenance activities. It is thus necessary to support writing model queries with adequate languages. However, in order to stay meaningful, the analysis results need to be refreshed as soon as the underlying models change. Therefore, a good execution speed is mandatory in order to cope with frequent model changes. In this paper, we propose a benchmark to assess model query technologies in the presence of model change sequences in the domain of social media. We present solutions to this benchmark in a variety of 11 different tools and compare them with respect to explicitness of incrementalization, asymptotic complexity and performance.
C1 [Garcia-Dominguez, Antonio] Aston Univ, Birmingham, W Midlands, England.
   [Schoene, Rene] Tech Univ Dresden, Software Technol Grp, Dresden, Germany.
   [Boronat, Artur] Univ Leicester, Sch Informat, Leicester, Leics, England.
   [Tisi, Massimo; Le Calvar, Theo] CNRS, UMR 6004, IMT Atlantique, LS2N, Nantes, France.
   [Le Calvar, Theo] Univ Montreal, DIRO, Montreal, PQ, Canada.
   [Jouault, Frederic] ERIS, ESEO TECH, Angers, France.
   [Marton, Jozsef; Nyiri, Tamas] Budapest Univ Technol & Econ, Dept Telecommun & Media Informat, Budapest, Hungary.
   [Antal, Janos Benjamin; Elekes, Marton] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
   [Szarnyas, Gabor] CWI, Amsterdam, Netherlands.
C3 Aston University; Technische Universitat Dresden; University of
   Leicester; Centre National de la Recherche Scientifique (CNRS); IMT -
   Institut Mines-Telecom; IMT Atlantique; Universite de Montreal; Budapest
   University of Technology & Economics; Budapest University of Technology
   & Economics
RP Elekes, M (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
EM georg.hinkel@gmail.com; a.garcia-dominguez@aston.ac.uk;
   rene.schoene@tu-dresden.de; artur.boronat@leicester.ac.uk;
   massimo.tisi@imt-atlantique.fr; theo.le-calvar@imt-atlantique.fr;
   frederic.jouault@eseo.fr; marton.jozsef@vik.bme.hu; elekes@mit.bme.hu;
   gabor.szarnyas@cwi.nl
RI Schöne, René/HDO-6150-2022; Garcia Dominguez, Antonio/IAN-2064-2023;
   Marton, Jozsef/S-9754-2017
OI Garcia Dominguez, Antonio/0000-0002-4744-9150; Hinkel,
   Georg/0000-0002-6462-5208; Schone, Rene/0000-0002-3247-0264; Marton,
   Jozsef/0000-0003-4752-4234; Le Calvar, Theo/0000-0003-2273-2053; Elekes,
   Marton/0000-0002-3558-147X
FU German Federal Ministry of Education and Research within the research
   project "OpenLicht"; European Commission; Hungarian Authorities (NKFIH)
   through the Arrowhead Tools project (EU Grant) [826452]; Hungarian
   Authorities (NKFIH) through the Arrowhead Tools project (NKFIH Grant)
   [2019-2.1.3-NEMZ ECSEL-2019-00003]; NRDI Fund; SQIREL-GRAPHS NWO project
FX We would like to thank Frank McSherry for providing an initial
   implementation of the Differential Dataflow solution. Rene Schone was
   supported by German Federal Ministry of Education and Research within
   the research project "OpenLicht". Marton Elekes's research was funded by
   the European Commission and the Hungarian Authorities (NKFIH) through
   the Arrowhead Tools project (EU Grant Agreement No. 826452, NKFIH Grant
   2019-2.1.3-NEMZ ECSEL-2019-00003) and by the NRDI Fund based on the
   charter of bolster issued by the NRDI Office under the auspices of the
   Ministry for Innovation and Technology. Gabor Szarnyas was partially
   supported by the SQIREL-GRAPHS NWO project.
CR Abadi D., 2018, DATA PARTITIONING EN, V2, DOI 10.1007/978-1-4614-8265-9_688
   Acar Umut A., 2005, THESIS CARNEGIE MELL
   Acar UmutA., 2009, Proceedings of the 2009 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation, P1, DOI DOI 10.1145/1480945
   Aho AlfredV., 1979, C REC 6 ANN ACM S PR, P110
   Angles R., 2020, ARXIV200102299 CORR
   Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Barmpis K, 2020, MODEL MANAGEMENT AND ANALYTICS FOR LARGE SCALE SYSTEMS, P87, DOI 10.1016/B978-0-12-816649-9.00014-4
   Beaudoux O, 2010, LECT NOTES COMPUT SC, V6394, P91
   Bergmann G., 2010, LNCS, V6394, P76, DOI [10.1007/978-3-642-16145-26, DOI 10.1007/978-3-642-16145-26]
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Besnard V., 2018, P 11 TRANSF TOOL CON
   Blakeley J. A., 1986, SIGMOD Record, V15, P61, DOI 10.1145/16856.16861
   Bogeholz H, 2020, PROC INT CONF DATA, P1525, DOI 10.1109/ICDE48307.2020.00135
   Boronat A., 2018, P 11 TRANSF TOOL CON
   Boronat A, 2021, INT J SOFTW TOOLS TE, V23, P289, DOI 10.1007/s10009-020-00583-y
   Boronat A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P78, DOI 10.1145/3239372.3239386
   Brucker Achim D., 2014, P 14 INT WORKSH OCL, V1285, P83
   Buluç A, 2017, IEEE SYM PARA DISTR, P643, DOI 10.1109/IPDPSW.2017.117
   Burckhardt S, 2011, ACM SIGPLAN NOTICES, V46, P427, DOI 10.1145/2076021.2048101
   Calvar T.L., 2018, OCL 18, V2245, P160
   Chirkova R, 2011, FOUND TRENDS DATABAS, V4, P295, DOI 10.1561/1900000020
   Davis TA, 2019, ACM T MATH SOFTWARE, V45, DOI 10.1145/3322125
   Dong GZ, 2000, SIGMOD REC, V29, P44, DOI 10.1145/344788.344808
   Elekes M., 2020, P 27 PHD MIN S BUD U
   Elekes M, 2020, IEEE SYM PARA DISTR, P203, DOI 10.1109/IPDPSW50202.2020.00045
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   Fan WF, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P155, DOI 10.1145/3035918.3035944
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Francis N, 2018, INT CONF MANAGE DATA, P1433, DOI 10.1145/3183713.3190657
   Garcia-Dominguez A., 2019, CEUR WORKSHOP PROC, V2310
   Garcia-Dominguez A., 2018, P 11 TRANSF TOOL CON
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   GREEN A, 2019, PVLDB
   Griffin T., 1998, SIGMOD Record, V27, P22, DOI 10.1145/290593.290597
   Gupta A., 1995, IEEE DATA ENG B, V18, P3
   Hammer MA, 2015, ACM SIGPLAN NOTICES, V50, P748, DOI [10.1145/2814270.2814305, 10.1145/2858965.2814305]
   Hammer MA, 2014, ACM SIGPLAN NOTICES, V49, P156, DOI [10.1145/2594291.2594324, 10.1145/2666356.2594324]
   Hartmann T., 2017, ANAL COMPLEX DATA MO, P596, DOI [10.18293/SEKE2017-048, DOI 10.18293/SEKE2017-048]
   Hedin G., 2000, Informatica, V24, P301
   Hedin G, 2003, SCI COMPUT PROGRAM, V47, P37, DOI 10.1016/S0167-6423(02)00109-0
   Hinkel G., 2017, P 10 TRANSF TOOL CON
   Hinkel G., 2015, P 8 TRANSF TOOL CONT, V1524, P142
   Hinkel G., 2018, THEORY PRACTICE MODE
   Hinkel G., 2016, NMF: A Modeling Framework for the
   Hinkel G., 2017, CEUR WORKSHOP P, V2026, P13
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2016, 16 INT WORKSH OCL TE, P121
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Jouault Frederic, 2015, P 15 INT WORKSH OCL, V1512, P35
   Kepner J., 2016, 2016 IEEE HIGH PERF, P1
   Klabnik S., 2018, The Rust Programming Language
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Magnusson E, 2007, SCI COMPUT PROGRAM, V68, P21, DOI 10.1016/j.scico.2005.06.005
   Martínez S, 2017, SCI COMPUT PROGRAM, V136, P1, DOI 10.1016/j.scico.2016.08.006
   Mattson T, 2019, IEEE SYM PARA DISTR, P276, DOI 10.1109/IPDPSW.2019.00053
   McSherry Frank, 2013, CIDR
   Mey J., 2020, ART SCI ENG PROGRAM, DOI 10.22152/programming-journal.org/2020/4/15
   Mey J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P70, DOI 10.1145/3276604.3276616
   Monge A.E., 1997, PROC SIGMOD WORKSHOP, P23
   Murray DG, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P439, DOI 10.1145/2517349.2522738
   Murray DG, 2016, COMMUN ACM, V59, P75, DOI 10.1145/2983551
   Needham M., 2019, Graph Algorithms
   Peldszus S., 2017, CEUR WORKSHOP PROC, V2026, P19
   PUGH W, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P315, DOI 10.1145/75277.75305
   Raasveldt Mark, 2019, SIGMOD '19: Proceedings of the 2019 International Conference on Management of Data, P1981, DOI 10.1145/3299869.3320212
   Ramalingam G., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P502, DOI 10.1145/158511.158710
   REISS SP, 1984, SIGPLAN NOTICES, V19, P144, DOI 10.1145/502949.502889
   Schone R., 2018, P 11 TRANSF TOOL CON
   Sebaa A, 2019, INT J COOP INF SYST, V28, DOI 10.1142/S0218843019300018
   Sedgewick R., 2011, Algorithm
   Szarnyas, 2019, THESIS BUDAPEST U TE
   Szarnyas G., 2017, Software & Systems Modeling, P1
   Szarnyas Gabor., 2015, Transformation Tool Contest, P129
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   ThomasW Reps, 1982, S PRINCIPLES PROGRAM, P169, DOI [10.1145/582153.582172, DOI 10.1145/582153.582172]
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Vogt H.H., 1989, PLDI 89 ACM NEW YORK, DOI 10.1145/73141.74830
   Waudby Jack, 2020, GRADESNDA 20 P 3 JOI, DOI [10.1145/3398682.3399165, DOI 10.1145/3398682.3399165]
   Zhang Yongzhe., 2020, P 2020 SIAM C PARALL, P46
   Zhao KF, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1165, DOI 10.1145/3035918.3035943
   2011, SOFTW ENVIRON TOOLS, V22, P1
NR 85
TC 0
Z9 0
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 755
EP 804
DI 10.1007/s10270-021-00927-5
EA DEC 2021
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000728772300001
OA Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Boll, A
   Brokhausen, F
   Amorim, T
   Kehrer, T
   Vogelsang, A
AF Boll, Alexander
   Brokhausen, Florian
   Amorim, Tiago
   Kehrer, Timo
   Vogelsang, Andreas
TI Characteristics, potentials, and limitations of open-source Simulink
   projects for empirical research
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Simulink; Open source; Empirical research; Sample study
ID EVOLUTION
AB Simulink is an example of a successful application of the paradigm of model-based development into industrial practice. Numerous companies create and maintain Simulink projects for modeling software-intensive embedded systems, aiming at early validation and automated code generation. However, Simulink projects are not as easily available as code-based ones, which profit from large publicly accessible open-source repositories, thus curbing empirical research. In this paper, we investigate a set of 1734 freely available Simulink models from 194 projects and analyze their suitability for empirical research. We analyze the projects considering (1) their development context, (2) their complexity in terms of size and organization within projects, and (3) their evolution over time. Our results show that there are both limitations and potentials for empirical research. On the one hand, some application domains dominate the development context, and there is a large number of models that can be considered toy examples of limited practical relevance. These often stem from an academic context, consist of only a few Simulink blocks, and are no longer (or have never been) under active development or maintenance. On the other hand, we found that a subset of the analyzed models is of considerable size and complexity. There are models comprising several thousands of blocks, some of them highly modularized by hierarchically organized Simulink subsystems. Likewise, some of the models expose an active maintenance span of several years, which indicates that they are used as primary development artifacts throughout a project's lifecycle. According to a discussion of our results with a domain expert, many models can be considered mature enough for quality analysis purposes, and they expose characteristics that can be considered representative for industry-scale models. Thus, we are confident that a subset of the models is suitable for empirical research. More generally, using a publicly available model corpus or a dedicated subset enables researchers to replicate findings, publish subsequent studies, and use them for validation purposes. We publish our dataset for the sake of replicating our results and fostering future empirical research.
C1 [Boll, Alexander; Kehrer, Timo] Humboldt Univ, Berlin, Germany.
   [Brokhausen, Florian] Tech Univ Berlin, Berlin, Germany.
   [Amorim, Tiago; Vogelsang, Andreas] Univ Cologne, Cologne, Germany.
C3 Humboldt University of Berlin; Technical University of Berlin;
   University of Cologne
RP Vogelsang, A (corresponding author), Univ Cologne, Cologne, Germany.
EM boll@informatik.hu-berlin.de; florian.brokhausen@tu-berlin.de;
   amorim@cs.uni-koeln.de; timo.kehrer@informatik.hu-berlin.de;
   vogelsang@cs.uni-koeln.de
RI Kehrer, Timo/AAI-6563-2020
OI Kehrer, Timo/0000-0002-2582-5557; Boll, Alexander/0000-0002-9881-9748;
   Brokhausen, Florian/0000-0002-8003-4344; Buarque de Amorim, Tiago
   Luiz/0000-0003-0930-2307; Vogelsang, Andreas/0000-0003-1041-0815
FU German Ministry of Research and Education (BMBF) [01IS18091]
FX This work has been supported by the German Ministry of Research and
   Education (BMBF) within project SimuComp (Simulink Architecture
   Comprehension and Analysis) under grant 01IS18091. Special thanks to
   Ferry Bachmann for helping us with his expert knowledge. We also would
   like to thank the anonymous reviewers for their critical reading and
   detailed feedback, which greatly helped to improve and clarify this
   manuscript.
CR Amorim T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P203, DOI 10.1109/ICSE-SEIP.2019.00030
   [Anonymous], 2014, 1 INT WORKSH APPL VE
   [Anonymous], 2013, IFIP INT C OPEN SOUR
   [Anonymous], 2013, P INT C QUAL SOFTW A
   [Anonymous], 2020, ACM SIGSOFT EMPIRICA
   Balasubramaniam B, 2020, ACM IEEE INT CONF CY, P151, DOI 10.1109/ICCPS48487.2020.00022
   Baltes Sebastian, 2020, ARXIV200207764
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bertram V, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P167, DOI 10.1109/MODELS.2017.29
   Boll Alexander, 2020, INT C SYST MOD MAN S
   Bourbouh H., 2020, 10 EUR C EMB REAL TI
   Bourbouh Hamza, 2017, AUTOMATED ANAL STATE, DOI DOI 10.29007/B8GQ
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Burden H., 2014, P 8 ACMIEEE INT S EM, P1
   Chowdhury SA, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377812.3382147
   Chowdhury SA, 2018, PROC IEEE ACM INT C, P452, DOI 10.1145/3183440.3183455
   Chowdhury SA, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P45, DOI 10.1145/3196478.3196484
   Chowdhury SA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P981, DOI 10.1145/3180155.3180231
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Dajsuren Y., 2015, DESIGN ARCHITECTURE
   DAmbros M., 2008, Software Evolution, P37
   DeCuir-Gunby JT, 2011, FIELD METHOD, V23, P136, DOI 10.1177/1525822X10388468
   deF, 2016, P 31 ANN ACM S APPL, P1472, DOI DOI 10.1145/2851613.2851786
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Ernst G., 2019, International Workshop on Applied Verification of Continuous and Hybrid Systems, V61, P129
   Eunyoung Chung, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P195, DOI 10.1109/VLHCC.2010.34
   Getir S, 2018, J SYST SOFTWARE, V142, P115, DOI 10.1016/j.jss.2018.04.001
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V5969, P3
   Hussain A, 2019, IEEE ACCESS, V7, P149422, DOI 10.1109/ACCESS.2019.2946747
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jiang ZY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P363, DOI 10.1109/QRS-C.2017.67
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kelter, 2013, SOFTWARE ENG, V2013
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Langer P., 2014, MODELLIERUNG 2014, P289
   Liggesmeyer P, 2009, IEEE SOFTWARE, V26, P19, DOI 10.1109/MS.2009.80
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Nassar N, 2020, LECT NOTES COMPUT SC, V12076, P224, DOI 10.1007/978-3-030-45234-6_11
   Nguyen HL, 2020, IEEE INT CONF AUTOM, P1103, DOI 10.1145/3324884.3416668
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Olszewska Marta., 2016, P 10 EUROPEAN C SOFT, P1
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Rao AC, 2017, 2017 FOURTH INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND THEIR APPLICATIONS (DSA 2017), P1, DOI 10.1109/DSA.2017.10
   Sanchez BA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P205, DOI 10.1109/MODELS.2019.000-1
   Schultheiss A., 2020, P 24 ACM C SYST SOFT, VA, P1
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Stephan M, 2014, IEEE ICST WORKSHOP, P206, DOI 10.1109/ICSTW.2014.17
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2009, INT FED INFO PROC, V299, P156
   Störrle H, 2018, SOFTW SYST MODEL, V17, P115, DOI 10.1007/s10270-016-0529-x
   Svendsen Andreas, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P38, DOI 10.1007/978-3-642-25264-8_5
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tomita T, 2019, IEEE ACM INT WORKS M, P39, DOI 10.1109/MiSE.2019.00014
   Ho-Quang T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P203, DOI 10.1109/ICSE-SEIP.2017.28
   Vogelsang A, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2019.106253
   Vogelsang A, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110458
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Minh VT, 2017, INT J ELECTR HYBRID, V9, P302, DOI 10.1504/IJEHV.2017.10011115
   WILLIAMSON DF, 1989, ANN INTERN MED, V110, P916, DOI 10.7326/0003-4819-110-11-916
   Yazdi HS, 2016, J SYST SOFTWARE, V118, P176, DOI 10.1016/j.jss.2016.05.010
   Yazdi HS, 2015, COMPUT SCI-RES DEV, V30, P231, DOI 10.1007/s00450-014-0255-y
   Yazdi HS, 2014, LECT NOTES BUS INF P, V178, P1
NR 72
TC 13
Z9 14
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2111
EP 2130
DI 10.1007/s10270-021-00883-0
EA APR 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000640150000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Urbieta, M
   Firmenich, S
   Bosetti, G
   Maglione, P
   Rossi, G
   Olivero, MA
AF Urbieta, Matias
   Firmenich, Sergio
   Bosetti, Gabriela
   Maglione, Pedro
   Rossi, Gustavo
   Olivero, Miguel Angel
TI MDWA: a model-driven Web augmentation approach-coping with client- and
   server-side support
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven Web engineering; Augmentation; Web development; Separation
   of concern
ID VOLATILE FUNCTIONALITY
AB Web augmentation is a set of techniques allowing users to define and execute software which is dependent on the presentation layer of a concrete Web page. Through the use of specialized Web augmentation artifacts, the end users may satisfy several kinds of requirements that were not considered by the analysts, developers and stakeholders that built the application. Although some augmentation approaches are contemplating a server-side counterpart (to support aspects such as collaboration or cross-browser session management), the augmentation artifacts are usually purely client-side. The server-side support increases the capabilities of the augmentations, since it may allow sharing information among users and devices. So far, this support is often defined and developed in an ad hoc way. Although it is clear that server-side support brings new possibilities, it is also true that developing and deploying server-side Web applications is a challenging task that end users hardly may handle. This work presents a novel approach for designing Web augmentation applications based on client-side and server-side components. We propose a model-driven approach that raises the abstraction level of both, client- and server-side developments. We provide a set of tools for designing the composition of the core application with new features on the back-end and the augmentation of pages in the front-end. The usability and the value of the produced augmentations have been evaluated through two experiments involving 30 people in total.
C1 [Urbieta, Matias; Firmenich, Sergio; Bosetti, Gabriela; Maglione, Pedro; Rossi, Gustavo] Univ Nacl La Plata, Fac Informat, Calle 50 & 120, RA-1900 La Plata, Buenos Aires, Argentina.
   [Urbieta, Matias; Firmenich, Sergio; Rossi, Gustavo] Consejo Nacl Invest Cient & Tecn, La Plata, Argentina.
   [Olivero, Miguel Angel] Univ Seville, Web Engn & Early Testing Grp, Comp Languages & Syst Dept, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
   [Olivero, Miguel Angel] CNR, ISTI, Pisa, Italy.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); University of Sevilla; Consiglio
   Nazionale delle Ricerche (CNR); Istituto di Scienza e Tecnologie
   dell'Informazione "Alessandro Faedo" (ISTI-CNR)
RP Urbieta, M (corresponding author), Univ Nacl La Plata, Fac Informat, Calle 50 & 120, RA-1900 La Plata, Buenos Aires, Argentina.; Urbieta, M (corresponding author), Consejo Nacl Invest Cient & Tecn, La Plata, Argentina.
EM matias.urbieta@lifia.info.unlp.edu.ar;
   sergio.firmenich@lifia.info.unlp.edu.ar;
   gabriela.bosetti@lifia.info.unlp.edu.ar; pedroms@lifia.info.unlp.edu.ar;
   gustavo@lifia.info.unlp.edu.ar; miguel.olivero@iwt2.org
RI Olivero, Miguel Ángel/I-3907-2017
OI Olivero, Miguel Ángel/0000-0002-6627-3699; Firmenich,
   Sergio/0000-0001-9502-2189
FU European Union [691249]; Marie Curie Actions (MSCA) [691249] Funding
   Source: Marie Curie Actions (MSCA)
FX Authors of this publication acknowledge the contribution of the Project
   691249, RUC-APS: Enhancing and implementing Knowledge based ICT
   solutions within high Risk and Uncertain Conditions for Agriculture
   Production Systems (www.ruc-aps.eu), funded by the European Union under
   their funding scheme H2020MSCA-RISE-2015.
CR Aldalur I., 2017, P ACM SIGCHI S ENG I, P45
   Aldalur I, 2017, New perspectives in end-user development, P433
   [Anonymous], DDWAY CALCULATION FU
   [Anonymous], 24 ACM C HYP SOC MED
   [Anonymous], 2017, MOBILE INFORM SYSTEM
   [Anonymous], 2017, APMDWE
   Aragon G, 2013, INT J INNOV COMPUT I, V9, P413
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brambilla M., 2014, Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Ceri S, 2004, LECT NOTES COMPUT SC, V3140, P201
   Díaz O, 2016, COMM COM INF SC, V591, P82, DOI 10.1007/978-3-319-28727-0_6
   Díaz O, 2015, ACM T WEB, V9, DOI 10.1145/2735633
   Díaz O, 2013, ACM T WEB, V7, DOI 10.1145/2460383.2460388
   Díaz O, 2010, LECT NOTES COMPUT SC, V6189, P233, DOI 10.1007/978-3-642-13911-6_16
   Domínguez-Mayo FJ, 2014, J WEB ENG, V13, P129
   Firmenich D, 2018, REQUIR ENG, V23, P33, DOI 10.1007/s00766-016-0257-3
   Firmenich D, 2015, LECT NOTES COMPUT SC, V9114, P147, DOI 10.1007/978-3-319-19890-3_11
   Firmenich S, 2016, LECT NOTES COMPUT SC, V9881, P200, DOI 10.1007/978-3-319-46963-8_20
   Firmenich S, 2016, LECT NOTES COMPUT SC, V9671, P77, DOI 10.1007/978-3-319-38791-8_5
   Firmenich S, 2014, LECT NOTES COMPUT SC, V8541, P359, DOI 10.1007/978-3-319-08245-5_21
   Firmenich S, 2014, INT J HUM-COMPUT ST, V72, P53, DOI 10.1016/j.ijhcs.2013.08.014
   Firmenich S, 2010, J WEB ENG, V9, P157
   Frajberg D, 2016, LECT NOTES COMPUT SC, V9671, P59, DOI 10.1007/978-3-319-38791-8_4
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garrido A, 2013, IEEE INTERNET COMPUT, V17, P58, DOI 10.1109/MIC.2012.143
   Ginzburg J, 2007, LECT NOTES COMPUT SC, V4607, P152
   Ginzburg J, 2009, J WEB ENG, V8, P25
   Herlocker JL, 2000, P 2000 ACM C COMP SU, P241, DOI [10.1145/358916.358995, DOI 10.1145/358916.358995]
   Hwang W, 2010, COMMUN ACM, V53, P130, DOI 10.1145/1735223.1735255
   Panach JI, 2021, IEEE T SOFTWARE ENG, V47, P130, DOI 10.1109/TSE.2018.2884706
   Juristo N., 2010, BASICS SOFTWARE ENG
   Lowe D, 2002, LECT NOTES COMPUT SC, V2503, P105
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Mikkonen T, 2015, LECT NOTES COMPUT SC, V9114, P134, DOI 10.1007/978-3-319-19890-3_10
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Rossi G., 2008, Web Engineering. Modelling and Implementing Web Applications
   Rossi G, 2006, LA-WEB 06: FOURTH LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P179
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Urbieta M, 2018, SOFTWARE PRACT EXPER, V48, P11, DOI 10.1002/spe.2503
   Urbieta M, 2012, INT J SOFTW ENG KNOW, V22, P129, DOI 10.1142/S0218194012500064
   Wischenbart Martin, 2015, INTRS RECSYS, P53
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 45
TC 7
Z9 7
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1541
EP 1566
DI 10.1007/s10270-020-00779-5
EA FEB 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000516010200002
DA 2024-07-18
ER

PT J
AU Aichernig, BK
   Schumi, R
AF Aichernig, Bernhard K.
   Schumi, Richard
TI Property-based testing of web services by deriving properties from
   business-rule models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based testing; Test case generation; Property-based testing;
   QuickCheck; FsCheck; Web services; Business-rule models
ID QUICKCHECK
AB Property-based testing is well suited for web-service applications, which was already shown in various case studies. For example, it has been demonstrated that JSON schemas can be used to automatically derive test case generators for web forms. In this work, we present a test case generation approach for a rule engine-driven web-service application. Business-rule models serve us as input for property-based testing. We parse these models to automatically derive generators for sequences of web-service requests together with their required form data. Property-based testing is mostly applied in the context of functional programming. Here, we define our properties in an object-oriented style in C# and its tool FsCheck. We apply our method to the business-rule models of an industrial web-service application in the automotive domain.
C1 [Aichernig, Bernhard K.; Schumi, Richard] Graz Univ Technol, Inst Software Technol, Graz, Austria.
C3 Graz University of Technology
RP Schumi, R (corresponding author), Graz Univ Technol, Inst Software Technol, Graz, Austria.
EM aichernig@ist.tugraz.at; rschumi@ist.tugraz.at
OI Aichernig, Bernhard/0000-0002-3484-5584
FU Graz University of Technology; Austrian Research Promotion Agency (FFG)
   [845582]; FsCheck community
FX Open access funding provided by Graz University of Technology. The
   research leading to these results has received funding from the Austrian
   Research Promotion Agency (FFG), Project Number 845582, Trust via cost
   function-driven model-based test case generation for non-functional
   properties of systems of systems (TRUCONF). The authors would like to
   thank Florian Lorber and Martin Tappler for their helpful comments and
   suggestions to improve the quality of the paper. The authors would like
   to acknowledge the team at AVL, especially Elisabeth Jobstl, Severin
   Kann, Manfred Uschan and Christoph Schwarz, who have provided us support
   regarding the web application under test and also valuable ideas and
   feedback. Furthermore, we are grateful to the FsCheck community and Kurt
   Schelfthout for providing FsCheck and support and to Silvio Marcovic for
   his help in the case studies.
CR Aichernig BK, 2016, IEEE ICST WORKSHOP, P219, DOI 10.1109/ICSTW.2016.24
   [Anonymous], 2006, P 2006 ACM SIGPLAN W
   [Anonymous], 2013, ERLANG 13, DOI DOI 10.1145/2505305.2505306
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   Benac Earle C., 2014, ERLANG 14, P33, DOI DOI 10.1145/2633448.2633454
   Charfi A., 2004, ICSOC 04, P30
   CHENG KT, 1993, ACM IEEE D, P86
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Claessen K, 2002, ACM SIGPLAN NOTICES, V37, P47, DOI 10.1145/636517.636527
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Fredlund LÅ, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P704, DOI 10.1109/ICWS.2014.110
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Herbst H, 1997, BUSINESS RULE ORIENT, DOI [10.1007/978-3-642-59260-7, DOI 10.1007/978-3-642-59260-7]
   Hughes J, 2007, LECT NOTES COMPUT SC, V4354, P1
   Hughes J, 2016, IEEE INT CONF SOFTW, P135, DOI 10.1109/ICST.2016.37
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Lampropoulos L, 2012, ELECTRON PROC THEOR, P3, DOI 10.4204/EPTCS.98.3
   Li HQ, 2014, PEPM '14: PROCEEDINGS OF THE ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P169, DOI 10.1145/2543728.2543741
   Lopez L. M. C. Maciias, 2013, DRAFT P 25 INT S IMP
   Milanovic N, 2004, IEEE INTERNET COMPUT, V8, P51, DOI 10.1109/MIC.2004.58
   Nilsson R., 2014, ScalaCheck: The Definitive Guide
   Orriëns B, 2003, LECT NOTES COMPUT SC, V2819, P14
   Papadakis M, 2011, ERLANG 11: PROCEEDINGS OF THE 2011 ACM SIGPLAN ERLANG WORKSHOP, P39
   Rosenberg F, 2005, SEVENTH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY WORKSHOPS, P55, DOI 10.1109/CECW.2005.10
   Rosenberg F, 2005, CEC 2005: Seventh IEEE International Conference on E-Commerce Technology, Proceedings, P476, DOI 10.1109/ICECT.2005.25
   Ross R. G, 2003, PRINCIPLES BUSINESS, DOI [10.1016/j.ijinfomgt.2003.12.007, DOI 10.1016/J.IJINFOMGT.2003.12.007]
   Runciman C, 2008, HASKELL'08: PROCEEDINGS OF THE ACM SIGPLAN 2008 HASKELL SYMPOSIUM, P37
   Svenningsson R, 2012, SER ADV MATH APPL SC, V84, P391
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Wada Yusuke, 2012, Journal of Information Processing, V20, P340, DOI 10.2197/ipsjjip.20.340
   Wagner G, 2004, IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2004), PROCEEDINGS, P628, DOI 10.1109/WI.2004.10036
NR 32
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 889
EP 911
DI 10.1007/s10270-017-0647-0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400007
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zhang, M
   Ali, S
   Yue, T
   Norgren, R
   Okariz, O
AF Zhang, Man
   Ali, Shaukat
   Yue, Tao
   Norgren, Roland
   Okariz, Oscar
TI Uncertainty-Wise Cyber-Physical System test modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Uncertainty; Cyber-Physical System; UML; Model-based testing
ID ENTROPY
AB It is important that a Cyber-Physical System (CPS) with uncertainty in its behavior caused by its unpredictable operating environment, to ensure its reliable operation. One method to ensure that the CPS will handle such uncertainty during its operation is by testing the CPS with model-based testing (MBT) techniques. However, existing MBT techniques do not explicitly capture uncertainty in test ready models, i.e., capturing the uncertain expected behavior of a CPS in the presence of environment uncertainty. To fill this gap, we present an Uncertainty-Wise test-modeling framework, named as UncerTum, to create test ready models to support MBT of CPSs facing uncertainty. UncerTum relies on the definition of a UML profile [the UML Uncertainty Profile (UUP)] and a set of UML Model Libraries extending the UML profile for Modeling and Analysis of Real-Time and Embedded Systems (MARTE). UncerTum also benefits from the UML Testing Profile V.2 to support standard-based MBT. UncerTum was evaluated with two industrial CPS case studies, one real-world case study, and one open-source CPS case study from the following four perspectives: (1) Completeness and Coverage of the profiles and Model Libraries in terms of concepts defined in their underlying uncertainty conceptual model for CPSs, i.e., U-Model and MARTE, (2) Effort required to model uncertainty with UncerTum, and (3) Correctness of the developed test ready models, which was assessed via model execution. Based on the evaluation, we can conclude that we were successful in modeling all the uncertainties identified in the four case studies, which gives us an indication that UncerTum is sufficiently complete. In terms of modeling effort, we concluded that on average UncerTum requires 18.5% more time to apply stereotypes from UUP on test ready models.
C1 [Zhang, Man; Ali, Shaukat; Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Yue, Tao] Univ Oslo, Oslo, Norway.
   [Norgren, Roland] Future Posit X, Res & Innovat, GIS Cluster, Gavle, Sweden.
   [Okariz, Oscar] ULMA Handling Syst, Onati, Spain.
C3 University of Oslo
RP Zhang, M (corresponding author), Simula Res Lab, Oslo, Norway.
EM manzhang@simula.no; shaukat@simula.no; tao@simula.no;
   roland.norgren@fpx.se; ookariz@manutencion.ulma.es
RI Zhang, Man/AGR-7496-2022; yue, tao/H-6783-2013
OI Zhang, Man/0000-0003-1204-9322; 
FU EU Horizon 2020 [645463]; RCN; RFF Hovedstaden
FX This research was supported by the EU Horizon 2020-funded project
   (testing Cyber-Physical Systems under Uncertainty, Project number:
   645463). Tao Yue and Shaukat Ali are also supported by RCN-funded
   Zen-Configurator project, RFF Hovedstadenfunded MBE-CR project,
   RCN-funded MBT4CPS project, and RCNfunded Certus SFI.
CR Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   Ali S, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P311, DOI 10.1109/ISSREW.2014.13
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], UML 2001 UNIFIED MOD
   [Anonymous], 2008, INTRO PROBABILITY TH
   [Anonymous], 2016, CYBER PHYS SYSTEMS F
   [Anonymous], 2015, CYBER PHYS SYSTEMS T
   [Anonymous], 4 INT WORKSH RISK AS
   [Anonymous], J ADV COMPUT RES
   [Anonymous], P IEEE 8 INT C SOFTW
   [Anonymous], 2011, FUZZY SET THEORY ITS
   [Anonymous], WORLD ACAD SCI ENG T
   [Anonymous], 2008 1 INT C SOFTW T
   [Anonymous], P NIST CPS WORKSH CH
   [Anonymous], MATH SCI ENG
   [Anonymous], CONCR SYNT UML ACT L
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], UML TEST PROF VERS 1
   [Anonymous], ADV FUZZY OBJECT ORI
   [Anonymous], 1998, AIR FORCE J LOGIST
   [Anonymous], 2005, UML PROF SCHED PERF
   [Anonymous], UML TEST PROF VERS 2
   [Anonymous], P 12 EUR C MOD FDN A
   [Anonymous], 201601 SIM RES LAB
   ATANASSOV K, 1993, FUZZY SET SYST, V53, P121, DOI 10.1016/0165-0114(93)90166-F
   Bammer G., 2012, UNCERTAINTY RISK MUL
   DELUCA A, 1972, INFORM CONTROL, V20, P301, DOI 10.1016/S0019-9958(72)90199-4
   DEMPSTER AP, 1967, ANN MATH STAT, V38, P325, DOI 10.1214/aoms/1177698950
   Famelis M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MiSE.2013.6595289
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   GAU WL, 1993, IEEE T SYST MAN CYB, V23, P610, DOI 10.1109/21.229476
   Geisberger E., 2015, Living in a networked world: Integrated research agenda Cyber-Physical Systems (agendaCPS)
   George J., 2008, Fuzzy sets and fuzzy logic, theory and applications
   GOGUEN JA, 1967, J MATH ANAL APPL, V18, P145, DOI 10.1016/0022-247X(67)90189-8
   GRATTANGUINNESS I, 1976, Z MATH LOGIK, V22, P149, DOI 10.1002/malq.19760220120
   Hartley RVL, 1928, BELL SYST TECH J, V7, P535, DOI 10.1002/j.1538-7305.1928.tb01236.x
   HIGASHI M, 1982, INT J GEN SYST, V9, P43, DOI 10.1080/03081078208960799
   JAHN KU, 1975, MATH NACHR, V68, P115, DOI 10.1002/mana.19750680109
   KERWIN A, 1993, KNOWLEDGE, V15, P166, DOI 10.1177/107554709301500204
   Klir G., 2013, FACETS SYSTEMS SCI
   KOSKO B, 1986, INFORM SCIENCES, V40, P165, DOI 10.1016/0020-0255(86)90006-X
   LAMATA MT, 1988, INT J GEN SYST, V14, P297, DOI 10.1080/03081078808935019
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lindley DV, 2014, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118650158
   Ma ZM, 2011, APPL SOFT COMPUT, V11, P4236, DOI 10.1016/j.asoc.2011.03.020
   Ma ZM, 2011, EXPERT SYST APPL, V38, P2536, DOI 10.1016/j.eswa.2010.08.042
   PAWLAK Z, 1982, INT J COMPUT INF SCI, V11, P341, DOI 10.1007/BF01001956
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Shafer G, 1976, MATH THEORY EVIDENCE, DOI DOI 10.1080/00401706.1978.10489628
   Sicilia M.-A., 2004, WSEAS Transactions on Systems, V3, P2234
   SMETS P, 1994, ARTIF INTELL, V66, P191, DOI 10.1016/0004-3702(94)90026-4
   Talcott Carolyn, 2008, Software-Intensive Systems and New Computing Paradigms, P101
   YAGER RR, 1983, INT J GEN SYST, V9, P249, DOI 10.1080/03081078308960825
   Yan L, 2009, 2009 WASE INTERNATIONAL CONFERENCE ON INFORMATION ENGINEERING, ICIE 2009, VOL I, P587, DOI 10.1109/ICIE.2009.166
   Zadeh L. A., 1978, Fuzzy Sets and Systems, V1, P3, DOI 10.1016/0165-0114(78)90029-5
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zhang F, 2013, INT J COMPUT INT SYS, V6, P442, DOI 10.1080/18756891.2013.780735
NR 60
TC 34
Z9 35
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1379
EP 1418
DI 10.1007/s10270-017-0609-6
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400028
DA 2024-07-18
ER

PT J
AU Hinkel, G
   Burger, E
AF Hinkel, Georg
   Burger, Erik
TI Change propagation and bidirectionality in internal transformation DSLs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model synchronization; Domain-specific
   language; Change propagation; Bidirectional; Incremental
ID MODEL; LANGUAGE
AB Despite good results in several industrial projects, model-driven engineering (MDE) has not been widely adopted in industry. Although MDE has existed for more than a decade now, the lack of tool support is still one of the major problems, according to studies by Staron and Mohaghegi (Staron, in: Model driven engineering languages and systems, Springer, Berlin, 2006; Mohagheghi et al. in Empir Softw Eng 18(1):89-116, 2013). Internal languages offer a solution to this problem for model transformations, which are a key part of MDE. Developers can use existing tools of host languages to create model transformations in a familiar environment. These internal languages, however, typically lack key features such as change propagation or bidirectional transformations. In our opinion, one reason is that existing formalisms for these properties are not well suited for textual languages. In this paper, we present a new formalism describing incremental, bidirectional model synchronizations using synchronization blocks. We prove the ability of this formalism to detect and repair inconsistencies and show its hippocraticness. We use this formalism to create a single internal model transformation language for unidirectional and bidirectional model transformations with optional change propagation. In total, we currently provide 18 operation modes based on a single specification. At the same time, the language may reuse tool support for C#. We validate the applicability of our language using a synthetic example with a transformation from finite state machines to Petri nets where we achieved speedups of up to multiple orders of magnitude compared to classical batch transformations.
C1 [Hinkel, Georg] FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
   [Burger, Erik] Karlsruhe Inst Technol, SDQ Grp, Fasanengarten 5, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Hinkel, G (corresponding author), FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM hinkel@fzi.de; burger@kit.edu
RI Burger, Erik/KVZ-2777-2024
OI Burger, Erik/0000-0003-2832-3349; Hinkel, Georg/0000-0002-6462-5208
CR Acar UA, 2008, ACM SIGPLAN NOTICES, V43, P309, DOI 10.1145/1328897.1328476
   Anjorin A., 2011, LECT NOTES INFORM
   [Anonymous], 2005, PhD thesis
   [Anonymous], 2009, GTTSE 2009, DOI DOI 10.1007/978-3-642-18023-1_3
   [Anonymous], 2016, Proc. IEEE Energy Convers. Congr. and Expo
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Burckhardt S, 2011, ACM SIGPLAN NOTICES, V46, P427, DOI 10.1145/2076021.2048101
   Carlsson M, 2002, ACM SIGPLAN NOTICES, V37, P26, DOI 10.1145/583852.581482
   Chen Y, 2014, J FUNCT PROGRAM, V24, P56, DOI 10.1017/S0956796814000033
   Crole R. L., 1993, CATEGORIES FOR TYPES
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Foster JN, 2005, ACM SIGPLAN NOTICES, V40, P233, DOI 10.1145/1047659.1040325
   Fowler M., 2010, Domain-specific languages
   George Lars, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P160, DOI 10.1007/978-3-642-30476-7_11
   Giese H, 2009, EFFICIENT MODEL SYNC, P28
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Hammer MA, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1543135.1542480
   Havelund K., 2011, TRACECONTRACT SCALA
   Hermann F, 2012, LECT NOTES COMPUT SC, V7212, P178, DOI 10.1007/978-3-642-28872-2_13
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hildebrandt Stephan., 2013, ECEASST, V57, DOI [10.14279/tuj.eceasst.57.865, DOI 10.14279/TUJ.ECEASST.57.865]
   Hinkel G, 2016, NMF MODELING FRAMEWO
   Hinkel G, 2015, P 8 TRANSF TOOL CONT, V1524, P95
   Hinkel G., 2015, P 8 TRANSF TOOL CONT, V1524, P142
   Hinkel G, 2013, THESIS
   Hinkel G, 2014, CEUR WORKSHOP P, V1281, P6
   Hinkel G., 2016, MODELLIERUNG, V2016
   Hinkel G., 2015, 2015 JOINT MORSE VAO
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Hinkel G, 2013, ELECTRON PROC THEOR, P95, DOI 10.4204/EPTCS.135.12
   Hinkel G, 2013, ELECTRON PROC THEOR, P37, DOI 10.4204/EPTCS.135.5
   Hinkel G, 2015, LECT NOTES COMPUT SC, V9152, P3, DOI 10.1007/978-3-319-21155-8_1
   Hofmann M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P495
   Horn Tassilo, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P56, DOI 10.1007/978-3-642-38883-5_7
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Ko HS, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P61, DOI 10.1145/2847538.2847544
   Kramer Max Emanuel, 2017, Ph. D. Dissertation, DOI [10.5445/IR/1000069284, DOI 10.5445/IR/1000069284]
   Krikava F, 2014, LECT NOTES COMPUT SC, V8767, P569, DOI 10.1007/978-3-319-11653-2_35
   Lauder Marius, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P401, DOI 10.1007/978-3-642-33654-6_27
   Lawvere F. W., 2003, SETS FOR MATH
   Leblebici Erhan., 2014, P 13 INT WORKSHOP GR, P67
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Object Management Group, 2011, MET FAC MOF 2 0 QUER
   OMG, 2007, MET FAC MOF 2 0 QUER
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S., 2003, TECHNICAL REPORT
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wider A., 2014, P WORKSH EDBT ICDT J, P63
   Zundorf A., 2013, EPTCS
NR 62
TC 12
Z9 12
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 249
EP 278
DI 10.1007/s10270-017-0617-6
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300012
DA 2024-07-18
ER

PT J
AU Roelens, B
   Steenacker, W
   Poels, G
AF Roelens, Ben
   Steenacker, Wout
   Poels, Geert
TI Realizing strategic fit within the business architecture: the design of
   a Process-Goal Alignment modeling and analysis technique
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Strategic fit; Business architecture; Enterprise modeling; Process-Goal
   Alignment; Heat map
ID I-ASTERISK; INFORMATION-TECHNOLOGY; USER ACCEPTANCE; FRAMEWORK; SYSTEMS;
   MANAGEMENT; CONTEXT
AB The realization of strategic fit within the business architecture is an important challenge for organizations. Research in the field of enterprise modeling has resulted in the development of a wide range of modeling techniques that provide visual representations to improve the understanding and communication about the business architecture. As these techniques only provide partial solutions for the issue of realizing strategic fit, the Process-Goal Alignment technique is presented in this paper. This technique combines the visual expressiveness of heat mapping techniques with the analytical capabilities of performance measurement and Strategic Management frameworks to provide a comprehensible and well-informed modeling language for the realization of strategic fit within an organization's business architecture. The paper reports on the design of the proposed technique by means of Action Design Research, which included iterative cycles of building, intervention, and evaluation through case studies. To support the application of the technique, a software tool was developed using the ADOxx meta-modeling platform.
C1 [Roelens, Ben; Poels, Geert] Univ Ghent, Fac Econ & Business Adm, Tweekerkenstr 2, B-9000 Ghent, Belgium.
   [Steenacker, Wout] Moore Stephens Belgium, Expert Strategy & Operat, B-1000 Brussels, Belgium.
C3 Ghent University
RP Roelens, B (corresponding author), Univ Ghent, Fac Econ & Business Adm, Tweekerkenstr 2, B-9000 Ghent, Belgium.
EM Ben.Roelens@UGent.be; wout.steenacker@moorestephens.be;
   Geert.Poels@UGent.be
RI Roelens, Ben/P-9588-2019; Poels, Geert/D-1130-2013
OI Roelens, Ben/0000-0002-2443-8678; Poels, Geert/0000-0001-9247-6150
CR Al-Debei MM, 2010, EUR J INFORM SYST, V19, P359, DOI 10.1057/ejis.2010.21
   Allee V, 2008, J INTELLECT CAP, V9, P5, DOI 10.1108/14691930810845777
   Andersson B., 2006, P BUSITAL WORKSH BUS, P211
   Andersson B, 2009, INF SYST E-BUS MANAG, V7, P143, DOI 10.1007/s10257-008-0084-2
   Andolsen Alan A., 2007, The Information Management Journal, V41, P35
   Andrews K.R., 1980, The Concept of Corporate Strategy
   [Anonymous], 2004, THESIS U LAUSANNE
   [Anonymous], 2005, INFORM MODELING METH
   [Anonymous], 2011, TOGAF VERS 9 1
   [Anonymous], 2010, Business Process Model and Notation (BPMN). Version 2.0
   [Anonymous], 2004, Strategy & leadership, DOI DOI 10.1016/J.BMC.2004.12.042
   [Anonymous], 2014, SERVICE DOMINANT BUS
   [Anonymous], 2013, OPEN GROUP SERIES
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2013, J DATABASE MANAGE, V24, P35, DOI DOI 10.1080/10455752.2012.759250
   [Anonymous], 2010, SZCZUPLE ROZWIAZANIA
   Balabko P, 2006, INFORM SYST FRONT, V8, P115, DOI 10.1007/s10796-006-7976-9
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Chesbrough H., 2003, OPEN INNOVATION, DOI [10.1016/j.jengtecman.2004.05.003, DOI 10.1016/J.JENGTECMAN.2004.05.003]
   Chesbrough H, 2010, LONG RANGE PLANN, V43, P354, DOI 10.1016/j.lrp.2009.07.010
   Clark T, 2014, SOFTW SYST MODEL, V13, P909, DOI 10.1007/s10270-013-0327-7
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Kinderen S, 2014, SOFTW SYST MODEL, V13, P1043, DOI 10.1007/s10270-012-0299-z
   Demil B, 2010, LONG RANGE PLANN, V43, P227, DOI 10.1016/j.lrp.2010.02.004
   Edirisuriya A, 2009, LECT NOTES BUS INF P, V17, P68
   Eric S., 2011, Social modeling for requirements engineering
   Fill HG, 2013, ENTERP MODELLING INF, V8, P4, DOI 10.1007/BF03345926
   Fill HG, 2013, LECT NOTES BUS INF P, V141, P429, DOI 10.1007/978-3-642-40654-6_26
   Francesconi F, 2013, LECT NOTES COMPUT SC, V8217, P33, DOI 10.1007/978-3-642-41924-9_4
   Frank U., 1994, TECHNOLOGY OBJECT OR, P367
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Frankova C, 2007, INT FED INFO PROC, V238, P407
   Gordijn J, 2006, IEEE SOFTWARE, V23, P26, DOI 10.1109/MS.2006.71
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   Grau G, 2008, INFORM SOFTWARE TECH, V50, P76, DOI 10.1016/j.infsof.2007.10.006
   Gregor S, 2006, MIS QUART, V30, P611
   Guizzardi R, 2015, LECT NOTES COMPUT SC, V9381, P79, DOI 10.1007/978-3-319-25264-3_6
   Hafeez K, 2002, INT J PROD ECON, V76, P39, DOI 10.1016/S0925-5273(01)00141-4
   Harry MJ, 1998, QUAL PROG, V31, P60
   Henderson JC, 1999, IBM SYST J, V38, P472, DOI 10.1147/SJ.1999.5387096
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Karagiannis D, 2002, LECT NOTES COMPUT SC, V2455, P182
   Keller W., 2009, Using Capabilities in Enterprise Architecture Management
   Kim W.Chan., 2005, BLUE OCEAN STRATEGY
   Ko RKL, 2009, BUS PROCESS MANAG J, V15, P744, DOI 10.1108/14637150910987937
   Koliadis G, 2006, LECT NOTES COMPUT SC, V4103, P416
   Lankhorst Marc., 2013, Enterprise Architecture at Work: Modelling, Communication and Analysis (The Enterprise Engineering Series)
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   Lee Y., 2003, Communications of the Association for Information Systems, V12, P752, DOI [DOI 10.17705/1CAIS.01250, 10.17705/1CAIS.01250]
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   Morrison Evan D., 2012, 9th International Conference on Service-Oriented Computing - ICSOC 2011 Workshops, P9, DOI 10.1007/978-3-642-31875-7_3
   OMG, 2015, MET FAC MOF VERS 2 5
   Ould M.A., 1995, BUSINESS PROCESSES M
   Pijpers V, 2012, REQUIR ENG, V17, P203, DOI 10.1007/s00766-011-0136-x
   Popova V, 2011, DATA KNOWL ENG, V70, P335, DOI 10.1016/j.datak.2011.01.001
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   PRAHALAD CK, 1990, HARVARD BUS REV, V68, P79
   Roelens B., 2013, CEUR Workshop Proceedings, V998, P114
   Roelens B, 2014, PROC EUR CONF INFO, P388
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Sanchez R., 1996, EUR MANAG J, V14, P121
   Scheimann WilliamA., 2009, CHAP 2 PERFORMANCE M, P45
   Sein MK, 2011, MIS QUART, V35, P37
   Shafer S. M., 2005, BUS HORIZONS, V48, P199, DOI [DOI 10.1016/J.BUSHOR.2004.10.014, DOI 10.1016/J.BUSH0R.2004.10.014]
   Solaimani S, 2012, BUS PROCESS MANAG J, V18, P655, DOI 10.1108/14637151211253783
   Tikkanen H., 2005, MANAGE DECIS, V43, P789
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Verweire K, 2014, STRATEGY IMPLEMENTATION, P1
   Weigand H, 2006, LECT NOTES COMPUT SC, V4001, P321, DOI 10.1007/11767138_22
   Yin R.K., 2014, Applications of case study research, V2nd
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zlatev Z, 2005, LECT NOTES COMPUT SC, V3760, P520
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 95
TC 13
Z9 14
U1 0
U2 34
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 631
EP 662
DI 10.1007/s10270-016-0574-5
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HN1GA
UT WOS:000459934300025
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bock, C
   Elaasar, M
AF Bock, Conrad
   Elaasar, Maged
TI Reusing metamodels and notation with Diagram Definition
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Notation; Metamodel; Diagram Definition; Syntax
ID SYNTAX
AB It is increasingly common for language specifications to describe visual forms (concrete syntax) separately from underlying concepts (abstract syntax). This is typically to enable interchange of visual information between graphical modeling tools, such as positions of nodes and routings of lines. Often overlooked is that separation of visual forms and abstract concepts enables languages to define multiple visual forms for the same underlying concepts and for the same visual form to be used for similar underlying concepts in different languages (many-to-many relationships between concrete and abstract syntax). Visual forms can be adapted to communities using different notations for the same concepts and can be used to integrate communities using the same notation for similar concepts. Models of concrete syntax have been available for some time, but are rarely used to capture these many-to-many relationships with abstract syntax. This paper shows how to model these relationships using concrete graphical syntax expressed in the Diagram Definition standard, examining cases drawn from the Unified Modeling Language and the Business Process Model and Notation. This gives definers of graphical languages a way to specify visual forms for multiple communities.
C1 [Bock, Conrad] US Natl Inst Stand & Technol, 100 Bur Dr,Stop 8260, Gaithersburg, MD 20899 USA.
   [Elaasar, Maged] CALTECH, Jet Prop Lab, 4800 Oak Grove Dr, Pasadena, CA 91109 USA.
C3 National Institute of Standards & Technology (NIST) - USA; National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); California Institute of Technology
RP Bock, C (corresponding author), US Natl Inst Stand & Technol, 100 Bur Dr,Stop 8260, Gaithersburg, MD 20899 USA.
EM conrad.bock@nist.gov; maged.e.elaasar@jpl.nasa.gov
CR Alone Y., INT J ADV RES COMPUT, V2, P498
   [Anonymous], 2011, JAVASCRIPT DEFINITIV
   [Anonymous], 1987, Logical Foundations of Artificial Intelligence
   [Anonymous], 2006, COMPILERS PRINCIPLES
   AREFI F, 1990, COMMUN ACM, V33, P349, DOI 10.1145/77481.77487
   Baar T, 2008, SOFTW SYST MODEL, V7, P383, DOI 10.1007/s10270-008-0086-z
   Backlund B., 1990, Journal of Visual Languages and Computing, V1, P333, DOI 10.1016/S1045-926X(05)80019-9
   BACKUS JW, 1963, COMMUN ACM, V6, P1, DOI 10.1145/366193.366201
   Bock C, 2003, IEEE SOFTWARE, V20, P33, DOI 10.1109/MS.2003.1231148
   Bock C, 2014, J OBJECT TECHNOL, V13, P1, DOI 10.5381/jot.2014.13.2.a1
   Elaasar M, 2011, LECT NOTES COMPUT SC, V6981, P364, DOI 10.1007/978-3-642-24485-8_26
   Flatscher R. G., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P322, DOI 10.1145/643120.643124
   Gamma Erich., 1994, DESIGN PATTERNS
   Grundy J., NZ J COMPUT, V4, P31
   International Standards Organization, 1966, INF TECHN SYNT MET E
   Krahn H, 2007, LECT NOTES COMPUT SC, V4735, P286
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Muller PA, 2008, SOFTW SYST MODEL, V7, P423, DOI 10.1007/s10270-008-0088-x
   Object Management Group, 2013, ACT LANG FDN UML
   Object Management Group, 2015, XML MET INT
   Object Management Group, 2015, QUER VIEW TRANSF SPE
   Object Management Group, 2014, DIAGR DEF
   Object Management Group, 2006, DIAGR INT
   Object Management Group, 2013, Semantics of a Foundational Subset for Executable UML Models (FUML)
   Object Management Group, 2015, REF MET EXPRESS INF
   Object Management Group, 2015, MET FAC
   Object Management Group, 2015, INT FLOW MOD LANG
   Object Management Group, 2014, UML PROF BPMN 2 PROC
   Porubän J, 2010, COMPUT SCI INF SYST, V7, P291, DOI 10.2298/CSIS1002291P
   Ráth I, 2010, SOFTW SYST MODEL, V9, P453, DOI 10.1007/s10270-009-0122-7
   Schenck D.A., 1994, INFORM MODELING EXPR
   Schildt H., 2014, JAVA COMPLETE REFERE
   TENNENT RD, 1976, COMMUN ACM, V19, P437, DOI 10.1145/360303.360308
   The Eclipse Foundation, 2015, MOD DEV TOOLS
   The Eclipse Foundation, 2013, GRAPH MOD FRAM
   W3C, 2012, XML SCHEMA
   W3C, 2006, EXT MARK LANG
   W3C OWL Working Group, 2012, OWL 2 WEB ONT LANG D
   Wile DS, 1997, PROC INT CONF SOFTW, P472, DOI 10.1145/253228.253388
   World Wide Web Consortium [w3G], 2011, SCAL VECT GRAPH
NR 40
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1079
EP 1103
DI 10.1007/s10270-016-0537-x
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000003
DA 2024-07-18
ER

PT J
AU Ciccozzi, F
AF Ciccozzi, Federico
TI On the automated translational execution of the action language for
   foundational UML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Translational execution; Code generation; UML;
   ALF
AB To manage the rapidly growing complexity of software development, abstraction and automation have been recognised as powerful means. Among the techniques pushing for them, model-driven engineering has gained increasing attention from industry for, among others, the possibility to automatically generate code from models. To generate fully executable code, models should describe complex behaviours. While pragmatically this is achieved by employing programming languages for defining actions within models, the abstraction gap between modelling and programming languages can undermine consistency between models and code as well as analysability and reusability of models. In light of this, model-aware action languages should be preferred. This is the case of the Action Language for Foundational UML (ALF). In this paper, we provide a solution for the fully automated translational execution of ALF towards C++. Additionally, we give an insight on how to simplify the transition from the use of programming languages for modelling fine-grained behaviours to model-aware action languages in industrial MDE. The solution presented in this paper has been assessed on industrial applications to verify its applicability to complex systems as well as its scalability.
C1 [Ciccozzi, Federico] Malardalen Univ, Dept Innovat Design & Engn IDT, MRTC, POB 883, S-72123 Vasteras, Sweden.
C3 Malardalen University
RP Ciccozzi, F (corresponding author), Malardalen Univ, Dept Innovat Design & Engn IDT, MRTC, POB 883, S-72123 Vasteras, Sweden.
EM federico.ciccozzi@mdh.se
OI ciccozzi, federico/0000-0002-0401-1036
FU Knowledge Foundation through the SMARTCore project
FX This research is supported by the Knowledge Foundation through the
   SMARTCore project (http://www.es.mdh.se/projects/377-SMARTCore). The
   author would like to thank SMART-Core's industrial partners: Ericsson
   AB, ABB Corporate Research and Alten Sweden AB. Moreover, the author
   would like to thank Thomas Akerlund and Knightec AB, for the essential
   contribution to the implementation of the translational execution.
CR Abouzahra A., 2005, P BEST PRACT MOD DRI, V5
   [Anonymous], 2005, E~ective C++: 55 Speci~c Ways to Improve Your Programs and Designs
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   Badreddin O, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P264
   Berardinelli L., 2013, PROCS OF QOSA
   Brooks F., 1987, No Silver Bullet
   Burmako E., 2013, P 4 WORKSH SCAL SCAL, P3
   Cicchetti A, 2012, IEEE INT CONF AUTOM, P362, DOI 10.1145/2351676.2351748
   Ciccozzi Federico, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P153, DOI 10.1109/SEAA.2013.31
   Ciccozzi F., 2013, P 16 ACM SIGSOFT S C, P179
   Ciccozzi F., 2015, WORKSH OP SOURC MOD
   Ciccozzi F., 2015, 12 INT C INF TECHN N
   Ciccozzi F, 2013, INFORM SOFTWARE TECH, V55, P1085, DOI 10.1016/j.infsof.2012.07.014
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Feljan J., 2015, 41 EUR C SOFTW ENG A
   Fredj Manel, 2010, 2010 10th Annual International Conference on New Technologies of Distributed Systems (NOTERE), P279, DOI 10.1109/NOTERE.2010.5536628
   Garzon M.A., 2014, CASCON 2014, P91
   Gerard S., 2007, INT DAGST C MOD BAS, P361, DOI [DOI 10.1007/978-3-642-16277-019, 10.1007/978-3-642-16277-0\_19, DOI 10.1007/978-3-642-16277-0, DOI 10.1007/978-3-642-16277-0_19]
   Giese H., P 3 INT WORKSH MOD D, P78
   Heitz C, 2007, LECT NOTES COMPUT SC, V4473, P172
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   IBM, 2012, RAT RHAPS
   Janevska M., 2015, THESIS
   Katanic N., 2012, P INT C SOFTW TEL CO
   Ke J, 2007, P INT COMP SOFTW APP, P633
   Kennedy Carter Ltd, 2003, UML ASL REF GUID
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mentor Graphics, BRIDGEPOINT
   Mentor Graphics, 2013, OBJ ACT LANG REF
   Mohlin M, 2011, USING UML ACTION LAN
   Motogna S., 2008, Informatica, VLIII, P15
   OMG, ACT LANG FOUND UML
   PathFinder Solutions, 2004, PLATF IND ACT LANG P
   Perseil I, 2008, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2008.34
   Project Technology Inc, 1997, SHLAER MELL ACT LANG
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Rompf T, 2011, ACM SIGPLAN NOTICES, V46, P127, DOI 10.1145/1942788.1868314
   Schattkowsky T., 2007, PROCS OF HICSS
   Schattkowsky T., 2005, PROCS OF DATE
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B., 2012, LECT NOTES COMPUTER, V7320, P1
   Smaoui A. C., 2012, PROCS OF ISORC
   Sparx-Systems, 2012, ENTERPRISE ARCHITECT
   Tatibouet J., 2014, PROCS OF MODELS
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   Tiso A., 2014, P AMT, P14
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 49
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1311
EP 1337
DI 10.1007/s10270-016-0556-7
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000011
PM 30220904
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rabiser, D
   Prähofer, H
   Grünbacher, P
   Petruzelka, M
   Eder, K
   Angerer, F
   Kromoser, M
   Grimmer, A
AF Rabiser, Daniela
   Praehofer, Herbert
   Gruenbacher, Paul
   Petruzelka, Michael
   Eder, Klaus
   Angerer, Florian
   Kromoser, Mario
   Grimmer, Andreas
TI Multi-purpose, multi-level feature modeling of large-scale industrial
   software systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Feature modeling; Large-scale software systems; Case study
ID PRODUCT; CONFIGURATION; FRAMEWORK; REUSE
AB Feature models are frequently used to capture the knowledge about configurable software systems and product lines. However, feature modeling of large-scale systems is challenging as models are needed for diverse purposes. For instance, feature models can be used to reflect the perspectives of product management, technical solution architecture, or product configuration. Furthermore, models are required at different levels of granularity. Although numerous approaches and tools are available, it remains hard to define the purpose, scope, and granularity of feature models. This paper first reports results and experiences of an exploratory case study on developing feature models for two large-scale industrial automation software systems. We report results on the characteristics and modularity of the feature models, including metrics about model dependencies. Based on the findings from the study, we developed FORCE, a modeling language, and tool environment that extends an existing feature modeling approach to support models for different purposes and at multiple levels, including mappings to the code base. We demonstrate the expressiveness and extensibility of our approach by applying it to the well-known Pick and Place Unit example and an injection molding subsystem of an industrial product line. We further show how our approach supports consistency between different feature models. Our results and experiences show that considering the purpose and level of features is useful for modeling large-scale systems and that modeling dependencies between feature models is essential for developing a system-wide perspective.
C1 [Rabiser, Daniela; Gruenbacher, Paul; Angerer, Florian; Kromoser, Mario; Grimmer, Andreas] Johannes Kepler Univ Linz, Inst Software Syst Engn, MEVSS, Christian Doppler Lab, Linz, Austria.
   [Praehofer, Herbert] Johannes Kepler Univ Linz, Inst Syst Software, Linz, Austria.
   [Petruzelka, Michael; Eder, Klaus] KEBA AG, Linz, Austria.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz
RP Rabiser, D (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, MEVSS, Christian Doppler Lab, Linz, Austria.
EM daniela.rabiser@jku.at
RI Grunbacher, Paul/C-2970-2013
OI Grunbacher, Paul/0000-0002-1951-5288
FU Johannes Kepler University Linz; Christian Doppler
   Forschungsgesellschaft, Austria
FX Open access funding provided by Johannes Kepler University Linz. This
   work has been conducted in cooperation with KEBA AG, Austria, and was
   supported by the Christian Doppler Forschungsgesellschaft, Austria.
CR Allilaire F., 2006, GLOBAL MODEL MANAGEM
   Angerer F, 2015, IEEE INT CONF AUTOM, P385, DOI 10.1109/ASE.2015.58
   Angerer F, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P52, DOI 10.1145/2648511.2648517
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2007, TECHNICAL REPORT
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Becan Guillaume, 2014, P 29 ACM IEEE INT C, P433
   Berger T., P VAMOS WORKSH
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Bezivin J., 2004, P WORKSH BEST MDSD P
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Bürdek J, 2016, AUTOMAT SOFTW ENG, V23, P687, DOI 10.1007/s10515-015-0185-3
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Damiani F, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P232, DOI 10.1145/2648511.2648536
   Denton T, 2008, LECT NOTES COMPUT SC, V5301, P143, DOI 10.1007/978-3-540-87875-9_10
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Egyed A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P221, DOI 10.1109/RE.2010.34
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   Fischer G., 2007, P INT C SOFTW ENG AD, P38, DOI [DOI 10.1109/ICSEA.2007.12, 10.1109/ICSEA.2007.12]
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Galindo JA, 2015, INFORM SOFTWARE TECH, V62, P78, DOI 10.1016/j.infsof.2015.02.002
   Goknil A, 2011, SOFTW SYST MODEL, V10, P31, DOI 10.1007/s10270-009-0142-3
   Grimmer A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P460, DOI 10.1109/SANER.2016.15
   Haugen O, 2014, LECT NOTES COMPUT SC, V8769, P1, DOI 10.1007/978-3-319-11743-0_1
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Heidenreich F., T ASPECT ORIENTED SO, V6210, P69
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Hendren Laurie, 2011, P CETUS US COMP INF
   Holl G, 2012, ASIA PAC SOFWR ENG, P137, DOI 10.1109/APSEC.2012.41
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lee K, 2000, SPRINGER INT SER ENG, V576, P3
   Lettner D, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P386, DOI 10.1109/MODELS.2015.7338270
   Lettner D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P52
   Lettner D, 2014, EUROMICRO CONF PROC, P336, DOI 10.1109/SEAA.2014.43
   Lettner Daniela., 2014, Proceedings of the 2014 International Conference on Software and System Process, page, P40, DOI DOI 10.1145/2600821.2600826
   Malloy R.A., 2010, Plastic Part Design for Injection Molding, V2nd
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser D., 2016, P 20 INT SOFTW PROD, P35, DOI DOI 10.1145/2934466.2934487
   Rabiser R, 2012, IEEE INT CONF AUTOM, P110, DOI 10.1145/2351676.2351693
   Reder A, 2013, IEEE T SOFTWARE ENG, V39, P1531, DOI 10.1109/TSE.2013.30
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Rosato Dominick V., 2000, INJECTION MOLDING HD
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salay Rick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P447, DOI 10.1109/ASE.2008.70
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Seibel A, 2010, SOFTW SYST MODEL, V9, P493, DOI 10.1007/s10270-009-0146-z
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   SINTEF (MOD research group), 2013, CVL 2 TOOL
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vierhauser Michael, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P531, DOI 10.1007/978-3-642-33666-9_34
   Vierhauser M., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P287, DOI 10.1109/SPLC.2011.23
   Vogel-Heuser B., 2014, Researching Evolution in Industrial Plant Automation: Scenarios and Documentation of the Pick and Place Unit
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Zhang B, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON VARIABILITY AND COMPLEXITY IN SOFTWARE DESIGN (VACE), P14, DOI [10.1109/VACE.2016.012, 10.1145/2897045.2897048]
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
NR 75
TC 18
Z9 18
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 913
EP 938
DI 10.1007/s10270-016-0564-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000009
PM 29983696
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Gandhi, A
   Dube, P
   Karve, A
   Kochut, A
   Zhang, L
AF Gandhi, Anshul
   Dube, Parijat
   Karve, Alexei
   Kochut, Andrzej
   Zhang, Li
TI Model-driven optimal resource scaling in cloud
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE Autoscaling; Modeling; Scale-up; Scale-out; Cost; Optimal;
   Experimentation; Implementation
ID WORKLOADS
AB Cloud computing offers the flexibility to dynamically size the infrastructure in response to changes in workload demand. While both horizontal scaling and vertical scaling of infrastructure are supported by major cloud providers, these scaling options differ significantly in terms of their cost, provisioning time, and their impact on workload performance. Importantly, the efficacy of horizontal and vertical scaling critically depends on the workload characteristics, such as the workload's parallelizability and its core scalability. In today's cloud systems, the scaling decision is left to the users, requiring them to fully understand the trade-offs associated with the different scaling options. In this paper, we present our solution for optimizing the resource scaling of cloud deployments via implementation in OpenStack. The key component of our solution is the modeling engine that characterizes the workload and then quantitatively evaluates different scaling options for that workload. Our modeling engine leverages Amdahl's Law to model service timescaling in scale-up environments and queueing-theoretic concepts to model performance scaling in scale-out environments. We further employ Kalman filtering to account for inaccuracies in the model-based methodology and to dynamically track changes in the workload and cloud environment.
C1 [Dube, Parijat; Karve, Alexei; Kochut, Andrzej; Zhang, Li] IBM TJ Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   [Gandhi, Anshul] SUNY Stony Brook, Stony Brook, NY 11790 USA.
C3 International Business Machines (IBM); State University of New York
   (SUNY) System; State University of New York (SUNY) Stony Brook
RP Dube, P (corresponding author), IBM TJ Watson Res Ctr, Yorktown Hts, NY 10598 USA.
EM anshul@cs.stonybrook.edu; pdube@us.ibm.com; karve@us.ibm.com;
   akochut@us.ibm.com; zhangli@us.ibm.com
CR [Anonymous], SPECJBB2005
   [Anonymous], 2013 ACM CLOUD AUT C
   [Anonymous], 2011, CIDR
   [Anonymous], 1998, SIGMETRICS PERFORM E, DOI DOI 10.1145/306225.306235
   [Anonymous], CHEF
   [Anonymous], 2014, P 11 INT C AUT COMP
   [Anonymous], 2012, HOTCDP 12
   Appuswamy R., 2013, P 4 ANN S CLOUD COMP
   Bonvin Nicolas, 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P434, DOI 10.1109/CCGrid.2011.24
   Bouchenak S., 2006, MIDDLEWARE 2006
   Brebner P., 2003, SIGSOFT SOFTWARE ENG, V28, P4, DOI [10.1145/773126.773139, DOI 10.1145/773126.773139]
   Cao ZB, 2005, I S WORKL CHAR PROC, P119
   Chen KK, 2014, IEEE T PARALL DISTR, V25, P1403, DOI 10.1109/TPDS.2013.297
   Dube P, 2007, I S MOD ANAL SIM COM, P252
   Gandhi A, 2012, ACM T COMPUT SYST, V30
   Ghi Bogdan, 2014, ACM SIGMETRICS Performance Evaluation Review, V42, P329, DOI 10.1145/2591971.2591998
   Ghit B, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P1252, DOI 10.1109/SC.Companion.2012.151
   GmbH ProfitBricks, 2012, TECHNICAL REPORT
   Google Cloud Platform, AUT GOOGL CLOUD PLAT
   Guerin X., 2012, 2012 IEEE 20th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS), P308, DOI 10.1109/MASCOTS.2012.43
   Hill MD, 2008, COMPUTER, V41, P33, DOI 10.1109/MC.2008.209
   Inoue H., 2010, P 2010 IEEE INT S WO, P209
   Intel Corp, INT MATH KERN LIB LI
   Iqbal W., P 10 INT S CLUST CLO, P832
   Ishizaki K, 2009, I S WORKL CHAR PROC, P217, DOI 10.1109/IISWC.2009.5306781
   Iyer R, 2006, I S WORKL CHAR PROC, P191
   Kalyvianaki E, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P117
   Kongetira P, 2005, IEEE MICRO, V25, P21, DOI 10.1109/MM.2005.35
   Krioukov Andrew., 2010, P 1 C M SIGCOMM WORK, P15
   Kumar D, 2010, AUTON SYST, P45, DOI 10.1007/978-3-0346-0433-8_3
   Le Sueur Etienne, 2010, Proceedings of the 2010 international conference on Power aware computing and systems, HotPower'10, P1, DOI DOI 10.5555/1924920.1924921
   Microsoft Inc, PRIC CALC WIND AZ
   Moreira Jose E., 2007, 21st International Conference on Supercomputing. ICS 07, P3
   Ohara M, 2009, INT SYM PERFORM ANAL, P133, DOI 10.1109/ISPASS.2009.4919645
   OpenStack, OPENSTACK OP SOURC C
   Rackspace US Inc, CLOUD SERV PRIC RACK
   Schwarzkopf M., P 4 USENIX C HOT TOP
   Sevilla Michael., 2013, Proceedings of the 2013 International Workshop on Data-Intensive Scalable Computing Systems(DISCS), P13
   Simon D., 2006, OPTIMAL STATE ESTIMA, DOI [10.1002/0470045345, DOI 10.1002/0470045345.CH11]
   Singhal R., 2008, Inside intel next generation nehalem microarchitecture
   SoftLayerTechnologies Inc, BUILD YOUR CLOUD SER
   Tan J., 2014, EUROSYS 14
   Tseng Jessica H., 2007, 2007 IEEE International Symposium on Workload Characterization, P57, DOI 10.1109/IISWC.2007.4362181
   Urgaonkar B., 2005, SIGMETRICS Perform. Eval. Rev, V33, P291, DOI [10.1145/1071690.1064252, DOI 10.1145/1071690.1064252]
   Vaquero LM, 2011, ACM SIGCOMM COMP COM, V41, P45, DOI 10.1145/1925861.1925869
   Verma A., 2011, P 8 ACM INT C AUT CO, P235, DOI DOI 10.1145/1998582.1998637
   VMware Inc, VMWARE VFABRIC APPIN
   VMware vCenter Server, VMWARE VCENTER SERV
   Walrand J., 1988, INTRO QUEUEING NETWO
   WAND Network Research Group, WITS: Waikato Internet traffic storage
   Williams S, 2009, COMMUN ACM, V52, P65, DOI 10.1145/1498765.1498785
   WindowsAzure, SCALE APPL
   Wisniewski Robert W., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, IEEE, P1, DOI DOI 10.1109/IPDPS.2007.370631
   Yu H., 2007, Supercomputing, P1
NR 54
TC 12
Z9 14
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 509
EP 526
DI 10.1007/s10270-017-0584-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300008
DA 2024-07-18
ER

PT J
AU Kim, DH
   Hong, JE
AF Kim, Doo-Hwan
   Hong, Jang-Eui
TI ESUML-EAF: a framework to develop an energy-efficient design model for
   embedded software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Energy-efficient design model; Embedded software
ID POWER; CONSUMPTION
AB There is a growing interest in developing embedded systems that consume low energy in such application areas as mobile communications or wireless sensor networks. To especially provide the complex and diverse functions of embedded software with limited energy consumption, many studies of low-energy software are being performed. The existing studies to analyze energy consumption of embedded software have mainly focused on source code. However, some studies recently explored model-based energy consumption analysis to fulfill the requirement of energy consumption in the early phase of software development process. This paper proposes a model-based energy consumption analysis framework to develop an energy-efficient design model of embedded software. The proposed framework can analyze energy consumption without building an additional analysis model in software development and provide the chance to fulfill the energy consumption requirements in the early phase of the software development process, which can reduce the feedback efforts.
C1 [Kim, Doo-Hwan; Hong, Jang-Eui] Chungbuk Natl Univ, Dept Comp Sci, Cheongju, South Korea.
C3 Chungbuk National University
RP Hong, JE (corresponding author), Chungbuk Natl Univ, Dept Comp Sci, Cheongju, South Korea.
EM dhkim@selab.cbnu.ac.kr; jehong@chungbuk.ac.kr
OI Hong, Jang-Eui/0000-0001-9786-7732
FU Next-generation Information Computing Development Program
   [2012-0006426]; Basic Science Research Program through the National
   Research Fund of Korea - Ministry of Education, Science, and Technology
   [2011-0010396]
FX This research was supported by the Next-generation Information Computing
   Development Program (2012-0006426) and also partially supported by the
   Basic Science Research Program (2011-0010396) through the National
   Research Fund of Korea funded by Ministry of Education, Science, and
   Technology.
CR [Anonymous], 2003, Computer Architecture
   Bammi J. R., 2000, Proceedings of the Eighth International Workshop on Hardware/Software Codesign. CODES 2000 (IEEE Cat. No.00TH8518), P82, DOI 10.1109/HSC.2000.843712
   Brandolese C, 2000, DES AUT CON, P346, DOI 10.1145/337292.337437
   Brooks D, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P83, DOI [10.1145/342001.339657, 10.1109/ISCA.2000.854380]
   Bultan T., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P335, DOI 10.1109/ICSE.2000.870424
   Chang N, 2000, ISLPED '00: PROCEEDINGS OF THE 2000 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P185, DOI 10.1109/LPE.2000.876779
   Cook S, 2012, SOFTW SYST MODEL, V11, P471, DOI 10.1007/s10270-012-0256-x
   Digital Equipment Corporation, 1996, STRONGARM RISC PROC
   ESUML, 2009, ESUML EMB SOFTW MOD
   Fei YS, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1324969.1324971
   Garousi V, 2005, LECT NOTES COMPUT SC, V3748, P160
   Gebotys CH, 1998, 1998 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN - PROCEEDINGS, P121, DOI 10.1109/LPE.1998.708172
   Herczeg Z, 2007, LECT NOTES COMPUT SC, V4644, P300
   HUANG HC, 1993, IEEE T CONSUM ELECTR, V39, P570, DOI 10.1109/30.234637
   Jeon SU, 2009, J SYST SOFTWARE, V82, P1695, DOI 10.1016/j.jss.2009.04.043
   Jong-Phil Kim, 2010, 2010 IEEE International Conference on Consumer Electronics (ICCE 2010), P105, DOI 10.1109/ICCE.2010.5418970
   Jun H., 2006, P EUC WORKSH, P795
   Kim DH, 2011, LECT NOTES COMPUT SC, V6543, P320, DOI 10.1007/978-3-642-18381-2_27
   Klass B., 1998, P POW DRIV MICR WORK
   Lee MTC, 1997, IEEE T VLSI SYST, V5, P123, DOI 10.1109/92.555992
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   *NIST, 2001, FIPSPUB197 NIST
   Prehofer C, 2011, EUROMICRO CONF PROC, P501, DOI 10.1109/SEAA.2011.81
   Qu G., 2002, J CIRCUIT SYST COMP, V11, P1
   Saadatmand M., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P87, DOI 10.1109/SIES.2011.5953687
   Sarta D, 1999, IEEE ALESSANDRO VOLTA MEMORIAL WORKSHOP ON LOW-POWER DESIGN, PROCEEDINGS, P182, DOI 10.1109/LPD.1999.750419
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Senn E, 2005, EURASIP J APPL SIG P, V2005, P2641, DOI 10.1155/ASP.2005.2641
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Sinha A, 2001, DES AUT CON, P220, DOI 10.1109/DAC.2001.935508
   Talarico C, 2005, COMPUTER, V38, P71, DOI 10.1109/MC.2005.39
   Tan T.K., 2002, IEEE T COMPUT AID D, V21, P605
   Tan TK, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P1046
   Tan TK, 2002, 2002 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL II, PROCEEDINGS, P464
   Tiwari V., 1994, IEEE Transactions on Very Large Scale Integration (VLSI) Systems, V2, P437, DOI 10.1109/92.335012
   Yue X, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P551, DOI 10.1109/IRI.2003.1251464
NR 36
TC 2
Z9 4
U1 0
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 795
EP 812
DI 10.1007/s10270-013-0337-5
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400018
DA 2024-07-18
ER

PT J
AU Wolf, K
AF Wolf, Karsten
TI The Petri net twist in explicit model checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Petri net; Model checking; Symmetry; Sweep-line method; Partial order
   reduction
ID SYMMETRIES
AB The invention of Petri nets was based on a critical analysis of then dominating automata models of systems. Explicit model checking explores the reachable states of a Petri net one by one. Essentially, it transforms a Petri net back to a transition system, that is, an automata-like model. At first glance, this transformation appears to give up on all the specifics of Petri nets. Surveying the most dominant techniques of explicit state space verification, we will, however, work out that even in explicit model checking, the defining features of Petri nets are beneficial and lead to more efficient exploration routines. The findings in this paper are based on practical experience with a Petri net-based explicit model checking tool.
C1 Univ Rostock, Inst Informat, D-18055 Rostock, Germany.
C3 University of Rostock
RP Wolf, K (corresponding author), Univ Rostock, Inst Informat, D-18055 Rostock, Germany.
EM karsten.wolf@uni-rostock.de
CR [Anonymous], 1972, THESIS MIT CAMBRIDGE
   [Anonymous], 1991, Applications and Theory of Petri Nets, volume 483 of Lecture Notes in Computer Science
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Christensen S., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P450
   Commoner F., 1972, CA72062311 APPL DAT
   Das D, 2007, ACM T DES AUTOMAT EL, V12, DOI 10.1145/1278349.1278357
   Desel J, 1996, ACTA INFORM, V33, P297, DOI 10.1007/s002360050046
   EHRENFEUCHT A, 1990, THEOR COMPUT SCI, V70, P277, DOI 10.1016/0304-3975(90)90129-6
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   GODEFROID P, 1992, LECT NOTES COMPUT SC, V575, P332
   Heljanko K., 2008, UNFOLDINGS PARTIAL O
   HUBER P, 1985, LECT NOTES COMPUT SC, V188, P215
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Kaiser A, 2010, LECT NOTES COMPUT SC, V6174, P645
   Kordon F, 2012, LECT NOTES COMPUT SC, V7400, P169, DOI 10.1007/978-3-642-35179-2_8
   Kristensen L. M., 2002, FME 2002: Formal Methods-Getting IT Right. International Symposium of Formal Methods Europe (Lecture Notes in Computer Science Volume 2391), P549
   MAYR EW, 1984, SIAM J COMPUT, V13, P441, DOI 10.1137/0213029
   Nuttgens M., 1997, UML WORKSH, P250
   Peled D., LECT NOTES COMPUTER, V697, P409
   Petri CA., 1962, THESIS TU DARMSTADT
   Schmidt K., 2006, International Journal on Software Tools for Technology Transfer, V8, P195, DOI 10.1007/s10009-005-0201-1
   Schmidt K, 2000, ACTA INFORM, V36, P545, DOI 10.1007/s002360050002
   Schmidt K, 2000, LECT NOTES COMPUT SC, V1785, P315
   Schmidt K., 2002, THESIS HUMBOLDT U BE
   Stahl C, 2005, ACSD2005: Fifth International Conference on Application of Concurrency to System Design, Proceedings, P234, DOI 10.1109/ACSD.2005.20
   Stern U, 1997, LECT NOTES COMPUT SC, V1254, P256
   Talcott C., 2005, 3 INT WORKSH COMP ME, V3, P228
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Verbeek E, 2000, LECT NOTES COMPUT SC, V1825, P475
   Wolf K, 2007, LECT NOTES COMPUT SC, V4546, P29
   Wolper P., LECT NOTES COMPUTER, V697, P59
NR 31
TC 3
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 711
EP 717
DI 10.1007/s10270-014-0422-4
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400013
DA 2024-07-18
ER

PT J
AU Jeannet, B
AF Jeannet, Bertrand
TI Relational interprocedural verification of concurrent programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Concurrent program analysis; Interprocedural analysis; Abstract
   interpretation; Numerical abstract domains; Forward and backward
   analysis
AB We propose a general analysis method for recursive, concurrent programs that track effectively procedure calls and return in a concurrent context, even in the presence of unbounded recursion and infinite-state variables like integers. This method generalizes the relational interprocedural analysis of sequential programs to the concurrent case, and extends it to backward or coreachability analysis. We implemented it for programs with scalar variables and experimented with several classical synchronization protocols in order to illustrate the precision of our technique and also to analyze the approximations it performs.
C1 INRIA, Grenoble, France.
C3 Inria
RP Jeannet, B (corresponding author), INRIA, Grenoble, France.
EM bertrand.jeannet@inrialpes.fr
FU Conseil General de l'Isere; Region Rhone-Alpes as part of the OpenTLM
   project (pole de competitivite Minalogic)
FX This work has been supported by the Conseil General de l'Isere and the
   Region Rhone-Alpes as part of the OpenTLM project (pole de competitivite
   Minalogic).
CR BOUAJJANI A, 2005, LNCS, V3653
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   CAUCAL D, 1992, THEOR COMPUT SCI, V106, P61, DOI 10.1016/0304-3975(92)90278-N
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P., 1978, PRINC PROG LANG POPL
   Cousot P., 1977, IFIP C FORMAL DESCRI
   Cousot P., 1976, P 2 INT S PROGR, V106, P130
   ESPARZA J, 1999, LNCS, V1578
   Esparza J., 2000, PRINC PROG LANG POPL
   Flanagan C, 2005, THEOR COMPUT SCI, V338, P153, DOI 10.1016/j.tcs.2004.12.006
   FLANAGAN C, 2003, LNCS, V2648
   Flanagan C, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377495
   Ghenassia F., 2005, TLM CONCEPTS APPL EM
   Gopan D., 2007, LNCS, V4634
   Gueta G., 2007, LNCS, V4595
   Halbwachs N, 2006, FORM METHOD SYST DES, V29, P79, DOI 10.1007/s10703-006-0013-2
   Jeannet B., 2009, SOFTW ENG FORM METH
   Jeannet B., BDDAPRON LOGICONUMER
   Jeannet B., 2004, LNCS, V3148
   Jeannet B., FIXPOINT EQUATION SO
   Jeannet B., 2008, 6671 INRIA
   Jeannet B., 2004, LNCS, V3116
   Jeannet B., CONCURINTERPROC INTE
   Jeannet B, 2010, ELECTRON NOTES THEOR, V267, P29, DOI 10.1016/j.entcs.2010.09.016
   Jeannet B, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1667048.1667050
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   KNOOP J, 1992, LNCS, V641
   Lal A., 2008, LNCS
   Lev-Ami T, 2000, LECT NOTES COMPUT SC, V1824, P280
   Malkis A., 2006, LNCS, V4281
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   PATIN G, 2007, LNCS, V4590
   Qadeer S., 2004, PRINC PROGR LANG POP
   Ramalingam G, 2000, ACM T PROGR LANG SYS, V22, P416, DOI 10.1145/349214.349241
   Reps T, 2005, SCI COMPUT PROGRAM, V58, P206, DOI 10.1016/j.scico.2005.02.009
   Reps T., 1995, PRINC PROG LANG POPL
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   Sharir M., 1981, PROGRAM FLOW ANAL TH
   Somenzi Fabio., Cudd: Colorado university decision diagram package
   Taubenfeld Gadi, 2006, SYNCHRONIZATION ALGO
NR 40
TC 13
Z9 13
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 285
EP 306
DI 10.1007/s10270-012-0230-7
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300006
DA 2024-07-18
ER

PT J
AU Van Gorp, P
   Grefen, P
AF Van Gorp, Pieter
   Grefen, Paul
TI Supporting the internet-based evaluation of research software with cloud
   infrastructure
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reproducible research; Model transformation; Tool contest; Peer review;
   Cloud computing
ID REPRODUCIBLE RESEARCH
AB Due to license restrictions and installation issues, it is often not feasible to experiment with software without making substantial investments. Especially in the case of legacy tools, it turns out that even free software is often too costly (i.e., time-consuming) to be installed for evaluating the quality of a research contribution. After organizing a series of events related to software modeling, we have constructed (and started to use) SHARE, a system for sharing practically any type of software artifact to reviewers and to other participants who have very limited time available. The system relies on cloud-computing technologies to provide online access to interactive environments containing all the tools, documentation, input and output models to reproduce alleged research results. The system also enables one to clone such an environment and add additional models or tools in order to extend a contribution or pinpoint a problem. In retrospect, we observe that the approach is not limited to software modeling and SHARE is in fact gaining acceptance in other fields already.
C1 [Van Gorp, Pieter; Grefen, Paul] Eindhoven Univ Technol, Sch Ind Engn, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Van Gorp, P (corresponding author), Eindhoven Univ Technol, Sch Ind Engn, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM p.m.e.v.gorp@tue.nl; p.w.p.j.grefen@tue.nl
RI Grefen, Paul W.P.J./C-2174-2014; Van Gorp, Pieter/L-9144-2013
OI Van Gorp, Pieter/0000-0001-5197-3986
CR Agrawal A., 2003, AUTOMAT SOFTW ENG, P364
   *AM, 2009, AM EL COMP CLOUD AM
   Ambler S.W., 2009, UML PROFILE DATA MOD
   Angelov S., 2003, International Journal of Networking and Virtual Organisations, V2, P78, DOI 10.1504/IJNVO.2003.003517
   [Anonymous], P 9 IEEE INT S CLUST
   Barrett D.J., 2005, SSH, The Secure Shell: The Definitive Guide, VSecond
   Bezivin J., ZOOS
   Bezivin J., 2003, OOPSLA GENERATIVE TE
   Biermann E., 2006, ECEASST ELECT COMMUN, V3
   Buckheit J.B., 1995, WAVELETS STAT, P55
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Claerbout J.F., 1992, ELECT DOCUMENTS GIVE, P601, DOI DOI 10.1190/1.1822162
   Cuban L., 2003, Oversold and underused: Computers in the classroom
   Decker G, 2008, LECT NOTES COMPUT SC, V5231, P536, DOI 10.1007/978-3-540-87877-3_49
   Deelman E, 2009, FUTURE GENER COMP SY, V25, P528, DOI 10.1016/j.future.2008.06.012
   Descartes R., 1637, The Philosophical Writings of Descartes
   Dittner R., 2007, The Best Damn Server Virtualization Book Period
   Donoho DL, 2009, COMPUT SCI ENG, V11, P8, DOI 10.1109/MCSE.2009.15
   Fomel S., 2010, MADAGASCAR REPROD DO
   Fomel S, 2009, COMPUT SCI ENG, V11, P5, DOI 10.1109/MCSE.2009.14
   Geiger L., 2006, 3 INT WORKSH GRAPH B
   Halpin T., 1999, Journal of Database Management, V10, P4, DOI 10.4018/jdm.1999100101
   Hong Lichan, 2008, P WORK C ADV VIS INT, P65, DOI [10.1145/1385569.1385582, DOI 10.1145/1385569.1385582]
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Jing-Ying Chen, 2007, Journal of Software Engineering Studies, V2, P69
   Keahey K, 2009, IEEE INTERNET COMPUT, V13, P43, DOI 10.1109/MIC.2009.94
   Kumar S., WINK
   Kurp P, 2008, COMMUN ACM, V51, P11, DOI 10.1145/1400181.1400186
   LERDORF R, 2002, PROGRAMMING PHP
   Margaria T., 2005, SOFTW SYST MODEL, V4, P141, DOI [10.1007/s10270-004- 0072- z, DOI 10.1007/S10270-004-0072-Z]
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nagel R., 2006, SETUP JETI SERVICE P
   Newham C., 1998, Learning the bash Shell
   Open Source Initiative, OP SOURC LIC CAT
   Osinski L., RES DATA WHO CARES
   Piwowar HA, 2007, PLOS ONE, V2, DOI 10.1371/journal.pone.0000308
   R. D. S. T. S. Team, TOP 10 RDP PROT MI 2
   Rensink A., 2008, LECT NOTES COMPUTER, V5088
   Schurr A., 2008, LECT NOTES COMPUTER, V5088
   Stardock Corporation, FENC
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Stodden V, 2009, COMPUT SCI ENG, V11, P35, DOI 10.1109/MCSE.2009.19
   van den Brand MGJ, 2007, SCI COMPUT PROGRAM, V69, P1, DOI 10.1016/j.scico.2007.10.001
   Van Gorp P., CALL PAPERS STTT SPE
   Van Gorp P., SHARE DOCUMENTATION
   Van Gorp P., VRDP CONNECTION COUN
   Van Gorp P., SHARE IMAGE CPNTOOLS
   Van Gorp P., SHARE GROUP BASIC OP
   Van Gorp P., 2009, SHARE SHARING HOSTED
   Van Gorp P, 2009, LECT NOTES COMPUT SC, V5452, P208, DOI 10.1007/978-3-642-00434-6_14
   Vandewalle P, 2009, IEEE SIGNAL PROC MAG, V26, P37, DOI 10.1109/MSP.2009.932122
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Varro D., 2008, LECT NOTES COMPUTER, V5088
   VMware, VMWARE ESXI
   Wang LZ, 2009, IEEE SYST J, V3, P477, DOI 10.1109/JSYST.2009.2028589
   Wikipedia, 2006, HWANG WOO SUK WIK FR
   Winter R., 2006, P 2006 10 IEEE INT E, P30
   Zhu H, 2006, P INT COMP SOFTW APP, P145
NR 59
TC 8
Z9 8
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 11
EP 28
DI 10.1007/s10270-010-0163-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500004
OA hybrid
DA 2024-07-18
ER

PT J
AU Braga, C
AF Braga, Christiano
TI A transformation contract to generate aspects from access control
   policies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID UML; SECURITY; MODELS
AB Access control is an important security issue. It has been addressed since the late 1960s in the early time-sharing computer systems. Many access control models have been proposed since than but of particular interest is Ferraiolo and Khun's role-based access control model (RBAC). It is a simple and yet general model which has been deeply studied and applied both in industry and in academia. A variety of industrial standards have been proposed based on this model. Generating code for an access control policy is an interesting challenge. Understanding access control as a non-functional concern that cross-cuts the functional part of a system raises difficulties quite suitable for a solution based on aspect-oriented programming. In this paper, we address the problems of specification and validation of code generation for access control policies targeting an aspect-based infra-structure. We propose an MDA approach. The code generator is a transformation from SecureUML, an RBAC-based modeling language, to the language Aspects for Access Control (AAC), an aspect-oriented modeling language proposed in this paper. Metamodels are used to represent the languages and to specify the transformation. A metamodel is used to represent the abstract syntax of a language and the constraints that a given instance model of the metamodel must fulfill. We also use a metamodel to specify the code generator. This transformation metamodel, together with all the constraints, that is, from both languages and those constraints regarding the merge of the two languages, we call a transformation contract. It merges and conservatively extends the source and target metamodels of the model transformation it represents. In the context of code-generation for access control policies, the transformation contract specifies the relationships between the abstract syntaxes of SecureUML and AAC and constrains the two languages. The validation of the code generator also uses the transformation contract. For a given access control policy and aspect, represented as instances of the appropriate metamodels, with aspects produced by the code generator, the constraints of the transformation contract must hold. We have prototyped a transformer from SecureUML to aspects on top of ITP/OCL, an OCL interpreter that automatically validates the generated aspect code by applying the constraints of the transformation contract.
C1 Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP Braga, C (corresponding author), Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
EM cbraga@ic.uff.br
FU Ramon y Cajal program (MICINN) [TIN2006-15660-C02-01, S-0505/TIC/0407]
FX Research sponsored by Ramon y Cajal program (MICINN), project DESAFIOS
   (TIN2006-15660-C02-01, MICINN) and project PROMESAS (S-0505/TIC/0407,
   CAM).
CR [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2005, Secure Systems Development with UML
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Bouhoula A, 2000, THEOR COMPUT SCI, V236, P35, DOI 10.1016/S0304-3975(99)00206-6
   BRAGA C, 2008, LECT NOTES COMPUTER, V5421
   Chen K, 2006, LECT NOTES COMPUT SC, V3841, P176
   CLAVEL M, 2008, LECT NOTES COMPUTER, V5095, DOI DOI 10.1007/978-3-540-69100-6_22
   Clavel M., 2007, LNCS, V4350, DOI [10.1007/978-3-540-71999-1, DOI 10.1007/978-3-540-71999-1]
   CLAVEL M, 2006, EQUATIONAL SPECIFICA
   Clavel M., 2007, Lecture Notes in Computer Science
   Clavel M, 2006, LECT NOTES COMPUT SC, V4019, P368
   DEWIN B, 2001, P IFIP TC11 WG 11 4, V206, P125
   EGEA M, 2008, THESIS U COMPLUTENSE
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   Gao Shu., 2004, P INT C SOFTWARE ENG, P360
   GOGUEN JA, 1992, THEOR COMPUT SCI, V105, P217, DOI 10.1016/0304-3975(92)90302-V
   Juerjens J, 2008, LECT NOTES COMPUT SC, V4961, P292, DOI 10.1007/978-3-540-78743-3_21
   Jürjens J, 2006, LECT NOTES COMPUT SC, V4111, P64
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3713, P142, DOI 10.1007/11557432_11
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   KUSTER JM, 2006, SOFTW SYST MODEL, V5, P1319
   LAMARI M, 2007, SAC 07, P998
   MILLER J, 2006, MDA GUIDE VERSION 1
   *OBJ MAN GROUP, 2005, MOFQVTFINAL FIN AD S
   Pavlich-Mariscal J, 2005, LECT NOTES COMPUT SC, V3713, P537, DOI 10.1007/11557432_41
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
NR 28
TC 6
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 395
EP 409
DI 10.1007/s10270-010-0156-x
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800007
DA 2024-07-18
ER

PT J
AU Cimatti, A
   Roveri, M
   Susi, A
   Tonetta, S
AF Cimatti, Alessandro
   Roveri, Marco
   Susi, Angelo
   Tonetta, Stefano
TI Formalizing requirements with object models and temporal constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal requirement engineering; Temporal logic; Railway domain; European
   Train Control System (ETCS)
ID ABSTRACTION; TROPOS
AB Flaws in requirements often have a negative impact on the subsequent development phases. In this paper, we present a novel approach for the formal representation and validation of requirements, which we used in an industrial project. The formalism allows us to represent and reason about object models and their temporal evolution. The key ingredients are class diagrams to represent classes of objects, their relationships and their attributes, fragments of first order logic to constrain the possible configurations of such objects, and temporal logic operators to deal with the dynamic evolution of the configurations. The approach to formal validation allows to check whether the requirements are consistent, if they are compatible with some scenarios, and if they guarantee some implicit properties. The validation procedure is based on satisfiability checking, which is carried out by means of finite instantiation and model checking techniques.
C1 [Cimatti, Alessandro; Roveri, Marco; Susi, Angelo; Tonetta, Stefano] IRST, Fdn Bruno Kessler, I-38123 Povo, TN, Italy.
C3 Fondazione Bruno Kessler
RP Tonetta, S (corresponding author), IRST, Fdn Bruno Kessler, Via Sommarive 18, I-38123 Povo, TN, Italy.
EM cimatti@fbk.eu; roveri@fbk.eu; susi@fbk.eu; tonettas@fbk.eu
RI Tonetta, Stefano/AAP-3546-2020; Roveri, Marco/U-7164-2019
OI Roveri, Marco/0000-0001-9483-3940; Cimatti,
   Alessandro/0000-0002-1315-6990
FU Provincia Autonoma di Trento
FX S. Tonetta was supported by the Provincia Autonoma di Trento (project
   ANACONDA).
CR [Anonymous], 1992, The Z Notation
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1995, The Temporal Logic of Reactive and Concurrent Systems: Safety
   [Anonymous], Formal_Verification
   [Anonymous], 2006, OMG Object Constraint Language Version 2.0
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Bruttomesso R, 2008, LECT NOTES COMPUT SC, V5123, P299
   Bustan D, 2005, LECT NOTES COMPUT SC, V3725, P191
   Cavada R, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P69
   Chilardi S, 2007, LECT NOTES ARTIF INT, V4603, P362
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Cimatti A., 2008, LNCS
   Cimatti A, 2008, IEEE T COMPUT AID D, V27, P1737, DOI 10.1109/TCAD.2008.2003303
   Cimatti A, 2008, LECT NOTES COMPUT SC, V4963, P397, DOI 10.1007/978-3-540-78800-3_30
   Cimatti A, 2007, LECT NOTES COMPUT SC, V4590, P532
   Cimatti A, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P249, DOI 10.1109/SEFM.2008.23
   Clarke E, 2004, FORM METHOD SYST DES, V25, P105, DOI 10.1023/B:FORM.0000040025.89719.f3
   Clarke E., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P265
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 2000, COMPUTER AIDED VERIF, P154, DOI DOI 10.1007/10722167_15
   Demri S, 2007, INFORM COMPUT, V205, P2, DOI 10.1016/j.ic.2006.08.003
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Hodkinson I, 2000, ANN PURE APPL LOGIC, V106, P85, DOI 10.1016/S0168-0072(00)00018-X
   IEEE, 2005, 18002005 IEEE
   IEEE, 2005, IEEE Standard 1850-2005
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   LAHIRI SK, 2006, LNCS, P424
   Lange M, 2007, LECT NOTES COMPUT SC, V4703, P90
   Pnueli Amir, 1977, FOCS, P46, DOI DOI 10.1109/SFCS.1977.32
   Sebastiani R, 2007, LECT NOTES COMPUT SC, V4424, P389
   Susi A, 2005, INFORM-J COMPUT INFO, V29, P401
   EUROPEAN TRAIN CONTR
   2006, SYSTEM REQUIREMENTS
   UML VERSION 2 1 2
NR 35
TC 13
Z9 13
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 147
EP 160
DI 10.1007/s10270-009-0130-7
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500002
DA 2024-07-18
ER

PT J
AU Topçu, O
   Adak, M
   Oguztüzün, H
AF Topcu, Okan
   Adak, Mehmet
   Oguztuzun, Halit
TI Metamodeling live sequence charts for code generation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodeling; Code generation; Message sequence charts; Live sequence
   charts
AB This article presents a metamodeling study for Live Sequence Charts (LSCs) and Message Sequence Charts (MSCs) with an emphasis on code generation. The article discusses specifically the following points: the approach to building a metamodel for MSCs and LSCs, a metamodel extension from MSC to LSC, support for model-based code generation, and finally action model and domain-specific data model integration. The metamodel is formulated in metaGME, the metamodel language for the Generic Modeling Environment.
C1 [Topcu, Okan; Adak, Mehmet; Oguztuzun, Halit] Middle E Tech Univ, Dept Comp Engn, TR-06531 Ankara, Turkey.
C3 Middle East Technical University
RP Topçu, O (corresponding author), Middle E Tech Univ, Dept Comp Engn, TR-06531 Ankara, Turkey.
EM otopcu@ceng.metu.edu.tr; e73883@ceng.metu.edu.tr;
   oguztuzun@ceng.metu.edu.tr
RI adak, mehmet/ABE-4098-2020; Oğuztüzün, Halit/ABA-3509-2020; Topcu,
   Okan/A-4137-2016
OI Topcu, Okan/0000-0003-3900-0078; Oguztuzun, Halit/0000-0001-9928-0441
CR ADAK M, 2007, METUCENGTR200704
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   [Anonymous], OMG UN MOD LANG OMG
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bontemps Y, 2005, IEEE T SOFTWARE ENG, V31, P999, DOI 10.1109/TSE.2005.137
   Brill M, 2004, LECT NOTES COMPUT SC, V3147, P374
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DENIZ O, 2009, THESIS METU ANKARA
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Haugen O, 2001, COMPUT NETW, V35, P721, DOI 10.1016/S1389-1286(00)00201-2
   HOMME T, 2003, THESIS INFORM COMMUN
   *ISIS, 2007, GEN MOD ENV GME 7 US
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KRUGER I, 1998, P IFIP WG10 3 WG10 5, P61
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   MADSEN CK, 2003, THESIS DTU
   MOLLA A, 2007, P 2007 FALL SIM INT
   *OMG, 2006, OMG OBJ CONSTR LANG
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Topçu O, 2005, NAV ENG J, V117, P23, DOI 10.1111/j.1559-3584.2005.tb00319.x
   TOPCU O, 2007, METUCENGTR200703
   Topçu O, 2008, ACM T MODEL COMPUT S, V18, DOI 10.1145/1371574.1371576
   Wang T, 2004, LECT NOTES COMPUT SC, V3057, P178
NR 23
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 567
EP 583
DI 10.1007/s10270-009-0113-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900007
DA 2024-07-18
ER

PT J
AU Kuske, S
   Gogolla, M
   Kreowski, HJ
   Ziemann, P
AF Kuske, Sabine
   Gogolla, Martin
   Kreowski, Hans-Joerg
   Ziemann, Paul
TI Towards an integrated graph-based semantics for UML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML diagram; Graph transformation; Formal semantics
ID OPERATIONAL SEMANTICS; STATE MACHINES; DIAGRAMS; TOOL
AB This paper shows how a central part of the Unified Modeling Language (UML) can be integrated into a single visual semantic model. It discusses UML models composed of class, object, state, sequence and collaboration diagrams and presents an integrated semantics of these models. As formal basis the theoretically well-founded area of graph transformation is employed which supports a visual and rule-based transformation of UML model states. For the translation of a UML model into a graph transformation system the operations in class diagrams and the transitions in state diagrams are associated with graph transformation rules that are then combined into one system in order to obtain a single coherent semantic description. Operation calls in sequence and collaboration diagrams can be associated with applications of graph transformation rules in the constructed graph transformation system so that valid sequence and collaboration diagrams correspond to derivations, i.e., to sequences of graph transformation rule applications. The main aim of this paper is to provide a formal framework that supports visual simulation of integrated UML specifications in which system states and state changes are modeled in a straightforward way.
C1 [Kuske, Sabine; Gogolla, Martin; Kreowski, Hans-Joerg; Ziemann, Paul] Univ Bremen, Dept Comp Sci, D-28334 Bremen, Germany.
C3 University of Bremen
RP Kuske, S (corresponding author), Univ Bremen, Dept Comp Sci, POB 330440, D-28334 Bremen, Germany.
EM kuske@informatik.uni-bremen.de; gogolla@informatik.uni-bremen.de;
   kreo@informatik.uni-bremen.de
FU German Research Foundation (DFG)
FX Sabine Kuske and Hans-Jorg Kreowski would like to acknowledge that their
   research is partially supported by the Collaborative Research Centre 637
   (Autonomous cooperating logistic processes: a paradigm shift and its
   limitations) funded by the German Research Foundation (DFG).
CR [Anonymous], 1999, Handbook of graph grammars and computing by graph transformation
   [Anonymous], LNCS
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], HDB GRAPH GRAMMARS C
   BARESI L, 2001, LNCS, P271
   BOEHM P, 1987, J COMPUT SYST SCI, V34, P377, DOI 10.1016/0022-0000(87)90030-4
   BOOCH G, 1998, UNIFIED MODELING LAN
   BOTTONI P, 2002, ELECT NOTES THEORETI, V72
   Busatto G, 2005, MATH STRUCT COMP SCI, V15, P773, DOI 10.1017/S0960129505004846
   Cordes B, 2003, LECT NOTES COMPUT SC, V3062, P275
   Corradini Andrea., 1997, HDB GRAPH GRAMMARS C, V1, P163
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3256, P161
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   EHRIG H, 1986, BOOK L, P87
   Engels G, 2003, LECT NOTES COMPUT SC, V2863, P356
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Engels G., 2002, P 6 INT C INT DES PR
   Engels G., 2001, The Unified Modeling Language; Modeling Languages, Concepts, and Tools, P272, DOI DOI 10.1007/3-540-45441-1_21
   Gnesi S, 2002, J LOGIC ALGEBR PROGR, V51, P43, DOI 10.1016/S1567-8326(01)00012-1
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1618, P92
   Gogolla M., 2003, Electronic Notes in Theoretical Computer Science, volume 72, V72
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   HECKEL R, 2002, APPLIGRAPH WORKSH AP, P11
   HECKEL R, 1999, HDB GRAPH GRAMMARS C, V2, P639
   Hölscher K, 2006, J VISUAL LANG COMPUT, V17, P78, DOI 10.1016/j.jvlc.2005.11.001
   Hu Zhaoxia, 2004, SEKE, P213
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Kuske S., 2001, Proceedings of the 4th International Conference on The Unified Modeling Language, Modeling Languages, Concepts, V2185, P241, DOI 10.1007/3-540-45441-1_19
   Kwon G, 2000, LECT NOTES COMPUT SC, V1939, P528
   Lilius J, 1999, LECT NOTES COMPUT SC, V1723, P430
   LOWE M, 1993, TERM GRAPH REWRITING, P185
   MAGGIOLOSCHETTI.A, 1996, P 5 INT WORKSH GRAPH, V1073, P107
   MAGGIOLOSCHETTI.A, 1994, LECT NOTES COMPUT SC, V776, P265
   *OMG, 2003, UN MOD LANG SPEC VER
   Reggio G, 2000, LECT NOTES COMPUT SC, V1783, P127
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   RENSINK A, 2003, P 3 WORKSH AUT VER C, P150
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Rossi C., 2004, SOFTW SYST MODEL, V3, P31
   RUMBAUGH JAMES., 1998, UNIFIED MODELING LAN
   Schmidt A, 2003, LECT NOTES COMPUT SC, V2863, P92
   SIMONS AJH, 2000, EL WORKSH COMP RIG O
   TAENTZER G, 1996, LNCS, V1073, P304
   Varró D, 2002, LECT NOTES COMPUT SC, V2505, P378
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   ZIEMANN P, 2006, MONOGRAPHS BREMEN I, V14
   [No title captured]
NR 50
TC 7
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 403
EP 422
DI 10.1007/s10270-008-0101-4
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 466UE
UT WOS:000267687600007
DA 2024-07-18
ER

PT J
AU Queralt, A
   Teniente, E
AF Queralt, Anna
   Teniente, Ernest
TI A platform independent model for the electronic marketplace domain
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE platform independent model; model driven architecture; unified modeling
   language; domain analysis; domain model; E-marketplaces; reference
   models
ID LANGUAGES; COMMERCE
AB An electronic marketplace supports interactions between multiple users for the exchange of information on products for sale or purchase. The significance of electronic marketplaces is apparent from the huge number of websites that currently provide services in almost any area one can think of. However, the absence of clear documentation on the similarities that these sites share restricts the reutilization of software for the development of new electronic marketplaces. To improve this situation, we propose a platform independent model (PIM) for the e-marketplace domain that describes both the structural and behavioral properties of a generic electronic marketplace. Specific application PIMs aimed at generating different e-marketplaces can be obtained from our generic domain PIM by adapting it to the requirements of each particular application. In this way, reutilization of our domain PIM contributes to a reduction in the cost and time involved in the development of new electronic marketplaces.
C1 [Queralt, Anna; Teniente, Ernest] Univ Politecn Cataluna, Barcelona 08034, Catalonia, Spain.
C3 Universitat Politecnica de Catalunya
RP Queralt, A (corresponding author), Univ Politecn Cataluna, C-Jordi Girona Salgado 1-3, Barcelona 08034, Catalonia, Spain.
EM aqueralt@lsi.upc.edu
RI Teniente, Ernest/L-4313-2014; Queralt, Anna/X-2265-2019
OI Queralt, Anna/0000-0003-2782-2955
CR [Anonymous], APPL UML PATTERNS
   [Anonymous], UML 2 0 OCL SPEC
   [Anonymous], P 2 ACM C EL COMM NE
   [Anonymous], UML 2 0 SUP SPEC
   Bakos Y, 1998, COMMUN ACM, V41, P35, DOI 10.1145/280324.280330
   Chan C.W., 2004, SOFTWARE SYSTEMS MOD, V3, P294
   COSTAL D, 2002, LNCS, V2348, P659
   Coulson A, 1999, IEEE COMMUN MAG, V37, P58, DOI 10.1109/35.790863
   DOGAC A, 1998, ACM SIGMOD RECORD, V27, P25
   Feldman S, 2000, IEEE INTERNET COMPUT, V4, P93, DOI 10.1109/4236.865093
   Fernandez EB, 2000, LECT NOTES COMPUT SC, V1920, P183
   FERNANDEZ EB, 2001, P PATT LANG PROGR PL
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Ghenniwa H, 2005, DATA KNOWL ENG, V52, P33, DOI 10.1016/j.datak.2004.06.005
   Huhns MN, 1999, IEEE INTERNET COMPUT, V3, P103, DOI 10.1109/4236.769429
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kumar M, 1998, PROCEEDINGS OF THE 3RD USENIX WORKSHOP ON ELECTRONIC COMMERCE, P49
   Kumar Mohan., 2018, Negotiation Dynamics of the WTO
   LYARDET F, 1998, P PATT LANG PROGR PL
   Maamar Z, 2001, COMMUN ACM, V44, P35, DOI 10.1145/501317.501337
   Mili H., 2002, Reuse Based Software Engineering: Techniques, Organization, and Controls
   NEUHOLD E, 2003, LNCS, V2813
   Olivé A, 2003, LECT NOTES COMPUT SC, V2813, P349
   Olivé A, 2003, LECT NOTES COMPUT SC, V2681, P404
   OLIVE A, 2004, P 9 INT C REL SOFTW
   Olivé A, 2006, DATA KNOWL ENG, V58, P243, DOI 10.1016/j.datak.2005.07.002
   OMG, 2003, MDA GUID VERS 1 0 1
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   QUERALT A, 2006, J DATA SEMATICS, V7, P33
   QUERALT A, 2005, LSI059R UPC DEP LSI
   RE R, 2001, P 8 C PATT LANG PROG, P1
   Reinhartz-Berger I, 2004, LECT NOTES COMPUT SC, V3273, P410
   ROSSI G, 2000, P EUR C PATT LANG PR
   Rumbaugh James, 1999, The unified modeling language reference manual
   SAADAWI H, 2006, P PATT LANG PROGR PL
   Sugumaran V, 2002, DATA KNOWL ENG, V42, P251, DOI 10.1016/S0169-023X(02)00048-4
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
NR 37
TC 2
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 219
EP 235
DI 10.1007/s10270-007-0047-y
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 298IE
UT WOS:000255680600007
DA 2024-07-18
ER

PT J
AU Hacks, S
   Persson, L
   Hersén, N
AF Hacks, Simon
   Persson, Linus
   Hersen, Nicklas
TI Measuring and achieving test coverage of attack simulations extended
   version
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Threat modeling; Attack simulations; Testing; Test coverage
ID CYBER THREAT; FOUNDATIONS; GENERATION
AB Designing secure and reliable systems is a difficult task. Threat modeling is a process that supports the secure design of systems by easing the understanding of the system's complexity, as well as identifying and modeling potential threats. These threat models can serve as input for attack simulations, which are used to analyze the behavior of attackers within the system. To ensure the correct functionality of these attack simulations, automated tests are designed that check if an attacker can reach a certain point in the threat model. Currently, there is no way for developers to estimate the degree to which their tests cover the attack simulations and, thus, they cannot determine the quality of their tests. To resolve this shortcoming, we analyze structural testing methods from the software engineering domain and transfer them to the threat modeling domain by following an action design research approach. Further, we develop a first prototype, which is able to assess the test coverage in an automated way and provide a first approach to achieve full coverage. This will enable threat modeler to determine the quality of their tests and, simultaneously, increase the quality of the threat models.
C1 [Hacks, Simon] Univ Southern Denmark, Maersk Mc Kinney Moller Inst, Odense, Denmark.
   [Persson, Linus] Uppsala Univ, Uppsala, Sweden.
   [Hersen, Nicklas] KTH Royal Inst Technol, Stockholm, Sweden.
C3 University of Southern Denmark; Uppsala University; Royal Institute of
   Technology
RP Hacks, S (corresponding author), Univ Southern Denmark, Maersk Mc Kinney Moller Inst, Odense, Denmark.
EM shacks@mmmi.sdu.dk
RI Hacks, Simon/AAE-4785-2019
OI Hacks, Simon/0000-0003-0478-9347
CR Aldea A, 2020, IEEE INT ENTERP DIST, P1, DOI 10.1109/EDOC49727.2020.00011
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   [Anonymous], 2012, NIST SPECIAL PUBLICA
   [Anonymous], 2018, ISO/IEC 27005:2018 Information technology-Security techniques-Information security risk management
   [Anonymous], 2008, Journal of Computing Sciences in Colleges
   [Anonymous], 2018, Risk management: Guidelines
   Bach-Nutman M, 2020, Arxiv, DOI arXiv:2012.09960
   Band I., 2015, Modeling enterprise risk management and security with the archimate
   BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   Bishop M, 2007, IEEE SECUR PRIV, V5, P84, DOI 10.1109/MSP.2007.159
   Caralli R.A., 2007, Technical report
   Chi SD, 2001, LECT NOTES COMPUT SC, V2119, P320
   Choo KKR, 2011, COMPUT SECUR, V30, P719, DOI 10.1016/j.cose.2011.08.004
   Cohen F, 1999, COMPUT SECUR, V18, P479, DOI 10.1016/S0167-4048(99)80115-1
   COSO, 2004, COMM SPONS ORG TREAD
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Ekstedt M, 2015, IEEE INT ENTERP, P152, DOI 10.1109/EDOCW.2015.40
   Fogen K., 2021, THESIS RWTH AACHEN U
   Freund J., 2015, MEASURING MANAGING I, DOI [10.1016/c2013-0-09966-5, DOI 10.1016/C2013-0-09966-5]
   Geers K, 2009, INF SECUR J, V18, P1, DOI 10.1080/19393550802676097
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Grandry E, 2013, IEEE INT ENTERP, P114, DOI 10.1109/EDOCW.2013.19
   Grov G, 2019, LECT NOTES BUS INF P, V369, P215, DOI 10.1007/978-3-030-35151-9_14
   Gulati S., 2017, JUNIT 5 EXTENSION MO, P121
   Hacks Simon, 2020, Energy Informatics, V3, DOI 10.1186/s42162-020-00134-4
   Hacks S, 2019, IEEE INT ENTERP DIST, P88, DOI [10.1109/EDOC.2019.00020, 10.1109/edoc.2019.00020]
   Hersen Nicklas, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P303, DOI 10.1007/978-3-030-79186-5_20
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holm H, 2015, IEEE T DEPEND SECURE, V12, P626, DOI 10.1109/TDSC.2014.2382574
   Johnson P, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3232799
   Juerjens J, 2008, LECT NOTES COMPUT SC, V4961, P292, DOI 10.1007/978-3-540-78743-3_21
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Katsikeas Sotirios, 2020, Graphical Models for Security. 7th International Workshop, GraMSec 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12419), P67, DOI 10.1007/978-3-030-62230-5_4
   Katsikeas S, 2019, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY (ICISSP), P175, DOI 10.5220/0007247901750182
   Kordy B, 2011, LECT NOTES COMPUT SC, V6561, P80, DOI 10.1007/978-3-642-19751-2_6
   Limited A.T, 2020, HOSTILE RISK DECISIO
   Ling ER, 2021, SAT-CPS'21: PROCEEDINGS OF THE 2021 ACM WORKSHOP ON SECURE AND TRUSTWORTHY CYBER-PHYSICAL SYSTEMS, P98, DOI 10.1145/3445969.3450421
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Manzur L, 2015, SIMUL-T SOC MOD SIM, V91, P276, DOI 10.1177/0037549715575188
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   Miranda B, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3389126
   Myagmar S., 2005, S REQ ENG INF SEC SR, P1
   NTAFOS SC, 1979, IEEE T SOFTWARE ENG, V5, P520, DOI 10.1109/TSE.1979.234213
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Oladimeji EA, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P178
   Ruhroth T., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P177, DOI 10.1109/HASE.2012.35
   Saitta P., 2005, TRIKE V1 METHODOLOGY
   Schneier B, 1999, DR DOBBS J, V24, P21
   Sein MK, 2011, MIS QUART, V35, P37
   Sheyner O, 2002, P IEEE S SECUR PRIV, P273, DOI 10.1109/SECPRI.2002.1004377
   Shostack A., 2008, MODSEC@ MoDELS, V2008, P35
   Shostack A., 2014, Threat Modeling: Designing for Security
   Smith M., 2012, 2012 6 IEEE INT C DI, P1, DOI [DOI 10.1109/DEST.2012.6227909, 10.1109/DEST.2012.6227909]
   Tuglular T, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P393, DOI 10.1109/SSIRI.2009.52
   Ucedavelez T, 2015, RISK CENTRIC THREAT MODELING: PROCESS FOR ATTACK SIMULATION AND THREAT ANALYSIS, P1, DOI 10.1002/9781118988374
   Venable J.R., 2017, ACIS 2017 P, V2, P112
   Xiong W., 2021, SOFTW SYST MODEL, P1
   Xiong W., 2021, CEUR WORKSHOP PROC, V3045, P49
   Xiong W., 2021, Complex Syst. Inform. Model. Q., V151, P55
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
NR 61
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 31
EP 46
DI 10.1007/s10270-022-01042-9
EA SEP 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000854822700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gutschmidt, A
   Lantow, B
   Hellmanzik, B
   Ramforth, B
   Wiese, M
   Martins, E
AF Gutschmidt, Anne
   Lantow, Birger
   Hellmanzik, Ben
   Ramforth, Ben
   Wiese, Matteo
   Martins, Erko
TI Participatory modeling from a stakeholder perspective: On the influence
   of collaboration and revisions on psychological ownership and perceived
   model quality
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Participatory enterprise modeling; Collaboration; Psychological
   ownership; Perceived control; Perceived model quality
ID CONSEQUENCES; ANTECEDENTS; STATE
AB Participatory enterprise modeling is about gathering domain experts and involving them directly in the creation of models, aided by modeling experts. It is meant to increase commitment to and quality of models. This paper presents an exploratory study focusing on the subjective view of the domain experts. We investigated the influence of direct collaboration versus individual modeling, and the influence of model revisions by modeling experts on psychological ownership and perceived model quality. We chose process modeling as a particular form of enterprise modeling. Our results give hint that domain experts working individually with a modeling expert perceive model quality as higher than those working collaboratively whereas psychological ownership did not show any difference. Revisions caused changes in the subjects' assessments only of model quality. Moreover, we will present qualitative results from interviews we led with the participants. They reveal interesting insight on how outcome and perception of the procedure and the method in both settings can be positively influenced. The interviews also emphasize the special role of the method experts who are sometimes even considered as co-owners of the model.
C1 [Gutschmidt, Anne; Lantow, Birger] Univ Rostock, Inst Informat, Chair Business Informat Syst, Albert Einstein Str 22, D-18059 Rostock, Germany.
   [Hellmanzik, Ben; Ramforth, Ben; Wiese, Matteo] Univ Rostock, Inst Informat, D-18051 Rostock, Germany.
   [Martins, Erko] Univ Appl Sci Rostock, Fachhsch Mittelstands, Kropeliner Str 85, D-18055 Rostock, Germany.
C3 University of Rostock; University of Rostock
RP Gutschmidt, A (corresponding author), Univ Rostock, Inst Informat, Chair Business Informat Syst, Albert Einstein Str 22, D-18059 Rostock, Germany.
EM anne.gutschmidt@uni-rostock.de; birger.lantow@uni-rostock.de;
   martins@fh-mittelstand.de
OI Gutschmidt, Anne/0000-0001-8038-4435
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR ANDERSON EW, 1993, MARKET SCI, V12, P125, DOI 10.1287/mksc.12.2.125
   [Anonymous], 2012, Model-based development and evolution of information systems a quality approach
   Avey JB, 2009, J ORGAN BEHAV, V30, P173, DOI 10.1002/job.583
   Barjis J, 2011, WINT SIMUL C PROC, P3094, DOI 10.1109/WSC.2011.6148009
   Buhner M., 2006, Einfuhrung in die Test- und Fragebogenkonstruktion, V2
   Buhner M., 2009, Statistik fur Psychologen und Sozialwissenschaftler
   Caspi A, 2011, SOC PSYCHOL EDUC, V14, P283, DOI 10.1007/s11218-010-9141-z
   DIEHL M, 1987, J PERS SOC PSYCHOL, V53, P497, DOI 10.1037/0022-3514.53.3.497
   Doring N., 2016, Forschungsmethoden und Evaluation in den Sozialund Humanwissenschaften
   Eitzel M.V., 2021, Citizen Sci. Theory Pract., V6
   Gjersvik R., 2005, INFORM MODELING METH, P195, DOI [10.4018/978-1-59140-375-3.ch010, DOI 10.4018/978-1-59140-375-3.CH010]
   Gutschmidt Anne, 2019, Perspectives in Business Informatics Research. 18th International Conference (BIR 2019). Proceedings. Lecture Notes in Business Information Processing (LNBIP 365), P44, DOI 10.1007/978-3-030-31143-8_4
   Heggset M., 2015, CAISE FORUM, P89
   Heggset Merethe., 2015, Enterprise, Business-Process and Information Systems Modeling ed, P395, DOI DOI 10.1007/978-3-319-19237-6_25
   Jones NA, 2009, ENVIRON MANAGE, V44, P1180, DOI 10.1007/s00267-009-9391-8
   KARAU SJ, 1993, J PERS SOC PSYCHOL, V65, P681, DOI 10.1037/0022-3514.65.4.681
   Krogstie J., 2016, QUALITY BUSINESS PRO, P53, DOI DOI 10.1007/978-3-319-42512-2_2
   Lie D., 2019, International Journal of Scientific and Technology Research, V8, P421
   Luebbe Alexander, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P283, DOI 10.1007/978-3-642-21640-4_22
   MacCallum RC, 1999, PSYCHOL METHODS, V4, P84, DOI 10.1037/1082-989x.4.1.84
   Martins E., 2010, Psychological Ownership in Organizations
   Mayhew MG, 2007, J SOC PSYCHOL, V147, P477, DOI 10.3200/SOCP.147.5.477-500
   Mayring P., 2010, Qualitative Inhaltsanalyse. Grundlagen und Technicken
   Meyer J.P., 2001, HUMAN RESOURCE MANAG, V11, P299, DOI [DOI 10.1016/S1053-4822(00)00053-X, 10.1016/S1053-4822(00)00053]
   Moody D. L., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P211
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Moody DL, 2003, PROC INT CONF SOFTW, P295
   Moosbrugger H., 2020, Testtheorie und Fragebogenkonstruktion. 3. Aufl
   Morris C.W., 1938, International encyclopedia of unified science, V1, P1
   Nolte A., 2016, P 12 INT C DESIGN CO, P225, DOI 10.1007/978-3-319-33464-614
   O'Driscoll MP, 2006, GROUP ORGAN MANAGE, V31, P388, DOI 10.1177/1059601104273066
   Pierce JL, 2011, NEW HORIZ INNO MANAG, P1
   Pierce JL, 2003, REV GEN PSYCHOL, V7, P84, DOI 10.1037/1089-2680.7.1.84
   Renger M, 2008, LECT NOTES BUS INF P, V10, P61
   Rittelmeyer P, 2009, PROCEEDINGS OF THE 2008 LIBRARY ASSESSMENT CONFERENCE: BUILDING EFFECTIVE, SUSTAINABLE, PRACTICAL ASSESSMENT, P225, DOI 10.1145/1529282.1529333
   RITTGEN P, 2008, P CAISE 08 FOR, P61
   Sandkuhl K., 2020, 28 EUROPEAN C INFORM
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Ssebuggwawo D., 2010, COLLABORATIVE MODELI
   Ssebuggwawo D, 2013, INT J INF SYST MODEL, V4, P1, DOI 10.4018/jismd.2013010101
   Stirna J., 2018, Enterprise modeling: Facilitating the process and the people
   Stirna J, 2007, LECT NOTES COMPUT SC, V4495, P546
   Torrance EP, 1954, AM SOCIOL REV, V19, P751, DOI 10.2307/2087922
   Van Dyne L, 2004, J ORGAN BEHAV, V25, P439, DOI 10.1002/job.249
NR 44
TC 2
Z9 2
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 13
EP 29
DI 10.1007/s10270-022-01036-7
EA AUG 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000843452300001
PM 36033973
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tanveer, A
   Sharma, C
   Sinha, R
   Kuo, MMY
AF Tanveer, Awais
   Sharma, Chandan
   Sinha, Roopak
   Kuo, Matthew M. Y.
TI Tracing security requirements in industrial control systems using graph
   databases
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Security; Requirements repository; Security
   standards; Industrial control systems; Traceability; Graph databases;
   Labelled property graphs
ID COMMON CRITERIA; AUTOMATION; DESIGN
AB We must explicitly capture relationships and hierarchies between the multitude of system and security standards requirements. Current security requirements specification methods do not capture such structure effectively, making requirements management and traceability harder, consequently increasing costs and time to market for developing certified ICS. We propose a novel requirements repository model for ICS that uses labelled property graphs to structure and store system-specific and standards-based requirements using well-defined relationship types. Furthermore, we integrate the proposed requirements repository with design-time ICS tools to establish requirements traceability. A wind turbine case study illustrates the overall workflow in our framework. We demonstrate that a robust requirements traceability matrix is a natural consequence of using labelled property graphs. We also introduce a compatible requirements change management procedure that aids in adapting to changes in development and certification schemes.
C1 [Tanveer, Awais; Sharma, Chandan; Sinha, Roopak; Kuo, Matthew M. Y.] Auckland Univ Technol AUT, Sch Engn Comp & Math Sci, Auckland, New Zealand.
   [Sharma, Chandan] Univ Petr & Energy Studies, Dehra Dun, Uttarakhand, India.
C3 University of Petroleum & Energy Studies (UPES)
RP Tanveer, A (corresponding author), Auckland Univ Technol AUT, Sch Engn Comp & Math Sci, Auckland, New Zealand.
EM awaistanveer@gmail.com; chandan.sharma@aut.ac.nz;
   roopak.sinha@aut.ac.nz; matthew.kuo@aut.ac.nz
RI Sharma, Chandan/AAX-1424-2021
OI Sharma, Chandan/0000-0002-7864-7088; Tanveer, Awais/0000-0002-1315-1794
FU CAUL
FX Open Access funding enabled and organized by CAUL and its Member
   Institutions.
CR Ahsan M., 2015, PAK ACAD SCI, V52, P187
   [Anonymous], 2017, FORTE 4DIAC RUNTIME
   [Anonymous], 2013, ISO27001
   [Anonymous], 2001, FIPS PUB
   [Anonymous], 2018, 62443412018 BEI
   Beckers Kristian, 2015, Pattern and Security Requirements: Engineering-based Establishment of Security Standards
   Bicaku Ani, 2022, IEEE Systems Journal, V16, P2195, DOI 10.1109/JSYST.2021.3064196
   Borg M, 2016, LECT NOTES COMPUT SC, V9923, P346, DOI 10.1007/978-3-319-45480-1_28
   Bruel JM, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448975
   Brunner M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P334, DOI 10.1109/QRS-C.2017.63
   Chawuthai R., 2015, INT SEMANTIC WEB C P
   Constante F.M., ARXIV PREPRINT ARXIV
   Cornière A, 2016, STUD COMPUT INTELL, V640, P135, DOI 10.1007/978-3-319-30337-6_13
   Ehrlich Marco, 2020, 2020 25th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA), P1644, DOI 10.1109/ETFA46521.2020.9211883
   Falco, 2011, NIST SPECIAL PUBLICA, V800, P16
   Fenz S, 2016, INF COMPUT SECUR, V24, P452, DOI 10.1108/ICS-07-2015-0030
   Francis N, 2018, INT CONF MANAGE DATA, P1433, DOI 10.1145/3183713.3190657
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Gunter D.G., 2018, IMPLEMENTING IEC 624
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   International Electrotechnical Commission, 2016, 6244311 IEC
   Karatas EK, 2014, 2014 IEEE International Conference on Data Mining Workshop (ICDMW), P832, DOI 10.1109/ICDMW.2014.57
   Kissel R., 2006, GUIDELINES MEDIA SAN
   Kronfuss E., 2018, 62443 IEC
   Kusumah R. M. Ival Tirta, 2019, 2019 International Seminar on Intelligent Technology and Its Applications (ISITIA), P216, DOI 10.1109/ISITIA.2019.8937280
   Lal M, 2015, Neo4j graph data modeling: design efficient and flexible databases by optimizing the power of Neo4j
   Lyu G, 2021, IEEE T IND INFORM, V17, P2295, DOI 10.1109/TII.2020.3016990
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Morimoto S, 2006, LECT NOTES COMPUT SC, V3982, P1
   Morimoto S, 2007, LECT NOTES COMPUT SC, V4489, P890
   Mussmann A., 2020, BUS INFORM SYST ENG+, P1309
   Needham M., 2019, Graph Algorithms
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Pokorny J, 2016, P IDEAS 16, P370, DOI [DOI 10.1145/2938503.2938547, 10.1145/2938503.2938547]
   Pokorny J, 2015, LECT NOTES COMPUT SC, V9339, P58, DOI 10.1007/978-3-319-24369-6_5
   Ramadan Q, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P123, DOI 10.1109/MODELS.2017.10
   Rosenstatter T., 2018, P 4 INT C VEH TECHN, P251
   Runde S, 2009, IEEE INTL CONF IND I, P267, DOI 10.1109/INDIN.2009.5195815
   Schmitt C., 2015, COMPLEX SYSTEMS INFO, V3, P15, DOI [10.7250/csimq.2015-3.02, DOI 10.7250/CSIMQ.2015-3.02]
   Schneider K, 2007, LECT NOTES COMPUT SC, V4542, P160
   Sharma C., 2021, THESIS AUCKLAND U TE
   Sharma C, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00336-y
   Sharma C, 2019, BDCAT'19: PROCEEDINGS OF THE 6TH IEEE/ACM INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING, APPLICATIONS AND TECHNOLOGIES, P71, DOI 10.1145/3365109.3368782
   Sharma C, 2021, INFORM SYST, V102, DOI 10.1016/j.is.2021.101816
   Sharma C, 2020, IEEE INT CONF AUTOM, P1379, DOI 10.1145/3324884.3418916
   Sharma C, 2019, IEEE INTL CONF IND I, P1558, DOI [10.1109/indin41052.2019.8972272, 10.1109/INDIN41052.2019.8972272]
   Sharma S, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P151, DOI 10.1109/IndiaCom.2014.6828119
   Sinha R, 2019, ACM TRANS CYBER-PHYS, V3, DOI 10.1145/3203208
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Tanveer A, 2021, IEEE T IND INFORM, V17, P3992, DOI 10.1109/TII.2020.3009133
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Vyatkin V., 2007, IEC 61499 FUNCTION B
   Wang ZX, 2019, ADV ENG INFORM, V42, DOI 10.1016/j.aei.2019.100983
NR 55
TC 2
Z9 2
U1 2
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 851
EP 870
DI 10.1007/s10270-022-01019-8
EA JUL 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000823342300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cheng, Z
   Tisi, M
AF Cheng, Zheng
   Tisi, Massimo
TI Deep specification and proof preservation for the CoqTL transformation
   language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Model transformation; Programming language implementation;
   Certification; Theorem proving; Coq
ID MODEL; VERIFICATION; ATL
AB Executable engines for relational model-transformation languages evolve continuously because of language extension, performance improvement and bug fixes. While new versions generally change the engine semantics, end-users expect to get backward-compatibility guarantees, so that existing transformations do not need to be adapted at every engine update. The CoqTL model-transformation language allows users to define model transformations, theorems on their behavior and machine-checked proofs of these theorems in Coq. Backward-compatibility for CoqTL involves also the preservation of these proofs. However, proof preservation is challenging, as proofs are easily broken even by small refactorings of the code they verify. In this paper, we present the solution we designed for the evolution of CoqTL. We provide a deep specification of the transformation engine, including a set of theorems that must hold against the engine implementation. Then, at each milestone in the engine development, we certify the new version of the engine against this specification, by providing proofs of the impacted theorems. The certification formally guarantees end-users that all the proofs they write using the provided theorems will be preserved through engine updates. We illustrate the structure of the deep specification theorems, we produce a machine-checked certification of three versions of CoqTL against it, and we show examples of user proofs that leverage this specification and are thus preserved through the updates. Finally, we discuss the evolution of the deep specification by an extension mechanism, we present an evolution that introduces trace links in the specification, and we show which user proofs are preserved through specification evolutions.
C1 [Cheng, Zheng] Univ Lorraine, INRIA, LORIA, CNRS, Nancy, France.
   [Tisi, Massimo] IMT Atlantique, LS2N UMR CNRS 6004, Nantes, France.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   de Lorraine; IMT - Institut Mines-Telecom; IMT Atlantique
RP Cheng, Z (corresponding author), Univ Lorraine, INRIA, LORIA, CNRS, Nancy, France.
EM zheng.cheng@inria.fr; massimo.tisi@imt-atlantique.fr
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Appel AW, 2017, PHILOS T R SOC A, V375, DOI 10.1098/rsta.2016.0331
   ATLAS Group, 2005, SPEC ATL VIRT MACH
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Benzaken V., 2018, 9 INT C INT THEOR PR, P88107
   Benzaken V., 2019, 8 ACM SIGPLAN INT C
   Berry, 2008, 12 INT WORKSH FORM M, P22
   Bodin M., 2014, 41 ACM SIGPLAN SIGAC, P87100
   Boronat A, 2017, LECT NOTES COMPUT SC, V10374, P3, DOI 10.1007/978-3-319-61473-1_1
   Bttner F., 2012, 15 INT C MOD DRIV EN
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Cheng Z., 2020, 23 ACM IEEE INT C MO, P297
   Cheng Z., 2015, 8 INT C MOD TRANSF
   Cheng Z, 2020, SOFTW SYST MODEL, V19, P425, DOI 10.1007/s10270-019-00765-6
   Cheng Z, 2018, SOFTW SYST MODEL, V17, P1197, DOI 10.1007/s10270-016-0553-x
   Cheng Z, 2018, INT J SOFTW TOOLS TE, V20, P645, DOI 10.1007/s10009-018-0491-8
   Cheng Z, 2017, IEEE INT CONF SOFTW, P379, DOI 10.1109/ICST.2017.41
   Cheng Z, 2017, LECT NOTES COMPUT SC, V10202, P300, DOI 10.1007/978-3-662-54494-5_17
   Chlipala A., 2017, 2 SUMM ADV PROGR LAN, P115
   Choi J., 2017, P ACM PROGRAMMING LA, P130
   Fernández M, 2013, ELECTRON P THEOR COM, P63, DOI 10.4204/EPTCS.108.5
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   He X, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P434, DOI 10.1145/3236024.3236070
   Hidaka S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P23, DOI 10.1109/MODELS.2017.21
   Jouault F., 2006, 8 INT C FORM METH OP
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Ko H.S., 2016, ACM SIGPLAN WORKSHOP, P6172
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   López-Fernández JJ, 2016, INFORM SYST, V62, P104, DOI 10.1016/j.is.2016.06.008
   Martínez S, 2017, SCI COMPUT PROGRAM, V136, P1, DOI 10.1016/j.scico.2016.08.006
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   Object Management Group, 2016, QUER VIEW TRANSF SPE
   Poernomo I., 2010, 12 INT C FORMAL ENG, P5673
   Ringer T., 2018, P 7 ACM SIGPLAN INT, P115, DOI [10.1145/3167094, DOI 10.1145/3167094]
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Selim G., 2012, 8 EUR C MOD FDN APPL, P90101
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Stenzel K, 2015, SOFTW SYST MODEL, V14, P981, DOI 10.1007/s10270-013-0351-7
   Tisi M., 2011, 14 INT C MOD DRIV EN, P3246
   Tisi M., 2018, 11 INT C MOD TRANSF
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Varro Gergely., 2006, Software and System Modeling, V5, P313, DOI [10.1007/s10270-006-0015-y, DOI 10.1007/S10270-006-0015-Y]
   Wagelaar, 2014, 2 SOFTW DEV AUT C AM
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Weirich S., 2017, P ACM PROGR LANG 1 I
NR 51
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1831
EP 1852
DI 10.1007/s10270-022-01004-1
EA MAY 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000790267600001
DA 2024-07-18
ER

PT J
AU de la Vara, JL
   García, AS
   Valero, J
   Ayora, C
AF Luis de la Vara, Jose
   Garcia, Arturo S.
   Valero, Jorge
   Ayora, Clara
TI Model-based assurance evidence management for safety-critical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Assurance evidence; Safety-critical systems; System assurance System
   certification; Model-Driven Engineering; OpenCert
ID STANDARDS; CERTIFICATION; TOOL
AB Most safety-critical systems are subject to rigorous assurance processes to justify that the systems satisfy given requirements and are dependable. These processes are typically conducted in compliance with standards and require the provision of assurance evidence in the form of system artifacts, such as system specifications and testing results. The management of assurance evidence is usually a complex process because of the large number of artifacts to deal with, the amount of information to gather about the artifacts, and the need to guarantee evidence quality, among other issues. Our aim is to facilitate assurance evidence management by means of a model-based approach. The approach is based on a metamodel that defines the information to be collected about evidence artifacts during their lifecycle. A process for assurance evidence management and usage guidance are also presented. The approach has been developed in the scope of several industry-academia projects, implemented in the OpenCert tool, and validated by practitioners in 10 industrial case studies. Based on the results of the validation, we argue that the approach is an effective means for assurance evidence management and that it could improve the state of the practice.
C1 [Luis de la Vara, Jose; Garcia, Arturo S.] Univ Castilla La Mancha, Albacete, Spain.
   [Ayora, Clara] Tree Technol SA, Madrid, Spain.
C3 Universidad de Castilla-La Mancha
RP de la Vara, JL (corresponding author), Univ Castilla La Mancha, Albacete, Spain.
EM joseluis.delavara@uclm.es; arturosimon.garcia@uclm.es;
   jorgevaleromolina@outlook.com; claraayora@gmail.com
RI de la Vara, Jose Luis/A-7678-2018; Jimenez, Arturo S.
   Garcia/ABH-3849-2020
OI de la Vara, Jose Luis/0000-0003-1813-398X; Jimenez, Arturo S.
   Garcia/0000-0003-0671-324X
FU AMASS (H2020-ECSEL) [692474]; AMASS (Spain's MINECO) [PCIN-2015-262];
   iRel4.0 (H2020-ECSEL) [876659]; iRel4.0 (Spain'sMICINN)
   [PCI2020-112240]; OPENCOSS (FP7) [289011]; VALU3S (H2020-ECSEL)
   [876852]; VALU3S (Spain'sMICINN) [PCI2020-112001]; ETHEREAL (Spain's
   MICINN) [PID2020-115220RB-C21 y PID2020115220RB-C22]; Treasure (JCCM )
   [SBPLY/19/180501/000270]; Treasure (EC's European Regional Development
   Fund); Ramon y Cajal Program (Spain's MICINN) [RYC-2017-22836]; Ramon y
   Cajal Program (EC's European Social Fund); Electronic Components and
   Systems for European Leadership [692474, 876659, 876852]; European
   Social Fund [RYC2017-22836]; FP7 Information and Communication
   Technologies [289011]; Ministerio de Ciencia e Innovacion
   [PCI2020-112240, PCI2020-112001, RYC-2017-22836, PID2020-115220RB-C21,
   PID2020-115220RBC22]; European Regional Development Fund
   [SBPLY/19/180501/000270]; Secretaria de Estado de Investigacion,
   Desarrollo e Innovacion [PCIN-2015-262]; Junta de Comunidades de
   Castilla-La Mancha [SBPLY/19/180501/000270]
FX The work leading to this paper received funding from the AMASS
   (H2020-ECSEL grant agreement no 692474; Spain's MINECO ref.
   PCIN-2015-262), iRel4.0 (H2020-ECSEL grant agreement no 876659;
   Spain'sMICINN ref. PCI2020-112240), OPENCOSS (FP7 grant agreement no
   289011), VALU3S (H2020-ECSEL grant agreement no 876852; Spain'sMICINN
   ref. PCI2020-112001), ETHEREAL (Spain's MICINN ref. PID2020-115220RB-C21
   y PID2020115220RB-C22), and Treasure (JCCM ref. SBPLY/19/180501/000270;
   EC's European Regional Development Fund) projects and from the Ramon y
   Cajal Program (Spain's MICINN ref. RYC-2017-22836; EC's European Social
   Fund). We thank all theOPENCOSSandAMASSpartners that contributed to
   envisioning, implementing, and validating the approach presented.
   Funding Electronic Components and Systems for European Leadership,
   692474, 876659, 876852, European Social Fund, RYC2017-22836, FP7
   Information and Communication Technologies, 289011, Ministerio de
   Ciencia e Innovacion, PCI2020-112001, PCI2020-112240,
   PID2020-115220RB-C21, PID2020-115220RBC22, RYC-2017-22836, European
   Regional Development Fund, SBPLY/19/180501/000270, Secretaria de Estado
   de Investigacion, Desarrollo e Innovacion, PCIN-2015-262, Junta de
   Comunidades de Castilla-La Mancha, SBPLY/19/180501/000270
CR Alanen J., 2017, VTTR0674317
   Alanen J., 2016, VTTR0047816 VTT
   Alexander R., 2010, 5 SEAS DTC  TECHN C
   AMASS Project, 2018, DEL D11 CAS STUD DES
   AMASS Project, 2018, DEL D25 AMASS GUID M
   AMASS Project, 2019, DEL D29 AMASS PLATF
   AMASS Project, 2018, DEL D58 METH GUID SE
   AMASS Project, 2018, DEL D56 PROT SEAM IN
   [Anonymous], 2003, Software requirements
   [Anonymous], 2016, DEP ASS FRAM SAF SEN
   Ayora C, 2016, INFORM SOFTWARE TECH, V74, P86, DOI 10.1016/j.infsof.2016.01.007
   Bakirtzis G, 2022, SOFTW SYST MODEL, V21, P113, DOI 10.1007/s10270-021-00892-z
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Biggs G, 2016, SOFTW SYST MODEL, V15, P147, DOI 10.1007/s10270-014-0400-x
   Borg M., 5 INT WORKSH NEXT GE
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   de la Vara J.L., 2011, BUSINESS PROCESS BAS
   de la Vara J.L., 26 INT WORK C REQ EN
   de la Vara J.L, EMBEDDED WORLD C 201
   de la Vara J.L., 6 INT C MOD DRIV ENG
   de la Vara J.L., 1 INT WORKSH NEXT GE
   de la Vara JL, 2017, COMPUT STAND INTER, V50, P179, DOI 10.1016/j.csi.2016.10.002
   DELAVARA JL, 2014, 7 INT WORKSH REQ ENG, P10
   Ericson C.A., 2015, HAZARD ANAL TECHNIQU
   Espinoza A, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P21
   Falessi D, 2012, IEEE SOFTWARE, V29, P64, DOI 10.1109/MS.2011.116
   Gallina B, 2017, COMPUT STAND INTER, V54, P119, DOI 10.1016/j.csi.2016.11.007
   Graydon, 2018, NASA TECHNICAL REPOR
   Habli Ibrahim, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P7, DOI 10.1109/ISSRE.2008.19
   Hawkins R., 35 INT C COMP SAF RE
   Ibrahim Y., 2020, LEVERAGING TRACEABIL
   Kelly T., 2017, HDB SAF PRINC, P361
   Kokaly S, 2017, LECT NOTES COMPUT SC, V10488, P69, DOI 10.1007/978-3-319-66266-4_5
   Larrucea X, 2016, COMPUT STAND INTER, V48, P71, DOI 10.1016/j.csi.2016.04.004
   Leveson NG, 2011, ENG SYST, P1
   Lin H, 2015, ANN IEEE SYST CONF, P194, DOI 10.1109/SYSCON.2015.7116751
   de la Vara JL, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110812
   de la Vara JL, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106351
   de la Vara JL, 2019, IEEE INT SYMP SOFTW, P326, DOI 10.1109/ISSREW.2019.00092
   de la Vara JL, 2016, IEEE T SOFTWARE ENG, V42, P1095, DOI 10.1109/TSE.2016.2553032
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Luo Y., 33 INT C CONC MOD ER
   Alvarez-Rodríguez JM, 2018, J UNIVERS COMPUT SCI, V24, P1536
   Metayer N., 9 IEEE INT WORKSH SO
   Munk P, 2020, SOFTW SYST MODEL, V19, P889, DOI 10.1007/s10270-020-00782-w
   Muram F. U., 3 INT C REL SAF SEC
   Nair S., 20 INT WORK C REQ EN
   Nair S, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P541, DOI 10.1109/ISSRE.2015.7381846
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nair S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P94, DOI 10.1109/ICST.2013.30
   Nair S, 2013, S VIS LANG HUM CEN C, P222, DOI 10.1109/RE.2013.6636722
   OMG, 2020, STRUCT ASS CAS MET S
   OPENCOSS Project, 2012, DEL 62 DET REQ EV MA
   OPENCOSS Project, 2012, DEL 12 IND US CAS DE
   OPENCOSS Project, 2015, DEL 67 EV MAN SERV I
   OPENCOSS Project, 2015, DEL 14 IMPL US CAS T
   OPENCOSS Project, 2015, DELIVERABLE 66 IMPL
   OPENCOSS Project, 2012, DEL 61 BAS EV MAN NE
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   PTC, WINDCH PROC DIR
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Ruiz A, 2017, RELIAB ENG SYST SAFE, V158, P153, DOI 10.1016/j.ress.2016.08.017
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sun L., 21 SAF CRIT SYST S S
   The REUSE Company, RQA QUAL STUD
   Vilela J., 32 BRAZ S SOFTW ENG
   Voelter M, 2019, SOFTW SYST MODEL, V18, P2507, DOI 10.1007/s10270-018-0679-0
   Wolny S, 2020, SOFTW SYST MODEL, V19, P111, DOI 10.1007/s10270-019-00735-y
NR 70
TC 5
Z9 5
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2329
EP 2365
DI 10.1007/s10270-021-00957-z
EA JAN 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000741253000001
DA 2024-07-18
ER

PT J
AU Saini, R
   Mussbacher, G
   Guo, JLC
   Kienzle, J
AF Saini, Rijul
   Mussbacher, Gunter
   Guo, Jin L. C.
   Kienzle, Jorg
TI Automated, interactive, and traceable domain modelling empowered by
   artificial intelligence
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain model; Natural language (NL); Natural language processing (NLP);
   Machine learning (ML); Neural networks; Descriptive model; Predictive
   model; Bot-Modeller interactions; Traceability information model;
   Traceability knowledge graph
ID REQUIREMENTS; GENERATION
AB Model-Based Software Engineering provides various modelling formalisms for capturing the structural, behavioral, configuration, and intentional aspects of software systems. One of the most widely used kinds of models-domain models-are used during requirements analysis or the early stages of design to capture the domain concepts and relationships in the form of class diagrams. Modellers perform domain modelling to transform the problem descriptions that express informal requirements in natural language to domain models, which are more concise and analyzable. However, this manual practice of domain modelling is laborious and time-consuming. Existing approaches, which aim to assist modellers by automating or semi-automating the construction of domain models from problem descriptions, fail to address three non-trivial aspects of automated domain modelling. First, automatically extracted domain models from existing approaches are not accurate enough to be used directly or with minor modifications for software development or teaching purposes. Second, existing approaches do not support modeller-system interactions beyond providing recommendations. Finally, existing approaches do not facilitate the modellers to learn the rationale behind the modelling decisions taken by an extractor system. Therefore, in this paper, we extend our previous work to facilitate bot-modeller interactions. We propose an algorithm to discover alternative configurations during bot-modeller interactions. Our bot uses this algorithm to find alternative configurations and then present these configurations in the form of suggestions to modellers. Our bot then updates the domain model in response to the acceptance of these suggestions by a modeller. Furthermore, we evaluate the bot for its effectiveness and performance for the test problem descriptions. Our bot achieves median F1 scores of 86%, 91%, and 90% in the Found Configurations, Offered Suggestions, and Updated Domain Models categories, respectively. We also show that the median time taken by our bot to find alternative configurations is 55.5ms for the problem descriptions which are similar to the test problem descriptions in terms of model size and complexity. Finally, we conduct a pilot user study to assess the benefits and limitations of our bot and present the lessons learned from our study in preparation for a large-scale user study.
C1 [Saini, Rijul; Mussbacher, Gunter] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Guo, Jin L. C.; Kienzle, Jorg] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University; McGill University
RP Saini, R (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM rijul.saini@mail.mcgill.ca; gunter.mussbacher@mcgill.ca;
   jguo@cs.mcgill.ca; joerg.kienzle@cs.mcgill.ca
CR [Anonymous], 2012, P 27 ANN ACM S APPL
   Anquetil N, 2010, SOFTW SYST MODEL, V9, P427, DOI 10.1007/s10270-009-0120-9
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Ben Charrada E., 2011, P 12 INT WORKSH PRIN, P21
   Bencomo N, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P216, DOI 10.1109/MODELS.2019.00005
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   Cerqueira ThacianaG. O., 2016, SEKE, P644
   Chen XF, 2013, IEEE AUS SOFT ENGR, P145, DOI 10.1109/ASWEC.2013.26
   Chen XF, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P912, DOI 10.1145/1985793.1985943
   Cleland-Huang J., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering, P17, DOI [10.1145/1987856.1987861, DOI 10.1145/1987856.1987861]
   Cleland-Huang J, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P6, DOI 10.1109/TEFSE.2009.5069575
   Dawood OmerSalih., 2017, European Journal of Industrial Engineering, V2, P44, DOI DOI 10.24018/EJERS.2017.2.1.236
   Elkamel A, 2016, I C COMP SYST APPLIC
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Hübner P, 2020, EMPIR SOFTW ENG, V25, P4350, DOI 10.1007/s10664-020-09831-w
   Jyothilakshmi MS, 2012, INT CONF INTELL SYST, P380, DOI 10.1109/ISDA.2012.6416568
   Kassab M, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P245, DOI 10.1109/SERA.2008.37
   LANDHAUSSER M, 2014, SOFTWARE QUAL J
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Mäder P, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P21, DOI 10.1109/TEFSE.2009.5069578
   MARO S, IEEE SOFTWARE
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Miller George, 1998, WORDNET ELECT LEXICA
   Montes A, 2008, LECT NOTES COMPUT SC, V5039, P325
   Segura AM, 2016, IEEE INT ENTERP DIST, P79
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Pérez-Soler S, 2017, IEEE INT CONF AUTOM, P723, DOI 10.1109/ASE.2017.8115683
   Pinheiro FAC, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P219, DOI 10.1109/ICRE.1996.491449
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Saini Rijul, 2020, 2020 IEEE Tenth International Model-Driven Requirements Engineering (MoDRE), P78, DOI 10.1109/MoDRE51215.2020.00016
   Saini R., 2020, P 23 ACM IEEE INT C, DOI 10.1145/3417990.3421385
   Saini R, 2021, INT REQUIR ENG CONF, P173, DOI 10.1109/RE51729.2021.00023
   Saini R, 2020, INT REQUIR ENG CONF, P334, DOI 10.1109/RE48521.2020.00044
   Saini R, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P714, DOI 10.1109/MODELS-C.2019.00108
   Savary-Leblanc M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P648, DOI 10.1109/MODELS-C.2019.00099
   Schisterman EF, 2005, EPIDEMIOLOGY, V16, P73, DOI 10.1097/01.ede.0000147512.81966.ba
   Schlutter A., 2018, CEUR WORKSHOP PROC, V2075
   Schottle M., 2015, COMPANION P 14 INT C, P11, DOI DOI 10.1145/2735386.2735922
   Shapiai MI, 2010, 2010 SECOND INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE, COMMUNICATION SYSTEMS AND NETWORKS (CICSYN), P28, DOI 10.1109/CICSyN.2010.10
   Sharma R, 2015, 2015 IEEE 2 INT WORK, P1, DOI [10.1186/s12864-015-1380-0, DOI 10.1109/AIRE.2015.7337625, 10.1109/AIRE.2015.7337625]
   Stirewalt RE Kurt, 2005, P 3 INT WORKSH TRAC, P31, DOI DOI 10.1145/1107656.1107664
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
NR 49
TC 14
Z9 15
U1 2
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1015
EP 1045
DI 10.1007/s10270-021-00942-6
EA JAN 2022
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000740147900001
DA 2024-07-18
ER

PT J
AU Nieke, M
   Sampaio, G
   Thüm, T
   Seidl, C
   Teixeira, L
   Schaefer, I
AF Nieke, Michael
   Sampaio, Gabriela
   Thuem, Thomas
   Seidl, Christoph
   Teixeira, Leopoldo
   Schaefer, Ina
TI Guiding the evolution of product-line configurations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Product line; Product-line evolution; Guided feature configuration
   evolution; Product behavior preservation
ID RECOMMENDER SYSTEM; SAFE EVOLUTION
AB A product line is an approach for systematically managing configuration options of customizable systems, usually by means of features. Products are generated for configurations consisting of selected features. Product-line evolution can lead to unintended changes to product behavior. We illustrate that updating configurations after product-line evolution requires decisions of both, domain engineers responsible for product-line evolution as well as application engineers responsible for configurations. The challenge is that domain and application engineers might not be able to interact with each other. We propose a formal foundation and a methodology that enables domain engineers to guide application engineers through configuration evolution by sharing knowledge on product-line evolution and by defining automatic update operations for configurations. As an effect, we enable knowledge transfer between those engineers without the need for interactions. We evaluate our methodology on four large-scale industrial product lines. The results of the qualitative evaluation indicate that our method is flexible enough for real-world product-line evolution. The quantitative evaluation indicates that we detect product behavior changes for up to 55.3% of the configurations which would not have been detected using existing methods.
C1 [Nieke, Michael] TU Braunschweig, Braunschweig, Germany.
   [Sampaio, Gabriela] Imperial Coll London, London, England.
   [Thuem, Thomas] Ulm Univ, Ulm, Germany.
   [Seidl, Christoph] ITU Copenhagen, Software Engn, Copenhagen, Denmark.
   [Teixeira, Leopoldo] Univ Fed Pernambuco, Informat Ctr CIn, Recife, PE, Brazil.
   [Schaefer, Ina] TU Braunschweig, Software Engn & Automot Informat, Braunschweig, Germany.
C3 Braunschweig University of Technology; Imperial College London; Ulm
   University; Universidade Federal de Pernambuco; Braunschweig University
   of Technology
RP Nieke, M (corresponding author), TU Braunschweig, Braunschweig, Germany.
EM micni@itu.dk; g.sampaio17@imperial.ac.uk; thomas.thuem@uni-ulm.de;
   chse@itu.dk; lmt@cin.ufpe.br; i.schaefer@tu-bs.de
RI Teixeira, Leopoldo M/G-5937-2016
FU Federal Ministry of Education and Research of Germany within CrESt
   [01IS16043S]; DFG (German Research Foundation) [SPP1593]; FACEPE
   [APQ-0570-1.03/14]; CNPq [409335/2016-9, 465614/2014-0]; INES 2.0,
   FACEPE Grants PRONEX [APQ-0388-1.03/14, APQ-0399-1.03/17]; CAPES
   [88887.136410/2017-00]; CAPES Foundation Scholarship
   [88881.129599/2016-0]
FX This work was partially supported by the Federal Ministry of Education
   and Research of Germany within CrESt (Funding 01IS16043S), by the DFG
   (German Research Foundation) under SPP1593: Design For Future-Managed
   Software Evolution, by FACEPE (Grant APQ-0570-1.03/14), by CNPq (Grant
   409335/2016-9), and by INES 2.0, FACEPE Grants PRONEX APQ-0388-1.03/14
   and APQ-0399-1.03/17, CAPES Grant 88887.136410/2017-00, and CNPq Grant
   465614/2014-0. Sampaio was supported by a CAPES Foundation Scholarship,
   Process Number 88881.129599/2016-0.
CR Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Ananthan S. N, 2020, P 2020 IEEE 2 INT C, P1, DOI 10.1109/PESGM41954.2020.9281618
   [Anonymous], 2012, ACM SIGOPS OPER SYST, DOI [DOI 10.1145/2094091.2094095, 10.1145/2039239.2039242]
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Bürdek J, 2016, AUTOMAT SOFTW ENG, V23, P687, DOI 10.1007/s10515-015-0185-3
   Dintzner N, 2018, EMPIR SOFTW ENG, V23, P905, DOI 10.1007/s10664-017-9557-6
   Egyed, 2020, P INT SYST SOFTW PRO
   El-Sharkawy S, 2016, ACM SIGPLAN NOTICES, V51, P45, DOI [10.1145/2814204.2814222, 10.1145/2936314.2814222]
   Gomes K, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302346
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kang Kyo C, 1990, Technical Report
   Krieter S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P898, DOI 10.1145/3180155.3180159
   Kröher C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P54, DOI 10.1145/3233027.3233032
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE, DOI [10.1007/978-3-319-61443-4, DOI 10.1007/978-3-319-61443-4]
   Montaghami V, 2014, LECT NOTES COMPUT SC, V8477, P318, DOI 10.1007/978-3-662-43652-3_32
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Nadi S, 2013, IEEE WORK CONF MIN S, P111, DOI 10.1109/MSR.2013.6624017
   Neves L, 2015, J SYST SOFTWARE, V106, P42, DOI 10.1016/j.jss.2015.04.024
   Nieke Michael, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P56, DOI 10.1145/3382026.3425769
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Oh Jeho, 2019, P 23 INT SYSTEMS SOF, VA, DOI DOI 10.1145/3336294.3342359
   Owre S., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P411
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Pereira JA, 2017, ACM INT CONF PR SER, P97, DOI 10.1145/3168365.3168373
   Pereira JA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P87, DOI 10.1145/3233027.3233039
   Pereira JA, 2017, ACM SIGPLAN NOTICES, V52, P120, DOI [10.1145/3093335.2993249, 10.1145/2993236.2993249]
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Sampaio G., 2016, 20 INT SYSTEMS SOFTW, P124, DOI [10.1145/2934466.2934482, DOI 10.1145/2934466.2934482]
   Sampaio G, 2019, J SYST SOFTWARE, V155, P17, DOI 10.1016/j.jss.2019.04.051
   Schaefer, 2021, P INT WORK C VAR MOD
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I., 2018, P CONF WORKSH CONFWS, P1
   Schuhmayer M, 2021, J SOFTW-EVOL PROC, V33, P2
   Schulze S., 2013, P 12 ASPECT ORIENTED, P73
   Schulze Sandro., 2012, Proceedings of the 6th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'12), P73
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   van der Linden, 2005, PRINCIPLES TECHNIQUE, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Wang B., 2013, P 17 INT SOFTWARE PR, P82
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225, DOI 10.1109/SPLC.2008.16
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Ziegler A, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P25, DOI 10.1145/2866614.2866618
NR 51
TC 4
Z9 5
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 225
EP 247
DI 10.1007/s10270-021-00906-w
EA JUL 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000669398000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Daun, M
   Weyer, T
   Pohl, K
AF Daun, Marian
   Weyer, Thorsten
   Pohl, Klaus
TI Improving manual reviews in function-centered engineering of embedded
   systems using a dedicated review model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Behavioral requirements; Embedded software; Functional design; Review
   model; Requirements engineering; Perspective-based review; Model
   transformations
ID SYNCHRONIZATION; REQUIREMENTS
AB In model-based engineering of embedded systems, manual validation activities such as reviews and inspections are needed to ensure that the system under development satisfies the stakeholder intentions. During the engineering process, changes in the stakeholder intentions typically trigger revisions of already developed and documented engineering artifacts including requirements and design specifications. In practice, changes in stakeholder intentions are often not immediately perceived and not properly documented. Moreover, they are quite often not consistently incorporated into all relevant engineering artifacts. In industry, typically manual reviews are executed to ensure that the relevant stakeholder intentions are adequately considered in the engineering artifacts. In this article, we introduce a dedicated review model to aid the reviewer in conducting manual reviews of behavioral requirements and functional design specification-two core artifacts in function-centered engineering of embedded software. To investigate whether the proposed solution is beneficial we conducted controlled experiments showing that the use of the dedicated review model can significantly increase the effectiveness and efficiency of manual reviews. Additionally, the use of the dedicated review model leads to significantly more confident decisions of the reviewers and is perceived by the reviewers as significantly more supportive compared with reviews without the dedicated review model.
C1 [Daun, Marian; Weyer, Thorsten; Pohl, Klaus] Univ Duisburg Essen, Paluno, D-45127 Essen, Germany.
C3 University of Duisburg Essen
RP Weyer, T (corresponding author), Univ Duisburg Essen, Paluno, D-45127 Essen, Germany.
EM marian.daun@paluno.uni-due.de; thorsten.weyer@paluno.uni-due.de;
   klaus.pohl@paluno.uni-due.de
OI Weyer, Thorsten/0000-0002-3357-5113; Daun, Marian/0000-0002-9156-9731
FU German Federal Ministry of Education and Research (BMBF) [01IS12005C,
   01IS16043V]
FX Funding was partially provided by the German Federal Ministry of
   Education and Research (BMBF) under grant number 01IS12005C (SPES_XT)
   and 01IS16043V (CrESt).
CR Abdelnabi Z, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P239
   Agrawal A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ASE.2003.1240339
   Albers K., 2016, ADV MODEL BASED ENG, P119
   Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], 2009, DOTFAAAR0832
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2015, MET FAC MOF 2 0 QUER
   [Anonymous], 2011, Z120 ITUT
   [Anonymous], 2009, J1239200901 SAE INT
   [Anonymous], 262621 ISO
   [Anonymous], AUTOMATENTHEORIE EIN
   [Anonymous], 2016, 247481 ISOIEC TS
   [Anonymous], 1996, 4761 SAE INT
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Borges R. V., 2010, P IEEE ACM INT C AUT, P317
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Clarke EM, 2009, COMMUN ACM, V52, P75, DOI 10.1145/1592761.1592781
   Damas C, 2009, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2009.5070543
   Daun M., 2015, P 19 INT C EV ASS SO, P29
   Daun M, 2017, LECT NOTES COMPUT SC, V10650, P466, DOI 10.1007/978-3-319-69904-2_35
   Daun M, 2014, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE 2014), P226
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Denger C, 2003, EUROMICRO CONF PROC, P316
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fradet P, 1999, LECT NOTES COMPUT SC, V1687, P410, DOI 10.1145/318774.319258
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2010, LECT NOTES COMPUT SC, V5765, P555, DOI 10.1007/978-3-642-17322-6_24
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gilb Tom, 1993, Software inspections
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Harel D, 2012, J COMPUT SYST SCI, V78, P970, DOI 10.1016/j.jcss.2011.08.008
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Hopcroft John E., 2007, INTRO AUTOMATA THEOR, V3rd
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 24765
   Jantsch A., 2000, Proceedings of the Eighth International Workshop on Hardware/Software Codesign. CODES 2000 (IEEE Cat. No.00TH8518), P8, DOI 10.1109/HSC.2000.843698
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kimelman D, 2010, IEEE T SOFTWARE ENG, V36, P248, DOI 10.1109/TSE.2009.56
   Kitchenham B., 2015, P 19 INT C EV ASS SO
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Liu SY, 2012, IEEE T SOFTWARE ENG, V38, P1100, DOI 10.1109/TSE.2011.102
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Milicev D, 2002, IEEE T SOFTWARE ENG, V28, P413, DOI 10.1109/TSE.2002.995438
   Nerode Anil, 1958, Proceedings of the American Mathematical Society, V9, P541, DOI [10.1090/S0002-9939-1958-0135681-9, DOI 10.1090/S0002-9939-1958-0135681-9]
   Nolte Siegfried, 2010, QVT OPERATIONAL MAPP
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Probst D.K, 1992, LECT NOTES COMPUTER, V663, P30, DOI [10.1007/3-540-56496-9_4, DOI 10.1007/3-540-56496-9_4]
   Ramsey P., 1980, J ED STAT, V5, P337, DOI DOI 10.3102/10769986005004337
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sang-Uk Jeon, 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing
   Schatz B., 2002, Advances in Object-Oriented Information Systems. OOIS 2002 Workshops. Proceedings (Lecture Notes in Computer Science Vol.2426), P298
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sikora E, 2010, LECT NOTES COMPUT SC, V6182, P45, DOI 10.1007/978-3-642-14192-8_6
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   Van Paesschen E, 2005, LECT NOTES COMPUT SC, V3713, P633, DOI 10.1007/11557432_47
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Weber M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P331, DOI 10.1109/ICRE.2002.1048546
   Whalen M. W., 2012, 2012 IEEE First International Workshop on the Twin Peaks of Requirements and Architecture (Twin Peaks), P36, DOI 10.1109/TwinPeaks.2012.6344559
   Whittle J, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656252
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C., 2012, Experimentation in Software Engineering
NR 83
TC 8
Z9 8
U1 1
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3421
EP 3459
DI 10.1007/s10270-019-00723-2
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600009
DA 2024-07-18
ER

PT J
AU Rodrigues, V
   Donetti, S
   Damiani, F
AF Rodrigues, Vitor
   Donetti, Simone
   Damiani, Ferruccio
TI Certifying delta-oriented programs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Delta-oriented programming; Safety properties;
   Proof-carrying code; Runtime systems
ID SOFTWARE; TIME; ARCHITECTURE; FRAMEWORK; CHECKING
AB A major design concern in modern software development frameworks is to ensure that mechanisms for updating code running on remote devices comply with given safety specifications. This paper presents a delta-oriented approach for implementing product lines where software reuse is achieved at the three levels of state-diagram modeling, C/C++source code and binary code. A safety specification is expressed on the properties of reusable software libraries that can be dynamically loaded at run time after an over-the-air update. The compilation of delta-engineered code is certified using the framework of proof-carrying code in order to guarantee safety of software updates on remote devices. An empirical evaluation of the computational cost associated with formal safety checks is done by means of experimentation.
C1 [Rodrigues, Vitor] Univ Turin, Turin, Italy.
   [Donetti, Simone; Damiani, Ferruccio] Univ Turin, Comp Sci Dept, Turin, Italy.
C3 University of Turin; University of Turin
RP Rodrigues, V (corresponding author), Univ Turin, Turin, Italy.
EM vitor.rodrigues@di.unito.it; simone.donetti@unito.it;
   ferruccio.damiani@unito.it
RI Ferruccio, Damiani/D-2383-2011
OI Ferruccio, Damiani/0000-0001-8109-1706; RODRIGUES,
   Vitor/0000-0002-9498-4068
CR Albert E, 2006, REDUCED CERTIFICATES, P163
   [Anonymous], 1976, ICSE 76
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Arndt J, 2006, TECHNICAL REPORT
   Ayavoo D, 2005, LECT NOTES COMPUT SC, V3555, P167
   Bailey J. W., 1981, 5th International Conference on Software Engineering, P107
   Basili V. R., 1975, IEEE Transactions on Software Engineering, VSE-1, P390, DOI 10.1109/TSE.1975.6312870
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bavota G, 2012, PROC INT CONF SOFTW, P1479, DOI 10.1109/ICSE.2012.6227057
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bernardeschi C, 2008, ACM T PROGR LANG SYS, V31, DOI 10.1145/1452044.1452047
   Bertot Y, 2010, INTERACTIVE THEOREM, V1
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bordeaux L, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1177352.1177354
   Brown AW, 1996, IEEE SOFTWARE, V13, P39, DOI 10.1109/52.536457
   Bryant RE, 2010, COMPUTER SYSTEMS PRO, V2
   Burow N, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054924
   Calcote J, 2010, AUTOTOOLS PRACTITION
   CALDER BJ, 1982, J CONSUM RES, V9, P240, DOI 10.1086/208920
   Catuogno L, 2003, LECT NOTES COMPUT SC, V2576, P219
   Chesta C, 2016, LECT NOTES COMPUT SC, V9953, P497, DOI 10.1007/978-3-319-47169-3_40
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2009, LECT NOTES COMPUT SC, V5902, P23, DOI 10.1007/978-3-642-10452-7_3
   DeTreville J., 2006, TECHNICAL REPORT
   Donald J., 2003, TECHNICAL REPORT
   Drepper U., 2011, TECHNICAL REPORT
   Drusinsky D., 2006, MODELING VERIFICATIO, DOI DOI 10.1016/B978-075067949-7/50003-9
   Drusinsky D, 2006, STATECHARTS MODELING, P43
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   European Commission, 2017, ECALL TIM SAV LIV SA
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Garfinkel S, 1996, PGP PRETTY GOOD PRIV, P1
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   GmbH VSI, 2018, RTT DCC DAT CONTR CO
   Gosling J., 2014, JAVA LANGUAGE SPECIF, P1
   Guo C., 2016, P 7 INT C CYB PHYS S
   Haber A., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P150, DOI 10.1109/SPLC.2011.28
   Habets T., 2012, SHARED LIB DIAMOND P
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Harel D., 1998, Mathematics of Program Construction. 4th International Conference, MPC'98. Proceedings, P1, DOI 10.1007/BFb0054280
   Hawkins R, 2009, 4 IET INT C SYST SAF, P1, DOI DOI 10.1049/CP.2009.1542
   Hermenegildo Manuel., 2005, Proc. of the 7th ACM SIGPLAN international conference on Principles and practice of declarative programming, P1
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   ISCOE N, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P340, DOI 10.1109/ICSE.1991.130660
   Kernighan B.W., 1977, TECHNICAL REPORT
   Kirovski D, 2002, ACM SIGPLAN NOTICES, V37, P108, DOI 10.1145/605432.605409
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lienhardt M, 2018, SCI COMPUT PROGRAM, V166, P3, DOI 10.1016/j.scico.2018.05.007
   Lindholm T., 1999, JAVA VIRTUAL MACHINE
   Martin JC, 1997, INTRO LANGUAGES THEO, P2
   Menon V, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P53
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Nelson Greg., 1991, SYSTEMS PROGRAMMING
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oliveira ARE, 2009, INTERNATIONAL SYMPOSIUM ON HISTORY OF MACHINES AND MECHANISMS, PROCEEDINGS OF HMM 2008, P35, DOI 10.1007/978-1-4020-9485-9_3
   Parkes AP, 2008, FINITE STATE TRANSDU, P189
   PERCIVAL C, 2006, THESIS
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Raistrick Chris., 2004, MODEL DRIVEN ARCHITE
   RAMSEY HR, 1983, COMMUN ACM, V26, P445, DOI 10.1145/358141.358149
   Rodrigues V., 2008, P FOR CAISE 08 C MON, P29
   Rodrigues V, 2015, SCI COMPUT PROGRAM, V111, P505, DOI 10.1016/j.scico.2015.06.006
   ROst T. B., 2018, ADV SERVICE ORIENTED, V824, P159, DOI [10.1007/978-3-319-79090-9_12, DOI 10.1007/978-3-319-79090-9_12]
   Rumbaugh J, 2004, UNIFIED MODELING LAN, P2
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schurr A., 2009, LECT NOTES COMPUTER, V5795, DOI [10.1007/978-3-642-04425-0, DOI 10.1007/978-3-642-04425-0]
   Seidl Christoph., 2014, MODELLIERUNG 2014, VP-225, P81
   SHNEIDERMAN B, 1977, COMMUN ACM, V20, P373, DOI 10.1145/359605.359610
   Stallman R.M., 2002, GNU Make: A program for directed compilation
   Tao LY, 2008, ACTA POLYM SIN, P48
   Team CAS, 2004, CLAR STRUCT COV AN D
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Vaughan G. V, 2001, GNU AUTOCONF AUTOMAK
   WEISS DM, 1985, IEEE T SOFTWARE ENG, V11, P157, DOI 10.1109/TSE.1985.232190
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Williams MN., 2013, Res. Evaluat., V18, P11, DOI DOI 10.7275/55HN-WK47
   WOLVERTO.RW, 1974, IEEE T COMPUT, VC 23, P615, DOI 10.1109/T-C.1974.224002
   Wong B., 2003, Proceedings International Parallel and Distributed Processing Symposium, DOI 10.1109/IPDPS.2003.1213123
   Yourdon E, 1986, TECHNIQUES PROGRAM S, P1
   Yu DC, 2004, SCI COMPUT PROGRAM, V50, P101, DOI 10.1016/j.scico.2004.01.003
NR 89
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2875
EP 2906
DI 10.1007/s10270-018-00704-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500005
DA 2024-07-18
ER

PT J
AU Estañol, M
   Munoz-Gama, J
   Carmona, J
   Teniente, E
AF Estanol, Montserrat
   Munoz-Gama, Jorge
   Carmona, Josep
   Teniente, Ernest
TI Conformance checking in UML artifact-centric business process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conformance checking; Artifact-centric BPM; BAUML framework; Process
   mining
ID PETRI NETS; SEMANTICS
AB Business artifacts have appeared as a new paradigm to capture the information required for the complete execution and reasoning of a business process. Likewise, conformance checking is gaining popularity as a crucial technique that enables evaluating whether recorded executions of a process match its corresponding model. In this paper, conformance checking techniques are incorporated into a general framework to specify business artifacts. By relying on the expressive power of an artifact-centric specification, BAUML, which combines UML state and activity diagrams (among others), the problem of conformance checking can be mapped into the Petri net formalism and its results be explained in terms of the original artifact-centric specification. In contrast to most existing approaches, ours incorporates data constraints into the Petri nets, thus achieving conformance results which are more precise. We have also implemented a plug-in, within the ProM framework, which is able to translate a BAUML into a Petri net to perform conformance checking. This shows the feasibility of our approach.
C1 [Estanol, Montserrat; Carmona, Josep; Teniente, Ernest] Univ Politecn Cataluna, C Jordi Girona Salgado 1-3, ES-08034 Barcelona, Spain.
   [Munoz-Gama, Jorge] Pontificia Univ Catolica Chile UC, Av Vicuna Mackenna 4860, Santiago, Chile.
C3 Universitat Politecnica de Catalunya
RP Estañol, M (corresponding author), Univ Politecn Cataluna, C Jordi Girona Salgado 1-3, ES-08034 Barcelona, Spain.
EM estanyol@essi.upc.edu; jmun@uc.cl; jcarmona@cs.upc.edu;
   teniente@essi.upc.edu
RI Teniente, Ernest/L-4313-2014; Munoz-Gama, Jorge/E-7135-2013; Carmona,
   Josep/E-6823-2010
OI Munoz-Gama, Jorge/0000-0002-6908-3911; 
FU FONDECYT Iniciacion [11170092]; Spanish Ministerio de Economia y
   Competitividad [TIN2017-87610-R, TIN2017-86727-C2-1-R]; Secreteria
   d'Universitats i Recerca de la Generalitat de Catalunya [2017-SGR-1749];
   CONICYT Apoyo a la Formacion de Redes Internacionales Para
   Investigadores en Etapa Inicial [REDI170136]
FX This work is partially supported by FONDECYT Iniciacion 11170092 and
   CONICYT Apoyo a la Formacion de Redes Internacionales Para
   Investigadores en Etapa Inicial REDI170136; by the Spanish Ministerio de
   Economia y Competitividad, under projects TIN2017-87610-R and
   TIN2017-86727-C2-1-R; and by the Secreteria d'Universitats i Recerca de
   la Generalitat de Catalunya, under 2017-SGR-1749.
CR [Anonymous], 2014, ALIGNING OBSERVED MO
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Bagheri Hariri B., 2013, Proceedings of the 32Nd Symposium on Principles of Database Systems. PODS '13, P163, DOI DOI 10.1145/2463664.2465221
   Borrego D, 2015, INFORM SOFTWARE TECH, V62, P187, DOI 10.1016/j.infsof.2015.02.010
   Buijs JCAM, 2014, INT J COOP INF SYST, V23, DOI 10.1142/S0218843014400012
   Buijs J. C. A. M., 2014, THESIS
   Calvanese Diego., 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management (CIKM'14), p1289s1298, DOI [DOI 10.1145/2661829.2662050, 10.1145/2661829. 2662050]
   Damaggio E, 2013, INFORM SYST, V38, P561, DOI 10.1016/j.is.2012.09.002
   Damaggio E, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338628
   de Leoni M, 2012, LECT NOTES BUS INF P, V117, P48
   de Leoni M, 2015, INFORM SYST, V47, P258, DOI 10.1016/j.is.2013.12.005
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Estañol M, 2018, INFORM SOFTWARE TECH, V93, P147, DOI 10.1016/j.infsof.2017.09.003
   Estañol M, 2015, LECT NOTES COMPUT SC, V9097, P434, DOI 10.1007/978-3-319-19069-3_27
   Estañol M, 2013, LECT NOTES COMPUT SC, V8274, P437, DOI 10.1007/978-3-642-45005-1_32
   Fahland Dirk, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P345, DOI 10.1007/978-3-642-23059-2_26
   Fahland D, 2011, BPM1107
   Fahland D, 2011, LECT NOTES BUS INF P, V87, P37
   Gerede CE, 2007, LECT NOTES COMPUT SC, V4749, P181
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   ISO/IEC, 2012, 1950522012 ISOIEC
   Lu X, 2014, LNBIP, V202, P75
   Mannhardt F, 2016, COMPUTING, V98, P407, DOI 10.1007/s00607-015-0441-1
   Meyer A, 2014, LECT NOTES COMPUT SC, V8831, P359, DOI 10.1007/978-3-662-45391-9_25
   Munoz-Gama J, 2016, LNBIP, V270
   Munoz-Gama J, 2014, INFORM SYST, V46, P102, DOI 10.1016/j.is.2014.04.003
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMG, 2014, OBJ CONTR LANG
   Popova V, 2015, INT J COOP INF SYST, V24, DOI 10.1142/S021884301550001X
   Queralt A, 2009, LECT NOTES COMPUT SC, V5565, P47, DOI 10.1007/978-3-642-02144-2_9
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Solomakhin D, 2013, LECT NOTES COMPUT SC, V8274, P252, DOI 10.1007/978-3-642-45005-1_18
   Störrle H, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P235, DOI 10.1109/VLHCC.2004.46
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2013, DISTRIB PARALLEL DAT, V31, P471, DOI 10.1007/s10619-013-7127-5
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
NR 38
TC 9
Z9 10
U1 4
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2531
EP 2555
DI 10.1007/s10270-018-0681-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kahani, N
   Bagherzadeh, M
   Cordy, JR
   Dingel, J
   Varró, D
AF Kahani, Nafiseh
   Bagherzadeh, Mojtaba
   Cordy, James R.
   Dingel, Juergen
   Varro, Daniel
TI Survey and classification of model transformation tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Model transformation tools; Metamodel;
   Classification; Survey
ID GRAPH TRANSFORMATION; INTERFACE; LANGUAGE; TAXONOMY
AB Model transformation lies at the very core of model-driven engineering, and a large number of model transformation languages and tools have been proposed over the last few years. These tools can be used to develop, transform, merge, exchange, compare, and verify models and metamodels. In this paper, we present a comprehensive catalog of existing metamodel-based transformation tools and compare them using a qualitative framework. We begin by organizing the 60 tools we identified into a general classification based on the transformation approach used. We then compare these tools using a number of particular facets, where each facet belongs to one of six different categories and may contain several attributes. The results of the study are discussed in detail and made publicly available in a companion website with a capability to search for tools using the specified facets as search criteria. Our study provides a thorough picture of the state-of-the-art in model transformation techniques and tools. Our results are potentially beneficial to many stakeholders in the modeling community, including practitioners, researchers, and transformation tool developers.
C1 [Kahani, Nafiseh; Bagherzadeh, Mojtaba; Cordy, James R.; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Varro, Daniel] McGill Univ, Sch Elect & Comp Engn, Montreal, PQ, Canada.
   [Varro, Daniel] MTA BME Lendulet Res Grp Cyber Phys Syst, Budapest, Hungary.
C3 Queens University - Canada; McGill University; Budapest University of
   Technology & Economics
RP Kahani, N (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM kahani@cs.queensu.ca; mojtaba@cs.queensu.ca; cordy@cs.queensu.ca;
   dingel@cs.queensu.ca; daniel.varro@mcgill.ca
RI Cordy, James R/G-9736-2011; Varro, Daniel/AAC-4234-2022; Bagherzadeh,
   Mojtaba/AAE-6814-2020
OI Varro, Daniel/0000-0002-8790-252X; BAGHERZADEH,
   MOJTABA/0000-0002-0253-671X
FU Natural Sciences and Engineering Research Council of Canada
FX The assistance of the following people is gratefully acknowledged: Kevin
   Lano, Jim Steel, Antonio Cicchetti, Jesus Manuel Almendros Jimenez,
   Cedric Dumoulin, Alcino Cunha, Nuno Macedo, Li Dan, Sreedhar S. Reddy,
   Bernhard Schatz, Rusi Popov, Sven Efftinge, Peter Friese, Janne Luoma,
   Juha-Pekka Tolvanen, Christopher Gerking, Didier Vojtisek, Desfray
   Philippe, Timothy Lethbridge, Thomas Degueule, Donatas Mazeika, Paul
   Boocock, Jens von Pilgrim, Hui Song, Joel Cheuoua, Gary Reeves, Arend
   Rensink, Ed Willink, Hans Vangheluwe, Simon Van Mierlo, Claudia Ermel,
   Peter Braun, Soichiro Hidaka, Zhenjiang Hu, Andy Schurr, Gergely Varro,
   Joel Greenyer, Wimmer Manuel, Gehan M.K. Selim, Pieter Van Gorp, Jesus
   Sanchez Cuadrado, Dimitris Kolovos, Mezei Gergely, William Piers, Albert
   Zundorf, Edgar Jakumeit, Christian Krause, Jean-Michel Bruel, the Blu
   Age customer service, Audris Kalnins, Dermot O'Bryan, Thomas Capelle,
   Cedric Brun, and Reto Carrara. This work is supported in part by the
   Natural Sciences and Engineering Research Council of Canada.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abelein U, 2013, IEEE SOFTWARE, V30, P17, DOI 10.1109/MS.2013.124
   Acerbis R, 2007, LECT NOTES COMPUT SC, V4607, P501
   Ahmad M, 2012, PROCEDIA COMPUT SCI, V10, P474, DOI 10.1016/j.procs.2012.06.061
   Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   Andries M, 1999, SCI COMPUT PROGRAM, V34, P1, DOI 10.1016/S0167-6423(98)00023-9
   [Anonymous], P INT C MOD DRIV ENG
   [Anonymous], 2003, P WORKSH MOD DRIV AR
   [Anonymous], 2013, ELECT COMMUNICATIONS
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], LIT STUDY MODEL TRAN
   [Anonymous], CLASSIFICATION MODEL
   [Anonymous], METAMODELLING MDA
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], TTC
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], NATURE MODELING
   [Anonymous], UNIVERSAL J COMPUTER
   [Anonymous], SOFTWARE LANGUAGE EN
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], J LOGICAL ALGEBRAIC
   [Anonymous], BIDIRECTIONAL MODEL
   [Anonymous], LANGUAGE
   [Anonymous], BIDIRECTIONAL TRANSF
   [Anonymous], 1999, HDB GRAPH GRAMMARS C, DOI DOI 10.1142/9789812815149_0014
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], P 2007 ACM S APPL CO
   [Anonymous], TRANSLATING OCL GRAP
   [Anonymous], 2014, EDBT ICDT 2014
   [Anonymous], THESIS
   [Anonymous], INT J SOFTW INFORM
   [Anonymous], 2014, CEUR WORKSHOP P
   [Anonymous], YATL YET ANOTHER TRA
   [Anonymous], ICGT
   [Anonymous], SPECIFICATION VERIFI
   [Anonymous], KERMETA LANGUAGE REF
   [Anonymous], 8 INT C SOFTW LANG E
   [Anonymous], THESIS
   [Anonymous], FAMILY MODEL TRANSFO
   [Anonymous], THESIS
   [Anonymous], ECLIPSECON 2011
   [Anonymous], P WORKSH MOD TRANSF
   [Anonymous], P 5 WORKSH MOD DRIV
   [Anonymous], SOFTWARE SYSTEMS MOD
   [Anonymous], SIGSOFT SOFTWARE ENG
   [Anonymous], 2003, METAMODELLING MDA WO
   [Anonymous], P 29 ACM IEEE INT C
   [Anonymous], ELECT COMMUNICATIONS
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Assmann U, 2000, ACM T PROGR LANG SYS, V22, P583, DOI 10.1145/363911.363914
   Asztalos Mark, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P15, DOI 10.1109/ICST.2010.42
   AUZINS A, 1991, LECT NOTES COMPUT SC, V502, P286
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   BASTIEN JMC, 1995, INT J HUM-COMPUT INT, V7, P105, DOI 10.1080/10447319509526114
   Ben Salem R, 2008, COMPUT IND, V59, P682, DOI 10.1016/j.compind.2007.12.013
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Blanc X, 2005, LECT NOTES COMPUT SC, V3599, P17
   Bondé L, 2005, CHDL SER, P89, DOI 10.1007/0-387-26151-6_8
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Calisir F, 2004, COMPUT HUM BEHAV, V20, P505, DOI 10.1016/j.chb.2003.10.004
   Cetinkaya D, 2011, WINT SIMUL C PROC, P3043, DOI 10.1109/WSC.2011.6148005
   Cho V, 2009, COMPUT EDUC, V53, P216, DOI 10.1016/j.compedu.2009.01.014
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Dubois C., 2013, Proc. of MoD- eVVa'13, P67
   Efftinge Sven., 2006, WORKSHOP MODELING S, V32, P118
   Ehrig H, 2005, LECT NOTES COMPUT SC, V3442, P49, DOI 10.1007/978-3-540-31984-9_5
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleurey F, 2004, SIVOES-MODEVA 2004, PROCEEDINGS, P29, DOI 10.1109/MODEVA.2004.1425846
   Forward A, 2009, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2009.5090073
   France RB, 1997, J OBJECT-ORIENT PROG, V10, P25
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Giese H, 2014, SOFTW SYST MODEL, V13, P273, DOI 10.1007/s10270-012-0247-y
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Greenyer J, 2007, LECT NOTES COMPUT SC, V4735, P16
   Henriksson J, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.9.a7
   Herrmannsdoerfer M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P227, DOI 10.1109/ECBS.2009.23
   Hettel T, 2008, LECT NOTES COMPUT SC, V5063, P31, DOI 10.1007/978-3-540-69927-9_3
   Hidaka S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P480, DOI 10.1109/ASE.2011.6100104
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   HOOPER PK, 1966, J SYMBOLIC LOGIC, V31, P219, DOI 10.2307/2269811
   Jackson Ethan K., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P399, DOI 10.1007/978-3-642-33666-9_26
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahani N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P227, DOI 10.1145/2976767.2976773
   Kahani N, 2017, IEEE ACM INT WORKS M, P12, DOI 10.1109/MiSE.2017.4
   Kahani Nafiseh., 2015, Software and Systems Modeling, V24, P1
   Kainz Gerd, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P579, DOI 10.1007/978-3-642-33666-9_37
   Kalnins A, 2005, LECT NOTES COMPUT SC, V3599, P62
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kleppe A.:., 2007, 4 INT WORKSHOP SOFTW, P1
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kusel A., 2013, Amt@ models, P1
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   Levendovszky T, 2005, ELECTRON NOTES THEOR, V127, P65, DOI 10.1016/j.entcs.2004.12.040
   Louridas P, 2006, IEEE SOFTWARE, V23, P104, DOI 10.1109/MS.2006.32
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Pearson H. E., 2000, Computer Law and Security Report, V16, P151, DOI 10.1016/S0267-3649(00)88906-2
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Reddy S, 2006, 2006 2ND INTERNATIONAL CONFERENCE ON TESTBEDS AND RESEARCH INFRASTRUCTURES FOR THE DEVELOPMENT OF NETWORKS & COMMUNITIES, P1
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rivera J.E., 2008, International Conference on Software Language Engineering, P54, DOI DOI 10.1007/978-3-642-00434-6
   Rosefielde S, 2007, MASTERS OF ILLUSION: AMERICAN LEADERSHIP IN THE MEDIA AGE, P1
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P146, DOI 10.1109/MODELS.2015.7338245
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall Shane., 2004, Proceedings of Workshop on Best Practices for Model-Driven Software Development, P1
   Stephan Matthew, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P265
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Syriani E, 2011, COMPUT ANAL SYNTH DE, P3
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Uhl A, 2008, IEEE SOFTWARE, V25, P46, DOI 10.1109/MS.2008.12
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Varró D, 2008, LECT NOTES COMPUT SC, V5088, P540
   Varro Daniel., 2003, Critical Systems Development workshop in UML03: 6th International Conference on the Unified Modeling Language, LNCS, V2863, P63
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
NR 133
TC 64
Z9 68
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2361
EP 2397
DI 10.1007/s10270-018-0665-6
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IJ0OR
UT WOS:000475599900001
DA 2024-07-18
ER

PT J
AU Awadid, A
   Nurcan, S
   Ghannouchi, SA
AF Awadid, Afef
   Nurcan, Selmin
   Ghannouchi, Sonia Ayachi
TI On leveraging the fruits of research efforts in the arena of business
   process modeling formalisms: a map-driven approach for decision making
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process modeling formalism; Map-driven approach; Methodological
   guidelines; Systematic literature review; Context model; Roadmap
ID FRAMEWORK; LANGUAGES; BPMN; REQUIREMENTS; SUITABILITY; CONSISTENCY;
   PATTERN
AB The importance of business process (BP) modeling to Business Process Management can be justified by the serious problems, which may arise in the latter, if the former is not conducted correctly. This can take place, for instance, in the case of an inappropriate choice of a BP modeling formalism. Many frameworks have therefore been proposed in order to guide the selection of the most suitable formalism. Nevertheless, these research efforts still scattered throughout a wide range of publications, unlinked and often with a narrow scope. Hence, there is a need for both a combination of these research labors into a single reference source and an approach to support such combination. This paper is the first contribution toward responding to this need. It proposes a methodological roadmap as a basis for developing a selection support system. The results presented in the current paper stand for a first step toward a reference framework for helping researchers and practitioners in choosing the most appropriate BP modeling formalism given a set of contextual variables. The proposed methodological roadmap is specified using a modeling formalism (MAP) which considers the decision as a first-class citizen.
C1 [Awadid, Afef; Nurcan, Selmin] Univ Paris 1 Pantheon Sorbonne, CRI, Paris, France.
   [Ghannouchi, Sonia Ayachi] Univ Manouba, RIADI Lab, Manouba, Tunisia.
C3 Universite de la Manouba
RP Awadid, A (corresponding author), Univ Paris 1 Pantheon Sorbonne, CRI, Paris, France.
EM afef.awadid@malix.univ-paris1.fr; nurcan@univ-paris1.fr;
   s.ayachi@coselearn.org
RI Awadid, Afef/KEE-8935-2024; Ayachi, Sonia/KII-0984-2024
CR Aalst W.M.P., 2009, ENCY DATABASE SYSTEM, P3557, DOI [10.1023/a:102288, DOI 10.1007/978-0-387-39940-9826]
   Afrasiabi Rad Amir, 2009, J. theor. appl. electron. commer. res., V4, P1
   Aksu F., 2010, Proceedings 2010 IEEE International Conference on Intelligent Systems and Knowledge Engineering (ISKE 2010), P664, DOI 10.1109/ISKE.2010.5680772
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 2013, P INT WORKSHOP MULTI
   [Anonymous], BUS PROC MOD NOT BPM
   Arkin Assaf., 2002, Web Service Choreography Interface (WSCI) 1.0
   Awadid A., 2016, RCIS C
   Awadid A, 2017, LECT NOTES BUS INF P, V287, P239, DOI 10.1007/978-3-319-59466-8_15
   Awadid A, 2019, SOFTW SYST MODEL, V18, P1097, DOI 10.1007/s10270-017-0629-2
   Awadid A, 2016, LECT NOTES BUS INF P, V248, P175, DOI 10.1007/978-3-319-39429-9_12
   Barros A., 2005, Service interaction patterns
   Bertoni M, 2009, COMPUT IND, V60, P476, DOI 10.1016/j.compind.2009.02.004
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Bork D, 2014, P ANN HICSS, P3400, DOI 10.1109/HICSS.2014.422
   Bork D, 2018, INT CONF RES CHAL
   Bubenko J., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P154, DOI 10.1109/ICRE.1994.292391
   Campos Ana Carolina S. M., 2011, Recent Patents on Computer Science, V4, P91
   Cho Hyun., 2011, P 11 WORKSHOP DOMAIN, P25
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Cooper D.R., 2014, BUSINESS RES METHODS
   Cortes-Cornax M, 2011, LECT NOTES BUS INF P, V95, P103
   Daoudi F., 2007, Software Process Improvement and Practice, V12, P51, DOI 10.1002/spip.304
   Di Ciccio Claudio, 2012, 1 INT WORKSH KNOWL I, P33
   Dobing B., 2009, PRINCIPLE ADVANCEMEN, P271
   Dussart A, 2004, J DATABASE MANAGE, V15, P74, DOI 10.4018/jdm.2004040104
   Fill HG, 2011, LECT NOTES BUS INF P, V83, P134
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Geyer RW, 2015, S AFR J IND ENG, V26, P252, DOI 10.7166/26-1-920
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   Glassey O, 2008, DECIS SUPPORT SYST, V44, P842, DOI 10.1016/j.dss.2007.10.004
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Green P, 2007, DATA KNOWL ENG, V62, P274, DOI 10.1016/j.datak.2006.08.004
   Grossmann G, 2010, J RES PRACT INF TECH, V42, P289
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   In H, 2001, PROC INT CONF SOFTW, P555
   Jacobson I., 1995, The Object Advantage: Business Process Reengineering with Object Technology
   Jang J, 2003, ICWS'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON WEB SERVICES, P104
   Karagiannis Dimitris, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P414, DOI 10.1007/978-3-642-31095-9_27
   Ke Ning, 2002, Computer Integrated Manufacturing Systems, V8, P792
   Kiepuszewski B, 2003, ACTA INFORM, V39, P143, DOI 10.1007/s00236-002-0105-4
   Killich S, 1999, BEHAV INFORM TECHNOL, V18, P325, DOI 10.1080/014492999118913
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kock N, 2009, DECIS SUPPORT SYST, V46, P562, DOI 10.1016/j.dss.2008.10.002
   Krogstie J, 2004, BIOMED SCI INSTRUM, V3084, P550
   LAPOUCHNIAN A., 2005, Goal-oriented requirements engineering: An overview of the current research
   LEE JT, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P114, DOI 10.1109/ICSE.1991.130629
   Letsholo K.J., 2014, International Journal of Services Computing, V2, P11
   Li Y, 2014, IEEE T IND INFORM, V10, P502, DOI 10.1109/TII.2013.2258677
   List B., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1532, DOI 10.1145/1141277.1141633
   Luo WH, 1999, IND MANAGE DATA SYST, V99, P312, DOI 10.1108/02635579910262535
   Menzel C., 1998, HDB ARCHITECTURES IN, V1, P209, DOI [DOI 10.1007/978-3-662-03526-9_10, 10.1007/3-540-26661-5_10, DOI 10.1007/3-540-26661-5_10]
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   Mohammadi Mohsen, 2013, Journal of Convergence Information Technology, V8, P372, DOI 10.4156/jcit.vol8.issue4.44
   Mohammadi M, 2017, INT J INF TECHNOL SE, V9, P37
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   NAVATHE SB, 1992, COMMUN ACM, V35, P112, DOI 10.1145/130994.131001
   Nielen A, 2010, IMCIC 2010: INTERNATIONAL MULTI-CONFERENCE ON COMPLEXITY, INFORMATICS AND CYBERNETICS, VOL II, P47
   Nurcan S, 2005, BUS PROCESS MANAG J, V11, P628, DOI 10.1108/14637150510630828
   Nysetvold A.G., 2006, ADV TOPICS DATABASE, V5, P79, DOI DOI 10.4018/978-1-59140-935-9.CH005
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Opitz N., 2012, KICK STARTING GREEN
   Ou-Yang C, 2008, INT J PROD RES, V46, P3763, DOI 10.1080/00207540701199677
   Pereira JL, 2016, ADV INTELL SYST, V444, P619, DOI 10.1007/978-3-319-31232-3_58
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Recker J., 2007, International Journal of Interoperability in Business Information Systems (IBIS), V2, P45
   Recker J., 2006, EUR C INF SYST, P1582
   Recker J.C., 2007, 18 AUSTR C INF SYST
   Recker J C., 2009, Measuring method complexity: Uml versus bpmn
   Recker J, 2007, COMMUN ASSOC INF SYS, V20, P774
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Rima A., 2013, COMPUT SRI TECHNOL, V1, P52
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   Rosemann M., 2006, P INT C BUS PROC MOD, P149
   Russell N., 2006, APCCM 06, P95
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Sanakulov N, 2015, INT J MOB COMMUN, V13, P244, DOI 10.1504/IJMC.2015.069120
   Campos ACSM, 2016, ENTERP INF SYST-UK, V10, P17, DOI 10.1080/17517575.2014.906047
   Scheer A.W., 1999, ARIS BUSINESS PROCES
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Scheer A.- W., 1998, INT HDB INFORM SYSTE, P605
   Schmitt J, 2007, J EUR ACAD DERMATOL, V21, P606, DOI 10.1111/j.1468-3083.2006.02023.x
   Siau K, 1998, P ANN HICSS, P314, DOI 10.1109/HICSS.1998.648327
   Siau K, 2011, INFORM SYST J, V21, P249, DOI 10.1111/j.1365-2575.2007.00255.x
   Sindre G., 2006, Advanced topics in database research, V5, P94
   Tan WN, 2013, ENTERP INF SYST-UK, V7, P523, DOI 10.1080/17517575.2012.660503
   Tsironis L., 2009, International Journal of Business and Management, V3, P109
   Tsironis L, 2009, BUS PROCESS MANAG J, V15, P430, DOI 10.1108/14637150910960657
   van der Aalst W.M., 2003, BPM0309, P1
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Wilson JM, 1996, J OPER RES SOC, V47, P595, DOI 10.2307/3010738
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Wohed Petia., 2002, Pattern-Based Analysis of BPEL4WS
   Yousfi A, 2015, COMPUT IND, V70, P13, DOI 10.1016/j.compind.2015.02.003
   Zachman JA, 1999, IBM SYST J, V38, P454, DOI 10.1147/sj.382.0454
   Zimoch M, 2017, COMP MED SY, P167, DOI 10.1109/CBMS.2017.70
   zur Muehlen M, 2010, INFORM SYST, V35, P379, DOI 10.1016/j.is.2009.02.006
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 138
TC 3
Z9 3
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1905
EP 1930
DI 10.1007/s10270-018-0689-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HZ6XP
UT WOS:000468996100019
DA 2024-07-18
ER

PT J
AU Li, Y
   Yue, T
   Ali, S
   Zhang, L
AF Li, Yan
   Yue, Tao
   Ali, Shaukat
   Zhang, Li
TI Enabling automated requirements reuse and configuration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements; Product line; Configuration; Reuse; Feature model
ID DOMAIN REQUIREMENTS; ANALYSIS MODELS; PRODUCT; TRACEABILITY; ALLOCATION;
   TOOL
AB A system product line (PL) often has a large number of reusable and configurable requirements, which in practice are organized hierarchically based on the architecture of the PL. However, the current literature lacks approaches that can help practitioners to systematically and automatically develop structured and configuration-ready PL requirements repositories. In the context of product line engineering and model-based engineering, automatic requirements structuring can benefit from models. Such a structured PL requirements repository can greatly facilitate the development of product-specific requirements repository, the product configuration at the requirements level, and the smooth transition to downstream product configuration phases (e.g., at the architecture design phase). In this paper, we propose a methodology with tool support, named as Zen-ReqConfig, to tackle the above challenge. Zen-ReqConfig is built on existing model-based technologies, natural language processing, and similarity measure techniques. It automatically devises a hierarchical structure for a PL requirements repository, automatically identifies variabilities in textual requirements, and facilitates the configuration of products at the requirements level, based on two types of variability modeling techniques [i.e., cardinality-based feature modeling (CBFM) and a UML-based variability modeling methodology (named as SimPL)]. We evaluated Zen-ReqConfig with five case studies. Results show that Zen-ReqConfig can achieve a better performance based on the character-based similarity measure Jaro than the term-based similarity measure Jaccard. With Jaro, Zen-ReqConfig can allocate textual requirements with high precision and recall, both over 95% on average and identify variabilities in textual requirements with high precision (over 97% on average) and recall (over 94% on average). Zen-ReqConfig achieved very good time performance: with less than a second for generating a hierarchical structure and less than 2 s on average for allocating a requirement. When comparing SimPL and CBFM, no practically significant difference was observed, and they both performed well when integrated with Zen-ReqConfig.
C1 [Li, Yan; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Yue, Tao; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
C3 Beihang University
RP Yue, T (corresponding author), Simula Res Lab, Oslo, Norway.
EM yanll@buaa.edu.cn; tao@simula.no; shaukat@simula.no; lily@buaa.edu.cn
RI yue, tao/H-6783-2013; Zhang, Li/AAA-9787-2020
OI Yue, Tao/0000-0003-3262-5577
FU Zen-Configurator project [240024/F20]; U-Test project [645463]; MBE-CR
   project [239063]; MBT4CPS project [240013/O70]; Research Council of
   Norway [263920/H30]; China Scholarship Council [263920/H30]; National
   Natural Science Foundation of China [61672078]; project of Beihang
   University [SKLSDE-2016ZX-10]
FX The work is funded by the Zen-Configurator project (Grant No.
   240024/F20). Tao Yue and Shaukat Ali are also supported by U-Test (Grant
   No. 645463), MBE-CR (Grant No. 239063), and MBT4CPS (Grant No.
   240013/O70) projects. Yan Li is supported by the exchange program
   between the Research Council of Norway and China Scholarship Council
   (No. 263920/H30). The work is also partially supported by the National
   Natural Science Foundation of China (No. 61672078) and the project of
   Beihang University (No. SKLSDE-2016ZX-10).
CR Al Faruque MA, 2014, ASIA S PACIF DES AUT, P97, DOI 10.1109/ASPDAC.2014.6742873
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], REQUIREMENTS ENG MAN
   [Anonymous], INNOVATIVE APPROACH
   [Anonymous], SOFTWARE REQUIREMENT
   [Anonymous], PROJECT DOMUS DESIGN
   [Anonymous], SOFTW PROD LIN C 200
   [Anonymous], SECONDSTRING OPEN SO
   [Anonymous], REV SISTEMAS COMPUTA
   [Anonymous], 2013, P INT MULTICONFERENC
   [Anonymous], P 7 AUSTR WORKSH REQ
   [Anonymous], 2011 9 WORK IEEE IFI
   [Anonymous], 2017, ELECTRON J DIFFER EQ
   [Anonymous], SPLC
   [Anonymous], 2011, J MACHINE LEARNING T
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], VAR MAN PUR CONS
   [Anonymous], CONSTRAINTS CORE SUP
   [Anonymous], SOFTWARE PRODUCT LIN
   [Anonymous], LECT NOTES ARTIF INT
   [Anonymous], LANGUAGE TYPOLOGY SY
   [Anonymous], P COMP ASS SOFTW ENG
   [Anonymous], 7302014 IEEE SOC I C
   [Anonymous], 19 S DES X
   [Anonymous], 2015, P 19 INT C SOFTW PRO
   [Anonymous], 2011, ISO 262622011
   [Anonymous], SYST ENG INFR C
   [Anonymous], INT C SYST AN MOD
   [Anonymous], 2013, PROC
   [Anonymous], INT C SOFTW REUS
   [Anonymous], 2008, COLING 2008 P WORKSH
   [Anonymous], INT C MOD DRIV ENG S
   [Anonymous], 291482011 IIIS
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 7 INT WORKSH VAR M
   ARELLANO A., 2015, PROC 10 INT C SYSTEM, P93
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Bai Y, 2012, SUBSEA ENGINEERING HANDBOOK, P1
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Bhatia J, 2013, INT WORKSH REQUIRE, P31, DOI 10.1109/RePa.2013.6602669
   Bilenko M, 2003, IEEE INTELL SYST, V18, P16, DOI 10.1109/MIS.2003.1234765
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   BOYD JA, 1992, P REL MAINT S, P5, DOI 10.1109/ARMS.1992.187792
   Bragança A, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2007.17
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Chen D., 2014, P 2014 C EMPIRICAL M, P740, DOI DOI 10.3115/V1/D14-1082
   Claes W., 2000, EXPT SOFTWARE ENG IN
   Cohen W.W., 2003, IJCAI WORKSH INF INT, P73, DOI DOI 10.5555/3104278.3104293
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K., 2005, INT WORKSH SOFTW FAC, P16
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Dawood OmerSalih., 2017, European Journal of Industrial Engineering, V2, P44, DOI DOI 10.24018/EJERS.2017.2.1.236
   Deeptimahanti DK, 2009, IEEE INT CONF AUTOM, P680, DOI 10.1109/ASE.2009.48
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Diev S., 2007, ACM SIGSOFT Software Engineering Notes Volume32, Issue 2, V32, P1
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Flanigan D, 2012, PROCEDIA COMPUT SCI, V8, P112, DOI 10.1016/j.procs.2012.01.022
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Gulia S, 2016, 2016 6TH INTERNATIONAL CONFERENCE - CLOUD SYSTEM AND BIG DATA ENGINEERING (CONFLUENCE), P641, DOI 10.1109/CONFLUENCE.2016.7508197
   Harmain HM, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ASE.2000.873649
   Hasegawa R., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling - Volume 96, APCCM'09, P87
   Herrera J., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P111, DOI 10.1109/SBES.2012.10
   Hoffmann M, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P301
   Hui Yang, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P25, DOI 10.1109/RE.2010.14
   Hwan C, 2005, LECT NOTES COMPUT SC, V3748, P331
   IEC 61508, 2010, 61508 IEC, V2nd ed.
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Iglesias A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P195, DOI 10.1145/3106195.3106223
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kamarudin Nuri Jazuli, 2015, Journal of Theoretical and Applied Information Technology, V81, P73
   Kapos GD, 2014, ANN IEEE SYST CONF, P531, DOI 10.1109/SysCon.2014.6819307
   Kim J, 2006, J SYST SOFTWARE, V79, P926, DOI 10.1016/j.jss.2005.06.046
   Klute S, 2011, J IND ENG MANAG-JIEM, V4, P523, DOI 10.3926/jiem.2011.v4n3.p523-537
   Kuusela J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P61, DOI 10.1109/ICSE.2000.870397
   Li Y, 2017, EMPIR SOFTW ENG, V22, P175, DOI 10.1007/s10664-015-9418-0
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Lu H, 2016, INFORM SOFTWARE TECH, V72, P68, DOI 10.1016/j.infsof.2015.12.004
   Lu H, 2014, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2014.13
   Luman RR, 2000, J HOPKINS APL TECH D, V21, P408
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A., Proc. Futur. Softw. Eng. - FOSE 2014, ACM Press, New York, New York, USA, P70, DOI DOI 10.1145/2593882.2593888
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Moon M, 2006, LECT NOTES COMPUT SC, V4039, P115
   Neiva Danuza, 2010, 2010 IEEE International Conference on Information Reuse & Integration (IRI 2010), P266, DOI 10.1109/IRI.2010.5558929
   Netto D, 2016, ADV INTELL SYST, V444, P599, DOI 10.1007/978-3-319-31232-3_56
   Niu N, 2008, INT REQUIR ENG CONF, P155, DOI 10.1109/RE.2008.49
   OMG, 2013, TECHNICAL REPORT
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Quinton Clement., 2013, P 17 INT SOFTWARE PR, P162
   Rubin DL, 2007, J DIGIT IMAGING, V20, P34, DOI 10.1007/s10278-007-9065-0
   Rudolph S, 2007, LECT NOTES ARTIF INT, V4604, P488
   Safdar SA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1319, DOI 10.1145/3071178.3071261
   Sayyad A. S., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P47, DOI 10.1109/RSSE.2012.6233409
   Schatz Bernhard, 2005, LNI, V68, P511
   Shah U.S., 2015, SIGSOFT SOFTW ENG NO, V40, P1
   Sharma R., 2014, INT C EVALUATION NOV, P1
   Stuikys V, 2009, INF TECHNOL CONTROL, V38, P179
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Valdes A, 2001, RECENT ADV INTRUSION, P54
   Vintr Z, 2001, P A REL MAI, P258, DOI 10.1109/RAMS.2001.902477
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Yue T, 2014, INT CONF QUAL SOFTW, P37, DOI 10.1109/QSIC.2014.18
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2010, LECT NOTES COMPUT SC, V6138, P337
NR 109
TC 10
Z9 10
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2177
EP 2211
DI 10.1007/s10270-017-0641-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100028
DA 2024-07-18
ER

PT J
AU Petrenko, A
AF Petrenko, Alexandre
TI Toward testing from finite state machines with symbolic inputs and
   outputs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Finite state machines; Extended finite state machines; Symbolic
   automata; Conformance testing; Checking experiments; Fault model-based
   test generation
AB After 60 or so years of development, the theory of checking experiments for FSM still continues to attract a lot of attention of research community. One of the reasons is that it offers test generation techniques which under well-defined assumptions guarantee complete fault coverage for a given fault model of a specification FSM. Checking experiments have already been extended to remove assumptions that the specification Mealy machine need to be reduced, deterministic, and completely specified, while keeping the input, output and state sets finite. In our recent work, we investigated possibilities of removing the assumption about the finiteness of the input set, introducing the model FSM with symbolic inputs. In this paper, we report the results that further lift the theory of checking experiments for Mealy machines with symbolic inputs and symbolic outputs. The former are predicates defined over input variables and the latter are output variable valuations computed by assignments on input variables. Both types of variables can have large or even infinite domains. Inclusion of assignments in the model complicates even output fault detection, as different assignments may produce the same output valuations for some input valuations. We address this issue by using a transition cover composed of symbolic inputs on which the assignments produce different outputs. The enhanced transition cover is then used in checking experiments, which detect assignment/output faults and more general transition faults under certain assumptions.
C1 [Petrenko, Alexandre] CRIM, 405 Ogilvy Ave,Suite 101, Montreal, PQ H3N 1M3, Canada.
C3 Universite de Montreal
RP Petrenko, A (corresponding author), CRIM, 405 Ogilvy Ave,Suite 101, Montreal, PQ H3N 1M3, Canada.
EM petrenko@crim.ca
OI Petrenko, Alexandre/0000-0002-2938-1666
FU MESI (Ministere de l'Economie, Science et Innovation of Gouvernement du
   Quebec); NSERC of Canada
FX This work was partially supported by MESI (Ministere de l'Economie,
   Science et Innovation of Gouvernement du Quebec) and NSERC of Canada.
   The author acknowledges joint work with A. Simao published in [30], and
   several results from [30] are used in this paper. The author thanks the
   reviewers who carefully read the submitted version and made useful
   comments.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], P 28 IFIP INT C TEST
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], IFIP ADV INFORM COMM
   [Anonymous], P 7 INT WORKSH PROT
   [Anonymous], P 12 C IEEE COMP COM
   [Anonymous], 2005, 2 INT C PERS TECHN, DOI DOI 10.1007/11759744N9
   [Anonymous], P 9 WORKSH ADV MOD B
   [Anonymous], P IFIP TC6 WG6 1 3 I
   [Anonymous], SYMBOLIC METHODS TES
   CHENG KT, 1993, ACM IEEE D, P86
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dorofeeva R, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P23, DOI 10.1109/SEFM.2005.17
   Evtushenko N. V., 1990, Automatic Control and Computer Sciences, V24, P50
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Frantzen L, 2005, LECT NOTES COMPUT SC, V3395, P1
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Glässer U, 2003, COMPUT NETW, V42, P343, DOI 10.1016/S1389-1286(03)00247-0
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Huang WL, 2016, INT J SOFTW TOOLS TE, V18, P265, DOI 10.1007/s10009-014-0356-8
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Koufareva I, 1999, INT FED INFO PROC, V21, P217
   Maler O, 2014, LNCS, P485, DOI [DOI 10.1007/978-3-642-54862-8_41, 10.1007]
   Moore E.F., 1956, Automata studies, P129
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   PETRENKO A, 1992, IFIP TRANS C, V8, P229
   Petrenko A, 2016, IEEE ICST WORKSHOP, P229, DOI 10.1109/ICSTW.2016.9
   Petrenko A, 2016, LECT NOTES COMPUT SC, V9688, P222, DOI 10.1007/978-3-319-39570-8_15
   Petrenko A, 2015, LECT NOTES COMPUT SC, V9447, P3, DOI 10.1007/978-3-319-25945-1_1
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   van Noord G., 2001, Grammars, V4, P263, DOI 10.1023/A:1012291501330
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
   Veanes Margus, 2013, Implementation and Application of Automata. 18th International Conference, CIAA 2013. Proceedings: LNCS 7982, P16, DOI 10.1007/978-3-642-39274-0_3
   Veanes M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P137
   von Bochmann G., 1991, PROC PROTOCOL TEST S, P17
   Watson B.W., 1999, Extended Finite State Models of Language, P19
   Wen-ling Huang, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P49, DOI 10.1007/978-3-642-41707-8_4
   YANNAKAKIS M, 1995, J COMPUT SYST SCI, V50, P209, DOI 10.1006/jcss.1995.1019
NR 42
TC 5
Z9 5
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 825
EP 835
DI 10.1007/s10270-017-0613-x
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400004
DA 2024-07-18
ER

PT J
AU Heinzemann, C
   Becker, S
   Volk, A
AF Heinzemann, Christian
   Becker, Steffen
   Volk, Andreas
TI Transactional execution of hierarchical reconfigurations in
   cyber-physical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE CPS; Safe reconfiguration; Correctness-by-construction; Runtime
   reconfiguration; Component model; Reconfiguration behavior; Feedback
   controller exchange; Transactions; Atomicity; Consistency; Isolation;
   Timed model checking
ID COMPONENT MODEL; ARCHITECTURAL APPROACH; CHECKING; AUTOMATA
AB Cyber-physical systems reconfigure the structure of their software architecture, e.g., to avoid hazardous situations and to optimize operational conditions like their energy consumption. These reconfigurations have to be safe so that the systems protect their users or environment against harmful conditions or events while changing their structure. As software architectures are typically built on components, reconfiguration actions need to take into account the component structure. This structure should support vertical composition to enable hierarchically encapsulated components. While many reconfiguration approaches for cyber-physical and embedded real-time systems allow the use of hierarchically embedded components, i.e., vertical composition, none of them offers a modeling and verification solution to take hierarchical composition, i.e., encapsulation, into account thus limiting reuse and compositional verification. In this paper, we present an extension to our existing modeling language, MECHATRONICUML, to enable safe hierarchical reconfigurations. The three extensions are (a) an adapted variant of the 2-phase-commit protocol to initiate reconfigurations that maintain component encapsulation, (b) the integration of feedback controllers during reconfiguration, and (c) a verification approach based on (timed) model checking for instances of our model. We illustrate our approach on a case study in the area of smart railway systems by showing two different use cases of our approach. We show that using our approach the systems can be easily designed to reconfigure safely.
C1 [Heinzemann, Christian] Robert Bosch GmbH, Corp Res, Renningen, Germany.
   [Becker, Steffen] Tech Univ Chemnitz, Chemnitz, Germany.
   [Volk, Andreas] Bosch SoftTec GmbH, Hildesheim, Germany.
C3 Bosch; Technische Universitat Chemnitz
RP Heinzemann, C (corresponding author), Robert Bosch GmbH, Corp Res, Renningen, Germany.
EM christian.heinzemann@de.bosch.com;
   steffen.becker@informatik.tu-chemnitz.de; andreas.volk@bosch-softtec.com
OI Becker, Steffen/0000-0002-4532-1460
FU University of Paderborn; Fraunhofer Institute for Mechatronic Systems
   Design (IEM) in Paderborn
FX The work presented in this paper has been conducted at the time that the
   authors spent at the University of Paderborn and the Fraunhofer
   Institute for Mechatronic Systems Design (IEM) in Paderborn. At the time
   of conducting the research, they have been funded by these institutions.
CR Adler R, 2010, ACM T EMBED COMPUT S, V10, DOI 10.1145/1880050.1880056
   Ahmadian A. S., 2011, DEV DOCUMENTATION PR
   Åkerholm M, 2007, J SYST SOFTWARE, V80, P655, DOI 10.1016/j.jss.2006.08.016
   [Anonymous], 2013, ORACLE JSR 345 ENTER
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   AUTOSAR, 2014, AUTOSAR 4 1 GUID MOD
   Bartels B., 2011, P 6 INT S SOFTW ENG, P158
   Becker S., 2014, TRRI14337 U PAD H NI
   Becker S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P614, DOI 10.1145/2591062.2591142
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bennour B, 2009, SINTER 09, P49
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Borde E., 2009, SIGBED REV, V6, DOI 10.1145/1851340.1851352
   Boyer F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P13, DOI 10.1109/ICSE.2013.6606547
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   Burmester S, 2005, LECT NOTES COMPUT SC, V3748, P25
   Burmester S, 2006, INFORMATICS IN CONTROL, AUTOMATION AND ROBOTICS I, P281, DOI 10.1007/1-4020-4543-3_34
   Burmester Sven, 2005, P 3 INT FUJ DAYS 200, P71
   Chen DJ, 2013, COMPUTING, V95, P649, DOI 10.1007/s00607-013-0314-4
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   Clarke Edmund M., 2001, Model Checking
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Cuenot P, 2010, LECT NOTES COMPUT SC, V6100, P297, DOI 10.1007/978-3-642-16277-0_11
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   De Nicola R., 2013, P 10 INT S FORM METH, V7542, P25, DOI DOI 10.1007/978-3-642-35887-6_2
   de Oliveira FA, 2013, INT CONF SELF SELF, P179, DOI 10.1109/SASO.2013.27
   do Lemos R, 2006, IEEE SOFTWARE, V23, P80, DOI 10.1109/MS.2006.35
   Dziwok S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P715, DOI 10.1145/2635868.2661665
   Eckardt T, 2013, COMPUT SCI-RES DEV, V28, P3, DOI 10.1007/s00450-011-0184-y
   Edwards G, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P142, DOI 10.1109/SEAMS.2009.5069083
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Gausemeier J., 2014, LECT NOTES MECH ENG
   Genssler T., 2002, CASES 02 P 2002 INT, P19, DOI DOI 10.1145/581630
   Gerking C., 2015, 12 WORKSH MOD DRIV E
   Group O. M, 2011, QUER VIEW TRANSF QVT
   Group O. M, 2014, MOD DRIV ARCH MDA MD
   Group O. M, 2012, OBJ CONSTR LANG OCL
   Group O. M, 2011, UN MOD LANG UML 2 4
   Hänninen K, 2008, INT SYM IND EMBED, P177, DOI 10.1109/SIES.2008.4577697
   Hang Y, 2013, ASIA PAC SOFWR ENG, P404, DOI 10.1109/APSEC.2013.61
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   Heinzemann C., ELECT COMMUN EASST
   Heinzemann C., 2015, THESIS
   Heinzemann C., 2013, INT C SOFTWARE SYSTE, P36
   Heinzemann C., 2013, P 16 INT ACM SIGSOFT, P3
   Heinzemann C., 2014, TRRI14335 U PAD H NI
   Heinzemann C, 2015, COMPUT SCI-RES DEV, V30, P255, DOI 10.1007/s00450-014-0257-9
   Heinzemann C, 2013, INT CONF SELF SELF, P71, DOI 10.1109/SASO.2013.17
   Hirsch D, 2006, LECT NOTES COMPUT SC, V4344, P113
   Hnetynka P., 2007, P 10 INT C INF SYST, V252, P1
   Hosek P, 2010, LECT NOTES COMPUT SC, V6092, P21, DOI 10.1007/978-3-642-13238-4_2
   Jan M, 2012, SOFTWARE PRACT EXPER, V42, P1467, DOI 10.1002/spe.1143
   Kallel S, 2012, SOFTW SYST MODEL, V11, P127, DOI 10.1007/s10270-010-0162-z
   Ke X, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P199, DOI 10.1109/RTCSA.2007.29
   Kim JE, 2009, PROC INT CONF SOFTW, P28, DOI 10.1109/ICSE-COMPANION.2009.5070961
   Kramer J, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P91, DOI 10.1109/CDS.1998.675762
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Maaskant H, 2005, PHILIPS RES BOOK SER, V3, P167
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   OSMIC S, 2008, SELBSTOPTIMIERENDE M, P411
   Panunzio M, 2014, J SYST SOFTWARE, V96, P105, DOI 10.1016/j.jss.2014.05.076
   Pohlmann U, 2014, EUROMICRO CONF PROC, P191, DOI 10.1109/SEAA.2014.18
   Pop T, 2012, P CBSE 2012 JUN, P93
   Priesterjahn C, 2012, IEEE INTL CONF IND I, P1092, DOI 10.1109/INDIN.2012.6300900
   Priesterjahn Claudia, 2013, TIMED HAZARD ANAL SE, P112, DOI DOI 10.1007/978-3-642-36249-1_5
   Prochazka M, 2008, P DASIA 2008 DATA SY
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Rensink A, 2008, LECT NOTES COMPUT SC, V5065, P114, DOI 10.1007/978-3-540-68679-8_8
   Rensink A, 2006, LECT NOTES COMPUT SC, V4137, P110
   Schubert D., 2016, P 19 INT ACM SIGS S
   Shaw Mary., 2002, WOSS 02 P 1 WORKSHOP, P111, DOI [10.1145/582128.582152, DOI 10.1145/582128.582152]
   Sinreich D., 2006, Technical Report,
   Steinberg D., 2008, THE ECLIPSE SERIES
   Strunk EA, 2006, IEEE T DEPEND SECURE, V3, P172, DOI 10.1109/TDSC.2006.33
   Suck J., 2011, TRRI11316 U PAD H NI
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Tichy M, 2008, POSTPR 4 WORKSH OBJ, V236, P27
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Vromant Pieter., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. SEAMS 2011, P202, DOI DOI 10.1145/1988008.1988037
   Vulgarakis A, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P478, DOI 10.1109/SEAA.2009.53
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Yin H, 2012, P 15 ACM SIGSOFT S C, P183, DOI DOI 10.1145/2304736.2304766
   Zhang J, 2005, LECT NOTES COMPUT SC, V3549, P194
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Ziegert S, 2015, COMPUT SCI-RES DEV, V30, P303, DOI 10.1007/s00450-014-0259-7
   [No title captured]
NR 92
TC 10
Z9 10
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 157
EP 189
DI 10.1007/s10270-017-0583-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300008
DA 2024-07-18
ER

PT J
AU Knuplesch, D
   Reichert, M
AF Knuplesch, David
   Reichert, Manfred
TI A visual language for modeling multiple perspectives of business process
   compliance rules
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process compliance; Extended Compliance Rule Graphs; Business
   process modeling; Smart processes
ID COMPLIANCE-CHECKING; REGULATORY COMPLIANCE; VERIFICATION; MANAGEMENT;
   SPECIFICATION; CONFORMANCE; CHALLENGES; CONTRACTS; PATTERNS
AB A fundamental challenge for enterprises is to ensure compliance of their business processes with imposed compliance rules stemming from various sources, e.g., corporate guidelines, best practices, standards, and laws. In general, a compliance rule may refer to multiple process perspectives including control flow, time, data, resources, and interactions with business partners. On one hand, compliance rules should be comprehensible for domain experts who must define, verify, and apply them. On the other, these rules should have a precise semantics to avoid ambiguities and enable their automated processing. Providing a visual language is advantageous in this context as it allows hiding formal details and offering an intuitive way of modeling the compliance rules. However, existing visual languages for compliance rule modeling have focused on the control flow perspective so far, but lack proper support for the other process perspectives. To remedy this drawback, this paper introduces the extended Compliance Rule Graph language, which enables the visual modeling of compliance rules with the support of multiple perspectives. Overall, this language will foster the modeling and verification of compliance rules in practice.
C1 [Knuplesch, David; Reichert, Manfred] Ulm Univ, Inst Database & Informat Syst, D-89081 Ulm, Germany.
C3 Ulm University
RP Knuplesch, D (corresponding author), Ulm Univ, Inst Database & Informat Syst, D-89081 Ulm, Germany.
EM david.knuplesch@uni-ulm.de; manfred.reichert@uni-ulm.de
RI Reichert, Manfred U/ABB-4469-2020
FU German Research Foundation (DFG) [RE 1402/2-1]; Austrian Science Fund
   (FWF) [I743]; Austrian Science Fund (FWF) [I743] Funding Source:
   Austrian Science Fund (FWF)
FX This work was accomplished in the C<SUP>3</SUP>Pro research project,
   which is funded by the German Research Foundation (DFG), under Project
   Number RE 1402/2-1, as well as the Austrian Science Fund (FWF) under
   Project Number I743.
CR Abdullah NS, 2010, LECT NOTES COMPUT SC, V6051, P251, DOI 10.1007/978-3-642-13094-6_21
   Accorsl R, 2011, BUS INFORM SYST ENG+, V3, P145, DOI 10.1007/s12599-011-0155-7
   Alberti M, 2008, INT J ELECTRON COMM, V12, P9, DOI 10.2753/JEC1086-4415120401
   Alles M.G., 2008, J INF SYST, V22, P195, DOI DOI 10.2308/JIS.2008.22.2.195
   [Anonymous], 201106 ULM U
   [Anonymous], 2012, BuR-BusinessResearch
   [Anonymous], RZ3662 IBM
   [Anonymous], 2014, LNBIP, DOI DOI 10.1007/978-3-662-43745-2_4
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Awad A, 2011, J VISUAL LANG COMPUT, V22, P30, DOI 10.1016/j.jvlc.2010.11.002
   Awad A, 2009, LECT NOTES COMPUT SC, V5900, P500, DOI 10.1007/978-3-642-10383-4_37
   Barba I, 2012, LECT NOTES BUS INF P, V113, P195
   Barros A, 2005, LECT NOTES COMPUT SC, V3649, P302, DOI 10.1007/11538394_20
   Baumgrass A, 2012, LECT NOTES BUS INF P, V100, P435
   Berry A, 2005, INT J COOP INF SYST, V14, P131, DOI 10.1142/S0218843005001109
   Businska L, 2010, LECT NOTES COMPUT SC, V5968, P247
   Cabanillas C., 2010, P JISBD WORKSH, V4, P26
   Cabanillas C, 2015, LECT NOTES COMPUT SC, V9097, P53, DOI 10.1007/978-3-319-19069-3_4
   Cabanillas C, 2011, LECT NOTES COMPUT SC, V7084, P477, DOI 10.1007/978-3-642-25535-9_32
   Cohen J., 1998, Statistical power analysis for the behavioral sciences, V4
   Decker G, 2011, INFORM SYST, V36, P292, DOI 10.1016/j.is.2010.06.005
   Delfmann P, 2015, INFORM SYST, V47, P129, DOI 10.1016/j.is.2014.06.003
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Eder J, 2008, LECT NOTES COMPUT SC, V5181, P668, DOI 10.1007/978-3-540-85654-2_57
   Feja S, 2010, LECT NOTES COMPUT SC, V6295, P176, DOI 10.1007/978-3-642-15576-5_15
   Fellmann M., 2014, EUR C INF SYST ECIS, P1
   Field A., 2003, How to Design and Report Experiments
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Governatori G., 2009, HDB RES BPM, P426, DOI DOI 10.4018/978-1-60566-288-6.CH020
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2009, LECT NOTES BUS INF P, V17, P5
   Grosof BN, 2000, LECT NOTES ARTIF INT, V1916, P96
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Haisjackl C, 2014, LECT NOTES BUS INF P, V178, P194
   Herbst H, 1996, INFORM SYST, V21, P147, DOI 10.1016/0306-4379(96)00009-9
   Hildebrandt Thomas, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P343, DOI 10.1007/978-3-642-29320-7_23
   Hohn S., 2009, P 2009 ACM S APPL CO, P1589
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   Kharlamova MV, 2008, MOLECULAR AND NANOSCALE SYSTEMS FOR ENERGY CONVERSION, P107
   Knuplesch David, 2013, 9th IEEE International Conference on Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom 2013), P133, DOI 10.4108/icst.collaboratecom.2013.254095
   Knuplesch David, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P146, DOI 10.1007/978-3-642-40176-3_12
   KNUPLESCH D, 2013, 201305 ULM U
   Knuplesch D, 2013, LECT NOTES BUS INF P, V132, P649
   Knuplesch D, 2013, LECT NOTES COMPUT SC, V8217, P106, DOI 10.1007/978-3-642-41924-9_10
   Knuplesch D, 2012, COLLABORATECOM, P223, DOI 10.4108/icst.collaboratecom.2012.250443
   Knuplesch D, 2010, LECT NOTES COMPUT SC, V6412, P332, DOI 10.1007/978-3-642-16373-9_24
   Konyen I., 1996, DBIS15 U ULM
   Konyen I., 1996, DBIS18 U ULM
   Konyen I., 1996, DBIS14 U ULM
   Konyen I., 1996, DBIS16 U ULM
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kumar A, 2013, INFORMS J COMPUT, V25, P543, DOI 10.1287/ijoc.1120.0520
   Kuster J., 2007, LNCS, V4714
   Lanz A, 2012, TIME PATTERNS PROCES, P1
   Lanz A, 2016, INFORM SYST, V57, P38, DOI 10.1016/j.is.2015.10.002
   Linh Thao Ly, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P7, DOI 10.1109/EDOC.2013.11
   Ly LT, 2011, LECT NOTES COMPUT SC, V7044, P82, DOI 10.1007/978-3-642-25109-2_7
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Ly LT, 2010, LECT NOTES COMPUT SC, V6051, P9
   Maggi Fabrizio Maria, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P132, DOI 10.1007/978-3-642-23059-2_13
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8484, P457, DOI 10.1007/978-3-319-07881-6_31
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Meyer A., 2014, LNCS, V8484
   Montali M., 2013, P 28 ANN ACM S APPL, P1391
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Namiri K, 2007, LECT NOTES COMPUT SC, V4803, P59
   OMG, 2015, SBVR 1 3 REC
   OMG, 2011, BPMN 2 0 REC
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Outmazgin N, 2016, SOFTW SYST MODEL, V15, P309, DOI 10.1007/s10270-014-0420-6
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Ramezani E, 2012, LECT NOTES BUS INF P, V100, P459
   Ramezani E, 2012, LECT NOTES COMPUT SC, V7481, P262, DOI 10.1007/978-3-642-32885-5_21
   RATCLIFF.JF, 1968, ROY STAT SOC C-APP, V17, P42
   Reichert M, 2005, PROC INT CONF DATA, P1113
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   Reichert M., 2012, BUSINESS PROCESS COM, P297
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Salnitri M., 2014, Enterprise, Business-Process and Information and Information Systems Modeling, V175, P200, DOI [DOI 10.1007/978-3-662-43745-2_14, 10.1007/978-3-662]
   Schultheiss B., 1996, DBIS5 U ULM
   Schultheiss B., 1996, DBIS7 U ULM
   Schultheiss B., 1996, DBIS6 U ULM
   Semmelrodt F., 2013, THESIS
   Sunkle S., 2015, CAISE 15 FORUM, V1367, P229
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Taghiabadi Elham Ramezani, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P304, DOI 10.1007/978-3-642-38709-8_20
   Turetken O, 2012, IEEE SOFTWARE, V29, P28, DOI 10.1109/MS.2012.45
   van der Aalst WMP, 2010, COMPUT J, V53, P90, DOI 10.1093/comjnl/bxn064
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Weber B., 2012, ENABLING FLEXIBILITY
   Zasada A., 2015, LWA 15 WORKSH, V15, P230
   Zugal S, 2015, SOFTW SYST MODEL, V14, P1081, DOI 10.1007/s10270-013-0356-2
NR 99
TC 17
Z9 19
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 715
EP 736
DI 10.1007/s10270-016-0526-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800007
DA 2024-07-18
ER

PT J
AU van den Berghe, A
   Scandariato, R
   Yskout, K
   Joosen, W
AF van den Berghe, Alexander
   Scandariato, Riccardo
   Yskout, Koen
   Joosen, Wouter
TI Design notations for secure software: a systematic literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Security; Notation; Software design; Empirical study
ID UML; SPECIFICATION
AB In the past 10 years, the research community has produced a significant number of design notations to represent security properties and concepts in a design artifact. These notations are aimed at documenting and analyzing security in a software design model. The fragmentation of the research space, however, has resulted in a complex tangle of different techniques. Hence, practitioners are confronted with the challenging task of scouting the right approach from a multitude of proposals. Similarly, it is hard for researchers to keep track of the synergies among the existing notations, in order to identify the existing opportunities for original contributions. This paper presents a systematic literature review that inventorizes the existing notations and provides an in-depth, comparative analysis for each.
C1 [van den Berghe, Alexander; Yskout, Koen; Joosen, Wouter] Katholieke Univ Leuven, iMinds DistriNet, B-3001 Leuven, Belgium.
   [Scandariato, Riccardo] Chalmers & Goteborg Univ, Software Engn Div, S-41756 Gothenburg, Sweden.
C3 KU Leuven; IMEC; Chalmers University of Technology
RP van den Berghe, A (corresponding author), Katholieke Univ Leuven, iMinds DistriNet, B-3001 Leuven, Belgium.
EM alexander.vandenberghe@cs.kuleuven.be; riccardo.scandariato@chalmers.se;
   koen.yskout@cs.kuleuven.be; wouter.joosen@cs.kuleuven.be
OI Yskout, Koen/0000-0002-9192-9100
FU Research Fund KU Leuven; EU; Prevention of and Fight against Crime
   Programme of the European Union (B-CCENTRE)
FX This research is partially funded by the Research Fund KU Leuven and by
   the EU FP7 project NESSoS, with the financial support from the
   Prevention of and Fight against Crime Programme of the European Union
   (B-CCENTRE).
CR Abramov J, 2012, INFORM SOFTWARE TECH, V54, P1029, DOI 10.1016/j.infsof.2012.04.001
   Abramov J, 2012, COMPUT SECUR, V31, P299, DOI 10.1016/j.cose.2012.01.004
   Ahn GJ, 2002, INFORM SOFTWARE TECH, V44, P649, DOI 10.1016/S0950-5849(02)00092-7
   Alam Masoom, 2007, Journal of Software, V2, P47, DOI 10.4304/jsw.2.1.47-59
   [Anonymous], 2012, WS TRUST 1 4 OASIS S
   [Anonymous], 200567 CERIAS PURD U
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Best B, 2007, PROC INT CONF SOFTW, P581
   Buyens K., 2011, SOFTW SYST MODEL, V12, P1
   Dai L., 2007, INT J NETWORK SECUR, V5, P187
   Dai LR, 2007, SCI COMPUT PROGRAM, V66, P87, DOI 10.1016/j.scico.2006.10.010
   Dai LR, 2006, SCI COMPUT PROGRAM, V61, P58, DOI 10.1016/j.scico.2005.11.006
   Dehlinger J., 2006, TECHNICAL REPORT
   Deng M., 2012, REQUIR ENG, V16, P187
   Díaz P, 2001, LECT NOTES COMPUT SC, V2113, P764
   Diaz P, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P203, DOI 10.1109/VLHCC.2008.4639087
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Georg G, 2002, IEEE INT C ENG COMP, P117, DOI 10.1109/ICECCS.2002.1181504
   Georg G, 2009, INFORM SOFTWARE TECH, V51, P846, DOI 10.1016/j.infsof.2008.05.004
   Giordano M, 2010, J VISUAL LANG COMPUT, V21, P41, DOI 10.1016/j.jvlc.2009.11.002
   Gomaa H, 2004, IEEE INT C ENG COMP, P19
   Hafner M, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P533
   Heldal R, 2003, LECT NOTES COMPUT SC, V2808, P235
   Hoisl B, 2014, SOFTW SYST MODEL, V13, P513, DOI 10.1007/s10270-012-0263-y
   Hu HX, 2010, IEEE T SYST MAN CY C, V40, P396, DOI 10.1109/TSMCC.2010.2047856
   Hussain S., 2013, J BASIC APPL SCI RES, V3, P642
   Jensen J., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P704, DOI 10.1109/ARES.2011.110
   Jiirjens Jan, 2007, International Journal on Software Tools for Technology Transfer, V9, P527, DOI 10.1007/s10009-007-0048-8
   Jürjens J, 2009, ADV INFORM SECUR, V45, P21, DOI 10.1007/978-0-387-88775-3_2
   Jürjens J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P683, DOI 10.1145/1368088.1368186
   Jürjens J, 2005, PROC INT CONF SOFTW, P322
   Jürjens J, 2005, IEEE INT C ENG COMP, P224
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Kasal K., 2011, P 44 HAW INT C SYST, P1, DOI DOI 10.1109/HICSS.2011.310
   Keller F, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P173
   Khan M.U.A., 2009, 2009562 QUEENS U SCH
   Khwaja AA, 2002, INT J SOFTW ENG KNOW, V12, P581, DOI 10.1142/S0218194002001062
   Kim S, 2011, J SYST SOFTWARE, V84, P2035, DOI 10.1016/j.jss.2011.03.084
   Kitchenham B., 2007, Joint Report
   Koch M., 2002, ACM Transactions on Information and Systems Security, V5, P332, DOI 10.1145/545186.545191
   Koch Manuel., 2006, Software Systems Modeling, V5, P429, DOI DOI 10.1007/S10270-006-0030-Z
   Kong J, 2010, INT J SOFTW ENG KNOW, V20, P875, DOI 10.1142/S0218194010004980
   Lucio L., 2013, ADV COMPUT, V93, P103
   Matulevicius R, 2010, DATABASES AND INFORMATION SYSTEMS, P171
   Mayer P., 2010, TECHNICAL REPORT
   Memon M, 2014, SOFTW SYST MODEL, V13, P549, DOI 10.1007/s10270-012-0268-6
   Menzel M., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P146, DOI 10.1109/SCC.2010.63
   Menzel M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P251, DOI 10.1109/SCC.2009.57
   Nakamura Y, 2005, P IEEE I C SERV COMP, P7
   Nguyen PH, 2013, ASIA PAC SOFWR ENG, P432, DOI 10.1109/APSEC.2013.64
   O. M. G. (OMG), 2012, SERV OR ARCH MOD LAN
   OMG, 2011, OMG UN MOD LANG OMG
   OMG, 2012, OMG Object Constraint Language (OCL), Version 2.3.1
   Pavlich-Mariscal JA, 2010, COMPUT SECUR, V29, P350, DOI 10.1016/j.cose.2009.11.005
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Satoh F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P585
   Shah V., 2004, AOSD TECHNOLOGY APPL
   Sohr K, 2005, LECT NOTES COMPUT SC, V3679, P64
   Talhi C, 2009, J OBJECT TECHNOL, V8, P1
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   Vela B, 2012, DECIS SUPPORT SYST, V52, P899, DOI 10.1016/j.dss.2011.11.008
   Villarroel R, 2005, COMPUT SECUR, V24, P308, DOI 10.1016/j.cose.2004.09.011
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   Yu LJ, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P126, DOI 10.1109/ICECCS.2009.16
NR 69
TC 25
Z9 27
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 809
EP 831
DI 10.1007/s10270-015-0486-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800011
OA Green Published
DA 2024-07-18
ER

PT J
AU Reggio, G
   Ricca, F
   Scanniello, G
   Di Cerbo, F
   Dodero, G
AF Reggio, Gianna
   Ricca, Filippo
   Scanniello, Giuseppe
   Di Cerbo, Francesco
   Dodero, Gabriella
TI On the comprehension of workflows modeled with a precise style: results
   from a family of controlled experiments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Family of experiments; Precise and Ultra-light styles; UML activity
   diagrams; Workflow modeling
ID SOFTWARE; DIAGRAMS; FLOWCHARTS; GUIDELINES; KNOWLEDGE
AB In this paper, we present the results from a family of experiments conducted to assess whether the level of formality/precision in workflow modeling, based on UML activity diagrams, influences two aspects of construct comprehensibility: correctness of understanding and task completion time. In particular, we have considered two styles for workflow modeling with different levels of formality: a precise style (with specific rules and imposed constraints) and an ultra-light style (no rules, no imposed constraints). Experiments were conducted with 111 participants (Bachelor and Master students). In each experiment, participants accomplished comprehension tasks on two workflows, modeled either with the precise style or with a lighter variant. The main results from our data analysis can be summarized as follows: (i) all participants achieved a significantly better comprehension of workflows written in the precise style, (ii) the style had no significant impact on task completion time, (iii) more experienced participants benefited more, with respect to less experienced ones, from the precise style, as for their correctness of understanding, and (iv) all participants found the precise style useful in comprehending workflows.
C1 [Reggio, Gianna; Ricca, Filippo] Univ Genoa, DIBRIS, Genoa, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
   [Di Cerbo, Francesco] SAP Res, Valbonne, France.
   [Dodero, Gabriella] Free Univ Bozen Bolzano, IDSE, Bolzano, Italy.
C3 University of Genoa; University of Basilicata; Free University of
   Bozen-Bolzano
RP Ricca, F (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM gianna.reggio@unige.it; filippo.ricca@unige.it;
   giuseppe.scanniello@unibas.it; francesco.di.cerbo@sap.com;
   gabriella.dodero@unibz.it
RI Ricca, Filippo/ABB-3276-2020
OI Scanniello, Giuseppe/0000-0003-0024-7508
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Ali S., 2012, SOFTW SYST MODEL, P1
   Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   [Anonymous], 2007, WEB SERVICES BUSINES
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Astesiano E, 2008, LECT NOTES COMPUT SC, V5065, P261, DOI 10.1007/978-3-540-68679-8_17
   Baker R.D., 1995, Randomization Tests
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BAUER MI, 1993, PSYCHOL SCI, V4, P372, DOI 10.1111/j.1467-9280.1993.tb00584.x
   Birkmeier D, 2010, LECT NOTES COMPUT SC, V6093, P119, DOI 10.1007/978-3-642-13821-8_10
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Broy M, 2011, SOFTW SYST MODEL, V10, P441, DOI 10.1007/s10270-011-0207-y
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   De Lucia A, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P211
   Di Cerbo Francesco, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P291, DOI 10.1007/978-3-642-21843-9_23
   Di Nitto E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P155, DOI 10.1109/ICSE.2002.1007964
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Gogolla M., 1997, UNIFIED MODELING LAN, P109
   Gross A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P47, DOI 10.1109/RE.2009.30
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hedges LV., 2014, STAT METHODS META AN
   Jurack S, 2009, LECT NOTES COMPUT SC, V5503, P49
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Marchetto Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P427, DOI 10.1007/s10009-009-0123-4
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Motulsky H.J., 2010, INTUITIVE BIOSTATIST, V2nd
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   *OMG, 2006, BUS PROC MOD NOT BPM
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Peixoto D., 2008, A Comparison of BPMN and UML 2.0 Activity Diagrams
   RAMSEY HR, 1983, COMMUN ACM, V26, P445, DOI 10.1145/358141.358149
   Reggio G., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P61, DOI 10.1109/EmpiRE.2011.6046257
   Reggio G., 2011, DISITR1103 U GEN
   Reggio G, 2011, LECT NOTES COMPUT SC, V6981, P138, DOI 10.1007/978-3-642-24485-8_11
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rychly M, 2008, ENASE 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P140
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   SCANLAN DA, 1989, IEEE SOFTWARE, V6, P28, DOI 10.1109/52.35587
   Scanniello G., ACM T SOFT IN PRESS
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   UML Revision Task Force, 2011, OMG UN MOD LANG OMG
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zimmerman MK, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P33, DOI 10.1109/ICSE.2002.1007954
NR 56
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1481
EP 1504
DI 10.1007/s10270-013-0386-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900009
DA 2024-07-18
ER

PT J
AU Finkel, A
   Leroux, J
AF Finkel, Alain
   Leroux, Jerome
TI Recent and simple algorithms for Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Petri nets; Verification of reachability properties; Simple algorithms
ID REACHABILITY PROBLEM
AB We show how inductive invariants can be used to solve coverability, boundedness and reachability problems for Petri nets. This approach provides algorithms that are conceptually simpler than previously published ones.
C1 [Finkel, Alain] INRIA, CNRS, ENS Cachan, LSV, Paris, France.
   [Leroux, Jerome] Univ Bordeaux 2, CNRS, LaBRI, F-33076 Bordeaux, France.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   Paris Saclay; Centre National de la Recherche Scientifique (CNRS);
   Universite de Bordeaux
RP Finkel, A (corresponding author), INRIA, CNRS, ENS Cachan, LSV, Paris, France.
EM alain.finkel@lsv.ens-cachan.fr; jerome.leroux@labri.fr
FU french Agence Nationale de la Recherche, REACHARD [ANR-11-BS02-001];
   Chaire DIGITEO-ENS CACHAN-ECOLE POLYTECHNIQUE
FX This work is supported by the french Agence Nationale de la Recherche,
   REACHARD (Grant ANR-11-BS02-001) and by the "Chaire DIGITEO-ENS
   CACHAN-ECOLE POLYTECHNIQUE".
CR [Anonymous], 1993, LECT NOTES COMP SCI
   [Anonymous], ALAN TURING CENTENAR
   Bouziane Z, 1998, ANN IEEE SYMP FOUND, P130, DOI 10.1109/SFCS.1998.743436
   Bozzelli L, 2011, LECT NOTES COMPUT SC, V6945, P96, DOI 10.1007/978-3-642-24288-5_10
   Cardoza E., 1976, STOC 1976: Proceedings of the 8th annual ACM Symposium on Theory of Computing, P50, DOI DOI 10.1145/800113.803630
   Demri S, 2010, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.39.1
   Figueira D, 2011, IEEE S LOG, P269, DOI 10.1109/LICS.2011.39
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   Finkel A., 2009, INT P INFORM, P433, DOI DOI 10.4230/LIPICS.STACS
   Finkel A, 2009, LECT NOTES COMPUT SC, V5556, P188, DOI 10.1007/978-3-642-02930-1_16
   Hopcroft J., 1979, Theoretical Computer Science, V8, P135, DOI 10.1016/0304-3975(79)90041-0
   Jancar P, 2008, INFORM COMPUT, V206, P1259, DOI 10.1016/j.ic.2008.06.003
   MAYR EW, 1981, J ACM, V28, P561, DOI 10.1145/322261.322271
   Pachl J.K., 2003, CORR
   Rackoff C., 1978, Theoretical Computer Science, V6, P223, DOI 10.1016/0304-3975(78)90036-1
NR 15
TC 11
Z9 13
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 719
EP 725
DI 10.1007/s10270-014-0426-0
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400014
DA 2024-07-18
ER

PT J
AU Jézéquel, JM
   Combemale, B
   Barais, O
   Monperrus, M
   Fouquet, F
AF Jezequel, Jean-Marc
   Combemale, Benoit
   Barais, Olivier
   Monperrus, Martin
   Fouquet, Francois
TI Mashup of metalanguages and its implementation in the Kermeta language
   workbench
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE DSL design and Implementation; Model-driven engineering; Software
   language engineering
ID SYSTEM; GRAMMARS
AB With the growing use of domain-specific languages (DSL) in industry, DSL design and implementation goes far beyond an activity for a few experts only and becomes a challenging task for thousands of software engineers. DSL implementation indeed requires engineers to care for various concerns, from abstract syntax, static semantics, behavioral semantics, to extra-functional issues such as runtime performance. This paper presents an approach that uses one metalanguage per language implementation concern. We show that the usage and combination of those metalanguages is simple and intuitive enough to deserve the term mashup. We evaluate the approach by completely implementing the non-trivial fUML modeling language, a semantically sound and executable subset of the Unified Modeling Language (UML).
C1 [Jezequel, Jean-Marc; Combemale, Benoit; Barais, Olivier; Fouquet, Francois] Univ Rennes 1, INRIA, IRISA, Rennes, France.
   [Monperrus, Martin] Univ Lille 1, INRIA, LIFL, Lille, France.
C3 Inria; Universite de Rennes; Inria; Universite de Lille
RP Combemale, B (corresponding author), Univ Rennes 1, INRIA, IRISA, Rennes, France.
EM jean-marc.jezequel@irisa.fr; benoit.combemale@irisa.fr;
   olivier.barais@irisa.fr; martin.monperrus@univ-lille1.fr;
   francois.fouquet@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; Barais, Olivier/KIH-2583-2024;
   Monperrus, Martin/I-3640-2012
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Barais,
   Olivier/0000-0002-4551-8562; Monperrus, Martin/0000-0003-3505-3383;
   Fouquet, Francois/0000-0001-9028-768X
CR [Anonymous], DSLS IN ACTION
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   BORRAS P, 1989, SIGPLAN NOTICES, V24, P14
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cordy J. R., 1988, Proceedings 1988 International Conference on Computer Languages (IEEE Cat. No.88CH2647-6), P280, DOI 10.1109/ICCL.1988.13075
   Dinkelaker T., 2010, P 9 INT C ASP OR SOF, P49, DOI DOI 10.1145/1739230.1739237
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Fowler M., 2010, Domain-specific languages
   Fowler Martin., LANGUAGE WORKBENCHES
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Harrison W, 2006, LECT NOTES COMPUT SC, V4089, P194
   Henriques PR, 2005, IEE P-SOFTW, V152, P54, DOI 10.1049/ip-sen:20041317
   Hilbert D., 1891, Math. Ann, V38
   Hundt R., LOOP RECOGNITION C J
   Hutchinson J., 2011, ICSE 11, P471
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Krahn H, 2008, LECT NOTES BUS INF P, V11, P297
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Markus VoelterSebastian Benz., 2013, DSL Engineering - Designing, Implementing and Using Domain-Specific Languages
   Mernik M, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P1, DOI 10.4018/978-1-4666-2092-6
   Meyer B., 1992, Eiffel: The Language
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Object Management Group, 2011, SEM FDN SUBS EX UML
   Object Management Group, 2006, MET FAC MOF 2 0 COR
   Object Management Group Inc, 2003, UML OBJ CONSTR LANG
   Odersky M, 2010, LECT NOTES COMPUT SC, V6418, P51, DOI 10.1007/978-3-642-16612-9_5
   Odersky Martin., 2006, An overview of the Scala programming language, V2nd
   Rebernak D, 2009, IET SOFTW, V3, P184, DOI 10.1049/iet-sen.2007.0114
   Renggli L, 2010, LECT NOTES COMPUT SC, V6183, P380, DOI 10.1007/978-3-642-14107-2_19
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shonle Macneil., 2003, COMPANION 18 ANN ACM, P28
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sztipanovits J, 1997, COMPUTER, V30, P110, DOI 10.1109/2.585163
   Tolvanen J.-P., 2003, COMPANION 18 ANN ACM, P92, DOI DOI 10.1145/949344.949365
   Van Wyk E, 2002, LECT NOTES COMPUT SC, V2304, P128
   Van Wyk E, 2010, SCI COMPUT PROGRAM, V75, P39, DOI 10.1016/j.scico.2009.07.004
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   Voelter Markus, 2010, LECT NOTES COMPUTER
NR 45
TC 35
Z9 36
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 905
EP 920
DI 10.1007/s10270-013-0354-4
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400023
DA 2024-07-18
ER

PT J
AU Iacob, ME
   Meertens, LO
   Jonkers, H
   Quartel, DAC
   Nieuwenhuis, LJM
   van Sinderen, MJ
AF Iacob, M. E.
   Meertens, L. O.
   Jonkers, H.
   Quartel, D. A. C.
   Nieuwenhuis, L. J. M.
   van Sinderen, M. J.
TI From enterprise architecture to business models and back
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business modeling; Enterprise architecture; Business Model Canvas;
   ArchiMate; Business Model Ontology; Cost/revenue analysis
ID FRAMEWORK
AB In this study, we argue that important IT change processes affecting an organization's enterprise architecture are also mirrored by a change in the organization's business model. An analysis of the business model may establish whether the architecture change has value for the business. Therefore, in order to facilitate such analyses, we propose an approach to relate enterprise models specified in ArchiMate to business models, modeled using Osterwalder's Business Model Canvas. Our approach is accompanied by a method that supports business model-driven migration from a baseline architecture to a target architecture and is demonstrated by means of a case study.
C1 [Iacob, M. E.; Meertens, L. O.; Nieuwenhuis, L. J. M.; van Sinderen, M. J.] Univ Twente, Ctr Telemat & Informat Technol, NL-7500 AE Enschede, Netherlands.
   [Jonkers, H.; Quartel, D. A. C.] Bizzdesign, Enschede, Netherlands.
C3 University of Twente
RP Iacob, ME (corresponding author), Univ Twente, Ctr Telemat & Informat Technol, POB 217, NL-7500 AE Enschede, Netherlands.
EM m.e.iacob@utwente.nl; h.jonkers@bizzdesign.nl; d.quartel@bizzdesign.nl
RI Nieuwenhuis, Bart/B-8063-2011
OI Nieuwenhuis, Lambert/0000-0002-6438-7756
FU Dutch Ministry of Economic Affairs
FX This work is part of the IOP GenCom U-CARE project financed by the Dutch
   Ministry of Economic Affairs. We also thank the reviewers for their
   valuable contribution in the significant improvement of this paper.
CR Al-Debei MM, 2010, EUR J INFORM SYST, V19, P359, DOI 10.1057/ejis.2010.21
   [Anonymous], 2011, TOGAF VERS 9 1
   [Anonymous], 2005, P 18 BLED ECONFERENC
   [Anonymous], 2005, Communications of the association for Information Systems, DOI DOI 10.17705/1CAIS.01601
   [Anonymous], P 6 INT WORKSH BUS I
   [Anonymous], C08 OP GROUP
   Buckl S., 2009, 15 AM C INF SYST AMC
   Buckl S, 2009, IEEE INT ENTERP DIST, P34, DOI 10.1109/EDOC.2009.30
   Constantin JamesA., 1994, Understanding Resource Management
   Demil B, 2010, LONG RANGE PLANN, V43, P227, DOI 10.1016/j.lrp.2010.02.004
   Dietz J.L. G., 2006, ENTERPRISE ONTOLOGY
   Engelsman W, 2011, ENTERP INF SYST-UK, V5, P9, DOI 10.1080/17517575.2010.491871
   Ettema R, 2009, LECT NOTES BUS INF P, V34, P172
   Foster William Landes., 2009, Ten Nonprofit Funding Models
   Freeman R.E., 2010, Strategic management: A stakeholder approach, DOI DOI 10.1017/CBO9781139192675
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   Gordijn J., 2002, THESIS VRIJE U AMSTE
   Graves T., 2011, WHY BUSINESS MODEL E
   Hedman J, 2003, EUR J INFORM SYST, V12, P49, DOI 10.1057/palgrave.ejis.3000446
   Iacob M.E., 2012, P 16 INT EDOC C EDOC
   Iacob M.E., 2012, ArchiMate 2.0 Specification
   Iacob ME, 2007, INT J ENTERP INF SYS, V3, P42, DOI 10.4018/jeis.2007010103
   International Organization for Standardization and International Electrotechnical Commission, 2007, 420102007 ISO IEC
   Janssen W., 2005, P 18 BLED ECONFERENC
   Jonkers H, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/EDOC.2003.1233835
   Jonkers H., 2009, GLOBAL IMPLICATIONS, P49
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kim WC, 2000, HARVARD BUS REV, V78, P129
   Lambert S, 2008, 21ST BLED ECONFERENCE ECOLLABORATION: OVERCOMING BOUNDARIES THROUGH MULTI-CHANNEL INTERACTION, CONFERENCE PROCEEDINGS, P277
   Lankhorst M., 2004, TECHNICAL REPORT
   Lumpkin GT, 2004, ORGAN DYN, V33, P161, DOI 10.1016/j.orgdyn.2004.01.004
   Meertens L.O., 2012, P 27 ANN ACM S APPL, P1694
   Morris M, 2005, J BUS RES, V58, P726, DOI 10.1016/j.jbusres.2003.11.001
   Op't Land M., 2008, THESIS TU DELFT
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Osterwalder A., 2004, PROPOSITION DESIGN S
   Pateli AG, 2004, EUR J INFORM SYST, V13, P302, DOI 10.1057/palgrave.ejis.3000513
   Porter M, 1985, Competitive advantage: Creating and sustaining superior performance, DOI DOI 10.1145/3120459.3120478
   van Buuren R, 2004, LECT NOTES COMPUT SC, V3256, P39
   Vargo SL, 2004, J MARKETING, V68, P1, DOI 10.1509/jmkg.68.1.1.24036
   Weill P, 2002, MIS QUART, V1, P17
   Weill P., 1998, Leveraging the New Infrastructure. How Market Leaders Capitalize on Information Technology
   Wirtz BW, 2010, LONG RANGE PLANN, V43, P272, DOI 10.1016/j.lrp.2010.01.005
   Yunus M, 2010, LONG RANGE PLANN, V43, P308, DOI 10.1016/j.lrp.2009.12.005
   Zott C, 2011, J MANAGE, V37, P1019, DOI 10.1177/0149206311406265
   Zott C, 2010, LONG RANGE PLANN, V43, P216, DOI 10.1016/j.lrp.2009.07.004
NR 46
TC 63
Z9 71
U1 3
U2 100
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1059
EP 1083
DI 10.1007/s10270-012-0304-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AK5YG
UT WOS:000338502600009
DA 2024-07-18
ER

PT J
AU Jackson, M
AF Jackson, Michael
TI Aspects of abstraction in software development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Abstraction; Analogic model; Bottom-up design; Grounded abstraction;
   Free abstraction; Horizontal abstraction; Monsters; Refinement; Theory;
   Top-down design; Vertical abstraction
AB - Abstraction is a fundamental tool of human thought in every context. This essay briefly reviews some manifestations of abstraction in everyday life, in engineering and mathematics, and in software and system development. Vertical and horizontal abstraction are distinguished and characterised. The use of vertical abstraction in top-down and bottom-up program development is discussed, and also, the use of horizontal abstraction in one very different approach to program design. The ubiquitous use of analogical models in software is explained in terms of analytical abstractions. Some aspects of the practical use of abstraction in the development of computer-based systems are explored. The necessity of multiple abstractions is argued from the essential nature of abstraction, which by definition focuses on some concerns at the expense of discarding others. Finally, some general recommendations are offered for a consciously thoughtful use of abstraction in software development.
C1 Open Univ, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Jackson, M (corresponding author), Open Univ, Milton Keynes MK7 6AA, Bucks, England.
EM jacksonma@acm.org
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Ackoff Russell., 1962, The Scientific Method
   [Anonymous], 1940, A Mathematician's Apology
   [Anonymous], 1949, REPORT C HIGH SPEED
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Billson C, HIST LONDON TUBE MAP
   Dahl O.-J., 1972, STRUCTURED PROGRAMMI
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DIJKSTRA EW, 1989, COMMUN ACM, V32, P1398
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P341, DOI 10.1145/363095.363143
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Evans-Pritchard E.E., 1937, WITCHCRAFT ORACLES M
   Feynman RP., 1986, Personal observations on reliability of shuttle
   GOGUEN JA, 1980, CSL118 SRI INT
   Gregory RL, 2005, PHILOS T R SOC B, V360, P1231, DOI 10.1098/rstb.2005.1662
   Hermann W., 1944, B AM MATH SOC, V50, P612
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   JACKSON M, 1975, PRINCIPLES PROGRAM D
   JACKSON M, 2002, SOFTWARE SYSTEMS MOD, V1, P5
   Jackson M.A., 1976, P 1 C EUR COOP INF, P262
   Jeff K., 2007, COMMUN ACM, V50, P37
   Jones CB, 2003, IEEE ANN HIST COMPUT, V25, P26, DOI 10.1109/MAHC.2003.1203057
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   Lakatos I., 1976, LOGIC MATH
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Poincare H., 1908, SCI METHODE
   Vincenti WalterG., 1993, WHAT ENG KNOW THEY K
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Zave P., 1998, LNCS, V1385, P27
NR 31
TC 7
Z9 7
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 495
EP 511
DI 10.1007/s10270-012-0259-7
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500005
DA 2024-07-18
ER

PT J
AU Seibel, A
   Neumann, S
   Giese, H
AF Seibel, Andreas
   Neumann, Stefan
   Giese, Holger
TI Dynamic hierarchical mega models: comprehensive traceability and its
   efficient maintenance
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Traceability maintenance; Global model
   management; Mega model
AB In the world of model-driven engineering (MDE) support for traceability and maintenance of traceability information is essential. On the one hand, classical traceability approaches for MDE address this need by supporting automated creation of traceability information on the model element level. On the other hand, global model management approaches manually capture traceability information on the model level. However, there is currently no approach that supports comprehensive traceability, comprising traceability information on both levels, and efficient maintenance of traceability information, which requires a high-degree of automation and scalability. In this article, we present a comprehensive traceability approach that combines classical traceability approaches for MDE and global model management in form of dynamic hierarchical mega models. We further integrate efficient maintenance of traceability information based on top of dynamic hierarchical mega models. The proposed approach is further outlined by using an industrial case study and by presenting an implementation of the concepts in form of a prototype.
C1 [Seibel, Andreas; Neumann, Stefan; Giese, Holger] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
C3 University of Potsdam
RP Seibel, A (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
EM andreas.seibel@hpi.uni-potsdam.de; stefan.neumann@hpi.uni-potsdam.de;
   holger.giese@hpi.uni-potsdam.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   AIZENBUDRESHEF N, 2005, ECMDA TW 05, P7
   ALEKSY M, 2008, PRIMIUM, V328
   ALLILAIRE F, 2006, P ECL TECHN EXCHANGE
   [Anonymous], SAICSIT 05
   [Anonymous], 2004, P BEST PRACT MOD DRI
   [Anonymous], P 4 INT FUJ DAYS
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Asuncion HU, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1023
   BARBERO M, 2007, ECMDA TW 07, P47
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   DRIVALOS N, 2008, ECMDA TW 08
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   EGYED A, 2006, ICSE, P381
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Falleri J.-R., 2006, TRACEABILITY FRAMEWO
   FARKAS T, 2006, 2 WORKSH COD CENTR M
   Favre J.M., 2004, P 3 UML WORKSH SOFTW
   Finkelstein A., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P1
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Giese H., 2009, P 4 INT WORKSH MOD R, V509, P61
   Giese H, 2009, P 8 INT WORKSH GRAPH, V18
   Giese H., 2009, 5 WORKSH MOD BAS DEV
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   *IEEE, 2004, 610121990 IEEE
   Kohler H. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P241, DOI 10.1109/ICSE.2000.870415
   Le Dang H, 2008, INNOV SYST SOFTW ENG, V4, P189, DOI 10.1007/s11334-008-0053-4
   LIMON AE, 2005, ECMDA TRAC WORKSH EC, P47
   Mader Patrick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P49, DOI 10.1109/ASE.2008.15
   MENS T, 2006, P INT WORKSH GRAPH M, V152
   PAIGE RF, 2008, ECMDA TW 08
   PLUMP D, 1993, HYPERGRAPH REWRITING, P201
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   SALAY R, 2008, ASE 08, P447
   Salay R, 2009, LECT NOTES COMPUT SC, V5565, P141, DOI 10.1007/978-3-642-02144-2_15
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   VANGORP P, 2006, ECMDA TW 06
   Vanhooff B., 2007, 3 ECMDA TRAC WORKSH, P37
   Wagner R., 2003, P WORKSH CONS PROBL
   WALDERHAUG S, 2006, ECMDA TW 06
NR 44
TC 18
Z9 18
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2010
VL 9
IS 4
BP 493
EP 528
DI 10.1007/s10270-009-0146-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 646SW
UT WOS:000281564100005
DA 2024-07-18
ER

PT J
AU Stevens, P
AF Stevens, Perdita
TI Bidirectional model transformations in QVT: semantic issues and open
   questions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th MODELS Conference 2007
CY SEP 30-OCT 05, 2007
CL Nashville, TN
DE Bidirectional model transformation; QVT; Model-driven development;
   Semantics
AB We consider the OMG's queries, views and transformations standard as applied to the specification of bidirectional transformations between models. We discuss what is meant by bidirectional transformations, and the model-driven development scenarios in which they are needed. We analyse the fundamental requirements on tools which support such transformations, and discuss some semantic issues which arise. In particular, we show that any transformation language sufficient to the needs of model-driven development would have to be able to express non-bijective transformations. We argue that a considerable amount of basic research is needed before suitable tools will be fully realisable, and suggest directions for this future research.
C1 Univ Edinburgh, Sch Informat, Edinburgh, Midlothian, Scotland.
C3 University of Edinburgh
RP Stevens, P (corresponding author), Univ Edinburgh, Sch Informat, Edinburgh, Midlothian, Scotland.
EM perdita@inf.ed.ac.uk
CR Bohannon A., 2006, Principles of Database Systems (PODS)
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   GREENYER J, 2006, THESIS U PADERBORN P
   Greenyer J, 2007, LECT NOTES COMPUT SC, V4735, P16
   Hu Zhenjiang., 2004, PARTIAL EVALUATION P, P178
   Kawanaka S, 2006, ACM SIGPLAN NOTICES, V41, P201, DOI 10.1145/1160074.1159830
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   KONIGS A, 2005, P WORKSH MOD TRANSF
   Meertens L., 1998, DESIGNING CONS UNPUB
   Mu SC, 2004, LECT NOTES COMPUT SC, V3302, P2
   Mu SC, 2004, LECT NOTES COMPUT SC, V3125, P289
   Object Management Group (OMG), 2005, PTC051101 OMG
   Stevens P, 2007, LECT NOTES COMPUT SC, V4735, P1
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Taentzer G., 2005, WORKSH MOD TRANSF PR
   WITKOP S, 2005, 050204 OMG
NR 17
TC 92
Z9 97
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 7
EP 20
DI 10.1007/s10270-008-0109-9
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 526UZ
UT WOS:000272321500002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Gumzej, R
   Colnaric, M
   Halang, WA
AF Gumzej, Roman
   Colnaric, Matjaz
   Halang, Wolfgang A.
TI A reconfiguration pattern for distributed embedded systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Real-time; Distributed; Embedded systems; Dynamic reconfiguration; UML
   profiles and patterns; UML-RT; Specification PEARL
AB A reconfiguration pattern for UML-based projects of embedded (real-time) systems is defined. It enables to set up hardware/software configurations, and to specify conditions and methods for dynamic reconfiguration. The reconfiguration pattern was inspired by the reconfiguration management solution of the Specification PEARL methodology, which is based on the standard for Multiprocessor PEARL whose original idea it was to extend the language to enable the programming of distributed real-time applications in PEARL. In Specification PEARL, the possibility for abstract descriptions of hardware and software architectures and for defining mappings from software to hardware components has been enhanced in correspondence with the standard. Here, a UML pattern for reconfiguration management in distributed embedded applications based on concepts from Specification PEARL is presented. Its behavioural, structural and functional aspects are outlined. It addresses stereotype entities from the Specification PEARL language, which were joined in a UML profile, and outlines the related reconfiguration management mechanisms, which were carried over to the mentioned UML pattern. The proposed reconfiguration pattern is to facilitate the development of distributed embedded application in UML with consistent and temporally predictable reconfiguration support. It should also support and enhance the applications' flexibility and portability.
C1 [Gumzej, Roman; Colnaric, Matjaz] Univ Maribor, Fac Elect Engn & Comp Sci, Maribor 2000, Slovenia.
   [Halang, Wolfgang A.] Fernuniv, Chair Comp Engn, D-58084 Hagen, Germany.
C3 University of Maribor; Fern University Hagen
RP Gumzej, R (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Maribor 2000, Slovenia.
EM roman.gumzej@uni-mb.si; colnaric@uni-mb.si;
   wolfgang.halang@fernuni-hagen.de
RI Gumzej, Roman/A-1620-2008; Colnarič, Matjaž/AAI-4620-2020; Halang,
   Wolfgang A./O-3573-2016
CR Almeida JPA, 2004, INT WKSHP FUT TR DIS, P286
   [Anonymous], 2005, UN MOD LANG SUP VERS
   *DIN, 1998, 662532 DIN
   *DIN, 1989, 66253 DIN
   EISENRING M, 1999, P 9 INT WORKSH FIELD, P205
   Gumzej R., 2003, Proceedings. Ninth IEEE International Workshop on Object-Oriented Real-Time Dependable Systems, P125
   GUMZEJ R, HOLISTIC EMBEDDED CO
   Gumzej R, 2007, REAL-TIME SYST, V35, P181, DOI 10.1007/s11241-006-9007-9
   HOFMEISTER C, 1993, THESIS U MARYLAND
   HUTCHINGS BL, 1995, P 5 INT WORKSH FIELD, P419
   Jean JSN, 1999, IEEE T COMPUT, V48, P591, DOI 10.1109/12.773796
   Kalbarczyk ZT, 1999, IEEE T PARALL DISTR, V10, P560, DOI 10.1109/71.774907
   Kogekar S, 2004, IPSN '04: THIRD INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P379
   KRAMER J, 1985, IEEE T SOFTWARE ENG, V11, P424, DOI 10.1109/TSE.1985.232231
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   PASETTI A, 2002, EMBEDDED CONTROL SYS
   Rust C, 2002, INT FED INFO PROC, V91, P41
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
   Smith E, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P86, DOI 10.1109/GRID.2004.26
   SUZUKI J, 2002, P IEEE WORKSH LARG S
   Wolf W, 2003, COMPUTER, V36, P38, DOI 10.1109/MC.2003.1193227
NR 22
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 145
EP 161
DI 10.1007/s10270-007-0075-7
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000008
DA 2024-07-18
ER

PT J
AU Muller, PA
   Fondement, F
   Fleurey, F
   Hassenforder, M
   Schnekenburger, R
   Gérard, S
   Jézéquel, JM
AF Muller, Pierre-Alain
   Fondement, Frederic
   Fleurey, Franck
   Hassenforder, Michel
   Schnekenburger, Remi
   Gerard, Sebastien
   Jezequel, Jean-Marc
TI Model-driven analysis and synthesis of textual concrete syntax
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 9th MODELS Conference 2006
CY OCT 01-06, 2006
CL Genoa, ITALY
DE MDD; MDE; language engineering; meta-modeling
AB Meta-modeling is raising more and more interest in the field of language engineering. While this approach is now well understood for defining abstract syntaxes, formally defining textual concrete syntaxes with meta-models is still a challenge. Textual concrete syntaxes are traditionally expressed with rules, conforming to EBNF-like grammars, which can be processed by compiler compilers to generate parsers. Unfortunately, these generated parsers produce concrete syntax trees, leaving a gap with the abstract syntax defined by meta-models, and further ad hoc hand-coding is required. In this paper we propose a new kind of specification for concrete syntaxes, which takes advantage of meta-models to generate fully operational tools (such as parsers or text generators). The principle is to map abstract syntaxes to textual concrete syntaxes via bidirectional mapping-models with support for both model-to-text, and text-to-model transformations.
C1 [Muller, Pierre-Alain; Jezequel, Jean-Marc] IRISA INRIA Rennes, Rennes, France.
   [Fondement, Frederic; Hassenforder, Michel] Univ Haute Alsace, MIPS, Mulhouse, France.
   [Fleurey, Franck] SINTEF, Oslo, Norway.
   [Schnekenburger, Remi; Gerard, Sebastien] CEA, LIST, Gif Sur Yvette, France.
C3 Universite de Rennes; Universites de Strasbourg Etablissements Associes;
   Universite de Haute-Alsace (UHA); SINTEF; Universite Paris Saclay; CEA
RP Muller, PA (corresponding author), IRISA INRIA Rennes, Rennes, France.
EM pierre-alain.muller@irisa.fr; frederic.fondement@uha.fr;
   franck.fleurey@sintef.no; michel.hassenforder@uha.fr;
   remi.schnekenburger@cea.fr; sebastien.gerard@cea.fr;
   jean-marc.jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Gerard,
   Sebastien/0000-0003-0295-0520
CR AKEHURST D, 2003, OCL 2 0 IMPLEMENTING
   Alanen M., 2003, A relation between context-free grammars and Meta Object Facility metamodels
   *ANDR ORG, ANDROMDA
   [Anonymous], Compilers: Principles, Techniques
   [Anonymous], 2003, UNIFIED MODELING LAN
   [Anonymous], 2004, Software Factories
   ATKINSON C, 2002, INT WORKSH SOFRW MOD
   BACKUS JW, 1960, COMMUN ACM, V3, P299, DOI 10.1145/367236.367262
   BORRAS P, ACM SIGSOFTSIGPLAN S, V13, P14
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   Chomsky N. A, 2006, LANGUAGE MIND
   Clark T., 2004, APPL METAMODELLING F
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara Juan., 2002, 4 INT C ENTERPRISE I, P642
   *ECL, 2005, ECL MOD FRAM EMF
   *ECL, 2005, JAV EM TEMPL JET
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   FONDEMENT F, 2006, METAMODEL AWARE TEXT
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   HEARNDEN D, 2002, ANTIYACC MOF TEXT EN
   HECKEL R, 2003, LECT CONCURRENCY PET, P559
   *IBM, EMF
   *ISO, 1996, 14977 ISO
   JOHNSON SC, 1979, UNIX PROGRAMMERS M B, V2
   JOUAULT F, 2006, TCS DSL SPECIFICATIO, P249
   JOUAULT F, 2006, 8 IFIP INT C FORM ME
   *KERM, 2005, KERMETA PROJ HOM PAG
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   KUNERT A, 2006, 5 INT WORKSH GRAPH I
   KURTEV I, 2002, TECHNICAL SPACES INI
   MATULA M, 2005, JAVA METAMODEL NETBE
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   MULLER PA, 2005, WISME 2005 4 WORKSH
   MULLER PA, 2004, BEST PRACT MOD DRIV
   MULLER PA, 2007, SINTAKS
   *OMG, 2005, XML MET INT XMI 2 1
   OMG, 2006, MET OBJ FAC MOF COR
   OMG, 2004, HUM US TEXT NOT
   OMG, 2004, MOF MOD TEXT TRANSF
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pratt T. W., 1971, Journal of Computer and System Sciences, V5, P560, DOI 10.1016/S0022-0000(71)80016-8
   SCHEIDGEN M, 2007, TEXTUAL EDITING FRAM
   *SUN MICR, 2005, MET REP MDR
   WIMMER M, 2005, WORKSH SOFTW MOD ENG
NR 46
TC 8
Z9 8
U1 2
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2008
VL 7
IS 4
BP 423
EP 441
DI 10.1007/s10270-008-0088-x
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 348CI
UT WOS:000259188200004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cerone, A
   Connelly, S
   Lindsay, P
AF Cerone, Antonio
   Connelly, Simon
   Lindsay, Peter
TI Formal analysis of human operator behavioural patterns in interactive
   surveillance systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 3rd IEEE International Conference on Software Engineering and Formal
   Methods
CY SEP 07-09, 2005
CL Koblenz, GERMANY
SP IEEE Comp Soc
ID RULES
AB An important area of Human Reliability Assessment in interactive systems is the ability to understand the causes of human error and to model their occurrence. This paper investigates a new approach to analysis of task failures based on patterns of operator behaviour, in contrast with more traditional event-based approaches. It considers, as a case study, a formal model of an Air Traffic Control system operator's task which incorporates a simple model of the high-level cognitive processes involved. The cognitive model is formalised in the CSP process algebra. Various patterns of behaviour that could lead to task failure are described using temporal logic. Then a model-checking technique is used to verify whether the set of selected behavioural patterns is sound and complete with respect to the definition of task failure. The decomposition is shown to be incomplete and a new behavioural pattern is identified, which appears to have been overlooked in the informal analysis of the problem. This illustrates how formal analysis of operator models can yield fresh insights into how failures may arise in interactive systems.
C1 [Cerone, Antonio] United Nations Univ, Int Inst Software Technol, Macau, Peoples R China.
   [Connelly, Simon; Lindsay, Peter] Univ Queensland, Sch ITEE, ARC Ctr Complex Syst, Brisbane, Qld, Australia.
C3 University of Queensland
RP Cerone, A (corresponding author), United Nations Univ, Int Inst Software Technol, Macau, Peoples R China.
EM antonio@iist.unu.edu; simonc@itee.uq.edu.au;
   Peter.Lindsay@itee.uq.edu.au
RI Lindsay, Peter A/F-8474-2014
CR [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], PHENOTYPE ERRONEOUS
   [Anonymous], 1985, INT SERIES COMP SCI
   BOYD J, 1987, BRIEFING SLIDE UNPUB
   BUTLER RW, 1998, P 17 DIG AV SYST C W
   Butterworth R., 2000, Formal Aspects of Computing, V12, P237, DOI 10.1007/s001650070021
   Cerone A, 2005, SEFM 2005: Third IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P352, DOI 10.1109/SEFM.2005.19
   Clarke EM, 1999, MODEL CHECKING, P1
   Cleaveland R., 2000, CONCURRENCY WORKBENC
   Corker K.M., 2000, COGNITIVE ENG AVIATI, P13
   Corker KM, 2003, HUM FAC ER, P417
   Curzon P, 2004, LECT NOTES COMPUT SC, V2999, P461
   Dix A.J., 1991, Formal Methods for Interactive Systems
   Grant T., 2005, 10 INT COMM CONTR RE
   Johnson C, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P331
   Kallus K., 1999, Technical Report HUM. ET1. ST01. 1000-REP-04
   KIRWAN B, 1992, APPL ERGON, V23, P299, DOI 10.1016/0003-6870(92)90292-4
   LEVESON N, 1997, FINAL REPORT SAFETY
   Leveson N.G., 1995, Safeware: System Safety and Computers
   LINDSAY P, 2002, 3 AUSTR US INT C AUI, V7, P43
   NESS S, 2004, ACCSTR0401 ARC CTR C
   Palanque P, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P323
   RASMUSSEN J, 1983, IEEE T SYST MAN CYB, V13, P257, DOI 10.1109/TSMC.1983.6313160
   Reason J., 1987, New technology and human error, P63
   ROUSE W, 1990, MANPRYNI APPROACH SY, P237
   Rushby J, 2002, RELIAB ENG SYST SAFE, V75, P167, DOI 10.1016/S0951-8320(01)00092-8
   SVENSON O, 1989, RELIAB ENG SYST SAFE, V25, P219, DOI 10.1016/0951-8320(89)90095-1
   Wicks J, 2005, MODSIM 2005: INTERNATIONAL CONGRESS ON MODELLING AND SIMULATION: ADVANCES AND APPLICATIONS FOR MANAGEMENT AND DECISION MAKING, P3023
   [No title captured]
NR 29
TC 3
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2008
VL 7
IS 3
BP 273
EP 286
DI 10.1007/s10270-007-0072-x
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 322NZ
UT WOS:000257383900004
DA 2024-07-18
ER

PT J
AU Alanen, M
   Porres, I
AF Alanen, Marcus
   Porres, Ivan
TI A metamodeling language supporting subset and union properties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE subsets; unions; redefinitions; UML; package merges; extension
   mechanisms; graphs; graph theory; software modeling languages;
   metamodeling; MOF
AB In this article, we describe successive versions of a metamodeling language using a set-theoretic formalization. We focus on language extension mechanisms, particularly on the relatively new subset and union properties of MOF 2.0 and the UML 2.0 Infrastructure. We use Liskov substitutability as the rationale for our formalization. We also show that property redefinitions are not a safe language extension mechanism. Each language version provides new features, and we note how such features cannot be mixed arbitrarily. Instead, constraints over the metamodel and model structures must be established. We expect that this article provides a better understanding of the foundations of MOF 2.0, which is necessary to define new extensions, model transformation languages and tools.
C1 [Alanen, Marcus; Porres, Ivan] Abo Akad Univ, TUCS Turku Ctr Comp Sci, Dept Informat Technol, FIN-20520 Turku, Finland.
C3 Abo Akademi University
RP Alanen, M (corresponding author), Abo Akad Univ, TUCS Turku Ctr Comp Sci, Dept Informat Technol, Joukahaisenkatu 3-5, FIN-20520 Turku, Finland.
EM marcus.alanen@abo.fi; ivan.porres@abo.fi
OI Porres, Ivan/0000-0002-6791-2018
CR AKEHURST D, 2003, SOFTWARE SYSTEMS MOD, V2, P215, DOI DOI 10.1007/S10270-003-0032-Z
   Alanen M., 2005, Nordic Journal of Computing, V12, P321
   Alanen M, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P450
   ALANEN M, 2004, P 2 EUR WORKSH MOD D, P165
   ALANEN M, 2006, 4 NORD WORKSH UN MOD
   Alanen M, 2006, LECT NOTES COMPUT SC, V4199, P469
   ALBANO A, 1991, P 17 C VER LARG DAT
   ALVAREZ J, 2001, WTUML
   AMELUNXEN C, 2005, FUJABA DAYS 2005
   [Anonymous], 050705 OMG
   [Anonymous], ATL TRANSFORMATION B
   [Anonymous], IMPLEMENTING MOF 2 0
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], 2003, J OBJECT TECHNOL
   [Anonymous], P AGT 2002 WORKSH AP
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   *ATLAS TEAM, 2006, ATL MET ZOO
   BAAR T, 2003, OBJET, V9, P95
   BACK RJ, 1996, 65 TURK CTR COMP SCI
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   BARESI L, 2002, LNCS, V2505
   BIERMAN G, 2005, WORKSH FDN OBJ OR LA
   CASTAGNA G, 1995, ACM T PROGR LANG SYS, V17, P431, DOI 10.1145/203095.203096
   CLARK T, 2001, P FASE 2001, P17
   FRANCE R, 2005, SPRINGER INT J SOFTW, V4
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Henderson-Sellers B, 1999, LECT NOTES COMPUT SC, V1723, P550
   JIANG J, 2003, 7 EUR C SOFTW MAINT
   JOUAULT F, 2006, P 8 IFIP INT C FORM
   KALNINS A, 2004, WORKSH MOD TRANSF EX
   KLEPPE A, 2003, DISCUSSION MAILING L
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   LUNDELL B, 2006, LECT NOTES COMPUTER, V4199
   *NETB, NETB MET REP NMR
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   NYTUN JP, 2003, P 2 NORD WORKSH UN M, P1
   *OMG, 2003, XML MET INT XMI SPEC
   *OMG, 2001, 010701 OMG
   *OMG, 2005, 051101 OMG
   *OMG, 2005, XML MET INT XMI SPEC
   *OMG, 2002, XML MET INT XMI SPEC
   *OMG, 2005, 050704 OMG
   *OMG, 2006, 060101 OMG
   *OMG, 2002, 20020403 OMG
   PATRASCOIU O, 2004, P 1 EUR MDA WORKSH M, P83
   Steel J, 2005, LECT NOTES COMPUT SC, V3713, P84, DOI 10.1007/11557432_7
   STEEL J, 2004, P 2 EUR WORKSH MOD D
   SUTTON A, OPEN MODELING FRAMEW
   TRATT L, 2006, P ACM S APPL COMP AP, P1296
   Varró D, 2002, SCI COMPUT PROGRAM, V44, P205, DOI 10.1016/S0167-6423(02)00039-4
   VARRO D, 2003, J SOFTWARE SYSTEMS M, V2, P187
   Winter A, 2002, LECT NOTES COMPUT SC, V2269, P324
NR 54
TC 14
Z9 15
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 103
EP 124
DI 10.1007/s10270-007-0049-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100007
DA 2024-07-18
ER

PT J
AU Markovic, S
   Baar, T
AF Markovic, Slavisa
   Baar, Thomas
TI Refactoring OCL annotated UML class diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE refactoring; QVT; imperative OCL; graph-transformations; syntax
   preserving refactoring rules; source code verification
ID MODEL TRANSFORMATION; RULES
AB Refactoring of UML class diagrams is an emerging research topic and heavily inspired by refactoring of program code written in object-oriented implementation languages. Current class diagram refactoring techniques concentrate on the diagrammatic part but neglect OCL constraints that might become syntactically incorrect by changing the underlying class diagram. This paper formalizes the most important refactoring rules for class diagrams and classifies them with respect to their impact on attached OCL constraints. For refactoring rules that have an impact on OCL constraints, we formalize the necessary changes of the attached constraints. Our refactoring rules are specified in a graph-grammar inspired formalism. They have been implemented as QVT transformation rules. We finally discuss for our refactoring rules the problem of syntax preservation and show, by using the KeY-system, how this can be resolved.
C1 [Markovic, Slavisa; Baar, Thomas] Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP Markovic, S (corresponding author), Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, CH-1015 Lausanne, Switzerland.
EM slavisa.markovic@epfl.ch; thomas.baar@epfl.ch
CR Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   [Anonymous], 060501 OMG
   ASTELS D, 2002, P INT C EXTR PROGR F, P67
   Baar T, 2003, LECT NOTES COMPUT SC, V2890, P358
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P84
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P70
   Beck K., 2000, EXTREME PROGRAMMING
   Beckert B., 2007, LNAI, V4334
   Boger M., 2002, P INT C EXTR PROGR F, P77
   *BORL, 2007, TOG TECHN
   Cabot J, 2005, LECT NOTES COMPUT SC, V3520, P48
   Cabot J, 2006, LECT NOTES COMPUT SC, V4001, P81, DOI 10.1007/11767138_7
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   MARKOVI CS, 2007, DOCUMENTATION UML OC
   Markovic SA, 2005, LECT NOTES COMPUT SC, V3713, P280, DOI 10.1007/11557432_21
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   OCINNEIDE M, 2001, THESIS U DUBLIN
   *OMG, 2003, 031014 OMG
   *OMG, 2004, 041011 OMG
   *OMG, 2003, 030301 OMG
   *OMG, 2005, 051101 OMG
   *OMG, 2003, 030915 OMG
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   RUMPE B, 2005, AGILE MODELLIERUNG U
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   SUNYE G, 2001, LNCS, V2068, P433
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
NR 32
TC 32
Z9 33
U1 3
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 25
EP 47
DI 10.1007/s10270-007-0056-x
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100003
DA 2024-07-18
ER

PT J
AU Crane, ML
   Dingel, J
AF Crane, Michelle L.
   Dingel, Juergen
TI UML vs. classical vs. rhapsody statecharts: not all models are created
   equal
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
ID SEMANTICS; SYSTEMS; DESIGN
AB State machines, represented by statecharts or state machine diagrams, are an important formalism for behavioural modelling. According to the research literature, the most popular statechart formalisms appear to be Classical, UML, and that implemented by Rhapsody. These three formalisms seem to be very similar; however, there are several key syntactic and semantic differences. These differences are enough that a model written in one formalism could be ill-formed in another formalism. Worse, a model from one formalism might actually be well-formed in another, but be interpreted differently due to the semantic differences. This paper summarizes the results of an informal comparative study of these three formalisms with the help of several illustrative examples. We present a classification of the differences according to the nature of potential problems caused by each difference. In addition, for each difference we discuss how translation between formalisms can be achieved, if at all.
C1 [Crane, Michelle L.; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Crane, ML (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM crane@cs.queensu.ca
CR Alur R, 2005, ACM T PROGR LANG SYS, V27, P786, DOI 10.1145/1075382.1075387
   [Anonymous], 1994, LNCS
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Crane Michelle L., 2005, 2005501 QUEENS U SCH
   Damm W, 1998, LECT NOTES COMPUT SC, V1536, P186, DOI 10.1007/3-540-49213-5_8
   DOUGLASS BP, 2004, OBJECT TECHNOLOGY SE
   Gogolla M., 1998, Proceedings ICSE'98 Workshop on Precise Semantics of Modeling Techniques (PSMT'98), P55
   Harel D., 1987, Proceedings of the Symposium on Logic in Computer Science (Cat. No.87CH2464-6), P54
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Harel D, 1997, LECT NOTES COMPUT SC, V1254, P226
   Harel D, 2004, LECT NOTES COMPUT SC, V3147, P325
   Harel D., 1998, MODELING REACTIVE SY
   Howe D., Free Online Dictionary of Computing
   HUIZING C, 1991, INFORM PROCESS LETT, V37, P205, DOI 10.1016/0020-0190(91)90190-S
   HUIZING C, 1988, LECT NOTES COMPUT SC, V299, P271
   *I LOG, I LOG RHAPSODY 6 2 U
   *I LOG, I LOG RHAPSODY
   *I LOG, I LOG STATEMENT
   LUTTGEN G, 2000, P 8 ACM SIGSOFT INT, P120
   Maggiolo-Schettini A, 2003, THEOR COMPUT SCI, V290, P465, DOI 10.1016/S0304-3975(01)00381-4
   MAGGIOLOSCHETTI.A, 1996, LECT NOTES COMPUTER, P107
   MIKK E, 1997, LNCS, V1345, P181
   MIKK E, 2000, THESIS CHRISTIANALBR
   *OMG, 2004, PTC030915 OMG UML
   *OMG, 2003, FORMAL030301 OMG UML
   *OMG, 2005, FORMAL050704 OMG
   PNUELI A, 1991, LECT NOTES COMPUT SC, V526, P244
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SELIC B, 2005, COMMUNICATION
   Uselton AC, 1994, LECT NOTES COMPUT SC, V836, P2
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
   UML 2 SEMANTICS PROJ
NR 35
TC 26
Z9 29
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 415
EP 435
DI 10.1007/s10270-006-0042-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000006
DA 2024-07-18
ER

PT J
AU Zia, M
   Mustafiz, S
   Vangheluwe, H
   Kienzle, J
AF Zia, Miriam
   Mustafiz, Sadaf
   Vangheluwe, Hans
   Kienzle, Joerg
TI A modelling and simulation based process for dependable systems design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
AB Complex real-time system design needs to address dependability requirements, such as safety, reliability, and security. We introduce a modelling and simulation based approach which allows for the analysis and prediction of dependability constraints. Dependability can be improved by making use of fault tolerance techniques. The de-facto example, in the real-time system literature, of a pump control system in a mining environment is used to demonstrate our model-based approach. In particular, the system is modelled using the Discrete EVent system Specification (DEVS) formalism, and then extended to incorporate fault tolerance mechanisms. The modularity of the DEVS formalism facilitates this extension. The simulation demonstrates that the employed fault tolerance techniques are effective. That is, the system performs satisfactorily despite the presence of faults. This approach also makes it possible to make an informed choice between different fault tolerance techniques. Performance metrics are used to measure the reliability and safety of the system, and to evaluate the dependability achieved by the design. In our model-based development process, modelling, simulation and eventual deployment of the system are seamlessly integrated.
C1 [Zia, Miriam; Mustafiz, Sadaf; Vangheluwe, Hans; Kienzle, Joerg] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University
RP Vangheluwe, H (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM miriam.zia@cs.mcgill.ca; sadaf@cs.mcgill.ca; hv@cs.mcgill.ca;
   joerg@cs.mcgill.ca
RI Vangheluwe, Hans/H-9884-2016
OI Vangheluwe, Hans/0000-0003-2079-6643
CR [Anonymous], 1984, Multifacetted Modelling and Discrete Event Simulation
   BAVUSO S, 1987, ANAL TYPICAL FAULT T
   BLUM AM, 1994, MODELING ANAL SYSTEM, P137
   BOLDUC JS, 2001, MSDLTR200101
   Borland S., 2003, Transforming statechart models to DEVS
   BOUE J, 1996, VERIFICATION FAULT T
   BOUISSOU M, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P680, DOI 10.1109/FTCS.1993.627374
   BURNS A, 1991, COMPUT J, V34, P173, DOI 10.1093/comjnl/34.2.173
   BURNS A, 1995, HRT HOOD STRUCTURED
   BURNS A, 1990, ARCHITECTUAL FRAMEWO
   Chen L., 1978, FTCS-8. The Eighth Annual International Conference on Fault-Tolerant Computing, P3
   CHEON S, 2004, ADV SIM TECHN C DES
   Chi SD, 2001, DISCRETE EVENT MODELING AND SIMULATION TECHNOLOGIES, P215
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   ELMENDORF WR, 1972, P 2 IEEE INT S FAULT, P79
   FIDGE CJ, 1992, INFORM SOFTWARE TECH, V34, P603, DOI 10.1016/0950-5849(92)90137-E
   FILIPPI J, 2002, SCS AIS 2002 C SIM I, V1
   Geffroy Jean-Claude., 2002, DESIGN DEPENDABLE CO
   Goswami KK, 1997, IEEE T COMPUT, V46, P60, DOI 10.1109/12.559803
   Gray J, 2004, J VISUAL LANG COMPUT, V15, P207, DOI 10.1016/j.jvlc.2004.03.001
   HUANG D, 2004, P 8 IEEE INT S DSRT
   KABOUS L, 1999, MODELING HARD REAL T, P339
   LAPRIE JC, 1985, 15 FTCS
   Lee P.A., 1990, DEPENDABLE COMPUTING, V2nd
   Mustafiz S., 2004, Scientific Engineering of Distributed Java Applications. 4th International Workshop, FIDJI 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3409), P78
   PFEIFER H, 2004, 5 S FORM METH AUT SA
   PROVOST M, 2002, INTRO METAMODELLING
   PROVOST M, 2002, CREATE GRAPH GRAMMAR
   Sridharan M, 1998, LECT NOTES COMPUT SC, V1469, P348
   VANGHELUWE H, 2004, WINT SIM C IEEE COMP
   von Neumann J., 1956, Annals of Mathematics Studies, V34, P43
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zia M, 2005, LECT NOTES COMPUT SC, V3713, P217, DOI 10.1007/11557432_16
NR 33
TC 2
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 437
EP 451
DI 10.1007/s10270-007-0050-3
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000007
DA 2024-07-18
ER

PT J
AU Bragilovski, M
   Stern, R
   Sturm, A
AF Bragilovski, Maxim
   Stern, Roni
   Sturm, Arnon
TI How do I find reusable models?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based development; Search; Greedy algorithm; Similarity; Model
   repositories
AB Models play a major role in model-based development and serve as the main artifacts that stakeholders aim to achieve. As it is difficult to develop good-quality models, repositories of models start emerging for reuse purposes. Yet, these repositories face several challenges, such as model representation, scalability, heterogeneity, and how to search for models. In this paper, we aim to address the challenge of querying model repositories by proposing a generic search framework that looks for models that match the intention of the user. The framework is based on a greedy search approach using a similarity function that considers type similarity, structure similarity, and label similarity. We evaluate the framework's efficiency on different model types: UML class diagrams, Human Know-How, and ME maps. We further compare it with existing alternatives. The evaluation indicates that the framework achieved high performance within a bounded time, and the framework can be adapted to different modeling languages for searching related, reusable models.
C1 [Bragilovski, Maxim; Stern, Roni; Sturm, Arnon] Ben Gurion Univ Negev, Software & Informat Syst Engn, Beer Sheva, Israel.
C3 Ben Gurion University
RP Sturm, A (corresponding author), Ben Gurion Univ Negev, Software & Informat Syst Engn, Beer Sheva, Israel.
EM maximbr@post.bgu.ac.il; sternron@bgu.ac.il; sturm@bgu.ac.il
RI Stern, Roni/KHU-0647-2024; STURM, ARNON/F-1510-2012
OI Stern, Roni/0000-0003-0043-8179; STURM, ARNON/0000-0002-4021-7752
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Al-Khiaty Mojeeb Al-Rhman, 2016, Lecture Notes on Software Engineering, V4, P41, DOI 10.7763/LNSE.2016.V4.221
   Angles R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3104031
   Antunes G., 2015, GEELLSCHAFT INFORM, V248
   ARASU A., 2001, ACM Trans. Internet Technol, V1, P2, DOI DOI 10.1145/383034.383035
   Bargilovski M., 2021, SEARCHING MODELS
   Barmpis K, 2014, LECT NOTES COMPUT SC, V8569, P35
   Basciani F., 2015, CLOUDMDE MODELS, P37
   Bislimovska B, 2011, LECT NOTES COMPUT SC, V6757, P90, DOI 10.1007/978-3-642-22233-7_7
   Bragilovski M., LECT NOTES COMPUT SC, V13011, P242
   Bragilovski M., ENTERPRISE BUSINESS
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dumas M., 2009, Bulletin of the Technical Committee on Data Engineering, V32, P23, DOI DOI 10.1016/J.COMPIND.2011.12.003
   Ehrig M., 2007, Proceedings of the Fourth Asia-Pacific Conference on Conceptual Modelling, Darlinghurst: Australian Computer Society, P71
   Ferrucci D, 2010, AI MAG, V31, P59, DOI 10.1609/aimag.v31i3.2303
   Francis N, 2018, INT CONF MANAGE DATA, P1433, DOI 10.1145/3183713.3190657
   Han S, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P227, DOI 10.1145/3132847.3132957
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hu S, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2098
   Klau GW, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S1-S59
   Kling Wolfgang, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P180, DOI 10.1007/978-3-642-28830-2_10
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   Messmer B., 1996, THESIS U BERN, P58
   Nikiforova O., 2015, P 10 INT C SOFTW ENG, P147
   Pandey D., 2010, 2010 INT C ADV REC T, P287, DOI DOI 10.1109/ARTCOM.2010.24
   PAREDAENS J, 1995, IEEE T KNOWL DATA EN, V7, P436, DOI 10.1109/69.390249
   Pereira DG, 2015, COMMUN STAT-SIMUL C, V44, P2636, DOI 10.1080/03610918.2014.931971
   Pérez J, 2006, LECT NOTES COMPUT SC, V4273, P30
   Prudhommeaux E., 2017, W3C RECOMMENDATION
   Reinhartz-Berger I, 2010, DATA KNOWL ENG, V69, P491, DOI 10.1016/j.datak.2010.01.002
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Robles K, 2012, INFORM SOFTWARE TECH, V54, P72, DOI 10.1016/j.infsof.2011.07.003
   Bolívar MPR, 2015, PUB ADMIN INF TECH, V8, P1, DOI 10.1007/978-3-319-03167-5_1
   Salami HO, 2014, INT JOINT CONF COMP, P324, DOI 10.1109/JCSSE.2014.6841889
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sturm A, 2017, J KNOWL MANAG, V21, P454, DOI 10.1108/JKM-04-2016-0173
   Wang YX, 2020, PROC INT CONF DATA, P445, DOI 10.1109/ICDE48307.2020.00045
   Wexler M.N., 2001, J KNOWL MANAG, V5, P249, DOI [DOI 10.1108/EUM0000000005868, 10.1108/EUM0000000005868]
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Yuan Z., 2019, REQUIR ENG, P1
   ZIMMERMAN DW, 1993, J EXP EDUC, V62, P75, DOI 10.1080/00220973.1993.9943832
   Zou L, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P313, DOI 10.1145/2588555.2610525
NR 49
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 85
EP 102
DI 10.1007/s10270-023-01103-7
EA APR 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:000963882000001
DA 2024-07-18
ER

PT J
AU Zschaler, S
   Bousse, E
   Deantoni, J
   Combemale, B
AF Zschaler, Steffen
   Bousse, Erwan
   Deantoni, Julien
   Combemale, Benoit
TI A generic framework for representing and analyzing model concurrency
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language engineering; Model execution; Model concurrency; Simulation;
   Concurrent analyses/debugging
ID LANGUAGE; SPECIFICATION
AB Recent results in language engineering simplify the development of tool-supported executable domain-specific modeling languages (xDSMLs), including editing (e.g., completion and error checking) and execution analysis tools (e.g., debugging, monitoring and live modeling). However, such frameworks are currently limited to sequential execution traces and cannot handle execution traces resulting from an execution semantics with a concurrency model supporting parallelism or interleaving. This prevents the development of concurrency analysis tools, like debuggers supporting the exploration of model executions resulting from different interleavings. In this paper, we present a generic framework to integrate execution semantics with either implicit or explicit concurrency models, to explore the possible execution traces of conforming models, and to define strategies for helping in the exploration of the possible executions. This framework is complemented with a protocol to interact with the resulting executions and hence to build advanced concurrency analysis tools. The approach has been implemented within the GEMOC Studio. We demonstrate how to integrate two representative concurrent meta-programming approaches (MoCCML/Java and Henshin), which use different paradigms and underlying foundations to define an xDSML's concurrency model. We also demonstrate the ability to define an advanced concurrent omniscient debugger with the proposed protocol. The paper, thus, contributes key abstractions and an associated protocol for integrating concurrent meta-programming approaches in a language workbench, and dynamically exploring the possible executions of a model in the modeling workbench.
C1 [Zschaler, Steffen] Kings Coll London, Dept Informat, Bush House,30 Aldwych, London, England.
   [Bousse, Erwan] Univ Nantes, 2 Chemin Houssiniere, F-92208 Nantes, France.
   [Deantoni, Julien] Univ Cote Azur, Sophia Antipolis, France.
   [Combemale, Benoit] Univ Rennes, Rennes, France.
C3 University of London; King's College London; Nantes Universite;
   Universite Cote d'Azur; Universite de Rennes
RP Zschaler, S (corresponding author), Kings Coll London, Dept Informat, Bush House,30 Aldwych, London, England.
EM szschaler@acm.org; erwan.bousse@ls2n.fr;
   julien.deantoni@univ-cotedazur.fr; benoit.combemale@irisa.fr
OI Combemale, Benoit/0000-0002-7104-7848; Bousse,
   Erwan/0000-0003-0000-9219; Zschaler, Steffen/0000-0001-9062-6637
CR André C, 2007, LECT NOTES COMPUT SC, V4735, P559
   André C, 2010, SYNTHESIS OF EMBEDDED SOFTWARE: FRAMEWORKS AND METHODOLOGIES FOR CORRECTNESS BY CONSTRUCTION, P201, DOI 10.1007/978-1-4419-6400-7_7
   [Anonymous], 2009, Res. Rep. RR-6925
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baldan P, 2007, INFORM COMPUT, V205, P733, DOI 10.1016/j.ic.2006.11.004
   BORRAS P, 1988, 3 ACM SIGSOFT S SOFT, P14
   Bousse E., 2015, P 2015 ACM SIGPLAN I, P137
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Combemale B, 2013, LECT NOTES COMPUT SC, V8225, P365, DOI 10.1007/978-3-319-02654-1_20
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cordy J. R., 1988, Proceedings 1988 International Conference on Computer Languages (IEEE Cat. No.88CH2647-6), P280, DOI 10.1109/ICCL.1988.13075
   Corley J.A., 2016, THESIS U ALABAMA LIB
   Corradini A., 2000, P WORKSH GRAPH TRANS
   Deantoni J., 2014, RR8628 INRIA
   Deantoni J., 2014, Research Report RR-8584
   Deantoni J, 2015, DES AUT TEST EUROPE, P313
   Dotan Dolev., 2007, OOPSLA 07 COMPANION, P838, DOI [10.1145/1297846.1297915, DOI 10.1145/1297846.1297915]
   Elmas T, 2013, ACM SIGPLAN NOTICES, V48, P153, DOI 10.1145/2499370.2462162
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Fowler M., 2010, Domain-specific languages
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jussien Narendra., 2008, Open-Source Software for Integer and Contraint Programming, OSSICP'08, P1
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Krahn H, 2008, LECT NOTES BUS INF P, V11, P297
   Kurtev I., 2002, 4 INT S DISTR OBJ AP
   Lambers L, 2019, LECT NOTES COMPUT SC, V11629, P75, DOI 10.1007/978-3-030-23611-3_5
   Latombe F., 2015, SLE 2015, P125, DOI DOI 10.1145/2814251.2814261
   Le Guernic P, 2003, J CIRCUIT SYST COMP, V12, P261, DOI 10.1142/S0218126603000763
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   Mannadiar R, 2011, LECT NOTES COMPUT SC, V6563, P276, DOI 10.1007/978-3-642-19440-5_17
   Marr S, 2017, ACM SIGPLAN NOTICES, V52, P3, DOI 10.1145/3170472.3133842
   Rivera JE, 2010, LECT NOTES COMPUT SC, V6381, P174, DOI 10.1007/978-3-642-16310-4_12
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2009, ECLIPSE SERIES
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Sztipanovits J, 1997, COMPUTER, V30, P110, DOI 10.1109/2.585163
   Tolvanen J.-P., 2003, COMPANION 18 ANN ACM, P92, DOI DOI 10.1145/949344.949365
   Van Mierlo S., 2018, THESIS U ANTWERPEN
   VANLIEDEKERKE MH, 1995, INFORM SOFTWARE TECH, V37, P103, DOI 10.1016/0950-5849(95)93487-Y
   Voelter M., 2010, SLE
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   WARD MP, 1994, SOFTWARE-CONC TOOL, V15, P147
   Winskel G., 1987, LECT NOTES COMPUT SC, V255, P325
   Zschaler S., 2018, P 6 INT WORKSHOP GLO
NR 52
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1319
EP 1340
DI 10.1007/s10270-022-01073-2
EA JAN 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000911242700001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zalila, F
   Korte, F
   Erbel, J
   Challita, S
   Grabowski, J
   Merle, P
AF Zalila, Faiez
   Korte, Fabian
   Erbel, Johannes
   Challita, Stephanie
   Grabowski, Jens
   Merle, Philippe
TI MoDMaCAO: a model-driven framework for the design, validation and
   configuration management of cloud applications based on OCCI
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cloud computing; Open cloud computing interface; OCCI; Models@run; time
AB To tackle the cloud-provider lock-in, the open grid forum is developing the open cloud computing interface (OCCI), a standardized interface for managing any kind of cloud resources. Besides the OCCI Core model, which defines the basic modeling elements for cloud resources, further standardized extensions exist that reflect the requirements of different cloud service levels, such as infrastructure and platform elements. However, so far the OCCI platform extension is very coarse-grained and lacks supporting use cases and implementations. Especially, it does not define how the components of the application itself can be managed. In this paper, we discuss the features of MoDMaCAO, a model-driven framework that extends the OCCI platform extension. The users of the framework are able to design and validate cloud application topologies and subsequently deploy them on OCCI compliant clouds by using configuration management tools.
C1 [Zalila, Faiez] CETIC, Model Based Engn & Distributed Syst MBEDiS Dept, Charleroi, Belgium.
   [Korte, Fabian; Erbel, Johannes; Grabowski, Jens] Univ Goettingen, Gottingen, Germany.
   [Challita, Stephanie] Univ Rennes 1, IRISA Inria, Rennes, France.
   [Merle, Philippe] Univ Lille, Inria Lille Nord Europe, Lille, France.
C3 University of Gottingen; Universite Paris Saclay; Universite de Rennes;
   Universite de Lille
RP Zalila, F (corresponding author), CETIC, Model Based Engn & Distributed Syst MBEDiS Dept, Charleroi, Belgium.
EM faiez.zalila@cetic.be; fabian.korte@cs.uni-goettingen.de;
   johannes.erbel@cs.uni-goettingen.de; stephanie.challita@irisa.fr;
   jens.grabowski@cs.uni-goettingen.de; philippe.merle@inria.fr
FU Simulationswissenschaftliches Zentrum Clausthal-Gottingen (SWZ); French
   PIA OCCIware project; Hauts-de-France Regional Council
FX We thank the Simulationswissenschaftliches Zentrum Clausthal-Gottingen
   (SWZ), the French PIA OCCIware project (www.occiware.org), and the
   Hauts-de-France Regional Council for supporting this work.
CR Achilleos AP, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0138-7
   [Anonymous], 2016, OPEN CLOUD COMPUTING
   [Anonymous], 2016, OPEN CLOUD COMPUTING
   Baur D, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P173, DOI 10.1109/CCGRID.2018.00032
   Bergmayr A., 2015, P 3 INT WORKSH MOD D, P1
   Binz T, 2013, LECT NOTES COMPUT SC, V8274, P692, DOI 10.1007/978-3-642-45005-1_62
   Challita S, 2017, IEEE INT CONF CLOUD, P710, DOI 10.1109/CLOUD.2017.98
   Chauvel F, 2014, INT CONF UTIL CLOUD, P307, DOI 10.1109/UCC.2014.40
   Chebaro O, 2009, SIXTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF AUTONOMIC AND AUTONOMOUS SYSTEMS: EASE 2009, P23, DOI 10.1109/EASe.2009.16
   Erbel J., 2019, P 14 S SOFTWARE ENG
   Erbel J, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P517, DOI 10.5220/0006774405170525
   Erbel J, 2018, LECT NOTES COMPUT SC, V11150, P20, DOI 10.1007/978-3-030-01042-3_2
   Ferry N, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3125621
   Flissi A, 2008, IEEE ACM INT SYMP, P177, DOI 10.1109/CCGRID.2008.59
   Glaser F, 2017, CLOSER: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P644, DOI 10.5220/0006372706720678
   Korte F, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P100, DOI 10.5220/0006693001000111
   Medhioub H., 2013, 22 INT C COMP COMM N, P1
   Merle P, 2017, 2017 IEEE 2ND INTERNATIONAL CONGRESS ON INTERNET OF THINGS (IEEE ICIOT), P50, DOI 10.1109/IEEE.ICIOT.2017.15
   Merle P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P852, DOI 10.1109/CLOUD.2015.117
   Paraiso F, 2016, IEEE INT CONF CLOUD, P718, DOI [10.1109/CLOUD.2016.98, 10.1109/CLOUD.2016.0100]
   Parpaillon J., 2015, PROJECTS SHOWCASE ST, V1400, P18
   Quinton C, 2016, SOFTWARE PRACT EXPER, V46, P55, DOI 10.1002/spe.2311
   Sellami M, 2013, IEEE INT CONF CLOUD, P693, DOI 10.1109/CLOUD.2013.105
   Yangui S, 2016, COMPUT J, V59, P308, DOI 10.1093/comjnl/bxu132
   Yangui S, 2013, INT CON ADV INFO NET, P522, DOI 10.1109/AINA.2013.98
   Zalila Faiez, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P389, DOI 10.1007/978-3-319-69462-7_26
   Zalila F, 2019, FUTURE GENER COMP SY, V99, P260, DOI 10.1016/j.future.2019.04.015
NR 27
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 871
EP 889
DI 10.1007/s10270-022-01024-x
EA SEP 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000858644700002
DA 2024-07-18
ER

PT J
AU Román, JFR
   Palacio, AL
   Simón, AG
   Beyrouti, RC
   Pastor, O
AF Reyes Roman, Jose Fabian
   Leon Palacio, Ana
   Garcia Simon, Alberto
   Cabrera Beyrouti, Ruben
   Pastor, Oscar
TI Integration of clinical and genomic data to enhance precision medicine:
   a case of study applied to the retina-macula
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Information systems; Precision medicine;
   Age-related macular degeneration; Genomics
ID DEGENERATION GENETICS; RANIBIZUMAB; MANAGEMENT; ONTOLOGY
AB Age-related macular degeneration is a complex, multifactorial, and neurodegenerative disease that is the third cause of blindness after cataracts and glaucoma. To date, there are no effective remedies available for treating the disease. Therefore, the main goal of the scientific community is to uncover the underlying role that both genetics and environmental factors play in the development of the disease. Nevertheless, the complexity of the domain, the heterogeneity of the information, and the massive amounts of existing data hinder the daily work of clinical experts to provide an accurate diagnosis and treatment. In this work, we present how clinicians can benefit from the development of ontologically well-grounded information systems to support the management of both clinical and genomic data. First, we summarize the results obtained in a previous work that cover the clinical perspective using an information system called G-MAC, that has been specially developed for the management of clinical data. Then, we present the results of an exhaustive study of the genetic factors of age-related macular degeneration by using an information system that was developed with the aim of enhancing the management of complex genomic data. Finally, we state how the connection of both perspectives through the use of conceptual models can benefit clinicians and patients through a more accurate Medicine of Precision.
C1 [Reyes Roman, Jose Fabian; Leon Palacio, Ana; Garcia Simon, Alberto; Pastor, Oscar] Univ Politecn Valencia, VRAIN Res Inst, Alicante, Spain.
   [Cabrera Beyrouti, Ruben] Hosp Vega Baja Orihuela, Ophthalmol Serv, Orihuela, Spain.
C3 Universitat Politecnica de Valencia
RP Román, JFR (corresponding author), Univ Politecn Valencia, VRAIN Res Inst, Alicante, Spain.
EM jreyes@vrain.upv.es; aleon@vrain.upv.es; algarsi3@vrain.upv.es;
   rubeyrouthy@hotmail.com; opastor@dsic.upv.es
RI ; Pastor Lopez, Oscar/S-4216-2016
OI Garcia Simon, Alberto/0000-0001-5910-4363; Pastor Lopez,
   Oscar/0000-0002-1320-8471
FU Valencian Innovation Agency and Innovation through the OGMIOS project
   [INNEST/2021/57]; Preparatory Action-UPVFISABIO; Generalitat Valenciana
   through the CoMoDiD project [CIPROM/2021/023]; Spanish State Research
   Agency [PDC2021-121243-I00, PID2021-123824OB-I00]; ERDF; European Union
   Next Generation EU/PRTR; MICIN/AEI
FX The authors would like to thank the members of the PROS Research Center
   Genome group for the fruitful discussions regarding the application of
   CM in the medical field. This work was supported by the Valencian
   Innovation Agency and Innovation through the OGMIOS project
   (INNEST/2021/57), the Preparatory Action-UPVFISABIO (A36-G-MAC, 2019),
   the Generalitat Valenciana through the CoMoDiD project
   (CIPROM/2021/023), and the Spanish State Research Agency through the
   DELFOS (PDC2021-121243-I00) and SREC (PID2021-123824OB-I00) projects,
   MICIN/AEI/10.13039/501 100011033 and co-financed with ERDF and the
   European Union Next Generation EU/PRTR.
CR Aguilera David, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P626, DOI 10.1007/978-3-642-38709-8_40
   García SA, 2019, LECT NOTES BUS INF P, V350, P99, DOI 10.1007/978-3-030-21297-1_9
   [Anonymous], 2015, Interaction design: Beyond human-computer interaction
   Arevshatyan, 2019, INTEGRATION ANAL CLI
   Ashburner M, 2000, NAT GENET, V25, P25, DOI 10.1038/75556
   Baird PN, 2009, CLIN EXP OPHTHALMOL, V37, P814, DOI 10.1111/j.1442-9071.2009.02136.x
   Beatty S, 2000, SURV OPHTHALMOL, V45, P115, DOI 10.1016/S0039-6257(00)00140-5
   Bonnans C, 2014, NAT REV MOL CELL BIO, V15, P786, DOI 10.1038/nrm3904
   Bornberg-Bauer Erich, 2002, Brief Bioinform, V3, P166, DOI 10.1093/bib/3.2.166
   Boyer DS, 2007, OPHTHALMOLOGY, V114, P246, DOI 10.1016/j.ophtha.2006.10.045
   Brown DM, 2009, OPHTHALMOLOGY, V116, P57, DOI 10.1016/j.ophtha.2008.10.018
   Burriel Coll V., 2017, THESIS U POLITECNICA, DOI [10.4995/Thesis/10251/86158, DOI 10.4995/THESIS/10251/86158]
   de Jong EK, 2020, GENETICS AND GENOMICS OF EYE DISEASE: ADVANCING TO PRECISION MEDICINE, P155, DOI 10.1016/B978-0-12-816222-4.00010-1
   Delcambre LML, 2018, LECT NOTES COMPUT SC, V11157, P27, DOI 10.1007/978-3-030-00847-5_4
   Eilbeck K, 2005, GENOME BIOL, V6, DOI 10.1186/gb-2005-6-5-r44
   Folkman J, 2006, ANNU REV MED, V57, P1, DOI 10.1146/annurev.med.57.121304.131306
   Fritsche LG, 2014, ANNU REV GENOM HUM G, V15, P151, DOI 10.1146/annurev-genom-090413-025610
   García SA, 2021, IEEE ACCESS, V9, P154071, DOI 10.1109/ACCESS.2021.3128757
   García SA, 2020, IEEE ACCESS, V8, P197111, DOI 10.1109/ACCESS.2020.3034793
   Simón AG, 2021, LECT NOTES COMPUT SC, V13012, P104, DOI 10.1007/978-3-030-88358-4_9
   Instituto de Microcirugia Ocular, 2018, DMAE SINT TRATAM IMO
   Katta S, 2009, J GENET, V88, P425, DOI 10.1007/s12041-009-0064-4
   León A, 2021, BIG DATA RES, V26, DOI 10.1016/j.bdr.2021.100253
   Leon Palacio A., 2018, Complex Systems Informatics and Modeling Quarterly, V17, P1, DOI DOI 10.7250/CSIMQ.2018-17.01
   Palacio AL, 2018, LECT NOTES COMPUT SC, V11157, P597, DOI 10.1007/978-3-030-00847-5_44
   Loewenstein A, 2007, RETINA-J RET VIT DIS, V27, P873, DOI 10.1097/IAE.0b013e318050d2ec
   Lorés-Motta L, 2018, MOL DIAGN THER, V22, P315, DOI 10.1007/s40291-018-0332-1
   Mehta S, 2015, PRIMARY CARE, V42, P377, DOI 10.1016/j.pop.2015.05.009
   National Eye Institute, 2021, Age-Related Macular Degeneration (AMD)
   Nurk S, 2022, SCIENCE, V376, P44, DOI 10.1126/science.abj6987
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Organization of American States-Inter-American Committee on Culture (OAS-CIC), 2011, PROGR MARC GEST SOST
   Pardo I.C., 2008, ARCH MED CAMAGUEY, V12, P1
   Pastor O, 2021, BRIEF BIOINFORM, V22, P45, DOI 10.1093/bib/bbaa100
   Paton NW, 2000, BIOINFORMATICS, V16, P548, DOI 10.1093/bioinformatics/16.6.548
   Plazzotta Fernando, 2015, Rev. perú. med. exp. salud publica, V32, P343
   Ram S, 2004, LECT NOTES COMPUT SC, V3288, P696
   Resnikoff S, 2004, B WORLD HEALTH ORGAN, V82, P844
   Reyes Roman Jose Fabian, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P366, DOI 10.1007/978-3-030-79186-5_24
   Reyes Roman J. F., 2018, THESIS U POLITECNICA, DOI [10.4995/Thesis/10251/99565, DOI 10.4995/THESIS/10251/99565]
   Román JFR, 2016, LECT NOTES COMPUT SC, V9974, P404, DOI 10.1007/978-3-319-46397-1_31
   Ruiz-Moreno J.M., 2009, Arch Soc Esp Oftalmol, V84, P333
   Seddon JM, 2016, BRIT J OPHTHALMOL, V100, P1731, DOI 10.1136/bjophthalmol-2016-308624
   Seddon JM, 2009, INVEST OPHTH VIS SCI, V50, P2044, DOI 10.1167/iovs.08-3064
   Senra H, 2019, AM J GERIAT PSYCHIAT, V27, P755, DOI 10.1016/j.jagp.2019.03.001
   Tsilimbaris MK, 2016, J OPHTHALMOL, V2016, DOI 10.1155/2016/4367631
   Vavvas DG, 2018, P NATL ACAD SCI USA, V115, pE696, DOI 10.1073/pnas.1718059115
   Velez-Montoya R, 2014, RETINA-J RET VIT DIS, V34, P423, DOI 10.1097/IAE.0000000000000036
   Vihinen M, 2014, GENOME RES, V24, P356, DOI 10.1101/gr.157495.113
   Wieringa Roel J., 2014, Design Science Methodology: for Information Systems and Software Engineering, P1, DOI DOI 10.1007/978-3-662-43839-8
NR 50
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 159
EP 174
DI 10.1007/s10270-022-01039-4
EA SEP 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000854702000001
OA Green Published
DA 2024-07-18
ER

PT J
AU Delgado, A
   Calegari, D
   García, F
   Weber, B
AF Delgado, Andrea
   Calegari, Daniel
   Garcia, Felix
   Weber, Barbara
TI Model-driven management of BPMN-based business process families
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process families; Variability; BPMN 2.0; Model-Driven
   Engineering; VIVACE
ID VARIABILITY; VALIDATION; EXTENSION; FRAMEWORK; VARIANTS
AB Business processes can have variants depending on specific business requirements, which lead to the definition of a so-called business process family. Since conventional business process modeling languages, e.g., the Business Process Model and Notation (BPMN), do not explicitly support variants' specification, several proposals have emerged to deal with it. However, they mainly focus on languages' definition, while less emphasis is made on providing complete variability management. This article presents a Model-Driven Engineering approach for managing BPMN-based business process families composed of a metamodel for conceptualizing process families, a high-level process for managing them (involving model transformations for the configuration of variants), and tool support for the complete approach. We validated the proposal using a real-world example from a university and an empirical study with real users. Users rated the support tool's principal functional suitability and usability features as very good. Many improvement opportunities were detected, e.g., version control, collaborative work, and error reporting. We also provide a literature review and thorough evaluation of BPMN-based business process families' proposals using the VIVACE framework.
C1 [Delgado, Andrea; Calegari, Daniel] Univ Republica, Montevideo, Uruguay.
   [Garcia, Felix] Univ Castilla La Mancha, Ciudad Real, Spain.
   [Weber, Barbara] Univ St Gallen, St Gallen, Switzerland.
C3 Universidad de la Republica, Uruguay; Universidad de Castilla-La Mancha;
   University of St Gallen
RP García, F (corresponding author), Univ Castilla La Mancha, Ciudad Real, Spain.
EM adelgado@fing.edu.uy; dcalegar@fing.edu.uy; felix.garcia@uclm.es;
   barbara.weber@unisg.ch
RI Delgado, Andrea/J-5801-2018
OI Delgado, Andrea/0000-0003-4749-9366; Calegari Garcia,
   Daniel/0000-0001-9506-7619
FU Comision Sectorial de Investigacion Cientifica (CSIC), Universidad de la
   Republica (UdelaR), Uruguay; BIZDEVOPS-GLOBAL project (Ministerio de
   Ciencia, Innovacion y Universidades, y Fondo Europeo de Desarrollo
   Regional FEDER) [RTI2018-098309-B-C31]; G3SOFT project (Consejeria de
   Educacion, Cultura y Deportes de la Junta de Comunidades de Castilla La
   Mancha, y Fondo Europeo de Desarrollo Regional FEDER)
   [SBPLY/17/180501/000150]
FX This work was partially funded by the Comision Sectorial de
   Investigacion Cientifica (CSIC), Universidad de la Republica (UdelaR),
   Uruguay. We want to thank the students and collaborators who also worked
   on this project: Emiliano Alonzo, Virginia Bacigalupe, Ignacio
   Betancurt, Alejandro Brusco, Nicolas Dinetti, Darwin Fernandez, Santiago
   Gongora, Gonzalo Lopez, Leonel Pena, Martin Prino, Fabiana Roldan,
   Marcela Viera, and Hernan Winter. Also by BIZDEVOPS-GLOBAL project
   (Ministerio de Ciencia, Innovacion y Universidades, y Fondo Europeo de
   Desarrollo Regional FEDER, RTI2018-098309-B-C31); and G3SOFT project
   (Consejeria de Educacion, Cultura y Deportes de la Junta de Comunidades
   de Castilla La Mancha, y Fondo Europeo de Desarrollo Regional FEDER,
   SBPLY/17/180501/000150).
CR Altalhi AH, 2017, WIRES DATA MIN KNOWL, V7, DOI 10.1002/widm.1204
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   [Anonymous], 2006, the Proceedings of the First International Conference on Design Science Research in Information Systems and Technology
   Assy Nour, 2014, International Journal of Business Process Integration and Management, V7, P2, DOI 10.1504/IJBPIM.2014.060602
   Ayora C., 2012, P VARIABILITY YOU WO, P26, DOI DOI 10.1145/2425415.2425421
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Aysolmaz B, 2016, LECT NOTES BUS INF P, V248, P285, DOI 10.1007/978-3-319-39429-9_18
   Azouzi S, 2017, LECT NOTES BUS INF P, V299, P173, DOI 10.1007/978-3-319-65930-5_14
   Calegari D., 2018, CLEI Electron. J., V21, P1
   Calegari D., 2020, CLEI Electron. J., V23, P1
   Calegari D, 2019, 2019 XLV LATIN AMERICAN COMPUTING CONFERENCE (CLEI 2019), DOI 10.1109/CLEI47609.2019.235116
   Chang J.F., 2016, Business process management systems: Strategy and implementation, DOI [DOI 10.1201/9781420031362, 10.1201/9781420031362]
   COAL Group, BUS PROC FAM MAN BPF
   Cognini R., 2016, DOMAIN SPECIFIC CONC, P171, DOI DOI 10.1007/978-3-319-39417-6_8
   Collier K., 1999, 2014 47 HAWAII INT C, V6, P6009, DOI [10.1109/HICSS.1999.772607, DOI 10.1109/HICSS.1999.772607]
   Cui XF, 2017, 2017 16TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS 2017), P239
   Delgado A., 2021, MODEL DRIVEN MANAGEM, DOI [10.5281/zenodo.5768180, DOI 10.5281/ZENODO.5768180]
   Delgado A., 2015, P 16 INT C 20 INT C, V214, P53
   Delgado A., 2018, 30 INT C SOFTWARE EN, P330
   Delgado A, 2017, 2017 XLIII LATIN AMERICAN COMPUTER CONFERENCE (CLEI)
   Delgado A, 2015, IFIP ADV INF COMM TE, V451, P81, DOI 10.1007/978-3-319-17837-0_8
   Döhring M, 2011, LECT NOTES BUS INF P, V81, P332
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Dumas M., 2018, FUNDAMENTALS BPM, V2
   El Faquih L, 2017, J ELECTRON COMMER OR, V15, P48, DOI 10.4018/JECO.2017040104
   Gröner G, 2013, INFORM SYST, V38, P709, DOI 10.1016/j.is.2012.11.010
   Hallerbach A, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P154
   Haugen O, 2014, LECT NOTES COMPUT SC, V8769, P1, DOI 10.1007/978-3-319-11743-0_1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   ISO/IEC, 2011, TECHNICAL REPORTS
   ISO/IEC, 1991, 91261991 ISOIEC
   ISO/IEC, 2001, 91261991 ISOIEC
   Jimenez-Ramirez A., 2014, BUSINESS INFORM SYST, V176, P146, DOI [10.1007/978-3-319-06695-0_13, DOI 10.1007/978-3-319-06695-0_13]
   Joonseok Park, 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P211, DOI 10.1109/SERA.2011.19
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kent S., 2002, LNCS, V2335
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Krosnick JA, 1999, ANNU REV PSYCHOL, V50, P537, DOI 10.1146/annurev.psych.50.1.537
   Kulkarni Vinay, 2011, International Journal of Business Process Integration and Management, V5, P204, DOI 10.1504/IJBPIM.2011.042525
   La Rosa M, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3041957
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Landre G, 2015, LECT NOTES BUS INF P, V202, P130, DOI 10.1007/978-3-319-15895-2_12
   Likert R., 1932, ARCH PSYCHOL, V140, P53
   Machado I., 2011, P 2011 INT WORKSH EA, P25
   Martínez-Ruiz T, 2008, STUD COMPUT INTELL, V150, P115, DOI 10.1007/978-3-540-70561-1_9
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Milani F, 2016, INFORM SYST, V56, P55, DOI 10.1016/j.is.2015.09.003
   Ognjanovic I., 2012, 2012 IEEE International Conference on Services Computing (SCC), P25, DOI 10.1109/SCC.2012.6
   OMG, 2013, TECHNICAL REPORTS
   OMG, 2012, TECHNICAL REPORTS
   OMG, 2008, TECHNICAL REPORTS
   OMG, 2016, TECHNICAL REPORTS
   Pascalau Emilian, 2011, International Journal of Business Process Integration and Management, V5, P240, DOI 10.1504/IJBPIM.2011.042528
   Pena L., 2018, BVR BPMN 2 0 EDITOR
   Pillat RM, 2015, INFORM SOFTWARE TECH, V57, P95, DOI 10.1016/j.infsof.2014.09.004
   Popp R, 2015, INT CONF RES CHAL, P327, DOI 10.1109/RCIS.2015.7128893
   Reichert M, 2012, Enabling Flexibility in Process-Aware Information Systems-Challenges, Methods. Technologies, DOI DOI 10.1007/978-3-642-30409-5
   Reinhartz-Berger Iris, 2009, International Journal of Business Process Integration and Management, V4, P134, DOI 10.1504/IJBPIM.2009.027781
   Reinhartz-berger I., 2014, ENTERPRISE BUSINESS, P378
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Rychkova I., 2011, PROC 44 HAWAII INT C, P1
   Santos E, 2010, LECT NOTES BUS INF P, V50, P274
   Schnieders A., 2007, VARIABILITY MODELING, P63, DOI [10.1007/1-4020-5634-6_6, DOI 10.1007/1-4020-5634-6_6]
   Sharma DK, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION & AUTOMATION (ICCCA), P750, DOI 10.1109/CCAA.2015.7148510
   ter Beek MH, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P10
   Terenciani M., 2015, 27 INT C SOFTW ENG K, P227
   Nguyen T, 2011, LECT NOTES COMPUT SC, V7084, P404, DOI 10.1007/978-3-642-25535-9_27
   Valenca George, 2013, International Journal of Computer Science & Information Technology, V5, P1, DOI 10.5121/ijcsit.2013.5101
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Weidmann M, 2011, PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES (ICIW 2011), P29
   Weske M., 2019, Business Process Management, P4, DOI [DOI 10.1007/978-3-662-59432-2, 10.1007/978-3-662-59432-2_8, DOI 10.1007/978-3-662-59432-2_8]
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wieringa R, 2014, J SYST SOFTWARE, V95, P19, DOI 10.1016/j.jss.2013.11.1097
   Yin R.K., 2011, Qualitative research from start to finish
   Yousfi A, 2016, INF SYST E-BUS MANAG, V14, P443, DOI 10.1007/s10257-015-0290-7
   Zhang HY, 2014, ADV TRANSDISCIPL ENG, V1, P317, DOI 10.3233/978-1-61499-440-4-317
NR 77
TC 3
Z9 3
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2517
EP 2553
DI 10.1007/s10270-022-00985-3
EA MAR 2022
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000770741700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Nguyen, PT
   Di Rocco, J
   Iovino, L
   Di Ruscio, D
   Pierantonio, A
AF Phuong T Nguyen
   Di Rocco, Juri
   Iovino, Ludovico
   Di Ruscio, Davide
   Pierantonio, Alfonso
TI Evaluation of a machine learning classifier for metamodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Machine learning; Neural networks; GBDT; SVM
ID SUPPORT VECTOR MACHINES; NEURAL-NETWORKS; RECOGNITION; STATE
AB Modeling is a ubiquitous activity in the process of software development. In recent years, such an activity has reached a high degree of intricacy, guided by the heterogeneity of the components, data sources, and tasks. The democratized use of models has led to the necessity for suitable machinery for mining modeling repositories. Among others, the classification of metamodels into independent categories facilitates personalized searches by boosting the visibility of metamodels. Nevertheless, the manual classification of metamodels is not only a tedious but also an error-prone task. According to our observation, misclassification is the norm which leads to a reduction in reachability as well as reusability of metamodels. Handling such complexity requires suitable tooling to leverage raw data into practical knowledge that can help modelers with their daily tasks. In our previous work, we proposed AURORA as a machine learning classifier for metamodel repositories. In this paper, we present a thorough evaluation of the system by taking into consideration different settings as well as evaluation metrics. More importantly, we improve the original AURORA tool by changing its internal design. Experimental results demonstrate that the proposed amendment is beneficial to the classification of metamodels. We also compared our approach with two baseline algorithms, namely gradient boosted decision tree and support vector machines. Eventually, we see that AURORA outperforms the baselines with respect to various quality metrics.
C1 [Phuong T Nguyen; Di Rocco, Juri; Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 University of L'Aquila; Gran Sasso Science Institute (GSSI)
RP Di Ruscio, D (corresponding author), Univ Aquila, Laquila, Italy.
EM phuong.nguyen@univaq.it; juri.dirocco@univaq.it;
   ludovico.iovino@gssi.it; davide.diruscio@univaq.it;
   alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Nguyen, Phuong/ABE-3890-2021; Di Rocco,
   Juri/HSE-7230-2023
OI Di Ruscio, Davide/0000-0002-5077-6793; Nguyen,
   Phuong/0000-0002-3666-4162; Iovino, Ludovico/0000-0001-6552-2609; Di
   Rocco, Juri/0000-0002-7909-3902
FU European Union's Horizon 2020 Research and Innovation Programme [732223]
FX The research described in this paper has been carried out as part of the
   CROSSMINER Project, which has received funding from the European Union's
   Horizon 2020 Research and Innovation Programme under Grant 732223. We
   thank the anonymous reviewers for their valuable comments and
   suggestions that helped us improve the paper.
CR Agarap A. F., 2018, ARXIV
   Aly M., 2005, NEURAL NETWORKS, V19, P9
   Aoki G, 2018, BIOINFORMATICS, V34, P237, DOI 10.1093/bioinformatics/bty228
   Augusteijn MF, 2002, INT J REMOTE SENS, V23, P2891, DOI 10.1080/01431160110055804
   Babur, 2018, CEUR WORKSHOP PROC, V2245, P778
   Babur O., 2019, LABELED ECORE METAMO
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Babur Ö, 2016, LECT NOTES COMPUT SC, V9764, P3, DOI 10.1007/978-3-319-42061-5_1
   Barriga A., 2018, P MODELS 2018 WORKSH, P781
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Basciani F, 2016, LECT NOTES COMPUT SC, V9694, P342, DOI 10.1007/978-3-319-39696-5_21
   Belinkov Y, 2019, T ASSOC COMPUT LING, V7, P49, DOI 10.1162/tacl_a_00254
   Berner S, 1999, LECT NOTES COMPUT SC, V1723, P249
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Blum Adam., 1992, Neural Networks in C++: An Object-Oriented Framework for Building Connectionist Systems
   Bottoni P, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P83, DOI 10.1109/VLHCC.2004.5
   Bottou Leon, 1991, P NEURO NIMES, V91, P12
   Breuker D, 2014, P ANN HICSS, P758, DOI 10.1109/HICSS.2014.101
   Burgueno L., 2019, MDE INT 19 1 INT WOR
   Burgueño L, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P294, DOI 10.1109/MODELS.2019.00013
   BURNETT MM, 1994, J VISUAL LANG COMPUT, V5, P287, DOI 10.1006/jvlc.1994.1015
   Byun H, 2002, LECT NOTES COMPUT SC, V2388, P213
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Cleophas, 2017, FED INT C SOFTW TECH, P129
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dolques X, 2010, IEEE INT ENTERP, P27, DOI 10.1109/EDOCW.2010.32
   Duong LT, 2020, COMPUT ELECTRON AGR, V171, DOI 10.1016/j.compag.2020.105326
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   Frénay B, 2014, IEEE T NEUR NET LEAR, V25, P845, DOI 10.1109/TNNLS.2013.2292894
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   García-Díaz V, 2015, INT J INTERACT MULTI, V3, P6, DOI 10.9781/ijimai.2015.351
   Gatica G, 2013, PROCEDIA COMPUT SCI, V17, P412, DOI 10.1016/j.procs.2013.05.053
   Gatto N, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P196, DOI 10.1109/MODELS-C.2019.00033
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Hartmann T, 2019, SOFTW SYST MODEL, V18, P1285, DOI 10.1007/s10270-017-0600-2
   Hastie T., 2009, The Elements of Statistical Learning
   Hein C, 2009, FUTURE TRENDS OF MODEL-DRIVEN DEVELOPMENT, PROCEEDINGS, P35
   Isakowitz T, 1996, IEEE T SOFTWARE ENG, V22, P407, DOI 10.1109/32.508314
   Jahrer M., 2010, P 16 ACM SIGKDD INT, P693, DOI [DOI 10.1145/1835804.1835893, 10.1145/1835804.1835893]
   Jiang YB, 2004, LECT NOTES COMPUT SC, V3273, P54
   Karasneh Bilal, 2013, EESSMOD MODELS, P61
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kohavi R., 1995, 14 INT JOINT C ART I, P1137
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Kusmenko E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P283, DOI 10.1109/MODELS.2019.00012
   Latinne P, 2002, PATTERN ANAL APPL, V5, P201, DOI 10.1007/s100440200018
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lopez O., 2002, 8 INT WORKSH REQ ENG, P71
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mitra P, 2004, PATTERN RECOGN LETT, V25, P1067, DOI 10.1016/j.patrec.2004.03.004
   Moin A., 2018, P MODELS 2018 WORKSH, P521
   Mokaddem CE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P257, DOI 10.1145/3239372.3239406
   Nasr G.E., 2002, Forecasting gasoline demand, P381
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Nguyen PT, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110860
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen PT, 2017, LECT NOTES ARTIF INT, V10352, P481, DOI 10.1007/978-3-319-60438-1_47
   Nielsen MA., 2018, Neural Networks and Deep Learning
   Nielsen TD, 2019, 2019 IEEE POW EN SOC, P1
   Phillips PJ, 1999, ADV NEUR IN, V11, P803
   Portugal I, 2018, EXPERT SYST APPL, V97, P205, DOI 10.1016/j.eswa.2017.12.020
   Robinson WN, 2004, IEEE SOFTWARE, V21, P60, DOI 10.1109/MS.2004.1331304
   Rojas R, 1996, Neural Networks: A Systematic Introduction
   Rokach L, 2006, J INTELL MANUF, V17, P285, DOI 10.1007/s10845-005-0005-x
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sessions V., 2006, ICIQ, P485
   Shafiei M, 2007, I C DATA ENGIN WORKS, P770, DOI 10.1109/ICDEW.2007.4401066
   Steinwart Ingo, 2008, SUPPORT VECTOR MACHI
   Struber D., 2013, P WORKSH SCAL MOD DR
   Sujeeth A.K., 2011, ICML
   Vapnik V., 1999, NATURE STAT LEARNING
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Zhang GQ, 1998, INT J FORECASTING, V14, P35, DOI 10.1016/S0169-2070(97)00044-7
   Zhang ML, 2006, IEEE T KNOWL DATA EN, V18, P1338, DOI 10.1109/TKDE.2006.162
NR 79
TC 10
Z9 10
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1797
EP 1821
DI 10.1007/s10270-021-00913-x
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000694571100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Sartaj, H
   Iqbal, MZ
   Khan, MU
AF Sartaj, Hassan
   Iqbal, Muhammad Zohaib
   Khan, Muhammad Uzair
TI Testing cockpit display systems of aircraft using a model-based approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based testing (MBT); Safety-critical systems; Cockpit display
   systems (CDS); Unmanned aerial vehicle (UAV); Ground control station
   (GCS)
AB Avionics are highly critical systems that require extensive testing to comply with international safety standards. Cockpit display systems (CDS) are a mandatory part of modern cockpits of both manned and unmanned aircraft. The information from various avionics components is displayed on CDS using a variety of flight instruments. An important part of testing avionics systems is to evaluate whether the displayed information on the CDS is correct or not. A common industrial practice is to manually test CDS, which is time-consuming, labor-intensive, and error-prone. In this paper, we propose a model-based approach to automate the CDS testing of aircraft. The proposed approach tests the CDS at two levels: (i) at the system level to verify that the CDS are working correctly and (ii) at system integration level of CDS when these are integrated with various avionics components. As a part of our approach, we develop a UML profile to model various elements of the CDS. The models are then used to support the automated testing process. We evaluate our approach on two industrial case studies, the first case study represents a primary flight display (PFD) of an aircraft and the second one is the CDS of the ground control station (GCS-CDS) of an unmanned aerial vehicle. The evaluation results show that three potential faults are identified in the PFD and four major faults are found in the GCS-CDS.
C1 [Sartaj, Hassan; Iqbal, Muhammad Zohaib; Khan, Muhammad Uzair] Natl Univ Comp & Emerging Sci, Dept Comp Sci, Quest Lab, Islamabad, Pakistan.
   [Sartaj, Hassan; Iqbal, Muhammad Zohaib; Khan, Muhammad Uzair] Natl Ctr Robot & Automat NCRA, UAV Dependabil Lab, Islamabad, Pakistan.
RP Sartaj, H (corresponding author), Natl Univ Comp & Emerging Sci, Dept Comp Sci, Quest Lab, Islamabad, Pakistan.; Sartaj, H (corresponding author), Natl Ctr Robot & Automat NCRA, UAV Dependabil Lab, Islamabad, Pakistan.
EM hassan.sartaj@questlab.pk; zohaib.iqbal@nu.edu.pk; uzair.khan@nu.edu.pk
RI Sartaj, Hassan/HSE-1352-2023; Khan, Muhammad Sarwar/Q-8307-2019
OI Sartaj, Hassan/0000-0001-5212-9787; Iqbal, Muhammad Zohaib
   Z/0000-0001-8190-5327
FU Higher Education Commission (HEC), Pakistan
FX This research work is supported through a research grant titled
   'Establishment of National Centre of Robotics and Automation (NCRA)' by
   Higher Education Commission (HEC), Pakistan.
CR Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], 1992, AUTOTESTCON IEEE
   [Anonymous], 2019, AIAA SCITECH 2019 FO
   [Anonymous], 2014, OMG OBJ CONSTR LANG
   [Anonymous], 2019, MOD DEV TOOLS ECL OC
   [Anonymous], 2018, PRESAGIS VAPS XT
   [Anonymous], 2017, UML UN MOD LANG SPEC
   Antoniol G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/ISSRE.2002.1173268
   ARP4754 S, 1996, ARP4754S SAE
   Aviation D, 2017, LIST ARINC661 USEFUL
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Berndt J., 2004, PROC AIAA MODEL SIMU, P4923, DOI [10.2514/6.2004-4923, DOI 10.2514/6.2004-4923]
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bradski G, 2000, DR DOBBS J, V25, P120
   Campos Creissac, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3095811
   Campos JC, 2016, EICS'16: PROCEEDINGS OF THE 8TH ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P138, DOI 10.1145/2933242.2948735
   Catelani M, 2015, 2015 2ND IEEE INTERNATIONAL WORKSHOP ON METROLOGY FOR AEROSPACE (METROAEROSPACE), P421, DOI 10.1109/MetroAeroSpace.2015.7180694
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Choi YM, 2018, INFORM SOFTWARE TECH, V94, P38, DOI 10.1016/j.infsof.2017.09.013
   Damilano L, 2013, J INTELL ROBOT SYST, V69, P241, DOI 10.1007/s10846-012-9697-2
   DILLON M, 1983, INFORM PROCESS MANAG, V19, P402, DOI 10.1016/0306-4573(83)90062-6
   El-Far IbrahimK., 2002, Encyclopedia of Software Engineering
   Ferrell T. K., 2017, Digital Avionics Handbook
   Garousi V., 2017, Proc. 2017 ACM SIGSOFT, P21, DOI DOI 10.1145/3121245.3121250
   Group I, 2010, 10441993 IEEE, V1044, P1
   Guerra M, 2012, AIAA GUID NAV CONTR, P4544, DOI [10.2514/6.2012-4544, DOI 10.2514/6.2012-4544]
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Iftikhar S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P426, DOI 10.1109/MODELS.2015.7338274
   Iqbal MZ, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P67, DOI 10.1109/MODELS.2019.00-14
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P1367, DOI 10.1007/s10270-014-0405-5
   Kayayurt B, 2011, DIGIT AVION SYST CON
   Khan MU, 2019, EMPIR SOFTW ENG, V24, P2674, DOI 10.1007/s10664-019-09717-6
   Lelli V, 2015, IEEE ICST WORKSHOP
   Mor N, 2018, IEEE WINT CONF APPL, P218, DOI 10.1109/WACV.2018.00030
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Patel C., 2012, Int J Comput Appl, V55, P50, DOI DOI 10.5120/8794-2784
   Sartaj H, 2020, IEEE INT CONF SOFTW, P436, DOI 10.1109/ICST46399.2020.00058
   Sartaj H, 2019, LECT NOTES COMPUT SC, V11664, P105, DOI 10.1007/978-3-030-27455-9_8
   Smith R., 2009, P INT WORKSHOP MULTI, P1, DOI DOI 10.1145/1577802.1577804
   Smith R, 2007, PROC INT CONF DOC, P629, DOI 10.1109/icdar.2007.4376991
   Specification A, 2007, SPEC A 661 3 COCKP D
   Utting M., 2010, Practical model-based testing: a tools approach
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
   Yin YF, 2012, J SYST ENG ELECTRON, V23, P276, DOI 10.1109/JSEE.2012.00035
NR 46
TC 5
Z9 6
U1 1
U2 23
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1977
EP 2002
DI 10.1007/s10270-020-00844-z
EA JAN 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000604826600001
DA 2024-07-18
ER

PT J
AU Mayr, HC
   Thalheim, B
AF Mayr, Heinrich C.
   Thalheim, Bernhard
TI The triptych of conceptual modeling A framework for a better
   understanding of conceptual modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Modeling languages; Model characteristics; Model
   hierarchies; Language hierarchies; Concept; Notion; Term
AB We understand this paper as a contribution to the "anatomy" of conceptual models. We propose a signature of conceptual models for their characterization, which allows a clear distinction from other types of models. The motivation for this work arose from the observation that conceptual models are widely discussed in science and practice, especially in computer science, but that their potential is far from being exploited. We combine our proposal of a more transparent explanation of the nature of conceptual models with an approach that classifies conceptual models as a link between the dimension of linguistic terms and the encyclopedic dimension of notions. As a paradigm we use the triptych, whose central tableau represents the model dimension. The effectiveness of this explanatory approach is illustrated by a number of examples. We derive a number of open research questions that should be answered to complete the anatomy of conceptual models.
C1 [Mayr, Heinrich C.] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
   [Thalheim, Bernhard] Christian Albrechts Univ Kiel, Comp Sci, Kiel, Germany.
C3 University of Klagenfurt; University of Kiel
RP Mayr, HC (corresponding author), Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.; Thalheim, B (corresponding author), Christian Albrechts Univ Kiel, Comp Sci, Kiel, Germany.
EM Heinrich.Mayr@aau.at; bernhard.thalheim@email.uni-kiel.de
FU Universitat Klagenfurt
FX Open access funding provided by Universitat Klagenfurt.
CR [Anonymous], 2000, STRUCTURE MODERN ENG, DOI DOI 10.1075/Z.94
   [Anonymous], 1990, 100271990EN ISOIEC
   [Anonymous], 2008, VISUELLE MODELLE
   [Anonymous], 1962, COMMUN ACM
   [Anonymous], 2001, BIG BOOK CONCEPTS
   [Anonymous], KOMP E ASS GRAF MOD
   [Anonymous], 1972, INSTR SCI, DOI DOI 10.1007/BF00053969
   [Anonymous], 2015, WISSENSCHAFT KUNST M
   [Anonymous], Semantic web
   [Anonymous], 1874, Psychologie vom empirischen Standpunkte (Psychology from the Empirical Standpoint)
   Bolzano B., 1837, Wissenschaftslehre: versuch einer ausfuhrlichen und grosstentheils neuen darstellung der logik mit steter rucksicht auf deren bisherige bearbeiter
   Brand Thomas, 2018, P 13 INT WS MOD RUN, P72
   Brodie M, 1986, CONCEPTUAL MODELING
   Delcambre LML, 2018, LECT NOTES COMPUT SC, V11157, P27, DOI 10.1007/978-3-030-00847-5_4
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gray J, 2019, SOFTW SYST MODEL, V18, P3189, DOI 10.1007/s10270-019-00751-y
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Guarino N., 2020, INFORM MODELING KNOW
   Kangassalo H, 2017, 25 EJC C MAR SLOV JU
   Kant I, 1995, Kritik der reinen Vernunft
   KLAUS G, 1971, PHILOS WORTERBUCH
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Koltko-Rivera M.E, 2007, P 115 ANN CONV AM PS
   Lattmann C, 2017, DREIECK PYRAMIDEN MA
   Lockemann P. C., 1979, ACM Transactions on Database Systems, V4, P60, DOI 10.1145/320064.320067
   Lockemann P. C., 1993, Data & Knowledge Engineering, V10, P229, DOI 10.1016/0169-023X(93)90031-J
   Lockemann PC, 1978, RECHNERGESTUTZTE INF, DOI [10.1007/978-3-642-67053-4, DOI 10.1007/978-3-642-67053-4]
   Mahr B, 2005, TU BERLIN SUMMER TER
   Mahr Bernd., 2015, EWE, V26, P329
   Mayr H. C., 2017, Conceptual Modeling Perspectives, P85
   Mayr H.C., 2018, ENTERPRISE MODELING, V2097, P58
   Michael J., 2016, P 7 INT WORKSH ENT M, V1701, P40
   Michael J, 2013, LECT NOTES COMPUT SC, V8217, P403, DOI 10.1007/978-3-642-41924-9_33
   Miller G.A., 1991, SCI WORDS
   Miller G.A., 1990, Int. J. Lexicogr, V3, P235, DOI [DOI 10.1093/IJL/3.4.235, 10.1093/ijl/3.4.235]
   Mylopoulos J, ER ONL SUMM SEM
   Parr T., 2013, Pragmatic Bookshelf, V2nd
   Pastor O, 2018, ENTERP MODELLING INF, V13, P274
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Platon R., 2003, PLATONIS REMPUBLICAM
   Plexousakis D., 2019, NEMO SUMM SCH 2019 U
   Robinson S, 2015, WINT SIMUL C PROC, P2812, DOI 10.1109/WSC.2015.7408386
   Schema.Org Community Group, 2019, WELC SCHEM ORG
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shreffler-Grant J., MONTANA STATE U CONC
   Smith J. M., 1977, ACM Transactions on Database Systems, V2, P105, DOI 10.1145/320544.320546
   Stachowiak H., 1973, Allgemeine Modelltheorie, DOI [10.1007/978-3-7091-8327-4, DOI 10.1007/978-3-7091-8327-4]
   Thalheim B., 2015, WISSENSCHAFT KUNST M, P491
   Thalheim B., 2019, ENCY DATABASE SYSTEM
   Thalheim B, 2018, EMISA INT J CONCEPT, V9-27, P2018
   Twardowski Kasimir., 1894, Zur Lehre vom Inhalt und Gegenstand der Vorstellungen
   von Foerster H., 1992, EINFUHRUNG KONSTRUKT
   von Foerster H, 1991, KONSTRUKTION WIRKLIC, P39
   von Foerster H., 2003, UNDERSTANDING UNDERS, DOI [10.1007/b97451, DOI 10.1007/B97451]
   *WIK, CONC MOD
   Wolters G, 1995, ENZYKLOPADIE PHILOS, P911
NR 56
TC 29
Z9 29
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 7
EP 24
DI 10.1007/s10270-020-00836-z
EA NOV 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000593381000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Kawamoto, Y
AF Kawamoto, Yusuke
TI An epistemic approach to the formal specification of statistical machine
   learning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modal logic; Possible world semantics; Machine learning; Classification
   performance; Robustness; Fairness
ID LOGIC
AB We propose an epistemic approach to formalizing statistical properties of machine learning. Specifically, we introduce a formal model for supervised learning based on a Kripke model where each possible world corresponds to a possible dataset and modal operators are interpreted as transformation and testing on datasets. Then, we formalize various notions of the classification performance, robustness, and fairness of statistical classifiers by using our extension of statistical epistemic logic. In this formalization, we show relationships among properties of classifiers, and relevance between classification performance and robustness. As far as we know, this is the first work that uses epistemic models and logical formulas to express statistical properties of machine learning, and would be a starting point to develop theories of formal specification of machine learning.
C1 [Kawamoto, Yusuke] AIST, Tsukuba, Ibaraki, Japan.
C3 National Institute of Advanced Industrial Science & Technology (AIST)
RP Kawamoto, Y (corresponding author), AIST, Tsukuba, Ibaraki, Japan.
EM yusuke.kawamoto.aist@gmail.com
RI Kawamoto, Yusuke/M-7265-2016
OI Kawamoto, Yusuke/0000-0002-2151-9560
FU New Energy and Industrial Technology Development Organization (NEDO);
   ERATO HASUO Metamathematics for Systems Design Project [JPMJER1603];
   JST; Inria under the project LOGIS
FX This work was supported by the New Energy and Industrial Technology
   Development Organization (NEDO), by ERATO HASUO Metamathematics for
   Systems Design Project (No. JPMJER1603), JST, and by Inria under the
   project LOGIS.
CR Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   [Anonymous], 1951, ESSAY MODAL LOGIC
   [Anonymous], 2003, Reasoning About Uncertainty, DOI DOI 10.7551/MITPRESS/10951.001.0001
   Athalye A, 2018, PR MACH LEARN RES, V80
   Ballesteros M.M., 2011, Policy Notes No.2011-02, P1, DOI [10.1145/2166956.2166962, DOI 10.1145/2166956.2166962]
   Bana G, 2017, EUR STUD PHILOS SCI, V6, P43, DOI 10.1007/978-3-319-55486-0_3
   Barocas S., 2019, Fairness and Machine Learning
   Berk R, 2021, SOCIOL METHOD RES, V50, P3, DOI 10.1177/0049124118782533
   Blackburn P., 2001, Modal Logic, V53
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chadha R, 2009, LECT NOTES COMPUT SC, V5522, P182, DOI 10.1007/978-3-642-02138-1_12
   Chakraborty A., 2018, arXiv
   Dreossi T, 2019, P VNN
   Dwork C, 2019, PROCEEDINGS OF THE 38TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS (PODS '19), P1, DOI 10.1145/3294052.3322188
   Dwork Cynthia, 2012, P 3 INN THEOR COMP S, P214, DOI DOI 10.1145/2090236.2090255
   Fagin R, 1995, Reasoning about knowledge
   Gajane P., 2017, CORR
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Hardt M, 2016, ADV NEUR IN, V29
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Hughes D., 2004, Journal of Computer Security, V12, P3
   Jonker H.L., 2006, P WORKSH TRUSTW EL W
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kawamoto Yuusuke, 2007, Transactions of the Japan Society for Industrial and Applied Mathematics, V17, P559
   Kawamoto Y, 2019, LECT NOTES COMPUT SC, V11760, P344, DOI 10.1007/978-3-030-31175-9_20
   Kawamoto Y, 2019, LECT NOTES COMPUT SC, V11724, P293, DOI 10.1007/978-3-030-30446-1_16
   Kripke Saul A., 1963, Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, V9, P67, DOI DOI 10.1002/MALQ.19630090502
   Lewis D., 1980, Studies in Inductive Logic and Probability, P263, DOI DOI 10.1525/9780520318328-009
   Madry A., 2018, ARXIV
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Pardo Raul, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P378, DOI 10.1007/978-3-319-10431-7_30
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Prior A. N., 1957, Time and Modality
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Seshia SA, 2018, LECT NOTES COMPUT SC, V11138, P20, DOI 10.1007/978-3-030-01090-4_2
   Syverson PF, 1999, METHODS, V1, P814, DOI [10.1007/3-540-48119-2_450948.94013, DOI 10.1007/3-540-48119-2_450948.94013]
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Torres J, 2017, INT CONF EDEMOC EGOV, P63, DOI 10.1109/ICEDEG.2017.7962514
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vaserstein L. N., 1969, PROBL PEREDACHI INF, V5, P64
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zafar MB, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1171, DOI 10.1145/3038912.3052660
NR 46
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 293
EP 310
DI 10.1007/s10270-020-00825-2
EA SEP 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000571025400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Palmieri, M
   Bernardeschi, C
   Masci, P
AF Palmieri, Maurizio
   Bernardeschi, Cinzia
   Masci, Paolo
TI A framework for FMI-based co-simulation of human-machine interfaces
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE User interfaces; Prototyping tools; FMI co-simulation; Model-based
   design
ID SAFETY ANALYSIS; COSIMULATION; DESIGN
AB A framework for co-simulation of human-machine interfaces in Cyber-Physical Systems (CPS) is presented. The framework builds on formal (i.e. mathematical) methods. It aims to support the work of formal methods experts in charge of modelling and analysing safety-critical aspects of user interfaces in CPS. To carry out these modelling and analysis activities, formal methods experts usually need to engage with domain experts that may not fully understand the mathematical details of formal analysis results. The framework presented in this work mitigates this communication barrier by allowing formal methods experts to create interactive prototypes driven by formal models. The prototypes closely resemble the visual appearance of the system being developed. They can be used to discuss details of the formal analysis effort without showing any mathematical detail. An existing prototyping toolkit based on formal methods is used as baseline technology. Novel functionalities are developed for automatic generation of interactive prototypes supporting the Functional Mockup Interface (FMI), a de-facto standard technology for simulation of complex systems. Using the FMI interface, the prototypes can be integrated with simulations of other system components. The architecture of the framework is presented, along with a verification of core aspects of its functionalities. A case study based on a medical system is used to demonstrate the capabilities of the framework.
C1 [Palmieri, Maurizio] Univ Florence, Dept Informat Engn, Florence, Italy.
   [Bernardeschi, Cinzia] Univ Pisa, Dept Informat Engn, Pisa, Italy.
   [Masci, Paolo] Langley Res Ctr, Natl Inst Aerosp, Hampton, VA USA.
C3 University of Florence; University of Pisa; National Institute for
   Aerospace; National Aeronautics & Space Administration (NASA); NASA
   Langley Research Center
RP Palmieri, M (corresponding author), Univ Florence, Dept Informat Engn, Florence, Italy.
EM maurizio.palmieri@ing.unipi.it; cinzia.bernardeschi@unipi.it;
   paolo.masci@nianet.org
RI Masci, Paolo/H-9632-2019; Bernardeschi, Cinzia/AAG-8272-2019
OI Masci, Paolo/0000-0002-0667-7763; Bernardeschi,
   Cinzia/0000-0003-1604-4465; Palmieri, Maurizio/0000-0002-6177-0928
CR Abel A., 2012, Proceedings of the 9th International MODELICA Conference, September 3-5, 2012, Munich, Germany, V76, P775
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], TECHNICAL REPORT
   [Anonymous], MED DEVICES MED SYST
   [Anonymous], CAMBRIDGE TRACTS THE
   [Anonymous], TECHNICAL REPORTS CI
   [Anonymous], P WORKSH VER ASS VER
   [Anonymous], 2018, CNN NEWS
   [Anonymous], ETAPS FASE2014 17 IN
   [Anonymous], IEEE T HUM MACH SYST
   [Anonymous], P S THEOR MOD SIM TM
   [Anonymous], SIGBED REV MED CYBER
   [Anonymous], LNCS
   Arney David, 2012, Biomed Instrum Technol, V46, P308, DOI 10.2345/0899-8205-46.4.308
   Bequette B.W., 2003, PROCESS CONTROL MODE
   Bernardeschi C, 2018, IEEE T SOFTWARE ENG, V44, P512, DOI 10.1109/TSE.2017.2694423
   Bernardeschi C, 2016, 2016 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P135, DOI 10.1109/ISCC.2016.7543728
   Blockwitz T., 2012, 9 INT MOD C, P173, DOI DOI 10.3384/ECP12076173
   Bolton ML, 2011, IEEE T SYST MAN CY A, V41, P961, DOI 10.1109/TSMCA.2011.2109709
   Campos JC, 2009, EICS'09: PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P35
   Chaudemar J.-C., 2014, ERTS 2014 EMBEDDED R
   Couto LD, 2018, LECT NOTES COMPUT SC, V10729, P284, DOI 10.1007/978-3-319-74781-1_20
   Fritzson P, 2005, P 46 C SIM MOD SIMS, P83
   Garro A., 2015, P S THEORY MODELING, P9
   Goderis A, 2007, LECT NOTES COMPUT SC, V4489, P182
   Gomes C, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3179993
   Harrison MD, 2019, SCI COMPUT PROGRAM, V175, P17, DOI 10.1016/j.scico.2019.02.003
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1427, P526, DOI 10.1007/BFb0028775
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Krammer M., 2016, STAF 2016 DOCT S PRO, V1675, P32
   Larsen KG, 2016, PROCEEDINGS 23RD INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING - TIME 2016, P1, DOI 10.1109/TIME.2016.31
   Masci P., 2013, ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'13, London, United Kingdom - June 24 - 27, 2013, P81, DOI [DOI 10.1145/2494603, DOI 10.1145/2494603.2480302]
   Masci P, 2015, LECT NOTES COMPUT SC, V9206, P470, DOI 10.1007/978-3-319-21690-4_30
   Masci P, 2015, INNOV SYST SOFTW ENG, V11, P73, DOI 10.1007/s11334-013-0200-4
   Masci P, 2014, LECT NOTES COMPUT SC, V8430, P209, DOI 10.1007/978-3-319-06200-6_16
   Mauro G, 2017, ELECTRON P THEOR COM, P53, DOI 10.4204/EPTCS.240.4
   Nagel T., 2017, IEEE VIS Arts Program, P1
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Pajic M, 2014, IEEE T IND INFORM, V10, P3, DOI 10.1109/TII.2012.2226594
   Palensky P, 2017, IEEE IND ELECTRON M, V11, P6, DOI 10.1109/MIE.2017.2671198
   Palensky P, 2017, IEEE IND ELECTRON M, V11, P34, DOI 10.1109/MIE.2016.2639825
   Palmieri M, 2018, LECT NOTES COMPUT SC, V11176, P21, DOI 10.1007/978-3-030-04771-9_2
   Palmieri M, 2018, LECT NOTES COMPUT SC, V10729, P423, DOI 10.1007/978-3-319-74781-1_29
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Sander I, 2004, IEEE T COMPUT AID D, V23, P17, DOI 10.1109/TCAD.2003.819898
   Thule C, 2019, SIMUL MODEL PRACT TH, V92, P45, DOI 10.1016/j.simpat.2018.12.005
   Wang BB, 2013, IEEE ACM DIS SIM, P33, DOI 10.1109/DS-RT.2013.12
   Zambonelli F, 2015, PERVASIVE MOB COMPUT, V17, P236, DOI 10.1016/j.pmcj.2014.12.002
   Zeyda F, 2018, LECT NOTES COMPUT SC, V10729, P453, DOI 10.1007/978-3-319-74781-1_31
NR 50
TC 12
Z9 12
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 601
EP 623
DI 10.1007/s10270-019-00754-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800007
DA 2024-07-18
ER

PT J
AU Dong, X
   Li, T
   Song, R
   Ding, ZM
AF Dong, Xin
   Li, Tong
   Song, Rui
   Ding, Zhiming
TI Profiling users via their reviews: an extended systematic mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE User-generated reviews; User profiling; Systematic mapping study;
   Software requirements
ID CLASSIFICATION; MODEL
AB With the extensive development of big data and social networks, the user profile field has received much attention. User profiling is essential for understanding the characteristics of various users, contributing to better understanding of their requirements in specific scenarios. User-generated contents which directly reflect people's thoughts and intention are a valuable source for profiling users, among which user reviews by nature are invaluable sources for acquiring user requirements and have drawn increasing attention from both academia and industry. However, review-based user profiling (RBUP), as an emerging research direction, has not been systematically reviewed, hindering researchers from further investigation. In this work, we carry out a systematic mapping study on review-based user profiling, with an emphasis on investigating the generic analysis process of RBUP and identifying potential research directions. Specifically, 51 out of 2478 papers were carefully selected for investigation under a standardized and systematic procedure. By carrying out in-depth analysis over such papers, we have identified a generic process that should be followed to perform review-based user profiling. In addition, we perform multi-dimensional analysis on each step of the process in order to review current research progress and identify challenges and potential research directions. The results show that although traditional methods have been continuously improved, they are not sufficient to unleash the full potential of large-scale user reviews, especially the use of heterogeneous data for multi-dimensional user profiling.
C1 [Dong, Xin; Li, Tong; Song, Rui; Ding, Zhiming] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
C3 Beijing University of Technology
RP Li, T (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
EM dongxin19@foxmail.com; litong@bjut.edu.cn; songrui@emails.bjut.edu.cn;
   zmding@bjut.edu.cn
RI Dong, Xin/IZQ-2213-2023; li, tong/JYO-7530-2024
FU National Key R&D Program of China [2017YFC0803300, 2017YFC0803307];
   National Natural Science of Foundation of China [61902010, 91546111,
   91646201]
FX This work is supported by the National Key R&D Program of China (Nos.
   2017YFC0803300, 2017YFC0803307) and the National Natural Science of
   Foundation of China (Nos. 61902010, 91546111, 91646201).
CR Ahn HJ, 2010, EXPERT SYST APPL, V37, P3055, DOI 10.1016/j.eswa.2009.09.025
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Ananthapadmanaban K.R., 2011, INT J OFCOMPUTER APP, V23, P42
   Bai X, 2014, IEEE INT CONGR BIG, P358, DOI 10.1109/BigData.Congress.2014.59
   Budgen D., 2007, INT C EV ASS SOFTW E
   Catherine R., 2016, ACM C REC SYST
   Chen L, 2015, USER MODEL USER-ADAP, V25, P99, DOI 10.1007/s11257-015-9155-5
   Chen W, 2017, LECT NOTES COMPUT SC, V10638, P134, DOI 10.1007/978-3-319-70139-4_14
   Cicchetti A, 2019, SOFTW SYST MODEL, V18, P3207, DOI 10.1007/s10270-018-00713-w
   Cufoglu A., 2014, International Journal of Computer Applications, V108, P1, DOI [10.5120/18888-0179, DOI 10.5120/18888-0179]
   Dong R., 2016, UMAP16
   Dong X, 2019, LECT NOTES BUS INF P, V352, P229, DOI 10.1007/978-3-030-20618-5_16
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Horkoff J, 2019, REQUIR ENG, V24, P133, DOI 10.1007/s00766-017-0280-z
   Jiang MM, 2015, TSINGHUA SCI TECHNOL, V20, P634, DOI 10.1109/TST.2015.7350016
   Kai P., 2008, INT C EV ASS SOFTW E
   Kanoje S., 2014, InternationalJournalofAdvance Foundation and Research in Computer, V1, P2348
   Keele S, 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Lancaster GA, 2004, J EVAL CLIN PRACT, V10, P307, DOI 10.1111/j..2002.384.doc.x
   Levi A., 2012, 6 ACM C REC SYST
   Markov Ilia., 2016, Mexican International Conference on Artificial Intelligence, P117
   Moon C, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P2215, DOI 10.1145/3132847.3133095
   Natarajan S, 2016, 2016 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P204, DOI [10.1109/CTS.2016.0050, 10.1109/CTS.2016.48]
   Papadimitriou CH, 2000, J COMPUT SYST SCI, V61, P217, DOI 10.1006/jcss.2000.1711
   Park DH, 2012, EXPERT SYST APPL, V39, P10059, DOI 10.1016/j.eswa.2012.02.038
   Peng J, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4013
   Ramkumar V, 2010, EXPERT SYST APPL, V37, P6862, DOI 10.1016/j.eswa.2010.03.036
   Sarwat M, 2014, IEEE T KNOWL DATA EN, V26, P1384, DOI 10.1109/TKDE.2013.29
   Skiena Steven, 2014, ACM SIGKDD INT C KNO
   Stewart S., 1997, 19 ANN BCS IRSG C IR
   Suganeshwari G, 2016, SMART INNOV SYST TEC, V49, P503, DOI 10.1007/978-3-319-30348-2_42
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Wang D, 2016, ACM SIGKDD INT C KNO
   Williams G, 2018, INT REQUIR ENG CONF, P64, DOI 10.1109/RE.2018.00-51
   Wohlin C., 2014, EASE C
   Wolny S, 2020, SOFTW SYST MODEL, V19, P111, DOI 10.1007/s10270-019-00735-y
   Wu S.L, 2011, US Patent, Patent No. [7,895,177, 7895177]
   Wu S, 2016, IEEE T HUM-MACH SYST, V46, P908, DOI 10.1109/THMS.2016.2586480
   Ya L, 2012, PHYSCS PROC, V25, P475, DOI 10.1016/j.phpro.2012.03.113
   Yang Z., 2014, INT WORK C REQ ENG F
   Zhong Y, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P295, DOI 10.1145/2684822.2685287
NR 43
TC 1
Z9 1
U1 8
U2 64
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 49
EP 69
DI 10.1007/s10270-020-00790-w
EA MAR 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000521020400003
DA 2024-07-18
ER

PT J
AU Roy-Hubara, N
   Sturm, A
AF Roy-Hubara, Noa
   Sturm, Arnon
TI Design methods for the new database era: a systematic literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Database design; Database modeling; NoSQL; Design methods
ID NOSQL; MODEL
AB Over the last decade, a range of new database solutions and technologies have emerged, in line with the new types of applications and requirements that they facilitate. Consequently, various new methods for designing these new databases have evolved, in order to keep pace with progress in the field. In this paper, we systematically review these methods, with a view to better understanding their suitability for designing new database solutions. The study shows that while research in the field has expanded continuously, a range of factors still require further attention. The study identified important criteria in database design and analyzed existing studies accordingly. This analysis will assist in defining and recommending key areas for future research, guiding the evolution of design methods, their usability and adaptability in real-world scenarios. The study found that current database design methods do not address non-functional requirements; tend to refer to a preselected database; and are lacking in their evaluation.
C1 [Roy-Hubara, Noa; Sturm, Arnon] Ben Gurion Univ Negev, Dept Software & Informat Syst, Beer Sheva, Israel.
C3 Ben Gurion University
RP Roy-Hubara, N (corresponding author), Ben Gurion Univ Negev, Dept Software & Informat Syst, Beer Sheva, Israel.
EM nro@post.bgu.ac.il; sturm@bgu.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Akoka J, 2018, ENTERP MODELLING INF, V13, P281
   Akoka Jacky, 2017, LECT NOTES COMPUTER, P58
   Atzeni P., 2016, COMPUTER STANDARDS I
   Atzeni P, 2013, SIGMOD REC, V42, P64
   Banerjee S., 2016, 3 INT C APPL INN MOB, P10
   Banerjee S, 2016, PROCEEDINGS OF THE 2016 IEEE REGION 10 CONFERENCE (TENCON), P2360, DOI 10.1109/TENCON.2016.7848452
   Benmakhlouf A, 2018, INT J DATABASE MANAG, V10, P1, DOI [10.5121/ijdms.2018.10201, DOI 10.5121/IJDMS.2018.10201]
   Bjeladinovic S, 2018, ENTERP INF SYST-UK, V12, P1202, DOI 10.1080/17517575.2018.1446102
   Boussahoua M, 2017, LECT NOTES COMPUT SC, V10439, P247, DOI 10.1007/978-3-319-64471-4_20
   Bugiotti F., 2015, SEBD IT S ADV DAT SY
   Bugiotti F., 2013, LOGICAL APPROACH NOS
   Bugiotti F, 2014, LECT NOTES COMPUT SC, V8824, P223, DOI 10.1007/978-3-319-12206-9_18
   Calvaresi D, 2017, J AMB INTEL HUM COMP, V8, P239, DOI 10.1007/s12652-016-0374-3
   Chebotko A, 2015, IEEE INT CONGR BIG, P238, DOI 10.1109/BigDataCongress.2015.41
   Comyn-Wattiau I, 2017, IEEE INT CONF BIG DA, P453, DOI 10.1109/BigData.2017.8257957
   Daniel G, 2016, LECT NOTES COMPUT SC, V9974, P430, DOI 10.1007/978-3-319-46397-1_33
   De Lima C, 2015, P 17 INT C INF INT W, DOI 10.1145/2837185.2837218
   De Virgilio R, 2014, LECT NOTES COMPUT SC, V8824, P172, DOI 10.1007/978-3-319-12206-9_14
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gomez Paola, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549340
   Haseeb A., 2017, INT J ADV RES COMPUT, V8, P203
   Herrero Victor, 2016, INT C CONC MOD, P50
   Imam AA, 2017, TENCON IEEE REGION, P2765, DOI 10.1109/TENCON.2017.8228332
   Jia TY, 2016, IEEE INT CONGR BIG, P60, DOI 10.1109/BigDataCongress.2016.16
   Kaur K, 2013, IEEE INT CONF BIG DA
   Khazaei H., 2016, BIG DATA INF ANAL BD, V2, P1
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kolomienko V., 2013, Proceedings of International Conference on Information Integration and Web-Based Applications Services, P115
   Leavitt N, 2000, COMPUTER, V33, P16, DOI 10.1109/MC.2000.841780
   Leavitt N, 2010, COMPUTER, V43, P12, DOI 10.1109/MC.2010.58
   Lima C, 2016, INT J WEB INF SYST, V12, P398, DOI 10.1108/IJWIS-04-2016-0018
   Lourenco JoaoRicardo., 2015, J BIG DATA-GER, V2, P1, DOI DOI 10.1186/S40537-015-0025-0
   Mason R.T., 2015, Proceedings of Informing Science IT Education Conference (InSITE), V3, P259, DOI DOI 10.28945/2245
   Mior MJ, 2017, IEEE T KNOWL DATA EN, V29, P2275, DOI 10.1109/TKDE.2017.2722412
   Pavlo A, 2016, SIGMOD REC, V45, P45, DOI 10.1145/3003665.3003674
   Pokorny J, 2016, P IDEAS 16, P370, DOI [DOI 10.1145/2938503.2938547, 10.1145/2938503.2938547]
   Pokorny J., 2017, J ADV ENG COMPUT, V1, P04, DOI [10.25073/jaec.201711.44, DOI 10.25073/JAEC.201711.44]
   Rossel G., 2017, Database Syst. J, V8, P12
   Roy-Hubara N, 2017, IT PROF, V19, P34, DOI 10.1109/MITP.2017.4241458
   Ruiz DS, 2015, LECT NOTES COMPUT SC, V9381, P467, DOI 10.1007/978-3-319-25264-3_35
   Shin K., 2017, International Journal of Applied Engineering Research, V12, P632
   Storey VC, 2017, DATA KNOWL ENG, V108, P50, DOI 10.1016/j.datak.2017.01.001
   Stroulia Eleni., 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering (CASCON'16), P156, DOI [10. 5555/3049877.3049893, DOI 10.5555/3049877.3049893]
   Sturm Arnon, 2004, LECT NOTES COMPUTER, P94
   Tang EQ, 2016, INT C CLOUD COMP BIG, P105, DOI [10.1109/CCBD.2016.030, 10.1109/CCBD.2016.69]
   Tudorica Bogdan George, 2011, 2011 ROEDUNET INT C, P1, DOI DOI 10.1109/ROEDUNET.2011.5993686
   Varga V, 2016, ACTA POLYTECH HUNG, V13, P229
   Weilkiens T., 2016, 2016 IEEE International Symposium on Systems Engineering, P1
   Yli-Huumo J, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0163477
   Zecevic I, 2018, ENTERP INF SYST-UK, V12, P1221, DOI 10.1080/17517575.2018.1445295
NR 50
TC 16
Z9 18
U1 6
U2 61
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 297
EP 312
DI 10.1007/s10270-019-00739-8
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200005
DA 2024-07-18
ER

PT J
AU Wolny, S
   Mazak, A
   Carpella, C
   Geist, V
   Wimmer, M
AF Wolny, Sabine
   Mazak, Alexandra
   Carpella, Christine
   Geist, Verena
   Wimmer, Manuel
TI Thirteen years of SysML: a systematic mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE SysML; Systematic mapping study; Systems engineering
ID MODEL-DRIVEN DEVELOPMENT; LITERATURE-REVIEWS; PHYSICAL SYSTEMS; UML
AB The OMG standard Systems Modeling Language (SysML) has been on the market for about thirteen years. This standard is an extended subset of UML providing a graphical modeling language for designing complex systems by considering software as well as hardware parts. Over the period of thirteen years, many publications have covered various aspects of SysML in different research fields. The aim of this paper is to conduct a systematic mapping study about SysML to identify the different categories of papers, (i) to get an overview of existing research topics and groups, (ii) to identify whether there are any publication trends, and (iii) to uncover possible missing links. We followed the guidelines for conducting a systematic mapping study by Petersen et al. (Inf Softw Technol 64:1-18, 2015) to analyze SysML publications from 2005 to 2017. Our analysis revealed the following main findings: (i) there is a growing scientific interest in SysML in the last years particularly in the research field of Software Engineering, (ii) SysML is mostly used in the design or validation phase, rather than in the implementation phase, (iii) the most commonly used diagram types are the SysML-specific requirement diagram, parametric diagram, and block diagram, together with the activity diagram and state machine diagram known from UML, (iv) SysML is a specific UML profile mostly used in systems engineering; however, the language has to be customized to accommodate domain-specific aspects, (v) related to collaborations for SysML research over the world, there are more individual research groups than large international networks. This study provides a solid basis for classifying existing approaches for SysML. Researchers can use our results (i) for identifying open research issues, (ii) for a better understanding of the state of the art, and (iii) as a reference for finding specific approaches about SysML.
C1 [Wolny, Sabine; Mazak, Alexandra; Wimmer, Manuel] Johannes Kepler Univ Linz, Christian Doppler Lab Model Integrated Smart Prod, Inst Business Informat Software Engn, Altenberger Str 69, A-4040 Linz, Austria.
   [Carpella, Christine] ENGEL AUSTRIA GmbH, Schwertberg, Austria.
   [Geist, Verena] Software Competence Ctr Hagenberg GmbH SCCH, Softwarepk 21, A-4232 Hagenberg, Austria.
C3 Johannes Kepler University Linz; Softwarepark Hagenberg
RP Wolny, S (corresponding author), Johannes Kepler Univ Linz, Christian Doppler Lab Model Integrated Smart Prod, Inst Business Informat Software Engn, Altenberger Str 69, A-4040 Linz, Austria.
EM sabine.wolny@jku.at
OI Sint, Sabine/0000-0001-8076-8228
FU Spanish National Research Agency (AEI); ERDF [TIN2017-85797-R]
FX This work has been developed in the VISAIGLE project, funded by the
   Spanish National Research Agency (AEI) with ERDF funds under grant ref.
   TIN2017-85797-R.
CR Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   [Anonymous], PROCEDURE UNDERTAKIN
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   [Anonymous], P 4 MED CYB PHYS SYS
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   Assar S, 2014, IEEE INT WORKSH MODE, P1, DOI 10.1109/MoDRE.2014.6890820
   Badreddin O., 2016, P 4 INT WORKSH GLOB, P38
   Barbieri K., 2014, IFAC Proc., V47, P3431, DOI DOI 10.3182/20140824-6-ZA-1003.00615
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Batarseh O., 2012, P 2012 S THEOR MOD S
   Baumgart S, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P313, DOI 10.1109/SEAA.2016.58
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   David P, 2010, RELIAB ENG SYST SAFE, V95, P431, DOI 10.1016/j.ress.2009.11.015
   do Nascimento L.M., 2003, P 7 INT C SOFTW ENG, P179
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Essaadi F, 2017, LECT NOTES ELECTR EN, V397, P331, DOI 10.1007/978-981-10-1627-1_26
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Garousi V., 2013, PROGR INNOVATIONS MO
   Gauthier Jean-Marie, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P134, DOI 10.1007/978-3-319-25423-4_9
   Guessi M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1433, DOI 10.1145/2695664.2695795
   Huang E, 2007, PROCEEDINGS OF THE 2007 WINTER SIMULATION CONFERENCE, VOLS 1-5, P775
   Ingibergsson JTM, 2015, LECT NOTES COMPUT SC, V9459, P335, DOI 10.1007/978-3-319-26844-6_25
   Johnson T, 2012, J COMPUT INF SCI ENG, V12, DOI 10.1115/1.4005452
   Kernschmidt Konstantin, 2013, 2013 IEEE International Conference on Automation Science and Engineering (CASE), P1113, DOI 10.1109/CoASE.2013.6654030
   Kitchenham B., 2007, EBSE200701 EBSE KEEE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Korff A., 2008, MODELLIERUNG EINGEBE
   Kosar T, 2018, J SYST SOFTWARE, V144, P439, DOI 10.1016/j.jss.2018.06.078
   Kuhrmann M, 2014, J SOFTW-EVOL PROC, V26, P1053, DOI 10.1002/smr.1642
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Lucio L., 2012, TECH REP
   Mazak A, 2016, CONF BUS INFORM, P104, DOI 10.1109/CBI.2016.20
   Nelson M., 2003, INNOVATIONS DATABASE, P310
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Ormeno Yeshica Isela, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P672, DOI 10.1007/978-3-642-38709-8_43
   Paredis C.J., 2010, INCOSE International Symposium, Wiley Online Library, V20, P709, DOI [10.1002/j.2334-5837.2010.tb01099.x, DOI 10.1002/J.2334-5837.2010.TB01099.X]
   Peak R.S., 2007, INCOSE INT S, V17, P1516, DOI [DOI 10.1002/J.2334-5837.2007.TB02964.X, 10.1002/j.2334-5837.2007.tb02964.x]
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   Rasheduzzaman M., 2016, 2016 11th System of Systems Engineering Conference (SoSE), P1
   Rashid M, 2015, J SYST SOFTWARE, V106, P150, DOI 10.1016/j.jss.2015.04.089
   Reichwein A., 2012, P 6 INT WORKSHOP MUL, DOI DOI 10.1145/2508443.2508451
   Rusli H.M., 2011, COMMUNICATIONS IBIMA
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Torre D., 2014, P 18 INT C EV ASS SO, P6
   Truscan D, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P39, DOI 10.1109/SERIP.2015.15
   Valenca George, 2013, International Journal of Computer Science & Information Technology, V5, P1, DOI 10.5121/ijcsit.2013.5101
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wortmann A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P281, DOI 10.1109/MODELS.2017.14
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 60
TC 57
Z9 64
U1 5
U2 26
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 111
EP 169
DI 10.1007/s10270-019-00735-y
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900008
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hartmann, T
   Moawad, A
   Fouquet, F
   Le Traon, Y
AF Hartmann, Thomas
   Moawad, Assaad
   Fouquet, Francois
   Le Traon, Yves
TI The next evolution of MDE: a seamless integration of machine learning
   into domain modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain modeling; Live learning; Model-driven engineering; Metamodeling;
   Cyber-physical systems; Smart grids
AB Machine learning algorithms are designed to resolve unknown behaviors by extracting commonalities over massive datasets. Unfortunately, learning such global behaviors can be inaccurate and slow for systems composed of heterogeneous elements, which behave very differently, for instance as it is the case for cyber-physical systems and Internet of Things applications. Instead, to make smart decisions, such systems have to continuously refine the behavior on a per-element basis and compose these small learning units together. However, combining and composing learned behaviors from different elements is challenging and requires domain knowledge. Therefore, there is a need to structure and combine the learned behaviors and domain knowledge together in a flexible way. In this paper we propose to weave machine learning into domain modeling. More specifically, we suggest to decompose machine learning into reusable, chainable, and independently computable small learning units, which we refer to as microlearning units. These microlearning units are modeled together with and at the same level as the domain data. We show, based on a smart grid case study, that our approach can be significantly more accurate than learning a global behavior, while the performance is fast enough to be used for live learning.
C1 [Hartmann, Thomas; Fouquet, Francois] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Le Traon, Yves] Univ Luxembourg, SER VAL SEcur Reasoning & VALidat, Luxembourg, Luxembourg.
   [Moawad, Assaad] DataThings SARL, Luxembourg, Luxembourg.
C3 University of Luxembourg; University of Luxembourg
RP Hartmann, T (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM thomas.hartmann@uni.lu
RI Hartmann, Thomas/I-2479-2017; LE TRAON, Yves/T-2911-2019
OI Fouquet, Francois/0000-0001-9028-768X; LE TRAON,
   Yves/0000-0002-1045-4861
FU National Research Fund Luxembourg [6816126]
FX Funding was provided by National Research Fund Luxembourg (Grant No.
   6816126).
CR Abadi M, ARXIV, DOI DOI 10.48550/ARXIV.1603.04467
   [Anonymous], 2014, P ANN C UNC ART INT
   [Anonymous], 2013, NIPS 2013 WORKSH
   [Anonymous], THESIS
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 2015, META OBJECT FACILITY
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Bifet A, 2010, J MACH LEARN RES, V11, P1601
   Bishop CM, 2013, PHILOS T R SOC A, V371, DOI 10.1098/rsta.2012.0222
   Carstoiu D., 2010, 2010 4th International Conference on New Trends in Information Science and Service Science (NISS 2010), P84
   Choetkiertikul M, 2015, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2015.55
   Daly Chris., 2004, EMFATIC LANGUAGE REF
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Esbensen KH, 2010, J CHEMOMETR, V24, P168, DOI 10.1002/cem.1310
   Fink CR, 2011, J HOPKINS APL TECH D, V30, P22
   Fouquet F., 2014, ARXIV14056817
   GERBESSIOTIS AV, 1994, J PARALLEL DISTR COM, V22, P251, DOI 10.1006/jpdc.1994.1085
   Group O. M., TECH REP
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han W., 2014, P 9 EUR C, DOI DOI 10.1145/2592798.2592799
   Hartmann T., 2015, 2015 IEEE INT C SMAR
   Hartmann T., 2014, 26 INT C SOFTW ENG K, P586
   Hartmann T, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P80, DOI 10.1109/MODELS.2015.7338238
   Hartmann T, 2014, INT CONF SMART GRID, P428, DOI 10.1109/SmartGridComm.2014.7007684
   Hartmann T, 2014, LECT NOTES COMPUT SC, V8767, P252, DOI 10.1007/978-3-319-11653-2_16
   Henricksen K., 2002, Pervasive Computing. First International Conference, Pervasive 2002. Proceedings (Lecture Notes in Computer Science Vol.2414), P167
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Hug T., 2005, P MICR, V5
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kohtes R., 2014, VALENCE EMOTIONS COA
   Lassila Ora, 1998, W3C Recommendation
   Low Y, 2012, PROC VLDB ENDOW, V5, P716, DOI 10.14778/2212351.2212354
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Norvig P., 2012, NEWSCIENTIST
   Object Management Group, 2015, OMG UN MOD LANG VERS
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Srivastava Durgesh K., 2010, Journal of Theoretical and Applied Information Technology, V12, P1
   Sun JM, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P687
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Vierhauser M, 2015, IEEE INT CONF AUTOM, P715, DOI 10.1109/ASE.2015.25
   W3C, 2009, W W W C OWL 2 WEB ON
   Wernick MN, 2010, IEEE SIGNAL PROC MAG, V27, P25, DOI 10.1109/MSP.2010.936730
   Yuan NJ, 2013, IEEE T KNOWL DATA EN, V25, P2390, DOI 10.1109/TKDE.2012.153
   Zhang B, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEM AND KNOWLEDGE ENGINEERING, VOLS 1 AND 2, P7, DOI 10.1109/ISKE.2008.4730887
   Zhu H., 2009, UML 2 SEMANTICS APPL, P95
   [No title captured]
NR 49
TC 24
Z9 25
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1285
EP 1304
DI 10.1007/s10270-017-0600-2
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400025
DA 2024-07-18
ER

PT J
AU Li, T
   Horkoff, J
   Mylopoulos, J
AF Li, Tong
   Horkoff, Jennifer
   Mylopoulos, John
TI Holistic security requirements analysis for socio-technical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security requirements; Goal model; Enterprise architecture;
   Socio-technical system; Security pattern
ID GOAL MODELS; PATTERNS
AB Security has been a growing concern for large organizations, especially financial and governmental institutions, as security breaches in the systems they depend on have repeatedly resulted in billions of dollars in losses per year, and this cost is on the rise. A primary reason for these breaches is that the systems in question are "socio-technical" a mix of people, processes, technology, and infrastructure. However, such systems are designed in a piecemeal rather than a holistic fashion, leaving parts of the system vulnerable. To tackle this problem, we propose a three-layer security analysis framework consisting of a social layer (business processes, social actors), a software layer (software applications that support the social layer), and an infrastructure layer (physical and technological infrastructure). In our proposal, global security requirements lead to local security requirements, cutting across conceptual layers, and upper-layer security analysis influences analysis at lower layers. Moreover, we propose a set of analytical methods and a systematic process that together drive security requirements analysis across the three layers. To support analysis, we have defined corresponding inference rules that (semi-)automate the analysis, helping to deal with system complexity. A prototype tool has been implemented to support analysts throughout the analysis process. Moreover, we have performed a case study on a real-world smart grid scenario to validate our approach.
C1 [Li, Tong; Mylopoulos, John] Univ Trento, Trento, Italy.
   [Horkoff, Jennifer] City Univ London, Cass Business Sch, London, England.
C3 University of Trento; City University London
RP Li, T (corresponding author), Univ Trento, Trento, Italy.
EM tong.li@disi.unitn.it; horkoff@city.ac.uk; jm@disi.unitn.it
OI Horkoff, Jennifer/0000-0002-2019-5277
FU ERC [267856]; ERC Marie Sklodowska-Curie Intra-European Fellowship
   [PIEF-GA-2013-627489]; Natural Sciences and Engineering Research Council
   of Canada
FX Trento authors are supported by the ERC advanced Grant 267856, titled
   "Lucretius: Foundations for Software Evolution". Jennifer Horkoff is
   supported by an ERC Marie Sklodowska-Curie Intra-European Fellowship
   (PIEF-GA-2013-627489), and by a Natural Sciences and Engineering
   Research Council of Canada Postdoctoral Fellowship (Sept. 2014-Aug.
   2016).
CR Altuhhova O, 2012, LECT NOTES BUS INF P, V112, P1
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2014, PROC RCIS 14
   [Anonymous], 2011, TOGAF VERS 9 1
   ARAUJO I, 2002, P 9 C PATT LANG PROG
   Asnar Yudis, 2011, International Journal of Secure Software Engineering, V2, P1, DOI 10.4018/jsse.2011070101
   Asnar Y, 2011, INT C COMMERCE BUS, P145, DOI 10.1109/CEC.2011.13
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brown B., 2008, AMI SYSTEM SECURITY
   Carpenter M., 2009, ADV METERING INFRAST
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   Chung L., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P234
   Chung L., 2006, SOFTWARE ENG RES APP, V3647, P29
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Estrada H, 2006, LECT NOTES COMPUT SC, V4001, P513, DOI 10.1007/11767138_34
   Fernandez EB, 2004, IC'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P801
   Fernandez EB, 2008, CISIS 2008: THE SECOND INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS, PROCEEDINGS, P555, DOI 10.1109/CISIS.2008.51
   Fernandez EB, 2007, LECT NOTES COMPUT SC, V4602, P259
   Fernandez-Buglioni Eduardo, 2013, Security patterns in practice: designing secure architectures using software patterns
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Flick T., 2010, Securing the Smart Grid: Next Generation Power Grid Security
   Giorgini P, 2005, LECT NOTES COMPUT SC, V3655, P237
   Gross D., 2001, Requirements Engineering, V6, P18, DOI 10.1007/s007660170013
   Hafiz M, 2007, IEEE SOFTWARE, V24, P52, DOI 10.1109/MS.2007.114
   Haley CharlesB., 2004, PROC AOSD 04, P112, DOI [10.1145/976270.976285, DOI 10.1145/976270.976285]
   Hernan S, 2006, MSDN MAG, V21, P68
   Herrmann P., 2006, Electronic Commerce Research, V6, P305, DOI 10.1007/s10660-006-8677-7
   Heyman T., 2007, Proceedings of the Third International Workshop on Software Engineering for Secure Systems (SESS), Minneapolis, MN, USA, P3, DOI DOI 10.1109/SESS.2007.4
   Horkoff J., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P675
   Horkoff J, 2015, INT J INF SYST MODEL, V6, P1, DOI 10.4018/IJISMD.2015040101
   Horkoff J, 2014, LECT NOTES COMPUT SC, V8824, P260, DOI 10.1007/978-3-319-12206-9_21
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Horkoff J, 2010, LECT NOTES COMPUT SC, V6412, P59, DOI 10.1007/978-3-642-16373-9_5
   ISO/IEC, 2005, 27002 ISOIEC
   Jureta I. J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P115, DOI 10.1109/RE.2010.24
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li T, 2014, LECT NOTES BUS INF P, V197, P208
   Li Tong., 2014, Proceedings of the International Conference on Advanced Information Systems Engineering (CAiSE'14): Forum/Doctoral Consortium, P185
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Massacci Fabio, 2012, Secure IT Systems. 17th Nordic Conference, NordSec 2012. Proceedings, P89, DOI 10.1007/978-3-642-34210-3_7
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Mouratidis Haralambos, 2011, Journal of Software, V6, P331, DOI 10.4304/jsw.6.3.331-339
   Mouratidis H., 2002, P AG OR METH WORKSH
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   National Institute of Standards and Technology (NIST), 2012, NIST Special Publication, V800-146
   Paja E, 2013, LECT NOTES COMPUT SC, V8217, P270, DOI 10.1007/978-3-642-41924-9_23
   Pimentel J, 2012, REQUIR ENG, V17, P259, DOI 10.1007/s00766-011-0126-z
   Ranjan P., 2006, ACM SIGSOFT SOFTWARE, V31, P1, DOI DOI 10.1145/1127878.1127886
   Rodríguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schneier B, 1999, DR DOBBS J, V24, P21
   Schumacher M., 2013, Security Patterns: Integrating Security and Systems Engineering
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Suleiman H, 2013, REQUIR ENG, V18, P251, DOI 10.1007/s00766-012-0153-4
   Uzunov AV, 2015, COMPUT STAND INTER, V41, P112, DOI 10.1016/j.csi.2015.02.011
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Xiaofeng Cui, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P547, DOI 10.1109/ICIS.2012.32
   YODER J, 1997, 4 C PATT LANG PROGR
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 72
TC 10
Z9 10
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1253
EP 1285
DI 10.1007/s10270-016-0560-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000009
DA 2024-07-18
ER

PT J
AU Solé, M
   Carmona, J
AF Sole, Marc
   Carmona, Josep
TI Encoding process discovery problems in SMT
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process discovery; SMT application; Causal nets; Petri nets
ID MODULO THEORIES; PROCESS MODELS; SOLVERS; SAT
AB Information systems, which are responsible for driving many processes in our lives (health care, the web, municipalities, commerce and business, among others), store information in the form of logs which is often left unused. Process mining, a discipline in between data mining and software engineering, proposes tailored algorithms to exploit the information stored in a log, in order to reason about the processes underlying an information system. Akey challenge in process mining is discovery: Given a log, derive a formal process model that can be used afterward for a formal analysis. In this paper, we provide a general approach based on satisfiability modulo theories (SMT) as a solution for this challenging problem. By encoding the problem into the logical/arithmetic domains and using modern SMT engines, it is shown how two separate families of process models can be discovered. The theory of this paper is accompanied with a tool, and experimental results witness the significance of this novel view of the process discovery problem.
C1 [Sole, Marc] CA Technol, CA Strateg Res, Barcelona, Spain.
   [Carmona, Josep] Univ Politecn Cataluna, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Carmona, J (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM kwisath@gmail.com; jcarmona@cs.upc.edu
RI Carmona, Josep/E-6823-2010
FU Spanish Ministry for Economy and Competitiveness (MINECO); European
   Union (FEDER funds) under Grant COMMAS [TIN2013-46181-C2-1-R]
FX This work has been partially supported by funds from the Spanish
   Ministry for Economy and Competitiveness (MINECO) and the European Union
   (FEDER funds) under Grant COMMAS (Ref. TIN2013-46181-C2-1-R).
CR Argelich J, 2006, J HEURISTICS, V12, P375, DOI 10.1007/s10732-006-7234-9
   Badouel E., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P529
   Bergenthum R, 2007, LECT NOTES COMPUT SC, V4714, P375
   Bernardinello L., 1993, Applications and Theory of Petri Nets 1993. 14th International Conference Proceedings, P89
   Bose RPJC, 2012, LECT NOTES BUS INF P, V99, P165
   Buijs J., 2012, Evolutionary Computation (CEC), 2012 IEEE Congress on, P1, DOI DOI 10.1109/CEC.2012.6256458
   Buijs JCAM, 2014, INT J COOP INF SYST, V23, DOI 10.1142/S0218843014400012
   Carmona J, 2010, IEEE T COMPUT, V59, P371, DOI 10.1109/TC.2009.131
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   DEMEDEIROS AKA, 2003, COOPIS DOA ODBASE, V2888, P389
   EHRENFEUCHT A, 1990, ACTA INFORM, V27, P315, DOI 10.1007/BF00264611
   Ganesh V., 2007, Proceedings of the International Conference in Computer Aided Verification (CAV 2007), P524
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Guo QL, 2015, LECT NOTES COMPUT SC, V9253, P109, DOI 10.1007/978-3-319-23063-4_7
   Jha S, 2009, LECT NOTES COMPUT SC, V5643, P668, DOI 10.1007/978-3-642-02658-4_53
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Mans RS, 2008, COMM COM INF SC, V25, P425, DOI 10.1007/978-3-540-92219-3_32
   Metzner A, 2005, 11th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications, Proceedings, P409, DOI 10.1109/RTCSA.2005.90
   Munoz-Gama J., 2010, BUSINESS PROCESS MAN
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Rozinat A, 2009, IEEE T SYST MAN CY C, V39, P474, DOI 10.1109/TSMCC.2009.2014169
   Sole M., 2012, Application and theory of petri nets - 33rd international conference, PETRI NETS 2012, hamburg, germany, june 25-29, V7347, P51
   Sole M., 2013, Proceedings of the 28th annual ACM symposium on applied computing, SAC'13, coimbra, portugal, march 18-22, 2013, P1418, DOI [10.1145/2480362.2480628, DOI 10.1145/2480362.2480628]
   Solé M, 2013, IEEE T KNOWL DATA EN, V25, P192, DOI 10.1109/TKDE.2011.192
   Solé M, 2011, FUND INFORM, V113, P343, DOI 10.3233/FI-2011-612
   Solé M, 2010, LECT NOTES COMPUT SC, V6128, P226, DOI 10.1007/978-3-642-13675-7_14
   Srivastava S, 2009, LECT NOTES COMPUT SC, V5643, P702, DOI 10.1007/978-3-642-02658-4_58
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2010, SOFTW SYST MODEL, V9, P87, DOI 10.1007/s10270-008-0106-z
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst W, 2011, LECT NOTES COMPUT SC, V6901, P28, DOI 10.1007/978-3-642-23217-6_3
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.61
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3536, P48
   van der Werf JMEM, 2008, LECT NOTES COMPUT SC, V5062, P368, DOI 10.1007/978-3-540-68746-7_24
   van Dongen BF, 2009, LECT NOTES COMPUT SC, V5460, P225
   Verbeek H., 2008, IEEE DATA ENG B, V31, P45
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Wen L, 2007, DATA MIN KNOWL DISC, V15, P145, DOI 10.1007/s10618-007-0065-y
   Wolfman SA, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P310
NR 43
TC 3
Z9 3
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1055
EP 1078
DI 10.1007/s10270-016-0536-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lüddecke, D
   Seidl, C
   Schneider, J
   Schaefer, I
AF Luddecke, Daniel
   Seidl, Christoph
   Schneider, Jens
   Schaefer, Ina
TI Modeling context-aware and intention-aware in-car infotainment systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Context-aware; Intention-aware; Modeling; Infotainment
ID NETWORKS
AB It is fundamental to understand users' intentions to support them when operating a computer system with a dynamically varying set of functions, e.g., within an in-car infotainment system. The system needs to have sufficient information about its own and the user's context to predict those intentions. Although the development of current in-car infotainment systems is already model-based, explicitly gathering and modeling contextual information and user intentions is currently not supported. However, manually creating software that understands the current context and predicts user intentions is complex, error-prone and expensive. Model-based development can help in overcoming these issues. In this paper, we present an approach for modeling a user's intention based on Bayesian networks. We support developers of in-car infotainment systems by providing means to model possible user intentions according to the current context. We further allow modeling of user preferences and show how the modeled intentions may change during run-time as a result of the user's behavior. We demonstrate feasibility of our approach using an industrial case study of an intention-aware in-car infotainment system. Finally, we show how modeling of contextual information and modeling user intentions can be combined by using model transformation.
C1 [Luddecke, Daniel; Schneider, Jens] Volkswagen AG, Letterbox 011-17770, D-38440 Wolfsburg, Germany.
   [Seidl, Christoph; Schaefer, Ina] Tech Univ Carolo Wilhelmina Braunschweig, D-38106 Braunschweig, Germany.
C3 Volkswagen; Volkswagen Germany; Braunschweig University of Technology
RP Lüddecke, D (corresponding author), Volkswagen AG, Letterbox 011-17770, D-38440 Wolfsburg, Germany.
EM daniel.lueddecke@volkswagen.de; c.seidl@tu-braunschweig.de;
   jens.schneider5@volkswagen.de; i.schaefer@tu-braunschweig.de
CR Ablabmeier M, 2007, LECT NOTES COMPUT SC, V4557, P561
   [Anonymous], 2004, W3C MEMB SUBMISS
   [Anonymous], 2000, SURVEY CONTEXT AWARE
   [Anonymous], 1763, M F R S PHILOS T, DOI DOI 10.1098/RSTL.1763.0053
   [Anonymous], CHANGING BEHAV PREVE
   [Anonymous], 1985, Technical Report, DOI DOI citeulike-article-id:3847802
   [Anonymous], P ASER 03 INT WORKSH
   Bandyopadhyay T., 2013, P ALG FDN ROB 10, P475
   Ben-Gal I., 2008, Bayesian Networks
   Berndt H, 2008, PROCEEDINGS OF THE 11TH INTERNATIONAL IEEE CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS, P1189, DOI 10.1109/ITSC.2008.4732630
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   COOPER GF, 1992, MACH LEARN, V9, P309, DOI 10.1007/BF00994110
   Doshi A, 2011, IEEE INT C INTELL TR, P1892, DOI 10.1109/ITSC.2011.6083128
   Garzon S. R., 2012, Proceedings of the Eighth International Conference on Intelligent Environments (IE 2012), P371, DOI 10.1109/IE.2012.19
   Guha R, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P275, DOI 10.1145/2684822.2685309
   Iba S, 2003, IROS 2003: PROCEEDINGS OF THE 2003 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-4, P3479
   Liu A, 2000, DRIVER BEHAV RECOGNI
   Lüddecke D, 2014, LECT NOTES COMPUT SC, V8767, P484, DOI 10.1007/978-3-319-11653-2_30
   Salvucci D.D., 2004, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V48, P2228, DOI DOI 10.1177/154193120404801905
   Schauffele J., 2013, Automotive Software Engineering: Grundlagen, Prozesse, Methoden und Werkzeuge effizient einsetzen
   SINGH M, 1995, INT J APPROX REASON, V12, P111, DOI 10.1016/0888-613X(94)00016-V
   W3C, 2012, OWL 2 WEB ONTOLOGY L
   Winner H., 2009, Handbuch Fahrerassistenzsysteme. Grundlagen
   Yin HZ, 2015, ACM T INFORM SYST, V33, DOI 10.1145/2699670
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 28
TC 2
Z9 2
U1 2
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 973
EP 987
DI 10.1007/s10270-016-0543-z
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000011
DA 2024-07-18
ER

PT J
AU Krings, S
   Leuschel, M
AF Krings, Sebastian
   Leuschel, Michael
TI Inferring physical units in formal models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE B-method; Event-B; Physical units; Model checking; Abstract
   interpretation
AB Most state-based formal methods, like B, Event-B or Z, provide support for static typing. However, these methods and the associated tools lack support for annotating variables with (physical) units of measurement. There is thus no obvious way to reason about correct or incorrect usage of such units. We present a technique that analyzes the usage of physical units throughout B and Event-B machines infers missing units and notifies the user of incorrectly handled units. The technique combines abstract interpretation with classical animation, constraint solving and model checking and has been integrated into the ProB validation tool, both for classical B and for Event-B. It provides source-level feedback about errors detected in the models. We also describe how to extend our approach to TLA , an untyped formal language. We provide an in-depth empirical evaluation and demonstrate that our technique scales up to real-life industrial models.
C1 [Krings, Sebastian; Leuschel, Michael] Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
C3 Heinrich Heine University Dusseldorf
RP Krings, S (corresponding author), Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
EM krings@cs.uni-duesseldorf.de; leuschel@cs.uni-duesseldorf.de
RI Krings, Sebastian/X-1199-2019
OI Krings, Sebastian/0000-0001-6712-9798
FU EU [287563]; DFG
FX Part of this research has been sponsored by the EU funded FP7 project
   287563 (ADVANCE) and the DFG funded research project GEPAVAS II.
CR Abrial Jean-Raymond, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P178, DOI 10.1007/978-3-642-30885-7_13
   Abrial J.R., 1996, B BOOK ASSIGNING PRO, DOI DOI 10.1017/CBO9780511624162
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2006, LECT NOTES COMPUT SC, V4260, P588
   Anand M, 2006, 2006 IEEE CONFERENCE ON COMPUTER-AIDED CONTROL SYSTEM DESIGN, VOLS 1 AND 2, P56
   [Anonymous], MOD LANG SPEC VERS 3
   [Anonymous], 1997, ART COMPUTER PROGRAM
   [Anonymous], 2010, LOGICAL ANAL HYBRID
   Baader F., 2001, HDB AUTOMATED REASON, VI, P447
   Back RJ, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P147, DOI 10.1109/APSEC.2002.1182984
   Barrett Clark W., 2010, P 8 INT WORKSH SAT M
   BOUTE RT, 1992, ACM T PROGR LANG SYS, V14, P127, DOI 10.1145/128861.128862
   Bridgman P.W., 1922, Dimensional analysis
   ClearSy, 2009, AT B 4 1 REL NOT
   Collins JB, 2008, LECT NOTES ARTIF INT, V5144, P370, DOI 10.1007/978-3-540-85110-3_32
   Cousot P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P316, DOI 10.1145/263699.263744
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cunis Roman., 1992, ACM SIGPLAN Lisp Pointers, VV., P21, DOI DOI 10.1145/1039991.1039994
   Gibbings JC, 2011, DIMENSIONAL ANALYSIS, P1, DOI 10.1007/978-1-84996-317-6
   Hansen D., 2012, LNCS, V7321, P24, DOI 10.1007/978-3-642-30729-43
   Hayes I. J., 1995, Formal Aspects of Computing, V7, P329, DOI 10.1007/BF01211077
   Kennedy Andrew, 2010, Central European Functional Programming School. Third Summer School (CEFP 2009). Revised Selected Lectures, P268, DOI 10.1007/978-3-642-17685-2_8
   Krings S., 2013, LNCS, V8137
   Lamport L, 1999, ACM T PROGR LANG SYS, V21, P502, DOI 10.1145/319301.319317
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Lingxiao Jiang, 2006, 28th International Conference on Software Engineering Proceedings, P262, DOI 10.1145/1134285.1134323
   Lockwood GH, 1985, Technical report
   Owre Sam, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P356, DOI 10.1007/978-3-642-32759-9_30
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   Roy P., 2010, NASA FORM METH S, P149
   Stephenson A.G., 1999, Mars climate orbiter mishap investigation board phase 1 report
   Thompson A., 2008, INT SYST UN SI
   UMRIGAR ZD, 1994, SIGPLAN NOTICES, V29, P135, DOI 10.1145/185009.185036
   van Delft A, 1999, SOFTWARE PRACT EXPER, V29, P605, DOI 10.1002/(SICI)1097-024X(199906)29:7<605::AID-SPE249>3.0.CO;2-W
   Wand Mitchell., 1991, ComputationalLogic: Essays in Honor ofAlan Robinson, P479
NR 38
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 25
EP 47
DI 10.1007/s10270-015-0458-0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500004
DA 2024-07-18
ER

PT J
AU Farwick, M
   Schweda, CM
   Breu, R
   Hanschke, I
AF Farwick, Matthias
   Schweda, Christian M.
   Breu, Ruth
   Hanschke, Inge
TI A situational method for semi-automated Enterprise Architecture
   Documentation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Enterprise Architecture; Documentation; Maintenance; Model; Automation;
   Situational method
AB The business capabilities of modern enterprises crucially rely on the enterprises' information systems and underlying IT infrastructure. Hence, optimization of the business-IT alignment is a key objective of Enterprise Architecture Management (EAM). To achieve this objective, EAM creates, maintains and analyzes a model of the current state of the Enterprise Architecture. This model covers different concepts reflecting both the business and the IT perspective and has to be constantly maintained in response to ongoing transformations of the enterprise. In practice, EA models grow large and are difficult to maintain, since many stakeholders from various backgrounds have to contribute architecture-relevant information. EAM literature and two practitioner surveys conducted by the authors indicate that EA model maintenance, in particular the manual documentation activities, poses one of the biggest challenges to EAM in practice. Current research approaches target the automation of the EA documentation based on specific data sources. These approaches, as our systematic literature review showed, do not consider enterprise specificity of the documentation context or the variability of the data sources from organization to organization. The approach presented in this article specifically accounts for these factors and presents a situational method for EA documentation. It builds on four process-supported documentation techniques which can be selected, composed and applied to design an organization-specific documentation process. The techniques build on a meta-model for EA documentation, which is implemented in an EA-repository prototype that supports the configuration and execution of the documentation techniques. We applied our documentation method assembly process at a German insurance company and report the findings from this case study in particular regarding practical applicability and usability of our approach.
C1 [Farwick, Matthias; Breu, Ruth] Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
   [Schweda, Christian M.; Hanschke, Inge] Iteratec GmbH, D-82008 Munich, Unterhaching, Germany.
C3 University of Innsbruck
RP Farwick, M (corresponding author), Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
EM matthias.farwick@uibk.ac.at; christian.schweda@iteratec.de;
   ruth.breu@uibk.ac.at; inge.hanschke@iteratec.de
CR Ahlemann F., 2012, Strategic enterprise architecture management: Challenges, best practices, and future developments, P265
   Aier S., 2011, 10 INT C WIRTSCH WI
   Aier S, 2010, ENTERP MODELLING INF, V5, P58
   Alegria A., 2010, 2010 4 INT C RES CHA
   [Anonymous], 2009, AIS T ENTERP SYST
   [Anonymous], SCANDINAVIAN J ED RE
   [Anonymous], 2011, 13 INT C ENT INF SYS
   [Anonymous], 2011, STATE OF THE ART ENT
   [Anonymous], AMCIS 2010 P
   [Anonymous], 2009, LNI
   Arbab F, 2007, ENTERP MODELLING INF, V2, P40
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brückmann T, 2011, LECT NOTES COMPUT SC, V6903, P287, DOI 10.1007/978-3-642-23798-0_31
   Buckl S., 2011, AM C INS SYST AMCIS
   Buckl S., 2009, PATTERN LANGUAGES PR
   Buckl S., 2009, TECHNICAL REPORT
   Buckl S, 2011, LECT NOTES BUS INF P, V72, P136
   Buckl S, 2007, ENTERP MODELLING INF, V2, P3
   Buschle M., 2012, AM C INS SYST AMCIS
   Chen W., 2013, 15 INT C ENT INF SYS
   Engels G., 2008, Quasar Enterprise: Anwendungslandschaften serviceorientiert gestalten
   Farwick M., 2013, P 46 HAW INT C SYST
   Farwick M, 2012, LECT NOTES BUS INF P, V131, P129
   Farwick M, 2012, IEEE INT ENTERP DIST, P1, DOI 10.1109/EDOC.2012.11
   Farwick M, 2011, IEEE INT ENTERP, P340, DOI 10.1109/EDOCW.2011.19
   Fischer R, 2007, ENTERP MODELLING INF, V2, P14
   Frank U., 2009, P 9 OOPSL DOM SPEC M
   Fuchs-Kittowski F, 2008, LECT NOTES COMPUT SC, V5411, P151, DOI 10.1007/978-3-540-92831-7_13
   Gericke A., 2006, LECT NOTES INFORM, P227
   Gutzwiller M., 1994, CC RIM REFERENZMODEL
   Hanschke I., 2010, Strategic IT Management
   Happel H., 2008, P PRIMIUM SUBC MULT
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Hauder M, 2012, LECT NOTES BUS INF P, V131, P21
   Henderson-Sellers B, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P479, DOI 10.1109/ASWEC.2008.67
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Kaisler S.H., 2005, HICSS'05, p224b, DOI DOI 10.1109/HICSS.2005.241
   Keller W., 2012, IT UNTERNEHMENSARCHI
   Lankhorst M., 2013, ENTERPRISE ARCHITECT, V36
   Laube A., 2012, CONCEPT ARCHITECTURE
   McClure D., 2006, INTEGRATING ENTERPRI
   Moser C., 2009, STRATEGY, P19
   OMG, 2006, MET OBJ FAC MOF COR
   Roth S., 2013, INT C WIRTSCH AIS LE, P911
   Roth S., 2013, AMCIS 2013 P
   Schmidt A., 2008, METHOD ESTABLISHING
   Sousa P, 2011, LECT NOTES BUS INF P, V89, P134
   ter Doest H., 2004, TOOL SUPPORT ENTERPR
   Wigand R., 1999, INFORM ORG MANAGEMEN
   Winter K., 2010, 2010 P MCIS
   Winter Robert, 2006, ENT DISTR OBJ COMP C
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 52
TC 25
Z9 30
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 397
EP 426
DI 10.1007/s10270-014-0407-3
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800007
DA 2024-07-18
ER

PT J
AU Outmazgin, N
   Soffer, P
AF Outmazgin, Nesi
   Soffer, Pnina
TI A process mining-based analysis of business process work-arounds
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Business process work-arounds; Process mining; Compliance checking
ID CONFORMANCE CHECKING
AB Business process work-arounds are specific forms of incompliant behavior, where employees intentionally decide to deviate from the required procedures although they are aware of them. Detecting and understanding the work-arounds performed can guide organizations in redesigning and improving their processes and support systems. Existing process mining techniques for compliance checking and diagnosis of incompliant behavior rely on the available information in event logs and emphasize technological capabilities for analyzing this information. They do not distinguish intentional incompliance and do not address the sources of this behavior. In contrast, the paper builds on a list of generic types of work-arounds found in practice and explores whether and how they can be detected by process mining techniques. Results obtained for four work-around types in five real-life processes are reported. The remaining two types are not reflected in events logs and cannot be currently detected by process mining. The detected work-around data are further analyzed for identifying correlations between the frequency of specific work-around types and properties of the processes and of specific activities. The analysis results promote the understanding of work-around situations and sources.
C1 [Outmazgin, Nesi; Soffer, Pnina] Univ Haifa, IL-31905 Haifa, Israel.
C3 University of Haifa
RP Soffer, P (corresponding author), Univ Haifa, IL-31905 Haifa, Israel.
EM Nesi@Zefat.ac.il; spnina@is.haifa.ac.il
RI soffer, pnina/P-8893-2019
CR Aalst WMPvd, 2011, WMPVD PROCESS MINING
   Abdullah NorrisSyed, 2010, PACIS 2010, P36
   Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   Adriansyah A., 2011, 2011 11th International Conference on Application of Concurrency to System Design (ACSD), P57, DOI 10.1109/ACSD.2011.19
   Adriansyah A, 2011, LECT NOTES BUS INF P, V66, P122
   [Anonymous], 2012, WIRES DATA MINING KN, DOI DOI 10.1002/WIDM.1045
   [Anonymous], 2010, ARXIV10096119
   Calders T., 2009, P 2009 ACM S APPL CO, P1451
   De Weerdt J, 2011, LECT NOTES BUS INF P, V66, P158
   El Kharbili M., 2008, Modellierung betrieblicher Informationssysteme-Modellierung zwischen SOA und Compliance Management-27.-28. November 2008 Saarbrucken, P107
   El Kharbili M., 2012, P 8 AS PAC C CONC MO, V130, P23
   Fahland Dirk, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P345, DOI 10.1007/978-3-642-23059-2_26
   Ly L.T., 2013, P 17 IEEE INT EDOC C
   Montali M, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658376
   Munoz-Gama J., 2011, CIDM 2011
   Muñoz-Gama J, 2010, LECT NOTES COMPUT SC, V6336, P211, DOI 10.1007/978-3-642-15618-2_16
   Outmazgin N., 2012, LNBIP, P426
   Outmazgin N, 2013, LECT NOTES BUS INF P, V147, P48
   Poelmans S., 1999, SIGGROUP Bulletin, V20, P11
   Poelmans S, 1998, WORKSH AD WORKFL SYS
   Ramezani E., 2013, WORKING PAPER
   Ramezani E., 2013, P CAISE 2013
   Ramezani E, 2012, LECT NOTES BUS INF P, V100, P459
   Ramezani E, 2012, LECT NOTES COMPUT SC, V7481, P262, DOI 10.1007/978-3-642-32885-5_21
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   van der Aalst Aal04bW.M.P., 2004, P 5 WORKSHOP BUSINES, P138
   van der Aalst WMP, 2011, INFORM SYST, V36, P450, DOI 10.1016/j.is.2010.09.001
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   Vardi Y., 2004, MISBEHAVIOR ORG THEO
NR 30
TC 15
Z9 16
U1 0
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 309
EP 323
DI 10.1007/s10270-014-0420-6
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800003
DA 2024-07-18
ER

PT J
AU França, JBD
   Netto, JM
   Carvalho, JDS
   Santoro, FM
   Baiao, FA
   Pimentel, M
AF dos Santos Franca, Juliana Baptista
   Netto, Joanne Manhaes
   Carvalho, Juliana do E. S.
   Santoro, Flavia Maria
   Baiao, Fernanda Araujo
   Pimentel, Mariano
TI KIPO: the knowledge-intensive process ontology
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Knowledge-intensive process; Knowledge-intensive process ontology;
   Process representation; Foundational ontology
AB A business process is a sequence of activities that aims at creating products or services, granting value to the customer, and is generally represented by a business process model. Business process models play an important role in bridging the gap between the business domain and the information technology, increasing the weight of business modeling as first step of software development. However, the traditional way of representing a process is not suitable for the so-called Knowledge-Intensive Processes (KIP). This type of process comprises sequences of activities based on intensive acquisition, sharing, storage and (re)use of knowledge, so that the amount of value added to the organization depends on the actor knowledge. Current research in the literature points to the lack of approaches to make this kind of process explicit and strategies for handling information that is necessary for their understanding and support. The goal of this paper is to present KIPO-a knowledge-intensive process ontology, which encompasses a clear and semantically rich definition of KIPs, and to discuss the results of a case study to evaluate KIPO with regard to its applicability and capability of making all relevant knowledge embedded in a KIP explicit.
C1 [dos Santos Franca, Juliana Baptista; Netto, Joanne Manhaes; Carvalho, Juliana do E. S.; Santoro, Flavia Maria; Baiao, Fernanda Araujo; Pimentel, Mariano] Fed Univ State Rio de Janeiro UNIRIO, Dept Appl Informat, Rio De Janeiro, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro
RP França, JBD (corresponding author), Fed Univ State Rio de Janeiro UNIRIO, Dept Appl Informat, Rio De Janeiro, Brazil.
EM juliana.franca@uniriotec.br; joanne.netto@uniriotec.br;
   juliana.carvalho@uniriotec.br; flavia.santoro@uniriotec.br;
   fernanda.baiao@uniriotec.br; pimentel@uniriotec.br
RI Baiao, Fernanda/HTS-8857-2023; França, Juliana B. S./N-6886-2013;
   Pimentel, Mariano/I-6775-2016
OI Baiao, Fernanda/0000-0001-7932-7134; Franca, Juliana/0000-0001-6300-8139
CR Abecker A, 2001, DECOR CONSORTIUM DEC
   Abecker A., 2004, THESIS U KARLSRUHE G
   [Anonymous], 7 EUR JAP C INF MOD
   [Anonymous], 2005, Ontological foundations for structural conceptual models
   [Anonymous], 2001, KNOWLEDGE SYSTEMS LA
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   Businska L, 2012, LECT NOTES BUS INF P, V107, P186
   Cabral L., 2009, 4 INT WORKSH SEM BUS
   Di Ciccio C., 2012, INT WORKSH KNOWL INT
   Di Ciccio C., 2011, HCI KDD
   Eppler M.J., 1999, ACM SPEC INT GROUP C
   Franca JBS, 2012, INT C COMP SUPP COOP
   Giurca A., 2006, P SEM BUS PROC MAN W
   Gronau N, 2005, J UNIVERS COMPUT SCI, V11, P452
   Gronau N., 2004, Business Process Management
   Guarino N, 1995, INT J HUM-COMPUT ST, V43, P625, DOI 10.1006/ijhc.1995.1066
   Guizzardi G., 2008, REV IEEE AM LATINA, V6, P244
   Guizzardi G., 2008, AN 11 WORKSH IB AMB
   Hill C, 2006, IBM SYST J, V45, P663, DOI 10.1147/sj.454.0663
   Korherr B., 2006, Proceedings of the 1st IFIP International Conference on Research and Practical Issues of Enterprise Information Systems
   Maldonado M. U., 2008, THESIS U FEDERAL SAN
   Man H., 2009, BPTRENDS
   Moura E.V., 2013, IEEE INT C COMP SUPP, V1, P1
   Netto J.M., 2013, IEEE INT C COMP SUPP, V1, P1, DOI DOI 10.1109/CSCWD.2013.6580961
   Oliveira F.F., 2009, MSc dissertation
   Papadopoulos G, 2003, J HIGH ENERGY PHYS, DOI 10.1108/13673270310477261
   Papavassiliou G., 2002, 3 EUR C ORG KNOWL LE, V3, P5
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   RICHTERVONHAGEN C, 2005, J UNIVERSAL KNOWLEDG, V2, P148
   ROLLAND C, 1995, INFORM SYST, V20, P337, DOI 10.1016/0306-4379(95)00018-Y
   Santoro FM, 2010, 15 IFIP WG8 3 INT C
   SCHLENOFF C, PROCESS SPECIFICATIO
   Schreiber G., 2002, KNOWLEDGE ENG MANAGE
   STROHMAIER M, 2007, P 40 HAW INT C SYST
   Strohmaier M, 2005, KNOWL PROCESS MANAG, V12, P171, DOI 10.1002/kpm.227
   Supulniece I, 2010, LECT NOTES BUS INF P, V50, P69
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   Wagner G., 2004, WI 04 P 2004 IEEE WI
   Wiig KarlM., 1995, KNOWLEDGE MANAGEMENT
   Yin R.K., 2011, Qualitative research from start to finish
   [No title captured]
   [No title captured]
   [No title captured]
NR 43
TC 33
Z9 33
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1127
EP 1157
DI 10.1007/s10270-014-0397-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200006
DA 2024-07-18
ER

PT J
AU Carré, B
   Vanwormhoudt, G
   Caron, O
AF Carre, Bernard
   Vanwormhoudt, Gilles
   Caron, Olivier
TI From subsets of model elements to submodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Submodel; Set-theoretic formalization; Model extraction; Model
   composition
ID UML; FRAMEWORK
AB Model-driven engineering (MDE) generalized the status of models from documentation or model-driven architecture (MDA) modeling steps to full artifacts, members of a so-called structured "model space". We concentrate here on the submodel relationship which contributes a lot to this structuring effort. Many works and MDE practices resort to this notion and call for its precise characterization, which is the intent of this paper. A typical situation is model management through repositories. We start from the definition of a model as a set of model elements plus a set of dependency constraints that it asserts over these elements. This allows to isolate the notions of closed, covariant and invariant submodels. As a major result, we show that submodel transitivity can be guaranteed thanks to submodel invariance. This formalization offers keys to analyze operations which manipulate submodels. For example, we deeply study the operator which consists in extracting a model from another one, when selecting some subset of its elements. The same can be applied to many other model operations and the last part of the paper is dedicated to a synthesis on related works which could profit from this characterization. More practically, we show how the results were exploited in our Eclipse modeling environment.
C1 [Carre, Bernard; Vanwormhoudt, Gilles; Caron, Olivier] Univ Lille 1, UMR CNRS 8022, LIFL, F-59655 Villeneuve Dascq, France.
   [Vanwormhoudt, Gilles] Inst TELECOM, Villeneuve Dascq, France.
C3 Universite de Lille; IMT - Institut Mines-Telecom; IMT Atlantique
RP Carré, B (corresponding author), Univ Lille 1, UMR CNRS 8022, LIFL, F-59655 Villeneuve Dascq, France.
EM Bernard.Carre@lifl.fr; Gilles.Vanwormhoudt@lifl.fr;
   Olivier.Caron@lifl.fr
OI Carre, Bernard/0000-0002-7299-9461; Caron, Olivier/0000-0002-7007-2769
CR Acher Mathieu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P424, DOI 10.1109/ASE.2011.6100089
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   [Anonymous], 2005, WORKSH MDWE 2005
   [Anonymous], 2003, AUXILIARY CONSTRUCTS
   [Anonymous], LNCS
   [Anonymous], P 1 INT WORKSH TOW M
   [Anonymous], MET FAC MOF 2 0 QUER
   Appukuttan B.K., 2002, TECHNICAL REPORT
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Baniassad E, 2004, PROC INT CONF SOFTW, P158, DOI 10.1109/ICSE.2004.1317438
   Blouin A, 2011, LECT NOTES COMPUT SC, V6981, P62, DOI 10.1007/978-3-642-24485-8_6
   Caron O, 2004, LECT NOTES COMPUT SC, V3273, P27
   Caron O, 2003, LECT NOTES COMPUT SC, V2817, P164
   Caron O, 2009, LECT NOTES BUS INF, V33, P215
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   D'Souza D., 1999, OBJECTS CATALYSIS AP
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   Etien A., 2010, P 2010 ACM S APPL CO, P2237
   France R., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P311
   France R.B., 2003, P AOSD WORKSH AOM AS
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Klein Jacques., 2006, AOSD, P27
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Kühne T, 2010, LECT NOTES COMPUT SC, V6394, P31
   Lahire P, 2007, LECT NOTES COMPUT SC, V4735, P498
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Levendovszky T, 2009, SOFTW SYST MODEL, V8, P501, DOI 10.1007/s10270-009-0118-3
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Melnik Sergey., 2003, SIGMOD C, P193, DOI DOI 10.1145/872757.872782
   Muller A, 2005, LECT NOTES COMPUT SC, V3748, P130
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Sen S., 2010, SOFTW SYST MODEL
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Siikarla M., 2006, Nordic Journal of Computing, V13, P180
   Solberg A., 2005, P 4 WORKSH SOFTW MOD
   Sriplakich P, 2006, PROC IEEE INT CONF S, P244
   Sriplakich P, 2006, LECT NOTES COMPUT SC, V4199, P631
   Sriplakich P, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P674
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
NR 49
TC 7
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 861
EP 887
DI 10.1007/s10270-013-0340-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400021
DA 2024-07-18
ER

PT J
AU Parrino, BC
   Galeotti, JP
   Garbervetsky, D
   Frias, MF
AF Cuervo Parrino, Bruno
   Galeotti, Juan Pablo
   Garbervetsky, Diego
   Frias, Marcelo F.
TI TacoFlow: optimizing SAT program verification using dataflow analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE SAT-based verification; Dataflow analysis; Java-like programs
   verification
ID FRAMEWORK; ALLOY
AB In previous work, we presented TACO, a tool for efficient bounded verification. TACO translates programs annotated with contracts to a SAT problem which is then solved resorting to off-the-shelf SAT-solvers. TACO may deem propositional variables used in the description of a program initial states as being unnecessary. Since the worst-case complexity of SAT (a known NP problem) depends on the number of variables, most times this allows us to obtain significant speed ups. In this article, we present TacoFlow, an improvement over TACO that uses dataflow analysis in order to also discard propositional variables that describe intermediate program states. We present an extensive empirical evaluation that considers the effect of removing those variables at different levels of abstraction, and a discussion on the benefits of the proposed approach.
C1 [Cuervo Parrino, Bruno; Garbervetsky, Diego] UBA, FCEyN, Dept Comp, Buenos Aires, DF, Argentina.
   [Galeotti, Juan Pablo] Univ Saarland, D-66123 Saarbrucken, Germany.
   [Garbervetsky, Diego; Frias, Marcelo F.] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Frias, Marcelo F.] Inst Tecnol Buenos Aires, Dept Software Engn, Buenos Aires, DF, Argentina.
C3 University of Buenos Aires; Saarland University; Consejo Nacional de
   Investigaciones Cientificas y Tecnicas (CONICET)
RP Garbervetsky, D (corresponding author), UBA, FCEyN, Dept Comp, Buenos Aires, DF, Argentina.
EM bcuervo@dc.uba.ar; galeotti@cs.uni-saarland.de; diegog@dc.uba.ar;
   mfrias@itba.edu.ar
OI Garbervetsky, Diego/0000-0003-4180-7196
FU PICT-PAE [2278]; UBACYT [W0813, 20020110200075]; CONICET [PIP955]; PIP
   [11220110100596CO]; LIA INFINIS; EA ANCOME; MEALS [295261]; 
   [PICT-1774];  [PICT-2351]
FX We thank the anonymous reviewers for their insightful comments and
   suggestions that help us improving the paper. This work is partially
   supported by PICT-PAE 2278, PICT-1774, PICT-2351, UBACYT W0813, UBACYT
   20020110200075, CONICET PIP955, PIP 11220110100596CO, LIA INFINIS, EA
   ANCOME, and MEALS 295261.
CR Alpern B., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P1, DOI 10.1145/73560.73561
   Belt J, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P355, DOI 10.1145/1595696.1595762
   Biere A, 2009, SAT 2009 COMP EV BOO
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Blanc N, 2008, LECT NOTES COMPUT SC, V4963, P467, DOI 10.1007/978-3-540-78800-3_36
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Chalin P, 2006, LECT NOTES COMPUT SC, V4111, P342
   Clarke E, 2005, LECT NOTES COMPUT SC, V3440, P570
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Crawford J, 1996, MOR KAUF R, P148
   Danhua Shao, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P408, DOI 10.1109/ISSRE.2010.27
   Dennis G, 2008, LECT NOTES COMPUT SC, V5295, P130, DOI 10.1007/978-3-540-87873-5_13
   Dolby J., 2007, P 6 JOINT M EUR SOFT, P95
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Galeotti J.P., 2010, THESIS U BUENOS AIRE
   Galeotti Juan P., 2010, Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010, P25, DOI [DOI 10.1145/1831708.1831712, 10.1145/1831708.1831712]
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Ivancic F, 2005, LECT NOTES COMPUT SC, V3576, P301
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   NIELSON F, 1982, ACTA INFORM, V18, P265, DOI 10.1007/BF00263194
   Nielson F., 1999, Principles of Program Analysis
   Post H, 2009, SOFTW TEST VERIF REL, V19, P155, DOI 10.1002/stvr.399
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Siddiqui JH, 2009, LECT NOTES COMPUT SC, V5885, P88, DOI 10.1007/978-3-642-10373-5_5
   Taghdiri M., 2006, P 14 ACM SIGSOFT INT, P276
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   Yessenov K, 2009, THESIS MIT
NR 35
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 45
EP 63
DI 10.1007/s10270-014-0401-9
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Alves, ELG
   Machado, PDL
   Ramalho, F
AF Alves, Everton L. G.
   Machado, Patricia D. L.
   Ramalho, Franklin
TI Automatic generation of built-in contract test drivers
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven testing; Built-in contract testing; MDA
AB Automatic generation of platform-independent and -dependent built-in contract test drivers that check pairwise interactions between client and server components is presented, focusing on the built-in contract testing (BIT) method and the model-driven testing approach. Components are specified by UML diagrams that define the contract between client and server, independent of a specific platform. MDA approaches are applied to formalize and perform automatic transformations from a platform-independent model to a platform-independent test architecture according to a BIT profile. The test architecture is mapped to Java platform models and then to test code. All these transformations are specified by a set of transformation rules written in the Atlas Transformation Language (ATL) that are automatically performed by the ATL engine. The solution named the MoBIT tool is applied to case studies in order to investigate the expected benefits and challenges to be faced.
C1 [Alves, Everton L. G.; Machado, Patricia D. L.; Ramalho, Franklin] Fed Univ Campina Grande UFCG, Software Practices Lab SPLab, Campina Grande, Brazil.
C3 Universidade Federal de Campina Grande
RP Machado, PDL (corresponding author), Fed Univ Campina Grande UFCG, Software Practices Lab SPLab, Campina Grande, Brazil.
EM everton@copin.ufcg.edu.br; patricia@computacao.ufcg.edu.br;
   franklin@computacao.ufcg.edu.br
RI Machado, Patricia/B-5346-2009
OI Machado, Patricia/0000-0002-0661-0067
FU CNPq/Brazil [484643/2011-8, 560014/2010-4, RH-TVD024/2008]; National
   Institute of Science and Technology for Software Engineering -
   CNPq/Brasil [573964/2008-4]
FX This work was supported by CNPq/Brazil grants 484643/2011-8 and
   560014/2010-4. Also, this work was partially supported by the National
   Institute of Science and Technology for Software Engineering
   http://www.ines.org.br, funded by CNPq/Brasil, grant 573964/2008-4.
   First author was supported by CAPES/Brazil, grant RH-TVD024/2008.
CR Aboulsamh M, 2011, INFORMATION SYSTEMS DEVELOPMENT: ASIAN EXPERIENCES, P269, DOI 10.1007/978-1-4419-7355-9_23
   *AMMA PROJ, 2005, ATL TRANSF LANG
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], FORMAL050707 OMG
   [Anonymous], COMPONENT SOFTWARE S
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], COMPONENT SOFTWARE S
   Atkinson C., 2002, P ICSR WORKSH COMP B
   Baker P., 2004, P 8 C QUAL ENG SOFTW, P181
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Barbero M., 2006, JAVAABSTRACTSYNTAX
   Barbosa DL, 2007, INT J SOFTW ENG KNOW, V17, P339, DOI 10.1142/S0218194007003276
   Belinfante A, 2010, LECT NOTES COMPUT SC, V6015, P266, DOI 10.1007/978-3-642-12002-2_21
   Berger B., 1997, MODEL DRIVEN TESTING
   Born Marc, 2004, P 1 EUR WORKSH MOD D, P97
   Briand L. C., 2006, 28th International Conference on Software Engineering Proceedings, P92, DOI 10.1145/1134285.1134300
   Dai Z., 2004, P 2 EUR WORKSH MOD D
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Duenas J.C., 2004, P 1 EUR WORKSH MOD D
   EISELT HA, 1995, OPER RES, V43, P231, DOI 10.1287/opre.43.2.231
   Engels G., 2006, LNCS, V4364
   Gross H.G., 2005, TESTING COMMERCIAL O
   Gross HG, 2003, LECT NOTES COMPUT SC, V2693, P159
   HECKEL R, 2003, ELECT NOTES THEOR CO, V82
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Ledo A., 2008, JAVACG JAVA CODE GEN
   Li Liuying, 1999, Proceedings Technology of Object-Oriented Languages and Systems (Cat. No.PR00393), P273, DOI 10.1109/TOOLS.1999.796494
   Lima H., 2007, SBCARS, P47
   Lohmann M., 2007, Test and Analysis of Web Services, P173
   Mlynarski Michael, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P327, DOI 10.1109/ICST.2010.35
   Mlynarski M., 2009, P 6 INT WORKSH MOD D
   Murthy P.V.R., 2006, P 2006 INT WORKSHOP, P75
   *OBJ MAN GROUP, 2007, FORMAL070205 OMG
   Object Management Group, 2007, PTC070707 OMG
   Object Management Group, 2005, PTC20050606 OMG
   Object Management Group, 2006, FORMAL060101 OMG
   Pretschner A., 2004, INT J SOFTW TOOLS TE, V5, P140, DOI DOI 10.1007/S10009-003-0128-3
   Rocha A.C.O., 2010, P 22 IFIP INT C TEST
   Shafique M., 2010, SCE1004 CARL U
   Siegl S., 2011, P C DES AUT TEST EUR
   Tretmans J, 2011, LECT NOTES COMPUT SC, V6659, P297, DOI 10.1007/978-3-642-21455-4_9
   Utting M., 2007, PRACTICAL MODEL BASE
   Weissleder H.D.S., 2010, THESIS HUMBOLDT U BE
   WeiSSleder Stephan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P117, DOI 10.1109/ICST.2010.28
NR 47
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1141
EP 1165
DI 10.1007/s10270-012-0282-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600012
DA 2024-07-18
ER

PT J
AU Giese, H
   Hildebrandt, S
   Lambers, L
AF Giese, Holger
   Hildebrandt, Stephan
   Lambers, Leen
TI Bridging the gap between formal semantics and implementation of triple
   graph grammars
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID MODEL TRANSFORMATIONS; SYNCHRONIZATION; COMPLETENESS; CORRECTNESS;
   EFFICIENT
AB The correctness of model transformations is a crucial element for model-driven engineering of high-quality software. A prerequisite to verify model transformations at the level of the model transformation specification is that an unambiguous formal semantics exists and that the implementation of the model transformation language adheres to this semantics. However, for existing relational model transformation approaches, it is usually not really clear under which constraints particular implementations really conform to the formal semantics. In this paper, we will bridge this gap for the formal semantics of triple graph grammars (TGG) and an existing efficient implementation. While the formal semantics assumes backtracking and ignores non-determinism, practical implementations do not support backtracking, require rule sets that ensure determinism, and include further optimizations. Therefore, we capture how the considered TGG implementation realizes the transformation by means of operational rules, define required criteria, and show conformance to the formal semantics if these criteria are fulfilled. We further outline how static and runtime checks can be employed to guarantee these criteria.
C1 [Giese, Holger; Hildebrandt, Stephan; Lambers, Leen] Univ Potsdam, Hasso Plattner Inst, D-14482 Potsdam, Germany.
C3 University of Potsdam
RP Hildebrandt, S (corresponding author), Univ Potsdam, Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
EM holger.giese@hpi.uni-potsdam.de; stephan.hildebrandt@hpi.uni-potsdam.de;
   leen.lambers@hpi.uni-potsdam.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X; Lambers, Leen/0000-0001-6937-5167
FU Deutsche Forschungsgemeinschaft
FX This work was developed in the course of the project-Correct Model
   Transformations-Hasso Plattner Institut, Universit t Potsdam and was
   published on its behalf and funded by the Deutsche
   Forschungsgemeinschaft.
   http://www.hpi.uni-potsdam.de/giese/projekte/kormoran.html?L=1.
CR Amelunxen C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P807, DOI 10.1145/1368088.1368206
   [Anonymous], 37 U POTSD H PLATTN
   [Anonymous], THESIS TU BERLIN
   [Anonymous], 2006, MONOGRAPHS THEORETIC
   [Anonymous], HDB GRAPH GRAMMARS C
   Bapodra M., 2010, GRAPH MODEL TRANSFOR
   Becker B, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P33, DOI 10.1109/ASEW.2008.4686291
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   de Lara J., 2002, P 4 INT C ENT INF SY
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P178, DOI 10.1007/978-3-540-87405-8_13
   Ehrig H, 2009, LECT NOTES COMPUT SC, V5795, P241, DOI 10.1007/978-3-642-04425-0_18
   Ehrig Hartmut., 2008, Proceedings of the Third International Workshop on Graph and Model Transformations, GRaMoT'08, P9
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Giese H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P19, DOI 10.1109/MoDeVVa.2010.14
   Giese H., 2012, 57 U POTSD H PLATTN
   Giese H., 2008, P 3 INT WORKSH GRAPH
   Giese H., 2009, 28 U POTSD H PLATTNE
   Giese H., 2009, ELECT COMMUNICATIONS, V18
   Giese H., 2009, SOFTW SYST MODEL SOS, V8
   Giese H., 2006, P 3 INT WORKSH MOD D, P78
   Giese H, 2010, LECT NOTES COMPUT SC, V5765, P555, DOI 10.1007/978-3-642-17322-6_24
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Hermann F, 2010, LECT NOTES COMPUT SC, V6372, P155
   Hermann Frank, 2010, P 1 INT WORKSH MOD D, P22, DOI [10.1145/1866272.1866277, DOI 10.1145/1866272.1866277]
   ITU International Telecommunication Union, 2002, P 2 INT FUJ DAYS 200
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kindler E., 2004, TECHNICAL REPORT, P35
   Klar F, 2010, LECT NOTES COMPUT SC, V5765, P141, DOI 10.1007/978-3-642-17322-6_8
   Kuster J.M., 2006, Software and Systems Modeling, V5, P233, DOI [10.1007/s10270-006-0018-8, DOI 10.1007/S10270-006-0018-8]
   Lambers L., 2012, P 1 INT WOR IN PRESS
   Lambers L, 2008, LECT NOTES COMPUT SC, V5214, P162, DOI 10.1007/978-3-540-87405-8_12
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Object Management Group, 2008, MOF 2 0 QVT 1 0 SPEC
   Orejas F, 2010, LECT NOTES COMPUT SC, V6372, P43
   Orejas F, 2009, LECT NOTES COMPUT SC, V5728, P383, DOI 10.1007/978-3-642-03741-2_26
   Schäfer W, 2004, LECT NOTES COMPUT SC, V3147, P48
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Vogel T, 2010, LECT NOTES COMPUT SC, V6002, P124
NR 42
TC 18
Z9 21
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 273
EP 299
DI 10.1007/s10270-012-0247-y
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000014
DA 2024-07-18
ER

PT J
AU Garousi, V
AF Garousi, Vahid
TI Classification and trend analysis of UML books (1997-2009)
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Survey; Statistical study; Classification; Trend analysis; UML; Books
AB Technical books of each subject area denote the level of maturity and knowledge demand in that area. According to the Google Books database, about 208 Unified Modeling Language (UML) books have been published from its inception in 1997 until 2009. While various book reviews are frequently published in various sources (e.g., IEEE Software Bookshelf), there are no studies to classify UML books into meaningful categories. Such a classification can help researchers in the area to identify trends and also reveal the level of activity in each sub-area of UML. The statistical survey reported in this article intends to be a first step in classification and trend analysis of the UML books published from 1997 to 2009. The study also sheds light on the quantity of books published in different focus areas (e.g., UML's core concepts, patterns, tool support, Object Constraint Language and Model-Driven Architecture) and also on different application domains (e.g., database modeling, web applications, and real-time systems). The trends of book publications in each sub-area of UML are also used to track the level of maturity, to identify possible Hype cycles and also to measure knowledge demand in each area.
C1 Univ Calgary, Dept Elect & Comp Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Garousi, V (corresponding author), Univ Calgary, Dept Elect & Comp Engn, Software Qual Engn Res Grp SoftQual, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM vgarousi@ucalgary.ca
OI Garousi, Vahid/0000-0001-6590-7576
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [341511-07]; Alberta Ingenuity [200600673]
FX This project was supported by the Discovery Grant no. 341511-07 from the
   Natural Sciences and Engineering Research Council of Canada (NSERC) and
   also by the Alberta Ingenuity New Faculty Award no. 200600673.
CR Alleman G., UML TOPICS
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], OBJECT ORIENTED PROG
   ARLOW J., 2004, ENTERPRISE PATTERNS
   Arlow Jim., 2005, UML 2 UNIFIED PROCES
   Arrington C.T., 2003, ENTERPRISE JAVA UML
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Baram-Tsabari A., 2009, Public Understand. Sci, V1, P1
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   BFar R, 2005, MOBILE COMPUTING PRINCIPLES: DESIGNING AND DEVELOPING MOBILE APPLICATIONS WITH UML AND XML, P1
   BOGGS W, 1999, MASTERING UML RATION
   Conallen J., 2002, BUILDING WEB APPL UM
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Douglass BrucePowell., 2004, REAL TIME UML ADV UM
   DUFFY DJ, 2004, DOMAIN ARCHITECTURES
   Fenn J., 1995, LEAP HYPE CYCLE
   Filev A., 2002, PROFESSIONAL UML USI
   Garland J., 2002, LARGE SCALE SOFTWARE
   Garousi V., VISUALIZATION DATA S
   Gartner Group, 2006, HYP CYCL EM TECHN
   Gartner Inc, UND HYP CYCL
   Ginsberg J, 2009, NATURE, V457, P1012, DOI 10.1038/nature07634
   Google, NEW CHAPT GOOGL BOOK
   Google, GOOGL BOOKS DAT
   Goucher A., THEY TEST SOFTWARE M
   GRAND M, 1998, PATTERNS JAVA CATALO
   Grimm C., 1996, LANGUAGES SYSTEM SPE
   Gross H.-G., 2004, COMPONENT BASED SOFT
   Hansen J E., 2004, Enterprise Development with Visual Studio
   IBM Collaborative User Experience Research Group, MAN EYES
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Lavin P., 2006, OBJECT ORIENTED PHP
   Lee R.C., 1997, UML C PRACTICAL GUID
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Martin G, 2005, UML for SOC Design, P1, DOI 10.1007/0-387-25745-4_1
   McLaughlin Brett., 2006, Head First: Object-Oriented Analysis and Design
   Muller P-A., 1997, INSTANT UML
   Naiburg EricJ., 2001, AW OBJ TECHNOL S, V1st
   Oestereich B, 2002, Developing software with UML: object-oriented analysis and design in practice
   PAPAJORGJI PJ, 2005, SOFTWARE ENG TECHNIQ
   Pender T., 2003, UML BIBLE
   Quatrani T., 2006, VISUAL MODELING IBM
   Rech J., 2007, ACM SIGSOFT Software Engineering Notes, V32, P1, DOI [10.1145/1234741.1234765, DOI 10.1145/1234741.1234765]
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Schach S.R., 1999, CLASSICAL OBJECT ORI, V4th
   Scott M., 1997, UML DISTILLED APPL S
   Sekula J.M., 1998, ITERATIVE UML DEV US
   Sturm J., 1999, VB6 UML DESIGN DEV
   Surveyer J.B., UML BOOKS REV
   Tanaka A., 2004, CONTEXTUALIZED UML P
   Texel P.P., 1997, USE CASES COMBINED B
   Torpey D., BOOK REV APPL UML PA
   Unhelkar B, 2005, VERIFICATION AND VALIDATION FOR QUALITY OF UML 2.0 MODELS, P1, DOI 10.1002/0471734322
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   Webb G.K., 2009, ISSUES INFORM SYST, V2, P82
   Weilkiens Tim., 2006, UML 2 CERTIFICATION
   Weisfeld M.A., 2004, The object-oriented thought process. Developer's library
   Willard B, 2007, COMPUT STAND INTER, V29, P69, DOI 10.1016/j.csi.2005.12.006
   Zetie C., 2010, MDA IS DOA PARTLY TH
NR 60
TC 5
Z9 5
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 273
EP 285
DI 10.1007/s10270-011-0189-9
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kuhlmann, M
   Hamann, L
   Gogolla, M
   Büttner, F
AF Kuhlmann, Mirco
   Hamann, Lars
   Gogolla, Martin
   Buettner, Fabian
TI A benchmark for OCL engine accuracy, determinateness, and efficiency
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE OCL; Benchmark; UML; MDE; Accuracy; Determinateness; Efficiency
AB Since several years, the Object Constraint Language (OCL) is a central component in modeling and transformation languages like the Unified Modeling Language, the Meta Object Facility, and Query View Transformation. Consequently, approaches MDE (Model-Driven Engineering) depend on this language. OCL is present not only in areas influenced by the OMG but also in the Eclipse Modeling Framework (EMF). Thus the quality of OCL and its realization in tools seems to be crucial for the success of model-driven development. Surprisingly, up to now a benchmark for OCL to measure quality properties has not been proposed. This paper puts forward in the first part the concepts of a comprehensive OCL benchmark. Our benchmark covers (1) OCL engine accuracy (e.g., for the handling of the undefined value, the use of variables and the implementation of OCL standard operations), (2) OCL engine determinateness properties (e.g., for the collection operations 'any' and 'flatten'), and (3) OCL engine efficiency (for data type and user-defined operations). In the second part, this paper empirically evaluates the proposed benchmark concepts by examining several OCL tools. The paper clarifies a number of differences in handling particular language features and under specifications in the OCL standard.
C1 [Kuhlmann, Mirco; Hamann, Lars; Gogolla, Martin; Buettner, Fabian] Univ Bremen, Database Syst Grp, Dept Comp Sci, D-28334 Bremen, Germany.
C3 University of Bremen
RP Kuhlmann, M (corresponding author), Univ Bremen, Database Syst Grp, Dept Comp Sci, D-28334 Bremen, Germany.
EM mk@informatik.uni-bremen.de; lhamann@informatik.uni-bremen.de;
   gogolla@informatik.uni-bremen.de; green@informatik.uni-bremen.de
CR Afanasiev L., 2006, INT WORKSH PERF EV D
   Akehurst D., 2008, KMF OCL LIB
   ATL-Team, 2008, ATL DEV TOOLS
   Bunyakiati P., 2007, CERTIFICATION SOFTWA, P724
   Chiorean D., 2008, OCLE TEAM OBJECT CON
   Clavel M., 2008, 8 OCL WORKSH UML MOD
   Dresden-OCL-Team, 2008, DRESD OCL TOOLK
   Flake S, 2002, LECT NOTES COMPUT SC, V2263, P150
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2008, LECT NOTES COMPUT SC, V5301, P446, DOI 10.1007/978-3-540-87875-9_32
   Gray M., CONFORMANCE TESTING
   Hein C., 2008, OPEN SOURCE LIB OCL
   Kermeta-Team, 2008, KERM BREATH LIF YOUR
   Kleppe A., 2008, OCL TOOL PRECISE UML
   Kuhlmann M., 2010, OCL BENCHMARK
   Kuhlmann M., 2008, ELECT COMMUNICATIONS, V9
   National Institute of Standards and Technology, C TEST SUIT SOFTW
   OMG, 2009, PTC20090502 OMG
   *OMG, 2006, FORMAL060501 OMG
   Pfaller Christian, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P364, DOI 10.1109/ICSTW.2008.28
   RoclET-Team, 2008, WELC ROCLET
   Schürr A, 2002, LECT NOTES COMPUT SC, V2263, P21
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   VMTS-Team, 2008, VIS MOD TRANSF SYST
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Ziemann P, 2003, LECT NOTES COMPUT SC, V2890, P351
NR 28
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 165
EP 182
DI 10.1007/s10270-010-0174-8
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300004
DA 2024-07-18
ER

PT J
AU Eramo, R
   Malavolta, I
   Muccini, H
   Pelliccione, P
   Pierantonio, A
AF Eramo, Romina
   Malavolta, Ivano
   Muccini, Henry
   Pelliccione, Patrizio
   Pierantonio, Alfonso
TI A model-driven approach to automate the propagation of changes among
   Architecture Description Languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Architectural languages interoperability; Model transformation; Model
   synchronization; Automation; Metamodelling
ID FRAMEWORK
AB As it is widely recognized, a universal notation accepted by any software architect cannot exist. This caused a proliferation of architecture description languages (ADLs) each focussing on a specific application domain, analysis type, or modelling environment, and with its own specific notations and tools. Therefore, the production of a software architecture description often requires the use of multiple ADLs, each satisfying some stakeholder's concerns. When dealing with multiple notations, suitable techniques are required in order to keep models in a consistent state. Several solutions have been proposed so far but they lack in convergence and scalability. In this paper, we propose a convergent change propagation approach between multiple architectural languages. The approach is generic since it depends neither on the notations to synchronize nor on their corresponding models. It is implemented within the Eclipse modelling framework and we demonstrate its usability and scalability by experimenting it on well known architectural languages.
C1 [Eramo, Romina; Malavolta, Ivano; Muccini, Henry; Pelliccione, Patrizio; Pierantonio, Alfonso] Univ Aquila, Dipartimento Informat, I-67100 Laquila, Italy.
C3 University of L'Aquila
RP Pelliccione, P (corresponding author), Univ Aquila, Dipartimento Informat, Via Vetoio, I-67100 Laquila, Italy.
EM romina.eramo@univaq.it; ivano.malavolta@univaq.it;
   henry.muccini@univaq.it; patrizio.pelliccione@univaq.it;
   alfonso.pierantonio@univaq.it
RI Pelliccione, Patrizio/Q-5118-2019; Pelliccione, Patrizio/A-4105-2008;
   Malavolta, Ivano/E-9018-2017
OI Pelliccione, Patrizio/0000-0002-5438-2281; Pelliccione,
   Patrizio/0000-0002-5438-2281; Malavolta, Ivano/0000-0001-5773-8346;
   Eramo, Romina/0000-0002-3572-5875; Pierantonio,
   Alfonso/0000-0002-5231-3952; Muccini, Henry/0000-0001-6365-6515
FU Italian Government [2007XKEHFA, RBNE05C3AH]
FX This work was partially supported by the Italian Government under the
   project PRIN 2007 D-ASAP (2007XKEHFA) and the project FIRB 2005 ArtDeco
   (RBNE05C3AH).
CR Åkerholm M, 2007, J SYST SOFTWARE, V80, P655, DOI 10.1016/j.jss.2006.08.016
   [Anonymous], 2000, 1471 IEEE STAND BOAR
   [Anonymous], 1999, Concurrency-state models and Java programs
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Cicchetti A., 2010, P 10 IEEE INT ENT DI, P24
   Cicchetti A, 2009, IEEE ENABL TECHNOL, P149, DOI 10.1109/WETICE.2009.48
   Compuware S., 2003, AD20030807 OMG COMP
   Crnkovic I., 2009, LNCS, V5582
   Dashofy E.M., 2001, WICSA 01
   Dashofy EM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P266, DOI 10.1109/ICSE.2002.1007974
   Di Ruscio D., 2010, ICSE 2010
   Didonet Del Fabro M., 2005, IDM2005
   Edwards G., 2008, ASE 08
   Feiler H.P., 2003, IEEE RTAS WORKSH
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Garlan D., 1997, P CASCON, V97, P169
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Hansson H, 2004, EUROMICRO CONF PROC, P627, DOI 10.1109/EURMIC.2004.1333431
   Hettel T., 2008, P 1 INT C THEOR PRAC
   ISO, 2009, ISOIECWD442010
   Ivers J., 2004, CMUSEI2004TR008
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F., 2006, LNCS, V4037
   Jouault F., 2006, MODELS 2005
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Magee J., 1998, IWSSD 98
   Magree J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P634, DOI 10.1109/ICSE.1999.841063
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mu SC, 2004, LECT NOTES COMPUT SC, V3125, P289
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Perry D.E., 1992, SIGSOFT Soft. Eng. Notes, V17
   Sentilles S, 2009, PROC INT CONF SOFTW, P607, DOI 10.1109/ICSE.2009.5070567
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Tratt L, 2008, J OBJECT TECHNOL, V7, P107, DOI 10.5381/jot.2008.7.3.a3
   Van der Westhuizen C., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P95
   Van Paesschen E, 2005, LECT NOTES COMPUT SC, V3713, P633, DOI 10.1007/11557432_47
   Xiong YF, 2009, LECT NOTES COMPUT SC, V5563, P213, DOI 10.1007/978-3-642-02408-5_15
NR 42
TC 16
Z9 16
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 29
EP 53
DI 10.1007/s10270-010-0170-z
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500005
DA 2024-07-18
ER

PT J
AU Yatake, K
   Katayama, T
AF Yatake, Kenro
   Katayama, Takuya
TI An executable object-oriented semantics and its application to firewall
   verification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Object-Oriented; Theorem proving; Simulation; HOL; ML
ID ENVIRONMENT; PROGRAMS; JAVA; HOL
AB This paper presents a formal executable semantics of object-oriented models. We made it possible to conduct both simulation and theorem proving on the semantics by implementing it within the expressive intersection of the functional programming language ML and the theorem prover HOL. In this paper, we present the definition and implementation of the semantics. We also present a prototype verification tool ObjectLogic which supports simulation and theorem proving on the semantics. As a case study, we show the verification of a practical firewall system.
C1 [Yatake, Kenro; Katayama, Takuya] Japan Adv Inst Sci & Technol, Sch Informat Sci, Nomi, Ishikawa 9231292, Japan.
C3 Japan Advanced Institute of Science & Technology (JAIST)
RP Yatake, K (corresponding author), Japan Adv Inst Sci & Technol, Sch Informat Sci, 1-1 Asahidai, Nomi, Ishikawa 9231292, Japan.
EM k-yatake@jaist.ac.jp; katayama@jaist.ac.jp
CR Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   ALSAMMANE G, 2004, SBCCI 04, P60
   Barthe G, 2001, LECT NOTES COMPUT SC, V2028, P302
   Berghofer S., 2002, Types for Proofs and Programs. International Workshop, TYPES 2000. Selected Papers (Lecture Notes in Computer Science Vol.2277), P24
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Brucker AD, 2008, J AUTOM REASONING, V41, P219, DOI 10.1007/s10817-008-9108-3
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Gouda MG, 2004, INT CON DISTR COMP S, P320, DOI 10.1109/ICDCS.2004.1281597
   Jacobs B, 2004, LECT NOTES COMPUT SC, V3233, P134
   Kaufmann M., 2008, ACL2
   Marché C, 2005, LECT NOTES COMPUT SC, V3603, P179
   Meyer J, 2000, LECT NOTES COMPUT SC, V1785, P63
   Moore JS, 2003, NATO SC S SS III C S, V191, P227
   Naraschewski W, 1998, LECT NOTES COMPUT SC, V1479, P349, DOI 10.1007/BFb0055146
   NIPKOW T, 2000, NATO SCI SERIES F, V175
   Object Management Group (OMG), UN MOD LANG
   PIKE L, 2006, ACL2 06, P1
   POETZSCHHEFFTER A, 1999, ESOP 99, P162
   RAJAN SP, 1993, HOL 92, P527
   Schirmer N, 2005, LECT NOTES COMPUT SC, V3452, P398
   VANDENBERG J, 2000, WADT 99, P1
   von Oheimb D, 2001, CONCURR COMP-PRACT E, V13, P1173, DOI 10.1002/cpe.598
   Warmer J., 1999, AW OBJ TECHNOL S
   Wilding M, 2001, FORM METHOD SYST DES, V18, P233, DOI 10.1023/A:1011217102270
   Yatake K, 2005, LECT NOTES COMPUT SC, V3722, P501
NR 25
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 515
EP 536
DI 10.1007/s10270-010-0160-1
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200006
OA hybrid
DA 2024-07-18
ER

PT J
AU Bernardi, S
   Merseguer, J
   Petriu, DC
AF Bernardi, Simona
   Merseguer, Jose
   Petriu, Dorina C.
TI A dependability profile within MARTE
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID UML; SYSTEM; MODELS; DESIGN
AB The importance of assessing software non-functional properties (NFP) beside the functional ones is well accepted in the software engineering community. In particular, dependability is a NFP that should be assessed early in the software life-cycle by evaluating the system behaviour under different fault assumptions. Dependability-specific modeling and analysis techniques include for example Failure Mode and Effect Analysis for qualitative evaluation, stochastic Petri nets for quantitative evaluation, and fault trees for both forms of evaluation. Unified Modeling Language (UML) may be specialized for different domains by using the profile mechanism. For example, the MARTE profile extends UML with concepts for modeling and quantitative analysis of real-time and embedded systems (more specifically, for schedulability and performance analysis). This paper proposes to add to MARTE a profile for dependability analysis and modeling (DAM). A case study of an intrusion-tolerant message service will offer insight on how the MARTE-DAM profile can be used to derive a stochastic Petri net model for performance and dependability assessment.
C1 [Bernardi, Simona] Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
   [Merseguer, Jose] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
   [Petriu, Dorina C.] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 University of Turin; University of Zaragoza; Carleton University
RP Bernardi, S (corresponding author), Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
EM bernardi@di.unito.it; jmerse@unizar.es; petriu@sce.carleton.ca
RI Merseguer, Jose/A-6028-2012; BERNARDI, SIMONA/L-1456-2014
OI Merseguer, Jose/0000-0001-5538-3553; BERNARDI,
   SIMONA/0000-0002-2605-6243; Petriu, Dorina/0000-0003-4688-9370
FU Spanish Ministry of Science and Technology [DPI2006-15390]; Natural
   Sciences and Engineering Research Council of Canada (NSERC); Italian
   Ministry of the University and Research
FX Authors would like to thank the anonymous referees and the associate
   editors, who reviewed the paper and helped to improve it. This research
   was supported by the project DPI2006-15390 of the Spanish Ministry of
   Science and Technology, the Natural Sciences and Engineering Research
   Council of Canada (NSERC) through its Discovery and Strategic grants,
   and by the project PaCo (Performability-Aware Computing: Logics, Models,
   and Languages) of the Italian Ministry of the University and Research.
CR ADDOUCHE N, 2006, INT C COMP INT MOD C, P17
   ADDOUCHE N, 2004, P INT C SYST MAN CYB, V6, P5209
   Allenby K, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P228
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], UML PROF SCHED PERF
   [Anonymous], P S FORM METH RAILW
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   BEBNARDI S., 2004, P 1 INT S LEV APPL F
   BERNARDI S, 2002, METHODOLOGY GENERATI
   BERNARDI S, 2008, RR0805 U ZAR
   Bernardi S, 2006, IEEE INTERNET COMPUT, V10, P32, DOI 10.1109/MIC.2006.63
   Bernardi S, 2008, LECT NOTES COMPUT SC, V5301, P736, DOI 10.1007/978-3-540-87875-9_51
   Bobbio A, 2003, RELIAB ENG SYST SAFE, V81, P269, DOI 10.1016/S0951-8320(03)00091-7
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   CORTELLESSA V, 2004, P 4 INT WORKSH SOFTW, P197
   D'AMBROGIO A., 2002, P 6 IASTED SOFTW ENG
   Dal Cin M., 2003, Proceedings. Ninth IEEE International Workshop on Object-Oriented Real-Time Dependable Systems, P325
   DENNING PJ, 1978, COMPUT SURV, V10, P225, DOI 10.1145/356733.356735
   Evans M., 1993, STAT DISTRIBUTIONS
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Grassi V, 2007, J SYST SOFTWARE, V80, P528, DOI 10.1016/j.jss.2006.07.023
   Grassi Vincenzo., 2005, WOSP 05 P 5 INT WORK, P25
   HASSAN A., 2005, P ANN REL MAINT S RA
   *INT EL COMM, IEC61508
   *INT EL COMM, IEC6030031
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3778, P320
   Jürjens J, 2003, LECT NOTES COMPUT SC, V2863, P360
   LAGARDE F, 2007, 22 INT C AUT SOFTW E, P445
   Leveson N., 1995, Safeware
   Lyu MichaelR., 1995, Software Fault Tolerance
   Majzik I, 2003, LECT NOTES COMPUT SC, V2677, P219
   Marsan M.A., 1995, MODELLING GEN STOCHA
   MARSAN MA, 1987, ADV PETRI NETS 1987, P132
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   Mustafiz S, 2008, SOFTW SYST MODEL, V7, P487, DOI 10.1007/s10270-008-0084-1
   *OBJ MAN GROUP, 2007, UML PROF MOD AN REAL
   Object Management Group, 2008, UML PROF MOD QUAL SE
   Pai GJ, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/ISSRE.2002.1173261
   PATARICZA A, 2000, WORKSH CRIT SYST HEL
   Sahner R., 1996, PERFORMANCE RELIABIL
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Zoughbi G, 2007, LECT NOTES COMPUT SC, V4735, P574
NR 42
TC 84
Z9 92
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 313
EP 336
DI 10.1007/s10270-009-0128-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800004
DA 2024-07-18
ER

PT J
AU Merayo, MG
   Núñez, M
   Hierons, RM
AF Merayo, Mercedes G.
   Nunez, Manuel
   Hierons, Robert M.
TI Testing timed systems modeled by Stream X-machines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal testing; Timed systems; Stream X-machines
ID DETERMINISTIC IMPLEMENTATION; CONFORMANCE; SPECIFICATION
AB Stream X-machines have been used to specify real systems where complex data structures. They are a variety of extended finite state machine where a shared memory is used to represent communications between the components of systems. In this paper we introduce an extension of the Stream X-machines formalism in order to specify systems that present temporal requirements. We add time in two different ways. First, we consider that (output) actions take time to be performed. Second, our formalism allows to specify timeouts. Timeouts represent the time a system can wait for the environment to react without changing its internal state. Since timeous affect the set of available actions of the system, a relation focusing on the functional behavior of systems, that is, the actions that they can perform, must explicitly take into account the possible timeouts. In this paper we also propose a formal testing methodology allowing to systematically test a system with respect to a specification. Finally, we introduce a test derivation algorithm. Given a specification, the derived test suite is sound and complete, that is, a system under test successfully passes the test suite if and only if this system conforms to the specification.
C1 [Merayo, Mercedes G.; Nunez, Manuel] Univ Complutense Madrid, Dep Sistemas Informat & Computac, E-28040 Madrid, Spain.
   [Hierons, Robert M.] Brunel Univ, Sch Informat Syst & Comp Math, Uxbridge UB8 3PH, Middx, England.
C3 Complutense University of Madrid; Brunel University
RP Merayo, MG (corresponding author), Univ Complutense Madrid, Dep Sistemas Informat & Computac, E-28040 Madrid, Spain.
EM mgmerayo@fdi.ucm.es
RI Núñez, Manuel/B-6889-2008; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Núñez, Manuel/0000-0001-9808-6401; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082; Hierons, Robert/0000-0002-4771-1446
FU Spanish MEC [TIN2006-15578-C02-01]; EPSRC [EP/G032572/1] Funding Source:
   UKRI
FX This paper represents an extended and improved version of [34]. This
   research was partially supported by the Spanish MEC project WEST/FAST
   (TIN2006-15578-C02-01).
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], LECT NOTES COMPUTER
   BAETEN J, 2002, EATCS MONOGRAPH
   Barnard J, 1998, INFORM SOFTWARE TECH, V40, P271, DOI 10.1016/S0950-5849(98)00053-6
   Batth SS, 2007, LECT NOTES COMPUT SC, V4574, P50
   Bogdanov K, 2006, FORM ASP COMPUT, V18, P3, DOI 10.1007/s00165-005-0085-6
   BOSIK BS, 1991, COMPUT NETWORKS ISDN, V22, P7, DOI 10.1016/0169-7552(91)90079-R
   Brinksma Ed., 2001, MODELING VERIFICATIO, V2067, P187
   Briones LB, 2005, LECT NOTES COMPUT SC, V3785, P264
   Cardell-Oliver R., 2000, Formal Aspects of Computing, V12, P350, DOI 10.1007/s001650070009
   Cardell-Oliver R, 1998, LECT NOTES COMPUT SC, V1486, P251, DOI 10.1007/BFb0055352
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke D, 1997, THIRD INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P199, DOI 10.1109/WORDS.1997.609955
   DAVIES J, 1995, THEOR COMPUT SCI, V138, P243, DOI 10.1016/0304-3975(94)00169-J
   El-Fakih K, 2004, IEEE T SOFTWARE ENG, V30, P425, DOI 10.1109/TSE.2004.31
   En-Nouaary A, 2002, IEEE T SOFTWARE ENG, V28, P1023, DOI 10.1109/TSE.2002.1049402
   FOUCHAL H, 2001, IEEE WORKSH REAL TIM
   HENNESSY M, 1995, INFORM COMPUT, V117, P221, DOI 10.1006/inco.1995.1041
   HESSEL A, 2008, LNCS, V4949, P77, DOI DOI 10.1007/978-3-540-78917-8_
   Hierons RM, 2004, THEOR COMPUT SCI, V323, P191, DOI 10.1016/j.tcs.2004.04.002
   Hierons R, 2008, FORM ASP COMPUT, V20, P597, DOI 10.1007/s00165-008-0087-2
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hierons RM, 2009, J LOGIC ALGEBR PROGR, V78, P98, DOI 10.1016/j.jlap.2008.06.001
   HIGASHINO T, 1999, 12 INT WORKSH TEST C, P197
   HOLCOMBE M, 1998, CORRECT SYSTEMS BUIL
   Ipate F, 2006, THEOR COMPUT SCI, V353, P291, DOI 10.1016/j.tcs.2005.12.002
   Ipate F, 1997, INT J COMPUT MATH, V63, P159, DOI 10.1080/00207169708804559
   Ipate F, 2008, THEOR COMPUT SCI, V403, P176, DOI 10.1016/j.tcs.2008.02.045
   Kefalas P, 2003, INFORM SOFTWARE TECH, V45, P269, DOI 10.1016/S0950-5849(03)00018-1
   KEHRIS E, 2000, SYSTEMS CONTROL THEO, P163
   Krichen M, 2005, LECT NOTES COMPUT SC, V3502, P209
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   MANDRIOLI D, 1995, ACM T COMPUT SYST, V13, P365, DOI 10.1145/210223.210226
   MERAYO M, 2007, 5 IEEE INT C SOFTW E, P227
   Merayo MG, 2008, IEEE T COMPUT, V57, P835, DOI 10.1109/TC.2008.15
   Merayo MG, 2008, COMPUT NETW, V52, P432, DOI 10.1016/j.comnet.2007.10.002
   Merayo MG, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P201, DOI 10.1109/SEFM.2008.15
   NICOLLIN X, 1992, LECT NOTES COMPUT SC, V575, P376
   PELESKA J, 1997, S AFRICAN COMPUTER J, V19, P53
   PETRENKO A, 1996, 9 IFIP WORKSH TEST C, P00125
   PETRENKO A, 1993, 6 IFIP WORKSH PROT T, P363
   Petrenko A., 2001, Modeling and verification of parallel processes, P196
   Quemada J., 1993, Formal Aspects of Computing, V5, P224, DOI 10.1007/BF01211556
   REED GM, 1988, THEOR COMPUT SCI, V58, P249, DOI 10.1016/0304-3975(88)90030-8
   Rodríguez I, 2008, J LOGIC ALGEBR PROGR, V74, P57, DOI 10.1016/j.jlap.2007.03.002
   Schmaltz J, 2008, LECT NOTES COMPUT SC, V5215, P250, DOI 10.1007/978-3-540-85778-5_18
   Sifakis J., 1977, Measuring, Modelling and Evaluating Computer Systems, P75
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   STANNETT M, 2001, CS200108 SHEFF U DEP
   Tretmans J., 2008, LNCS, V4949, P1, DOI DOI 10.1007/978-3-540-78917-8_
   Uyar MÜ, 2008, IEEE T COMPUT, V57, P274, DOI 10.1109/TC.2007.70772
   Uyar MÜ, 1999, COMPUT NETW, V31, P1967, DOI 10.1016/S1389-1286(99)00007-9
   YI W, 1991, LECT NOTES COMPUT SC, V510, P217
NR 53
TC 11
Z9 11
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 201
EP 217
DI 10.1007/s10270-009-0126-3
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spoto, F
AF Spoto, Fausto
TI Precise null-pointer analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Null-pointer analysis; Java bytecode; Static analysis; Abstract
   interpretation; Automatic software verification
ID JAVA BYTECODE; INFERENCE
AB In Java, C or C++, attempts to dereference the null value result in an exception or a segmentation fault. Hence, it is important to identify those program points where this undesired behaviour might occur or prove the other program points (and possibly the entire program) safe. To that purpose, null-pointer analysis of computer programs checks or infers non-null annotations for variables and object fields. With few notable exceptions, null-pointer analyses currently use run-time checks or are incorrect or only verify manually provided annotations. In this paper, we use abstract interpretation to build and prove correct a first, flow and context-sensitive static null-pointer analysis for Java bytecode (and hence Java) which infers non-null annotations. It is based on Boolean formulas, implemented with binary decision diagrams. For better precision, it identifies instance or static fields that remain always non-null after being initialised. Our experiments show this analysis faster and more precise than the correct null-pointer analysis by Hubert, Jensen and Pichardie. Moreover, our analysis deals with exceptions, which is not the case of most others; its formulation is theoretically clean and its implementation strong and scalable. We subsequently improve that analysis by using local reasoning about fields that are not always non-null, but happen to hold a non-null value when they are accessed. This is a frequent situation, since programmers typically check a field for non-nullness before its access. We conclude with an example of use of our analyses to infer null-pointer annotations which are more precise than those that other inference tools can achieve.
C1 Univ Verona, I-37100 Verona, Italy.
C3 University of Verona
RP Spoto, F (corresponding author), Univ Verona, I-37100 Verona, Italy.
EM fausto.spoto@univr.it
OI Spoto, Fausto/0000-0003-2973-0384
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   ALBERT E, 2008, P 10 WORKSH FORM TEC
   Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   Bloch J., 2004, Jsr 175: A metadata facility for the java programming language
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chalin P, 2007, LECT NOTES COMPUT SC, V4609, P227
   Cielecki Maciej., 2006, Proceedings of the 4th International Symposium on Principles and Practice of Programming in Java (PPPJ), P135, DOI 10.1145/1168054
   Cousot Patrick, 1977, P 4 ACM S PRINC PROG, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   EKMAN T, 2007, LECT NOTES COMPUTER, V4609, P1
   Engelen A. F. M., 2006, THESIS U NIJMEGEN
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fähndrich M, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P337
   Fahndrick M., 2003, P 18 ACM SIGPLAN C O, P302, DOI DOI 10.1145/949305.949332
   Flanagan C, 2001, LNCS, V2021, P500, DOI DOI 10.1007/3-540-45251-6_29
   Hill P. M., 2006, Higher-Order and Symbolic Computation, V19, P415, DOI 10.1007/s10990-006-0481-5
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Hubert L, 2008, LECT NOTES COMPUT SC, V5051, P132, DOI 10.1007/978-3-540-68863-1_9
   LEINO KRM, 2000, 2000002 COMP SYST RE
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Male C, 2008, LECT NOTES COMPUT SC, V4959, P229
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Papi Matthew M., 2008, INT S SOFT TEST AN I, P201
   Payet E, 2007, LECT NOTES COMPUT SC, V4634, P452
   Secci S, 2005, LECT NOTES COMPUT SC, V3672, P320
   Spoto F, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P21, DOI 10.1109/SEFM.2008.8
NR 27
TC 19
Z9 21
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2011
VL 10
IS 2
BP 219
EP 252
DI 10.1007/s10270-009-0132-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 755BL
UT WOS:000289901500006
DA 2024-07-18
ER

PT J
AU Goknil, A
   Kurtev, I
   van den Berg, K
   Veldhuis, JW
AF Goknil, Arda
   Kurtev, Ivan
   van den Berg, Klaas
   Veldhuis, Jan-Willem
TI Semantics of trace relations in requirements models for consistency
   checking and inferencing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements metamodel; Requirements traceability; Inferencing;
   Consistency checking; Reasoning
ID METAMODELING APPROACH; SPECIFICATION
AB Requirements traceability is the ability to relate requirements back to stakeholders and forward to corresponding design artifacts, code, and test cases. Although considerable research has been devoted to relating requirements in both forward and backward directions, less attention has been paid to relating requirements with other requirements. Relations between requirements influence a number of activities during software development such as consistency checking and change management. In most approaches and tools, there is a lack of precise definition of requirements relations. In this respect, deficient results may be produced. In this paper, we aim at formal definitions of the relation types in order to enable reasoning about requirements relations. We give a requirements metamodel with commonly used relation types. The semantics of the relations is provided with a formalization in first-order logic. We use the formalization for consistency checking of relations and for inferring new relations. A tool has been built to support both reasoning activities. We illustrate our approach in an example which shows that the formal semantics of relation types enables new relations to be inferred and contradicting relations in requirements documents to be determined. The application of requirements reasoning based on formal semantics resolves many of the deficiencies observed in other approaches. Our tool supports better understanding of dependencies between requirements.
C1 [Goknil, Arda; Kurtev, Ivan; van den Berg, Klaas; Veldhuis, Jan-Willem] Univ Twente, Software Engn Grp, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Goknil, A (corresponding author), Univ Twente, Software Engn Grp, POB 217, NL-7500 AE Enschede, Netherlands.
EM goknila@ewi.utwente.nl; kurtev@ewi.utwente.nl;
   k.g.vandenberg@ewi.utwente.nl; j.w.veldhuis@student.utwente.nl
RI Van den Berg, Klaas/AAU-8601-2021
OI Kurtev, Ivan/0009-0003-3783-405X
CR AIZENBUDRESHEF N, 2005, ECMDA TW 05, P7
   [Anonymous], 2002, WER
   Baudry B, 2007, IEEE INT ENTERP DIST, P459, DOI 10.1109/EDOC.2007.15
   Brottier E, 2007, IEEE INT ENTERP DIST, P390, DOI 10.1109/EDOC.2007.44
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Cerón R, 2005, LECT NOTES COMPUT SC, V3547, P173
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   DAHLSTEDT AG, 2006, ENG MANAGING SOFTWAR, P95
   Dean M., 2004, OWL WEB ONTOLOGY LAN
   dos Santos Soares M., 2008, J SOFTWARE, V3, P57
   DUFFY D, 1995, LECT NOTES COMPUTER, V932, P68
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2005, INT J SOFTW ENG KNOW, V15, P783, DOI 10.1142/S0218194005002464
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   GOKNIL A, TUTORIAL REQUIREMENT
   GOKNIL A, 2008, 4 ECMDA TRAC WORKSH, P59
   Goknil A, 2008, LECT NOTES COMPUT SC, V5095, P310, DOI 10.1007/978-3-540-69100-6_21
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Heaven W., 2004, IEE Proceedings-Software, V151, P10, DOI 10.1049/ip-sen:20040297
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   Huth MichaelR. A., 2000, LOGIC COMPUTER SCI M
   *IBM, IBM RAT REQUISITEPRO
   IBM Telelogic Doors, IBM TEL DOORS
   *IEEE COMP SOC, GUID SOFTW ENG BOD K
   INCOSE Requirements Management Tool Survey, INCOSE REQ MAN TOOL
   *JEN, SEM WEB FRAM JAVA
   *JGRAPH, JAV GRAPH VIS LAYOUT
   Koch N, 2003, LECT NOTES COMPUT SC, V2722, P497
   Meyer JJC, 1998, SPRING INT SER ENG C, P71
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Navarro E, 2006, J COMPUT INFORM SYST, V46, P67, DOI 10.1080/08874417.2006.11645925
   Noppen J, 2007, LECT NOTES COMPUT SC, V4542, P247
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   *OMG, OMG SYSML SPEC
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Rodrigues O, 2004, LECT NOTES ARTIF INT, V3171, P41
   Supakkul S, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P112, DOI 10.1109/SERA.2005.19
   TENHOVE D, 2009, 5 ECMDA TRAC WORKSH, P17
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   VELDHUIS JW, 2009, THESIS U TWENTE
   Vicente-Chicote C, 2007, J OBJECT TECHNOL, V6, P437, DOI 10.5381/jot.2007.6.9.a22
   VONNETHEN A, 2002, 09501E IESE
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
   TOPTEAM ANAL
   REQUIREMENTS INTERCH
   BORLAND CALIBER ANAL
   TOOL REQUIREMENTS IN
NR 54
TC 35
Z9 43
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 31
EP 54
DI 10.1007/s10270-009-0142-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400003
OA hybrid
DA 2024-07-18
ER

PT J
AU El-Attar, M
   Miller, J
AF El-Attar, Mohamed
   Miller, James
TI Improving the quality of use case models using antipatterns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Use cases; Antipatterns; UML; Use case modeling qualityattributes; OCL
AB Use case (UC) modeling is a popular requirements modeling technique. While these models are simple to create and read; this simplicity is often misconceived, leading practitioners to believe that creating high quality models is straightforward. Therefore, many low quality models that are inconsistent, incorrect, contain premature restrictive design decision and contain ambiguous information are produced. To combat this problem of creating low quality UC models, this paper presents a new technique that utilizes antipatterns as a mechanism for remedying quality problems in UC models. The technique, supported by the tool ARBIUM, provides a framework for developers to define antipatterns. The feasibility of the approach is demonstrated by applying it to a real-world system. The results indicate that applying the technique improves the overall quality and clarity of UC models.
C1 [El-Attar, Mohamed; Miller, James] Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB, Canada.
C3 University of Alberta
RP El-Attar, M (corresponding author), Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB, Canada.
EM melattar@ece.ualberta.ca; jm@ece.ualberta.ca
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Anda B., 2002, SEKE 02, P127
   ANDA B, 2001, P 15 EUR C OBJ OR PR, P402
   ANDERSON E, 1997, ADD SACM SIGPLAN C O
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   [Anonymous], 2002, Use Case Modeling
   [Anonymous], APPLYING USE CASES P
   Armour F., 2000, ADV USE CASE MODELIN
   Berenbach B, 2004, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2004.1317445
   BIDDLE B, 2002, AUST COMPUT SCI COMM, V24, P7
   Boehm BW., 1981, Software Engineering Economics
   CHANDRASEKARAN P, 1997, ADD C OBJ C OR PROGR
   Cockburn A., 1995, Structuring Use Cases with Goals
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Fabbrini F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P97, DOI 10.1109/SEW.2001.992662
   Fantechi A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ICRE.2002.1048518
   FIRESMITH DG, 1999, P TOOLS, V30, P184
   Gilb Tom, 1993, Software inspections
   GOGOLLA M, 2003, P 6 INT C UN MOD LAN
   Gomaa H, 1997, PROCEEDINGS OF THE JOINT WORKSHOP ON PARALLEL AND DISTRIBUTED REAL-TIME SYSTEMS, P34, DOI 10.1109/WPDRTS.1997.637861
   GOMAA H, 2001, DESIGNING SOFTWARE P
   Jaaksi A, 1998, J OBJECT-ORIENT PROG, V10, P58
   Jacobson I, 2003, USE CASES YESTERDAY
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   Kruchten P., 1997, P INT WORKSH COMP BA
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Lilly S, 1999, P TECHN OBJ OR LANG
   MCBEEN P, 2007, USE CASE INSPECTION
   McCoy J.R., 2003, Companion 18th Annual ACM SIGPLAN Conf. Object-Oriented Prog., Syst., Languages, and Appl., P104, DOI DOI 10.1145/949344.949371
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   *OBJ MAN GROUP, 2005, UML SUP SPEC
   Object Management Group, 2002, MOF 2 0 QUERY VIEWS
   Overgraad G., 2005, Use Cases Patterns and Blueprints
   Ren S., 2004, P 6 INT C ENTERPRISE, P173
   REN S, 2003, P 9 OBJ OR INF SYST, P294
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Rosenberg D., 2007, TOP 10 USE CASE MIST
   Rui K., 2003, PROC 25 COMPUTER SCI, P4
   Ryndina O., 2004, CS040600 U CAP TOWN
   *STEAM U ALB LAB W, 2008, US CAS MOD ANT
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   *WIK, 2007, DEF ANT
   WOHLIN C, 1990, SOFTWARE ENG J, V5, P33, DOI 10.1049/sej.1990.0005
   Xu J, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P484
   [No title captured]
   [No title captured]
   [No title captured]
NR 48
TC 26
Z9 30
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2010
VL 9
IS 2
BP 141
EP 160
DI 10.1007/s10270-009-0112-9
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 577YP
UT WOS:000276260200002
DA 2024-07-18
ER

PT J
AU El-Attar, M
   Miller, J
AF El-Attar, Mohamed
   Miller, James
TI Producing robust use case diagrams via reverse engineering of use case
   descriptions
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID REQUIREMENTS
AB In a use case driven development process, a use case model is utilized by a development team to construct an object-oriented software system. The large degree of informality in use case models, coupled with the fact that use casemodels directly affect the quality of all aspects of the development process, is a very dangerous combination. Naturally, informal use case models are prone to contain problems, which lead to the injection of defects at a very early stage in the development cycle. In this paper, we propose a structure that will aid the detection and elimination of potential defects caused by inconsistencies present in use casemodels. The structure contains a small set of formal constructs that will allow use case models to be machine readable while retaining their readability by retaining a large degree of unstructured natural language. In this paper we also propose a process which utilizes the structured use cases to systematically generate their corresponding use case diagrams and vice versa. Finally a tool provides support for the new structure and the new process. To demonstrate the feasibility of this approach, a simple study is conducted using a mock online hockey store system.
C1 [El-Attar, Mohamed; Miller, James] Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB, Canada.
C3 University of Alberta
RP El-Attar, M (corresponding author), Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB, Canada.
EM melattar@ece.ualberta.ca; jm@ece.ualberta.ca
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   Anda B., 2002, SEKE 02, P127
   ANDA B, UNPUB UML 2001
   ANDERSON E, 1997, USE CASE BUSINESS RU
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], OBJECT ADVANTAGE
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   [Anonymous], 2002, Use Case Modeling
   [Anonymous], APPLYING USE CASES P
   Armour F., 2000, ADV USE CASE MODELIN
   BENACHOUR C, 1999, P IEEE S REQ ENG IEE
   BIDDLE B, 2002, P 25 CRPITS, V24
   Boehm BW., 1981, Software Engineering Economics
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CHANDRASEKARAN P, 1997, USE CASE MODELING PO
   COCKBURN A, 1997, J OBJECT ORIENTED PR, V10
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   ELATTAR M, 2006, P 4 ACIS INT C SOFTW
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gilb Tom, 1993, Software inspections
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Gomaa H., 2000, DESIGNING CONCURRENT
   Harwood RJ, 1997, J OBJECT-ORIENT PROG, V9, P54
   Jaaksi A, 1998, J OBJECT-ORIENT PROG, V10, P58
   JOHANSSON A, 2004, P 2 INT C INF TECHN
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Larman C, 2001, Applying UML and Pattern: An Introduction to Object Oriented Analysis and Design and the Unified Process, V2nd
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Mattingly L, 1998, J OBJECT-ORIENT PROG, V11, P77
   MCBREEN P, USE CASE INSPECTION
   *OMG, 2003, UML 2 0 INFR SPEC
   Overgraad G., 2005, Use Cases Patterns and Blueprints
   Paige RF, 2000, INFORM SOFTWARE TECH, V42, P665, DOI 10.1016/S0950-5849(00)00109-9
   *RAT SOFTW, 2002, RAT UN PROC VERS 200
   Ren S., 2004, P 6 INT C ENTERPRISE, P173
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Sommerville I., 1996, Software Engineering, V5th
   Wirfs-Brock R, 1993, DESIGNING SCENARIOS
   WOHLIN C, 1990, SOFTWARE ENG J, V5, P33, DOI 10.1049/sej.1990.0005
   Yourdon E., 1989, STRUCTURED WALKTHROU
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 49
TC 12
Z9 13
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 67
EP 83
DI 10.1007/s10270-006-0039-3
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100005
DA 2024-07-18
ER

PT J
AU Nelson, MAV
   Alencar, PSC
   Cowan, DD
AF Nelson, Maria Augusta V.
   Alencar, Paulo S. C.
   Cowan, Donald D.
TI Informal description and analysis of geographic requirements: an
   approach based on problems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID DATA MODELS
AB Software requirements describe a problem in the real world that a software system is intended to solve. Describing requirements is challenging because usually too much attention is given to the final software product instead of concentrating on the problem itself and the real world. The area of geographic applications is no exception. Existing approaches to software development that are specific to the geographic area, for example, GIS tools, spatial databases, geographic query languages, and spatial data structures, are suitable for designing and implementing geographic applications and are, therefore, solution-oriented. We present a problem-oriented approach for requirements description of geographic applications. Most geographic applications are composed of well-known geographic subproblems. The proposed approach provides classes of common geographic subproblems that can be used to promote analysis and description of real-world problems. Each class of problems is presented as a problem frame showing domain properties, requirements and specifications. The problem frames discussed in this work are based on Jackson's general purpose problem frames and are tailored here for the geographic area. The approach is validated through a case study.
C1 [Nelson, Maria Augusta V.] Pontificia Univ Catolica Minas Gerais, Inst Informat, Belo Horizonte, MG, Brazil.
   [Alencar, Paulo S. C.; Cowan, Donald D.] Univ Waterloo, Sch Comp Sci, Comp Syst Grp, Waterloo, ON N2L 3G1, Canada.
C3 Pontificia Universidade Catolica de Minas Gerais; University of Waterloo
RP Nelson, MAV (corresponding author), Pontificia Univ Catolica Minas Gerais, Inst Informat, Av Afonso Vaz de Melo,N 1200, Belo Horizonte, MG, Brazil.
EM guta@pucminas.br; palencar@csg.uwaterloo.ca; dcowan@csg.uwaterloo.ca
CR ALENCAR PSC, 1997, ENV SOFTWARE SYSTEMS, V2, P244
   [Anonymous], 2000, PROBLEM FRAMES ANAL
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Bedard Y, 1996, COMPUT ENVIRON URBAN, V20, P19, DOI 10.1016/S0198-9715(96)00008-7
   Bedard Y., 1999, Geomatica, Journal of the Canadian Institute of Geomatics, V53, P169
   Berry D. M., 2003, Requirements Engineering, V8, P142, DOI 10.1007/s00766-003-0177-x
   BOOCH G, 1998, UNIFIED MODELING LAN
   Borges KAV, 2001, GEOINFORMATICA, V5, P221, DOI 10.1023/A:1011482030093
   BORGES KAV, 1999, ACM GIS 99, P1
   CALKINS H, 1996, ENTITY RELATIONSHIP
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Friis-Christensen A., 2001, P 9 ACM INT S ADV GE, P2
   GAUSE DC, 1991, EXPLORING REQUIREMEN
   Gervasi V, 2002, SOFTWARE PRACT EXPER, V32, P113, DOI 10.1002/spc.430
   GNTHER O, 1993, IEEE DATA ENG B, V16, P4
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   GUTING RH, 1912, 20 INT C VER LARG DA, P297
   Hadzilacos T., 1997, SIGMOD Record, V26, P24, DOI 10.1145/262762.262766
   Hall J.G., 2005, SOFTW SYST MODEL, V4, P189
   HAMIL D, 2001, YOUR MISSION SHOULD
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   ILES J, 2002, WHY SOME WATERSHED P
   JACKSON M, 1995, PROC INT CONF SOFTW, P15, DOI 10.1145/225014.225016
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jackson M., 1993, PROC IEEE 1 INT S RE, P56
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M. A., 1999, South African Computer Journal, P47
   Kamsties E., 2001, P 1 WORKSH INSP SOFT, P68
   Kosters G, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P245, DOI 10.1109/ICRE.1996.491453
   Kosters G, 1997, INT J GEOGR INF SCI, V11, P307, DOI 10.1080/136588197242293
   Kovitz B.L, 1998, PRACTICAL SOFTWARE R
   LISBOA FJ, 1999, ACM GIS 99, P7
   Maguire D.L., 1991, GEOGRAPHICAL INFORM, P9
   Maiden N. A. M., 1998, Automated Software Engineering, V5, P419, DOI 10.1023/A:1008605412971
   Muehrcke P., 1998, Map Use: Reading, Analysis, and Interpretation, VFourth
   Nelson M, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P306
   Nelson MAV, 2001, ENVIRON MODELL SOFTW, V16, P459, DOI 10.1016/S1364-8152(01)00017-2
   NELSON MAV, 2003, THESIS U WATERLOO WA
   NELSON MAV, 1999, P DOCT S 4 IEEE INT, P31
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   OLIVEIRA J, 1997, GEOINFORMATICA, V1, P29
   OPENSHAW S, 1990, P ASS GEOGR INF C AG
   PARENT C., 1999, P 7 ACM INT S ADV GE, P26, DOI DOI 10.1145/320134.320142
   PRIETODIAZ R, 1989, DOMAIN ANAL ACQUISTI
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Santos I, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P238, DOI 10.1109/ICRE.1996.491452
   Shekhar S, 1997, COMMUN ACM, V40, P103, DOI 10.1145/248448.248465
   Tryfona N., 1999, GeoInformatica, V3, P245, DOI 10.1023/A:1009801415799
   TRYFONA N, 1997, P CASE 97 C BARC, P347
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 52
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2007
VL 6
IS 3
BP 223
EP 245
DI 10.1007/s10270-006-0031-y
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WT
UT WOS:000254667900002
DA 2024-07-18
ER

PT J
AU Lestingi, L
   Manglaviti, A
   Marinaro, D
   Marinello, L
   Askarpour, M
   Bersani, MM
   Rossi, M
AF Lestingi, Livia
   Manglaviti, Andrea
   Marinaro, Davide
   Marinello, Luca
   Askarpour, Mehrnoosh
   Bersani, Marcello M.
   Rossi, Matteo
TI Analyzing the impact of human errors on interactive service robotic
   scenarios via formal verification
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Human-robot interaction; Human errors; Service robotics; Formal
   verification; Formal modeling; Stochastic Hybrid Automata; Statistical
   model checking
ID BEHAVIOR; MODEL
AB Developing robotic applications with human-robot interaction for the service sector raises a plethora of challenges. In these settings, human behavior is essentially unconstrained as they can stray from the plan in numerous ways, constituting a critical source of uncertainty for the outcome of the robotic mission. Application designers require accessible and reliable frameworks to address this issue at an early development stage. We present a model-driven framework for developing interactive service robotic scenarios, allowing designers to model the interactive scenario, estimate its outcome, deploy the application, and smoothly reconfigure it. This article extends the framework compared to previous works by introducing an analysis of the impact of human errors on the mission's outcome. The core of the framework is a formal model of the agents at play-the humans and the robots-and the robotic mission under analysis, which is subject to statistical model checking to estimate the mission's outcome. The formal model incorporates a formalization of different human erroneous behaviors' phenotypes, whose likelihood can be tuned while configuring the scenario. Through scenarios inspired by the healthcare setting, the evaluation highlights how different configurations of erroneous behavior impact the verification results and guide the designer toward the mission design that best suits their needs.
C1 [Lestingi, Livia; Manglaviti, Andrea; Marinaro, Davide; Marinello, Luca; Bersani, Marcello M.] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Via Ponzio 34-5, I-20133 Milan, Italy.
   [Askarpour, Mehrnoosh] McMaster Univ, Dept Comp & Software, Hamilton, ON, Canada.
   [Rossi, Matteo] Politecn Milan, Dipartimento Meccan, Via Privata Giuseppe La Masa 1, I-20156 Milan, Italy.
C3 Polytechnic University of Milan; McMaster University; Polytechnic
   University of Milan
RP Lestingi, L (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Via Ponzio 34-5, I-20133 Milan, Italy.
EM livia.lestingi@polimi.it
OI Lestingi, Livia/0000-0001-8724-1541
FU Politecnico di Milano within the CRUI-CARE Agreement
FX Open access funding provided by Politecnico di Milano within the
   CRUI-CARE Agreement. No funding was received to assist with the
   preparation of this manuscript.
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Anderson JR, 1996, AM PSYCHOL, V51, P355, DOI 10.1037/0003-066X.51.4.355
   [Anonymous], 2014, 13482 ISO
   [Anonymous], 1996, ACM Trans. Comput.-Hum. Interact., DOI 10.1145/235833.236054
   Askarpour, 2020, 2 WORKSHOP FORMAL ME
   Askarpour M, 2019, ROBOT CIM-INT MANUF, V57, P465, DOI 10.1016/j.rcim.2019.01.001
   Baker CL., 2007, P 29 ANN M COGN SCI, V29, P779
   Bobu A, 2020, ACMIEEE INT CONF HUM, P429, DOI 10.1145/3319502.3374811
   Bolton ML, 2019, RELIAB ENG SYST SAFE, V188, P168, DOI 10.1016/j.ress.2019.03.010
   Calude CS, 2016, PHILOS INQ, V4, P37
   Cerone A, 2005, SEFM 2005: Third IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P352, DOI 10.1109/SEFM.2005.19
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   DAVID A, 2015, STTT, V17, P397, DOI DOI 10.1007/S10009-014-0361-Y
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   DeFelice F., 2017, CEUR WORKSH, P23
   Degani A, 2002, HUM FACTORS, V44, P28, DOI 10.1518/0018720024494838
   Di Pasquale V., 2013, Operations Management, V9, P221, DOI DOI 10.5772/55065
   Dougherty E.M., 1988, HUMAN RELIABILITY AN
   EU Robotics, 2020, ROB MULTIANNUAL ROAD
   Feo-Arenis S, 2020, LECT NOTES COMPUT SC, V12136, P78, DOI 10.1007/978-3-030-50086-3_5
   Frey CB, 2017, TECHNOL FORECAST SOC, V114, P254, DOI 10.1016/j.techfore.2016.08.019
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   Givi ZS, 2015, APPL MATH MODEL, V39, P5186, DOI 10.1016/j.apm.2015.03.038
   Grenander U., 1950, Arkiv for matematik, V1, P195, DOI DOI 10.1007/BF02590638
   Griffith CD, 2011, RELIAB ENG SYST SAFE, V96, P1437, DOI 10.1016/j.ress.2011.06.005
   Hollnagel, 1991, HUMAN COMPUTER INTER, P73
   HOLLNAGEL E, 1993, INT J MAN MACH STUD, V39, P1, DOI 10.1006/imms.1993.1051
   Hollnagel E., 1998, Cognitive Reliability and Error Analysis Method (CREAM), DOI DOI 10.1016/B978-008042848-2/50001-4
   Hou LX, 2021, ANN NUCL ENERGY, V151, DOI 10.1016/j.anucene.2020.107969
   Kim MC, 2006, RELIAB ENG SYST SAFE, V91, P191, DOI 10.1016/j.ress.2004.12.003
   Konz S, 1998, INT J IND ERGONOM, V22, P73, DOI 10.1016/S0169-8141(97)00069-3
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Laird John E, 2019, The Soar Cognitive Architecture
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lestingi L., 2020, HRI DESIGN TIME ANAL
   Lestingi L., 2022, INT C FORM METH SOFT
   Lestingi L, 2023, ROBOT AUTON SYST, V163, DOI 10.1016/j.robot.2023.104387
   Lestingi L, 2021, IEEE ACCESS, V9, P136616, DOI 10.1109/ACCESS.2021.3117852
   Lestingi L, 2020, LECT NOTES COMPUT SC, V12310, P303, DOI 10.1007/978-3-030-58768-0_17
   Liu B, 2018, ERGONOMICS, V61, P806, DOI 10.1080/00140139.2017.1416180
   Lyons M., 2004, INT J RISK SAF MED, V16, P223, DOI DOI 10.1038/S41443-021-00415-W
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Pocock S, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P247
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Reason J.T., 1979, Aspects of consciousness, P67
   Ruksenas R, 2014, FORM ASP COMPUT, V26, P1033, DOI 10.1007/s00165-013-0288-1
   Schmidt-Rohr SR, 2008, 2008 17TH IEEE INTERNATIONAL SYMPOSIUM ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION, VOLS 1 AND 2, P635, DOI 10.1109/ROMAN.2008.4600738
   Shin DM, 2006, IEEE T SYST MAN CY A, V36, P685, DOI 10.1109/TSMCA.2005.853490
   Sujan MA, 2020, RELIAB ENG SYST SAFE, V194, DOI 10.1016/j.ress.2018.06.017
   Swain A.D., 1983, Nuclear Power in India: A Comparative Analysis, DOI DOI 10.4324/9780429278303
   Tenorth M, 2013, IEEE INT CONF ROBOT, P4539, DOI 10.1109/ICRA.2013.6631222
   Vicentini F, 2020, IEEE T ROBOT, V36, P42, DOI 10.1109/TRO.2019.2937471
   Williams J. C., 1988, Conference Record for 1988 IEEE Fourth Conference on Human Factors and Power Plants (IEEE Cat. No.88CH2576-7), P436, DOI 10.1109/HFPP.1988.27540
NR 56
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2024
VL 23
IS 2
BP 473
EP 502
DI 10.1007/s10270-023-01125-1
EA AUG 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN0W0
UT WOS:001050031900001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Liu, MY
   Tu, ZY
   Xu, XF
   Wang, ZJ
   Wang, Y
AF Liu, Mingyi
   Tu, Zhiying
   Xu, Xiaofei
   Wang, Zhongjie
   Wang, Yan
TI A data-driven approach for constructing multilayer network-based service
   ecosystem models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Service ecosystem; Multilayer knowledge graph; Service-related event;
   Event mining; Model construction; Evolution
AB Services are flourishing drastically both on the Internet and in the real world. In addition, services have become much more interconnected to facilitate transboundary business collaboration to create and deliver distinct new values to customers. Various service ecosystems come into being and are increasingly becoming a focus in both research and practice. However, due to the lack of widely recognized service ecosystem models and sufficient real data for constructing such models, existing studies on service ecosystems are limited to a very narrow scope and cannot effectively guide the design, optimization, and evolution of service ecosystems. In this paper, we first propose a multilayer network-based service ecosystem model (MSEM), which covers a variety of service-related elements, including stakeholders, channels, functional and nonfunctional features, and domains, and more importantly, structural and evolutionary relations between them. "Events" are introduced to describe the triggers of service ecosystem evolution. Then, we propose a data-driven approach for constructing MSEM from public media news and external data sources. Experiments conducted on real news corpora show that compared with other approaches, our approach can construct large-scale models for real-world service ecosystems with lower cost and higher efficiency.
C1 [Liu, Mingyi; Xu, Xiaofei; Wang, Zhongjie] Harbin Inst Technol, Fac Comp, Harbin, Peoples R China.
   [Tu, Zhiying] Harbin Inst Technol, Fac Comp, Weihai, Peoples R China.
   [Wang, Yan] Macquarie Univ, Sch Comp, Sydney, NSW, Australia.
C3 Harbin Institute of Technology; Harbin Institute of Technology;
   Macquarie University
RP Wang, ZJ (corresponding author), Harbin Inst Technol, Fac Comp, Harbin, Peoples R China.
EM liumy@hit.edu.cn; tzy_hit@hit.edu.cn; xiaofei@hit.edu.cn;
   rainy@hit.edu.cn; yan.wang@mq.edu.au
RI liu, kaiyuan/JHU-0258-2023; Li, Shuyao/JRY-8603-2023; xiao,
   ming/KHT-1774-2024; Liu, Jinyu/JYQ-6274-2024; Xu, Xiaofei/IQS-7571-2023;
   LI, Xiang/JBJ-8387-2023
OI Wang, Yan/0000-0002-5344-1884
FU National Key Research and Development Program of China [2018YFB1402500];
   National Natural Science Foundation of China [61772155, 61832004,
   61802089, 61832014]
FX The research in this paper is partially supported by the National Key
   Research and Development Program of China (No 2018YFB1402500) and the
   National Natural Science Foundation of China (61772155, 61832004,
   61802089, 61832014).
CR Adeleye O., 2019, P AUSTR COMP SCI WEE, P1
   Adeleye O, 2018, LECT NOTES COMPUT SC, V11236, P603, DOI 10.1007/978-3-030-03596-9_44
   [Anonymous], 2012, HDB RES SERVICE ORIE
   Briscoe G, 2006, 2006 1ST BIO-INSPIRED MODELS OF NETWORK, INFORMATION AND COMPUTING SYSTEMS
   Bröring A, 2017, IEEE SOFTWARE, V34, P54, DOI 10.1109/MS.2017.2
   Chapin F.S., 2011, Principles of Terrestrial Ecosystem Ecology, DOI DOI 10.1007/978-1-4419-9504-9
   Chen J., 2021, APPL INTELL, V1
   Chen JD, 2019, PROC INT CONF DATA, P1706, DOI 10.1109/ICDE.2019.00178
   Chen Z, 2020, FUTURE GENER COMP SY, V109, P275, DOI 10.1016/j.future.2020.03.062
   Chen Z, 2017, FUTURE GENER COMP SY, V68, P248, DOI 10.1016/j.future.2016.09.022
   Culotta Aron, 2005, Proceeding of the 20th National Conference on Artificial Intelligenc(AAAI-2005), V2, P746
   Dakiche N, 2019, INFORM PROCESS MANAG, V56, P1084, DOI 10.1016/j.ipm.2018.03.005
   Dini P., 2005, The digital ecosystems research vision: 2010 and beyond
   Hazenberg R, 2016, SOC ENTERP J, V12, P302, DOI 10.1108/SEJ-10-2016-0044
   Huang KM, 2014, IEEE T AUTOM SCI ENG, V11, P906, DOI 10.1109/TASE.2013.2297026
   Kumara I, 2019, P IEEE I C SERV COMP, P108, DOI 10.1109/SCC.2019.00028
   Kumara I, 2018, LECT NOTES COMPUT SC, V11116, P33, DOI 10.1007/978-3-319-99819-0_3
   Kumara I, 2017, IEEE T SERV COMPUT, V10, P9, DOI 10.1109/TSC.2016.2594061
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Ledjiar A, 2017, 2017 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE DEFINED SYSTEMS (SDS), P168, DOI 10.1109/SDS.2017.7939159
   Li JZ, 2009, IEEE T KNOWL DATA EN, V21, P1218, DOI 10.1109/TKDE.2008.202
   Li Z., 2018, arXiv
   Li ZY, 2017, COMM COM INF SC, V774, P40, DOI 10.1007/978-981-10-6805-8_4
   Liu JX, 2022, IEEE T KNOWL DATA EN, V34, P3841, DOI 10.1109/TKDE.2020.3033829
   Liu M, 2020, ARXIV
   Liu MY, 2022, SERV ORIENTED COMPUT, V16, P97, DOI 10.1007/s11761-022-00333-9
   Ma YT, 2021, IEEE T ENG MANAGE, V68, P105, DOI 10.1109/TEM.2019.2961376
   Mingyi Liu, 2020, 2020 International Conference on Service Science (ICSS), P23, DOI 10.1109/ICSS50103.2020.00012
   Molles M., 2015, Ecology: concepts and applications, VFifth
   Pareja A, 2020, AAAI CONF ARTIF INTE, V34, P5363
   Park N, 2022, WSDM'22: PROCEEDINGS OF THE FIFTEENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P794, DOI 10.1145/3488560.3498451
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Ramshaw L. A, 1999, TEXT SPEECH LANG TEC, P157
   Rospocher M, 2016, J WEB SEMANT, V37-38, P132, DOI 10.1016/j.websem.2015.12.004
   Sankar A, 2020, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM '20), P519, DOI 10.1145/3336191.3371845
   Schroth C., 2007, IT Professional, V9, P36, DOI 10.1109/MITP.2007.60
   Shen Yanyao, 2017, P 2 WORKSH REPR LEAR, P252, DOI [DOI 10.18653/V1/W17-2630, 10. 18653/v1/W17-2630]
   Smith T.M., 2012, ELEMENTS ECOLOGY, VSeventh
   Taheri A, 2019, PROCEEDINGS OF THE 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2019), P57, DOI 10.1145/3341161.3342872
   Wang XH, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P1, DOI 10.1109/ICWS.2018.00008
   Willis AJ, 1997, FUNCT ECOL, V11, P268, DOI 10.1111/j.1365-2435.1997.00081.x
   Wittern E, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P41, DOI 10.1109/ICWS.2014.19
   Wu ZH, 2016, IEEE T SERV COMPUT, V9, P664, DOI 10.1109/TSC.2015.2418765
   Xu XF, 2015, COMPUTER, V48, P80, DOI 10.1109/MC.2015.182
   Xue X, 2022, IEEE T SERV COMPUT, V15, P1760, DOI 10.1109/TSC.2020.3016660
   Xue X, 2021, IEEE T SERV COMPUT, V14, P1598, DOI 10.1109/TSC.2019.2917445
   Yin JW, 2022, IEEE INTERNET COMPUT, V26, P51, DOI 10.1109/MIC.2021.3060982
   Yu J, 2017, NEUROCOMPUTING, V257, P1, DOI 10.1016/j.neucom.2017.01.091
   Zhang WP, 2015, IEEE INTELL SYST, V30, P26, DOI 10.1109/MIS.2015.25
   Zhou SY, 2019, MATH PROBL ENG, V2019, DOI 10.1155/2019/1495676
   Zhu P., 2015, Digital master: Debunk the myths of enterprise digital maturity
NR 51
TC 1
Z9 1
U1 1
U2 23
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 919
EP 939
DI 10.1007/s10270-022-01029-6
EA AUG 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000840287700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serna, J
   Day, NA
   Esmaeilsabzali, S
AF Serna, Jose
   Day, Nancy A.
   Esmaeilsabzali, Shahram
TI Dash: declarative behavioural modelling in Alloy with control state
   hierarchy
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Declarative modelling; Transition systems; Alloy; Statecharts
ID OBJECT-Z; STATECHARTS; SEMANTICS; LANGUAGE; CASL; CSP
AB We present Dash, an extension to the Alloy language to model dynamic behaviour using the labelled control state hierarchy of Statecharts. From Statecharts, Dash borrows the concepts to specify hierarchy, concurrency, and communication for describing behaviour in a compositional manner. From Alloy, Dash uses the expressiveness of relational logic and set theory to abstractly and declaratively describe structures, data, and operations. We justify our semantic design decisions for Dash, which carefully mix the usual semantic understanding of control state hierarchy with the declarative perspective. We describe and implement the semantics of a Dash model by translating it to Alloy, taking advantage of Alloy language features. We evaluate our Dash translation and perform model checking analysis, enabled by our translation, in the Alloy Analyzer using several case studies. Dash provides modellers with a language that seamlessly combines the semantics of control-modelling paradigms with Alloy's existing strengths in modelling data and operations abstractly.
C1 [Serna, Jose; Day, Nancy A.; Esmaeilsabzali, Shahram] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Day, NA (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM jserna@uwateiloo.ca; nday@uwaterloo.ca; sesmaeil@uwaterloo.ca
OI Day, Nancy/0000-0002-1422-692X
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We thank Ali Abbassi, Amin Bandali, Sabria Farheen, and Tamjid Hossain
   for their help in discussions regarding Dash and Alloy. This research
   was supported in part by the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR Abrial J.R., 1996, B BOOK ASSIGNING PRO, DOI DOI 10.1017/CBO9780511624162
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2014, Object constraint language (ocl)
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   Biere A, 2003, ADV COMPUT, V58, P117
   Borger Egon, 2012, Abstract State Machines: A Method for High-Level System Design and Analysis
   Chang F. S. H., 2006, 28th International Conference on Software Engineering Proceedings, P312, DOI 10.1145/1134285.1134329
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Clarke EM, 1999, MODEL CHECKING, P1
   Cofer D., 2014, NASACR2014218244
   Cunha A, 2014, LECT NOTES COMPUT SC, V8477, P303, DOI 10.1007/978-3-662-43652-3_29
   de Moura L, 2004, LECT NOTES COMPUT SC, V3114, P496
   Dong JS, 2004, LECT NOTES COMPUT SC, V3308, P483
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   Esmaeilsabzali S, 2010, REQUIR ENG, V15, P235, DOI 10.1007/s00766-010-0102-z
   Fakhroutdinov K., JAVA 6 THREAD STATES
   Farheen S., 2018, THESIS U WATERLOO
   Farheen S, 2020, SOFTW SYST MODEL, V19, P721, DOI 10.1007/s10270-019-00763-8
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Frias MF, 2005, ACM T SOFTW ENG METH, V14, P478, DOI 10.1145/1101815.1101819
   Gruer JP, 2004, J SYST SOFTWARE, V70, P95, DOI 10.1016/S0164-1212(02)00161-9
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kang E, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P22, DOI [10.1109/SEsCPS.2016.012, 10.1145/2897035.2897041]
   Kember M, 2019, IEEE ACM INT WORKS M, P47, DOI 10.1109/MiSE.2019.00015
   Lu Y, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P320, DOI 10.1109/ASE.2004.1342756
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   Maggiolo-Schettini A, 2003, THEOR COMPUT SCI, V290, P465, DOI 10.1016/S0304-3975(01)00381-4
   Mahony B, 1998, PROC INT CONF SOFTW, P95, DOI 10.1109/ICSE.1998.671106
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   McMillan K.L., 1992, The SMV system
   Mota Alexandre, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P235, DOI 10.1007/978-3-319-10431-7_17
   Nissanke N., 1999, FORMAL SPECIFICATION, DOI [10.1007/978-1-4471-0791-0, DOI 10.1007/978-1-4471-0791-0]
   Niu JW, 2003, IEEE T SOFTWARE ENG, V29, P866, DOI 10.1109/TSE.2003.1237169
   Oliveira Gomes Artur, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P235, DOI 10.1007/978-3-030-30942-8_15
   Ostroff, 2017, EECS201702 YORK U
   Reggio G, 2000, LECT NOTES COMPUT SC, V1816, P243
   Regis G, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P969, DOI 10.1145/3106237.3122826
   Reynolds MC, 2013, SCI COMPUT PROGRAM, V78, P327, DOI 10.1016/j.scico.2011.03.008
   Roggenbach M, 2006, THEOR COMPUT SCI, V354, P42, DOI 10.1016/j.tcs.2005.11.007
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seater R., TUTORIAL ALLOY ANAL
   Sekerinski E, 1998, LECT NOTES COMPUT SC, V1393, P182
   Serna J, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P64, DOI 10.1109/REW.2017.70
   Svendsen A, 2010, WIT TRANS BUILT ENV, V114, P245, DOI 10.2495/CR100241
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   UML, 2017, Unified Modeling Language Specification.
   von der Beeck M., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P128
   Wayne H., 2018, FORMALLY SPECIFYING
   Wood J, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P93
   xtext, 2021, XTEXT
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
   Zave P, 2017, IEEE T SOFTWARE ENG, V43, P1144, DOI 10.1109/TSE.2017.2655056
NR 55
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 733
EP 749
DI 10.1007/s10270-022-01012-1
EA AUG 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4G9
UT WOS:000836765000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Snoeck, M
   Wautelet, Y
AF Snoeck, Monique
   Wautelet, Yves
TI Agile MERODE: a model-driven software engineering method for
   user-centric and value-based development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Agile; MERODE; User story; User stories; BDD;
   Behavior-driven development
AB Agile is often associated with a lack of architectural thinking causing technical debt but has the advantage of user centricity and a strong focus on value. Model-driven software engineering (MDSE) strongly performs for building a quality architecture and code, but lacks focus on user requirements and tends to consider development as a monolithic whole. The combination of Agile and MDSE has been explored, but a convincing integrated method has not been proposed yet. This paper addresses this gap by exploring the specific combination of MERODE-as an example of a proven MDSE method-with Scrum, a reference agile method offering a concrete (sprint-based) life cycle management on the basis of user stories. The method resulting of this integration is called Agile MERODE; it is driven by user stories, themselves associated with behavior-driven development scenarios. It allows for domain-driven design and permits fast development from domain models by means of code generation. An illustrative example further clarifies the practical application of Agile MERODE, while a case study shows the planning game application in the case's context. While the approach, in its entirety, allows reducing technical debt by building the architecture in a logical, consistent and complete manner, introducing MDSE involves a trade-off with pure value-driven development. Agile MERODE contributes to the state of the art by showing how to increase user centricity in MDSE, how to align model-driven engineering with the Scrum cycle, and how to reduce the technical debt of agile developments yet remaining value-focused.
C1 [Snoeck, Monique; Wautelet, Yves] Katholieke Univ Leuven, Leuven, Belgium.
C3 KU Leuven
RP Wautelet, Y (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM monique.snoeck@kuleuven.be; yves.wautelet@kuleuven.be
RI Snoeck, Monique/H-7771-2018; Wautelet, Yves/N-2388-2018
OI Snoeck, Monique/0000-0002-3824-3214; Wautelet, Yves/0000-0002-6560-9787
CR Ahmad Muhammad Ovais, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P9, DOI 10.1109/SEAA.2013.28
   Alam O, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P155, DOI 10.1109/ICSSP.2019.00028
   Alfraihi H., 2017, Practical Aspects of the Integration of Agile Development and Model-Driven Development: An Exploratory, V2019, P399
   Alfraihi H, 2018, LECT NOTES COMPUT SC, V11150, P229, DOI 10.1007/978-3-030-01042-3_14
   Alfraihi H, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P451, DOI 10.5220/0006207004510458
   Ambler S., 2005, The Agile Unified Process (AUP) Home Page
   Beck K., 2001, Planning extreme programming
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Christou IT, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2009.156
   Cohn M., 2005, Agile Estimating and Planning
   DEDENE G, 1995, DATA KNOWL ENG, V15, P1, DOI 10.1016/0169-023X(94)00031-9
   Eric S., 2011, Social modeling for requirements engineering
   Essebaa I, 2018, FED CONF COMPUT SCI, P939, DOI 10.15439/2018F358
   Guta G, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P255, DOI 10.1109/SEAA.2009.63
   Haesen R., 2005, CONSISTENCY PROBLEMS
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Holvitie Johannes, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P35, DOI 10.1109/MTD.2014.8
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   Hvam L., 2008, PRODUCT CUSTOMIZATIO, DOI [10.1007/978-3-540-71449-1, DOI 10.1007/978-3-540-71449-1]
   IBM, 2007, RATIONAL UNIFIED PRO
   Kautz O., 2018, ESSENCE SOFTWARE ENG, P221, DOI [10.1007/978-3-319-73897-0_13, DOI 10.1007/978-3-319-73897-0_13]
   Kiv S, 2022, EXPERT SYST APPL, V195, DOI 10.1016/j.eswa.2022.116520
   Kolahdouz-Rahimi S., 2019, Journal of Computing Security, V6, P43, DOI DOI 10.22108/JCS.2019.115445
   Lano K., 2018, P MODELS 2018 WORKSH, V2245, P203
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Maarif M Y., 2018, Journal of Advanced Research in Dynamical Control Systems, V10, P2357
   Marín B, 2020, LECT NOTES BUS INF P, V385, P302, DOI 10.1007/978-3-030-50316-1_18
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Object Management Group (OMG), 2017, OMG® Unified Modeling Language® (OMG UML®) Version 2.5.1
   Patton J., 2014, USER STORY MAPPING D
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Romano B.L., 2018, INFORM TECHNOLOGY NE, P383
   Ruiz J., 2015, P 16 INT C HUMAN COM
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Sedrakyan G, 2014, COMPUT EDUC, V78, P367, DOI 10.1016/j.compedu.2014.06.014
   Shafiee S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110732
   Snoeck Monique, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P131, DOI 10.1007/978-3-030-79186-5_9
   Snoeck M, 2003, LECT NOTES COMPUT SC, V2814, P105
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Snoeck M, 1998, IEEE T SOFTWARE ENG, V24, P233, DOI 10.1109/32.677182
   Tsilionis K., 2021, 29 IEEE INT REQUIREM
   Tsilionis K, 2021, LECT NOTES BUS INF P, V415, P356, DOI 10.1007/978-3-030-75018-3_24
   Tsilionis K, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106734
   Uludag Ö, 2018, LECT NOTES BUS INF P, V314, P232, DOI 10.1007/978-3-319-91602-6_16
   Verbruggen Charlotte, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P335, DOI 10.1007/978-3-030-79186-5_22
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Wautelet Y, 2017, COMPUT LANG SYST STR, V50, P159, DOI 10.1016/j.cl.2017.06.007
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
NR 52
TC 6
Z9 6
U1 4
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1469
EP 1494
DI 10.1007/s10270-022-01015-y
EA JUN 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000811959400001
DA 2024-07-18
ER

PT J
AU Döller, V
AF Doeller, Victoria
TI Formalizing the four-layer metamodeling stack with MetaMorph: potential
   and benefits
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modeling; Metamodeling; Modeling language; Formal language;
   Predicate logic
AB Enterprise modeling deals with the increasing complexity of processes and systems by operationalizing model content and by linking complementary models and languages, thus amplifying the model value beyond mere comprehensible pictures. To enable this amplification and turn models into computer-processable structures, a comprehensive formalization is needed. This paper presents the formalism MetaMorph based on typed first-order logic and provides a perspective on the potential and benefits of formalization that arise for a variety of research issues in conceptual modeling. MetaMorph defines modeling languages as formal languages with a signature Sigma-comprising object types, relation types, and attributes through types and function symbols-and a set of constraints. Four case studies are included to show the effectiveness of this approach. Applying the MetaMorph formalism to the next level in the hierarchy of models, we create M2FOL, a formal modeling language for metamodels. We show that M2FOL is self-describing and therefore complete the formalization of the full four-layer metamodeling stack. On the basis of our generic formalism applicable to arbitrary modeling languages, we examine four current research topics-modeling with power types, language interleaving & consistency, operations on models, and automatic translation of formalizations to platform-specific code-and how to approach them with the MetaMorph formalism. This shows that the rich knowledge stack on formal languages in logic offers new tools for old problems.
C1 [Doeller, Victoria] Univ Vienna, Fac Comp Sci, Res Grp Knowledge Engn, Vienna, Austria.
C3 University of Vienna
RP Döller, V (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Knowledge Engn, Vienna, Austria.
EM victotia.doeller@univie.ac.at
OI Doller, Victoria/0000-0002-5770-635X
FU University of Vienna
FX Open access funding provided by University of Vienna.
CR Almeida JPA, 2019, LECT NOTES COMPUT SC, V11788, P43, DOI 10.1007/978-3-030-33223-5_5
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2013, UNDERSTANDING PETRI, DOI DOI 10.1007/978-3-642-33278-4
   Awadid A, 2019, SOFTW SYST MODEL, V18, P1097, DOI 10.1007/s10270-017-0629-2
   Baader F., 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   Baader F, 2007, J SYMBOLIC LOGIC, V72, P535, DOI 10.2178/jsl/1185803623
   BOC, 2021, ADOXX MET PLATF
   Bork D, 2014, P ANN HICSS, P3400, DOI 10.1109/HICSS.2014.422
   Bork D, 2019, COMMUN ASSOC INF SYS, V44, P673, DOI 10.17705/1CAIS.04432
   Bork D, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.101425
   Bork D, 2015, INTERACT DES ARCHIT, P10
   Brachman R.J., 1989, READINGS ARTIFICIAL, P207, DOI DOI 10.1016/B978-0-934613-53-8.50019-4
   Buchmann R. A., 2019, Complex Systems Informatics and Modeling Quarterly, V21, P21, DOI [10.7250/csimq.2019-21.02, DOI 10.7250/CSIMQ.2019-21.02]
   Burger E., 2014, FLEXIBLE VIEWS VIEW, DOI [10.5445/KSP/1000043437, DOI 10.5445/KSP/1000043437]
   Cadavid J., 2012, RR7882 INRIA
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Choe Y, 2016, IEEE INT ENTERP, P269
   Clyde Stephen W., 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P151, DOI 10.1007/978-3-642-28279-9_12
   D?ller V., 2020, PRACTICE ENTERPRISE, DOI [10.1007/978-3-030-63479-7_8, DOI 10.1007/978-3-030-63479-7_8]
   Delcambre LML, 2019, LECT NOTES COMPUT SC, V11877, P40, DOI 10.1007/978-3-030-33246-4_3
   Delcambre LML, 2018, LECT NOTES COMPUT SC, V11157, P27, DOI 10.1007/978-3-030-00847-5_4
   Doller V., 2018, P DOCT CONS 11 IFIP, V2234, P61
   Enderton H. B., 2001, A mathematical introduction to logic
   Fill Hans-Georg, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P133
   Frank U., 2013, Domain Engineering, P133
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P39, DOI 10.1007/s12599-013-0301-5
   Guarino N, 2020, FRONT ARTIF INTEL AP, V321, P1, DOI 10.3233/FAIA200002
   Guizzardi G, 2007, FR ART INT, V155, P18
   Heckel Reiko, 2020, Graph Transformation for Software Engineers-With Applications to Model-Based Development and Domain-Specific Language Engineering, DOI [10.1007/978-3-030-43916-3, DOI 10.1007/978-3-030-43916-3]
   Henderson-Sellers B., 2012, SpringerBriefs in Computer Science
   Herrmann C, 2007, LECT NOTES COMPUT SC, V4530, P99
   Jackson E, 2009, SOFTW SYST MODEL, V8, P451, DOI 10.1007/s10270-008-0105-0
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kampars J, 2020, SOFTW SYST MODEL, V19, P371, DOI 10.1007/s10270-019-00756-7
   Karagiannis D, 2019, INT REQUIR ENG CONF, P199, DOI 10.1109/RE.2019.00030
   Karagiannis D, 2018, LECT NOTES BUS INF P, V273, P3, DOI 10.1007/978-3-319-73459-0_1
   Kern H., 2011, SPLASH 11 WORKSH, P7
   Klare H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110815
   Koubarakis M., 1989, KRRTR894 U TOR DEP C
   Koubarakis M, 2021, REQUIR ENG, V26, P1, DOI 10.1007/s00766-020-00329-x
   Kröger F, 2008, TEXTS THEOR COMPUT S, P1
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kutz O, 2004, ARTIF INTELL, V156, P1, DOI 10.1016/j.artint.2004.02.002
   Lara P, 2016, LECT NOTES COMPUT SC, V9974, P122, DOI 10.1007/978-3-319-46397-1_10
   Leroy D, 2020, SOFTW SYST MODEL, V19, P1015, DOI 10.1007/s10270-020-00798-2
   Mayr HC, 2021, SOFTW SYST MODEL, V20, P7, DOI 10.1007/s10270-020-00836-z
   Mazzola G., 2006, COMPREHENSIVE MATH C
   Meier J, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P117, DOI 10.5220/0007396401170128
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   O'Regan G, 2017, CONCISE GUIDE FORMAL, P155
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMG, 2014, OMG document formal/2014-02-03
   Paczona M, 2019, IEEE INT CON AUTO SC, P1730, DOI [10.1109/coase.2019.8843314, 10.1109/COASE.2019.8843314]
   Partridge C, 2013, LECT NOTES COMPUT SC, V8217, P96, DOI 10.1007/978-3-642-41924-9_9
   Ralyt? J., 2017, PRACTICE ENTERPRISE, P221, DOI [10.1007/978-3-319-70241-4_15, DOI 10.1007/978-3-319-70241-4_15]
   Sandkuhl K, 2016, LECT NOTES BUS INF P, V267, P225, DOI 10.1007/978-3-319-48393-1_16
   Schön H, 2019, LECT NOTES BUS INF P, V369, P68, DOI 10.1007/978-3-030-35151-9_5
   Stirna  J., 2017, POEM, P251
   Thalheim B, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P543
   Visic, 2016, THESIS U VIENNA
   Zivkovic S, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P259, DOI 10.5220/0005761102590270
NR 64
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1411
EP 1435
DI 10.1007/s10270-022-00986-2
EA MAR 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000773166200001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Luo, YX
   Zhou, Y
   Zhao, HY
   Jin, Z
   Zhang, TW
   Liu, Y
   Barthaud, D
   Yu, YJ
AF Luo, Yixing
   Zhou, Yuan
   Zhao, Haiyan
   Jin, Zhi
   Zhang, Tianwei
   Liu, Yang
   Barthaud, Danny
   Yu, Yijun
TI Online adaptation for autonomous unmanned systems driven by requirements
   satisfaction model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements satisfaction model; Runtime adaptation; Models@runtime;
   Autonomous unmanned systems
ID SPECIFICATION
AB Autonomous unmanned systems (AUSs) emerge to replace human operators for achieving better safety, efficiency, and effectiveness in harsh and difficult missions. They usually run in a highly open and dynamic operating environment, in which some unexpected situations may occur, leading to violations of predefined requirements. In order to maintain stable performance, the AUS control software needs to predict in advance whether the requirements will be violated and then make adaptations to maximize requirements satisfaction. We propose Captain, a model-driven and control-based online adaptation approach, for the AUS control software. At the modeling phase, apart from the system behavior model and the operating environment model, we construct a requirements satisfaction model. At runtime, based on the requirements satisfaction model, Captain first predicts whether the requirements will be violated in the upcoming situation; then identifies the unsatisfiable requirements that need to be accommodated; and finally, finds an optimal adaptation for the upcoming situation. We evaluate Captain in both simulated scenarios and the real world. For the former, we use two cases of UAV Delivery and UUV Ocean Surveillance, whose results demonstrate the Captain's robustness, scalability, and real-time performance. For the latter, we have successfully implemented Captain in the DJI Matrice 100 UAV with real-world workloads.
C1 [Luo, Yixing; Zhao, Haiyan; Jin, Zhi] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Luo, Yixing; Zhao, Haiyan; Jin, Zhi] Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
   [Zhou, Yuan; Zhang, Tianwei; Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
   [Liu, Yang] Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou, Peoples R China.
   [Barthaud, Danny; Yu, Yijun] Open Univ, Sch Comp & Commun, Milton Keynes, Bucks, England.
C3 Peking University; Peking University; Nanyang Technological University;
   Zhejiang Sci-Tech University; Open University - UK
RP Jin, Z (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.; Jin, Z (corresponding author), Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
EM yixingluo@pku.edu.cn; zhijin@pku.edu.cn
RI Luo, Yixing/GQY-6352-2022; yang, liu/HTN-9175-2023; yang,
   liu/GVU-8760-2022; Liu, Yang/HNJ-6693-2023; liu, yang/HQY-7531-2023;
   Zhou, Yuan/AFR-5029-2022; LIU, YANG/HWQ-4615-2023; Liu, Yang/D-2306-2013
OI Zhou, Yuan/0000-0002-1583-7570; Liu, Yang/0000-0001-7300-9215; Yu,
   Yijun/0000-0002-7154-8570
FU National Natural Science Foundation of China [62192731, 61751210]; UK
   EPSRC; EU
FX The work is supported in part by the National Natural Science Foundation
   of China under Grant Nos. 62192731 and 61751210, UK EPSRC (SAUSE), and
   EU H2020 Engage KTN on Drone Identity.
CR Aldrich J, 2019, IEEE SOFTWARE, V36, P83, DOI 10.1109/MS.2018.2885058
   Alrajeh D, 2020, PROC INT CONF SOFTW, P50, DOI 10.1145/3377811.3380927
   Angelopoulos K, 2018, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3105748
   Angelopoulos K, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P35, DOI [10.1109/SEAMS.2016.012, 10.1145/2897053.2897054]
   [Anonymous], 2013, ABC News
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   ASSmann Uwe, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P1
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bennaceur Amel, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P19
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Braberman V. A., 2013, LECT NOTES COMPUTER, V9640, P377, DOI [10.1007/978- 3- 319- 74183-3 13, DOI 10.1007/978-3-319-74183-313]
   Burian S.J., 2002, Morphological analysis using 3D building databases: Los Angeles, California
   Chang V, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6765, DOI 10.1145/3025453.3025632
   Corke P., 2017, ROBOTICS VISION CONT, V118, DOI DOI 10.1007/978-3-319-54413-7
   Cugola G, 2014, J SYST SOFTWARE, V92, P32, DOI 10.1016/j.jss.2013.10.057
   Dalpiaz F, 2020, IEEE SOFTWARE, V37, P7, DOI 10.1109/MS.2020.2986047
   DeVries Byron, 2017, P MODELS 2017 SATELL, V2019, P201
   Dubus J, 2007, LECT NOTES COMPUT SC, V4364, P242
   Edwards R, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P12, DOI 10.1145/3194133.3194142
   Erdelj M, 2017, IEEE PERVAS COMPUT, V16, P24, DOI 10.1109/MPRV.2017.11
   Filieri A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P13, DOI 10.1145/2786805.2786833
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5795, P606, DOI 10.1007/978-3-642-04425-0_47
   Fleurey F, 2009, LECT NOTES COMPUT SC, V5421, P97, DOI 10.1007/978-3-642-01648-6_11
   Frachtenberg E, 2019, COMPUTER, V52, P53, DOI 10.1109/MC.2019.2942290
   Fredericks EM, 2014, EMPIR SOFTW ENG, V19, P1466, DOI 10.1007/s10664-014-9305-0
   Giese Holger, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P47
   Gill P.E, MIXED INTEGER NONLIN
   Hidalgo-Paniagua A, 2017, SOFT COMPUT, V21, P949, DOI 10.1007/s00500-015-1825-z
   International Organization for Standardization, 2011, ISO 10218-1:2011 robots and robotic devices-Safety requirements for industrial robots-Part 1: Robots
   Jamshidi P, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P39, DOI 10.1109/SEAMS.2019.00015
   Jin Z., 2018, Environment Modeling-Based Requirements Engineering for Software Intensive Systems
   Kim H, 2019, IEEE T VEH TECHNOL, V68, P3933, DOI 10.1109/TVT.2019.2897509
   Kimchi G., 2017, US Patent, Patent No. [9,573,684, 9573684]
   Klein C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P700, DOI 10.1145/2568225.2568227
   Klös V, 2018, J SYST SOFTWARE, V144, P314, DOI 10.1016/j.jss.2018.06.076
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Konnik Mikhail, 2014, 2014 4th Australian Control Conference (AUCC). Proceedings, P95, DOI 10.1109/AUCC.2014.7358641
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lemarechal C., 2001, COMPUTATIONAL COMBIN, P12
   Leveson N. G., 2016, ENG SAFER WORLD SYST
   Li ZP, 2019, INT CONF COMPUT NETW, P562, DOI [10.1109/iccnc.2019.8685611, 10.1109/ICCNC.2019.8685611]
   Liu C., 2018, arXiv180708048
   Liu Y, 2018, ADV SOC SCI EDUC HUM, V196, P249, DOI 10.1109/APSEC.2018.00039
   Luo YX, 2020, IEEE INT CONF ROBOT, P1169, DOI [10.1109/icra40945.2020.9197564, 10.1109/ICRA40945.2020.9197564]
   Luo YX, 2019, INT REQUIR ENG CONF, P410, DOI 10.1109/RE.2019.00054
   Lutz R, 2017, IEEE SOFTWARE, V34, P26, DOI 10.1109/MS.2017.53
   Maggio M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/3106237.3106247
   Maia PH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P974, DOI 10.1109/ASE.2019.00094
   Moreno Gabriel A., 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P42, DOI 10.1109/SEAMS.2017.2
   Moreno GA, 2016, PR INT CONF AUTONOM, P147, DOI 10.1109/ICAC.2016.59
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Morse J, 2017, IEEE INT CONF FUZZY
   Neace K, 2018, REQUIR ENG, V23, P509, DOI 10.1007/s00766-017-0278-6
   Picasso B, 2010, AUTOMATICA, V46, P823, DOI 10.1016/j.automatica.2010.02.013
   Ramirez AJ, 2011, LECT NOTES COMPUT SC, V6981, P501, DOI 10.1007/978-3-642-24485-8_37
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Salifu M, 2007, INT REQUIR ENG CONF, P211, DOI 10.1109/RE.2007.21
   Schittkowski K., 1986, Annals of Operations Research, V5, P485, DOI 10.1007/BF02739235
   Shevtsov Stepan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P12, DOI 10.1109/SEAMS.2017.3
   Shevtsov S, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3328730
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Shevtsov Stepan., 2019, Engineering Adaptive Software Systems, P35
   Siciliano B, 2009, ADV TXB CONTR SIG PR, P1
   Singireddy SRR, 2018, INNOV TECH KNOWL MAN, P387, DOI 10.1007/978-3-319-68987-6_13
   Solano GF, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P89, DOI 10.1109/SEAMS.2019.00020
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Spong M.W., 2020, Robot Modeling and Control
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vierhauser M., P 26 IEEE INT REQ EN
   Vierhauser M, 2018, EUROMICRO CONF PROC, P73, DOI 10.1109/SEAA.2018.00022
   Wang YQ, 2009, AUTOMAT SOFTW ENG, V16, P3, DOI 10.1007/s10515-008-0042-8
   Weyns Danny, 2019, Handbook of software engineering, P399, DOI [10.1007/978-3-030-00262-6\_11, 10.1007/978-3-030-00262-6_11, DOI 10.1007/978-3-030-00262-6_11]
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Yel E, 2018, IEEE INT CONF ROBOT, P7518
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
NR 78
TC 1
Z9 1
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1295
EP 1319
DI 10.1007/s10270-022-00981-7
EA FEB 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000759406100002
DA 2024-07-18
ER

PT J
AU Balaban, M
   Khitron, I
   Maraee, A
AF Balaban, Mira
   Khitron, Igal
   Maraee, Azzam
TI Accidental complexity in multilevel modeling revisited
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multilevel modeling; Context; Rearchitecture; Accidental complexity;
   Quantitative measures; Evaluation criteria
AB Multilevel modeling (MLM) conceptualizes software models as layered architectures of sub-models that are inter-related by the instance-of relation. Conceptually, MLM provides benefits in terms of ontological classification. Pragmatically, based on arguments in knowledge engineering, MLM meaningfully reduces accidental complexity. In this paper, the problem of accidental complexity in MLM is revisited. The paper focuses on the role of the context of type-instance structures on MLM architectures. We analyze factors of accidental complexity in multilevel models, suggest quantitative metrics for these factors, and show how they can be used for guiding MLM rearchitecture transformations. The relevance of the proposed factors and metrics is shown in an experimental study of type-instance contexts in multiple real-world models.
C1 [Balaban, Mira; Khitron, Igal; Maraee, Azzam] Ben Gurion Univ Negev, Beer Sheva, Israel.
   [Maraee, Azzam] Achva Acad Coll, Kiryat Malakhi, Arugot, Israel.
C3 Ben Gurion University
RP Maraee, A (corresponding author), Ben Gurion Univ Negev, Beer Sheva, Israel.
EM mari@cs.bgu.ac.il
FU BSF [2017742]
FX This work is supported in part by BSF Grant 2017742.
CR Acherkan E, 2011, P ACM INT C COMP OBJ, P181
   Almeida JPA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P142, DOI 10.1109/MODELS-C.2019.00025
   Almeida JPA, 2017, LECT NOTES COMPUT SC, V10650, P280, DOI 10.1007/978-3-319-69904-2_23
   [Anonymous], 2015, METAMODEL ZOOS
   [Anonymous], 2016, UMPLE ONLINE EXAMPLE
   [Anonymous], 2020, LITIUM DOCS LITIUM D
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2015, 15 INT WORKSH OCL TE
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Balaban M., 2018, P MODELS 2018 WORKSH, V2245, P693
   Balaban M, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a19
   Balaban M, 2018, LECT NOTES COMPUT SC, V10816, P391, DOI 10.1007/978-3-319-91563-0_24
   Balaban M, 2011, LECT NOTES COMPUT SC, V6981, P517, DOI 10.1007/978-3-642-24485-8_38
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cardelli L., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P70, DOI 10.1145/73560.73566
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   de Kinderen S, 2020, SOFTW SYST MODEL, V19, P313, DOI 10.1007/s10270-019-00767-4
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Demuth A., 2011, ACM SIGSOFT S
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Genero M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P207
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Gerbig R., 2017, Deep, Seamless, Multi-format, Multi-notation Definition and Use of Domain-specific Languages'
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gogolla M., 2014, MULTI 2014
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Haslum P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1898
   Henderson-Sellers B., 2012, SpringerBriefs in Computer Science
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P2787, DOI 10.1007/s10270-018-0701-6
   Igamberdiev M, 2018, SOFTW SYST MODEL, V17, P269, DOI 10.1007/s10270-016-0520-6
   Igamberdiev S.M., 2014, 1 INT WORKSH MULT MO
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Jeusfeld M.A., 2020, MODELS WORKSH MULTI
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Johnson R., 1996, TYPE OBJECT PATTERN
   Khitron I., 2021, FOML Site
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kuhne, 2020, MODELS WORKSH MULTI
   Kühne T, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P2, DOI 10.1145/3239372.3239411
   Lange A., 2018, MODELS WORKSHOPS, P653
   Lange A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P113, DOI 10.1109/MODELS-C.2019.00021
   Lethbridge, ADVANCEMENTS MODEL D, P1
   Lethbridge TC, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102665
   López-Sanz M, 2012, INFORM SYST, V37, P257, DOI 10.1016/j.is.2011.11.002
   Manso E, 2003, LECT NOTES COMPUT SC, V2681, P127
   Merle P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P852, DOI 10.1109/CLOUD.2015.117
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Neumayr B., 2016, SOSYM
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   Nystrom R., 2014, Game Programming Patterns, V3rd
   Object Management Group (OMG), 2015, OMG UN MOD LANG SEPC
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Rossini Alessandro, 2012, Applications of Graph Transformations with Industrial Relevance. 4th International Symposium, AGTIVE 2011. Revised Selected and Invited Papers, P19, DOI 10.1007/978-3-642-34176-2_4
   Rushton A., 2014, HDB LOGISTICS DISTRI, V5th
   Scholz-Reiter B, 2010, PROD ENG-RES DEV, V4, P319, DOI 10.1007/s11740-010-0253-2
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
NR 67
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 517
EP 542
DI 10.1007/s10270-021-00938-2
EA JAN 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000744418900002
DA 2024-07-18
ER

PT J
AU Liaskos, S
   Khan, SM
   Mylopoulos, J
AF Liaskos, Sotirios
   Khan, Shakil M.
   Mylopoulos, John
TI Modeling and reasoning about uncertainty in goal models: a
   decision-theoretic approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Goal modeling; Markov decision processes (MDP); DT-Golog; Golog
AB Goal models have been a popular subject of study by researchers in requirements engineering, due to their ability to capture and analyze alternative solutions through which a software system can achieve business objectives. A plethora of analysis methods for automated identification of optimal alternatives have been proposed. However, such methods often assume an idealized reality where all tasks are successfully performed when attempted and all goals are eventually satisfied with certainty when pursued according to a solution. In reality, some tasks run the risk of failure while others produce chance outcomes. In this paper, we extend the standard goal modeling language to allow representation and reasoning about both uncertainty and preferential utility in goals. Tasks are extended to allow for probabilistic effects and preferential statements of stakeholders are captured and translated into utilities over possible effects. Moreover, solutions are not mere specifications (functions, quality constraints, and assumptions), but rather policies, that is sequences of situational action decisions, through which stakeholder goals can be fulfilled. An AI reasoning tool is adapted and used for identifying optimal policies with respect to the value they offer to stakeholders measured against their probability of failure. Evaluation of the approach includes a simulation study and scalability experiments to assess the applicability of automated reasoning for larger problems.
C1 [Liaskos, Sotirios] York Univ, Sch Informat Technol, 4700 Keele St, Toronto, ON, Canada.
   [Khan, Shakil M.] Univ Regina, Dept Comp Sci, 3737 Wascana Pkwy, Regina, SK, Canada.
   [Mylopoulos, John] Univ Toronto, Dept Comp Sci, 214 Coll St, Toronto, ON, Canada.
C3 York University - Canada; University of Regina; University of Toronto
RP Liaskos, S (corresponding author), York Univ, Sch Informat Technol, 4700 Keele St, Toronto, ON, Canada.
EM liaskos@yorku.ca; Shakil.Khan@uregina.ca; jm@cs.toronto.edu
RI Khan, Shakil/JZD-7056-2024
OI Khan, Shakil M./0000-0003-0140-3584
CR Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Angelopoulos K, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P35, DOI [10.1109/SEAMS.2016.012, 10.1145/2897053.2897054]
   [Anonymous], 2011, BUS PROC MOD NOT V2
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bencomo N, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P113, DOI 10.1109/SEAMS.2013.6595498
   Boland PJ., 2007, STAT PROBABILISTIC M, DOI [10.1201/9781584886969, DOI 10.1201/9781584886969]
   Boutilier C, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P355
   Boutilier C., 2001, P 17 C UNC ART INT, P56
   Nguyen CM, 2018, REQUIR ENG, V23, P189, DOI 10.1007/s00766-016-0263-5
   Dalpiaz F., 2016, ARXIV PREPRINT, DOI DOI 10.48550/ARXIV.1605.07767
   Dell'Anna D, 2019, AUTOMAT SOFTW ENG, V26, P513, DOI 10.1007/s10515-019-00255-5
   Dell'Anna D, 2018, 2018 5TH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2018), P39, DOI 10.1109/AIRE.2018.00012
   Durán F, 2018, SCI COMPUT PROGRAM, V168, P1, DOI 10.1016/j.scico.2018.08.007
   Ferrein A, 2004, LECT NOTES COMPUT SC, V3238, P322
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Fowler M., 1997, UML DISTILLED
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Herbert L.T., 2014, P 1 INT C ENG APPL S, P1136
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Horkoff J, 2014, INT REQUIR ENG CONF, P33, DOI 10.1109/RE.2014.6912245
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Ishizaka A., 2013, MULTICRITERIA DECISI, DOI DOI 10.1002/9781118644898
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   La Mura P, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P366
   Lapouchnian A, 2009, LECT NOTES COMPUT SC, V5600, P483, DOI 10.1007/978-3-642-02463-4_25
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Liaskos S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P135, DOI 10.1109/RE.2010.26
   Liaskos S., 2021, CONCEPTUAL MODELING, DOI 10.5683/SP3/R8PGP8
   Liaskos S, 2013, LECT NOTES COMPUT SC, V8217, P19, DOI 10.1007/978-3-642-41924-9_3
   Liaskos S, 2012, INFORM SYST, V37, P767, DOI 10.1016/j.is.2012.05.006
   Liaskos S, 2009, IEEE INT CONF AUTOM, P565, DOI 10.1109/ASE.2009.91
   Llerena YRS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P454, DOI 10.1145/3106237.3106301
   Ma Q., 2016, P 22 INT WORKING C R, P19
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Mylopoulos J, 2001, IEEE SOFTWARE, V18, P92, DOI 10.1109/52.903174
   Nau D, 2003, J ARTIF INTELL RES, V20, P379, DOI 10.1613/jair.1141
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Paucar LHG, 2019, INT CONF SELF SELF, P11, DOI 10.1109/SASO.2019.00011
   Paucar LHG, 2017, INT REQUIR ENG CONF, P458, DOI 10.1109/RE.2017.58
   Regan K., 2009, P 25 C UNCERTAINTY A, P444
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Solano GF, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P89, DOI 10.1109/SEAMS.2019.00020
   Soutchanski M., 2001, P 17 INT JOINT C ART, P19
   Soutchanski M., 2003, THESIS U TORONTO
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Yu E.S., GRL GOAL ORIENTED RE
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 52
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2243
EP 2266
DI 10.1007/s10270-021-00968-w
EA JAN 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000741253000002
DA 2024-07-18
ER

PT J
AU Madani, S
   Kolovos, D
   Paige, RF
AF Madani, Sina
   Kolovos, Dimitris
   Paige, Richard F.
TI Distributed model validation with Epsilon
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model validation; Distributed computing; Model
   management; Parallelism
AB Scalable performance is a major challenge with current model management tools. As the size and complexity of models and model management programs increases and the cost of computing falls, one solution for improving performance of model management programs is to perform computations on multiple computers. In this paper, we demonstrate a low-overhead data-parallel approach for distributed model validation in the context of an OCL-like language. Our approach minimises communication costs by exploiting the deterministic structure of programs and can take advantage of multiple cores on each (heterogeneous) machine with highly configurable computational granularity. Our performance evaluation shows that the implementation is extremely low overhead, achieving a speed up of 24.5 x with 26 computers over the sequential case, and 122 x when utilising all six cores on each computer.
C1 [Madani, Sina; Paige, Richard F.] Univ York, York, N Yorkshire, England.
   [Kolovos, Dimitris] Univ York, Software Engn, Dept Comp Sci, York, N Yorkshire, England.
C3 University of York - UK; University of York - UK
RP Madani, S (corresponding author), Univ York, York, N Yorkshire, England.
EM sina.madani@york.ac.uk; dimitris.kolovos@york.ac.uk;
   richard.paige@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014
OI Kolovos, Dimitris/0000-0002-1724-6563
FU European Commission via the CROSSMINER H2020 Project [732223]
FX The work in this paper was supported by the European Commission via the
   CROSSMINER H2020 Project (Grant #732223).
CR Barmpis Konstantinos., 2013, P 1 WORKSHOP SCALABI, P1
   Benelallam A, 2015, P 2015 ACM SIGPLAN I, P37
   Benelallam A, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P226, DOI 10.1145/2997364.2997385
   Bézivin J, 2006, ELECTRON NOTES THEOR, V152, P69, DOI 10.1016/j.entcs.2006.01.015
   Burgueño L, 2016, INFORM SOFTWARE TECH, V79, P17, DOI 10.1016/j.infsof.2016.06.001
   Cabot J, 2006, LECT NOTES COMPUT SC, V4001, P81, DOI 10.1007/11767138_7
   Cuadrado, 2020, VERIFIED CATALOGUE O, P1139
   Imre Gabor, 2012, Multicore Software Engineering, Performance, and Tools. Proceedings International Conference (MSEPT 2012), P86, DOI 10.1007/978-3-642-31202-1_10
   Kolovos D.S., 2008, CHAMDE 2008 WORKSH P, P10
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Madani S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a3
   Madani S, 2018, LECT NOTES COMPUT SC, V10890, P115, DOI 10.1007/978-3-319-92997-2_8
   Mezei G, 2009, EUROCON 2009: INTERNATIONAL IEEE CONFERENCE DEVOTED TO THE 150 ANNIVERSARY OF ALEXANDER S. POPOV, VOLS 1- 4, PROCEEDINGS, P403, DOI 10.1109/EURCON.2009.5167663
   Paige R.F, P 22 ACM IEEE INT C
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Tisi, 2015, P 15 INT WORKSH OCL, P46
   Tisi M., 2012, P 1 INT WORKSH MOD D, P3
   Vajk T., 2011, P 8 INT WORKSH MOD D, P1
   Willink E. D., 2017, STAF 2017 COLL WORKS, P340
NR 25
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1689
EP 1712
DI 10.1007/s10270-021-00878-x
EA MAR 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000632745900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Gómez-Abajo, P
   Guerra, E
   de Lara, J
   Merayo, MG
AF Gomez-Abajo, Pablo
   Guerra, Esther
   de Lara, Juan
   Merayo, Mercedes G.
TI Wodel-Test: a model-based framework for language-independent mutation
   testing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Mutation testing; Model mutation; Model-driven engineering;
   Domain-specific languages; Java; Model transformation
ID C PLUS PLUS; OPERATORS; TOOL; STRATEGIES
AB Mutation testing (MT) targets the assessment of test cases by measuring their efficiency to detect faults. This technique involves modifying the program under test to emulate programming faults, and assessing whether the existing test cases detect such mutations. MT has been extensively studied since the 70's, and many tools have been proposed for widely used languages like C, Java, Fortran, Ada and SQL; and for notations like Petri-nets. However, building MT tools is costly and error-prone, which may prevent their development for new programming and domain-specific (modelling) languages. In this paper, we propose a framework calledWodel-Testto reduce the effort to create MT tools. For this purpose, it follows a model-driven approach by which MT tools are synthesized from a high-level description. This description makes use of the domain-specific languageWodelto define and execute model mutations.Wodelis language-independent, as it allows the creation of mutation operators for any language defined by a meta-model. Starting from the definition of the mutation operators,Wodel-Testgenerates a MT environment which parses the program under test into a model, applies the mutation operators, and evaluates the test-suite against the generated mutants, offering a rich collection of MT metrics. We report on an evaluation of the approach based on the creation of MT tools for Java and the Atlas transformation language.
C1 [Gomez-Abajo, Pablo; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
   [Merayo, Mercedes G.] Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
C3 Autonomous University of Madrid; Complutense University of Madrid
RP Gómez-Abajo, P (corresponding author), Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
EM pablo.gomeza@uam.es; Esther.Guerra@uam.es; Juan.deLara@uam.es;
   mgmerayo@fdi.ucm.es
RI Gómez-Abajo, Pablo/S-3860-2016; de Lara, Juan/B-5422-2014; GARCIA
   MERAYO, MARIA DE LAS MERCEDES/T-4990-2018; Guerra, Esther/B-4977-2014
OI Gómez-Abajo, Pablo/0000-0002-8319-4829; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082; Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Science [RTI2018-093608-B-C31, RTI2018-095255-B-I00,
   TIN2015-65845-C3-1-R]; R&D programme of the Madrid Region
   [S2018/TCS-4314]
FX This work has been partially funded by the Spanish Ministry of Science
   (projects RTI2018-093608-B-C31, RTI2018-095255-B-I00,
   TIN2015-65845-C3-1-R) and the R&D programme of the Madrid Region
   (project S2018/TCS-4314).
CR Agrawal H., 1989, TECHNICAL REPORT
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   Alhwikem F.H.M., 2016, MODEVVA MODELS 2016, P54
   Alsmadi IM, 2013, IEEE SOFTWARE, V30, P67, DOI 10.1109/MS.2012.22
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 1996, TECHNICAL REPORT
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   Aranega V, 2015, SOFTW TEST VERIF REL, V25, P653, DOI 10.1002/stvr.1532
   Ariel Gonzalez G.B., 2018, S LAT ING SOFTW CLEI
   Aziz B, 2018, INFORM SOFTWARE TECH, V100, P183, DOI 10.1016/j.infsof.2018.04.011
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bradbury Jeremy S., MUTATION 06, DOI [10.1109/MUTATION.2006.10, DOI 10.1109/MUTATION.2006.10]
   Bruel JM, 2020, SOFTW SYST MODEL, V19, P441, DOI 10.1007/s10270-019-00762-9
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cañizares PC, 2018, J SYST SOFTWARE, V143, P187, DOI 10.1016/j.jss.2018.05.010
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delgado-Pérez P, 2017, INFORM SOFTWARE TECH, V81, P169, DOI 10.1016/j.infsof.2016.07.002
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Denisov A, 2018, IEEE ICST WORKSHOP, P25, DOI 10.1109/ICSTW.2018.00024
   Devroey X, 2018, J SYST SOFTWARE, V141, P1, DOI 10.1016/j.jss.2018.03.010
   Estero-Botaro A., 2008, INT C SOFTW SYST ENG
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Fabbri S. C. P. F., 1996, Formal Description Techniques VIII. Proceedings of the IFIP TC6 Eighth International Conference on Formal Description Techniques, P329
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Granda MF, 2016, LECT NOTES COMPUT SC, V9694, P325, DOI 10.1007/978-3-319-39696-5_20
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gligoric Milos, 2011, P 19 ACM SIGSOFT S 1, P424, DOI [10.1145/2025113.2025181, DOI 10.1145/2025113.2025181]
   Gómez-Abajo P, 2019, DSM'19: PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON DOMAIN-SPECIFIC MODELING, P60, DOI 10.1145/3358501.3361234
   Gómez-Abajo P, 2018, SCI COMPUT PROGRAM, V163, P85, DOI 10.1016/j.scico.2018.01.008
   Gómez-Abajo P, 2017, COMPUT LANG SYST STR, V49, P152, DOI 10.1016/j.cl.2016.11.001
   Gomez-Abajo Pablo, 2018, JORNADAS INGENIERIA, V4
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   González-Jiménez M, 2018, LECT NOTES COMPUT SC, V10845, P420, DOI 10.1007/978-3-319-91662-0_34
   Gopinath R, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P216, DOI 10.1109/ISSRE.2015.7381815
   Groce A, 2018, PROC IEEE ACM INT C, P25, DOI 10.1145/3183440.3183485
   Guerra E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P78, DOI 10.1109/MODELS.2019.00-13
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Heidenreich F., 2011, CEUR WORKSHOP P, V708, P1
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Kelly S., 2008, Domain-Specific Modeling
   Khan Y, 2013, IEEE ICST WORKSHOP, P43, DOI 10.1109/ICSTW.2013.13
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kusano M, 2013, IEEE INT CONF AUTOM, P722, DOI 10.1109/ASE.2013.6693142
   Laurent T, 2017, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2017.47
   Le Duc., 2014, P 2014 INT S SOFTWAR, P429
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Lee SC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P200, DOI 10.1109/ISSRE.2001.989474
   López M, 2006, ELECT ROBOT AUTO MEC, P331
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   MARINEZ Freddy., 2016, Innovacion y gobernanza colaborativa para la gestion de las politicas publicas, P1
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Mottu J-M, 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P291, DOI 10.1109/ISSRE.2012.7
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Parsai A, 2017, LECT NOTES COMPUT SC, V10522, P148, DOI 10.1007/978-3-319-68972-2_10
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Sen S., 2006, WORKSH MUT AN MUT
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Seqerloo AY, 2019, REQUIR ENG, V24, P119, DOI 10.1007/s00766-018-0304-3
   Shin D, 2016, SOFTW SYST MODEL, V15, P631, DOI 10.1007/s10270-014-0428-y
   Srivatanakul T, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P340, DOI 10.1109/APSEC.2003.1254388
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Trakhtenbrot M, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P151, DOI 10.1109/TAIC.PART.2007.23
   Troya J, 2015, IEEE ICST WORKSHOP
   Tuya J., 2006, P 2 WORKSH MUT AN MU, P1, DOI DOI 10.1109/MUTATION.2006.13
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
NR 90
TC 13
Z9 13
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 767
EP 793
DI 10.1007/s10270-020-00827-0
EA OCT 2020
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000579448800002
DA 2024-07-18
ER

PT J
AU Argyropoulos, N
   Mouratidis, H
   Fish, A
AF Argyropoulos, Nikolaos
   Mouratidis, Haralambos
   Fish, Andrew
TI Enhancing secure business process design with security process patterns
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security requirements engineering; Business process modelling; Security
   process patterns; Business process security
ID REQUIREMENTS; TROPOS
AB Business process definition and analysis are an important activity for any organisation. As research has demonstrated, well-defined business processes can reduce cost, improve productivity and provide organisations with competitive advantages. In the last few years, the need to ensure the security of business processes has been identified as a major research challenge. Limited security expertise of business process developers together with a clear lack of appropriate methods and techniques to support the security analysis of business processes is important prohibitors to providing answers to that research challenge. This paper introduces the first attempt in the literature to produce a novel pattern-based approach to support the design and analysis of secure business processes. Our work draws on elements from the security requirements engineering area and the security patterns area, combined with business process modelling, and it produces a set of process-level security patterns which are used to implement security in a given business process model. Such an approach advances the existing literature by providing a structured way of operationalising security at the business process level of abstraction. The applicability of the work is illustrated through an application to a real-life information system, and the effectiveness and usability of the work are evaluated via a workshop-based experiment. The evaluation clearly indicates that non-experts are able to comprehend and utilise the developed patterns to construct secure business process designs.
C1 [Argyropoulos, Nikolaos; Mouratidis, Haralambos; Fish, Andrew] Univ Brighton, Sch Comp Engn & Math, Ctr Secure Intelligent & Usable Syst, Brighton, E Sussex, England.
C3 University of Brighton
RP Argyropoulos, N (corresponding author), Univ Brighton, Sch Comp Engn & Math, Ctr Secure Intelligent & Usable Syst, Brighton, E Sussex, England.
EM n.argyropoulos@brighton.ac.uk; h.mouratidis@brighton.ac.uk;
   andrew.fish@brighton.ac.uk
OI Fish, Andrew/0000-0003-3758-0128
CR Ahmed N, 2014, COMPUT STAND INTER, V36, P723, DOI 10.1016/j.csi.2013.12.007
   Alam M., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P278
   [Anonymous], FOR C ADV INF SYST E
   [Anonymous], 2017 1 INT WORKSH SE
   [Anonymous], THESIS
   [Anonymous], 2016, DOMAINSPECIFIC CONCE
   [Anonymous], 13 INT AR C INF TECH
   [Anonymous], 2002, SECURITY PATTERNS WE
   [Anonymous], IEEE S VIS LANG HUM
   [Anonymous], SOFTWARE ENG SECURE
   Argyropoulos Nikolaos, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549305
   Argyropoulos N, 2017, LECT NOTES BUS INF P, V287, P19, DOI 10.1007/978-3-319-59466-8_2
   Argyropoulos N, 2017, CONF BUS INFORM, V1, P43, DOI 10.1109/CBI.2017.37
   Argyropoulos N, 2015, LECT NOTES BUS INF P, V235, P91, DOI 10.1007/978-3-319-25897-3_7
   Argyropoulos N, 2015, LECT NOTES COMPUT SC, V9382, P248, DOI 10.1007/978-3-319-25747-1_25
   Bottoni P, 2015, SOFTW SYST MODEL, V14, P1421, DOI 10.1007/s10270-013-0381-1
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Cherdantseva Yulia, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P546, DOI 10.1109/ARES.2013.72
   Decreus K, 2010, INT J INTELL SYST, V25, P784, DOI 10.1002/int.20431
   Dubois E, 2010, REQUIR ENG, V15, P1, DOI 10.1007/s00766-009-0094-8
   Fernandez E.B., 2001, P PLOP, V1
   ISO/IEC, 2014, 270002014 ISOIEC
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Kalloniatis C, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P1009
   Laverdière MA, 2006, CAN CON EL COMP EN, P2086
   Leitner B, 2013, TRANSP MEANS, P262
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2006, INT J SOFTW ENG KNOW, V16, P471, DOI 10.1142/S0218194006002823
   Neubauer T, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P457, DOI 10.1109/ARES.2006.121
   OMG: Business process model and notation (BPMN) version 2. 0, 2011, TECHNICAL REPORT
   Rodríguez A, 2007, LECT NOTES COMPUT SC, V4802, P106
   Rosado DG, 2006, INTERNET RES, V16, P519, DOI 10.1108/10662240610710996
   Salnitri M, 2017, SOFTW SYST MODEL, V16, P737, DOI 10.1007/s10270-015-0499-4
   Séguran M, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P125, DOI 10.1109/ECOWS.2008.13
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Souza ARR, 2009, LECT NOTES COMPUT SC, V5900, P373, DOI 10.1007/978-3-642-10383-4_27
   Stonebumer G., 2002, RISK MANAGEMENT GUID
   Tong Li, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549303
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Weske M., 2010, Business Process Management: Concepts, Languages, Architectures
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Yoshioka Nobukazu, 2008, Progress in Informatics, P35, DOI 10.2201/NiiPi.2008.5.5
   Zivkovic S., 2007, EUR C INF SYST ECIS
NR 44
TC 1
Z9 2
U1 2
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 555
EP 577
DI 10.1007/s10270-019-00743-y
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Neghina, M
   Zamfirescu, CB
   Pierce, K
AF Neghina, Mihai
   Zamfirescu, Constantin-Bala
   Pierce, Ken
TI Early-stage analysis of cyber-physical production systems through
   collaborative modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Co-simulation; Cyber-physical production systems; Homogeneous and
   heterogeneous modelling; Design space exploration
AB This paper demonstrates the flexible methodology of modelling cyber-physical systems (CPSs) using the INTO-CPS technology through co-simulation based on Functional Mock-up Units (FMUs). It explores a novel method with two main co-simulation phases: homogeneous and heterogeneous. In the first phase, high-level, abstract FMUs are produced for all subsystems using a single discrete-event formalism (the VDM-RT language and Overture tool). This approach permits early co-simulation of system-level behaviours and serves as a basis for dialogue between subsystem teams and agreement on interfaces. During the second phase, model refinements of subsystems are gradually introduced, using various simulation tools capable of exporting FMUs. This heterogeneous phase permits high-fidelity models of all subsystems to be produced in appropriate formalisms. This paper describes the use of this methodology to develop a USB stick production line, representing a smart system of systems. The experiments are performed under the assumption that the orders are received in a Gaussian or Uniform distribution. The focus is on the homogeneous co-simulation phase, for which the method demonstrates two important roles: first, the homogeneous phase identifies the right interaction protocols (signals) among the various subsystems, and second, the conceptual (system-level) parameters identified before the heterogeneous co-simulation phase reduce the huge size of the design space and create stable constraints, later reflected in the physical implementation.
C1 [Neghina, Mihai; Zamfirescu, Constantin-Bala] Lucian Blaga Univ Sibiu, Fac Engn, Dept Comp Sci & Automat Control, Bd Victoriei 10, Sibiu 550024, Romania.
   [Pierce, Ken] Newcastle Univ, Sch Comp, Urban Sci Bldg,1 Sci Sq, Newcastle Upon Tyne NE4 5TG, Tyne & Wear, England.
C3 Lucian Blaga University of Sibiu; Newcastle University - UK
RP Neghina, M (corresponding author), Lucian Blaga Univ Sibiu, Fac Engn, Dept Comp Sci & Automat Control, Bd Victoriei 10, Sibiu 550024, Romania.
EM mihai.neghina@gmail.com; zbcnanu@gmail.com;
   kenneth.pierce@newcastle.ac.uk
RI Neghina, Mihai/U-3656-2017; Zamfirescu, Constantin-Bala/AAI-7160-2020
OI Zamfirescu, Constantin-Bala/0000-0003-0128-2436; Neghina,
   Mihai/0000-0001-9828-4299
CR [Anonymous], 91345201604 DIN SPEC
   [Anonymous], 2018, CATIA
   [Anonymous], 2018, MAESTR
   BjOrner D, 1978, LECT NOTES CS
   Blockwitz T., 2012, 9 INT MOD C, P173, DOI DOI 10.3384/ECP12076173
   Fitzgerald J., 2014, COLLABORATIVE DESIGN, V10, P3
   Fitzgerald J., 2015, FORMALISE FME WORKSH
   Fitzgerald J., 2016, INCOSE 2016
   Fitzgerald J., 1998, Modelling Systems: Practical Tools and Techniques for Software Development, V1st
   Gomes C., 2018, ACM COMPUT SURV, V51, P1557
   Hermann M, 2016, P ANN HICSS, P3928, DOI 10.1109/HICSS.2016.488
   iPP4CPPS, 2008, INT PROD PROD COS CY
   Kleijn C., 2006, INT J FLUID POWER, V7, P57
   Larsen P.G., 2016, CPS DAT WORKSH VIENN
   Larsen P.G., 2016, TRUSTWORTHY CYBER PH
   Larsen P.G., 2017, COSIM CPS WORKSH ORG
   Larsen Peter Gorm., 2010, SIGSOFT Softw. Eng. Notes, V35, P1, DOI DOI 10.1145/1668862.1668864
   Larsen PG, 2016, SEMANTICALLY INTEGRA, P171
   Leitao P., 2015, Industrial Agents: Emerging Applications of Software Agents in Industry
   Mühlhäuser M, 2008, COMM COM INF SC, V11, P158, DOI 10.1007/978-3-540-85379-4_20
   Neghina M, 2018, STUD INFORM CONTROL, V27, P33, DOI 10.24846/v27i1y201804
   Nof SY, 2009, SPRINGER HANDBOOK OF AUTOMATION, P1, DOI 10.1007/978-3-540-78831-7
   Pierce K, 2014, COLLABORATIVE DESIGN, P153
   Quadri I., 2015, ADA USER, V36, P246
   Strasser T, 2008, IEEE INTL CONF IND I, P258
   Verhoef M, 2006, LECT NOTES COMPUT SC, V4085, P147
   Zamfirescu CB, 2013, STUD INFORM CONTROL, V22, P269
NR 27
TC 1
Z9 1
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 581
EP 600
DI 10.1007/s10270-019-00753-w
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Di Rocco, J
   Di Ruscio, D
   Härtel, J
   Iovino, L
   Lämmel, R
   Pierantonio, A
AF Di Rocco, Jun
   Di Ruscio, Davide
   Haertel, Johannes
   Iovino, Ludovico
   Laemmel, Ralf
   Pierantonio, Alfonso
TI Understanding MDE projects: megamodels to the rescue for architecture
   recovery
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Megamodeling; Reverse engineering; Architecture recovery; MDE; Code
   generator; Model transformation
ID SOFTWARE; REPOSITORIES; CODE
AB Conventional wisdom on Model-Driven Engineering (MDE) suggests that this software discipline is the key to achieve superior automation, whether it be refactoring, simulation, or code generation. However, the diversity of employed languages and technologies blurs the picture making it difficult to analyze existing MDE-based projects in order to retrieve architectural information to foster a better understanding about the rationale behind them. Thus, the ability of carefully analyzing projects to identify their components and their interrelationships is key to obtain representations at a higher level of abstraction that can support reuse processes. In this paper, a megamodel-based approach to the reverse engineering of model-driven projects is proposed in order to leverage the representation of the involved technologies and assets. An automated recovery technique implemented by the MDEprofiler infrastructure is presented and illustrated by analyzing community projects in terms of basic MDE artifacts (such as models and metamodels) and the usage of common technologies such as model transformations and code generators.
C1 [Di Rocco, Jun; Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
   [Haertel, Johannes; Laemmel, Ralf] Univ Koblenz Landau, Mainz, Germany.
C3 University of L'Aquila; Gran Sasso Science Institute (GSSI); University
   of Koblenz & Landau
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM juri.dirocco@univaq.it; davide.diruscio@univaq.it;
   johanneshaertel@uni-koblenz.de; ludovico.iovino@gssi.it;
   laemmel@uni-koblenz.de; Alfonso.Pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020
OI Di Ruscio, Davide/0000-0002-5077-6793; Iovino,
   Ludovico/0000-0001-6552-2609; Di Rocco, Juri/0000-0002-7909-3902
CR Alshara Z, 2016, LECT NOTES COMPUT SC, V9839, P309, DOI 10.1007/978-3-319-48992-6_23
   [Anonymous], 2004, P BEST PRACT MOD DRI
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Babur O., 2018, P MODELS 2018 WORKSH, P787
   Basciani F., 2016, CEUR WORKSH P, P37
   Basciani F., 2018, MODELS WORKSHOPS CEU, V2245, P793
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Basciani F, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P88, DOI 10.1109/QUATIC.2016.22
   Basciani F, 2016, LECT NOTES COMPUT SC, V9694, P342, DOI 10.1007/978-3-319-39696-5_21
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Basso F.P, 2015, STAF DOCT S
   Ruiz FJB, 2017, INFORM SYST, V72, P136, DOI 10.1016/j.is.2017.10.004
   Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bowman I. T., 1998, P 1998 C CTR ADV STU, P6
   Capraro M, 2018, IEEE WORK CONF MIN S, P515, DOI 10.1145/3196398.3196417
   Chardigny S, 2010, LECT NOTES COMPUT SC, V6285, P409, DOI 10.1007/978-3-642-15114-9_35
   Constantinou E, 2015, J SYST SOFTWARE, V107, P142, DOI 10.1016/j.jss.2015.05.065
   de Lara J, 2017, LECT NOTES COMPUT SC, V10202, P264, DOI 10.1007/978-3-662-54494-5_15
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Di Rocco J, 2018, LECT NOTES COMPUT SC, V10888, P110, DOI 10.1007/978-3-319-93317-7_5
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Favre J-M, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P335, DOI 10.1109/WCRE.2012.43
   Favre Jean-Marie, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P151, DOI 10.1007/978-3-642-33666-9_11
   Ferenc R, 2004, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2004.1357790
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   Giraldo FD, 2018, INFORM SYST, V77, P48, DOI 10.1016/j.is.2018.06.002
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Hartel J., 2017, PROGRAM J, V1, P3
   Hartel J., 2018, LNCS
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Heinz M, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P478, DOI 10.5220/0006210204780486
   Janes A., 2013, IFIP INT C OP SOURC, P264
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Karus S., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P13
   Keenan E, 2012, PROC INT CONF SOFTW, P1375, DOI 10.1109/ICSE.2012.6227244
   Kling Wolfgang, 2011, P 4 INT C SOFTW LANG, V6940, P180
   König H, 2017, LECT NOTES COMPUT SC, V10376, P161, DOI 10.1007/978-3-319-61482-3_10
   Kolovos DS, 2015, OSS4MDE MODELS, P20
   Krikhaar RL, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P4, DOI 10.1109/ICSM.1997.624225
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lämmel R, 2014, LECT NOTES COMPUT SC, V8569, P67
   Lammel R., 2011, 2011 18th Working Conference on Reverse Engineering, P141, DOI 10.1109/WCRE.2011.25
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Lammel R, 2017, PROGRAM J, V1, DOI [10.22152/programming-journal.org/2017/1/4, DOI 10.22152/programming-journal.org/2017/1/4]
   Lammel Ralf, 2013, CEUR WORKSHOP P, P36
   Lungu M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183
   Lungu M, 2014, SCI COMPUT PROGRAM, V79, P204, DOI 10.1016/j.scico.2012.04.007
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   Sandro A.D., 2016, CEUR WORKSH P, V1554, P16
   Sartipi K, 2003, PROC IEEE INT CONF S, P224, DOI 10.1109/ICSM.2003.1235425
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seibel Andreas., 2012, SOFTWARE SYSTEMS TRA, P215, DOI [DOI 10.1007/978-1-4471-2239-510, 10.1007/978-1-4471-2239-5_10, DOI 10.1007/978-1-4471-2239-5_10]
   Stevens P, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P301, DOI 10.1145/3239372.3239378
   Stringfellow C, 2006, INFORM SOFTWARE TECH, V48, P484, DOI 10.1016/j.infsof.2005.05.007
   Tomassetti Federico, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P91, DOI 10.1049/ic.2012.0012
   Wille D, 2018, SCI COMPUT PROGRAM, V163, P62, DOI 10.1016/j.scico.2018.04.002
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 68
TC 7
Z9 7
U1 4
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 401
EP 423
DI 10.1007/s10270-019-00748-7
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200010
DA 2024-07-18
ER

PT J
AU Guo, JM
   Liang, JH
   Shi, K
   Yang, DY
   Zhang, JS
   Czarnecki, K
   Ganesh, V
   Yu, HQ
AF Guo, Jianmei
   Liang, Jia Hui
   Shi, Kai
   Yang, Dingyu
   Zhang, Jingsong
   Czarnecki, Krzysztof
   Ganesh, Vijay
   Yu, Huiqun
TI SMTIBEA: a hybrid multi-objective optimization algorithm for configuring
   large constrained software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product lines; Search-based software engineering;
   Multi-objective evolutionary algorithms; Constraint solving; Feature
   models
ID PERFORMANCE PREDICTION; VARIABILITY MODELS; GENETIC ALGORITHM;
   SELECTION; COST
AB A key challenge to software product line engineering is to explore a huge space of various products and to find optimal or near-optimal solutions that satisfy all predefined constraints and balance multiple often competing objectives. To address this challenge, we propose a hybrid multi-objective optimization algorithm called SMTIBEA that combines the indicator-based evolutionary algorithm (IBEA) with the satisfiability modulo theories (SMT) solving. We evaluated the proposed algorithm on five large, constrained, real-world SPLs. Compared to the state-of-the-art, our approach significantly extends the expressiveness of constraints and simultaneously achieves a comparable performance. Furthermore, we investigate the performance influence of the SMT solving on two evolutionary operators of the IBEA.
C1 [Guo, Jianmei; Shi, Kai; Yu, Huiqun] East China Univ Sci & Technol, Sch Informat Sci & Engn, Shanghai, Peoples R China.
   [Liang, Jia Hui; Czarnecki, Krzysztof; Ganesh, Vijay] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
   [Yang, Dingyu] Shanghai Dianji Univ, Sch Elect Informat, Shanghai, Peoples R China.
   [Zhang, Jingsong] Chinese Acad Sci, Inst Biochem & Cell Biol, Inst Biol Sci, Shanghai, Peoples R China.
C3 East China University of Science & Technology; University of Waterloo;
   Shanghai Dianji University; Chinese Academy of Sciences; Center for
   Excellence in Molecular Cell Science, CAS
RP Guo, JM (corresponding author), East China Univ Sci & Technol, Sch Informat Sci & Engn, Shanghai, Peoples R China.; Zhang, JS (corresponding author), Chinese Acad Sci, Inst Biochem & Cell Biol, Inst Biol Sci, Shanghai, Peoples R China.
EM gjm@ecust.edu.cn; jasun@dmbio.info
OI Guo, Jianmei/0000-0001-5787-6781; Zhang, Jingsong/0000-0002-9023-9933;
   Ganesh, Vijay/0000-0002-6029-2047
FU Shanghai Municipal Natural Science Foundation [17ZR1406900]; Shanghai
   Pujiang Talent Program [17PJ1401900]; Specialized Fund of Shanghai
   MunicipalCommission of Economy and Informatization [201602008];
   Specialized Research Fund forDoctoral Program of Higher Education
   [20130074110015]; National Natural Science Foundation of China
   [61173048, 61602460]; China Postdoctoral Science Foundation
   [2016M600338]; Natural Sciences and Engineering Research Council of
   Canada; Pratt Whitney Canada
FX We would like to thank anonymous reviewers for their helpful comments.
   This research was partially supported by Shanghai Municipal Natural
   Science Foundation (No. 17ZR1406900), Shanghai Pujiang Talent Program
   (No. 17PJ1401900), Specialized Fund of Shanghai MunicipalCommission of
   Economy and Informatization (No. 201602008), Specialized Research Fund
   forDoctoral Program of Higher Education (No. 20130074110015), National
   Natural Science Foundation of China (No. 61173048, 61602460), China
   Postdoctoral Science Foundation (No. 2016M600338), Natural Sciences and
   Engineering Research Council of Canada, and Pratt & Whitney Canada.
CR [Anonymous], 2008, SPLC
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2001, P 5 C EVOLUTIONARY M
   [Anonymous], 2009, TECH REP
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Brockhoff D, 2008, LECT NOTES COMPUT SC, V5199, P651, DOI 10.1007/978-3-540-87700-4_65
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Deb K, 2003, LECT NOTES COMPUT SC, V2632, P222
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo J.J., 2010, Proc of 2010 Conference on Evolutionary Computation, P4138, DOI [DOI 10.1109/CEC.2010.5586354, 10.1109/CEC.2010.5586354]
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   Eiben AE., 2003, NAT COMPUT, V2nd, DOI 10.1007/978-3-662-05094-1
   Gavanelli M, 2002, FR ART INT, V77, P136
   Guo J., 2014, P 29 ACMIEEE INT C A, P409, DOI 10.1145/2642937.2642971
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hartert R, 2014, AAAI CONF ARTIF INTE, P2674
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Ishibuchi H, 2015, LECT NOTES COMPUT SC, V9019, P110, DOI 10.1007/978-3-319-15892-1_8
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kang K, 1990, TECH REP
   Knowles J, 2002, IEEE C EVOL COMPUTAT, P711, DOI 10.1109/CEC.2002.1007013
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Marek V., 1999, LOGIC PROGRAMMING PA
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R., 2012, Proceedings of the Fourth International Workshop on Nonfunctional System Properties in Domain Specific Modeling Languages, p2:1, DOI DOI 10.1145/2420942.2420944
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L. T., 2011, P 3 WORKSH FEAT OR S, P9
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rayside D, 2009, TECH REP
   Salay, 2012, P WORKSH MOD DRIV EN, P41
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wu ZQ, 2011, INT J INF TECH DECIS, V10, P811, DOI 10.1142/S0219622011004580
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 59
TC 37
Z9 40
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1447
EP 1466
DI 10.1007/s10270-017-0610-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400030
DA 2024-07-18
ER

PT J
AU Buchholz, P
   Vastag, S
AF Buchholz, Peter
   Vastag, Sebastian
TI Toward an analytical method for SLA validation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 16th Conference on Business Process Modeling, Development, and Support
   (BPMDS) - Enabling Value Creation via Business Process Modeling,
   Development and Support
CY JUN 08-09, 2015
CL Stockholm, SWEDEN
DE Service-level agreements; Performance analysis; Analytical techniques;
   Quantitative validation; Capacity planning
ID SERVICE-LEVEL AGREEMENTS; NETWORK DELAY; CALCULUS; SYSTEMS
AB Quantitative properties of modern software systems are often defined as a part of a service-level agreement (SLA) that fixes the maximal load to be submitted to a system and guarantees bounds for the response time or delay. The evaluation of software architectures in order to validate SLAs is a challenging task since the systems tend to be complex, highly dynamic and to some extent unpredictable. Thus, there is a need for fast and abstract techniques to evaluate the performance of modern software architectures based on the information available in the SLAs. The paper presents an efficient approach to compute bounds on the delay of composed systems based on available bounds for the load and the response times of components. The technique can be used by a user of a software architecture to validate SLAs of composed services based on SLAs of the components. It can also be used by a provider of a software architecture to validate whether additional users can be accepted or to compute required service capacities to fulfill an SLA.
C1 [Buchholz, Peter; Vastag, Sebastian] TU Dortmund, Informat 4, Dortmund, Germany.
C3 Dortmund University of Technology
RP Buchholz, P (corresponding author), TU Dortmund, Informat 4, Dortmund, Germany.
EM peter.buchholz@cs.tu-dortmund.de; sebatsian.vastag@cs.tu-dortmund.de
RI Buchholz, Peter/AAS-4415-2021
OI Buchholz, Peter/0000-0002-9966-7686
FU DFG [BU 1270/6-1/2]
FX This work has partially been supported by DFG under Grant BU 1270/6-1/2.
CR [Anonymous], LECT NOTES COMPUTER
   Ardagna D, 2014, J INTERNET SERV APPL, V5, DOI 10.1186/s13174-014-0011-3
   Bause F., 2017, P 8 ACM SPEC INT C P, P233
   Bouillard A, 2008, DISCRETE EVENT DYN S, V18, P3, DOI 10.1007/s10626-007-0028-x
   Bouillard Anne, 2009, 7094 INRIA
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Buchholz P., 2016, TECH REP
   Chang C.-S., 2000, TELEC NETW COMP SYST
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   CRUZ RL, 1991, IEEE T INFORM THEORY, V37, P132, DOI 10.1109/18.61110
   CRUZ RL, 1991, IEEE T INFORM THEORY, V37, P114, DOI 10.1109/18.61109
   Dingle NJ, 2008, EUROPEAN SIMULATION AND MODELLING CONFERENCE 2008, P137
   Eckert J., 2007, IWAS 2007, P67
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Grabarnik G, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P543, DOI 10.1109/CEC-EEE.2007.63
   Guenther MC, 2011, PERFORM EVALUATION, V68, P221, DOI 10.1016/j.peva.2010.10.003
   Jiang Y., 2008, Stochastic Network Calculus
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li H., 2009, SLA TRANSLATION MULT
   MELAMED B, 1984, J ACM, V31, P839, DOI 10.1145/1634.322459
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Menascé DA, 2004, IEEE INTERNET COMPUT, V8, P100, DOI 10.1109/MIC.2004.47
   Menascé DA, 2007, PERFORM EVALUATION, V64, P646, DOI 10.1016/j.peva.2006.10.001
   Parekh AK, 1993, IEEE ACM T NETWORK, V1, P344, DOI 10.1109/90.234856
   Rizk Amr, 2015, ACM SIGMETRICS Performance Evaluation Review, V43, P335, DOI 10.1145/2745844.2745859
   Schmitt JB, 2005, LECT NOTES COMPUT SC, V3560, P141
   Stewart W. J., 2009, Probability, Markov Chains, Queues, and Simulation: the Mathematical Basis of Performance Modeling
   Thiele L., 2000, P ISCAS, V2000, P100
   Tribastone M, 2010, LECT NOTES COMPUT SC, V6416, P51, DOI 10.1007/978-3-642-16561-0_12
   Trienekens JJM, 2004, SOFTWARE QUAL J, V12, P43, DOI 10.1023/B:SQJO.0000013358.61395.96
   Vastag Sebastian, 2012, Measurement, Modelling, and Evaluation of Computing Systems and Dependability and Fault Tolerance. Proceedings 16th International GI/ITG Conference (MMB & DFT 2012), P76, DOI 10.1007/978-3-642-28540-0_6
   Vastag S., 2011, 5 INT ICST C PERF EV, P391
   Vastag S., 2014, THESIS
   Vastag S, 2012, WINT SIMUL C PROC
   Wandeler E, 2006, REAL TIME CALCULUS R
   Wandeler Ernesto, 2006, THESIS
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
   Xiong KQ, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P693, DOI 10.1109/SERVICES-I.2009.121
NR 42
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 527
EP 545
DI 10.1007/s10270-017-0604-y
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GD5LK
UT WOS:000430548300009
DA 2024-07-18
ER

PT J
AU Carvalho, VA
   Almeida, JPA
AF Carvalho, Victorio A.
   Almeida, Joao Paulo A.
TI Toward a well-founded theory for multi-level conceptual modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level modeling; Conceptual modeling; Power types; Clabjects;
   Ontology
AB Multi-level conceptual modeling addresses the representation of subject domains dealing explicitly with multiple classification levels. Despite the recent advances in multi-level modeling techniques, we believe that the literature in multi-level conceptual modeling would benefit from a theory that: (1) formally characterizes the nature of classification levels and (2) precisely defines the structural relations that may occur between elements of different classification levels. This work aims to fill this gap by proposing an axiomatic theory that can be considered a reference top-level ontology for types in multi-level conceptual modeling. The theory provides the modeler with basic concepts and patterns to articulate domains that require multiple levels of classification as well as to inform the development of well-founded languages for multi-level conceptual modeling. The whole theory is founded on a basic instantiation relation and characterizes the concepts of individuals and types, with types organized in levels related by instantiation. Further, it includes intra-level structural relations that are used to define expressive multi-level models and cross-level relations that allow us to account for and incorporate the different notions of power type in the literature.
C1 [Carvalho, Victorio A.; Almeida, Joao Paulo A.] Fed Univ Espirito Santo UFES, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, ES, Brazil.
   [Carvalho, Victorio A.] Fed Inst Espirito Santo IFES, Dept Informat, Res Grp Appl Informat, Colatina, ES, Brazil.
C3 Universidade Federal do Espirito Santo; Instituto Federal do Espirito
   Santo (IFES)
RP Almeida, JPA (corresponding author), Fed Univ Espirito Santo UFES, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, ES, Brazil.
EM victorio@ifes.edu.br; jpalmeida@ieee.org
RI Almeida, João Paulo/AAF-1838-2019
OI Almeida, João Paulo/0000-0002-9819-3781
FU Brazilian Research Funding Agency CAPES; Brazilian Research Funding
   Agency CNPq [311313/2014-0, 485368/2013-7, 461777/2014-2]; Brazilian
   Research Funding Agency FAPES [69382549]
FX This research is partly funded by the Brazilian Research Funding
   Agencies CAPES, CNPq (Grant Numbers 311313/2014-0, 485368/2013-7,
   461777/2014-2) and FAPES (Grant Number 69382549).
CR [Anonymous], 2005, Ontological foundations for structural conceptual models
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2012, P 2 INT MAST CLASS M
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson Colin, 2000, INT WORKSH MOD ENG C
   Bealer G., 1982, QUALITY CONCEPT, DOI 10.2307/2184837
   Cardelli L., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P70, DOI 10.1145/73560.73566
   Carvalho V. A., 2015, P ENT COMP C EDOC201
   Carvalho VA, 2015, LECT NOTES COMPUT SC, V9381, P119, DOI 10.1007/978-3-319-25264-3_9
   Coquand T., 2014, STANFORD ENCY PHILOS
   de Carvalho VA, 2014, LECT NOTES COMPUT SC, V8484, P488, DOI 10.1007/978-3-319-07881-6_33
   de Lara J, 2010, P 48 INT C TOOLS 201
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Ereshefsky Marc., 2010, STANFORD ENCY PHILOS
   Eriksson O, 2013, INFORM SOFTWARE TECH, V55, P2099, DOI 10.1016/j.infsof.2013.07.008
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Guarino N, 2002, COMMUN ACM, V45, P61, DOI 10.1145/503124.503150
   GUARINO N., 1994, Philosophy and the Cognitive Science, P443
   Guarino N., 2015, P 27 INT CAISE C CAI, P488
   Guizzardi G., 2015, P INT WORKSH FORM ON
   Henderson-Sellers B, 2012, MATH MODELING METAMO
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Kennel B., 2012, UNIFIED FRAMEWORK MU
   Kuhne T., 2009, P 6 AS PAC C CONC MO
   Lara J., 2013, COMPUT J, V57, P36
   Mayr E., 1982, The Growth of Biological Thought: Diversity, Evolution
   Montague R., 1974, PAPERBACK, P370
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Nardi Julio Cesar, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P175, DOI 10.1109/EDOC.2013.28
   Neumayr B., 2009, P 6 AS PAC C CONC MO P 6 AS PAC C CONC MO
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMG, 2011, UML SUP SPEC VERS 2
   OMG, 2013, MET FAC MOF COR SPEC
   Pereira D., 2014, P 6 WORKSH FORM ONT
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Recker J., 2011, MIS Q, V35, P1
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Swoyer C., 2014, Stanford Encyclopedia of Philosophy (Fall 2014 Edition)
   W3C, 2012, WEB ONT LANG, V2
NR 49
TC 36
Z9 36
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 205
EP 231
DI 10.1007/s10270-016-0538-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100012
DA 2024-07-18
ER

PT J
AU Di Natale, M
   Perillo, D
   Chirico, F
   Sindico, A
   Sangiovanni-Vincentelli, A
AF Di Natale, Marco
   Perillo, David
   Chirico, Francesco
   Sindico, Andrea
   Sangiovanni-Vincentelli, Alberto
TI A Model-based approach for the synthesis of software to firmware
   adapters for use with automatically generated components
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE System engineering; Model-driven architecture; Model-based design;
   Platform-based design; Automatic code generation
ID DESIGN
AB This paper presents the MDE process in use at Elettronica SpA (ELT) for the development of complex embedded systems integrating software and firmware. The process is based on the adoption of SysML as the system-level modeling language and the use of Simulink for the refinement of selected subsystems. Implementations are generated automatically for both the software (C++ code) and firmware parts, and communication adapters are automatically generated from SysML using a dedicated profile and open-source tools for modeling and code generation. The process starts from a SysML system model, developed according to the platform-based design paradigm, in which a functional model of the system is paired to a model of the execution platform. Subsystems are refined as Simulink models or hand-coded in C++. An implementation for Simulink models is generated as software code or firmware on FPGA. Based on the SysML system architecture specification, our framework drives the generation of Simulink models with consistent interfaces, allows the automatic generation of the communication code among all subsystems (including the HW-FW interface code). In addition, it provides for the automatic generation of connectors for system-level simulation and of test harnesses and mockups to ease the integration and verification stage. We provide early results on the time savings obtained by using these technologies in the development process.
C1 [Di Natale, Marco] Scuola Super Sant Anna, TeCIP Inst, Pisa, Italy.
   [Perillo, David; Chirico, Francesco; Sindico, Andrea] Elettron SpA, Rome, Italy.
   [Sangiovanni-Vincentelli, Alberto] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 Scuola Superiore Sant'Anna; University of California System; University
   of California Berkeley
RP Di Natale, M (corresponding author), Scuola Super Sant Anna, TeCIP Inst, Pisa, Italy.
EM marco@sssup.it
RI Sangiovanni-Vincentelli, Alberto/S-3822-2019; Chirico,
   Francesco/A-1097-2017; Sangiovanni-Vincentelli, Alberto/F-5742-2018
OI Chirico, Francesco/0000-0002-8737-4368; Sangiovanni-Vincentelli,
   Alberto/0000-0003-1298-8389
CR [Anonymous], 2015, FUNCTIONAL MOCKUP IN
   [Anonymous], 2015, DOD ARCHITECTURE FRA
   [Anonymous], 2006, IEEE STAND SYSTEMC L, V1666, P31
   ARENDT M, 2007, PSYCHOL MED, P1
   Balarin F, 2002, LECT NOTES COMPUT SC, V2491, P407
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bordeleau F., 2014, MODELS 2014 C VAL
   de Alfaro L., 2001, P 8 EUR SOFTW ENG C
   Di Natale M., 2014, P MOD C 2014 VAL
   Di Natale M, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347376
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Hemingway G., 2012, SAGE J
   Karsai G, 2004, IEEE T CONTR SYST T, V12, P263, DOI 10.1109/TCST.2004.824311
   Kienhuis B, 2002, LECT NOTES COMPUT SC, V2268, P18
   Koudri A, 2011, LECT NOTES COMPUT SC, V6981, P243, DOI 10.1007/978-3-642-24485-8_18
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   Mellor S. J., 2004, MDADISTILLED ADDISON
   Mohanty S., ACM T DES AUTOM ELEC, V12
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Mukerji J., OVERVIEW GUIDE OMGS
   Patern'o F., 1999, Model-based design and evaluation of interactive applications
   Sangiovanni-Vincentelli A, 2007, P IEEE, V95, P467, DOI 10.1109/JPROC.2006.890107
   Scaife N., 2004, 4 ACM INT C EMB SOFT
   Schirmeister F., 2002, 9 EL DES PROC WORKSH
   Sindico A., ACM IEEE 15 MODELS C
   Sindico A, 2011, SIMULTECH 2011: PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON SIMULATION AND MODELING METHODOLOGIES, TECHNOLOGIES AND APPLICATIONS, P45
   Sztipanovits J, 2012, P IEEE, V100, P29, DOI 10.1109/JPROC.2011.2161529
   Vanderperren Y., P C DES AUT TEST EUR
   Wang GQ, 2010, IEEE T IND INFORM, V6, P729, DOI 10.1109/TII.2010.2064171
   Wozniak E, 2011, EUROMICRO CONF PROC, P468, DOI 10.1109/SEAA.2011.75
NR 31
TC 5
Z9 5
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 11
EP 33
DI 10.1007/s10270-016-0534-0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100004
DA 2024-07-18
ER

PT J
AU Kalenkova, AA
   van der Aalst, WMP
   Lomazova, IA
   Rubin, VA
AF Kalenkova, Anna A.
   van der Aalst, Wil M. P.
   Lomazova, Irina A.
   Rubin, Vladimir A.
TI Process mining using BPMN: relating event logs and process models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Process discovery; Conformance checking; BPMN (Business
   Process Model and Notation); Petri nets; Bisimulation
ID CONFORMANCE CHECKING; PETRI NETS; REGIONS
AB Process-aware information systems (PAIS) are systems relying on processes, which involve human and software resources to achieve concrete goals. There is a need to develop approaches for modeling, analysis, improvement and monitoring processes within PAIS. These approaches include process mining techniques used to discover process models from event logs, find log and model deviations, and analyze performance characteristics of processes. The representational bias (a way to model processes) plays an important role in process mining. The BPMN 2.0 (Business Process Model and Notation) standard is widely used and allows to build conventional and understandable process models. In addition to the flat control flow perspective, subprocesses, data flows, resources can be integrated within one BPMN diagram. This makes BPMN very attractive for both process miners and business users, since the control flow perspective can be integrated with data and resource perspectives discovered from event logs. In this paper, we describe and justify robust control flow conversion algorithms, which provide the basis for more advanced BPMN-based discovery and conformance checking algorithms. Thus, on the basis of these conversion algorithms low-level models (such as Petri nets, causal nets and process trees) discovered from event logs using existing approaches can be represented in terms of BPMN. Moreover, we establish behavioral relations between Petri nets and BPMN models and use them to adopt existing conformance checking and performance analysis techniques in order to visualize conformance and performance information within a BPMN diagram. We believe that the results presented in this paper can be used for a wide variety of BPMN mining and conformance checking algorithms. We also provide metrics for the processes discovered before and after the conversion to BPMN structures. Cases for which conversion algorithms produce more compact or more complicated BPMN models in comparison with the initial models are identified.
C1 [Kalenkova, Anna A.; van der Aalst, Wil M. P.; Lomazova, Irina A.; Rubin, Vladimir A.] Natl Res Univ, Higher Sch Econ, Moscow, Russia.
   [van der Aalst, Wil M. P.] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 HSE University (National Research University Higher School of
   Economics); Eindhoven University of Technology
RP Kalenkova, AA (corresponding author), Natl Res Univ, Higher Sch Econ, Moscow, Russia.
EM akalenkova@hse.ru; w.m.p.v.d.aalst@tue.nl; ilomazova@hse.ru;
   vrubin@hse.ru
RI Lomazova, Irina/ABD-2422-2020; Kalenkova, Anna A/I-2937-2015; van der
   Aalst, Wil/G-1248-2011
OI Lomazova, Irina/0000-0002-9420-3751; van der Aalst,
   Wil/0000-0002-0955-6940; Kalenkova, Anna/0000-0002-5088-7602
FU National Research University Higher School of Economics; Russian Fund
   for Basic Research [15-37-21103]
FX This work is supported by the Scientific Fund of the National Research
   University Higher School of Economics and is supported by Russian Fund
   for Basic Research (Project 15-37-21103).
CR Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   [Anonymous], 2011, OMG business process model and notation (BPMN
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   Bergenthum R, 2007, LECT NOTES COMPUT SC, V4714, P375
   Buijs J., 2012, Evolutionary Computation (CEC), 2012 IEEE Congress on, P1, DOI DOI 10.1109/CEC.2012.6256458
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC
   Buijs J.C.A.M., 2014, RECEIPT PHASE ENVIRO
   Burattin A, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P103, DOI 10.1109/CIDM.2013.6597224
   Cardoso J, 2006, LECT NOTES COMPUT SC, V4103, P117
   Carmona J, 2010, LECT NOTES ARTIF INT, V6321, P184, DOI 10.1007/978-3-642-15880-3_18
   Conforti R, 2014, LECT NOTES COMPUT SC, V8659, P101, DOI 10.1007/978-3-319-10172-9_7
   De Leoni M., 2013, P 28 ANN ACM S APPL, P1454
   de Leoni M, 2012, LECT NOTES BUS INF P, V117, P48
   De Weerdt Jochen., 2014, Business Process Management, P529
   Desel J., 1995, Free Choice Petri Nets
   Favre C, INF SYST, V47, P197
   Gunther CW, 2007, LECT NOTES COMPUT SC, V4714, P328
   Kalenkova Anna A., 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P71, DOI 10.1007/978-3-319-07734-5_5
   Kalenkova A.A., 2014, BUS PROC MAN 12 INT
   Kalenkova AA, 2014, FUND INFORM, V133, P197, DOI 10.3233/FI-2014-1071
   Kindler E, 2004, LECT NOTES COMPUT SC, V3080, P82
   Latva-Koivisto A.M., 2001, Finding a complexity measure for business process models
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Mans RS, 2008, COMM COM INF SC, V25, P425, DOI 10.1007/978-3-540-92219-3_32
   MENDLING J, 2006, P 5 GI WORKSH BUS PR, P25
   Mitsyuk A, 2014, BIZN INFORM, V29, P15
   Muehlen M.zur., 2008, P 41 ANN HAWAII INT, P372, DOI DOI 10.1109/HICSS.2008.388
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Sánchez-González L, 2010, LECT NOTES COMPUT SC, V6412, P458, DOI 10.1007/978-3-642-16373-9_35
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   Trcka N, 2009, INT CONF INTELL SYST, P1114, DOI 10.1109/ISDA.2009.159
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst W. M. P., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P535
   van der Aalst WMP, 2010, SOFTW SYST MODEL, V9, P87, DOI 10.1007/s10270-008-0106-z
   van der Aalst W, 2012, LECT NOTES BUS INF P, V116, P39
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst W, 2011, LECT NOTES COMPUT SC, V6901, P28, DOI 10.1007/978-3-642-23217-6_3
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2013, FED CONF COMPUT SCI, P1
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   WFMC, 2012, WFMCTC1025
   Wynn MT, 2009, INFORM SOFTWARE TECH, V51, P1010, DOI 10.1016/j.infsof.2008.12.002
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 47
TC 45
Z9 49
U1 4
U2 45
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1019
EP 1048
DI 10.1007/s10270-015-0502-0
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Linsbauer, L
   Lopez-Herrejon, RE
   Egyed, A
AF Linsbauer, Lukas
   Lopez-Herrejon, Roberto Erick
   Egyed, Alexander
TI Variability extraction and modeling for product variants
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Feature; Trace; Product variant; Variability; Dependency
ID SOURCE CODE; SOFTWARE; TAXONOMY
AB Fast-changing hardware and software technologies in addition to larger and more specialized customer bases demand software tailored to meet very diverse requirements. Software development approaches that aim at capturing this diversity on a single consolidated platform often require large upfront investments, e.g., time or budget. Alternatively, companies resort to developing one variant of a software product at a time by reusing as much as possible from already-existing product variants. However, identifying and extracting the parts to reuse is an error-prone and inefficient task compounded by the typically large number of product variants. Hence, more disciplined and systematic approaches are needed to cope with the complexity of developing and maintaining sets of product variants. Such approaches require detailed information about the product variants, the features they provide and their relations. In this paper, we present an approach to extract such variability information from product variants. It identifies traces from features and feature interactions to their implementation artifacts, and computes their dependencies. This work can be useful in many scenarios ranging from ad hoc development approaches such as clone-and-own to systematic reuse approaches such as software product lines. We applied our variability extraction approach to six case studies and provide a detailed evaluation. The results show that the extracted variability information is consistent with the variability in our six case study systems given by their variability models and available product variants.
C1 [Linsbauer, Lukas; Lopez-Herrejon, Roberto Erick; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Johannes Kepler University Linz
RP Linsbauer, L (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM lukas.linsbauer@jku.at; roberto.lopez@jku.at; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
FU Austrian Science Fund (FWF) [P25289-N15, P25513-N15]; Lise Meitner
   Fellowship [M1421-N15]; Austrian Science Fund (FWF) [P25289] Funding
   Source: Austrian Science Fund (FWF)
FX Open access funding provided by [Austrian Science Fund (FWF)]. This
   research was funded by the Austrian Science Fund (FWF) projects
   P25289-N15, P25513-N15 and Lise Meitner Fellowship M1421-N15.
CR Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   Apel S., 2014, Dagstuhl Rep, V4, P1, DOI DOI 10.4230/DAGREP.4.7.1
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   Assuncao W.K.G., 2015, GEN EV COMP C GECCO
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Chen XF, 2012, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2012.6344496
   Cleland-Huang J., 2012, Software and Systems Traceability, P265, DOI [DOI 10.1007/978144712239512, 10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Fischer S., 2015, EUR C SOFTW ENG ADV
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kang Kyo C, 1990, Technical Report
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Linsbauer L, 2014, PROC IEEE INT CONF S, P426, DOI 10.1109/ICSME.2014.67
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Rubin J., 2013, SPLC, P101
   Russell S., 2010, ARTIF INTELL, V3rd
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 38
TC 42
Z9 43
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1179
EP 1199
DI 10.1007/s10270-015-0512-y
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800011
PM 29070971
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Salnitri, M
   Dalpiaz, F
   Giorgini, P
AF Salnitri, Mattia
   Dalpiaz, Fabiano
   Giorgini, Paolo
TI Designing secure business processes with SecBPMN
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Information systems; Security policies; BPMN; Compliance
ID INFORMATION-SYSTEMS
AB Modern information systems are increasingly large and consist of an interplay of technical components and social actors (humans and organizations). Such interplay threatens the security of the overall system and calls for verification techniques that enable determining compliance with security policies. Existing verification frameworks either have a limited expressiveness that inhibits the specification of real-world requirements or rely on formal languages that are difficult to use for most analysts. In this paper, we overcome the limitations of existing approaches by presenting the SecBPMN framework. Our proposal includes: (1) the SecBPMN-ml modeling language, a security-oriented extension of BPMN for specifying composite information systems; (2) the SecBPMN-Q query language for representing security policies; and (3) a query engine that enables checking SecBPMN-Q policies against SecBPMN-ml specifications. We evaluate our approach by studying its under-standability and perceived complexity with experts, running scalability analysis of the query engine, and through an application to a large case study concerning air traffic management.
C1 [Salnitri, Mattia; Giorgini, Paolo] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
   [Dalpiaz, Fabiano] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
C3 University of Trento; Utrecht University
RP Salnitri, M (corresponding author), Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
EM mattia.salnitri@unitn.it
RI Giorgini, Paolo/G-7886-2012; Salnitri, Mattia/AAG-6353-2021
OI Giorgini, Paolo/0000-0003-4152-9683
FU ERC [267856]; European Union's Horizon research and innovation program
   [653642-VisiON]
FX This research was partially supported by the ERC advanced Grant 267856,
   'Lucretius: Foundations for Software Evolution', www.lucretius.eu and by
   European Union's Horizon 2020 research and innovation program under
   Grant Agreement No. 653642-VisiON.
CR [Anonymous], 2007, P EMISA 2007
   [Anonymous], 2011, BPMN 2 0
   [Anonymous], FORUM QUAL SOC RES
   [Anonymous], 2000, P INT SCH FDN SEC AN
   Atluri V., 1996, P 10 IFIP WG 11 3 WO, P199
   Awad A., 2010, THESIS
   Basili V., 1994, The Goal Question Metric Approach, P528
   Beeri C, 2008, INFORM SYST, V33, P477, DOI 10.1016/j.is.2008.02.005
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Brucker A.D., 2012, Proceedings of the 17th ACM symposium on access control models and technologies (SACMAT '12), P123, DOI [DOI 10.1145/2295136.2295160, 10.1145/2295136.2295160]
   Cherdantseva Yulia, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P546, DOI 10.1109/ARES.2013.72
   Clocksin W. F., 2003, Programming in PROLOG
   Dalpiaz F, 2013, REQUIR ENG, V18, P1, DOI 10.1007/s00766-011-0132-1
   Delfmann Patrick, 2014, Advancing the Impact of Design Science: Moving from Theory to Practice. 9th International Conference, DESRIST 2014. Proceedings: LNCS 8463, P453, DOI 10.1007/978-3-319-06701-8_44
   Deutch D, 2007, LECT NOTES COMPUT SC, V4797, P169
   Dumas Marlon., 2001, ≪ UML≫ 2001-The Unified Modeling Language. Modeling Languages, Concepts, P76, DOI 10.1007/3-540-45441-17
   El Kharbili M., 2008, Modellierung betrieblicher Informationssysteme-Modellierung zwischen SOA und Compliance Management-27.-28. November 2008 Saarbrucken, P107
   Emerson E.A., 1982, P 14 ANN ACM S THEOR, P169
   Ferraiolo D. E., 1995, Proceedings. 11th Annual Computer Security Applications Conference, P241
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Gruhn V, 2010, BUS PROCESS MANAG J, V16, P806, DOI 10.1108/14637151011076485
   ISACA, 2009, TECHNICAL REPORT
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Leitner Maria, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P262, DOI 10.1109/ARES.2013.34
   Leitner M, 2013, LECT NOTES BUS INF P, V165, P236
   Leitner M, 2014, INFORM SOFTWARE TECH, V56, P273, DOI 10.1016/j.infsof.2013.12.004
   Li J, 2002, IEEE INFOCOM SER, P1557, DOI 10.1109/INFCOM.2002.1019407
   Li NH, 2007, ACM T INFORM SYST SE, V10, DOI 10.1145/1237500.1237501
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   McCumber J., 1991, P NCSC
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Monakova G., 2012, 27 ANN ACM S APPL CO, P1667
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   OMG, 2007, TECHNICAL REPORT
   Parker D., 2010, ISSA J, P12
   Parker DB, 1998, FIGHTING COMPUTER CR
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Rasmussen J. L., 1996, Application and Theory of Petri Nets 1996. 17th International Conference. Proceedings, P400
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Saleem M., 2012, INT J ADV INFORM SCI, V4, P353, DOI DOI 10.4156/aiss.vol4.issue1.45
   Salnitri M., 2014, P SHPCS
   Salnitri M., 2012, P OTM, P232
   Salnitri M., 2014, Enterprise, Business-Process and Information and Information Systems Modeling, V175, P200, DOI [DOI 10.1007/978-3-662-43745-2_14, 10.1007/978-3-662]
   Schmidt R., 2007, P CEUR
   Simon RT, 1997, P IEEE CSFW, P183, DOI 10.1109/CSFW.1997.596811
   Sommerville I, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2209249.2209268
   Störrle H, 2011, J VISUAL LANG COMPUT, V22, P3, DOI 10.1016/j.jvlc.2010.11.004
   ter Hofstede AHM, 2013, LECT NOTES BUS INF P, V159, P23
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
NR 55
TC 18
Z9 20
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 737
EP 757
DI 10.1007/s10270-015-0499-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800008
DA 2024-07-18
ER

PT J
AU Granada, D
   Vara, JM
   Brambilla, M
   Bollati, V
   Marcos, E
AF Granada, David
   Vara, Juan Manuel
   Brambilla, Marco
   Bollati, Veronica
   Marcos, Esperanza
TI Analysing the cognitive effectiveness of the WebML visual notation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web modelling language (WebML); Visual notation; Cognitive
   effectiveness; Visual communication; Visual syntax; Concrete syntax
ID DIMENSIONS; INFORMATION; DIAGRAMS
AB WebML is a domain-specific language used to design complex data-intensive Web applications at a conceptual level. As WebML was devised to support design tasks, the need to define a visual notation for the language was identified from the very beginning. Each WebML element is consequently associated with a separate graphical symbol which was mainly defined with the idea of providing simple and expressive modelling artefacts rather than by adopting a rigorous scientific approach. As a result, the graphical models defined with WebML may sometimes prevent proper communication from taking place between the various stakeholders. In fact, this is a common issue for most of the existing model-based proposals that have emerged during the last few years under the umbrella of model-driven engineering. In order to illustrate this issue and foster in using a scientific basis to design, evaluate, improve and compare visual notations, this paper analyses WebML according to a set of solid principles, based on the theoretical and empirical evidence concerning the cognitive effectiveness of visual notations. As a result, we have identified a set of possible improvements, some of which have been verified by an empirical study. Furthermore, a number of findings, experiences and lessons learnt on the assessment of visual notations are presented.
C1 [Granada, David; Vara, Juan Manuel; Bollati, Veronica; Marcos, Esperanza] Univ Rey Juan Carlos, Dept Comp Languages & Syst 2, Madrid, Spain.
   [Brambilla, Marco] Politecn Milan, Dipartimento Elettron & Informaz, Milan, Italy.
C3 Universidad Rey Juan Carlos; Polytechnic University of Milan
RP Vara, JM (corresponding author), Univ Rey Juan Carlos, Dept Comp Languages & Syst 2, Madrid, Spain.
EM david.granada@urjc.es; juanmanuel.vara@urjc.es;
   marco.brambilla@polimi.it; veronica.bollati@urjc.es;
   esperanza.marcos@urjc.es
RI Martinez, Esperanza Marcos/AAS-8564-2021; Vara, Juan Manuel/K-6774-2014;
   Martinez, Esperanza Marcos/JCE-5935-2023; Brambilla, Marco/M-4748-2015
OI Vara, Juan Manuel/0000-0002-8637-6580; Brambilla,
   Marco/0000-0002-8753-2434; Granada, David/0000-0001-9743-4347; Marcos,
   Esperanza/0000-0003-2666-9995
FU Regional Government of Madrid [S2013/ICE-3006]; MASAI project - Spanish
   Ministry of Science and Innovation [TIN-2011-22617]; ELASTIC project -
   Spanish Ministry of Science and Innovation [TIN2014-52938-C2-1-R]
FX This research has been partially funded by the Regional Government of
   Madrid under project SICOMORo-CM (S2013/ICE-3006) and by the MASAI
   (TIN-2011-22617) and ELASTIC (TIN2014-52938-C2-1-R) projects, financed
   by the Spanish Ministry of Science and Innovation. We want to thank the
   students on the Information Management module of the Master's in
   Information Systems Engineering at the University of Rey Juan Carlos and
   the researchers who are part of the Kybele research group, for their
   cooperation in conducting the tests to carry out the empirical study
   that is part of this work.
CR Acerbis R, 2008, LECT NOTES BUS INF P, V11, P392
   Acerbis R, 2007, LECT NOTES COMPUT SC, V4607, P501
   [Anonymous], 2002, MORGAN KAUFMANN SERI
   [Anonymous], ACM T DATAB SYST
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 1997, COOPERS LYBRAND ACCO
   [Anonymous], P 28 ANN ACM S APPL
   [Anonymous], THESIS
   Baar T, 2006, LECT NOTES COMPUT SC, V4199, P111
   Bar M, 2006, PSYCHOL SCI, V17, P645, DOI 10.1111/j.1467-9280.2006.01759.x
   Bertin J, 1983, IN PRESS
   BIEDERMAN I, 1987, PSYCHOL REV, V94, P115, DOI 10.1037/0033-295X.94.2.115
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Bottoni P, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P83, DOI 10.1109/VLHCC.2004.5
   Bottoni P, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P85
   Brambilla M., 2013, SCI COMPUTER PROGRAM
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Cheng PC, 2001, ARTIF INTELL REV, V15, P79, DOI 10.1023/A:1006641024593
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   Davies J, 2014, SCI COMPUT PROGRAM, V89, P88, DOI 10.1016/j.scico.2013.02.002
   Fish A, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P41, DOI 10.1109/VLHCC.2007.34
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   Genero M, 2008, DATA KNOWL ENG, V64, P534, DOI 10.1016/j.datak.2007.09.011
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Goodman Nelson., 1968, LANGUAGE ART APPROAC
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Irani P., 2003, ACM Transactions on Computer-Human Interaction, V10, P1, DOI 10.1145/606658.606659
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   Lohse GL, 1997, BEHAV INFORM TECHNOL, V16, P297, DOI 10.1080/014492997119707
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   Masri K, 2008, J DATABASE MANAGE, V19, P22, DOI 10.4018/jdm.2008070102
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mora B, 2011, SOFTWARE QUAL J, V19, P201, DOI 10.1007/s11219-010-9111-x
   Morris SJ, 2006, LECT NOTES COMPUT SC, V4045, P130
   Nordbotten JC, 1999, INFORM SYST J, V9, P139, DOI 10.1046/j.1365-2575.1999.00052.x
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Paivio A., 1986, Mental representations: A dual coding approach
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Petre M, 2006, J VISUAL LANG COMPUT, V17, P292, DOI 10.1016/j.jvlc.2006.04.003
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Wheildon C, 2005, TYPE LAYOUT ARE YOU
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Winn W., 1990, IEEE Transactions on Professional Communications, V33, P103, DOI 10.1109/47.59083
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
NR 61
TC 18
Z9 18
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 195
EP 227
DI 10.1007/s10270-014-0447-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EL1JV
UT WOS:000394377500013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lochau, M
   Bürdek, J
   Hölzle, S
   Schürr, A
AF Lochau, Malte
   Buerdek, Johannes
   Hoelzle, Stefan
   Schuerr, Andy
TI Specification and automated validation of staged reconfiguration
   processes for dynamic software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Dynamic software product lines; Staged configuration; Model-based domain
   engineering and validation; Model checking
AB Dynamic software product lines (DSPLs) propose elaborated design and implementation principles for engineering highly configurable runtime-adaptive systems in a sustainable and feature-oriented way. For this, DSPLs add to classical software product lines (SPL) the notions of (1) staged (pre-)configurations with dedicated binding times for each individual feature, and (2) continuous runtime reconfigurations of dynamic features throughout the entire product life cycle. Especially in the context of safety- and mission-critical systems, the design of reliable DSPLs requires capabilities for accurately specifying and validating arbitrary complex constraints among configuration parameters and/or respective reconfiguration options. Compared to classical SPL domain analysis which is usually based on Boolean constraint solving, DSPL validation, therefore, further requires capabilities for checking temporal properties of reconfiguration processes. In this article, we present a comprehensive approach for modeling and automatically verifying essential validity properties of staged reconfiguration processes with complex binding time constraints during DSPL domain engineering. The novel modeling concepts introduced are motivated by (re-)configuration constraints apparent in a real-world industrial case study from the automation engineering domain, which are not properly expressible and analyzable using state-of-the-art SPL domain modeling approaches. We present a prototypical tool implementation based on the model checker SPIN and present evaluation results obtained from our industrial case study, demonstrating the applicability of the approach.
C1 [Lochau, Malte; Buerdek, Johannes; Hoelzle, Stefan; Schuerr, Andy] Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Bürdek, J (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.
EM malte.lochau@es.tu-darmstadt.de; johannes.buerdek@es.tu-darmstadt.de;
   hoelzle@stud.tu-darmstadt.de; andy.schuerr@es.tu-darmstadt.de
FU DFG (German Research Foundation) under the Priority Programme SPP 1593:
   Design For Future-Managed Software Evolution
FX This work was partially supported by the DFG (German Research
   Foundation) under the Priority Programme SPP 1593: Design For
   Future-Managed Software Evolution.
CR Abbasi E. K., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P65, DOI 10.1109/SPLC.2011.41
   Acher M, 2012, P 11 ANN INT C ASP O, P1, DOI [10.1145/2162049.2162051, DOI 10.1145/2162049.2162051]
   [Anonymous], AUTOMATION QUALITY T
   [Anonymous], 2012, 16 INT SOFTWARE PROD
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2009, P 2009 17 IEEE INT R
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   BENCOMO N, 2008, SPLC, P23
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Botterweck G., 2007, VISPLE
   Burdek J., 2014, P 8 INT WORKSHOP VAR, DOI DOI 10.1145/2556624.2556627
   Clarke EM, 1999, MODEL CHECKING, P1
   Classen A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P381, DOI 10.1109/RE.2009.55
   Classen Andreas., 2009, Proceedings of the 3th International Workshop on Variability Modelling of Software-intensive Systems (VAMOS'09), P51
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Damiani F., 2011, SPLC
   Feldmann S., 2012, 12 INT DES C DESIGN, P1689
   Froschauer R, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P35, DOI 10.1109/SEAA.2008.21
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Helvensteijn M., 2012, SPLC 12 PROC 16 INT, V2, P127, DOI [10.1145/2364412.2364434, DOI 10.1145/2364412.2364434]
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Hubaux A., 2010, MPFD000001 PCSTR PRE
   Hubaux A, 2010, LECT NOTES COMPUT SC, V6182, P106, DOI 10.1007/978-3-642-14192-8_12
   Karatas AS, 2013, SCI COMPUT PROGRAM, V78, P2295, DOI 10.1016/j.scico.2012.06.004
   Lochau M, 2014, AT-AUTOM, V62, P771, DOI 10.1515/auto-2014-1099
   Mei H, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P250, DOI 10.1109/CMPSAC.2003.1245350
   Mendonca M., 2007, HICSS, P283
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Mennicke S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P62, DOI 10.1145/2648511.2648518
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Passos Leonardo, 2011, SPLC WS, P21, DOI [10.1145/2019136.2019139, DOI 10.1145/2019136.2019139]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P347, DOI 10.1109/ASE.2008.45
   Rosenmüller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   Rosenmüller M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P3
   Rosenmuller M., 2011, 02 U MAGD
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saller K., 2012, INT WORKSH SERV CLOU, P135
   Saller K, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P106
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schroeter Julia, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P252, DOI 10.1007/978-3-642-33666-9_17
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   White J., 2009, P 13 INT SOFTW PROD, P11
NR 49
TC 12
Z9 12
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 125
EP 152
DI 10.1007/s10270-015-0470-4
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500010
DA 2024-07-18
ER

PT J
AU Song, F
   Touili, T
AF Song, Fu
   Touili, Tayssir
TI Model-checking software library API usage rules
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Pushdown systems; Model-checking; Software API usage rules
ID VERIFICATION
AB Modern software increasingly relies on using third-party libraries which are accessed via application programming interfaces (APIs). Libraries usually impose constraints on how API functions can be used (API usage rules) and programmers have to obey these API usage rules. However, API usage rules often are not well documented or documented informally. In this work, we show how to use the SCTPL and SLTPL logics to precisely and formally specify API usage rules in libraries, where SCTPL/SLTPL can be seen as an extension of the branching/linear temporal logic CTL/LTL with variables, quantifiers and predicates over the stack. This allows library providers to formally describe API usage rules without knowing how their libraries will be used by programmers. We propose an automated approach to check whether programs using libraries violate API usage rules or not. Our approach consists in modeling programs as pushdown systems (PDSs) and checking API usage rules by SCTPL/SLTPL model-checking for PDSs. To make the model-checking procedure more efficient and precise, we propose an abstraction that reduces drastically the size of the program model and integrate may-alias analysis into our approach to reduce false alarms. Moreover, we characterize two sublogics rSCTPL and rSLTPL of SCTPL and SLTPL that are preserved by the abstraction. We implement our techniques in a tool and apply the tool to check several open-source programs. Our tool finds several previously unknown bugs in several programs. The may-alias analysis avoids most of the false alarms that occur using SCTPL or SLTPL model-checking techniques without may-alias analysis.
C1 [Song, Fu] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Natl Trusted Embedded Software Engn Technol Res C, Shanghai, Peoples R China.
   [Touili, Tayssir] CNRS, LIAFA, Paris, France.
   [Touili, Tayssir] Univ Paris Diderot, Paris, France.
C3 East China Normal University; Universite Paris Cite; Centre National de
   la Recherche Scientifique (CNRS); Universite Paris Cite
RP Song, F (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Natl Trusted Embedded Software Engn Technol Res C, Shanghai, Peoples R China.
EM fsong@sei.ecnu.edu.cn; touili@liafa.univ-paris-diderot.fr
CR Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Alur R, 2004, LECT NOTES COMPUT SC, V2988, P467
   Alur R, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/2039346.2039347
   Alur R, 2008, LOG METH COMPUT SCI, V4, DOI 10.2168/LMCS-4(4:11)2008
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI [DOI 10.1145/1321631.1321719, 10.1145/1321631.1321719]
   [Anonymous], 2000, LNCS, DOI [10.1007/10722167_20, DOI 10.1007/1072216720]
   [Anonymous], 2005, P 10 EUROPEAN SOFTWA, DOI [10.1145/1095430.1081713, DOI 10.1145/1095430.1081713]
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], JPL
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Besson F., 2001, Journal of Computer Security, V9, P217
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   Bouajjani A, 1997, LECT NOTES COMPUT SC, V1243, P135
   Chaki S, 2004, IEEE T SOFTWARE ENG, V30, P388, DOI 10.1109/TSE.2004.22
   Chen H., 2002, P 9 ACM C COMPUTER C, P235
   CHEN H., 2004, P 11 ANN NETW DISTR
   Cook B, 2012, FORM METHOD SYST DES, V41, P66, DOI 10.1007/s10703-012-0153-5
   Cook B, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P399, DOI 10.1145/1926385.1926431
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Driscoll Evan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P665, DOI 10.1007/978-3-642-31424-7_47
   Elgammal A., 2010, International Conference on Service-Oriented Computing, P27, DOI DOI 10.1007/978-3-642-19394-1_4
   Esparza J, 2003, INFORM COMPUT, V186, P355, DOI 10.1016/S0890-5401(03)00139-1
   Fahndrich Manuel, 2010, Formal Verification of Object-Oriented Software. International Conference, (FoVeOOS 2010). Revised Selected Papers, P10
   Fu Song, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P418, DOI 10.1007/978-3-642-32759-9_34
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P51, DOI 10.1145/1368088.1368096
   Godefroid P, 2005, FORM METHOD SYST DES, V26, P77, DOI 10.1007/s10703-005-1489-x
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   Kinder J, 2005, LECT NOTES COMPUT SC, V3548, P174
   Kremenek T, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P161
   Liu C, 2006, IEEE INT CONF AUTOM, P301
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2012, SCI COMPUT PROGRAM, V77, P743, DOI 10.1016/j.scico.2010.10.003
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Reps T, 2005, SCI COMPUT PROGRAM, V58, P206, DOI 10.1016/j.scico.2005.02.009
   Reps T, 2007, LECT NOTES COMPUT SC, V4855, P23
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Schuppan V, 2006, ELECTRON NOTES THEOR, V149, P79, DOI 10.1016/j.entcs.2005.11.018
   Seshadri P., 2008, GENERIC SOCKET PROGR
   Shoham S, 2008, IEEE T SOFTWARE ENG, V34, P651, DOI 10.1109/TSE.2008.63
   Song F., 2013, P 10 INT C INT FORM, P192, DOI DOI 10.1007/978-3-642-38613-8_14
   Song F, 2012, LECT NOTES COMPUT SC, V7214, P110, DOI 10.1007/978-3-642-28756-5_9
   Song F, 2013, LECT NOTES COMPUT SC, V7795, P416, DOI 10.1007/978-3-642-36742-7_29
   Song F, 2011, LECT NOTES COMPUT SC, V6901, P434, DOI 10.1007/978-3-642-23217-6_29
   Suwimonteerabuth D, 2006, LECT NOTES COMPUT SC, V4218, P141
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Visser W, 2005, LECT NOTES COMPUT SC, V3639, P27
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
NR 55
TC 2
Z9 3
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 961
EP 985
DI 10.1007/s10270-015-0473-1
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800004
DA 2024-07-18
ER

PT J
AU Varró, G
   Deckwerth, F
   Wieber, M
   Schürr, A
AF Varro, Gergely
   Deckwerth, Frederik
   Wieber, Martin
   Schuerr, Andy
TI An algorithm for generating model-sensitive search plans for pattern
   matching on EMF models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graph pattern matching; Search plan generation algorithm;
   Model-sensitive search plan
AB In this paper, we propose a new model-sensitive search plan generation algorithm to speed up the process of graph pattern matching. This dynamic-programming-based algorithm, which is able to handle general n-ary constraints in an integrated manner, collects statistical data from the underlying EMF model and uses this information for optimization purposes. Additionally, the search plan generation algorithm itself and its runtime effects on the pattern matching engine have been evaluated by complexity analysis techniques and by quantitative performance measurements, respectively.
C1 [Varro, Gergely; Deckwerth, Frederik; Wieber, Martin; Schuerr, Andy] Tech Univ Darmstadt, Real Time Syst Lab, D-64283 Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Varró, G (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Merckstr 25, D-64283 Darmstadt, Germany.
EM gergely.varro@es.tu-darmstadt.de; frederik.deckwerth@es.tu-darmstadt.de;
   martin.wieber@es.tu-darmstadt.de; andy.schuerr@es.tu-darmstadt.de
FU Alexander von Humboldt Foundation; DFG; CASED
FX Gergely Varro is supported by the Postdoctoral Research Fellowship of
   the Alexander von Humboldt Foundation, and associated with the Center
   for Advanced Security Research Darmstadt, and the DFG funded CRC 1053
   MAKI.; Frederik Deckwerth is supported by CASED (www.cased.de).
CR Anjorin A., 2012, ECEASST, V49, P1
   [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Batz GV, 2008, LECT NOTES COMPUT SC, V5088, P471
   Buchmann Thomas, 2012, Applications of Graph Transformations with Industrial Relevance. 4th International Symposium, AGTIVE 2011. Revised Selected and Invited Papers, P198, DOI 10.1007/978-3-642-34176-2_17
   Byröd M, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P288
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Geiger L., 2005, em PROCEEDINGS OF THE FUJABA DAYS 2005, P57
   Giese H, 2009, P 8 INT WORKSH GRAPH, V18
   Horvath A., 2007, P 6 INT WORKSH GRAPH, V6
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Lambers L., 2012, P 1 INT WORKSH BID T, V49
   Lauder M., 2013, THESIS U DARMSTADT
   Le WC, 2012, PROC INT CONF DATA, P666, DOI 10.1109/ICDE.2012.37
   Lee C, 2001, IEEE T KNOWL DATA EN, V13, P298, DOI 10.1109/69.917567
   Meinel C., 1998, ALGORITHMS DATA STRU
   Moerkotte G., 2006, VLDB, P930
   Neumann T, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P627
   Ozsu M.T., 1994, ACM T INFORM SYST, V8, P387
   Pietro Cordella Luigi, 2001, 3 IAPR TC15 WORKSH G, P149, DOI [10.1016/S0167-8655(02)00248-9, DOI 10.1016/S0167-8655(02)00248-9]
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Roebuck K., 2011, OBJECT RELATIONAL MA
   Stocker Markus., 2008, PROCEEDING 17 INT C, P595, DOI [10.1145/1367497.1367578, DOI 10.1145/1367497.1367578]
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Varro Gergely, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P368, DOI 10.1007/978-3-642-31491-9_28
   Varro Gergely, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P224, DOI 10.1007/978-3-642-30476-7_15
   Varro G., 2008, THESIS BUDAPEST U TE
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Wickes W.E, 1968, LOGIC DESIGN INTEGRA
   Zundorf A., 1996, Graph Grammars and Their Application to Computer Science. 5th International Workshop. Selected Papers, P454, DOI 10.1007/3-540-61228-9_105
NR 32
TC 10
Z9 12
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 597
EP 621
DI 10.1007/s10270-013-0372-2
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400005
DA 2024-07-18
ER

PT J
AU Iqbal, MZ
   Arcuri, A
   Briand, L
AF Iqbal, Muhammad Zohaib
   Arcuri, Andrea
   Briand, Lionel
TI Environment modeling and simulation for automated testing of soft
   real-time embedded software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Environment modeling; Environment simulation; Automated testing;
   Model-based testing; Real-time embedded systems; Search based software
   engineering
ID CODE GENERATION; UML
AB Given the challenges of testing at the system level, only a fully automated approach can really scale up to industrial real-time embedded systems (RTES). Our goal is to provide a practical approach to the model-based testing of RTES by allowing system testers, who are often not familiar with the system's design but are application domain experts, to model the system environment in such a way as to enable its black-box test automation. Environment models can support the automation of three tasks: the code generation of an environment simulator to enable testing on the development platform or without involving actual hardware, the selection of test cases, and the evaluation of their expected results (oracles). From a practical standpoint-and such considerations are crucial for industrial adoption-environment modeling should be based on modeling standards (1) that are at an adequate level of abstraction, (2) that software engineers are familiar with, and (3) that are well supported by commercial or open source tools. In this paper, we propose a precise environment modeling methodology fitting these requirements and discuss how these models can be used to generate environment simulators. The environment models are expressed using UML/MARTE and OCL, which are international standards for real-time systems and constraint modeling. The presented techniques are evaluated on a set of three artificial problems and on two industrial RTES.
C1 [Iqbal, Muhammad Zohaib] Natl Univ Comp & Emerging Sci, Dept Comp Sci, Islamabad, Pakistan.
   [Arcuri, Andrea] Simula Res Lab, Fornebu, Norway.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Walferdange, Luxembourg.
RP Iqbal, MZ (corresponding author), Natl Univ Comp & Emerging Sci, Dept Comp Sci, Islamabad, Pakistan.
EM zohaib.iqbal@nu.edu.pk; arcuri@simula.no; lionel.briand@uni.lu
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
FU Norwegian Research Council; PEARL grant from the National Research Fund,
   Luxembourg (Validation and Verification Laboratory) [FNR/P10/03]
FX The work presented in this paper was supported by Norwegian Research
   Council and was produced as part of the ITEA 2 VERDE project. Lionel
   Briand was partly supported by a PEARL grant from the National Research
   Fund, Luxembourg (FNR/P10/03 - Validation and Verification Laboratory).
   We are thankful to Christine Husa, Tor Sjowall, John Roger Johansen,
   Erling Marhussen, Dag Kristensen, and Anders Emil Olsen, all from Tomra
   and Bjorn Nordmoen, Petter Eide, Tore Andre Nilsen, and Sofia Wegger
   from WesternGeco for their technical support.
CR Adjir N., 2009, LECT NOTES COMPUTER
   Ali S., 2011, 11 INT C QUAL SOFTW
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2008, A Practical Guide To SysML: The Systems Modeling Language
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   [Anonymous], S SEARCH BAS SOFTW E
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Artemis, 2011, ART JOINT UND PUBL P
   Auguston M, 2006, INFORM SOFTWARE TECH, V48, P971, DOI 10.1016/j.infsof.2006.03.005
   Axelsson J, 2001, 8 ANN IEEE INT C WOR
   Broekman Bart., 2003, Testing embedded software
   Burmeister C., 1993, Proceedings of the IEEE Workshop on Real-Time Applications (Cat.No.93TH0559-5), P142, DOI 10.1109/RTA.1993.263099
   Chauvel F, 2005, LECT NOTES COMPUT SC, V3713, P54, DOI 10.1007/11557432_5
   Chin B, 2008, LECT NOTES COMPUT SC, V5142, P566, DOI 10.1007/978-3-540-70592-5_24
   Choi K.S., 2006, IASTED INT C P
   David A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P61, DOI 10.1109/ICST.2009.38
   Du Bousquet L., 1999, ICSE 99 P 21 INT C S
   Ferreira L., 1998, P 5 C PATT LANG PROG
   Fiorentini C, 2010, LECT NOTES COMPUT SC, V6142, P77, DOI 10.1007/978-3-642-13688-7_6
   Francis G., 2007, 22 ANN IEEE APPL POW
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomaa H., 2000, DESIGNING CONCURRENT
   Heisel M., 2008, FACHGRUPPENTREFFEN R, P28
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Holt N., 2006, CRIT SYST DEV US MOD
   Huafeng Yu, 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P21, DOI 10.1109/MEMCOD.2011.5970507
   IBM, 2011, IBM RAT RHAPS
   Iqbal Muhammad Zohaib, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P642, DOI 10.1007/978-3-642-33666-9_41
   Iqbal M. Z., 2012, INT S SOFTW TEST AN
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Karsai G, 2008, SCI COMPUT PROGRAM, V73, P26, DOI 10.1016/j.scico.2008.05.006
   Kishi T., 2004, WORKSH EARL ASP
   Kreiner C., 1998, EUROMICRO 98 P 24 C
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Kruse P.M., 2009, P 11 ANN C GEN EV CO
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Larsen K.G., 2005, Proceedings of the 5th ACM international conference on Embedded software, P299, DOI DOI 10.1145/1086228.1086283
   Larsen K.G., 2005, LECT NOTES COMPUTER
   Lindlar F., 2010, P 2010 3 INT C SOFTW
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mooney J., 2009, P 2009 SPRING SIM MU
   Mraidha C, 2008, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2008.37
   Musa J.D., 1992, 3 INT S SOFTW REL EN
   Niaz Iftikhar Azim, 2005, International Journal of Computer & Information Science, V6, P83
   Oldevik J., 2006, MOFSCRIPT USER GUIDE
   OMG, 2012, UN MOD LANG SUP VERS
   OMG, 2010, OBJ CONSTR LANG SPEC
   OMG, 2010, CONCR SYNT UML ACT L
   OMG, 2009, MOD AN REAL TIM EMB
   Palfinger G., 1997, 4 PATT LANG PROGR PL
   Peleska J, 2011, LECT NOTES COMPUT SC, V7019, P146, DOI 10.1007/978-3-642-24580-0_11
   Peleska Jan., 2011, Automated Model-Based Testing with RT-Tester
   Peñil P, 2010, INNOV SYST SOFTW ENG, V6, P65, DOI 10.1007/s11334-009-0105-4
   Pettit R. G.  IV, 2004, UML Modeling Languages and Applications. UML 2004 Satellite Activities. Revised Selected Papers (Lecture Notes in Computer Science Vol.3297), P129
   Piel E., 2008, MODELING ANAL REAL T, V8, P65
   Pilitowski R, 2007, INNOVATIONS AND ADVANCED TECHNIQUES IN COMPUTER AND INFORMATION SCIENCES AND ENGINEERING, P421, DOI 10.1007/978-1-4020-6268-1_75
   Quadri I. R., 2010, 2010 Conference on Design and Architectures for Signal and Image Processing (DASIP 2010), P68, DOI 10.1109/DASIP.2010.5706248
   Rodrigues W., 2012, COMPUT SCI ENG
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Samek M., 2009, Practical UML Statecharts in C /C + +
   Schamai W., 2009, 7 INT MOD C COM IT
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Short M, 2008, J SYST SOFTWARE, V81, P1163, DOI 10.1016/j.jss.2007.08.026
   Ubayashi N., 2008, P INT WORKSH MOD SOF, P57
   Vidal J, 2009, DES AUT TEST EUROPE, P226
   Wainer GA, 2009, COMPUT ANAL SYNTH DE, P3
   Zheng M, 2008, J SYST SOFTWARE, V81, P286, DOI 10.1016/j.jss.2007.05.009
NR 69
TC 33
Z9 34
U1 0
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 483
EP 524
DI 10.1007/s10270-013-0328-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100027
DA 2024-07-18
ER

PT J
AU Woodside, M
   Petriu, DC
   Merseguer, J
   Petriu, DB
   Alhaj, M
AF Woodside, Murray
   Petriu, Dorina C.
   Merseguer, Jose
   Petriu, Dorin B.
   Alhaj, Mohammad
TI Transformation challenges: from software models to performance models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software performance; Performance analysis; Model transformation; UML;
   MARTE profile; Layered queueing networks
ID SCENARIOS; DESIGN
AB A software model can be analysed for non-functional requirements by extending it with suitable annotations and transforming it into analysis models for the corresponding non-functional properties. For quantitative performance evaluation, suitable annotations are standardized in the "UML Profile for Modeling and Analysis of Real-Time Embedded systems" (MARTE) and its predecessor, the "UML Profile for Schedulability, Performance and Time". A range of different performance model types (such as queueing networks, Petri nets, stochastic process algebra) may be used for analysis. In this work, an intermediate "Core Scenario Model" (CSM) is used in the transformation from the source software model to the target performance model. CSM focuses on how the system behaviour uses the system resources. The semantic gap between the software model and the performance model must be bridged by (1) information supplied in the performance annotations, (2) in interpretation of the global behaviour expressed in the CSM and (3) in the process of constructing the performance model. Flexibility is required for specifying sets of alternative cases, for choosing where this bridging information is supplied, and for overriding values. It is also essential to be able to trace the source of values used in a particular performance estimate. The performance model in turn can be used to verify responsiveness and scalability of a software system, to discover architectural limitations at an early stage of development, and to develop efficient performance tests. This paper describes how the semantic gap between software models in UML+MARTE and performance models (based on queueing or Petri nets) can be bridged using transformations based on CSMs, and how the transformation challenges are addressed.
C1 [Woodside, Murray; Petriu, Dorina C.; Petriu, Dorin B.; Alhaj, Mohammad] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Merseguer, Jose] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
C3 Carleton University; University of Zaragoza
RP Petriu, DC (corresponding author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada.
EM cmw@sce.carleton.ca; Dorina.Petriu@sce.carleton.ca; jmerse@unizar.es;
   dorin@sce.carleton.ca; malhaj@sce.carleton.ca
RI Alhaj, Mohammad/JED-7176-2023; Merseguer, Jose/A-6028-2012
OI Alhaj, Mohammad/0000-0002-4517-8895; Merseguer,
   Jose/0000-0001-5538-3553; Petriu, Dorina/0000-0003-4688-9370
FU NSERC, the Natural Sciences and Engineering Research Council of Canada
FX This research was supported by grants from NSERC, the Natural Sciences
   and Engineering Research Council of Canada, through its Discovery and
   Strategic Projects programs.
CR [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BALSAMO S, 2003, P ESM 03 NOTT UK JUN
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2007, J SYST SOFTWARE, V80, P1843, DOI 10.1016/j.jss.2007.02.029
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   Canevet C., 2004, Software Engineering Notes, V29, P74, DOI 10.1145/974043.974055
   Cortellessa V., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P58, DOI 10.1145/350391.350406
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Franks G, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P239, DOI 10.1109/MASCOT.2004.1348262
   Franks G., 2006, P INT C QUANT EV SYS
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Goble C.A., 2010, NUCL ACIDS RES S2, V38
   Grassi Vincenzo., 2005, WOSP 05 P 5 INT WORK, P25
   Gu, 2005, P 5 INT WORKSHOP SOF, P99
   International Standards Organization, 2004, 159091 ISO IEC
   Jansen D. N., 2005, Performance Evaluation Review, V32, P28, DOI 10.1145/1059816.1059822
   Kähkipuro P, 1999, LECT NOTES COMPUT SC, V1723, P356
   Khan RH, 2010, INT CONF COMP SCI, P677, DOI 10.1109/ICCSIT.2010.5564533
   Lopez-Grao Merseguer., 2004, P 4 INT WORKSHOP SOF, P25
   Marzolla M, 2004, INT CONF QUANT EVAL, P340
   Menascé DA, 2000, IEEE T SOFTWARE ENG, V26, P1066, DOI 10.1109/32.881718
   Merseguer J, 2003, THESIS U ZARAGOZA SP
   *OBJ MAN GROUP, 2005, FORMAL050102 OMG
   Object Management Group, 2005, FORMAL100505 OBJ MAN
   Object Management Group, 2009, FORMAL20091102 OMG
   PETRIU D, 2002, P 12 INT C MOD TOOLS
   PETRIU DC, 2006, MDD CONCEPTS EXPT IL, P53
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C.U., 2004, P QEST 2004 1 INT C
   Smith CU, 2007, LECT NOTES COMPUT SC, V4486, P395
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Transaction Processing Council, 2002, TBC BENCHM W WEB COM
   TRIBASTONE M, 2008, P 5 INT C QUANT EV S, P205
   Woodside CM, 2001, INT J SOFTW ENG KNOW, V11, P407, DOI 10.1142/S0218194001000608
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   WOODSIDE M, 2002, P 24 INT C SOFTW ENG
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Woodside M, 2009, J SYST SOFTWARE, V82, P56, DOI 10.1016/j.jss.2008.03.067
   Xu J, 2010, PERFORM EVALUATION, V67, P585, DOI 10.1016/j.peva.2009.07.004
   Zeng Y.X., 2005, THESIS OTTAWA
NR 43
TC 28
Z9 30
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1529
EP 1552
DI 10.1007/s10270-013-0385-x
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Levendovszky, T
   Balasubramanian, D
   Narayanan, A
   Shi, F
   van Buskirk, C
   Karsai, G
AF Levendovszky, Tihamer
   Balasubramanian, Daniel
   Narayanan, Anantha
   Shi, Feng
   van Buskirk, Chris
   Karsai, Gabor
TI A semi-formal description of migrating domain-specific models with
   evolving domains
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB One of the main advantages of defining a domain-specific modeling language (DSML) is the flexibility to adjust the language definition to changing requirements or in response to a deeper understanding of the domain. With the industrial applications of domain-specific modeling environments, models are valuable investments. If the modeling language evolves, these models must be seamlessly migrated to the evolved DSML. Although the changes stemming from the language evolution are not abrupt in nature, migrating existing models to a new language is still a challenging task. Our solution is the Model Change Language (MCL) tool set, which defines a DSML to describe the migration rules and then performs the model migration automatically. In this paper, we describe the precise semantics of MCL and its execution, along with the confluence of the migration.
C1 [Levendovszky, Tihamer; Balasubramanian, Daniel; Narayanan, Anantha; Shi, Feng; van Buskirk, Chris] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN 37235 USA.
C3 Vanderbilt University
RP Levendovszky, T (corresponding author), Vanderbilt Univ, Inst Software Integrated Syst, 221 Kirkland Hall, Nashville, TN 37235 USA.
EM tihamer@isis.vanderbilt.edu
RI Karsai, Gabor/GSN-1874-2022
OI Karsai, Gabor/0000-0001-7775-9099; Balasubramanian,
   Daniel/0000-0002-7531-0594
FU DARPA, under its Software Producibility Program
FX This work was sponsored by DARPA, under its Software Producibility
   Program. The views and conclusions presented are those of the authors
   and should not be interpreted as representing official policies or
   endorsements of DARPA or the US government. Approved for Public Release,
   Distribution Unlimited.
CR Agrawal A., 2002, OOPSLA 2002 WORKSH G
   Bernstein PhilipA., 2007, SIGMOD 07
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2006, P INT WORKSH EV LARG
   Favre J.-M., 2003, P INT WORKSH EV LARG
   Gruschko B., 2007, P INT WORKSH MOD DRI
   Herrmannsdoerfer M., 2009, MCCM WORKSH MODELS C
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Lattmann Z., 2012, ASME 2012 ASME 2012
   Ledeczi A., 2003, ACM Transactions on Modeling and Computer Simulation, V13, P82, DOI 10.1145/778553.778557
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   MOF: Meta-Object Facility: Standards available fromObject Management Group, 2011, MET FAC STAND AV OBJ
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Neema S., 2008, ISIS0891
   Rose L., 2010, P MOD EV WORKSH ME 2, P108
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Sprinkle J., 2003, THESIS VANDERBILT U
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
NR 22
TC 4
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 807
EP 823
DI 10.1007/s10270-012-0313-5
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300017
DA 2024-07-18
ER

PT J
AU Groenewegen, DM
   Visser, E
AF Groenewegen, Danny M.
   Visser, Eelco
TI Integration of data validation and user interface concerns in a DSL for
   web applications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web application; Domain-specific language; Data validation
ID MODELING LANGUAGE
AB Data validation rules constitute the constraints that data input and processing must adhere to in addition to the structural constraints imposed by a data model. Web modeling tools do not make all types of data validation explicit in their models, hampering full code generation and model expressivity. Web application frameworks do not offer a consistent interface for data validation. In this paper, we present a solution for the integration of declarative data validation rules with user interface models in the domain of web applications, unifying syntax, mechanisms for error handling, and semantics of validation checks, and covering value well-formedness, data invariants, input assertions, and action assertions. We have implemented the approach in WebDSL, a domain-specific language for the definition of web applications.
C1 [Groenewegen, Danny M.; Visser, Eelco] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
C3 Delft University of Technology
RP Groenewegen, DM (corresponding author), Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
EM d.m.groenewegen@tudelft.nl; visser@acm.org
OI Groenewegen, Danny/0000-0003-3400-4416; Visser,
   Eelco/0000-0002-7384-3370
CR [Anonymous], 2006, SIGMOD C
   [Anonymous], 2006, OBJECT CONSTRAINT LA
   Bauer Christian., 2006, Java Persistence with Hibernate
   Book M, 2009, IEEE INT CONF AUTOM, P321, DOI 10.1109/ASE.2009.10
   Boyer J., 2007, XFORMS 1 0
   Brambilla M., 2007, WEB ENG MODELLING IM, P221
   Brown D., 2008, Struts 2 in action
   Burns E., 2006, JAVASERVER FACES SPE
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   DeMichiel L., 2006, JSR 220 ENTERPRISE J
   Frasincar F, 2006, J WEB ENG, V5, P175
   Groenewegen Danny, 2008, 2008 8th International Conference on Web Engineering (ICWE), P175, DOI 10.1109/ICWE.2008.15
   Groenewegen D.M., 2008, DOMAIN SPECIFIC MODE, P64
   Groenewegen D.M., 2009, LECT NOTES COMPUTER
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5301, P113, DOI 10.1007/978-3-540-87875-9_8
   Järvi J, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P89
   Kats LCL, 2008, ACM SIGPLAN NOTICES, V43, P91, DOI 10.1145/1449955.1449772
   KITTOLI S, 2008, SEAM CONTEXTUAL COMP
   Koch N., 2001, WEB ORIENTED SOFTWAR
   Kraus A., 2007, MOD DRIV WEB ENG MDW
   Lima F, 2003, FIRST LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P93, DOI 10.1109/LAWEB.2003.1250287
   MacDonald M., 2007, PRO ASP NET 3 5 C 20
   Nunes D.A., 2006, Proceedings of ICWE, P153
   Pastor O., 2003, International Workshop on Web Oriented Software Technology (IWWOST), P65
   Ruby S., 2009, Agile Web Development with Rails, V3rd
   Scaffidi C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1, DOI 10.1145/1368088.1368090
   Schwabe D., 1996, Seventh ACM Conference on Hypertext. Hypertext '96, P116, DOI 10.1145/234828.234840
   Van der Sluijs K., 2006, P 6 INT C WEB ENG PA, P337
   Vdovjak R., 2003, Journal of Web Engineering, V2, P3
   Visser E, 2008, LECT NOTES COMPUT SC, V5235, P291, DOI 10.1007/978-3-540-88643-3_7
NR 31
TC 7
Z9 7
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 35
EP 52
DI 10.1007/s10270-010-0173-9
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800005
OA hybrid
DA 2024-07-18
ER

PT J
AU Gronmo, R
   Krogdahl, S
   Moller-Pedersen, B
AF Gronmo, Roy
   Krogdahl, Stein
   Moller-Pedersen, Birger
TI A collection operator for graph transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Graph transformation; Model transformation; Matching
ID CLONING; RULES
AB Algebraic graph transformation has a wellestablished theory and associated tools that can be used to perform model transformations. However, the lack of a construct to match and transform collections of similar subgraphs makes graph transformation complex or even impractical to use in a number of transformation cases. This is addressed in this paper, by defining a collection operator which is powerful, yet simple to model and understand. A rule can contain multiple collection operators, each with lower and upper bound cardinalities, and the collection operators can be nested. An associated matching process dynamically builds a collection free rule that enables us to reuse the existing graph transformation apparatus. We present model transformation examples from different modeling domains to illustrate the benefit of the approach.
C1 [Gronmo, Roy; Krogdahl, Stein; Moller-Pedersen, Birger] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Gronmo, Roy] SINTEF ICT, Oslo, Norway.
C3 University of Oslo; SINTEF
RP Gronmo, R (corresponding author), Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
EM roy.gronmo@sintef.no
FU Research Council of Norway [167172/V30]; DiVA project [215412]
FX The work reported in this paper has been funded by The Research Council
   of Norway, grant no. 167172/V30 (the SWAT project), and by the DiVA
   project Grant no. 215412 (EU FP7 STREP).
CR [Anonymous], ECEASST
   Balasubramanian D., 2007, ECEASST, V6
   Batory D., 2005, LECT NOTES COMPUTER, V3714
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Biermann E., 2008, MOD DRIV ENG LANG SY
   BIERMANN E, 2008, IEEE S VIS LANG HUM
   de Lara J., 2004, Electron. Notes Theor. Comput. Sci, V109, P17, DOI [10.1016/j.entcs.2004.02.053, DOI 10.1016/J.ENTCS.2004.02.053]
   *ECL CONS, 2007, ECL GRAPH MOD FRAM G
   Eder J., 2005, C INT ENT SOFTW APPL
   EHRIG H, 2004, LECT NOTES COMPUTER
   Ehrig H., 2007, LECT NOTES COMPUTER
   Fuss C., 2008, LECT NOTES COMPUTER
   Geiger L., 2006, ELECT NOTES THEOR CO, V148
   Gronmo R., 2008, LECT NOTES COMPUTER, V5088
   Gronmo R., 2009, LECT NOTES COMPUTER, V5563
   Gronmo R., PROOF OF CONCEPT MOD
   Gronmo R., 2009, LECT NOTES COMPUTER, V5562
   Heckel R., 2002, GRAPH TRANSF 1 INT C
   Hoffmann B, 2006, ELECTRON NOTES THEOR, V152, P53, DOI 10.1016/j.entcs.2006.01.014
   Koehler J, 2005, IBM SYST J, V44, P47, DOI 10.1147/sj.441.0047
   Lambers L., 2006, LECT NOTES COMPUTER
   Lawley M, 2006, LECT NOTES COMPUT SC, V3844, P139
   Levendovszky T., 2007, ELECT NOTES THEOR CO, V175
   Lindqvist J., 2007, WORKSH GRAPH TRANSF
   Minas M, 2008, ELECTRON NOTES THEOR, V211, P241, DOI 10.1016/j.entcs.2008.04.046
   *OBJ MAN GROUP, 2003, UML 2 0 SUP SPEC OMG
   *OBJ MAN GROUP, 2004, BUS PROC MOD NOT BPM
   Oldevik J., 2005, MOD DRIV ARCH FDN AP
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Plump D, 2005, LECT NOTES COMPUT SC, V3838, P280
   Rensink A., 2006, LECT NOTES COMPUTER
   Rensink A., 2009, P 8 INT WORKSH GRAPH
   Schurr A., 1995, LECT NOTES COMPUTER
   SKOGAN D, 2004, P 8 IEEE INT ENT DIS
   SUNYE G, 2001, LECT NOTES COMPUTER
   Taentzer G., 2003, APPL GRAPH TRANSF IN
   Taentzer G., 1996, THESIS TU BERLIN
   Varro G., 2008, LECT NOTES COMPUTER, V5088
   Whittle J., 2009, T ASPECT ORIENTED SO, VVI, P5560
NR 39
TC 5
Z9 6
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 121
EP 144
DI 10.1007/s10270-011-0190-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800010
OA hybrid
DA 2024-07-18
ER

PT J
AU Henderson-Sellers, B
AF Henderson-Sellers, B.
TI Standards harmonization: theory and practice
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Standards; Modelling; Metamodels; Software development; Quality
AB As software engineering (and other) standards are developed over a period of years or decades, the suite of standards thus developed often begins to lose any cohesion that it originally possessed. This has led to discussions in the standards communities of possible collaborative development, interoperability and harmonization of their existing standards. Here, I assess how such harmonization efforts may be aided by recent research results to create better quality standards to replace the status quo.
C1 Univ Technol Sydney, Ctr Object Technol Applicat & Res, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Henderson-Sellers, B (corresponding author), Univ Technol Sydney, Ctr Object Technol Applicat & Res, Sydney, NSW 2007, Australia.
EM Brian.Henderson-Sellers@uts.edu.au
CR Agerfalk P., 2006, ADV TOPICS DATABASE, V5, P63
   [Anonymous], 24744 ISOIEC
   [Anonymous], 2008, 12207 ISOIEC
   [Anonymous], 2002, 15288 ISOIEC
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   BSI, 2008, 7272 BSI
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO, P330
   Gonzalez-Perez C, 2005, SOFTWARE QUAL J, V13, P195, DOI 10.1007/s11219-005-6217-7
   Gonzalez-Perez C., 2006, An ontology for software development methodologies and endeavours, P123
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Hamilton C., 2010, REQUIEM SPECIES WHY, P286
   Henderson-Sellers B, 2005, INFORM SOFTWARE TECH, V47, P49, DOI 10.1016/j.infsof.2004.06.001
   Henderson-Sellers B., 2006, META MODEL ONTOL WOM, V2006, P11
   Henderson-Sellers B., 2005, Software Systems Modeling, V4, P4, DOI DOI 10.1007/s10270-004-0076-8
   Henderson-Sellers B, 2010, LECT NOTES COMPUT SC, V6412, P219, DOI 10.1007/978-3-642-16373-9_16
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   HENDERSONSELLER.B, 2006, LECT NOTES INFORM P, V84, P13
   [ISO IEC], 2005, WD1247481 ISOIEC
   [ISO IEC], 24774 ISOIEC DTR
   [ISO IEC], 2005, 155045 ISOIEC
   *ISO IEC, 1998, TR15504 ISOIEC
   ISO/IEC, 2008, Standard ISO/IEC 15288:2008
   *ISO IEC, 12207 ISOIEC
   McBride T, 2011, IFIP ADV INF COMM TE, V351, P64
   Moody D., 2008, INT C SOFTW LANG ENG, P16
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   OMG, 2008, FORMAL20080401 OMG
   OMG SPEM1.0, 2002, FORMAL021114 OMG
   Qureshi M.A., 2011, FRAMEWORK META UNPUB
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Sowa JF, 2000, LECT NOTES ARTIF INT, V1867, P55
   Taplin R., 2011, FUTURE WORL IN PRESS
NR 34
TC 9
Z9 9
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 153
EP 161
DI 10.1007/s10270-011-0213-0
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300002
DA 2024-07-18
ER

PT J
AU Islam, S
   Mouratidis, H
   Jürjens, J
AF Islam, Shareeful
   Mouratidis, Haralambos
   Juerjens, Jan
TI A framework to support alignment of secure software engineering with
   legal regulations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Secure software engineering; Non-functional properties; Security
   requirements; Secure Tropos; UMLsec; Modelling regulations; Legal
   constraints
ID REQUIREMENTS; INFORMATION; SYSTEMS; TROPOS
AB Regulation compliance is getting more and more important for software systems that process and manage sensitive information. Therefore, identifying and analysing relevant legal regulations and aligning them with security requirements become necessary for the effective development of secure software systems. Nevertheless, Secure Software Engineering Modelling Languages (SSEML) use different concepts and terminology from those used in the legal domain for the description of legal regulations. This situation, together with the lack of appropriate background and knowledge of laws and regulations, introduces a challenge for software developers. In particular, it makes difficult to perform (i) the elicitation of appropriate security requirements from the relevant laws and regulations; and (ii) the correct tracing of the security requirements throughout the development stages. This paper presents a framework to support the consideration of laws and regulations during the development of secure software systems. In particular, the framework enables software developers (i) to correctly elicit security requirements from the appropriate laws and regulations; and (ii) to trace these requirements throughout the development stages in order to ensure that the design indeed supports the required laws and regulations. Our framework is based on existing work from the area of secure software engineering, and it complements this work with a novel and structured process and a well-defined method. A practical case study is employed to demonstrate the applicability of our work.
C1 [Islam, Shareeful] Tech Univ Munich, Inst Informat, Munich, Germany.
   [Mouratidis, Haralambos] Univ E London, Sch Comp IT & Engn, London E15 4LZ, England.
   [Juerjens, Jan] TU Dortmund, Dept Comp Sci, Dortmund, Germany.
C3 Technical University of Munich; University of East London; Dortmund
   University of Technology
RP Islam, S (corresponding author), Tech Univ Munich, Inst Informat 14, Munich, Germany.
EM islam@in.tum.de; haris@uel.ac.uk
RI Islam, Shareeful/E-8784-2012
OI Islam, Shareeful/0000-0003-0885-1881; Mouratidis,
   Haralambos/0000-0002-2599-0712
FU German Academic Exchange Service (DAAD); EU [ICT-FET-231101]
FX The work is partly supported by the German Academic Exchange Service
   (DAAD) and by the EU project Secure Change (ICT-FET-231101).
CR Breaux TD, 2005, SIXTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P67, DOI 10.1109/POLICY.2005.12
   BREAUX TD, 2006, P 13 IEEE INT C REQ
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   *BUND, FED DAT PROT ACT
   Chung L., 1999, NONFUNCTIONAL REQUIR
   DARIMONT R, 2006, P CIASE06 WORKSH REG
   DEVANBU P, 2000, P ICSE 2000 C FUT SO
   FIRESMITH D, 2003, J OBJ TECHNOL, V2
   Ghanavati S, 2007, LECT NOTES COMPUT SC, V4495, P218
   GIORGINI P, 2005, P 13 IEEE INT REQ EN
   Haley CB, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P16
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   HERRMANN A, 2007, EXPLORING CHARACTERI
   Herrmann A, 2008, REQUIR ENG, V13, P73, DOI 10.1007/s00766-007-0058-9
   Hohfeld WN, 1913, YALE LAW J, V23, P16, DOI 10.2307/785533
   *INF SOC, SUMM LEG
   ISLAM S, 2008, ASS MODELS 08 TOUL F
   ISLAM S, 2008, WORKSH BAND SOFTW QU
   Juijens J, 2007, INT J SOFTW TOOLS TE, V9, P527
   JURJENS J, 2005, SOUND METHODS EFFECT, P322
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   MASSACCI F, 2004, DIT04103
   MAY MJ, 2006, P 19 COMP SEC FDN WO
   Mead NR, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P44
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mouratidis H, 2005, INFORM SYST, V30, P609, DOI 10.1016/j.is.2004.06.002
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   Mouratidis H., 2004, PhD thesis
   MOURATIDIS H, 2006, INTEGRATING SECURITY, P1
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2007, INFORM SYST, V32, P1166, DOI 10.1016/j.is.2007.03.002
   Mouratidis H, 2006, LECT NOTES COMPUT SC, V4001, P48, DOI 10.1007/11767138_5
   OTTO PN, 2007, 15 IEEE INT RE C
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   SARTOR G, 200611 EUI
   SIENA A, 1 INT WORKSH REQ ENG
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   *US DEP HHS, 2000, MED PRIV NAT STAND P
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
NR 40
TC 26
Z9 30
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2011
VL 10
IS 3
BP 369
EP 394
DI 10.1007/s10270-010-0154-z
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 785YJ
UT WOS:000292268800006
DA 2024-07-18
ER

PT J
AU Asikainen, T
   Männistö, T
AF Asikainen, Timo
   Mannisto, Tomi
TI Nivel: a metamodelling language with a formal semantics
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conceptual modelling; Metamodelling; NIVEL; Weight constraint rules;
   Formal semantics
ID UML
AB Much work has been done to clarify the notion of metamodelling and new ideas, such as strict metamodelling, distinction between ontological and linguistic instantiation, unified modelling elements and deep instantiation, have been introduced. However, many of these ideas have not yet been fully developed and integrated into modelling languages with (concrete) syntax, rigorous semantics and tool support. Consequently, applying these ideas in practice and reasoning about their meaning is difficult, if not impossible. In this paper, we strive to add semantic rigour and conceptual clarity to metamodelling through the introduction of Nivel, a novel metamodelling language capable of expressing models spanning an arbitrary number of levels. Nivel is based on a core set of conceptual modelling concepts: class, generalisation, instantiation, attribute, value and association. Nivel adheres to a form of strict metamodelling and supports deep instantiation of classes, associations and attributes. A formal semantics is given for Nivel by translation to weight constraint rule language (WCRL), which enables decidable, automated reasoning about Nivel. The modelling facilities of Nivel and the utility of the formalisation are demonstrated in a case study on feature modelling.
C1 [Asikainen, Timo; Mannisto, Tomi] Aalto Univ, Dept Comp Sci & Engn, Helsinki 02015, Finland.
C3 Aalto University
RP Asikainen, T (corresponding author), Aalto Univ, Dept Comp Sci & Engn, POB 9210, Helsinki 02015, Finland.
EM timo.asikainen@tkk.fi
RI Männistö, Tomi/ABC-7781-2021; Männistö, Tomi/I-3999-2013
OI Männistö, Tomi/0000-0001-7470-5183; Männistö, Tomi/0000-0001-7470-5183
CR [Anonymous], P 14 ANN ACM S PRINC
   [Anonymous], 1991, System Design Modeling and Metamodeling
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   ATKINSON C, 2002, ACM T MODEL COMPUT S, V22, P290
   ATKINSON C, 2001, LNCS, V2185, P19
   ATKINSON C, 2002, LECT NOTES COMPUTER, V2460
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Costal D, 2006, LECT NOTES COMPUT SC, V4215, P513
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Evans A, 1999, LECT NOTES COMPUT SC, V1618, P336
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   HENDERSONSELLER.B, 2006, 9 INT C MOD DRIV ENG, P16
   HendersonSellers B, 1996, J OBJECT-ORIENT PROG, V9, P44
   Kang Kyo C, 1990, Technical Report
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   KUHNE T, 2004, MODELLIERUNG 2004, P121
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   McUmber WE, 2001, PROC INT CONF SOFTW, P433, DOI 10.1109/ICSE.2001.919116
   Meyer B., 1990, INTRO THEORY PROGRAM
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   *OBJ MAN GROUP, 2006, FORMAL060501 OBJ MAN
   Olivé A, 2003, LECT NOTES COMPUT SC, V2681, P404
   *OMG, 2007, FORMAL20070205 OMG
   *OMG, 2006, FORMAL060101 OMG
   *OMG, 2007, FORMAL20070206 OMG
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SOININEN T, 2000, THESIS HELSINKI U TE
   Stachowiak H., 1973, ALLGEMEINE MODELLTHE
   Stefik M., 1983, LOOPS MANUAL
   Steimann F, 2001, JOOP, V14, P23
   SYRJANEN T, 2001, LECT NOTES ARTIF INT, V2713, P267
   THALHEIM B, 1992, LECT NOTES COMPUT SC, V645, P7
NR 39
TC 34
Z9 34
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2009
VL 8
IS 4
BP 521
EP 549
DI 10.1007/s10270-008-0103-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 486ST
UT WOS:000269218900005
DA 2024-07-18
ER

PT J
AU Balogh, Z
   Varró, D
AF Balogh, Zoltan
   Varro, Daniel
TI Model transformation by example using inductive logic programming
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 22nd ACM Symposium on Applied Computing
CY MAR 11-15, 2007
CL Seoul, SOUTH KOREA
SP ACM
DE Model transformation; By-example synthesis; Inductive logic programming
AB Model transformation by example is a novel approach in model-driven software engineering to derive model transformation rules from an initial prototypical set of interrelated source and target models, which describe critical cases of the model transformation problem in a purely declarative way. In the current paper, we automate this approach using inductive logic programming (Muggleton and Raedt in J Logic Program 19-20:629-679, 1994) which aims at the inductive construction of first-order clausal theories from examples and background knowledge.
C1 [Balogh, Zoltan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1117 Budapest, Hungary.
   [Balogh, Zoltan; Varro, Daniel] OptXware Res & Dev Ltd, Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Varró, D (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM zoltan.balogh@optxware.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Varro, Daniel/G-8963-2012
OI Varro, Daniel/0000-0002-8790-252X; 
CR *ALT, MAPFORCE 2006
   [Anonymous], JOURN BAS DONN AV BD
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], 1993, Watch what I do: programming by demonstration
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   CICCHETTI A, 2006, P 10 INT ENT DISTR O, P24
   De Raedt L., 1996, Logic Journal of IGPL, V4, P227
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Erwig M, 2003, LECT NOTES COMPUT SC, V2814, P342
   FABRO MDD, 2007, SAC 2007, P963
   Gerber A, 2002, LECT NOTES COMPUT SC, V2505, P90
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Huszerl G, 2002, COMPUT J, V45, P260, DOI 10.1093/comjnl/45.3.260
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   KONIGS A, 2006, J SOFTW SYS IN PRESS
   Lechner S, 2003, LECT NOTES COMPUT SC, V2736, P46
   LOWDEN BGT, 2002, LNCS, V2453, P587
   MOYLE S, 2003, LECT NOTES ARTIF INT, P182
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   *OBJ MAN GROUP, QVT REQ PROP QUER
   Ono K, 2002, 2002 SYMPOSIUM ON APPLICATIONS AND THE INTERNET (SAINT 2002), PROCEEDINGS, P150, DOI 10.1109/SAINT.2002.994471
   Repenning A, 2000, COMMUN ACM, V43, P90, DOI 10.1145/330534.330546
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   SCHURR A, 1995, LNCS, V903, P151
   SHEKHAR S, 1993, IEEE T KNOWL DATA EN, V5, P950, DOI 10.1109/69.250077
   Strommer M, 2007, LECT NOTES COMPUT SC, V4802, P116
   VARRO D, 2007, ACM S APPL COMP MOD
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
   Yan LL, 2001, SIGMOD REC, V30, P485, DOI 10.1145/376284.375729
   Zloof MM., 1975, VLDB, P1
   [No title captured]
   PROGOL
   PROVER9 AUTOMATED TH
   ALEPH MANUAL
NR 37
TC 38
Z9 44
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 347
EP 364
DI 10.1007/s10270-008-0092-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 466UE
UT WOS:000267687600004
DA 2024-07-18
ER

PT J
AU La Rosa, M
   van der Aalst, WMP
   Dumas, M
   ter Hofstede, AHM
AF La Rosa, Marcello
   van der Aalst, Wil M. P.
   Dumas, Marlon
   ter Hofstede, Arthur H. M.
TI Questionnaire-based variability modeling for system configuration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Variability modeling; System configuration; Questionnaire; Software
   product family
AB Variability management is a recurrent issue in systems engineering. It arises for example in enterprise systems, where modules are configured and composed to meet the requirements of individual customers based on modifications to a reference model. It also manifests itself in the context of software product families, where variants of a system are built from a common code base. This paper proposes an approach to capture system variability based on questionnaire models that include order dependencies and domain constraints. The paper presents analysis techniques to detect circular dependencies and contradictory constraints in questionnaire models, as well as techniques to incrementally prevent invalid configurations by restricting the space of allowed answers to a question based on previous answers. The approach has been implemented as a toolset and has been used in practice to capture configurable process models for film post-production.
C1 [La Rosa, Marcello; van der Aalst, Wil M. P.; Dumas, Marlon; ter Hofstede, Arthur H. M.] Queensland Univ Technol, BPM Grp, Brisbane, Qld 4001, Australia.
   [van der Aalst, Wil M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Dumas, Marlon] Univ Tartu, EE-50090 Tartu, Estonia.
C3 Queensland University of Technology (QUT); Eindhoven University of
   Technology; University of Tartu
RP La Rosa, M (corresponding author), Queensland Univ Technol, BPM Grp, Brisbane, Qld 4001, Australia.
EM m.larosa@qut.edu.au; w.m.p.v.d.aalst@tue.nl; marlon.dumas@ut.ee;
   a.terhofstede@qut.edu.au
RI Dumas, Marlon/H-2757-2015; van der Aalst, Wil/G-1248-2011; La Rosa,
   Marcello/J-1088-2012; ter Hofstede, Arthur/I-9787-2012
OI Dumas, Marlon/0000-0002-9247-7476; van der Aalst,
   Wil/0000-0002-0955-6940; ter Hofstede, Arthur/0000-0002-2730-0201; La
   Rosa, Marcello/0000-0001-9568-4035
CR Alter S., 1980, Decision Support Systems: Current Practise and Continuing Challenges
   [Anonymous], SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   ANTKIEWICZ M, 2004, P 5 C OBJ OR PROGR S
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 1997, IEEE T SOFTWARE ENG, V23, P67, DOI 10.1109/32.585497
   BATORY D, AHEAD TOOL SUITE
   BEDNASCH T, CAPTAINFEATURE
   *BIG LEV SOFTW INC, GEARS
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Clements PC, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P207
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   ESTUBLIER J, 1994, CONFIGURATION MANAGE, P99
   Hammouda I, 2005, LECT NOTES COMPUT SC, V3442, P145, DOI 10.1007/978-3-540-31984-9_12
   Kang Kyo C, 1990, Technical Report
   LAROSA M, 2007, P 19 INT C ADV INF S, P11
   Mannion Mike, 2002, LNCS, V2379, P176
   Minato S., 1990, DAC, Proceedings of the 27th ACM/IEEE Conference, (New York, NY, USA), P52
   POHL K, 2006, P 28 INT C SOFTW ENG, P1049
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   *PUR SYST, PUR SYST PUR VAR
   RAYMOND ES, 2000, CML2 LANGUAGE
   RAYMOND P, 2000, BDDC V2 BASIC BDD BA
   RECKER J, 2006, P 18 INT C ADV INF S, P369
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   SCHNIEDERS A, 2006, P 9 INT C BUS INF SY, P583
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tryggeseth E., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P216
   TURKAY E, 2004, P 42 ACM SE REG C HU, P166
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   *VANG SOFTW CO, VIST
   *VICS, EDI FRAM
NR 36
TC 66
Z9 67
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 251
EP 274
DI 10.1007/s10270-008-0090-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300007
OA Green Published
DA 2024-07-18
ER

PT J
AU Hsueh, NL
   Kuo, JY
   Lin, CC
AF Hsueh, Nien-Lin
   Kuo, Jong-Yih
   Lin, Ching-Chiuan
TI Object-oriented design: A goal-driven and pattern-based approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design pattern; Object-oriented design; Software quality; Goal-driven
   requirement engineering
ID REQUIREMENTS
AB In recent years, the influences of design patterns on software quality have attracted increasing attention in the area of software engineering, as design patterns encapsulate valuable knowledge to resolve design problems, and more importantly to improve the design quality. One of the key challenges in object-oriented design is how to apply appropriate design patterns during the system development. In this paper, design pattern is analyzed from different perspectives to see how it can facilitate design activities, handle non-functional requirement, solve design problems and resolve design conflicts. Based on the analysis, various kinds of applicability of design patterns are explored and integrated with a goal-driven approach to guiding developers to construct the object-oriented design model in a systematic manner. There are three benefits to the proposed approach: making it easy to meet requirements, helping resolve design conflicts, and facilitating improvement of the design quality.
C1 [Hsueh, Nien-Lin; Lin, Ching-Chiuan] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
   [Kuo, Jong-Yih] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
C3 Feng Chia University; National Taipei University of Technology
RP Hsueh, NL (corresponding author), Feng Chia Univ, Dept Informat Engn & Comp Sci, 100 Rd Wenhwa, Taichung 40724, Taiwan.
EM nlhsueh@fcu.edu.tw; yjkuo@csie.ntut.edu.tw; cclin@ocit.edu.tw
FU National Science Council (Taiwan) [NSC94-2213-E-035-041]
FX This research was supported by the National Science Council (Taiwan)
   under grants NSC94-2213-E-035-041.
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Bruegge B., 2000, Object-Oriented Software Engineering Conquering Complex and Changing Systems
   Budinsky FJ, 1996, IBM SYST J, V35, P151, DOI 10.1147/sj.352.0151
   Chung L, 2003, COMP STAND INTER, V25, P253, DOI 10.1016/S0920-5489(02)00096-X
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Ebert C, 1998, INFORM SOFTWARE TECH, V40, P175, DOI 10.1016/S0950-5849(98)00049-4
   Eden AH, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P143, DOI 10.1109/ASE.1997.632834
   Fowler M, 2003, IEEE SOFTWARE, V20, P56, DOI 10.1109/MS.2003.1184168
   Francalanci C, 1997, INFORM SOFTWARE TECH, V39, P205, DOI 10.1016/S0950-5849(96)01135-4
   France R, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1231152
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma Erich., 1994, DESIGN PATTERNS
   GRAVES AR, 2000, IEEE T SYST MAN CYBE, V30
   Gross D., 2001, Requirements Engineering, V6, P18, DOI 10.1007/s007660170013
   HSUEH NL, 2003, IEEE INT C INF CYB S, P1877
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jeon SU, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P337, DOI 10.1109/APSEC.2002.1183003
   Khriss I, 2000, KNOWL-BASED SYST, V13, P403, DOI 10.1016/S0950-7051(00)00081-2
   Lee J, 2001, INFORM SOFTWARE TECH, V43, P121, DOI 10.1016/S0950-5849(00)00144-0
   Lee J, 1998, IEEE T KNOWL DATA EN, V10, P551, DOI 10.1109/69.706056
   Lee J, 1999, IEEE SOFTWARE, V16, P92, DOI 10.1109/52.776956
   Monroe RT, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.566427
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   Robinson W. N., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P206, DOI 10.1109/ICRE.1994.292383
   Rumbaugh James, 1999, The unified modeling language reference manual
   Schmidt D, 2000, PATTERNS CONCURRENT, V2
   TAHVILDARI L, 2002, P INT C SOFTW MAINT
   Uhl A, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1231155
   VANLAMSWEERDE A, 1994, RR9410 U CATH LOUV D
   Winn T, 2002, IEEE SOFTWARE, V19, P59, DOI 10.1109/52.976942
   Zhu J, 1999, IEEE T POWER SYST, V14, P532, DOI 10.1109/59.761877
NR 35
TC 9
Z9 11
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 67
EP 84
DI 10.1007/s10270-007-0063-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000005
DA 2024-07-18
ER

PT J
AU Harel, D
   Maoz, S
AF Harel, David
   Maoz, Shahar
TI Assert and negate revisited: Modal semantics for UML sequence diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT International Workshop on Scenarios and State Machines
CY 2006
CL Shanghai, PEOPLES R CHINA
DE UML Interactions; sequence diagrams; live sequence charts;
   standardization; formal semantics
ID AUTOMATA; VERIFICATION; LIVE
AB Live Sequence Charts (LSC) extend Message Sequence Charts (MSC), mainly by distinguishing possible from necessary behavior. They thus enable the specification of rich multi-modal scenario-based properties, such as mandatory, possible and forbidden scenarios. The sequence diagrams of UML 2.0 enrich those of previous versions of UML by two new operators, assert and negate, for specifying required and forbidden behaviors, which appear to have been inspired by LSC. The UML 2.0 semantics of sequence diagrams, however, being based on pairs of valid and invalid sets of traces, is inadequate, and prevents the new operators from being used effectively.
   We propose an extension of, and a different semantics for this UML language-Modal Sequence Diagrams (MSD)-based on the universal/existential modal semantics of LSC. In particular, in MSD assert and negate are really modalities, not operators. We define MSD as a UML 2.0 profile, thus paving the way to apply formal verification, synthesis, and scenario-based execution techniques from LSC to the mainstream UML standard.
C1 [Harel, David; Maoz, Shahar] Weizmann Inst Sci, IL-76100 Rehovot, Israel.
C3 Weizmann Institute of Science
RP Harel, D (corresponding author), Weizmann Inst Sci, IL-76100 Rehovot, Israel.
EM dharel@weizmann.ac.il; shahar.maoz@weizmann.ac.il
OI Maoz, Shahar/0000-0002-4022-5349
CR [Anonymous], 2001, An Automata Theoretic Approach to Branching
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   BONTEMPS Y, 2002, P 1 INT WORKSH SCEN
   Bunker A., 2005, International Journal on Software Tools for Technology Transfer, V7, P341, DOI 10.1007/s10009-004-0145-x
   Cavarra A, 2005, ELECTRON NOTES THEOR, V115, P19, DOI 10.1016/j.entcs.2004.09.025
   Cengarle MariaVictoria., 2004, Proc. 3rd Int. Wsh. Critical Systems Development with UML, P85
   Combes P, 2005, LECT NOTES COMPUT SC, V3707, P414
   Damm W, 2005, SCI COMPUT PROGRAM, V55, P117, DOI 10.1016/j.scico.2004.05.013
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Fecher H, 2005, LECT NOTES COMPUT SC, V3785, P52
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Grosu R, 2005, ACSD2005: FIFTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P6, DOI 10.1109/ACSD.2005.31
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2003, LETS PLAY SCENARIO B
   HAREL D, 2006, P 5 INT WSH SCEN STA, P13
   Harel D, 2007, LECT NOTES COMPUT SC, V4422, P121
   Haugen O., 2005, SOFTW SYST MODEL, V4, P355
   *ITU, 1996, INT TEL UN REC Z 120
   KLOSE J, 2001, LNCS, V2031
   Klose J, 2006, LECT NOTES COMPUT SC, V4144, P219, DOI 10.1007/11817963_22
   KNAPP A, 2006, P INT WORKSH CRIT SY, P52
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   LETTRARI M, 2001, LNCS, V2185, P317
   MARELLY R, P INT C OBJ OR PROGR
   MIYANO S, 1984, THEOR COMPUT SCI, V32, P321, DOI 10.1016/0304-3975(84)90049-5
   MULLER DE, 1992, THEOR COMPUT SCI, V97, P233, DOI 10.1016/0304-3975(92)90076-R
   Runde R. K., 2005, Nordic Journal of Computing, V12, P157
   Schinz I, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P174, DOI 10.1109/SEFM.2004.1347518
   STORRLE H, 2004, TRACE SEMANTICS UML
   STORRLE H, 2004, P 3 INT WORKSH CRIT, P79
   *UML, 2005, UN MOD LANG SUP SPEC
   *UML, 2005, UN MOD LANG TEST PRO
   WESTPHAL B, 2005, ENTCS, V144, P133
NR 36
TC 67
Z9 76
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2008
VL 7
IS 2
BP 237
EP 252
DI 10.1007/s10270-007-0054-z
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 298IE
UT WOS:000255680600008
DA 2024-07-18
ER

PT J
AU Walsh, JD
   Bran, FB
   Selic, B
AF Walsh, James D'Arcy
   Bran, Francis Bordeleau
   Selic, Bran
TI Domain analysis of dynamic system reconfiguration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Model Driven Engineering Languages and
   Systems
CY OCT 02-07, 2005
CL Montego Bay, JAMAICA
SP ACM SIGS, IEEE Comp Soc, Microsoft Corp, IBM, Digicel Jamaica, Springer
DE alloy; component; based systems; dynamic reconfiguration; feature
   modeling; model; driven development; software evolution; system
   integrity; UML
ID SOFTWARE
AB A domain analysis of dynamic system reconfiguration is presented in this paper. The intent is to provide a comprehensive conceptual framework within which to systematically and consistently address problems and solutions related to dynamically reconfigurable systems. The analysis identifies and categorizes the various types of change that may be required, the relationship between those types, and the system integrity characteristics that need to be considered when such changes take place. A system model is employed to describe each change type using examples of global and local properties in the context of a financial analysis system. A rigorous formal methodology, based on the Alloy language and tools, is employed to specify precisely and formally the detailed relationships between various parts of the model. Based upon these descriptions, the types of change of dynamic system reconfiguration are presented as a series of UML class models.
C1 [Walsh, James D'Arcy; Bran, Francis Bordeleau; Selic, Bran] Carleton Univ, Sch Comp Sci, Ottawa, ON K1M 014, Canada.
C3 Carleton University
RP Walsh, JD (corresponding author), Carleton Univ, Sch Comp Sci, Ottawa, ON K1M 014, Canada.
EM jdwalsh@acm.org; francis@zeligsoft.com; bselic@ca.ibm.com
RI Selic, Bran/AAV-7565-2021
OI Selic, Bran/0000-0002-3703-8593
CR [Anonymous], MICROMODELS SOFTWARE
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Appavoo J, 2003, IBM SYST J, V42, P60, DOI 10.1147/sj.421.0060
   BIALEK RP, 2002, 26 ANN INT COMP SOFT
   BIRMAN K, 1991, ACM T COMPUT SYST, V9, P272, DOI 10.1145/128738.128742
   Buhr R.J. A., 1996, USE CASE MAPS OBJECT
   DUFFY DJ, 2004, DOMAIN ARCHITECTURES
   Fowler M., 2004, OBJECT TECHNOLOGY SE
   GEORGIADIS I, 2002, ACM WOSS 02
   Gomaa H, 2004, OBJECT TECHNOLOGY SE
   GUO J, 2001, 8 ANN IEEE INT C WOR
   Helfert E.A., 2001, Financial analysis: Tools and techniques: A guide for managers
   *IBM, 2003, IBM K42 PROJ
   JACKSON D, 1999, ALCOA ALLOY CONSTRAI
   JACKSON D, 2001, LIGHTWEIGHT OBJECT M, P32
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   JARKE M, 1996, META MODELS REQUIREM
   Karsai G, 2001, LECT NOTES COMPUT SC, V2614, P24
   Kiczales G., 1991, The Art of the Metaobject Protocol
   KRAMER J, 1985, IEEE T SOFTWARE ENG, V11, P424, DOI 10.1109/TSE.1985.232231
   KRAMER J, 1998, IEEE 4 INT C CONF DI
   LEE MA, 1995, 3 INT S UNC MOD AN I
   Lopes A, 2003, ACM T SOFTW ENG METH, V12, P64, DOI 10.1145/839268.839272
   LOPES A, 2001, 5 INT WORKSH ALG DEV
   MAGEE J, 1996, ACM SIGSOFT 96
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MINSKY NH, 1996, 3 IEEE INT C CONF DI
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   OREIZY P, 1999, ISSUES MODELING ANAL
   OREIZY P., 1998, P INT C SOFTW ENG
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   VAZIRI M, 1999, SOME SHORTCOMINGS OC, P1
   WALSH D, 2005, ACM IEEE 8 INT C MOD
   WALSH D, 2006, DYNAMIC SYSTEM RECON
   WALSH D, 2006, 13 ANN IEEE INT C WO
   WARMER J, 2003, OBJECT TECHNOLOGY SE
   WARREN I, 1996, IEEE 3 INT C CONF DI
   WERMELINGER M, 2001, ACM ESE FSE 2001
   Wermelinger Michel A., 1999, Specification of Software Architecture Reconfiguration"
   Whisnant K, 2003, IBM SYST J, V42, P45, DOI 10.1147/sj.421.0045
   Yellin DM, 2003, IBM SYST J, V42, P85, DOI 10.1147/sj.421.0085
   2003, DEPLOYMENT CONFIGURA
NR 43
TC 4
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2007
VL 6
IS 4
BP 355
EP 380
DI 10.1007/s10270-006-0038-4
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WU
UT WOS:000254668000003
DA 2024-07-18
ER

PT J
AU Chapela-Campa, D
   Dumas, M
AF Chapela-Campa, David
   Dumas, Marlon
TI From process mining to augmented process execution
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Predictive analytics; Prescriptive
   analytics; Autonomous systems
ID PROCESS MODELS
AB Business process management (BPM) is a well-established discipline comprising a set of principles, methods, techniques, and tools to continuously improve the performance of business processes. Traditionally, most BPM decisions and activities are undertaken by business stakeholders based on manual data collection and analysis techniques. This is time-consuming and potentially leads to suboptimal decisions, as only a restricted subset of data and options are considered. Over the past decades, a rich set of data-driven techniques has emerged to support and automate various activities and decisions across the BPM lifecycle, particularly within the process mining field. More recently, the uptake of artificial intelligence (AI) methods for BPM has led to a range of approaches for proactive business process monitoring. Given their common data requirements and overlapping goals, process mining and AI-driven approaches to business process optimization are converging. This convergence is leading to a promising emerging concept, which we call (AI-)augmented process execution: a collection of data analytics and artificial intelligence methods for continuous and automated improvement and adaptation of business processes. This article gives an outline of research at the intersection between process mining and AI-driven process optimization, classifies the researched techniques based on their scope and objectives, and positions augmented process execution as an additional layer on top of this stack.
C1 [Chapela-Campa, David; Dumas, Marlon] Univ Tartu, Tartu, Estonia.
C3 University of Tartu
RP Chapela-Campa, D (corresponding author), Univ Tartu, Tartu, Estonia.
EM david.chapela@ut.ee; marlon.dumas@ut.ee
OI Chapela-Campa, David/0000-0002-4711-9653
FU Research funded by the European Research Council (PIX Project 834141).
   [834141]; European Research Council; European Research Council (ERC)
   [834141] Funding Source: European Research Council (ERC)
FX Research funded by the European Research Council (PIX Project 834141).
CR Augusto A, 2022, IEEE T KNOWL DATA EN, V34, P1870, DOI 10.1109/TKDE.2020.3003258
   Augusto A, 2019, KNOWL INF SYST, V59, P251, DOI 10.1007/s10115-018-1214-x
   Barbieri L., 2021, LNBIP, V433, P268
   Baron-Espitia D., 2022, P ICPM DOCT CONS DEM, V3299, P118
   Berti A., 2023, ARXIV
   Bozorgi Zahra Dasht, 2023, Advanced Information Systems Engineering: 35th International Conference, CAiSE 2023, Proceedings. Lecture Notes in Computer Science (13901), P364, DOI 10.1007/978-3-031-34560-9_22
   Bozorgi Z.D., 2022, P ICPM DOCTORAL CONS, V3299, P108
   Bucchiarone A., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P33, DOI 10.1109/ICWS.2012.56
   Camargo M, 2023, INFORM SYST, V117, DOI 10.1016/j.is.2023.102248
   Camargo M, 2020, DECIS SUPPORT SYST, V134, DOI 10.1016/j.dss.2020.113284
   Chapela-Campa D, 2022, 2022 4TH INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2022), P72, DOI 10.1109/ICPM57379.2022.9980544
   Di Francescomarino C, 2019, IEEE T SERV COMPUT, V12, P896, DOI 10.1109/TSC.2016.2645153
   Dumas M., 2011, INT C BUS PROC MAN, V100, P1
   Dumas M., 2021, BPM WORKSHOP, V2938, P23
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Dumas M, 2023, ACM TRANS MANAG INF, V14, DOI 10.1145/3576047
   Márquez-Chamorro AE, 2018, IEEE T SERV COMPUT, V11, P962, DOI 10.1109/TSC.2017.2772256
   Fahrenkrog-Petersen SA, 2022, KNOWL INF SYST, V64, P559, DOI 10.1007/s10115-021-01633-w
   Feldman Z., 2013, Proceedings of the 7th ACM international conference on Distributed event-based systems, in Arlington, Texas, USA, P97, DOI 10.1145/2488222.2488274
   Fontenla-Seco Y., 2020, LNCS, V12641, P212
   Nguyen H, 2018, LECT NOTES COMPUT SC, V11157, P449, DOI 10.1007/978-3-030-00847-5_32
   Kubrak K, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.1097
   Lashkevich Katsiaryna, 2023, Research Challenges in Information Science: Information Science and the Connected World: 17th International Conference, RCIS 2023, Proceedings. Lecture Notes in Business Information Processing (476), P381, DOI 10.1007/978-3-031-33080-3_23
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Liyanage M, 2022, J NETW COMPUT APPL, V203, DOI 10.1016/j.jnca.2022.103362
   López A, 2019, LECT NOTES COMPUT SC, V11483, P383, DOI 10.1007/978-3-030-21290-2_24
   López-Pintado O, 2021, LECT NOTES BUS INF P, V427, P92, DOI 10.1007/978-3-030-85440-9_6
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8484, P457, DOI 10.1007/978-3-319-07881-6_31
   Martin N, 2016, BUS INFORM SYST ENG+, V58, P73, DOI 10.1007/s12599-015-0410-4
   Mehdiyev Nijat, 2020, Business & Information Systems Engineering, V62, P143, DOI 10.1007/s12599-018-0551-3
   Metzger A, 2020, LECT NOTES COMPUT SC, V12168, P273, DOI 10.1007/978-3-030-58666-9_16
   Montali M., 2022, LNBIP, V460, P5
   MunozGama J, 2016, LECT NOTES BUS INF P, V270, P1, DOI 10.1007/978-3-319-49451-7
   Ocaña M, 2022, MULTIMED TOOLS APPL, V81, P3369, DOI 10.1007/s11042-021-11186-3
   Pauwels S, 2021, LECT NOTES COMPUT SC, V12875, P123, DOI 10.1007/978-3-030-85469-0_10
   Poll R, 2018, LECT NOTES COMPUT SC, V11080, P496, DOI 10.1007/978-3-319-98648-7_29
   Popova V, 2015, INT J COOP INF SYST, V24, DOI 10.1142/S021884301550001X
   Rama-Maneiro E, 2023, IEEE T SERV COMPUT, V16, P739, DOI 10.1109/TSC.2021.3139807
   Rizzi W, 2022, KNOWL INF SYST, V64, P1385, DOI 10.1007/s10115-022-01666-9
   Shoush M, 2022, LECT NOTES BUS INF P, V458, P207, DOI 10.1007/978-3-031-16171-1_13
   Tax N, 2017, LECT NOTES COMPUT SC, V10253, P477, DOI 10.1007/978-3-319-59536-8_30
   Taymouri F, 2021, KNOWL-BASED SYST, V211, DOI 10.1016/j.knosys.2020.106557
   Teinemaa I, 2019, ACM T KNOWL DISCOV D, V13, DOI 10.1145/3301300
   Teinemaa I, 2016, LECT NOTES COMPUT SC, V9850, P401, DOI 10.1007/978-3-319-45348-4_23
   van der Aa H., 2018, P 27 INT C COMP LING, P2791
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2011, INFORM SYST, V36, P450, DOI 10.1016/j.is.2010.09.001
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2021, IJISPM-INT J INF SYS, V9, P5, DOI 10.12821/ijispm090201
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Dongen BF, 2008, LECT NOTES COMPUT SC, V5331, P319
   vander Aalst W.M.P., 2022, ARXIV
   Verenich I, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3331449
   Vidgof Maxim, 2023, Business Process Management Forum: BPM 2023 Forum, Proceedings. Lecture Notes in Business Information Processing (490), P107, DOI 10.1007/978-3-031-41623-1_7
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Weinzierl Sven, 2020, Business Process Management Forum. BPM Forum 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 392), P193, DOI 10.1007/978-3-030-58638-6_12
   Wynn MT, 2008, LECT NOTES COMPUT SC, V4928, P66
NR 57
TC 2
Z9 2
U1 11
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2023
VL 22
IS 6
BP 1977
EP 1986
DI 10.1007/s10270-023-01132-2
EA NOV 2023
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8Z9
UT WOS:001100380500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Jaskolka, M
   Pantelic, V
   Wassyng, A
   Paige, RF
   Lawford, M
AF Jaskolka, Monika
   Pantelic, Vera
   Wassyng, Alan
   Paige, Richard F.
   Lawford, Mark
TI Repository mining for changes in Simulink and Stateflow models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Simulink; Stateflow; Model-Based Development; Model change; Repository
   mining; Software evolution; Version control system
ID SOFTWARE; IDENTIFICATION
AB Model-Based Development (MBD) is widely used for embedded controls development, with MATLAB/Simulink/Stateflow being one of the most used development environments in the automotive industry. Simulink/Stateflow models are the primary design artifacts in automotive controls MBD development, and these models must be maintained over their lifetime. We achieve this in traditional software designs through the use of information hiding. It is thus beneficial to develop these models so that they facilitate likely changes that do not adversely impact the quality of the design. In order to do so, the types of frequently performed changes must be understood and appropriate language mechanisms must be available to support these changes. While some work has been done to analyze changes in Simulink/Stateflow models, a much deeper understanding is needed. We leveraged an extraordinary opportunity of having access to a comprehensive industrial software repository and its associated version control system to gain insight into likely changes for Simulink/Stateflow in automotive controls development. This analysis provides accurate feedback on actual changes made over many years to Simulink/Stateflow models, and classifies changes to suggest how particular model changes can impact system evolution.
C1 [Pantelic, Vera; Wassyng, Alan; Paige, Richard F.; Lawford, Mark] McMaster Univ, McMaster Ctr Software Certificat, Hamilton, ON, Canada.
   [Jaskolka, Monika] Stellantis, Windsor, ON, Canada.
C3 McMaster University; Stellantis N.V.; Stellantis Canada
RP Pantelic, V (corresponding author), McMaster Univ, McMaster Ctr Software Certificat, Hamilton, ON, Canada.
EM monika.jaskolka@stellantis.com; pantelv@mcmaster.ca;
   wassyng@mcmaster.ca; paigeri@mcmaster.ca; lawford@mcmaster.ca
OI Jaskolka, Monika/0000-0001-5853-6412
CR Abd-El-Hafiz SK, 2012, P INT COMP SOFTW APP, P35, DOI 10.1109/COMPSAC.2012.14
   Alalfi MH, 2014, PROC IEEE INT CONF S, P486, DOI 10.1109/ICSME.2014.79
   Alalfi MH., 2019, AUTOMOTIVE SYSTEMS S, P109, DOI 10.1007/978-3-030-12157-0_6
   Amelunxen C, 2008, LECT NOTES COMPUT SC, V5088, P313
   [Anonymous], 2013, P INT C QUAL SOFTW A
   Balasubramaniam B, 2020, ACM IEEE INT CONF CY, P151, DOI 10.1109/ICCPS48487.2020.00022
   Ball T., 1997, ICSE WORKSH PROC MOD
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bock F., 2019, AUTOMOTIVE SYSTEMS S, P29, DOI [10.1007/978-3-030-12157-0_3, DOI 10.1007/978-3-030-12157-0_3]
   Boll A, 2021, SOFTW SYST MODEL, V20, P2111, DOI 10.1007/s10270-021-00883-0
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Buckl C., 2012, EL VEH C IEVC 2012 I, P1, DOI DOI 10.1109/IEVC.2012.6183198
   Canfora G, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P259
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Charette RN, 2009, IEEE SPECTRUM, V46, P7, DOI 10.1109/MSPEC.2009.5340234
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Dajsuren Yanja, 2019, Automotive Systems and Software Engineering State of the Art and Future Trends, DOI [DOI 10.1007/978-3-030-12157-0, 10.1007/978-3-030-12157-0]
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Eclipse Foundation Inc., 2021, EMF COMP
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Gruschko Boris., 2007, INT WORKSH MOD DRIV, P3
   Haber Arne, 2013, ACM International Conference Proceeding Series, P11
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   ISO/IEC, 2006, 14764 ISOIEC
   Jaskolka Monika, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P31, DOI 10.1109/ISSREW51248.2020.00033
   Jaskolka M., 2020, ARXIV
   Jaskolka M, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P46, DOI 10.1109/MODELS50736.2021.00014
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kelter Udo., 2005, Software Engineering, volume 64 of LNI, V64, P105
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Klauske L.K., 2010, P MATH WORKS AUT C M
   Kolovos D.S., P INT WORKSH OP SOUR, V1541
   Legros E, 2010, LECT NOTES COMPUT SC, V6100, P323, DOI 10.1007/978-3-642-16277-0_14
   Mengerink JGM, 2019, EMPIR SOFTW ENG, V24, P1574, DOI 10.1007/s10664-018-9641-6
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Pantelic V, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P503, DOI 10.5220/0007586005030510
   Pantelic V, 2018, INT J SOFTW TOOLS TE, V20, P95, DOI 10.1007/s10009-017-0450-9
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Ryssel U, 2011, ACM SIGPLAN NOTICES, V46, P23, DOI 10.1145/1942788.1868299
   Saracco R., 2016, IEEE FUTURE DIRECTIO
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Schaap A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P47, DOI 10.1145/3270112.3270115
   Schlie A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P215, DOI 10.1145/3106195.3106225
   Stephan M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P276, DOI 10.1109/MODELS.2015.7338258
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   The MathWork, 2020, MATHWORKS ADVISORY B
   The MathWorks Inc., 2021, SIMULINK R2019A
   The MathWorks Inc., 2019, STAT US GUID VERS R2
   Van Rysselberghe F., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P48, DOI 10.1049/ic:20040475
   Wynn-Williams S, 2019, LECT NOTES COMPUT SC, V11424, P264, DOI 10.1007/978-3-030-16722-6_15
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 57
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1713
EP 1732
DI 10.1007/s10270-023-01113-5
EA JUN 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:001007054200001
DA 2024-07-18
ER

PT J
AU Savary-Leblanc, M
   Le Pallec, X
   Gérard, S
AF Savary-Leblanc, Maxime
   Le Pallec, Xavier
   Gerard, Sebastien
TI Understanding the need for assistance in software modeling: interviews
   with experts
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software modeling; Practitioners; Software assistant; Interviews
ID DRIVEN ENGINEERING PRACTICES; UML; DEVELOPERS; DESIGN
AB Software modeling has shown for many years that it brings many advantages at the cost of various efforts and constraints. A large corpus of literature has indeed grown up over the years, pointing out the problems related to the modeling abstraction process, the usability of tools, or the practical difficulty of using modeling languages. While these works identify problems, few of them focus on proposing directions to explore in order to fix them. To move toward a smoother and less constraining modeling experience and then increase the added value of modeling approaches, it is necessary to identify new paths to improve current tooling. In this paper, we explore one specific path by investigating how new software assistance features could support users performing modeling tasks that they perceive as complex. We used UML knowledge as a criterion for the selection of participants and built a questionnaire general to software modeling. We followed a user-centered research approach and collected the feedback from practitioners who use the modeling languages and the modeling tools on a regular basis in an industrial context. This article reports on a set of individual interview sessions with 16 modeling experts about how they perform modeling and how they imagine assistance in the context of their work. From the analysis of this qualitative study, we draw twelve observations on how to design software assistants for software modeling. These observations highlight research directions for both tool vendors and academics to explore, to identify and design new solutions to the friction points of the software modeling experience.
C1 [Savary-Leblanc, Maxime; Le Pallec, Xavier] Univ Lille, CNRS, UMR 9189, Inria,CRIStAL,Cent Lille, F-59000 Lille, France.
   [Gerard, Sebastien] Univ Paris Saclay, CEA, List, F-91120 Palaiseau, France.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   de Lille; Centrale Lille; Universite Paris Saclay; CEA; Universite Paris
   Cite
RP Savary-Leblanc, M (corresponding author), Univ Lille, CNRS, UMR 9189, Inria,CRIStAL,Cent Lille, F-59000 Lille, France.
EM maxime.savary-leblanc@univ-lille.fr
OI Savary-Leblanc, Maxime/0000-0002-7327-5676
CR Abad Z.S. H., 2018, ACM International Conference on Evaluation and Assessment in Software Engineering, P122, DOI [10.1145/3210459.3210471, DOI 10.1145/3210459.3210471]
   Abualhaija S, 2019, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2019.00017
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Almonte Lissette, 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P22, DOI 10.1145/3486608.3486905
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Aquino E.R., 2020, 8 MODELSWARD INT C M, P1
   Badreddin O, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P245, DOI 10.1145/3239372.3239389
   Barricelli BR, 2019, J SYST SOFTWARE, V149, P101, DOI 10.1016/j.jss.2018.11.041
   Baym Nancy, 2019, AOIR SELECTED PAPERS, V2019
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Burnett M, 2009, LECT NOTES COMPUT SC, V5435, P15
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Chaudron MRV, 2012, SOFTW SYST MODEL, V11, P571, DOI 10.1007/s10270-012-0278-4
   Chopra K., 2003, 36th Hawaii International Conference on Systems Sciences
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Duruisseau M, 2018, LECT NOTES COMPUT SC, V10904, P3, DOI 10.1007/978-3-319-92043-6_1
   Dwitam F., 2020, Telkomnika (Telecommun. Comput. Electron. Control), V18, P890, DOI [10.12928/telkomnika.v18i2.14866, DOI 10.12928/TELKOMNIKA.V18I2.14866]
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Elkamel A, 2016, I C COMP SYST APPLIC
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Gray J, 2021, SOFTW SYST MODEL, V20, P287, DOI 10.1007/s10270-021-00881-2
   Grudin J, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300439
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Lallemand C., 2018, METHODES DESIGN UX 3
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   McTear M.F., 2017, Future and emerging trends in language technology: Machine learning and big data, P38, DOI 10.1007/978-3-319-69365-1_3
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Nasirian F., 2017, 23 AM C INF SYST AMC
   Ozkaya M, 2020, J COMPUT LANG, V58, DOI 10.1016/j.cola.2020.100963
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Pati T, 2017, SOFTW SYST MODEL, V16, P499, DOI 10.1007/s10270-015-0465-1
   Paydar S, 2015, AUTOMAT SOFTW ENG, V22, P241, DOI 10.1007/s10515-014-0144-4
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Planas E, 2020, COMPUT STAND INTER, V67, DOI 10.1016/j.csi.2019.103363
   Recker J., 2006, EUR C INF SYST
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Safdar SA, 2015, LECT NOTES COMPUT SC, V9153, P33, DOI 10.1007/978-3-319-21151-0_3
   Saini R, 2022, SOFTW SYST MODEL, V21, P1015, DOI 10.1007/s10270-021-00942-6
   Cuadrado JS, 2018, PROC IEEE ACM INT C, P85, DOI 10.1145/3183440.3183479
   Sanctorum Audrey, 2021, End-User Development. 8th International Symposium, IS-EUD 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12724), P204, DOI 10.1007/978-3-030-79840-6_14
   Savary-Leblanc M., 2022, SOFTW SYST MODEL
   Savary-leblanc M., ANONYMIZED TRANSCRIP
   Savary-Leblanc M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P631, DOI 10.1109/MODELS-C53483.2021.00097
   Shihab E., 2019, P 1 INT WORKSH BOTS
   Sonnentag S, 1995, BEHAV INFORM TECHNOL, V14, P289, DOI 10.1080/01449299508914648
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Thomas JC, 2002, COMMUN ACM, V45, P112, DOI 10.1145/570907.570944
   Tintarev N, 2007, I C DATA ENGIN WORKS, P801, DOI 10.1109/ICDEW.2007.4401070
   Tuzovic S., 2021, HDB DIGITAL MARKETIN
   Verbruggen C, 2023, SOFTW SYST MODEL, V22, P111, DOI 10.1007/s10270-022-01020-1
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
NR 58
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2024
VL 23
IS 1
BP 103
EP 135
DI 10.1007/s10270-023-01104-6
EA MAY 2023
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC0S2
UT WOS:000980365900001
DA 2024-07-18
ER

PT J
AU Yurt, ZO
   Eshuis, R
   Wilbik, A
   Vanderfeesten, I
AF Ozturk Yurt, Zeynep
   Eshuis, Rik
   Wilbik, Anna
   Vanderfeesten, Irene
TI Context-aware modeling for knowledge-intensive medicinal product
   development processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Context-awareness; Enterprise modeling; Business process management;
   Conceptual modeling; Knowledge-intensive process
ID REQUIREMENTS; FRAMEWORK
AB Due to their unique characteristics, knowledge-intensive processes (KiPs) are difficult to capture with conventional modeling and management approaches. One such KiP is the advanced therapy medicinal product (ATMP) development process. ATMPs are highly innovative medicinal products that are based on biomedical technology. ATMP development processes need to comply with complex regulatory frameworks. Currently, biomedical scientists that develop ATMPs manage the regulatory aspects of the ATMP development processes in an ad hoc fashion, resulting in inefficiencies such as reworks or even withdrawal of ATMPs from the market. This paper presents an explorative case study in which we use Enterprise Modeling and Context aware Business Processes to support ATMP scientists in managing the regulatory aspects of ATMP development processes more efficiently and effectively. In our explorative case study, we use enterprise models to describe the important concepts and views in ATMP development processes. By introducing context-awareness to the models, we support ATMP scientists in performing relevant tasks to address the regulatory requirements efficiently and effectively under different contexts. We introduce the novel concept of execution-dependent dynamic context to properly define the context in ATMP development processes. Additionally, this paper takes a broader perspective on the case study by discussing the relevance of the solutions derived for the case study for other KiPs. Thereby this paper aims to present an exemplary approach for context-aware modeling of KiPs. The practical contribution of this paper are the models realized in a real-life ATMP development project. The scientific contribution of this paper is providing an exemplary approach for supporting knowledge workers who perform flexible, KiPs under dynamic contexts and introducing the notion of execution-dependent dynamic context.
C1 [Ozturk Yurt, Zeynep; Eshuis, Rik; Vanderfeesten, Irene] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Wilbik, Anna] Maastricht Univ, Maastricht, Netherlands.
   [Vanderfeesten, Irene] Katholieke Univ Leuven, Leuven, Belgium.
C3 Eindhoven University of Technology; Maastricht University; KU Leuven
RP Yurt, ZO (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM z.ozturk.yurt@tue.nl; h.eshuis@tue.nl; a.wilbik@maastrichtuniversity.nl;
   irene.vanderfeesten@kuleuven.be
RI Eshuis, Rik/D-7042-2011; Vanderfeesten, Irene/B-6181-2019; Kacprzyk,
   Janusz A./M-9574-2014
OI Eshuis, Rik/0000-0003-2314-7155; Vanderfeesten,
   Irene/0000-0002-6670-5519; Ozturk Yurt, Zeynep/0000-0003-3284-3822;
   Wilbik, Anna/0000-0002-1989-0301
FU European Union [825925]; H2020 Societal Challenges Programme [825925]
   Funding Source: H2020 Societal Challenges Programme
FX The work presented in this paper is part of iPSpine project that has
   received funding from the European Union's Horizon 2020 research and
   innovation programme under Grant Agreement No. 825925.
CR Akhigbe O, 2022, SOFTW SYST MODEL, V21, P1613, DOI 10.1007/s10270-021-00949-z
   Ali R, 2014, SOFTW SYST MODEL, V13, P433, DOI 10.1007/s10270-012-0255-y
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   [Anonymous], ADV THER MED PROD OV
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Barba I, 2013, DATA KNOWL ENG, V86, P61, DOI 10.1016/j.datak.2013.01.004
   Belardelli F, 2011, ANN I SUPER SANITA, V47, P72, DOI 10.4415/ANN_11_01_15
   Berniak-Wozny J, 2022, BUS PROCESS MANAG J, V28, P40, DOI 10.1108/BPMJ-01-2021-0012
   Berzisa S, 2015, BUS INFORM SYST ENG+, V57, P15, DOI 10.1007/s12599-014-0362-0
   2016, CAS MAN MOD NOT CMMN, V1
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Wilde S, 2018, DRUG DISCOV TODAY, V23, P1328, DOI 10.1016/j.drudis.2018.03.008
   Detela G., 2016, CELL GENE THERAPY IN, V2, P425, DOI DOI 10.18609/CGTI.2016.056
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   França JBD, 2015, SOFTW SYST MODEL, V14, P1127, DOI 10.1007/s10270-014-0397-1
   Elsallab M, 2020, MOL THER-METH CLIN D, V18, P269, DOI 10.1016/j.omtm.2020.05.035
   European Medicines Agency (EMA), 2008, GUID HUM CELL BAS ME
   Ghanavati S., 2011, 2011 Fourth International Workshop on Requirements Engineering and Law, P25, DOI 10.1109/RELAW.2011.6050270
   Heravizadeh M., 2008, C RES PRACTICE INFOR, V79
   Huber S., 2015, P INT C SUBJECT ORIE, P1
   Koc H., 2017, P PRACT ENT MOD 10 I, P126, DOI DOI 10.1007/978-3-319-70241-4_9
   Köhler T, 2018, LECT NOTES BUS INF P, V335, P303, DOI 10.1007/978-3-030-02302-7_19
   La Rosa M, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3041957
   De la Vara JL, 2010, LECT NOTES COMPUT SC, V6426, P132
   de la Vara JL, 2010, LECT NOTES COMPUT SC, V6412, P471, DOI 10.1007/978-3-642-16373-9_37
   Mattos TD, 2014, COMPUT IND, V65, P1193, DOI 10.1016/j.compind.2014.07.005
   Morrow D, 2017, FRONT BIOENG BIOTECH, V5, DOI 10.3389/fbioe.2017.00055
   Rolland Colette, 2009, Software Process: Improvement and Practice, V14, P143, DOI 10.1002/spip.416
   Rosemann Michael, 2008, International Journal of Business Process Integration and Management, V3, P47, DOI 10.1504/IJBPIM.2008.019347
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Song R., 2019, P INT C SUBJECT ORIE
   Swenson K.D., 2010, Mastering the Unpredictable: How Adaptive Case Management Will Revolutionize the Way That Knowledge Workers Get Things Done
   The Open Group, 2011, TOGAF Version 9.1, V10th
   Union I.T., 2012, REC Z 151 10 12 US R
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   van Gils B, 2018, LECT NOTES BUS INF P, V335, P257, DOI 10.1007/978-3-030-02302-7_16
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Voorberg S., 2019, DECISION SUPPORT DEC, P36
   Weber B, 2004, LECT NOTES COMPUT SC, V3155, P434
   Yurt ZO, 2021, LECT NOTES BUS INF P, V432, P168, DOI 10.1007/978-3-030-91279-6_12
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 41
TC 0
Z9 0
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 709
EP 731
DI 10.1007/s10270-022-01070-5
EA DEC 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4I0
UT WOS:000895891600001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Stolze, C
   Miculan, M
   Di Gianantonio, P
AF Stolze, Claude
   Miculan, Marino
   Di Gianantonio, Pietro
TI Composable partial multiparty session types for open systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multiparty session types; Process algebras; Open systems
AB Session types are a well-established framework for the specification of interactions between components of a distributed systems. An important issue is how to determine the type for an open system, i.e., obtained by assembling subcomponents, some of which could be missing. To this end, we introduce partial sessions and partial (multiparty) session types. Partial sessions can be composed, and the type of the resulting system is derived from those of its components without knowing any suitable global type nor the types of missing parts. To deal with this incomplete information, partial session types represent the subjective views of the interactions from participants' perspectives; when sessions are composed, different partial views can be merged if compatible, yielding a unified view of the session. Incompatible types, due to, e.g., miscommunications or deadlocks, are detected at the merging phase. In fact, in this theory the distinction between global and local types vanishes. We apply these types to a process calculus for which we prove subject reduction and progress, so that well-typed systems never violate the prescribed constraints. In particular, we introduce a generalization of the progress property, in order to accommodate the case when a partial session cannot progress not due to a deadlock, but because some participants are still missing. Therefore, partial session types support the development of systems by incremental assembling of components.
C1 [Stolze, Claude; Miculan, Marino; Di Gianantonio, Pietro] Univ Udine, Dept Math Comp Sci & Phys, Udine, Italy.
C3 University of Udine
RP Miculan, M (corresponding author), Univ Udine, Dept Math Comp Sci & Phys, Udine, Italy.
EM claude.stolze@uniud.it; marino.miculan@uniud.it;
   pietro.digianantonio@uniud.it
RI Miculan, Marino/AAO-3301-2021
OI Miculan, Marino/0000-0003-0755-3444; Di Gianantonio,
   Pietro/0000-0002-0638-4610
FU Italian MIUR [PRIN 2017FTXR7S]
FX This work has been supported by the Italian MIUR project PRIN 2017FTXR7S
   IT MATTERS (Methods and Tools for Trustworthy Smart Systems). The
   authors are grateful to Mariangiola Dezani-Ciancaglini, Marco Peressotti
   and the anonymous reviewers for their useful remarks on the preliminar
   version of this paper.
CR Atkey R, 2017, LECT NOTES COMPUT SC, V10201, P56, DOI 10.1007/978-3-662-54434-1_3
   Barbanera Franco, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P39, DOI 10.1007/978-3-030-61362-4_3
   Barbanera F, 2019, ELECTRON P THEOR COM, P77, DOI 10.4204/EPTCS.304.6
   Barbanera F, 2021, J LOG ALGEBR METHODS, V119, DOI 10.1016/j.jlamp.2020.100620
   Barbanera F, 2019, J LOG ALGEBR METHODS, V109, DOI 10.1016/j.jlamp.2019.07.004
   Barbanera F, 2018, ELECTRON P THEOR COM, P4, DOI 10.4204/EPTCS.279.4
   Barr M., 1991, MATH STRUCTURES COMP, V1, P159, DOI [DOI 10.1017/S0960129500001274, 10.1017/S0960129500001274]
   Burco F, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P173, DOI 10.1145/3341105.3374121
   Caires L, 2010, THEOR COMPUT SCI, V411, P4399, DOI 10.1016/j.tcs.2010.09.010
   Carbone Marco, 2018, Distributed Computing, V31, P51, DOI [10.1007/978-3-662-44584-6_5, 10.1007/s00446-017-0295-1]
   Carbone M, 2017, ACTA INFORM, V54, P243, DOI 10.1007/s00236-016-0285-y
   Castellani Ilaria, 2019, Models, Languages, and Tools for Concurrent and Distributed Programming: Essays Dedicated to Rocco De Nicola on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11665), P340, DOI 10.1007/978-3-030-21485-2_19
   Coppo M, 2016, MATH STRUCT COMP SCI, V26, P238, DOI 10.1017/S0960129514000188
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Honda K, 1998, LECT NOTES COMPUT SC, V1381, P122, DOI 10.1007/BFb0053567
   Honda K, 2008, ACM SIGPLAN NOTICES, V43, P273, DOI 10.1145/1328897.1328472
   Honda K, 2016, J ACM, V63, DOI 10.1145/2827695
   Jespersen Thomas Bracht Laumann, 2015, P 11 ACM SIGPLAN WOR, P13, DOI DOI 10.1145/2808098.2808100
   Keizer AC, 2021, LECT NOTES COMPUT SC, V12648, P375, DOI 10.1007/978-3-030-72019-3_14
   Kokke W., 2019, P ACM PROGR LANG 3 P
   Lange J, 2015, ACM SIGPLAN NOTICES, V50, P221, DOI [10.1145/2775051.2676964, 10.1145/2676726.2676964]
   Lange J, 2012, LECT NOTES COMPUT SC, V7454, P225, DOI 10.1007/978-3-642-32940-1_17
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Miculan M, 2008, ELECTRON NOTES THEOR, V218, P275, DOI 10.1016/j.entcs.2008.10.017
   Montesi Fabrizio, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P425, DOI 10.1007/978-3-642-40184-8_30
   Neubauer M, 2004, LECT NOTES COMPUT SC, V3057, P56
   Nicola Rocco, 2016, Topics in Theoretical Computer Science. First IFIP WG 1.8 International Conference, TTCS 2015. Revised Selected Papers: LNCS 9541, P16, DOI 10.1007/978-3-319-28766-9_2
   NIELSEN M, 1991, LECT NOTES COMPUT SC, V520, P43
   Scalas A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290343
   Stolze C, 2021, LECT NOTES COMPUT SC, V13077, P44, DOI 10.1007/978-3-030-90636-8_3
   Toninho B, 2019, LECT NOTES COMPUT SC, V11760, P101, DOI 10.1007/978-3-030-31175-9_7
   Wadler P, 2014, J FUNCT PROGRAM, V24, P384, DOI 10.1017/S095679681400001X
NR 32
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 473
EP 494
DI 10.1007/s10270-022-01040-x
EA SEP 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4G2
UT WOS:000860428700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Corradini, F
   Fedeli, A
   Fornari, F
   Polini, A
   Re, B
AF Corradini, Flavio
   Fedeli, Arianna
   Fornari, Fabrizio
   Polini, Andrea
   Re, Barbara
TI FloWare: a model-driven approach fostering reuse and customisation in
   IoT applications modelling and development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE IoT application development; Model-driven; Variability modelling;
   Low-code; Customised applications; Design artefact reusability
ID DESIGN SCIENCE RESEARCH; INTERNET; THINGS; CHALLENGES; REQUIREMENTS;
   METHODOLOGY; MANAGEMENT
AB The relevance of IoT-based solutions in everyday life is continuously increasing. The capability to sense the world, activate computation based on data gathered by sensors, and possibly produce reactions on the world itself results in an almost never-ending identification of novel IoT solutions and application scenarios. Nonetheless, IoT's intrinsic nature, which includes a high degree of variability in used devices, data formats, resources, and communication protocols, complicates the design, development, reuse and customisation of IoT-based software systems. In addition, customers require personalised solutions strongly based on their specific requirements. Reducing the complexity of building customised solutions and increasing the reusability of developed artefacts are among the topmost challenges for enterprises and IoT application developers. Upon these challenges, we propose a model-driven approach organising the modelling and development of IoT applications in different steps, handling the complexity in representing the IoT domain variability, and empowering the reusability of design decisions and artefacts to simplify the derivation of customised IoT applications. Our proposal is named FloWare. It follows the typical path of an MDE solution, providing modelling support through feature models to fully represent and handle the possible variability of devices in a specific IoT application domain. Once a specific configuration has been selected, this will be complemented with specific information about the deployment context to automatically derive fragments of the IoT applications, that will be successively combined by the developer within a low-code development environment. The approach is fully supported by a toolchain that has been released for public use.
C1 [Corradini, Flavio; Fedeli, Arianna; Fornari, Fabrizio; Polini, Andrea; Re, Barbara] Univ Camerino, Sch Sci & Technol, Comp Sci Dept, Via Madonna Carceri 7, Camerino, Italy.
C3 University of Camerino
RP Fornari, F (corresponding author), Univ Camerino, Sch Sci & Technol, Comp Sci Dept, Via Madonna Carceri 7, Camerino, Italy.
EM flavio.corradini@unicam.it; ariamia.fedeli@unicam.it;
   fabrizio.fornari@unicam.it; andrea.polini@unicam.it;
   barbara.re@unicam.it
RI ; Fornari, Fabrizio/D-5656-2019
OI FEDELI, ARIANNA/0000-0003-4376-1697; Fornari,
   Fabrizio/0000-0002-3620-1723; Re, Barbara/0000-0001-5374-2364
FU Marche Region [CUP B28I19000330007]; MIUR project PRIN "Fluidware" (A
   Novel Approach for Large-Scale IoT Systems) [2017KRC7KT]
FX Thiswork has been partially supported byMarche Region in implementation
   of the financial programme POR MARCHE FESR 2014-2020, project "Miracle"
   (Marche Innovation and Research fAcilities for Connected and sustainable
   Living Environments), CUP B28I19000330007, and by the MIUR project PRIN
   "Fluidware" (A Novel Approach for Large-Scale IoT Systems, n.
   2017KRC7KT).
CR Al-Masri E, 2020, IEEE ACCESS, V8, P94880, DOI 10.1109/ACCESS.2020.2993363
   Alghamdi Abdullah, 2016, 2016 IEEE 4th International Conference on Future Internet of Things and Cloud (FiCloud).Proceedings, P235, DOI 10.1109/FiCloud.2016.41
   Amadeo M, 2016, IEEE NETWORK, V30, P92, DOI 10.1109/MNET.2016.7437030
   Amaral LA, 2016, MODEL OPTIM SCI TECH, V8, P333, DOI 10.1007/978-3-319-30913-2_15
   Appel S, 2014, INFORM SYST, V46, P140, DOI 10.1016/j.is.2014.04.002
   Ayala I, 2015, SENSORS-BASEL, V15, P15640, DOI 10.3390/s150715640
   Bagheri E, 2011, J RES PRACT INF TECH, V43, P109
   Bermudez-Edo M, 2016, 2016 INT IEEE CONFERENCES ON UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING AND COMMUNICATIONS, CLOUD AND BIG DATA COMPUTING, INTERNET OF PEOPLE, AND SMART WORLD CONGRESS (UIC/ATC/SCALCOM/CBDCOM/IOP/SMARTWORLD), P90, DOI [10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.8, 10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0035]
   Booch G., 2008, ACM SIGSOFT SOFTW EN, V33
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Buchmann T, 2014, SOFTW SYST MODEL, V13, P1495, DOI 10.1007/s10270-012-0305-5
   Cañete A, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111086
   Caracas A, 2011, LECT NOTES BUS INF P, V95, P16
   Chagnon-Lessard N, 2021, IEEE ACCESS, V9, P124200, DOI 10.1109/ACCESS.2021.3109516
   Chen SZ, 2014, IEEE INTERNET THINGS, V1, P349, DOI 10.1109/JIOT.2014.2337336
   Ciccozzi F, 2017, STUD COMPUT INTELL, V678, P67, DOI 10.1007/978-3-319-48829-5_7
   Ciccozzi F, 2017, IEEE SOFTWARE, V34, P46, DOI 10.1109/MS.2017.1
   Compagnucci Ivan, 2020, Business Process Management Workshops. BPM 2020 International Workshops. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 397), P108, DOI 10.1007/978-3-030-66498-5_9
   Corradini Flavio, 2021, Enterprise, Business-Process and Information Systems Modeling. 22nd International Conference, BPMDS 2021, and 26th International Conference, EMMSAD 2021, Held at CAiSE 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 421), P350, DOI 10.1007/978-3-030-79186-5_23
   Corradini F, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1448, DOI 10.1145/3477314.3507164
   Costa B, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P157, DOI 10.1109/SEAA.2016.19
   da Cunha C, 2007, IEEE T AUTOM SCI ENG, V4, P350, DOI 10.1109/TASE.2006.887160
   De Cremer D, 2017, J MARKET MANAG-UK, V33, P145, DOI 10.1080/0267257X.2016.1247517
   Di Ruscio D, 2022, SOFTW SYST MODEL, V21, P437, DOI 10.1007/s10270-021-00970-2
   Dong ZY, 2020, IET SMART CITIES, V2, P43, DOI 10.1049/iet-smc.2019.0072
   Einarsson AF, 2017, 2017 IEEE 2ND INTERNATIONAL CONGRESS ON INTERNET OF THINGS (IEEE ICIOT), P82, DOI 10.1109/IEEE.ICIOT.2017.35
   Farhan Laith., 2018, 2018 11th International Symposium on Communication Systems, Networks Digital Signal Processing (CSNDSP), P1, DOI DOI 10.1109/CSNDSP.2018.8471762
   Feljan J., 2017, Ericsson Rev. (English ed.), V95, P60
   Fortino G, 2014, INTERNET THINGS-TECH, P1, DOI 10.1007/978-3-319-00491-4_1
   Gascueña JM, 2012, ENG APPL ARTIF INTEL, V25, P159, DOI 10.1016/j.engappai.2011.08.008
   Gill AQ, 2017, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INTERNET OF THINGS, DATA AND CLOUD COMPUTING (ICC 2017), DOI 10.1145/3018896.3025166
   Grefen P, 2019, LECT NOTES BUS INF P, V350, P120, DOI 10.1007/978-3-030-21297-1_11
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Gupta A., 2017, Int. J. Comput. Intell. Res., V13, P1617
   Gupta BB, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.4946
   Guth J., 2018, Internet of Everything, P81, DOI [DOI 10.1007/978-981-10-5861-5_4, 10.1007/978-981-10-5861-5_4]
   Hasic F., 2019, INT CONF RES CHAL
   Havard N, 2018, I CONF SENS TECHNOL, P278, DOI 10.1109/ICSensT.2018.8603575
   Hsiao-Hsien Chiu, 2013, International Journal of Modeling and Optimization, V3, P238, DOI 10.7763/IJMO.2013.V3.274
   Hussain M., 2016, CSI T ICT, V5, P87, DOI DOI 10.1007/S40012-016-0136-6
   Ihirwe F., 2020, MODELS 20 ACMIEEE 23
   Ihirwe F, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P75, DOI 10.1109/MODELS-C53483.2021.00018
   Jain R, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON EDGE COMPUTING (IEEE EDGE), P182, DOI 10.1109/IEEE.EDGE.2017.32
   Jalaian B, 2018, 2018 IEEE 4TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P124, DOI 10.1109/WF-IoT.2018.8355225
   Janiesch C, 2020, IEEE SYST MAN CYBERN, V6, P34, DOI 10.1109/MSMC.2020.3003135
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kazmi A, 2017, LECT NOTES COMPUT SC, V10218, P20, DOI 10.1007/978-3-319-56877-5_2
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Lee I, 2019, INTERNET THINGS-NETH, V7, DOI 10.1016/j.iot.2019.100078
   Lee I, 2015, BUS HORIZONS, V58, P431, DOI 10.1016/j.bushor.2015.03.008
   Li WG, 2021, J INTELL FUZZY SYST, V40, P3159, DOI 10.3233/JIFS-189354
   Luo YP, 2022, IMMUNOL INVEST, V51, P826, DOI 10.1080/08820139.2021.1877302
   Meyer S., 2012, INTERNET THINGS ARCH
   Meyer S, 2015, LECT NOTES BUS INF P, V215, P285, DOI 10.1007/978-3-319-19243-7_27
   Minerva R., 2015, IEEE Internet Initiative, V1, P1
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Morrison J.P., 2010, Flow-Based Programming, 2nd Edition: A New Approach to Application Development
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P17, DOI 10.1007/s10270-015-0493-x
   Muhamad W, 2017, INT C INF TECH SYST, P384, DOI 10.1109/ICITSI.2017.8267975
   Nepomuceno T, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P719, DOI 10.1145/3341105.3373873
   Nguyen XT, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P387, DOI 10.1109/WF-IoT.2015.7389085
   Patel P, 2015, J SYST SOFTWARE, V103, P62, DOI 10.1016/j.jss.2015.01.027
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Poongothai M, 2018, 2018 5TH INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND APPLICATIONS (ICIEA), P169, DOI 10.1109/IEA.2018.8387090
   Pramudianto F, 2014, 2014 IEEE 11TH INTL CONF ON UBIQUITOUS INTELLIGENCE AND COMPUTING AND 2014 IEEE 11TH INTL CONF ON AUTONOMIC AND TRUSTED COMPUTING AND 2014 IEEE 14TH INTL CONF ON SCALABLE COMPUTING AND COMMUNICATIONS AND ITS ASSOCIATED WORKSHOPS, P1, DOI 10.1109/UIC-ATC-ScalCom.2014.95
   Raja SP, 2018, J CIRCUIT SYST COMP, V27, DOI 10.1142/S0218126618300076
   Ranganathan A, 2004, LECT NOTES COMPUT SC, V3231, P397
   Reinhartz-Berger I, 2017, INFORM SOFTWARE TECH, V87, P81, DOI 10.1016/j.infsof.2017.01.012
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Serrano M, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P425, DOI 10.1145/3184558.3186199
   Sicari S, 2019, SOFTWARE PRACT EXPER, V49, P1663, DOI 10.1002/spe.2740
   Sicari S, 2019, INTERNET TECHNOL LET, V2, DOI 10.1002/itl2.88
   Sivrikaya F, 2019, IEEE ACCESS, V7, P14434, DOI 10.1109/ACCESS.2019.2893340
   Sosa-Reyna CM, 2018, J SYST ARCHITECT, V90, P15, DOI 10.1016/j.sysarc.2018.08.008
   Steinmetz C, 2017, IEEE INTL CONF IND I, P38, DOI 10.1109/INDIN.2017.8104743
   ter Beek MH, 2021, LECT NOTES COMPUT SC, V13047, P483, DOI 10.1007/978-3-030-90870-6_26
   Udoh IS, 2018, IET CYBER PHYS SYST, V3, P65, DOI 10.1049/iet-cps.2017.0068
   Valderas P, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111139
   Vanhoorelbeke F, 2020, LECT NOTES BUS INF P, V385, P576, DOI 10.1007/978-3-030-50316-1_41
   Vuppalapati C., 2019, BUILDING ENTERPRISE, DOI 10.1201/9780429056437
   Wehlitz R., 2020, FEDCSIS POSITION PAP, P17
   Yousfi A, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3298986
   Zdravkovic J, 2015, REQUIR ENG, V20, P71, DOI 10.1007/s00766-013-0187-2
   Zdravkovic M, 2018, INT J PROD RES, V56, P2552, DOI 10.1080/00207543.2017.1385870
   Zhai XS, 2018, IEEE ACCESS, V6, P10279, DOI 10.1109/ACCESS.2018.2805758
NR 86
TC 3
Z9 3
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 131
EP 158
DI 10.1007/s10270-022-01026-9
EA AUG 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000836765000002
DA 2024-07-18
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI Evaluating the accessibility of a PoN-enabled misuse case notation by
   the red-green colorblind community
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Misuse case notation; Visual syntax; Cognitive effectiveness; UML;
   Red-green colorblindness
ID OBJECT RECOGNITION; WEB ACCESSIBILITY; DESIGN; SECURITY; INFORMATION;
   PHYSICS; SEARCH; SYNTAX; UML
AB In 2015, an improved version of the misuse case modeling notation designed using the Physics of Notations (PoN) framework was proposed. Empirical data support that the new notation is more cognitively effective than the original notation. The new notation makes use of color, in particular, red and green, meaning that red-green colorblind community will not be able to view the notation as designed and intended. The cognitive effectiveness of the red-green deficient (RGD) version of the new notation in comparison to the original notation is unknown. The PoN outlines a number of principles that can be satisfied with or without the use of color, but would the deficiency of color may be so inhibiting that the cognitive effectiveness superiority of the PoN-enabled misuse case notation becomes diminished? Perhaps the original use case notation would be more cognitively effective for red-green colorblind users. An empirical study using 84 IT (Information Technology) professionals is conducted to assess the cognitive effectiveness of the RGD version of the PoN-enabled misuse case notation in comparison to the original misuse case notation. The experiment data are analyzed for any statistically significant findings. The quantitative and qualitative results of the experiment indicate that the RGD version of PoN-enabled misuse case notation maintains its cognitive effectiveness superiority over the original notation. The results also show that the subjects are divided in their opinions with respect to the aesthetic appeal of the two notations. Adhering to the complete set of principles outlined in the PoN has allowed the new notation to maintain its cognitive effectiveness superiority over the original notation despite a curtailed color perspective.
C1 [El-Attar, Mohamed] Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
C3 Zayed University
RP El-Attar, M (corresponding author), Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
EM Mohamed.El-Attar@zu.ac.ae
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Acosta-Vargas P, 2019, INT CONF EDEMOC EGOV, P249, DOI [10.1109/ICEDEG.2019.8734439, 10.1109/icedeg.2019.8734439]
   Acosta-Vargas P, 2018, INT CONF EDEMOC EGOV, P9, DOI 10.1109/ICEDEG.2018.8372368
   [Anonymous], 1996, P IFIP INT C ICT SYS
   [Anonymous], 2010, The Unified Modeling Language(UML)
   Paiva DMB, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110819
   Basman AM., 2011, Proceedings of the ACM International Conf. Companion on Object Oriented Programming Systems Languages and Applications Companion, P237
   Bertin J., 1983, SEMIOLOGY GRAPHICS D
   Bouraoui A, 2019, SCI COMPUT PROGRAM, V172, P63, DOI 10.1016/j.scico.2018.11.002
   Bramao I, 2011, ACTA PSYCHOL, V138, P244, DOI 10.1016/j.actpsy.2011.06.010
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Chiplunkar S., 2019 CHI C HUM FACT, P1
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Colblindor, COBL COL SIM
   CompTIA, 2021, IT IND OUTL 2021
   Dougiamas M., MOODLE
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   El-Attar M, STAT PACKAGE MISUSE
   El-Attar M, 2015, IEEE T SOFTWARE ENG, V41, P661, DOI 10.1109/TSE.2015.2396526
   El-Glaly Yasmine N., 2018, ACM Inroads, V9, P30, DOI 10.1145/3182184
   Engiel P., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1001
   Evans Data Corporation, GLOB DEV POP DEM STU
   Ferati M., 2012, Usability-and Accessibility-Focused Requirements Engineering, P79
   Ferreira A., 2019, International Conf on Applied Human Factors and Ergonomics. Springer, P281
   Flatla David R., 2012, Proceedings of the 14th International ACM SIGACCESS Conference on Computers and Accessibility
   Fogli D, 2014, UNIVERSAL ACCESS INF, V13, P205, DOI 10.1007/s10209-013-0291-6
   Garrido A, 2013, IEEE INTERNET COMPUT, V17, P58, DOI 10.1109/MIC.2012.143
   Crespo RG, 2016, COMPUT STAND INTER, V48, P1, DOI 10.1016/j.csi.2016.04.001
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Idrobo CS, 2017, COMM COM INF SC, V735, P572, DOI 10.1007/978-3-319-66562-7_41
   Ikhsan IN, 2018, PROCEEDINGS OF 2018 5TH INTERNATIONAL CONFERENCE ON DATA AND SOFTWARE ENGINEERING (ICODSE)
   J├a┬╝rjens J., 2005, SECURE SYSTEMS DEV U
   Lehtonen MO, 2007, IEEE SYST J, V1, P129, DOI 10.1109/JSYST.2007.909820
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   de Moura CJM, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P594, DOI 10.1109/CSCI.2017.103
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   National Eye Institute, 2015, FACTS COL
   Norkhalid A.M., 2020, 2020 8 INT C INF TEC
   Novoa Avellaneda C.C., 2020, THESIS UNIANDES, P329
   Oliveira RF., 2018, Proceedings of the 17th Brazilian Symposium on Software Quality, P180
   Peissner M., 2014, International Conf. on Universal Access in Human-Computer Interaction, P431
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Raspotnig C, 2013, J SYST SOFTWARE, V86, P1124, DOI 10.1016/j.jss.2012.12.002
   Regev G, 2005, BUS PROCESS MANAG J, V11, P695, DOI 10.1108/14637150510630864
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   Saleh F, 2015, INFORM SOFTWARE TECH, V66, P73, DOI 10.1016/j.infsof.2015.05.002
   Sánchez-Gordón ML, 2014, PROCEDIA COMPUT SCI, V27, P281, DOI 10.1016/j.procs.2014.02.031
   Sanchez-Gordon S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1987
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Shirogane Junko, 2011, Information Quality in e-Health. Proceedings 7th Conference of the Workgroup Human-Computer Interaction and Usability Engineering of the Austrian Computer Society, USAB 2011, P349, DOI 10.1007/978-3-642-25364-5_25
   Shrestha R., 2020, P INT COL ASS AIC C, P586
   Shrestha R, 2016, STUD HEALTH TECHNOL, V229, P392, DOI 10.3233/978-1-61499-684-2-392
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   TREISMAN A, 1982, J EXP PSYCHOL HUMAN, V8, P194, DOI 10.1037/0096-1523.8.2.194
   Tuan DT., 2012, 2012 IEEE RIVF International Conf. on Computing Communication Technologies, Research, Innovation, P1
   van der Linden D, 2019, IEEE T SOFTWARE ENG, V45, P736, DOI 10.1109/TSE.2018.2802910
   Vigo Markel., 2013, Proceedings of the 10th International Cross-Disciplinary Conference on Web Accessibility, P1, DOI DOI 10.1145/2461121.2461124
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   WURM LH, 1993, J EXP PSYCHOL HUMAN, V19, P899, DOI 10.1037/0096-1523.19.4.899
   Yang SS, 2008, J CONTROL SCI ENG, V2008, DOI 10.1155/2008/152030
   Zaki M, 2011, LECT NOTES COMPUT SC, V6761, P319, DOI 10.1007/978-3-642-21602-2_35
NR 69
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 247
EP 272
DI 10.1007/s10270-022-00992-4
EA MAR 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000770741700002
DA 2024-07-18
ER

PT J
AU de la Vega, A
   Kolovos, D
AF de la Vega, Alfonso
   Kolovos, Dimitris
TI An efficient line-based approach for resolving merge conflicts in
   XMI-based models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Version control systems; Conflict resolution
ID OF-THE-ART
AB Conflicts in software artefacts can appear during collaborative development through version control systems. When these conflicts happen in XMI models, the conflict sections generated by diff programs break the XMI serialisation and compromise the ability to use model editors that assume well-formedness of this serialisation. While these conflict sections already mark the conflicting lines of the model, current tools for conflict resolution in models ignore them and instead load the different versions of a model from the repository, over which they perform a full and costly comparison that re-identifies the conflicts. We present a novel approach that prevents this repetition of work by directly parsing XMI-based models with conflict sections, which allows for a targeted analysis of only the lines of the model that have been detected to be in conflict by the version control system. We have implemented this approach in the Peacemaker tool, which can load XMI models with conflict sections, compute and display conflicts at the model level, and provide appropriate resolution actions. Compared with state-of-the-art model comparison tools with support for conflict resolution, Peacemaker is able to identify the vast majority of conflicts in models while reducing the required time by up to 60%. The small subset of non-identified conflicts does not introduce issues into the models, e.g. there is no loss of model information, and the resulting models after line-merging these conflicts conform to their metamodels.
C1 [de la Vega, Alfonso] Univ Cantabria, Software Engn & Real Time, Santander, Spain.
   [Kolovos, Dimitris] Univ York, Dept Comp Sci, York, N Yorkshire, England.
C3 Universidad de Cantabria; University of York - UK
RP de la Vega, A (corresponding author), Univ Cantabria, Software Engn & Real Time, Santander, Spain.
EM alfonso.delavega@unican.es; dimitris.kolovos@york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; de la vega, Alfonso/B-6157-2017
OI Kolovos, Dimitris/0000-0002-1724-6563; de la Vega,
   Alfonso/0000-0002-7109-4249
FU CRUE-CSIC agreement; Springer Nature
FX Funding Open Access funding provided thanks to the CRUE-CSIC agreement
   with Springer Nature.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K., 2009, MODSE MCCMWORKSHOP I, P1
   [Anonymous], Sirius
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Asenov D, 2017, LECT NOTES COMPUT SC, V10202, P152, DOI 10.1007/978-3-662-54494-5_9
   Barrett S., 2008, PROC 2 WORKSHOP MODE
   Bendix L., 2008, Proceedings of the 2008 International Workshop on Comparison and Versioning of Software Models, P31, DOI DOI 10.1145/1370152.1370161
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cooper J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P308, DOI 10.1109/MODELS50736.2021.00038
   Eclipse Foundation, EMF DIFFMERGE
   Eclipse Foundation, EMF COMPARE
   Eclipse Foundation, ECL CDO
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   López JAH, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P58, DOI 10.1109/MODELS50736.2021.00015
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   IBM, RAT RHAPS DIFFMERGE
   Kelly S, 2018, LECT NOTES COMPUT SC, V10748, P20, DOI 10.1007/978-3-319-74730-9_3
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Koegel M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P43, DOI 10.1109/CVSM.2009.5071721
   MathWorks, MERGE SIMULINK MODEL
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Nah FFH, 2004, BEHAV INFORM TECHNOL, V23, P153, DOI 10.1080/01449290410001669914
   *OBJ MAN GROUP, XML MET INT SPEC
   Object Management Group, 2016, Technical Report v2.5.1
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   SAX Project, SIMPLE API XML
   Schmidt M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P947
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   Somogyi FA, 2020, SOFTW SYST MODEL, V19, P693, DOI 10.1007/s10270-019-00760-x
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
NR 35
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2461
EP 2487
DI 10.1007/s10270-022-00976-4
EA MAR 2022
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000766434800001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Koltun, G
   Pundel, M
AF Koltun, Gennadiy
   Pundel, Mathis
TI Using two case studies to explore the applicability of VIATRA for the
   model-driven engineering of mechatronic production systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model Transformations; Model-Driven Engineering; VIATRA; Mechatronic
   Production Systems; Applicability Study
ID FRAMEWORK; DESIGN
AB The engineering of mechatronic production systems is complex and requires various disciplines (e.g., systems, mechanical, electrical and software engineers). Model-driven engineering (MDE) supports systems development and the exchange of information based on models and transformations. However, the integration and adoption of different modeling approaches are becoming challenges when it comes to cross-disciplinary work. VIATRA is a long-living enduring and mature modeling framework that offers rich model transformation features to develop MDE applications. This study investigates the extent to which VIATRA can be applied in the engineering of mechatronic production systems. For this purpose, two model transformation case studies are presented: "SysML - AutomationML" and "SysML4Mechatronics - AutomationML." Both case studies are representative of structural modeling and interdisciplinary data exchange during the development of mechatronic production systems. These case studies are derived from other researchers in the community. A VIATRA software prototype implements these case studies as a batch-oriented transformation and serves as one basis for evaluating VIATRA. To report on our observations and findings, we built on an evaluation framework from the MDE community. This framework considers 14 different characteristics (e.g., maturity, size, execution time, modularity, learnability), according to the Goal-Question-Metric paradigm. To be able to evaluate our findings, we compared VIATRA to ATL. We applied all cases to a lab-size mechatronic production system. We found that, with VIATRA, the same functions for model transformation applications can be achieved as with ATL, which is popular for model transformations in both the MDE and the mechatronic production systems community. VIATRA combines the relational, imperative, and graph-based paradigms and enables the development and execution of model-to-model (M2M) and model-to-text (M2T) transformations. Furthermore, the VIATRA internal DSL is based on Xtend and Java, making VIATRA attractive and intuitive for users with less experience in modeling than in object-oriented programming. Thus, VIATRA leads to an interesting alternative for the model-driven engineering of mechatronic production systems. It has the potential to reduce the complexity during the development of model transformations. To conclude, this paper evaluates the applicability of VIATRA, its strengths and limitations. It provides lessons learned and insights that can stimulate further research in the MDE for mechatronic production systems.
C1 [Koltun, Gennadiy; Pundel, Mathis] Tech Univ Munich TUM, Dept Mech Engn, Boltzmannstr 15, D-85748 Munich, Germany.
C3 Technical University of Munich
RP Koltun, G (corresponding author), Tech Univ Munich TUM, Dept Mech Engn, Boltzmannstr 15, D-85748 Munich, Germany.
EM Gennadiy.Koltun@tum.de; Mathis.Pundel@tum.de
OI Koltun, Gennadiy/0000-0001-9606-7338
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Albers A., 2013, LECT NOTES PRODUCTIO, P83, DOI [10.1007/978-3-642-30817-89, DOI 10.1007/978-3-642-30817-89, DOI 10.1007/978-3-642-30817-8_9]
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   [Anonymous], 2014, J SOFTW ENG APPL, DOI DOI 10.4236/JSEA.2014.75041
   [Anonymous], 2020, MODELING LANGUAGES C
   [Anonymous], 2014, Model Driven Architecture (MDA) Guide 2.0
   [Anonymous], 2015, UNIFIED MODELING LAN
   Balasubramanian Daniel., 2006, Electronic Communication of the European Association of Software Science and Technology, V1, P1, DOI [10.14279/tuj.eceasst.1.89, DOI 10.14279/TUJ.ECEASST.1.89]
   Barnes Mark., 2008, COLLADA - Digital Asset Schema Release 1.5.0 Specification
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Berardinelli L, 2016, AT-AUTOM, V64, P253, DOI 10.1515/auto-2015-0076
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bezivin J., 2005, P MET S, P1
   Bhatt K., 2012, International Journal of Emerging Technology and Advanced Engineering, V2, P150
   Biffl S, 2019, LECT NOTES COMPUT SC, V11483, P17, DOI 10.1007/978-3-030-21290-2_2
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Broy M, 2010, P IEEE, V98, P526, DOI 10.1109/JPROC.2009.2037771
   Budinsky F., 2009, ECLIPSE SERIES, DOI [10.5555/1197540, DOI 10.5555/1197540]
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Drath R., 2021, AUTOMATIONML IND COO, DOI [https://doi.org/10.1515/9783110745979, DOI 10.1515/9783110745979]
   Drath R, 2008, IEEE INT C EMERG, P616, DOI 10.1109/ETFA.2008.4638461
   Drey Z., 2009, Kermeta Language, Reference Manual
   Eclipe Foundation, 2020, ECL PAP MOD ENV
   Eclipe Foundation, 2020, VIS AUT MOD TRANSFOR
   Eclipse Foundation, 2020, ECLIPSE MODELING FRA
   Eclipse Foundation, 2020, XTEND
   Eclipse Foundation, 2020, ATL TRANSF LANG ATL
   Egyed A, 2018, COMPUTER, V51, P28, DOI 10.1109/MC.2018.1451666
   Feldmann S, 2014, PROC CIRP, V17, P451, DOI 10.1016/j.procir.2014.01.140
   Fowler M., 2010, Domain-specific languages
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hölldobler K, 2018, COMPUT LANG SYST STR, V54, P386, DOI 10.1016/j.cl.2018.08.002
   Institute of Software Technology and Interactive Systems, 2019, VIENN U TECHN ONL PL
   International Electrotechnical Commission (IEC), 2016, REPRESENTATION PROCE
   International Electrotechnical Commission (IEC), 2018, ENG DAT EXCH FORM 1
   International Electrotechnical Commission (IEC), 2019, PROGRAMMABLE CONTROL
   International Organization for Standardization (ISO), 2018, IND AUT SYST INT PRO
   International Organization for Standardization (ISO), 2001, SOFTW ENG PROD QUAL
   Johnson T, 2012, J COMPUT INF SCI ENG, V12, DOI 10.1115/1.4005452
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kernschmidt K, 2018, J ENG DESIGN, V29, P617, DOI 10.1080/09544828.2018.1520205
   KolahdouzRahimi S., 2013, THESIS U LONDON
   Krogstie J., 2003, UML and the unified process, P1
   Lano K, 2019, AGILE UML MANUAL
   Lano KV, 2010, LECT NOTES COMPUT SC, V6396, P199, DOI 10.1007/978-3-642-16265-7_15
   Li HX, 2019, AT-AUTOM, V67, P246, DOI 10.1515/auto-2018-0097
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5002, P275
   Object Management Group (OMG), 2016, MET OBJ FAC VERS 2 5
   Object Management Group (OMG), 2009, UML PROF MARTE VERS
   OMG, 2014, OMG document formal/2014-02-03
   OMG, 2017, Systems Modeling Language (SysML) Specification
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shah AA, 2010, LECT NOTES COMPUT SC, V5765, P580, DOI 10.1007/978-3-642-17322-6_25
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Varro Daniel, 2016, SOFSEM 2016 : Theory and Practice of Computer Science. 42nd International Conference on Current Trends in Theory and Practice of Computer Science. Proceedings: LNCS 9587, P51, DOI 10.1007/978-3-662-49192-8_5
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   VogelHeuser B., 2018, TUMAISTR021806
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Westfechtel Bernhard., 2015, EVALUATION NOVEL APP, V599, P141, DOI DOI 10.1007/978-3-319-30243-0_8
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 64
TC 0
Z9 0
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1643
EP 1664
DI 10.1007/s10270-021-00962-2
EA FEB 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000758996900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Petriu, DC
AF Petriu, Dorina C.
TI Integrating the analysis of multiple non-functional properties in
   model-driven engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Non-functional properties; Model-driven engineering; Analysis
   integration
ID PERFORMANCE; TRANSFORMATION; NETWORK
AB This paper discusses the progress made so far and future challenges in integrating the analysis of multiple Non-Functional Properties (NFP) (such as performance, schedulability, reliability, availability, scalability, security, safety, and maintainability) into the Model-Driven Engineering (MDE) process. The goal is to guide the design choices from an early stage and to ensure that the system under construction will meet its non-functional requirements. The evaluation of the NFPs considered in this paper uses various kinds of NFP analysis models (also known as quality models) based on existent formalisms and tools developed over the years. Examples are queueing networks, stochastic Petri nets, stochastic process algebras, Markov chains, fault trees, probabilistic time automata, etc. In the MDE context, these models are automatically derived by model transformations from the software models built for development. Developing software systems that exhibit a good trade-off between multiple NFPs is difficult because the design of the software under construction and its underlying platforms have a large number of degrees of freedom spanning a very large discontinuous design space, which cannot be exhaustively explored. Another challenge in balancing the NFPs of a system under construction is due to the fact that some NFPs are conflicting-when one gets better the other gets worse-so an appropriate software process is needed to evaluate and balance all the non-functional requirements. The integration approach discussed in this paper is based on an ecosystem of inter-related heterogeneous modeling artifacts intended to support the following features: feedback of analysis results, consistent co-evolution of the software and analysis models, cross-model traceability, incremental propagation of changes across models, (semi)automated software process steps, and metaheuristics for reducing the design space size to be explored.
C1 [Petriu, Dorina C.] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Petriu, DC (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM petriu@sce.carleton.ca
FU Natural Sciences and Engineering Research Council (NSERC)
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council (NSERC), through the Discovery and
   Strategic Projects programs.
CR Ajmone Marsan M., 1995, Wiley Series in Parallel Computing
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Alshboul B., 2018, J. Softw. Eng. Appl, V11, P204, DOI [10.4236/jsea.2018.115013, DOI 10.4236/JSEA.2018.115013]
   Altamimi T., 2016, PROC CASCON
   Ameller D, 2021, IEEE T SOFTWARE ENG, V47, P818, DOI 10.1109/TSE.2019.2904476
   [Anonymous], 2005, Secure Systems Development with UML
   Arcelli D, 2013, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.108.3
   Avritzer A, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P61, DOI 10.1145/3427921.3450246
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Casale G, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P78, DOI 10.1109/MiSE.2015.21
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Cortellessa V, 2010, LECT NOTES COMPUT SC, V6013, P368, DOI 10.1007/978-3-642-12029-9_26
   de Lara J, 2008, LECT NOTES COMPUT SC, V5002, P237
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Franks R.G., 2013, LAYERED QUEUEING NET
   Garcia Jokin., 2013, Software Language Engineering, Lecture Notes in Computer Science, P144
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Hassanzadeh Zargari M., 2016, THESIS CARLETON U CA
   Hillston J., 1996, A Compositional Approach to Performance Modelling, DOI [10.1017/CBO9780511569951, DOI 10.1017/CBO9780511569951]
   Houmb S., 2011, SOFTWARE ENG SECURE, P155
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kolovos Dimitrios S., 2018, The Epsilon book
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Kretschmer R, 2021, SOFTW SYST MODEL, V20, P539, DOI 10.1007/s10270-020-00823-4
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Li J.Z., 2011, Network and Service Management (CNSM), 2011 7th International Conference on, P1
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Object Management Group, 2009, FORMAL20091102 OMG
   Object Management Group, 2005, UML PROF SCH PERF TI
   Pagliari L, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P139, DOI 10.1145/3344948.3344990
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Petriu Dorina C., 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P219, DOI 10.1007/978-3-642-30982-3_7
   PLATEAU B, 1991, IEEE T SOFTWARE ENG, V17, P1093, DOI 10.1109/32.99196
   Rouland Q, 2021, J SYST ARCHITECT, V117, DOI 10.1016/j.sysarc.2021.102073
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Taromirad M., 2013, MPM MODELS, P27
   Trubiani Catia., 2014, Proceedings of the 5th ACM/SPEC International Conference on Performance Engineering, P75
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Woodside M, 2014, SOFTW SYST MODEL, V13, P1529, DOI 10.1007/s10270-013-0385-x
   Woodside M, 2009, J SYST SOFTWARE, V82, P56, DOI 10.1016/j.jss.2008.03.067
   Xu J, 2010, PERFORM EVALUATION, V67, P585, DOI 10.1016/j.peva.2009.07.004
NR 51
TC 5
Z9 5
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1777
EP 1791
DI 10.1007/s10270-021-00953-3
EA NOV 2021
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000723074900001
DA 2024-07-18
ER

PT J
AU Rodríguez, A
   Durán, F
   Kristensen, LM
AF Rodriguez, Alejandro
   Duran, Francisco
   Kristensen, Lars Michael
TI Simulation and analysis of MultEcore multilevel models based on
   rewriting logic
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multilevel modelling; Domain-specific modelling languages; Model
   transformations; Verification; Rewriting logic; Maude
ID SPECIFICATION; TOOL
AB Multilevel modelling (MLM) approaches make it possible for designers and modellers to work with an unlimited number of abstraction levels when specifying domain-specific modelling languages (DSMLs). In this paper, we present a functional infrastructure that allows modellers to define the structure and the operational semantics of multilevel modelling hierarchies, enabling simulation and analysis. Using the MultEcore tool, one can design and distribute the models that compose the language family in a multilevel hierarchy, and specify their behaviour by means of multilevel transformation, so-called multilevel coupled model transformations. We give a rewrite logic semantics to MultEcore's MLM, on which we have based our automated transformation from MultEcore to the rewriting logic language Maude. Then, we rely on Maude to execute MultEcore models and to support analysis techniques, like reachability analysis, bounded and unbounded model checking of invariants and LTL formulas on systems with both finite and infinite reachable state spaces using equational abstraction. We illustrate our developed techniques on a DSML family for Petri nets.
C1 [Rodriguez, Alejandro; Kristensen, Lars Michael] Western Norway Univ Appl Sci, Bergen, Norway.
   [Duran, Francisco] Univ Malaga, ITIS Software, Malaga, Spain.
C3 Western Norway University of Applied Sciences; Universidad de Malaga
RP Rodríguez, A (corresponding author), Western Norway Univ Appl Sci, Bergen, Norway.
EM arte@hvl.no; duran@lcc.uma.es; Lars.Michael.Kristensen@hvl.no
RI Durán, Francisco/JXL-7273-2024
OI Rodriguez, Alejandro/0000-0002-9605-9546
FU SFI Smart Ocean NFR Project [309612/F40]
FX Supported by SFI Smart Ocean NFR Project 309612/F40.
CR [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, INFORM SOFTWARE TECH, V64, P36, DOI 10.1016/j.infsof.2015.03.010
   Atkinson Colin, 2016, MODELLIERUNG 2016 WO, V255, P117
   Atkinson Colin, 2017, CEUR WORKSHOP P, V2019, P274
   Barais O, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P189, DOI 10.1109/ICSAW.2017.61
   BERNARDINELLO L, 1992, LECT NOTES COMPUT SC, V609, P304
   Bousse E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P150, DOI 10.1109/MODELS.2019.000-6
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   Clavel Manuel, 2007, Lecture Notes in Computer Science, V4350, DOI [10.1007/978-3-540-71999-1, DOI 10.1007/978-3-540-71999-1]
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2010, LECT NOTES COMPUT SC, V6394, P16
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Duran Francisco, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P400, DOI 10.1007/978-3-642-22944-2_30
   DURAN F, 2020, J LOG ALGEBRAIC METH
   Duran F., 2012, VALIDATING OCL CONST
   Durán F, 2019, LECT NOTES COMPUT SC, V11429, P93, DOI 10.1007/978-3-030-17502-3_6
   Garavel H, 2018, LECT NOTES COMPUT SC, V11152, P1, DOI 10.1007/978-3-319-99840-4_1
   Gerbig R., 2015, P 1 INT WORKSHOP EXE, V1560, P28
   Ghamarian Amir Hossein, 2012, International Journal on Software Tools for Technology Transfer, V14, P15, DOI 10.1007/s10009-011-0186-x
   Gronmo R, 2013, SOFTW SYST MODEL, V12, P121, DOI 10.1007/s10270-011-0190-3
   Guerra E., 2007, ECEASST, DOI 10.14279/tuj.eceasst.6.56
   Halder A., 2006, STUDY PETRI NETS MOD
   Hee, 2005, 2005 S VER VAL SOFTW
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Kelly S., 2008, Domain-Specific Modeling
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Kühne T, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P2, DOI 10.1145/3239372.3239411
   Lange, 2016, DACL DEEP CONS UNPUB
   Lindqvist J., 2007, ECEASST, DOI 10.14279/tuj.eceasst.6.55
   Macias F., 2019, MULTILEVEL MODELLING
   Macias F., 2017, P MULTI MODELS, P269
   Macías F, 2019, J LOG ALGEBR METHODS, V106, P167, DOI 10.1016/j.jlamp.2018.12.005
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2008, THEOR COMPUT SCI, V403, P239, DOI 10.1016/j.tcs.2008.04.040
   Meseguer J, 2012, J LOGIC ALGEBR PROGR, V81, P721, DOI 10.1016/j.jlap.2012.06.003
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Reisig, 2013, CAS STUD, DOI 10.1007/978-3-642-33278-4
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink Arend., 2009, ELECTR COMMUN, V18
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Rodriguez A., 2021, MULTECORE WEBPAGE
   Rodriguez A., 2021, PETRI NETS EXPT RESO
   Rodríguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P88, DOI 10.1109/MODELS-C.2019.00018
   Rodríguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P152, DOI 10.1109/MODELS-C.2019.00026
   Rodríguez A, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a4
   Roldan M., 2011, ELECT COMMUN EUR ASS, DOI 10.14279/tuj.eceasst.44.625
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Ullman JD., 1994, ELEMENTS ML PROGRAMM
   Van Mierlo S., 2014, International Conference on Model Driven Engineering Languages and Systems, P83
   Verbeek HMW, 2010, J COMPUT SYST SCI, V76, P125, DOI 10.1016/j.jcss.2009.06.003
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wolter U., 2019, 2019417 U BERG DEP I
NR 63
TC 2
Z9 2
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 561
EP 586
DI 10.1007/s10270-021-00947-1
EA NOV 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000721638400001
DA 2024-07-18
ER

PT J
AU Torre, D
   Alferez, M
   Soltana, G
   Sabetzadeh, M
   Briand, L
AF Torre, Damiano
   Alferez, Mauricio
   Soltana, Ghanem
   Sabetzadeh, Mehrdad
   Briand, Lionel
TI Modeling data protection and privacy: application and experience with
   GDPR
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE General Data Protection Regulation (GDPR); Conceptual modeling; Model
   variability; Regulatory compliance; Unified Modeling Language (UML)
ID FRAMEWORK; STANDARDS
AB In Europe and indeed worldwide, the General Data Protection Regulation (GDPR) provides protection to individuals regarding their personal data in the face of new technological developments. GDPR is widely viewed as the benchmark for data protection and privacy regulations that harmonizes data privacy laws across Europe. Although the GDPR is highly beneficial to individuals, it presents significant challenges for organizations monitoring or storing personal information. Since there is currently no automated solution with broad industrial applicability, organizations have no choice but to carry out expensive manual audits to ensure GDPR compliance. In this paper, we present a complete GDPR UML model as a first step toward designing automated methods for checking GDPR compliance. Given that the practical application of the GDPR is influenced by national laws of the EU Member States, we suggest a two-tiered description of the GDPR, generic and specialized. In this paper, we provide (1) the GDPR conceptual model we developed with complete traceability from its classes to the GDPR, (2) a glossary to help understand the model, (3) the plain-English description of 35 compliance rules derived from GDPR along with their encoding in OCL and (4) the set of 20 variations points derived from GDPR to specialize the generic model. We further present the challenges we faced in our modeling endeavor, the lessons we learned from it and future directions for research.
C1 [Torre, Damiano; Alferez, Mauricio; Soltana, Ghanem; Sabetzadeh, Mehrdad; Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.
   [Sabetzadeh, Mehrdad; Briand, Lionel] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Torre, Damiano] Texas A&M Univ Cent Texas, Dept Comp Informat Syst, Killeen, TX 76549 USA.
C3 University of Luxembourg; University of Ottawa; Texas A&M University
   System; Texas A&M University Central Texas
RP Torre, D (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.; Torre, D (corresponding author), Texas A&M Univ Cent Texas, Dept Comp Informat Syst, Killeen, TX 76549 USA.
EM damiano.torre@tamuct.edu; alferez.mauricio@gmail.com;
   ghanem.soltana@gmail.com; m.sabetzadeh@uottawa.ca; lionel.briand@uni.lu
RI Torre, Damiano/KHC-4702-2024
OI Torre, Damiano/0000-0002-1656-3057
FU Luxembourg's National Research Fund (FNR)
   [BRIDGES/19/IS/13759068/ARTAGO]; NSERC of Canada; Linklaters
FX This paper was supported by Linklaters, Luxembourg's National Research
   Fund (FNR), under grant BRIDGES/19/IS/13759068/ARTAGO and NSERC of
   Canada under the Discovery, Discovery Accelerator and CRC programs.
CR Alpaydin E., 2016, Machine learning: the new AI
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Breaux TD, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P225, DOI 10.1109/RE.2009.46
   Burmeister F, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6052
   Cabot J., 2016, MODEL DRIVEN SOFTWAR, V2nd
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Caramujo J, 2019, REQUIR ENG, V24, P1, DOI 10.1007/s00766-018-0305-2
   Chung PWH, 2008, KNOWL-BASED SYST, V21, P332, DOI 10.1016/j.knosys.2007.11.002
   Diamantopoulou V., 2017, ER FORUMDEMOS, V1979, P285
   Emmerich W, 1999, IEEE T SOFTWARE ENG, V25, P836, DOI 10.1109/32.824413
   EU-GDPR, 2019, EU GDPR PORT
   European Commission, 2018, Directive 2018/844/EU of the European Parliament and of the Council of 30 May 2018 amending Directive 2010/31/EU on the energy performance of buildings and Directive 2012/27/EU on energy efficiency, P75, DOI DOI 10.1007/3-540-47891-4_10
   European Union, 2018, GDPR NEW OPP NEW OBL
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Ghanavati S, 2014, INT REQUIR ENG CONF, P73, DOI 10.1109/RE.2014.6912249
   Guarda P, 2017, PROCEEDINGS OF THE 22ND ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES (SACMAT'17), P247, DOI 10.1145/3078861.3078879
   Hajri I, 2018, SOFTW SYST MODEL, V17, P939, DOI 10.1007/s10270-016-0539-8
   Hajri I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1008, DOI 10.1145/2950290.2983935
   Ingolfo S, 2014, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2014.6912273
   Manning Christopher D., 2001, Foundations of Statistical Natural Language Processing
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   OMG, 2017, OBJECT CONSTRAINT LA
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Rabinia A, 2020, LECT NOTES COMPUT SC, V12045, P124, DOI 10.1007/978-3-030-44429-7_9
   Ranise S., 2017, INT C COMP SAF REL S, P361, DOI [DOI 10.1007/978-3-319-66284-8_30, DOI 10.1007/978-3-319-66284-830]
   Sannier N, 2017, REQUIR ENG, V22, P215, DOI 10.1007/s00766-015-0241-3
   SHUM SB, 1994, INT J HUM-COMPUT ST, V40, P603, DOI 10.1006/ijhc.1994.1029
   Sing E., 2019, THESIS U TARTU
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   Soltana G., 2019, ABS190200397 CORR
   Soltana G, 2018, SOFTW SYST MODEL, V17, P851, DOI 10.1007/s10270-016-0542-0
   Soltana G, 2014, LECT NOTES COMPUT SC, V8767, P450, DOI 10.1007/978-3-319-11653-2_28
   Tankard Colin, 2016, Network Security, V2016, P5, DOI 10.1016/S1353-4858(16)30056-3
   Tom Jake, 2018, Perspectives in Business Informatics Research. 17th International Conference, BIR 2018. Proceedings. Lecture Notes in Business Information Processing (LNBIP 330), P18, DOI 10.1007/978-3-319-99951-7_2
   Torre D., MODEL DRIVEN ENG DAT, DOI [10.5281/zenodo.4564856, DOI 10.5281/ZENODO.4564856]
   Torre D, 2020, INT REQUIR ENG CONF, P136, DOI 10.1109/RE48521.2020.00025
   Torre D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P1, DOI 10.1109/MODELS.2019.00-20
   Torre D, 2018, J SYST SOFTWARE, V144, P121, DOI 10.1016/j.jss.2018.06.029
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
NR 43
TC 6
Z9 6
U1 8
U2 63
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2071
EP 2087
DI 10.1007/s10270-021-00935-5
EA NOV 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000719682600001
DA 2024-07-18
ER

PT J
AU Martínez, S
   Gérard, S
   Cabot, J
AF Martinez, Salvador
   Gerard, Sebastien
   Cabot, Jordi
TI Efficient model similarity estimation with robust hashing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Locality-sensitive hashing; Near-similar
   search; Robust hashing Comparison
AB As model-driven engineering (MDE) is increasingly adopted in complex industrial scenarios, modeling artefacts become a key and strategic asset for companies. As such, any MDE ecosystem must provide mechanisms to protect and exploit them. Current approaches depend on the calculation of the relative similarity among pairs of models. Unfortunately, model similarity calculation mechanisms are computationally expensive which prevents their use in large repositories or very large models. In this sense, this paper explores the adaptation of the robust hashing technique to the MDE domain as an efficient estimation method for model similarity. Indeed, robust hashing algorithms (i.e., hashing algorithms that generate similar outputs from similar input data) have proved useful as a key building block in intellectual property protection, authenticity assessment and fast comparison and retrieval solutions for different application domains. We present a detailed method for the generation of robust hashes for different types of models. Our approach is based on the translation to the MDE domain of diverse techniques such as summary extraction, minhash generation and locality-sensitive hash function families, originally developed for the comparison and classification of large datasets. We validate our approach with a prototype implementation and show that: (1) our approach can deal with any graph-based model representation; (2) a strong correlation exists between the similarity calculated directly on the robust hashes and a distance metric calculated over the original models; and (3) our approach scales well on large models and greatly reduces the time required to find similar models in large repositories.
C1 [Martinez, Salvador] IMT Atlantique, Lab STICC, UMR 6285, Brest, France.
   [Gerard, Sebastien] Univ Paris Saclay, CEA, List, F-91120 Palaiseau, France.
   [Cabot, Jordi] UOC, ICREA, Barcelona, Spain.
C3 Universite de Bretagne Occidentale; IMT - Institut Mines-Telecom; IMT
   Atlantique; Universite Paris Cite; Universite Paris Saclay; CEA; ICREA
RP Martínez, S (corresponding author), IMT Atlantique, Lab STICC, UMR 6285, Brest, France.
EM salvador.martinez@imt-atlantique.fr; sebastien.gerard@cea.fr;
   jordi.cabot@icrea.cat
RI Cabot, Jordi/P-7723-2015; Martínez, Salvador/F-2081-2016
OI Martínez, Salvador/0000-0002-3978-9876; Gerard,
   Sebastien/0000-0003-0295-0520
FU Spanish government [PID2020-114615RB-I00]; ECSEL Joint Undertaking
   [101007350]
FX This work has been partially funded by the Spanish government (LOCOSS
   project - PID2020-114615RB-I00) and the ECSEL Joint Undertaking (AIDOaRt
   project - grant agreement No 101007350).
CR [Anonymous], 2006, Eclipse Modeling Symposium, P1
   Babur Ö, 2019, J COMPUT LANG, V51, P57, DOI 10.1016/j.cola.2018.12.002
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Blouin A, 2011, LECT NOTES COMPUT SC, V6981, P62, DOI 10.1007/978-3-642-24485-8_6
   Broder AZ, 1998, COMPRESSION AND COMPLEXITY OF SEQUENCES 1997 - PROCEEDINGS, P21, DOI 10.1109/SEQUEN.1997.666900
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Cavnar W.B., 1994, Proceedings of SDAIR-94, 3rd Annual Symposium on Document Analysis and Information Retrieval, V48113, P161
   Cochez M, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P134, DOI 10.1109/WI-IAT.2014.26
   Constant t., 2012, EMF DIFF MERG
   Coskun B, 2004, PROCEEDINGS OF THE IEEE 12TH SIGNAL PROCESSING AND COMMUNICATIONS APPLICATIONS CONFERENCE, P292, DOI 10.1109/SIU.2004.1338317
   De Roover C, 2005, IEEE T SIGNAL PROCES, V53, P4020, DOI 10.1109/TSP.2005.855414
   Eastlake D, 2001, Technical Report
   Falleri JR, 2008, LECT NOTES COMPUT SC, V5301, P326, DOI 10.1007/978-3-540-87875-9_24
   FEISTEL H, 1973, SCI AM, V228, P15, DOI 10.1038/scientificamerican0573-15
   Ferdjoukh A., 2018, MEASUREMENT GENERATI
   Ferdjoukh Adel, 2017, ICSEA
   Fridrich J., 2000, Proceedings International Conference on Information Technology: Coding and Computing (Cat. No.PR00540), P178, DOI 10.1109/ITCC.2000.844203
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Juels A, 1999, 6TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P28, DOI 10.1145/319709.319714
   Karsh RK, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3639-6
   Kehrer T, 2012, IEEE INT CONF AUTOM, P306, DOI 10.1145/2351676.2351731
   Kinneer C, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P392, DOI 10.1145/3239372.3239390
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Ledeczi, 2001, WORKSH INT SIGN PROC, V17, P1
   Lee SH, 2012, DIGIT SIGNAL PROCESS, V22, P744, DOI 10.1016/j.dsp.2012.04.015
   Leskovec J, 2014, MINING OF MASSIVE DATASETS, 2ND EDITION, P1
   Liu YL, 2013, RADIOENGINEERING, V22, P1072
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Martínez S, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P312, DOI 10.1145/3239372.3239405
   Martínez S, 2020, COMPUT SCI EDUC, V30, P187, DOI 10.1080/08993408.2020.1711495
   Martínez S, 2018, IEEE ACCESS, V6, P29715, DOI 10.1109/ACCESS.2018.2841020
   Neisse R, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3098958
   Noyrit F, 2013, LECT NOTES COMPUT SC, V8107, P505, DOI 10.1007/978-3-642-41533-3_31
   Papi F. G., ACCOUNTABILITY RESPO, P20
   Pietsch C, 2017, IEEE INT CONF AUTOM, P913, DOI 10.1109/ASE.2017.8115704
   Reddy R., 2005, ASP OR MOD AOM WORKS
   Rivest R., 1992, Tech. Rep.
   Scheidgen M., 2013, P WORKSH SCAL MOD DR, P5
   Semeráth O, 2020, INT J SOFTW TOOLS TE, V22, P57, DOI 10.1007/s10009-019-00530-6
   Song JK, 2014, IEEE T CYBERNETICS, V44, P1225, DOI 10.1109/TCYB.2013.2289351
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Steinebach M, 2013, LECT NOTES COMPUT SC, V8099, P135
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Swaminathan A, 2006, IEEE T INF FOREN SEC, V1, P215, DOI 10.1109/TIFS.2006.873601
   Syriani E, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a3
   Taentzer G, 2018, LECT NOTES COMPUT SC, V10802, P3, DOI 10.1007/978-3-319-89363-1_1
   Tarmissi K, 2009, EXPERT SYST APPL, V36, P9409, DOI 10.1016/j.eswa.2008.12.062
   Troya J., 2016, Rules and helpers dependencies in atl-technical report
   Valduriez, 2004, P OOPSLA GPCE
   Venkatesan R, 2000, 2000 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL III, PROCEEDINGS, P664, DOI 10.1109/ICIP.2000.899541
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wille D, 2018, SCI COMPUT PROGRAM, V163, P62, DOI 10.1016/j.scico.2018.04.002
NR 57
TC 7
Z9 7
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 337
EP 361
DI 10.1007/s10270-021-00915-9
EA AUG 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000681523100001
DA 2024-07-18
ER

PT J
AU Bakirtzis, G
   Sherburne, T
   Adams, S
   Horowitz, BM
   Beling, PA
   Fleming, CH
AF Bakirtzis, Georgios
   Sherburne, Tim
   Adams, Stephen
   Horowitz, Barry M.
   Beling, Peter A.
   Fleming, Cody H.
TI An ontological metamodel for cyber-physical system safety, security, and
   resilience coengineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID COMPLEX
AB Cyber-physical systems are complex systems that require the integration of diverse software, firmware, and hardware to be practical and useful. This increased complexity is impacting the management of models necessary for designing cyber-physical systems that are able to take into account a number of "-ilities", such that they are safe and secure and ultimately resilient to disruption of service. We propose an ontological metamodel for system design that augments an already existing industry metamodel to capture the relationships between various model elements (requirements, interfaces, physical, and functional) and safety, security, and resilient considerations. Employing this metamodel leads to more cohesive and structured modeling efforts with an overall increase in scalability, usability, and unification of already existing models. In turn, this leads to a mission-oriented perspective in designing security defenses and resilience mechanisms to combat undesirable behaviors. We illustrate this metamodel in an open-source GraphQL implementation, which can interface with a number of modeling languages. We support our proposed metamodel with a detailed demonstration using an oil and gas pipeline model.
C1 [Bakirtzis, Georgios; Sherburne, Tim; Adams, Stephen; Horowitz, Barry M.; Fleming, Cody H.] Univ Virginia, Charlottesville, VA 22904 USA.
   [Beling, Peter A.] Virginia Tech, Blacksburg, VA USA.
C3 University of Virginia; Virginia Polytechnic Institute & State
   University
RP Bakirtzis, G (corresponding author), Univ Virginia, Charlottesville, VA 22904 USA.
EM bakirtzis@virginia.edu
RI Fleming, Cody H/J-3971-2015
OI Bakirtzis, Georgios/0000-0003-4992-0193
FU Stevens Institute of Technology through SERC under USDOD Contract
   [HQ0034-13-D-0004]; SERC
FX This material is based, in part, upon work supported by the Stevens
   Institute of Technology through SERC under USDOD Contract
   HQ0034-13-D-0004. SERC is a federally funded University affiliated
   research center managed by Stevens Institute of Technology. Any
   opinions, findings and conclusions or recommendations expressed in this
   material are those of the authors and do not necessarily reflect the
   views of the USDOD.
CR Allgöwer F, 2019, NONLINEAR ANAL-HYBRI, V34, P147, DOI 10.1016/j.nahs.2019.05.007
   [Anonymous], 2017, AS5506C SAE
   [Anonymous], 2011, RTCA DO-333, Formal Methods Supplement to D0-178C and D0-278A
   [Anonymous], 2018, DO-356 Airworthiness Security Methods and Considerations
   [Anonymous], 2018, AIR6913 SAE
   [Anonymous], 2019, 21448 ISO PAS SOTIF
   [Anonymous], 2003, IEEE Std. 1547-2003, P1, DOI 10.1109/IEEESTD.2003.94285
   [Anonymous], 1975, General Systems Theory: Mathematical Foundations
   [Anonymous], 2018, J3187 SAE
   [Anonymous], 2006, MSDN MAG
   [Anonymous], 2011, RTCA DO-331 Model-Based Development and Verification Supplement to DO-178C and DO-278A
   [Anonymous], 2020, WK60748 ASTM
   Ashby W.R., 1991, Facets of Systems Science, V7, P249
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   Atkinson C, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P216, DOI 10.1109/MODELS.2015.7338252
   Bakirtzis G, 2020, IEEE SYST J, V14, P4864, DOI 10.1109/JSYST.2019.2940145
   Berg H., 2012, INT WORKSHOP SYSTEM, P160, DOI [10.1007/978-3-642-36757-1_10, DOI 10.1007/978-3-642-36757-1_10]
   Berg H, 2015, COMM COM INF SC, V580, P172, DOI 10.1007/978-3-319-27869-8_10
   Berg H, 2015, COMM COM INF SC, V506, P84, DOI 10.1007/978-3-319-25156-1_6
   Broy M, 2010, P IEEE, V98, P526, DOI 10.1109/JPROC.2009.2037771
   Bruel JM, 2020, SOFTW SYST MODEL, V19, P441, DOI 10.1007/s10270-019-00762-9
   CAPEC, COMM ATT PATT EN CLA
   Carter B, 2019, SYSTEMS-BASEL, V7, DOI 10.3390/systems7020021
   Carter BT, 2018, ANN IEEE SYST CONF, P626
   Cho H., 2011, DSM, DOI [10.1145/2095050.2095056, DOI 10.1145/2095050.2095056]
   Cotsaftis M, 2009, UNDERST COMPLEX SYST, P49, DOI 10.1007/978-3-642-02199-2_3
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   DeWeck OL, 2011, ENG SYST, P1
   Douglass Bruce, 2016, AGILE SYSTEMS ENG, P1, DOI [10.1016/B978-0-12-802120-0.00001-1, DOI 10.1016/B978-0-12-802120-0.00001-1]
   Dragomir I, 2017, SOFTW SYST MODEL, V16, P587, DOI 10.1007/s10270-015-0481-1
   Elks C., 2017, ARXIV171201448CSCR
   Fleming C., 2020, P 50 IFIP IEEE INT C
   Flood R.L., 2013, Dealing with Complexity: An Introduction to the Theory and Application of Systems Science
   Fondement F, 2013, LECT NOTES COMPUT SC, V8107, P138, DOI 10.1007/978-3-642-41533-3_9
   Golra FR, 2018, LECT NOTES COMPUT SC, V10886, P54, DOI 10.1007/978-3-319-92970-5_4
   Gómez A, 2020, SOFTW SYST MODEL, V19, P1229, DOI 10.1007/s10270-020-00776-8
   GraphQL Foundation, GRAPHQL SPEC
   Horowitz BM, 2020, IEEE SECUR PRIV, V18, P55, DOI 10.1109/MSEC.2019.2947123
   Hosseini S, 2016, RELIAB ENG SYST SAFE, V145, P47, DOI 10.1016/j.ress.2015.08.006
   INCOSE international council on systems engineering, WORLD MOT SYST ENG V
   Jones Rick A., 2013, Environment Systems & Decisions, V33, P341, DOI 10.1007/s10669-013-9462-5
   Jones RA, 2012, SYSTEMS ENG, V15, P225, DOI 10.1002/sys.21206
   Kalnins A, 2019, SOFTW SYST MODEL, V18, P1699, DOI 10.1007/s10270-018-0668-3
   Karagiannis D, 2006, P 1 INT C SOFTW DAT
   Kinsner W, 2010, STUD COMPUT INTELL, DOI DOI 10.1007/978-3-642-16083-7_14
   Lee EA, 2017, ACM TRANS CYBER-PHYS, V1, DOI 10.1145/2912149
   Leibrandt R, 2001, P INCOSE INT S INCOS, DOI [10.1002/j.2334-5837.2001.tb02378.x, DOI 10.1002/J.2334-5837.2001.TB02378.X]
   Leveson N., 2018, STPA Handbook
   Leveson NG, 2011, ENG SYST, P1
   Long D., 2018, ONE MODEL MAY INTERE
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mian ZB, 2015, ADV INTELL SYST, V307, P91, DOI 10.1007/978-3-319-08964-5_6
   Mitra S, 2013, IEEE SECUR PRIV, V11, P28, DOI 10.1109/MSP.2013.77
   MOF, MET FAC COR SPEC SPE
   Morozov D, 2018, IFAC PAPERSONLINE, V51, P1385, DOI 10.1016/j.ifacol.2018.08.334
   Myers B. A., 1990, Journal of Visual Languages and Computing, V1, P97, DOI 10.1016/S1045-926X(05)80036-9
   ObjectManagement Group, SYSMLV2 RFP
   ObjectManagement Group, SYSML SPEC
   Obrst L, 2003, P 12 INT C INF KNOWL, P366, DOI DOI 10.1145/956863.956932
   Onggo S, 2010, CONCEPTUAL MODELING
   Paige R.F., 2017, PRESENT ULTERIOR SOF, P103, DOI [DOI 10.1007/978-3-319-67425-4_7, 10.1007/978- 3- 319- 67425-4_7]
   Pantel M., 2010, DESIGN PATTERN EXECU
   Penzenstadler B, 2014, IEEE SOFTWARE, V31, P40, DOI 10.1109/MS.2014.22
   Perrow C., 2011, Normal Accidents
   Poole J, 2001, P WORKSH MET AD OBJ
   Rieger CG, 2009, C HUM SYST INTERACT, P629
   Sheard SA, 2009, SYSTEMS ENG, V12, P295, DOI 10.1002/sys.20124
   Sherburne T., 2021, METHODS EVALUATE COS
   Son H.S., 2012, COMPUTER APPL GRAPHI, DOI DOI 10.1007/978-3-642-35600-1_8
   United States department of defense, DIG ENG STRAT
   University of Virginia, **DATA OBJECT**, DOI [10.5281/zenodo.3752888, DOI 10.5281/ZENODO.3752888]
   University of Virginia and Stevens Institute of Technology, **DATA OBJECT**, DOI [10.5281/zenodo.3753172, DOI 10.5281/ZENODO.3753172]
   Vangheluwe H., P 7 INT C MOD DRIV E
   Voas J, 2004, IEEE SOFTWARE, V21, P14, DOI 10.1109/MS.2004.54
   Walker M, 2013, J SYST SOFTWARE, V86, P2467, DOI 10.1016/j.jss.2013.04.001
   Whalen MW, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2012.173
   Wheeler FP, 2000, J OPER RES SOC, V51, P647, DOI 10.2307/254200
   Williams J.R., 2013, P 3 INT WORKSH EXP E
   Wolny S, 2020, SOFTW SYST MODEL, V19, P111, DOI 10.1007/s10270-019-00735-y
   Young W., 2013, P 29 ANN COMPUTER SE, P1, DOI [10.1145/2523649.2530277, DOI 10.1145/2523649.2530277]
   Young W, 2014, COMMUN ACM, V57, P31, DOI 10.1145/2556938
NR 81
TC 8
Z9 8
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 113
EP 137
DI 10.1007/s10270-021-00892-z
EA JUN 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000656757100001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Sànchez-Ferreres, J
   Burattin, A
   Carmona, J
   Montali, M
   Padró, L
   Quishpi, L
AF Sanchez-Ferreres, Josep
   Burattin, Andrea
   Carmona, Josep
   Montali, Marco
   Padro, Lluis
   Quishpi, Luis
TI Unleashing textual descriptions of business processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Natural language processing; Temporal
   logics; Process mining; Model checking; Simulation
ID MODEL
AB Textual descriptions of processes are ubiquitous in organizations, so that documentation of the important processes can be accessible to anyone involved. Unfortunately, the value of this rich data source is hampered by the challenge of analyzing unstructured information. In this paper we propose a framework to overcome the current limitations on dealing with textual descriptions of processes. This framework considers extraction and analysis and connects to process mining via simulation. The framework is grounded in the notion of annotated textual descriptions of processes, which represents a middle-ground between formalization and accessibility, and which accounts for different modeling styles, ranging from purely imperative to purely declarative. The contributions of this paper are implemented in several tools, and case studies are highlighted.
C1 [Sanchez-Ferreres, Josep; Carmona, Josep; Padro, Lluis; Quishpi, Luis] Univ Politecn Cataluna, Barcelona, Spain.
   [Burattin, Andrea] Tech Univ Denmark, Copenhagen, Denmark.
   [Montali, Marco] Free Univ Bozen Bolzano, Bolzano, Italy.
C3 Universitat Politecnica de Catalunya; Technical University of Denmark;
   Free University of Bozen-Bolzano
RP Sànchez-Ferreres, J (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM jsanchezf@cs.upc.edu; andbur@dtu.tk; jcarmona@cs.upc.edu;
   montali@inf.unibz.it; padro@cs.upc.edu; quishpi@cs.upc.edu
RI Burattin, Andrea/K-4485-2016; Carmona, Josep/E-6823-2010; Padró,
   Lluís/D-1877-2012
OI Burattin, Andrea/0000-0002-0837-0183; Padró, Lluís/0000-0003-4738-5019;
   Carmona, Josep/0000-0001-9656-254X; Quishpi Betun, Luis
   Hernan/0000-0002-3539-5853
FU MINECO; FEDER funds [TIN2017-86727-C2-1-R]
FX This work has been supported by MINECO and FEDER funds under grant
   TIN2017-86727-C2-1-R.
CR Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Buijs JCAM, 2012, IEEE C EVOL COMPUTAT
   Burattin, 2016, BPM DEMO TRACK
   CARMONA J.-VAN, 2018, Conformance checking
   Chen YB, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P167
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Das R., 2019, ICLR
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   De Giacomo G, 2014, AAAI CONF ARTIF INTE, P1027
   de Medeiros AnaKarla Alves., 2005, Workshop and Tutorial on Practical Use of Coloured Petri Nets and the CPN Tools, P177
   Decision Model and Notation (DMN), 2016, STAND
   Di Ciccio C., 2015, WORK ENT ORG MODELIN, P20, DOI [10.1007/978-3-319-24626-0_2, DOI 10.1007/978-3-319-24626-0_2]
   Dijkman R, 2016, ENTERP INF SYST-UK, V10, P129, DOI 10.1080/17517575.2014.928951
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fellbaum C, 1998, LANG SPEECH & COMMUN, P1
   Feng WF, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4064
   Fliedl G, 2005, DATA KNOWL ENG, V55, P20, DOI 10.1016/j.datak.2004.11.007
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   Gall H.C., 2019, IEEE T SOFTWARE ENG
   Halioui A, 2018, IEEE ACM T COMPUT BI, V15, P1979, DOI 10.1109/TCBB.2018.2847336
   Jouck, 2018, THESIS U HASSELT
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Leopold H, 2013, THESIS
   Leopold H, 2018, LECT NOTES BUS INF P, V318, P67, DOI 10.1007/978-3-319-91704-7_5
   Levy R., 2006, P LREC GEN IT, P2231
   Mendling J., 2015, Int J Inf Syst Softw Eng Big Companies, V1, P78
   Mendling J, 2017, DECIS SUPPORT SYST, V100, P1, DOI 10.1016/j.dss.2017.06.009
   Mitchell T.M., P 2016 C N AM CHAPT, pASSOCIATION FOR COMPUTATIONAL LINGUISTICS
   Nunes VT, 2009, INFORM SCIENCES, V179, P2538, DOI 10.1016/j.ins.2009.01.033
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Padro L., 2017, BPM DEMO TRACK
   Padró L, 2012, LREC 2012 - EIGHTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P2473
   Pardo L., 2018, BPM DEMO TRACK
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pinggera J., 2014, THESIS
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Qian C, 2020, LECT NOTES COMPUT SC, V12127, P268, DOI 10.1007/978-3-030-49435-3_17
   Sànchez-Ferreres J, 2019, LECT NOTES COMPUT SC, V11675, P86, DOI 10.1007/978-3-030-26619-6_8
   Sànchez-Ferreres J, 2020, IEEE T LEARN TECHNOL, V13, P552, DOI 10.1109/TLT.2020.2983916
   Sànchez-Ferreres J, 2018, DATA KNOWL ENG, V118, P25, DOI 10.1016/j.datak.2018.09.001
   Sànchez-Ferreres J, 2017, LECT NOTES COMPUT SC, V10253, P413, DOI 10.1007/978-3-319-59536-8_26
   Schumacher, 2016, THESIS JW GOETHE U F
   Semmelrodt F., 2013, THESIS U ULM
   Stenetorp P., 2012, P DEM 13 C EUR CHAPT, P102
   Tsujii J., P 2018 C EMP METH NA
   van der Aa H., 2018, P 27 INT C COMP LING, P2791
   van der Aa H, 2017, INFORM SYST, V64, P447, DOI 10.1016/j.is.2016.07.010
   van der Aa H, 2016, LECT NOTES COMPUT SC, V9850, P271, DOI 10.1007/978-3-319-45348-4_16
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   Vardi M.Y., LTL SATISFIABILITY C
   Verbeek E., 2010, INT C BUSINESS PROCE, V615
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   Walter K., 2011, P INT C CAS BAS REAS, P207
NR 55
TC 5
Z9 5
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2131
EP 2153
DI 10.1007/s10270-021-00886-x
EA MAY 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000654815200001
DA 2024-07-18
ER

PT J
AU Tomaszek, S
   Speith, R
   Schürr, A
AF Tomaszek, Stefan
   Speith, Roland
   Schuerr, Andy
TI Virtual network embedding: ensuring correctness and optimality by
   construction using model transformation and integer linear programming
   techniques
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data center; Virtual network embedding; Model-driven development;
   Integer linear programming; Model transformation; Graph transformation;
   Triple-graph grammar; Object Constraint Language
ID CONSTRAINTS
AB Virtualization technology allows service providers to operate data centers in a cost-effective and scalable manner. The data center network (substrate network) and the applications executed in the data center (virtual networks) are often modeled as graphs. The nodes of the graphs represent (physical or virtual) servers and switches, and the edges represent communication links. Nodes and links are annotated with the provided and required resources (e.g., memory and bandwidth). The NP-hard virtual network embedding (VNE) problem deals with the embedding of a set of virtual networks to the substrate network such that (i) all (resource) constraints of the substrate network are fulfilled, and (ii) an objective is optimized (e.g., minimizing the communication costs). The existing two-step highly customizable model-driven virtual network embedding (MdVNE) approach combines model transformation (MT) and integer linear programming (ILP) techniques to solve the VNE problem based on a declarative specification. MdVNE generates element mapping candidates from an MT specification and identifies an optimal and correct embeddings using an ILP solver. In the past, developers created the MT and ILP specifications manually and needed to ensure carefully that both are compatible and respect the problem description. In this article, we present a novel construction methodology for synthesizing the MT and ILP specification from a given declarative model-based VNE problem description. This problem description consists of a metamodel for substrate and virtual networks, additional OCL constraints, and an objective function that assigns costs to a given model. This methodology ensures that the derived embeddings are correct w.r.t. the metamodel and the OCL constraints, and optimal w.r.t. the optimization goal. The novel model-based VNE specification is applicable to different network domains, environments, and constraints. Thus, the construction methodology allows to automate most of the steps to realize a correct and optimal VNE algorithm compared to a hand-crafted VNE implementation. Furthermore, the simulative evaluation confirms that using MT techniques reduces the time for solving the VNE problem considerably in comparison with a purely ILP-based approach.
C1 [Tomaszek, Stefan; Speith, Roland; Schuerr, Andy] Tech Univ Darmstadt, Real Time Syst Lab, Merckstr 25, D-64283 Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Tomaszek, S (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Merckstr 25, D-64283 Darmstadt, Germany.
EM stefan.tomaszek@es.tu-darmstadt.de; andy.schuerr@es.tu-darmstadt.de
OI Schurr, Andy/0000-0001-8100-1109; Speith, Roland/0000-0002-5551-9374
FU German Research Foundation (DFG) within the Collaborative Research
   Center (CRC) 1053 - MAKI
FX This work was funded by the German Research Foundation (DFG) as part of
   project A1 within the Collaborative Research Center (CRC) 1053 - MAKI.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Abrial JR, 2007, FUND INFORM, V77, P1
   Al-Fares M, 2008, ACM SIGCOMM COMP COM, V38, P63, DOI 10.1145/1402946.1402967
   Alanen M., 2003, A relation between context-free grammars and Meta Object Facility metamodels
   Amaldi S., 2016, ELECT NOTES DISCRETE, V52, P213, DOI DOI 10.1016/J.ENDM.2016.03.028
   Anjorin A., 2015, BX STAF, P81
   [Anonymous], 2010, International Journal of Engineering
   [Anonymous], 2011, Application Management, DOI DOI 10.1007/978-3-8349-6492-2_2
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Ballani H, 2011, ACM SIGCOMM COMP COM, V41, P242, DOI 10.1145/2043164.2018465
   Bari MF, 2013, IEEE COMMUN SURV TUT, V15, P909, DOI 10.1109/SURV.2012.090512.00043
   Bill Robert, 2019, Software & Systems Modeling, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Cplex I.I., 2010, BOOK 12 2 USERS MANU
   Deckwerth F, 2014, LECT NOTES COMPUT SC, V8571, P81
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Fischer A, 2013, IEEE COMMUN SURV TUT, V15, P1888, DOI 10.1109/SURV.2013.013013.00155
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Group O.M., 2003, OBJECT CONSTRAINT LA
   Guo C., 2010, P 6 INT C, P1
   GurobiOptimization, 2016, I GUR OPTI REF MAN
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hadjiconstantinou, 1990, RANSFORMATION PROPOS
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heckel Reiko, 1995, ELECT NOTES THEOR CO, V2, P118, DOI [10.1016/S1571-0661(05)80188-4, DOI 10.1016/S1571-0661(05)80188-4]
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   Kluge R, 2017, J VISUAL LANG COMPUT, V38, P47, DOI 10.1016/j.jvlc.2016.10.003
   Krieger M.P., 2011, EXTENDING OCL OPERAT, P4
   Leblebici E, 2017, LECT NOTES COMPUT SC, V10202, P191, DOI 10.1007/978-3-662-54494-5_11
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Lopes FA, 2016, IEEE IFIP NETW OPER, P197, DOI 10.1109/NOMS.2016.7502813
   Myers Glenford J., 2011, The Art of Software Testing
   Nassar N, 2018, LECT NOTES COMPUT SC, V10887, P171, DOI 10.1007/978-3-319-92991-0_11
   Nebras N, 2019, LECT NOTES COMPUT SC, V11629, P177, DOI 10.1007/978-3-030-23611-3_11
   Pohlmann U, 2015, IEEE INT CONF AUTOM, P374, DOI 10.1109/ASE.2015.18
   Pohlmann U, 2019, AUTOMAT SOFTW ENG, V26, P315, DOI 10.1007/s10515-018-0248-3
   Rabbani MG, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P177
   Radke H., 2010, INT WORKSH GRAPH COM, P165
   Radke H, 2018, SCI COMPUT PROGRAM, V152, P38, DOI 10.1016/j.scico.2017.08.006
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P226
   Sahhaf S, 2015, COMPUT NETW, V93, P492, DOI 10.1016/j.comnet.2015.09.035
   Schnabel T, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P33, DOI 10.1145/2866614.2866619
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Shen SQ, 2015, IEEE ACM INT SYMP, P465, DOI 10.1109/CCGrid.2015.60
   Strüber D, 2017, LECT NOTES COMPUT SC, V10374, P121, DOI 10.1007/978-3-319-61473-1_9
   Tomaszek S, 2018, LECT NOTES COMPUT SC, V10888, P59, DOI 10.1007/978-3-319-93317-7_2
   Tomaszek Stefan, 2018, MODELLIERUNG 2018, P39
   Tsang PS, 2010, IEEE ICC
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   VarruE, 2006, INCREMENTAL GRAPH PA, P4, DOI [10.14279/tuj.eceasst.4.12, DOI 10.14279/TUJ.ECEASST.4.12]
   Weckesser, 2019, AUTOMATISIERTE ANAL
   Weckesser M, 2017, PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'17), P11, DOI 10.1145/3141848.3141850
   Yang Y, 2017, IEEE T CLOUD COMPUT, V5, P168, DOI 10.1109/TCC.2015.2459704
   Yang ZH, 2016, CHINA COMMUN, V13, P177, DOI 10.1109/CC.2016.7563720
   Yu ML, 2008, ACM SIGCOMM COMP COM, V38, P19, DOI 10.1145/1355734.1355737
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zave P, 2008, LECT NOTES COMPUT SC, V5310, P256
   Zeng Deze, 2015, International Journal of Autonomous and Adaptive Communications Systems, V8, P392
   Zschaler S, 2016, LECT NOTES COMPUT SC, V9946, P317, DOI 10.1007/978-3-319-50230-4_24
NR 61
TC 3
Z9 3
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1299
EP 1332
DI 10.1007/s10270-020-00852-z
EA JAN 2021
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000613030600001
DA 2024-07-18
ER

PT J
AU Andre, E
   Tan, TH
   Chen, MM
   Liu, S
   Sun, J
   Liu, Y
   Dong, JS
AF Andre, Etienne
   Tan, Tian Huat
   Chen, Manman
   Liu, Shuang
   Sun, Jun
   Liu, Yang
   Dong, Jin Song
TI Automated synthesis of local time requirement for service composition
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Web service composition; Parameter synthesis; Modeling Web services;
   Formal semantics; BPEL; Parametric model checking
ID PARAMETRIC MODEL-CHECKING; WEB; VERIFICATION; ABSTRACTIONS
AB Service composition aims at achieving a business goal by composing existing service-based applications or components. The response time of a service is crucial, especially in time-critical business environments, which is often stated as a clause in service-level agreements between service providers and service users. To meet the guaranteed response time requirement of a composite service, it is important to select a feasible set of component services such that their response time will collectively satisfy the response time requirement of the composite service. In this work, we use the BPEL modeling language that aims at specifying Web services. We extend it with timing parameters and equip it with a formal semantics. Then, we propose a fully automated approach to synthesize the response time requirement of component services modeled using BPEL, in the form of a constraint on the local response times. The synthesized requirement will guarantee the satisfaction of the global response time requirement, statically or dynamically. We implemented our work into a tool,Selamatand performed several experiments to evaluate the validity of our approach.
C1 [Andre, Etienne] Univ Lorraine, LORIA, INRIA, CNRS, Nancy, France.
   [Tan, Tian Huat] IBM Corp, Singapore, Singapore.
   [Chen, Manman] Autodesk, Singapore, Singapore.
   [Liu, Shuang] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Singapore, Singapore.
   [Liu, Yang] Nanyang Technol Univ, Singapore, Singapore.
   [Dong, Jin Song] Natl Univ Singapore, Singapore, Singapore.
   [Dong, Jin Song] Griffith Univ, Brisbane, Qld, Australia.
C3 Universite de Lorraine; Inria; Centre National de la Recherche
   Scientifique (CNRS); Autodesk, Inc.; Tianjin University; Singapore
   Management University; Nanyang Technological University; National
   University of Singapore; Griffith University
RP Andre, E (corresponding author), Univ Lorraine, LORIA, INRIA, CNRS, Nancy, France.
EM eandre93430@lipn13.fr
RI yang, liu/GVU-8760-2022; Liu, Yang/HNJ-6693-2023; xiao,
   ming/KHT-1774-2024; yang, liu/HTN-9175-2023; LIU, YANG/HWQ-4615-2023;
   liu, yang/HIU-0559-2022; liu, yang/HHY-8583-2022; liu,
   yang/HQY-7531-2023; Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215; Andre, Etienne/0000-0001-8473-9555
CR Abdeddaïm Y, 2002, LECT NOTES COMPUT SC, V2280, P113
   Ai LF, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P738, DOI 10.1109/CIMCA.2008.104
   Alrifai M., 2009, WWW
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   Alves A., 2007, Web Services Business Process Execution Language Version 2.0
   Andre Etienne, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P381, DOI 10.1007/978-3-319-02444-8_27
   Andre E, 2015, LECT NOTES COMPUTER, P7
   Andre E., 2013, FOCUS SERIES COMPUTE
   Andre E, 2013, OPENACCESS SERIES IN, P18
   André É, 2014, REAL-TIME SYST, V50, P620, DOI 10.1007/s11241-014-9208-6
   [Anonymous], 2018, Amazon Elastic Compute Cloud
   [Anonymous], ACM COMPUT SURV
   [Anonymous], 2017, MIDDLEWARE STATE MIC
   [Anonymous], 1974, THESIS
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Ardagna D, 2006, LECT NOTES COMPUT SC, V3812, P32
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bianculli D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P501, DOI 10.1145/1985793.1985862
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3129676.3129682, 10.1145/3183628.3183631]
   Ceska M, 2014, LECT NOTES COMPUT SC, V8859, P86, DOI 10.1007/978-3-319-12982-2_7
   Chen MM, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P564, DOI 10.1145/2591062.2591070
   Chen MM, 2013, LECT NOTES COMPUT SC, V8144, P313, DOI 10.1007/978-3-642-41202-8_21
   CHINNICI R., 2004, WEB SERVICES DESCRIP
   Cimatti A, 2008, REAL TIM SYST SYMP P, P80, DOI 10.1109/RTSS.2008.36
   David Alexandre, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P349, DOI 10.1007/978-3-642-22110-1_27
   Daws C, 1996, REAL TIM SYST SYMP P, P73, DOI 10.1109/REAL.1996.563702
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eichelmann T, 2010, PROCEEDINGS OF THE 8TH INTERNATIONAL NETWORK CONFERENCE (INC 2010), P75
   Ermedahl A, 2007, WCET OASICS
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Foster H., 2006, 28th International Conference on Software Engineering Proceedings, P771, DOI 10.1145/1134285.1134408
   Foster H., 2006, THESIS
   Foundation A.S, 2007, AP ODE
   Fribourg L., 2012, 2012 19th International Symposium on Temporal Representation and Reasoning (TIME), P73, DOI 10.1109/TIME.2012.10
   Gao CM, 2007, P INT COMP SOFTW APP, P361
   Geebelen K, 2008, 3 WORKSH MIDDL SERV, P49
   Gudgin M., 2007, SIMPLE OBJECT ACCESS
   Herbreteau F, 2016, INFORM COMPUT, V251, P67, DOI 10.1016/j.ic.2016.07.004
   Nguyen HG, 2018, IEEE INT C ENG COMP, P1, DOI [10.1109/ICOPS35962.2018.9575287, 10.1109/ICECCS2018.2018.00009]
   Hune T, 2002, J LOGIC ALGEBR PROGR, V52-3, P183, DOI 10.1016/S1567-8326(02)00037-1
   Jovanovic Aleksandra, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P176, DOI 10.1007/978-3-319-11439-2_14
   Jovanovic A, 2015, IEEE T SOFTWARE ENG, V41, P445, DOI 10.1109/TSE.2014.2357445
   Kraft S., 2009, VALUETOOLS, P48
   Larsen KG, 2016, LECT NOTES COMPUT SC, V9952, P3, DOI 10.1007/978-3-319-47166-2_1
   Le T.A., 2010, EVALSVC X2014 EVALUA, P1, DOI DOI 10.1109/IJCNN.2010.5596456
   Li YT, 2009, MARKETING SCIENCE INNOVATIONS AND ECONOMIC DEVELOPMENT, P399
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Ma Y, 2008, COMPUT NETW, V52, P1093, DOI 10.1016/j.comnet.2007.12.003
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Mediouni BL, 2018, LECT NOTES COMPUT SC, V11138, P536, DOI 10.1007/978-3-030-01090-4_33
   Menascé DA, 2004, IEEE INTERNET COMPUT, V8, P90, DOI 10.1109/MIC.2004.1260710
   Mi CY, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P149, DOI 10.1109/SERA.2016.7516140
   Microservices, 2018, MICROSERVICES
   Moser O., 2008, 17th International Conference of World Wide Web (WWW'08), P815, DOI DOI 10.1145/1367497.1367607
   Ordónez A, 2015, COMPUT COMMUN, V69, P1, DOI 10.1016/j.comcom.2015.07.025
   Pautasso C, 2009, DATA KNOWL ENG, V68, P851, DOI 10.1016/j.datak.2009.02.016
   Quaas Karin, 2017, LICS, P1
   Roussanaly V, 2019, LECT NOTES COMPUT SC, V11561, P22, DOI 10.1007/978-3-030-25540-4_2
   Schmieders E, 2011, LECT NOTES COMPUT SC, V6994, P194, DOI 10.1007/978-3-642-24755-2_19
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Simmonds J., 2010, SIGSOFT FSE, P247
   Song Z, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P426, DOI 10.1109/ICWS.2019.00076
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Swain S, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2019.100151
   Tan T.H., 2019, SELAMAT BINARY EXPT
   Tan TH, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P542, DOI 10.1109/ICSE.2013.6606600
   Tari Z, 2013, FRAMEWORK MODELING S, P205
   Tan TH, 2016, PROC INT CONF SOFTW, P85, DOI 10.1145/2884781.2884861
   Tan TH, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P563, DOI 10.1145/2566486.2568048
   Traonouez LM, 2009, J UNIVERS COMPUT SCI, V15, P3273
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang LJ, 2003, IEEE SYS MAN CYBERN, P4057
NR 80
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 983
EP 1013
DI 10.1007/s10270-020-00787-5
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000550793200010
DA 2024-07-18
ER

PT J
AU Salay, R
   Kokaly, S
   Di Sandro, A
   Fung, NLS
   Chechik, M
AF Salay, Rick
   Kokaly, Sahar
   Di Sandro, Alessio
   Fung, Nick L. S.
   Chechik, Marsha
TI Heterogeneous megamodel management using collection operators
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Megamodel; Model management; Heterogeneous
ID MODEL; MAPREDUCE
AB Model management techniques help tame the complexity caused by the many models used in large-scale software development; however, these techniques have focused on operators to manipulate individual models rather than entire collections of them. In this work, we begin to address this gap by adapting the widely used map, reduce and filter collection operators for collections of models represented by megamodels. Key parts of this adaptation include the special handling of relationships between models and the use of polymorphism to support heterogeneous model collections. We evaluate the complexity of our operators analytically and demonstrate their applicability on six diverse megamodel management scenarios. We describe our tool support for the approach and evaluate its scalability experimentally as well as its applicability on a practical application from the automotive domain.
C1 [Salay, Rick; Di Sandro, Alessio; Fung, Nick L. S.; Chechik, Marsha] Univ Toronto, Toronto, ON, Canada.
   [Kokaly, Sahar] McMaster Univ, Hamilton, ON, Canada.
C3 University of Toronto; McMaster University
RP Salay, R (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM rsalay@cs.toronto.edu; kokalys@mcmaster.ca; adisandro@cs.toronto.edu;
   nlsfung@cs.toronto.edu; chechik@cs.toronto.edu
RI Di Sandro, Alessio/AAA-4904-2021
OI Di Sandro, Alessio/0000-0003-2429-4958
FU NSERC; General Motors
FX This work is funded by NSERC in collaboration with General Motors.
CR [Anonymous], GEN MODEL MANAGEMENT
   [Anonymous], 2002, COMPUTERS INTRACTABI
   [Anonymous], P DSN 04
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], 2011, ISO 262622011
   [Anonymous], MODELING LINGUISTIC
   [Anonymous], 2015, THE EPSILON BOOK
   [Anonymous], 2006, GAMMA 06, DOI DOI 10.1145/1138304.1138307
   [Anonymous], 2011, GSN COMM STAND VERS
   [Anonymous], 0501 LAB INF NANT AT
   [Anonymous], 2014, P 2 WORKSH VIEW BAS
   Bernstein PhilipA., 2003, CIDR, P209
   Bezivin J., 2004, P OOPSLA GPCE WORKSH
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   de Lara J, 2017, LECT NOTES COMPUT SC, V10202, P264, DOI 10.1007/978-3-662-54494-5_15
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Diskin Z., 2010, INT WORKSHOP MODEL D, P42
   Diskin Z, 2016, LECT NOTES COMPUT SC, V9946, P274, DOI 10.1007/978-3-319-50230-4_21
   Diskin Z, 2013, LECT NOTES COMPUT SC, V8225, P322, DOI 10.1007/978-3-319-02654-1_18
   El-Halwagi MM., 2014, Process synthesis and integration, DOI [10.1002/0471238961.1618150308011212.a01.pub2, DOI 10.1002/0471238961.1618150308011212.A01.PUB2]
   Erwig M, 1997, ACM SIGPLAN NOTICES, V32, P52, DOI 10.1145/258949.258955
   Favre Jean-Marie, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P151, DOI 10.1007/978-3-642-33666-9_11
   Fung NLS, 2018, LECT NOTES COMPUT SC, V11094, P60, DOI 10.1007/978-3-319-99229-7_7
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Heidenreich F, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a7
   Jouault F., 2010, P 2010 ACM S APPL CO, P2011, DOI DOI 10.1145/1774088.1774511
   Kling Wolfgang, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P180, DOI 10.1007/978-3-642-28830-2_10
   König W, 2016, PATHW MATH, P19, DOI 10.1007/978-3-319-33596-4_2
   Kokaly S, 2017, LECT NOTES COMPUT SC, V10488, P69, DOI 10.1007/978-3-319-66266-4_5
   Kokaly S, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P196, DOI 10.1145/2976767.2976792
   Lämmel R, 2008, SCI COMPUT PROGRAM, V70, P1, DOI 10.1016/j.scico.2007.07.001
   Lano K, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P259
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Melnik Sergey., 2003, SIGMOD C, P193, DOI DOI 10.1145/872757.872782
   Salay R., 2007, P OOPSLA WORKSH ECL, P55
   Salay R, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P236, DOI 10.1109/MODELS.2015.7338254
   Salay R, 2009, LECT NOTES COMPUT SC, V5565, P141, DOI 10.1007/978-3-642-02144-2_15
   Salay Rick., 2016, ME@MODELS, P50
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P301, DOI 10.1145/3239372.3239378
   Toure EB, 2018, L N INST COMP SCI SO, V204, P257, DOI 10.1007/978-3-319-72965-7_24
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Vignaga A, 2013, SOFTW SYST MODEL, V12, P105, DOI 10.1007/s10270-011-0191-2
NR 47
TC 5
Z9 5
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 231
EP 260
DI 10.1007/s10270-019-00738-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900011
DA 2024-07-18
ER

PT J
AU Hinkel, G
   Heinrich, R
   Reussner, R
AF Hinkel, Georg
   Heinrich, Robert
   Reussner, Ralf
TI An extensible approach to implicit incremental model analyses
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Incremental computation; Model-driven; Monads
ID PROGRAMMING LANGUAGE; COMPUTATION; ALGORITHMS
AB As systems evolve, analysis results based on models of the system must be updated, in many cases as fast as possible. Since usually only small parts of the model change, large parts of the analysis' intermediate results could be reused in an incremental fashion. Manually invalidating these intermediate results at the right places in the analysis is a non-trivial and error-prone task that conceals the codes intention. A possible solution for this problem is implicit incrementality, i.e., an incremental algorithm is derived from the batch specification, aiming for an increased performance without the cost of degraded maintainability. Current approaches are either specialized to a subset of analyses or require explicit state management. In this paper, we propose an approach to implicit incremental model analysis capable of integrating custom dynamic algorithms. For this, we formalize incremental derivation using category theory, gaining type-safety and correctness properties. We implement an extensible implicit incremental computation system and validate its applicability by integrating incremental queries. We evaluate the performance using a micro-benchmark and a community benchmark where the integration of explicit query incrementalization was multiple orders of magnitude faster than rerunning the analysis after every change.
C1 [Hinkel, Georg] Tecan Software Competence Ctr GmbH, Wiesbaden, Germany.
   [Heinrich, Robert] Karlsruhe Inst Technol, Qual Driven Syst Evolut Res Grp, Fasanengarten 5, D-76131 Karlsruhe, Germany.
   [Reussner, Ralf] Karlsruhe Inst Technol, Software Design & Qual, Fasanengarten 5, D-76131 Karlsruhe, Germany.
C3 Softwarepark Hagenberg; Helmholtz Association; Karlsruhe Institute of
   Technology; Helmholtz Association; Karlsruhe Institute of Technology
RP Hinkel, G (corresponding author), Tecan Software Competence Ctr GmbH, Wiesbaden, Germany.
EM georg.hinkel@gmail.com; heinrich@kit.edu; reussner@kit.edu
OI Reussner, Ralf/0000-0002-9308-6290; Hinkel, Georg/0000-0002-6462-5208
FU MWK (Ministry of Science, Research and the Arts Baden-Wurttemberg) in
   the funding line Research Seed Capital (RiSC)
FX We would like to thank the anonymous reviewers of the Software & Systems
   Modeling journal that have helped us to shape the paper into its current
   form with their thoughtful reviews. This work was partially supported by
   the MWK (Ministry of Science, Research and the Arts Baden-Wurttemberg)
   in the funding line Research Seed Capital (RiSC).
CR Acar UA, 2010, ACM SIGPLAN NOTICES, V45, P483, DOI 10.1145/1809028.1806650
   Acar UmutA., 2009, Proceedings of the 2009 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation, P1, DOI DOI 10.1145/1480945
   [Anonymous], 2005, PhD thesis
   [Anonymous], 2013, P 12 ANN INT C ASP O
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Ben-Menachem M., 1997, Software Quality: Producing Practical, Consistent Software, Slaying the Software Dragon Series
   Bergmann G., 2008, Proceedings of 3rd International Workshop on Graph and Model Transformation (GRaMoT 2008). 30th International Conference on Software Engineering, P25, DOI [10.1145/1402947.1402953, DOI 10.1145/1402947.1402953]
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Blakeley J. A., 1986, SIGMOD Record, V15, P61, DOI 10.1145/16856.16861
   Burckhardt S, 2011, ACM SIGPLAN NOTICES, V46, P427, DOI 10.1145/2076021.2048101
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   Cai YF, 2014, ACM SIGPLAN NOTICES, V49, P145, DOI 10.1145/2666356.2594304
   Carlsson M, 2002, ACM SIGPLAN NOTICES, V37, P26, DOI 10.1145/583852.581482
   Cattaneo G, 2010, DISCRETE APPL MATH, V158, P404, DOI 10.1016/j.dam.2009.10.005
   Chen Y, 2014, J FUNCT PROGRAM, V24, P56, DOI 10.1017/S0956796814000033
   Choi K., 1988, 25th ACM/IEEE Design Automation Conference. Proceedings 1988 (Cat. No.88CH2540-3), P501, DOI 10.1109/DAC.1988.14806
   Cooper GH, 2006, LECT NOTES COMPUT SC, V3924, P294
   Crole R. L., 1993, Categories for Types
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Fowler M., 2010, Domain-specific languages, P1
   Fraiteur G., 2008, 7 INT C ASP OR SOFTW
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gossman John, 2005, Introduction to Model/View/ViewModel pattern for building WPF apps
   Grust T, 2004, MONAD COMPREHENSIONS
   Gupta A., 1995, IEEE DATA ENG B, V18, P3
   Hammer MA, 2015, ACM SIGPLAN NOTICES, V50, P748, DOI [10.1145/2814270.2814305, 10.1145/2858965.2814305]
   Hammer MA, 2014, ACM SIGPLAN NOTICES, V49, P156, DOI [10.1145/2594291.2594324, 10.1145/2666356.2594324]
   Hammer MA, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1543135.1542480
   Harkes D., 2016, 30 EUR C OBJ OR PROG
   Harkes D., 2017, 31 EUR C OBJ OR PROG
   Hinkel E, 2015, ESL APPL LINGUIST, P3
   Hinkel G, 2016, NMF MODELING FRAMEWO
   Hinkel G., 2018, CEUR WORKSHOP P
   Hinkel G., 2015, P 8 TRANSF TOOL CONT, V1524, P142
   Hinkel G., 2017, CEUR WORKSHOP P
   Hinkel G, 2017, MODEL SOFTW SYST
   Hinkel G., 2017, THESIS
   Hinkel G., 2018, P THEOR PRACT MOD TR
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P2787, DOI 10.1007/s10270-018-0701-6
   Hoffman K, 2008, DR DOBBS J, V33, P55
   Holm J, 2001, J ACM, V48, P723, DOI 10.1145/502090.502095
   Horn M, 2015, USNC-URSI RADIO SCI, P147
   King V., 1999, Proceedings of the Thirty-First Annual ACM Symposium on Theory of Computing, P492, DOI 10.1145/301250.301380
   Krikava Filip, 2015, P 8 TRANSF TOOL CONT, V1524, P167
   Kuno HA, 1996, PROC INT CONF DATA, P310, DOI 10.1109/ICDE.1996.492178
   Lawvere F. W., 2003, SETS FOR MATH
   Meijer E, 2010, ACM SIGPLAN COMMERCI, V11, P1
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Meyerovich LA, 2009, ACM SIGPLAN NOTICES, V44, P1, DOI 10.1145/1639949.1640091
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   PUGH W, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P315, DOI 10.1145/75277.75305
   Ramalingam G., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P502, DOI 10.1145/158511.158710
   Rath Istvan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P102, DOI 10.1007/978-3-642-31491-9_10
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   REISS SP, 1984, SIGPLAN NOTICES, V19, P144, DOI 10.1145/502949.502889
   SALZ A, 1989, ACM IEEE D, P173, DOI 10.1145/74382.74412
   Smith J, 2009, MSDN MAG, V24, P72
   Stachowiak H., 1973, ALLGEMEINE MODELLTHE
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   SUTHERLAND J, 1995, ACM COMPUT SURV, V27, P274, DOI 10.1145/210376.210394
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Szarnyas Gabor., 2015, Transformation Tool Contest, P129
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   TARJAN RE, 1975, J ACM, V22, P215, DOI 10.1145/321879.321884
   TARJAN RE, 1979, J COMPUT SYST SCI, V18, P110, DOI 10.1016/0022-0000(79)90042-4
   ThomasW Reps, 1982, S PRINCIPLES PROGRAM, P169, DOI [10.1145/582153.582172, DOI 10.1145/582153.582172]
   Uhl A., 2011, ECEASST, V44, P1
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Wagelaar D., 2015, P 8 TRANSF TOOL CONT, P152
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Willis D, 2008, ACM SIGPLAN NOTICES, V43, P1, DOI 10.1145/1449955.1449766
NR 76
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 3151
EP 3187
DI 10.1007/s10270-019-00719-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Garcia-Dominguez, A
   Barmpis, K
   Kolovos, DS
   Wei, R
   Paige, RF
AF Garcia-Dominguez, Antonio
   Barmpis, Konstantinos
   Kolovos, Dimitrios S.
   Wei, Ran
   Paige, Richard F.
TI Stress-testing remote model querying APIs for relational and graph-based
   stores
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 12th European Conference on Modelling Foundations and Applications
   (ECMFA) / 9th International Conference on Theory and Practice of Model
   Transformations (ICMT) Held as Part of Software Technologies -
   Applications and Foundations (STAF) Conference
CY JUL 04-07, 2016
CL TU Wien, Vienna, AUSTRIA
HO TU Wien
DE Model persistence; Remote model querying; NoSQL storage; Relational
   databases; API design; Stress testing; Collaborative modelling
AB Recent research in scalable model-driven engineering now allows very large models to be stored and queried. Due to their size, rather than transferring such models over the network in their entirety, it is typically more efficient to access them remotely using networked services (e.g. model repositories, model indexes). Little attention has been paid so far to the nature of these services, and whether they remain responsive with an increasing number of concurrent clients. This paper extends a previous empirical study on the impact of certain key decisions on the scalability of concurrent model queries on two domains, using an Eclipse Connected Data Objects model repository, four configurations of the Hawk model index and a Neo4j-based configuration of the NeoEMF model store. The study evaluates the impact of the network protocol, the API design, the caching layer, the query language and the type of database and analyses the reasons for their varying levels of performance. The design of the API was shown to make a bigger difference compared to the network protocol (HTTP/TCP) used. Where available, the query-specific indexed and derived attributes in Hawk outperformed the comprehensive generic caching in CDO. Finally, the results illustrate the still ongoing evolution of graph databases: two tools using different versions of the same backend had very different performance, with one slower than CDO and the other faster than it.
C1 [Garcia-Dominguez, Antonio] Aston Univ, Sch Engn & Appl Sci, Birmingham B4 7ET, W Midlands, England.
   [Barmpis, Konstantinos; Kolovos, Dimitrios S.; Wei, Ran; Paige, Richard F.] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 Aston University; University of York - UK
RP Garcia-Dominguez, A (corresponding author), Aston Univ, Sch Engn & Appl Sci, Birmingham B4 7ET, W Midlands, England.
EM a.garcia-dominguez@aston.ac.uk; konstantinos.barmpis@york.ac.uk;
   dimitris.kolovos@york.ac.uk; ran.wei@york.ac.uk;
   richard.paige@york.ac.uk
RI Wei, Ran/X-8750-2019; Kolovos, Dimitrios/L-9830-2014; Garcia Dominguez,
   Antonio/IAN-2064-2023
OI Wei, Ran/0000-0003-2191-1359; Garcia Dominguez,
   Antonio/0000-0002-4744-9150; Barmpis, Konstantinos/0000-0002-0864-0956;
   Kolovos, Dimitris/0000-0002-1724-6563
FU EPSRC, through the Large-Scale Complex IT Systems project
   [EP/F001096/1]; EU through the MONDO FP7 STREP project [611125]
FX This research was part supported by the EPSRC, through the Large-Scale
   Complex IT Systems project (EP/F001096/1), and by the EU through the
   MONDO FP7 STREP project (#611125). We would also like to thank Gwendal
   Daniel for his support on the use of Mogwai and NeoEMF. The research
   data supporting this publication are available on
   http://dx.doi.org/10.17036/44783FFA-DA36-424D-9B78-5C3BBAE4AAA1.
CR Bagnato A., 2014, P 3 WORKSH EXTR MOD, P42
   Barmpis K., 2015, P 11 EUR C MOD FDN A, DOI [10.1007/978-3-319-09195-2_3, DOI 10.1007/978-3-319-09195-2_3]
   Barmpis K, 2014, J OBJECT TECHNOL, V13, DOI 10.5381/jot.2014.13.3.a3
   Barmpis K, 2014, LECT NOTES COMPUT SC, V8569, P35
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bonett DG, 2006, BIOMETRICAL J, V48, P144, DOI 10.1002/bimj.200410148
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Chen TS, 2015, IEEE T COMPUT, V64, P1442, DOI 10.1109/TC.2014.2315614
   Cohen J., 1988, STAT POWER ANAL BEHA
   Daniel Gwendal, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549343
   De Carlos X, 2015, COMM COM INF SC, V580, P97, DOI 10.1007/978-3-319-27869-8_6
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Pagán JE, 2015, SOFTW SYST MODEL, V14, P219, DOI 10.1007/s10270-013-0326-8
   Garcia-Dominguez A, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P340, DOI 10.1145/2976767.2976809
   Garcia-Dominguez A, 2016, LECT NOTES COMPUT SC, V9764, P48, DOI 10.1007/978-3-319-42061-5_4
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Gómez A, 2015, LECT NOTES COMPUT SC, V9033, P19, DOI 10.1007/978-3-662-46675-9_2
   GraBaTs, 2009, 5 INT WORKSH GRAPH B
   Hess M., 2004, Annual Meeting of the American Educational Research Association, P1
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos D.S., 2016, EPSILON BOOK CHAP EP, P153
   Kolovos D.S., 2008, CHAMDE 2008 WORKSH P, P10
   Kramler Gerhard., 2006, Proceedings of the 2006 international workshop on Global integrated model management, pp, P43
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Rath I., 2016, PROTOTYPE TOOL COLLA
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Scheidgen M., 2013, P WORKSH SCAL MOD DR, DOI [10.1145/2487766.2487769, DOI 10.1145/2487766.2487769]
   Sottet J. S., 2009, P 5 INT WORKSH GRAPH
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Wei R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P329, DOI 10.1145/2976767.2976787
NR 33
TC 7
Z9 7
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1047
EP 1075
DI 10.1007/s10270-017-0606-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400014
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Jost, G
   Hericko, M
   Polancic, G
AF Jost, Gregor
   Hericko, Marjan
   Polancic, Gregor
TI Theoretical foundations and implementation of business process diagrams'
   complexity management technique based on highlights
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Business process diagram; Complexity; Highlights; Opacity; BPMN
ID BPMN; SYNTAX
AB The main purpose of business process diagrams is to make the communication between process-related stakeholders more effective. To this end, they need to be simple to read, which is often challenging to achieve. In this manner, the complexity of business process diagrams can negatively affect their correctness and understandability. The goal of this paper was to investigate an approach that makes business process diagrams appear less complex, without changing the corresponding notation. This was done by manipulating one of the properties of the notation's elements, namely opacity. Firstly, a literature overview was performed in order to obtain the theoretical foundations. Secondly, an exploratory case study was conducted and the results were applied in practice. Finally, the proposed solution was implemented in the form of a prototype software solution. Our analysis demonstrated that the structural complexity of the diagrams decreases when applying the proposed solution.
C1 [Jost, Gregor; Hericko, Marjan; Polancic, Gregor] Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova 17, SLO-2000 Maribor, Slovenia.
C3 University of Maribor
RP Jost, G (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova 17, SLO-2000 Maribor, Slovenia.
EM gregor.jost@um.si; marjan.hericko@um.si; gregor.polancic@um.si
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2006, 9th International Conference on Business Information Systems
   Cardoso J., 2005, WORKFLOW HDB 2005, P199
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Decker G, 2007, LECT NOTES COMPUT SC, V4803, P24
   Edmonds B., 2000, Foundations of Science, V5, P379, DOI [10.1023/A:1011383422394, DOI 10.1023/A:1011383422394]
   Erol S., 2015, COLORING SUPPORT PRO
   Fernández HF, 2010, COMPUT STAND INTER, V32, P18, DOI 10.1016/j.csi.2009.04.006
   Gagne Denis, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P361, DOI 10.1109/CEC.2009.71
   GLASSNER A., 2015, JCGT, V4, P30
   Harmon P., 2011, Business process trends, V36, P1
   Khlif Wiem, 2010, WSEAS Transactions on Computers, V9, P31
   Kocbek M, 2015, COMPUT SCI INF SYST, V12, P509, DOI 10.2298/CSIS140610006K
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   Latva-Koivisto A.M., 2001, Finding a complexity measure for business process models
   León K, 2006, FOOD RES INT, V39, P1084, DOI 10.1016/j.foodres.2006.03.006
   Lerner BS, 2010, IEEE T SOFTWARE ENG, V36, P162, DOI 10.1109/TSE.2010.1
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   Moody D, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P481, DOI 10.1007/978-0-387-70802-7_40
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody Daniel L., 2002, ECIS 2002 GDANSK POL, P482
   Muller R., 2011, Proceedings of the 3rd Central-European Workshop on Services and their Composition, ZEUS 2011, P65
   Park S, 2012, CLIN LAB MED, V32, P557, DOI 10.1016/j.cll.2012.07.006
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Petrusel R, 2017, DECIS SUPPORT SYST, V96, P1, DOI 10.1016/j.dss.2017.01.005
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   Reynoso L, 2009, LECT NOTES COMPUT SC, V5891, P285, DOI 10.1007/978-3-642-05415-0_21
   Rolon Elvira, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P383, DOI 10.1109/CEC.2009.53
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P377, DOI 10.1108/14637150610668024
   Terry M, 2005, KNOWL-BASED SYST, V18, P415, DOI 10.1016/j.knosys.2005.07.004
   Tran H, 2008, COMM COM INF SC, V8, P55
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 33
TC 3
Z9 3
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1079
EP 1095
DI 10.1007/s10270-017-0618-5
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400016
DA 2024-07-18
ER

PT J
AU Al-Hajjaji, M
   Thum, T
   Lochau, M
   Meinicke, J
   Saake, G
AF Al-Hajjaji, Mustafa
   Thuem, Thomas
   Lochau, Malte
   Meinicke, Jens
   Saake, Gunter
TI Effective product-line testing using similarity-based product
   prioritization
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product lines; Product-line testing; Model-based testing;
   Combinatorial interaction testing; Test-case prioritization
ID SOFTWARE; SELECTION
AB A software product line comprises a family of software products that share a common set of features. Testing an entire product-line product-by-product is infeasible due to the potentially exponential number of products in the number of features. Accordingly, several sampling approaches have been proposed to select a presumably minimal, yet sufficient number of products to be tested. Since the time budget for testing is limited or even a priori unknown, the order in which products are tested is crucial for effective product-line testing. Prioritizing products is required to increase the probability of detecting faults faster. In this article, we propose similarity-based prioritization, which can be efficiently applied on product samples. In our approach, we incrementally select the most diverse product in terms of features to be tested next in order to increase feature interaction coverage as fast as possible during product-by-product testing. We evaluate the gain in the effectiveness of similarity-based prioritization on three product lines with real faults. Furthermore, we compare similarity-based prioritization to random orders, an interaction-based approach, and the default orders produced by existing sampling algorithms considering feature models of various sizes. The results show that our approach potentially increases effectiveness in terms of fault detection ratio concerning faults within real-world product-line implementations as well as synthetically seeded faults. Moreover, we show that the default orders of recent sampling algorithms already show promising results, which, however, can still be improved in many cases using similarity-based prioritization.
C1 [Al-Hajjaji, Mustafa] Univ Magdeburg, Databases & Software Engn Grp Prof Gunter Saake, Magdeburg, Germany.
   [Saake, Gunter] Univ Magdeburg, Databases & Software Engn Grp, Magdeburg, Germany.
   [Thuem, Thomas] TU Braunschweig, Braunschweig, Germany.
   [Lochau, Malte] Tech Univ Darmstadt, Real Time Syst Lab Prof Andy Schurr, Darmstadt, Germany.
   [Meinicke, Jens] Univ Magdeburg, METOP GmbH, Magdeburg, Germany.
C3 Otto von Guericke University; Otto von Guericke University; Braunschweig
   University of Technology; Technical University of Darmstadt; Otto von
   Guericke University
RP Al-Hajjaji, M (corresponding author), Univ Magdeburg, Databases & Software Engn Grp Prof Gunter Saake, Magdeburg, Germany.
EM mustafa.al-hajjaji@st.ovgu.de; t.thuem@tu-braunschweig.de;
   Malte.Lochau@es.tu-darmstadt.de; meinicke@ovgu.de;
   saake@iti.cs.uni-magdeburg.de
FU German Research Foundation (DFG) [SPP 1593, LO 2198/2-1]
FX We are grateful to anonymous reviewers for their useful comments. We
   also thank Martin Fagereng Johansen for his support in integrating the
   SPLCATool into FeatureIDE. We are grateful to Remo Lachmann, Reimar
   Schroter, Fabian Benduhn, and Hauke Baller for helpful comments on a
   draft and for interesting discussions. This work has been supported by
   the German Research Foundation (DFG) in the Priority Programme SPP 1593:
   Design For Future Managed Software Evolution (LO 2198/2-1).
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Al-Hajjaji M, 2017, ACM SIGPLAN NOTICES, V52, P144, DOI [10.1145/2993236.2993253, 10.1145/3093335.2993253]
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   [Anonymous], 2012, P WORKSH MOD SYST SO
   [Anonymous], P INT WORKSH VAR MOD
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], FOSD
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], P SOFTW ENG SE GES I
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Baller H, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P303, DOI 10.1109/ICST.2014.43
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Bürdek J, 2015, LECT NOTES COMPUT SC, V9033, P84, DOI 10.1007/978-3-662-46675-9_6
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P291, DOI 10.1109/ITNG.2011.58
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Hall R. J., 2005, Automated Software Engineering, V12, P41, DOI 10.1023/B:AUSE.0000049208.84702.84
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang Kyo C, 1990, Technical Report
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lachmann R., 2015, P 19 INT C SOFTW PRO, P81
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   McGregor JD, 2010, LECT NOTES COMPUT SC, V6153, P104
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Northrop L.M., 2007, FRAMEWORK SOFTWARE P
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sanchez A. B., 2015, SOFTW SYST MODEL, P1
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Shi JF, 2012, LECT NOTES COMPUT SC, V7212, P270, DOI 10.1007/978-3-642-28872-2_19
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Utting M., 2007, PRACTICAL MODEL BASE
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Weiss David M., 2008, 2008 12th International Software Product Line Conference (SPLC), DOI 10.1109/SPLC.2008.56
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 64
TC 30
Z9 30
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 499
EP 521
DI 10.1007/s10270-016-0569-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300021
DA 2024-07-18
ER

PT J
AU Jukss, M
   Verbrugge, C
   Elaasar, M
   Vangheluwe, H
AF Jukss, Maris
   Verbrugge, Clark
   Elaasar, Maged
   Vangheluwe, Hans
TI Scope in model transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Scope; Graph scoping; Graph grammar; Rule-based model transformations;
   Search plans; Efficient pattern matching
ID GRAPH; FIRE
AB A notion of hierarchical scope is commonplace in many programmatic systems. In the context of model, and in particular graph transformation, the use of scope can present two advantages: first, more natural expression of transformation application locality, and second, reduction in the number of match candidates, promising performance improvements. Previous work on scope, however, has focused on applying it to rule hierarchies, which reduces the number of matches performed, but not necessarily the cost of finding a single match. In this paper we define and explore a hierarchical scope formalism applied to the input graph, with associated modifications to the transformation rule definition. We then experimentally evaluate the benefits and challenges of our scoped model transformations in the state-of-theart graph rewriting tool GrGen and our research-oriented, meta-modeling and rule-based model transformation tool AToMPM. We use a non-trivial "fire spreading" simulation transformation taken from distributed simulation community and a mutual exclusion transformation benchmark to demonstrate that integration of scope results in an elegant, intuitive, and efficient way of solving model transformation problems.
C1 [Jukss, Maris; Verbrugge, Clark; Vangheluwe, Hans] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
   [Elaasar, Maged] Modelware Solut, La Canada Flintridge, CA USA.
   [Elaasar, Maged] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON, Canada.
   [Vangheluwe, Hans] Univ Antwerp, Dept Math & Comp Sci, Antwerp, Belgium.
C3 McGill University; Carleton University; University of Antwerp
RP Jukss, M (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM mjukss@cs.mcgill.ca; clump@cs.mcgill.ca; melaasar@gmail.com;
   hv@cs.mcgill.ca
RI Vangheluwe, Hans/H-9884-2016
OI Vangheluwe, Hans/0000-0003-2079-6643
CR [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], P 13 INT WORKSH GRAP
   [Anonymous], THESIS
   [Anonymous], PYTHON TKINTER PROGR
   [Anonymous], BENCHMARKING GRAPH T
   [Anonymous], ACT C MOD SIM PROC B
   [Anonymous], RMRSRP4 USDA FOR SER
   [Anonymous], SPRINGSIM
   [Anonymous], OPTIMIZATION TECHNIQ
   [Anonymous], 2 0 QUER VIEW TRANSF
   [Anonymous], ECEASST
   [Anonymous], THESIS
   [Anonymous], FUNDAM INF
   [Anonymous], 1999, XML path language (XPath) Version 1.0
   [Anonymous], ELECT NOTES TCS
   [Anonymous], IGRAPH REFERENCE MAN
   [Anonymous], ECEASST
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Bergmann G, 2009, LECT NOTES COMPUT SC, V5563, P20, DOI 10.1007/978-3-642-02408-5_3
   Berner S, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P225, DOI 10.1109/ASE.1998.732655
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   BOEHM P, 1987, J COMPUT SYST SCI, V34, P377, DOI 10.1016/0022-0000(87)90030-4
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Cordy J. R., 1988, Proceedings 1988 International Conference on Computer Languages (IEEE Cat. No.88CH2647-6), P280, DOI 10.1109/ICCL.1988.13075
   de Lara Juan., 2006, FUNDAMENTALS ALGEBRA, P259
   de Lara Juan., 2002, 4 INT C ENTERPRISE I, P642
   EDMONDS J, 1967, J RES NBS B MATH SCI, VB 71, P233, DOI 10.6028/jres.071B.032
   Giese H, 2014, SOFTW SYST MODEL, V13, P273, DOI 10.1007/s10270-012-0247-y
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Heckel R, 1998, LECT NOTES COMPUT SC, V1382, P138, DOI 10.1007/BFb0053588
   Jukss M, 2014, LECT NOTES COMPUT SC, V8706, P302, DOI 10.1007/978-3-319-11245-9_17
   KOURTZ PH, 1971, FOREST SCI, V17, P163
   LOWE M, 1993, THEOR COMPUT SCI, V109, P181, DOI 10.1016/0304-3975(93)90068-5
   MENDELZON AO, 1995, SIAM J COMPUT, V24, P1235, DOI 10.1137/S009753979122370X
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Muzy A, 2008, ECOL MODEL, V219, P212, DOI 10.1016/j.ecolmodel.2008.08.017
   Cardona PAN, 2015, CUAD ACT, P154
   Palacz W, 2004, J COMPUT SYST SCI, V68, P497, DOI 10.1016/S0022-0000(03)00064-3
   Sarkar MedhaShukla., 1998, GXL GRAPH TRANSFORMA
   Schurr A., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P219
   Taentzer G., 1994, Graph Transformations in Computer Science. International Workshop Proceedings, P380
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varro Gergely, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P125, DOI 10.1007/978-3-642-38883-5_13
   Varró G, 2015, SOFTW SYST MODEL, V14, P597, DOI 10.1007/s10270-013-0372-2
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
NR 47
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1227
EP 1252
DI 10.1007/s10270-016-0555-8
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Maoz, S
   Ringert, JO
AF Maoz, Shahar
   Ringert, Jan Oliver
TI A framework for relating syntactic and semantic model differences
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Model differencing; Semantics; Model evolution
ID CONFLICTING CHANGE OPERATIONS; IMPACT ANALYSIS; DIAGRAMS; TOOL
AB Model differencing is an important activity in model-based development processes. Differences need to be detected, analyzed, and understood to evolve systems and explore alternatives. Two distinct approaches have been studied in the literature: syntactic differencing, which compares the concrete or abstract syntax of models, and semantic differencing, which compares models in terms of their meaning. Syntactic differencing identifies change operations that transform the syntactical representation of one model to the syntactical representation of the other. However, it does not explain their impact on the meaning of the model. Semantic model differencing is independent of syntactic changes and presents differences as elements in the semantics of one model but not the other. However, it does not reveal the syntactic changes causing these semantic differences. We define Diffuse, a language-independent, abstract framework, which relates syntactic change operations and semantic difference witnesses. We formalize fundamental relations of necessary, exhibiting, and sufficient sets of change operations and analyze their properties. We further demonstrate concrete instances of the Diffuse framework for three different popular modeling languages, namely class diagrams, activity diagrams, and feature models. The Diffuse framework provides a novel foundation for combining syntactic and semantic differencing.
C1 [Maoz, Shahar; Ringert, Jan Oliver] Tel Aviv Univ, Sch Comp Sci, Tel Aviv, Israel.
C3 Tel Aviv University
RP Maoz, S; Ringert, JO (corresponding author), Tel Aviv Univ, Sch Comp Sci, Tel Aviv, Israel.
EM maoz@cs.tau.ac.il; ringert@se-rwth.de
OI Ringert, Jan Oliver/0000-0002-3610-3920; Maoz,
   Shahar/0000-0002-4022-5349
FU postdoctoral Minerva Fellowship - German Federal Ministry for Education
   and Research
FX We thank the anonymous reviewers of the MoDELS' 15 conference paper and
   its present journal version for their helpful comments. Part of this
   work was done while SM was on sabbatical as visiting scientist at MIT
   CSAIL. JOR acknowledges support from a postdoctoral Minerva Fellowship,
   funded by the German Federal Ministry for Education and Research.
CR Acher Mathieu, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P629, DOI 10.1007/978-3-642-31095-9_41
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2011, AIB201107 RWTH AACH
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Barrett SC, 2011, LECT NOTES COMPUT SC, V6698, P329, DOI 10.1007/978-3-642-21470-7_23
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Fahrenberg U, 2014, LECT NOTES COMPUT SC, V8411, P63
   Fahrenberg U, 2011, LECT NOTES COMPUT SC, V6981, P490, DOI 10.1007/978-3-642-24485-8_36
   Fisler K, 2005, PROC INT CONF SOFTW, P196
   Gerth C, 2013, SOFTW SYST MODEL, V12, P517, DOI 10.1007/s10270-011-0226-8
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Küster JM, 2009, LECT NOTES COMPUT SC, V5562, P158, DOI 10.1007/978-3-642-02674-4_12
   Langer P, 2014, LECT NOTES COMPUT SC, V8767, P116, DOI 10.1007/978-3-319-11653-2_8
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S., 2011, MOD EV WORKSH MODELS
   Maoz S., 2011, LECT NOTES COMPUTER, V6627, P17
   Maoz S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P95, DOI 10.1145/2568225.2568237
   Maoz S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P24, DOI 10.1109/MODELS.2015.7338232
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P230, DOI 10.1007/978-3-642-22655-7_12
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Rindt M., 2012, TECH REP
   Storrle Harald, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P39
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
NR 35
TC 9
Z9 9
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 753
EP 777
DI 10.1007/s10270-016-0552-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000004
DA 2024-07-18
ER

PT J
AU Yan, ZQ
   Dijkman, R
   Grefen, P
AF Yan, Zhiqiang
   Dijkman, Remco
   Grefen, Paul
TI Generating process model collections
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Synthetic process models; Process model generation; Process model
   similarity
AB Business process management plays an important role in the management of organizations. More and more organizations describe their operations as business processes. It is common for organizations to have collections of thousands of business processes, but for reasons of confidentiality these collections are often not, or only partially, available to researchers. On the other hand, research on techniques for managing process model collections, such as techniques for process retrieval, requires large collections for evaluation purposes. Therefore, this paper proposes a technique to generate such collections of process models, based on the properties of real-world collections. Where existing techniques focus on the structure of the process models, the technique proposed in this paper also generates task labels that consists of words from real-life task labels and considers semantic information of node and edge types. We evaluate our technique by applying it to generate two synthetic collections of process models of over 60,000 and over 2,000 models, respectively. We show that the generated synthetic collections have similar properties to the original collections. To the best of our knowledge, this is the first technique that can generate synthetic BPMN models, thus enabling experimentation with process collections that have laboratory-set quantitative parameters and qualitative properties that are based on real-world process model collections.
C1 [Yan, Zhiqiang] Capital Univ Econ & Business, Beijing 100070, Peoples R China.
   [Yan, Zhiqiang] Tsinghua Univ, Beijing 100080, Peoples R China.
   [Dijkman, Remco; Grefen, Paul] Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
C3 Capital University of Economics & Business; Tsinghua University;
   Eindhoven University of Technology
RP Yan, ZQ (corresponding author), Capital Univ Econ & Business, Beijing 100070, Peoples R China.; Yan, ZQ (corresponding author), Tsinghua Univ, Beijing 100080, Peoples R China.
EM zhiqiang.yan.1983@gmail.com; r.m.dijkman@tue.nl; p.w.p.j.grefen@tue.nl
RI Grefen, Paul W.P.J./C-2174-2014; Dijkman, Remco/P-4281-2019
OI Dijkman, Remco/0000-0003-4083-0036
FU National Science Fund for Young Scholars of China [61402301]; National
   Science Fund of China [61472207]; MOE-CMCC [MCM20123011]; Capital
   University of Economics and Business [00791462722336, 00791465730165];
   special fund for innovation of Shandong, China [2013CXC30001]
FX The research leading to the paper is supported by the National Science
   Fund for Young Scholars of China (Project No. 61402301), the National
   Science Fund of China (Project No. 61472207), the MOE-CMCC research fund
   (Project No. MCM20123011), the research fund of Capital University of
   Economics and Business (Project Nos. 00791462722336 and 00791465730165),
   and the special fund for innovation of Shandong, China (Project No.
   2013CXC30001).
CR Akoglu L, 2009, DATA MIN KNOWL DISC, V19, P194, DOI 10.1007/s10618-009-0140-7
   [Anonymous], 2006, GTgraph: A Synthetic Graph Generator Suite
   Bartlett M, 1935, MATH P CAMBR PHIL SO
   Chakrabarti D, 2006, ACM COMPUT SURV, V38, pA1, DOI 10.1145/1132952.1132954
   Conforti R, 2014, LECT NOTES COMPUT SC, V8659, P101, DOI 10.1007/978-3-319-10172-9_7
   Curran T.A., 1999, SAP R 3 BUS BLUEPR B
   Dijkman R, 2011, INFORM SOFTWARE TECH, V53, P937, DOI 10.1016/j.infsof.2011.04.001
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Gao X., 2013, BPM WORKSH BEIJ CHIN
   Jin T, 2010, LECT NOTES COMPUT SC, V6426, P402
   Kim J, 2015, SOFTW SYST MODEL, V14, P839, DOI 10.1007/s10270-013-0342-8
   Kunze Matthias, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P166, DOI 10.1007/978-3-642-23059-2_15
   Kunze M., 2011, SERVICES IHRE KOMPOS
   Kuramochi M., 2001, ICDM
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Lano K, 2014, SOFTW SYST MODEL, V13, P873, DOI 10.1007/s10270-012-0291-7
   Li J., 2013, 1 AS PAC C BUS PROC
   Liu K., 2014, 2 AS PAC C BUS PROC
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mendling J, 2010, INT J INF SYST MODEL, V1, P40, DOI 10.4018/jismd.2010040103
   ter Hofstede AHM, 2013, LECT NOTES BUS INF P, V159, P23
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Hee Kees, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P298, DOI 10.1007/978-3-642-23059-2_23
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Weidlich M., 2010, P 22 CAISE HAMM TUN
   Weidlich M., 2013, MATCHING BUSINESS PR
   Weidlich M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P33, DOI 10.1109/SCC.2009.58
   Yan Z., 2014, 2 AS PAC C BUS PROC
   Yan Z., 2014, LNCS, V8841
   Yan Z., 2012, P 10 BPM
   Yan ZQ, 2012, DISTRIB PARALLEL DAT, V30, P105, DOI 10.1007/s10619-012-7089-z
   Yan ZQ, 2012, INFORM SOFTWARE TECH, V54, P380, DOI 10.1016/j.infsof.2011.11.005
NR 32
TC 7
Z9 9
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 979
EP 995
DI 10.1007/s10270-015-0497-6
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800004
OA Green Published
DA 2024-07-18
ER

PT J
AU Bider, I
   Perjons, E
   Elias, M
   Johannesson, P
AF Bider, Ilia
   Perjons, Erik
   Elias, Mturi
   Johannesson, Paul
TI A fractal enterprise model and its application for business development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process; Enterprise modeling; Fractal enterprise; Asset
ID DESIGN SCIENCE RESEARCH; SYSTEMS
AB This paper suggests a new type of enterprise models called fractal enterprise models (FEM), with accompanying methodological support for their design. FEM shows interconnections between the business processes in an enterprise by connecting them to the assets they use and manage. Assets considered in the model could be tangible (buildings, heavy machinery, etc.) and intangible (employees, business process definitions, etc.). A FEM model is built by using two types of patterns called archetypes: a process-assets archetype that connects a process with assets used in it, and an asset-processes archetype that connects an asset with processes aimed to manage this asset (e.g., hiring people, or servicing machinery). Alternating these patterns creates a fractal structure that makes relationships between various parts of the enterprise explicit. FEM can be used for different purposes, including finding a majority of the processes in an enterprise and planning business change or radical transformation. Besides discussing FEM and areas of its usage, the paper presents results from a completed project in order to test the practical usefulness of FEM and its related methodological support.
C1 [Bider, Ilia; Perjons, Erik; Elias, Mturi; Johannesson, Paul] Stockholm Univ, DSV, Forum 100, S-16440 Kista, Sweden.
C3 Stockholm University
RP Johannesson, P (corresponding author), Stockholm Univ, DSV, Forum 100, S-16440 Kista, Sweden.
EM ilia@dsv.su.se; perjons@dsv.su.se; mturi@dsv.su.se; pajo@dsv.su.se
RI Bider, Ilia/T-8106-2019; Johannesson, Paul/AAB-8636-2020
OI Bider, Ilia/0000-0002-3490-6092; Johannesson, Paul/0000-0002-7416-8725
CR Aitken C, 2010, INT HANDB INFORM SYS, P73, DOI 10.1007/978-3-642-01982-1_4
   Alter S., 2006, The Work System Method; Connecting People, Processes and IT for Business Results
   Anderson J, 2012, COMM COM INF SC, V286, P116
   Andersson T., 2005, Software Process Improvement and Practice, V10, P403, DOI 10.1002/spip.243
   [Anonymous], 1997, J STAT PHYS
   [Anonymous], 1997, SAP R 3 BUSINESS BLU
   Anton A. I., 1994, Advanced Information Systems Engineering. 6th International Conference, CAiSE '94. Proceedings, P94
   AURAMAKI E, 1988, ACM T OFF INF SYST, V6, P126, DOI 10.1145/45941.214328
   Baskerville R., 2009, P 4 INT C DESIGN SCI, P1, DOI DOI 10.1145/1555619.1555631
   Beer S., 1979, The heart of the Enterprise
   Bellinger G, 2010, SYSTEMS THINKING WOR
   Bider I., 2013, ORG SYSTEMS INTERDIS, P35, DOI DOI 10.1007/978-3-642-33371-2_3
   Bider I, 2012, LECT NOTES BUS INF P, V134, P61
   Bider I, 2013, LECT NOTES COMPUT SC, V8186, P155, DOI 10.1007/978-3-642-41033-8_22
   Bider I, 2011, LECT NOTES BUS INF P, V92, P238
   Box G., 1987, Empirical Model-Building and Response Surfaces, DOI DOI 10.1080/00401706.1988.10488371
   Canavesio MM, 2007, COMPUT IND, V58, P794, DOI 10.1016/j.compind.2007.02.005
   Dietz J., 2006, Communications of the ACM, V49, P58, DOI 10.1145/1125944.1125976
   Dijkman R, 2016, ENTERP INF SYST-UK, V10, P129, DOI 10.1080/17517575.2014.928951
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Dunn C., 2004, ENTERPRISE INFORM SY
   Elias M., 2014, LNBIP, V175, P287, DOI DOI 10.1007/978-3-662-43745-2_
   Elliott B., 2004, FINANCIAL ACCOUNTING
   Fettke P, 2006, LECT NOTES COMPUT SC, V3812, P469
   Green S., 2005, Software Process Improvement and Practice, V10, P415, DOI 10.1002/spip.244
   Hammer M, 1999, HARVARD BUS REV, V77, P108
   Henkel M, 2014, LECT NOTES BUS INF P, V178, P88
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoverstadt P., 2013, ALIGNMENT SYSTEMS, V3, P55
   Hoverstadt Patrick., 2008, FRACTAL ORG CREATING
   Hruby P., 2010, MODEL DRIVEN DESIGN
   Jackson M.C., 2003, Systems Thinking: Creative Holism for Managers
   Jintae Lee, 1993, Conference on Organizational Computing Systems, P196
   JOHANNESSON P, 1995, INFORM SYST, V20, P291, DOI 10.1016/0306-4379(95)00015-V
   Josefsson M., 2015, LNBIP, V214, P169, DOI DOI 10.1007/978-3-319-19237-6_
   Koliadis G, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P239, DOI 10.1109/SERVICES-1.2008.60
   Korycki T., 2015, RECURSIVE PROCESS AS
   Koubarakis M, 2002, INFORM SYST, V27, P299, DOI 10.1016/S0306-4379(01)00055-2
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Lawson H.W, 2010, JOURNEY THROUGH SYST
   Lind M, 2003, DATA KNOWL ENG, V47, P327, DOI 10.1016/S0169-023X(03)00063-6
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   Nurcan S., 2003, J INF SOFTW TECHNOL, V45, P2
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Osterwalder A., 2004, The business model ontology a proposition in a design science approach
   Panagiotakopoulos P, 2010, VIABLE SYSTEM MODEL
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Porter M. E., 2008, Competitive Advantage: Creating and Sustaining Superior Performance
   Ramanathan J, 2005, COMMUN ACM, V48, P51, DOI 10.1145/1060710.1060739
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Rolland C., 1999, P 4 CAISE IFIP 8 1 I
   Ross Ashby W., 1957, An Introduction to Cybernetics
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Sandkuhl K, 2011, LECT NOTES BUS INF P, V92, P193
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Scheer AW, 2000, LECT NOTES COMPUT SC, V1806, P376
   Sein MK, 2011, MIS QUART, V35, P37
   Spohrer J, 2007, COMPUTER, V40, P71, DOI 10.1109/MC.2007.33
   Swenson K.D., 2010, Mastering the Unpredictable: How Adaptive Case Management Will Revolutionize the Way That Knowledge Workers Get Things Done
NR 60
TC 21
Z9 21
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 663
EP 689
DI 10.1007/s10270-016-0554-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FD2MA
UT WOS:000407367800005
OA hybrid
DA 2024-07-18
ER

PT J
AU Vanwormhoudt, G
   Caron, O
   Carré, B
AF Vanwormhoudt, Gilles
   Caron, Olivier
   Carre, Bernard
TI Aspectual templates in UML Enhancing the semantics of UML templates in
   OCL
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model templates; UML; OCL; Metamodeling; Aspects; Patterns; Template
   composition
ID ASPECT-ORIENTED DESIGN; PATTERNS; MODELS
AB UML Templates allow to capture reusable models through parameterization. The construct is general enough to be used in many ways, ranging from the representation of generic components (such as Java generics or C++ templates) to aspectual usage, including pattern-, aspect- and view-oriented modeling. We concentrate on this last usage and so-called aspectual templates which require that parameters must form a model of systems in which to inject new functionalities. Starting from this strict constraint, we derive an in-depth semantic enhancement of the standard. It is formalized as a fully UML-compliant interpretation in OCL of the template construct and its binding mechanism. In particular, this aspectual interpretation must be ensured in case of partial binding (not all parameters are valued). Partial binding of UML is a powerful technique which allows to obtain richer templates from the composition of other ones. As a major result, the present semantic enhancement is consistent with this capacity so that partial binding of aspectual templates produces aspectual templates. Finally, at an operational level, an algorithm for aspectual template (partial) binding operation is formulated and consequent reusable technology made available in EMF (Eclipse Modeling Framework) is presented.
C1 [Vanwormhoudt, Gilles; Caron, Olivier; Carre, Bernard] Univ Lille, CNRS, CRIStAL, UMR 9189, F-59655 Villeneuve Dascq, France.
   [Vanwormhoudt, Gilles] Inst Mines Telecom, Paris, France.
C3 Universite de Lille; Centrale Lille; Centre National de la Recherche
   Scientifique (CNRS); IMT - Institut Mines-Telecom
RP Vanwormhoudt, G (corresponding author), Univ Lille, CNRS, CRIStAL, UMR 9189, F-59655 Villeneuve Dascq, France.; Vanwormhoudt, G (corresponding author), Inst Mines Telecom, Paris, France.
EM vanwormhoudt@telecom-lille.fr; Olivier.Caron@univ-lille1.fr;
   Bernard.Carre@univ-lille1.fr
OI Carre, Bernard/0000-0002-7299-9461; Caron, Olivier/0000-0002-7007-2769
CR Abed W.A., 2012, LNCS, V7745
   [Anonymous], 2011, AUX CONSTR TEMPL
   Bergmayr A., 2014, P CLOUDMDE WORKSH MO
   Bigot J, 2009, LECT NOTES COMPUT SC, V5791, P21
   Bruce KB, 2003, ACM T PROGR LANG SYS, V25, P225, DOI 10.1145/641888.641891
   Caron O, 2004, LECT NOTES COMPUT SC, V3273, P27
   Caron O., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P135
   Caron O., 2007, REV LOBJET HERMES LA, V13, P11
   Caron O, 2009, LECT NOTES BUS INF, V33, P215
   Carré B, 2015, SOFTW SYST MODEL, V14, P861, DOI 10.1007/s10270-013-0340-x
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   Clarke S., 2004, ASPECT ORIENTED SOFT, P425
   Cuccuru A., 2007, LNCS, V4530
   Cuccuru A., 2009, LNCS, V5795
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   de Lara J., 2010, LNCS, V6394
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Ernst E., 2001, LNCS, V2072, P303
   Garrigos I., 2013, LNCS, V8295
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Klein Jacques., 2006, AOSD, P27
   Kühne T, 2013, SOFTW SYST MODEL, V12, P475, DOI 10.1007/s10270-012-0241-4
   Lahire P, 2007, LECT NOTES COMPUT SC, V4735, P498
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P797, DOI 10.1007/978-3-540-87875-9_55
   Muller A, 2005, LECT NOTES COMPUT SC, V3748, P130
   Muller A., 2004, ASP OR MOD WORKSH AO
   MULLER PA, 2005, LNCS, V3713
   Perrouin G, 2012, SOFTW SYST MODEL, V11, P361, DOI 10.1007/s10270-010-0186-4
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Straw G, 2004, LECT NOTES COMPUT SC, V3273, P84
   Sunyé G, 2000, LECT NOTES COMPUT SC, V1850, P44
   Thiello S., 2010, THESIS
   Tombelle Ch., 2006, LNCS, V4199
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Wills A., 1997, P INT C OBJ OR INF S, P413
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
NR 45
TC 8
Z9 9
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 469
EP 497
DI 10.1007/s10270-015-0463-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, S
   Ali, S
   Gotlieb, A
   Liaaen, M
AF Wang, Shuai
   Ali, Shaukat
   Gotlieb, Arnaud
   Liaaen, Marius
TI Automated product line test case selection: industrial case study and
   controlled experiment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Test case selection; Product line; Feature model; Component family model
ID REGRESSION; MINIMIZATION; SUPPORT
AB Automated test case selection for a new product in a product line is challenging due to several reasons. First, the variability within the product line needs to be captured in a systematic way; second, the reusable test cases from the repository are required to be identified for testing a new product. The objective of such automated process is to reduce the overall effort for selection (e.g., selection time), while achieving an acceptable level of the coverage of testing functionalities. In this paper, we propose a systematic and automated methodology using a feature model for testing (FM_T) to capture commonalities and variabilities of a product line and a component family model for testing (CFM_T) to capture the overall structure of test cases in the repository. With our methodology, a test engineer does not need to manually go through the repository to select a relevant set of test cases for a new product. Instead, a test engineer only needs to select a set of relevant features using FM_T at a higher level of abstraction for a product and a set of relevant test cases will be selected automatically. We evaluated our methodology via three different ways: (1) We applied our methodology to a product line of video conferencing systems called Saturn developed by Cisco, and the results show that our methodology can reduce the selection effort significantly; (2) we conducted a questionnaire-based study to solicit the views of test engineers who were involved in developing FM_T and CFM_T. The results show that test engineers are positive about adapting our methodology and models (FM_T and CFM_T) in their current practice; (3) we conducted a controlled experiment with 20 graduate students to assess the performance (i.e., cost, effectiveness and efficiency) of our automated methodology as compared to the manual approach. The results showed that our methodology is cost-effective as compared to the manual approach, and at the same time, its efficiency is not affected by the increased complexity of products.
C1 [Wang, Shuai; Ali, Shaukat; Gotlieb, Arnaud] Certus Software V&V Ctr, Simula Res Lab, Lysaker, Norway.
   [Wang, Shuai] Univ Oslo, Dept Informat, PO 134, N-1325 Oslo, Norway.
   [Liaaen, Marius] Cisco Syst Inc, Oslo, Norway.
C3 University of Oslo
RP Wang, S (corresponding author), Certus Software V&V Ctr, Simula Res Lab, Lysaker, Norway.; Wang, S (corresponding author), Univ Oslo, Dept Informat, PO 134, N-1325 Oslo, Norway.
EM shuai@simula.no; shaukat@simula.no; arnaud@simula.no; marliaae@cisco.com
CR Ali Shaukat, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P726, DOI 10.1007/978-3-642-33666-9_46
   [Anonymous], 2012, P VAR YOU WORKSH VAR, DOI DOI 10.1145/2425415.2425422
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   Bible J, 2001, ACM T SOFTW ENG METH, V10, P149, DOI 10.1145/367008.367015
   Chen Y., 2002, P C CTR ADV STUD COL
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   Cisco Systems, 2010, CISC TEL COD C90 DAT
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P512, DOI 10.1109/ICST.2010.45
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   HARTMANN J, 1990, IEEE SOFTWARE, V7, P31, DOI 10.1109/52.43047
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Iqbal M.Z., SOFTWARE SY IN PRESS
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Mansour N, 2001, J SYST SOFTWARE, V57, P79, DOI 10.1016/S0164-1212(00)00119-9
   McGregor J, 2001, CMUSEI2001TR022 CARN
   Muccini H., 2003, ELECT NOTES THEOR CO, V82, P99
   Nebut C., 2006, SOFTWARE PRODUCT LIN
   Olimpiew E.M., 2008, P 12 INT C SOFTW PRO, P173
   Olimpiew EM, 2009, LECT NOTES COMPUT SC, V5791, P76
   Olimpiew ErikaMir., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083279
   Orso A, 2001, PROC IEEE INT CONF S, P716, DOI 10.1109/ICSM.2001.972790
   Pure systems GmbH, 2011, PUR SYST GMBH PUR VA
   Pure-Systems GmbH, 2006, QOS EN IP NETW ASS M
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Thomas L, 1997, CONSERV BIOL, V11, P276, DOI 10.1046/j.1523-1739.1997.96102.x
   Uzuncaova Engin, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P249, DOI 10.1109/ISSRE.2008.56
   Wang S., 2014, EMPIRICAL S IN PRESS
   Wang S., 2013, TECHNICAL REPORT, P2012
   Wang S., 2014, J SYSTEMS S IN PRESS
   Wang S, 2013, INT CONF QUAL SOFTW, P75, DOI 10.1109/QSIC.2013.51
   Wang S, 2013, LECT NOTES COMPUT SC, V8107, P237, DOI 10.1007/978-3-642-41533-3_15
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 44
TC 9
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 417
EP 441
DI 10.1007/s10270-015-0462-4
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400007
DA 2024-07-18
ER

PT J
AU Stathakidis, E
   Williams, DM
   Heather, J
AF Stathakidis, Efstathios
   Williams, David M.
   Heather, James
TI Constructing and verifying a robust Mix Net using CSP
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Mix Nets; Formal methods; Model checking; CSP; FDR
ID AUTHENTICATION; ENCRYPTION
AB A Mix Net is a cryptographic protocol that unlinks the correspondence between its inputs and its outputs. In this paper, we formally analyse a Mix Net using the process algebra CSP and its associated model checker FDR. The protocol that we verify removes the reliance on a Web Bulletin Board: rather than communicating via a Web Bulletin Board, the protocol allows the mix servers to communicate directly, exchanging signed messages and maintaining their own records of the messages they have received. Mix Net analyses in the literature are invariably focused on safety properties; important liveness properties, such as deadlock freedom, are wholly neglected. This is an unhappy omission, however, since a Mix Net that produces no results is of little use. In contrast, we verify here that the Mix Net is guaranteed to terminate, with each honest mix server outputting the decrypted vector of plaintexts alongside a chain proving that each re-encryption/permutation and partial decryption operation was performed correctly, under the assumption that there is an honest majority of them acting according to the protocol.
C1 [Stathakidis, Efstathios] Univ Surrey, Dept Comp, Guildford, Surrey, England.
   [Williams, David M.] Vrije Univ Amsterdam, Theoret Comp Sci, Amsterdam, Netherlands.
   [Heather, James] Chiast Secur Ltd, Guildford, Surrey, England.
C3 University of Surrey; Vrije Universiteit Amsterdam
RP Stathakidis, E (corresponding author), Univ Surrey, Dept Comp, Guildford, Surrey, England.
EM ss00165@surrey.ac.uk; d.m.williams@vu.nl; james@chiastic-security.co.uk
OI Williams, David/0000-0002-5272-8058
CR Abadi M, 2001, ACM SIGPLAN NOTICES, V36, P104, DOI 10.1145/373243.360213
   Adida B., 2008, USENIX SECURITY
   Boneh D., 1998, Algorithmic Number Theory. Third International Symposium, ANTS-III. Proceedings, P48, DOI 10.1007/BFb0054851
   Burton C., 2012, 5th International Conference on Electronic Voting 2012, (EVOTE 2012), Co-organized by the Council of Europe, Gesellschaft fur Informatik and E-Voting.CC, July 11-14, 2012, Castle Hofen, Bregenz, P81
   Canetti R, 2001, ANN IEEE SYMP FOUND, P136, DOI 10.1109/sfcs.2001.959888
   Chaum D., 1993, Advances in Cryptology - CRYPTO '92. 12th Annual International Cryptology Conference Proceedings, P89
   Chaum D., 1988, Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing, P11, DOI 10.1145/62212.62214
   CHAUM DL, 1981, COMMUN ACM, V24, P84, DOI 10.1145/358549.358563
   Delaune S, 2009, J COMPUT SECUR, V17, P435, DOI 10.3233/JCS-2009-0340
   Desmedt Y, 2000, LECT NOTES COMPUT SC, V1807, P557
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   ELGAMAL T, 1985, IEEE T INFORM THEORY, V31, P469, DOI 10.1109/TIT.1985.1057074
   FIAT A, 1987, LECT NOTES COMPUT SC, V263, P186, DOI 10.1007/3-540-47721-7_12
   Golle P, 2004, LECT NOTES COMPUT SC, V2964, P163
   Heather James, 2008, Formal Aspects in Security and Trust. 5th International Workshop, FAST 2008. Revised Selected Papers, P242
   Jakobsson M, 1998, LECT NOTES COMPUT SC, V1403, P448, DOI 10.1007/BFb0054145
   Kremer S, 2010, LECT NOTES COMPUT SC, V6345, P389, DOI 10.1007/978-3-642-15497-3_24
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Lowe G., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P147
   LOWE G, 1995, INFORM PROCESS LETT, V56, P131, DOI 10.1016/0020-0190(95)00144-2
   Meadows C. A., 1996, Computer Security-ESORICS 96. 4th European Symposium on Research in Computer Security Proceedings, P351
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   Neff C.A., 2001, ACM CCS 2001, P116
   Nguyen L, 2004, LECT NOTES COMPUT SC, V3089, P61
   Paillier P, 1999, LECT NOTES COMPUT SC, V1592, P223
   Rabin T., 1989, Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, P73, DOI 10.1145/73007.73014
   Roscoe A. W., 1995, Proceedings. The Eighth IEEE Computer Security Foundations Workshop (Cat. No.95TB8076), P98, DOI 10.1109/CSFW.1995.518556
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   Roscoe A.W., 2001, MODELLING ANAL SECUR
   ROSCOE AW, 1997, P DIMACS WORKSH DES
   Ryan PYA, 2009, IEEE T INF FOREN SEC, V4, P662, DOI 10.1109/TIFS.2009.2033233
   Sako K., 1995, Advances in CryptologyEUROCRYPT95, P393, DOI DOI 10.1007/3-540-49264-X32
   Schneider S., 1999, Concurrent and Real Time Systems: The CSP Approach, V1st
   Stathakidis E., 2013, P 13 INT WORKSH AUT
   Wikström D, 2004, LECT NOTES COMPUT SC, V2951, P317
   Wikstrom D, 2006, LECT NOTES COMPUT SC, V4052, P276
   Wikström D, 2009, LECT NOTES COMPUT SC, V5594, P407, DOI 10.1007/978-3-642-02620-1_28
   Wikstrom Douglas, 2005, THESIS
   Williams David M., 2012, Theoretical Aspects of Computing - ICTAC 2012. Proceedings of the 9th International Colloquium, P168, DOI 10.1007/978-3-642-32943-2_14
   Yao A. C., 1982, 23rd Annual Symposium on Foundations of Computer Science, P160, DOI 10.1109/SFCS.1982.38
NR 41
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1063
EP 1089
DI 10.1007/s10270-015-0474-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800008
DA 2024-07-18
ER

PT J
AU Asadi, M
   Groener, G
   Mohabbati, B
   Gasevic, D
AF Asadi, Mohsen
   Groener, Gerd
   Mohabbati, Bardia
   Gasevic, Dragan
TI Goal-oriented modeling and verification of feature-oriented product
   lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software engineering; Feature oriented software families; Goal-oriented
   requirements engineering; Description Logic; Feature Models;
   Verification
ID VARIABILITY
AB Goal models represent requirements and intentions of a software system. They play an important role in the development life cycle of software product lines (SPLs). In the domain engineering phase, goal models guide the development of variability in SPLs by providing the rationale for the variability, while they are used for the configuration of SPLs in the application engineering phase. However, variability in SPLs, which is represented by feature models, usually has design and implementation-induced constraints. When those constraints are not aligned with variability in goal models, the configuration with goal models becomes error prone. To remedy this problem, we propose a description logic (DL)-based approach to represent both models and their relations in a common DL knowledge base. Moreover, we apply reasoning to detect inconsistencies in the variability of goal and feature models. A formal proof is provided to demonstrate the correctness of the reasoning approach. An empirical evaluation shows computational tractability of the inconsistency detection.
C1 [Asadi, Mohsen] Simon Fraser Univ, Model Driven Dev Families Semantically Enabled Se, Burnaby, BC V5A 1S6, Canada.
   [Mohabbati, Bardia] Simon Fraser Univ, Comp Sci & Informat Technol, Burnaby, BC V5A 1S6, Canada.
   [Gasevic, Dragan] Simon Fraser Univ, Sch Interact Arts & Technol, Burnaby, BC V5A 1S6, Canada.
   [Groener, Gerd] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Duisburg, Germany.
   [Gasevic, Dragan] Athabasca Univ, Sch Comp & Informat Syst, Athabasca, AB, Canada.
C3 Simon Fraser University; Simon Fraser University; Simon Fraser
   University; University of Duisburg Essen; Athabasca University
RP Asadi, M (corresponding author), Simon Fraser Univ, Model Driven Dev Families Semantically Enabled Se, Burnaby, BC V5A 1S6, Canada.
EM masadi@sfu.ca
RI Gasevic, Dragan/AAT-3909-2020; asadi, mohsen/B-1939-2019
OI Gasevic, Dragan/0000-0001-9265-1908; 
CR Acher M, 2012, P 11 ANN INT C ASP O, P1, DOI [10.1145/2162049.2162051, DOI 10.1145/2162049.2162051]
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   [Anonymous], P INT WORKSH EARL AS
   [Anonymous], 2011, P 2011 ACM S APPL CO
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   António S, 2009, LECT NOTES COMPUT SC, V5833, P286, DOI 10.1007/978-3-642-04947-7_34
   Asadi M., 2011, 26 ACM S APPL COMP
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Borba C, 2009, LECT NOTES COMPUT SC, V5833, P244, DOI 10.1007/978-3-642-04947-7_30
   Chung L., 1999, NONFUNCTIONAL REQUIR, V5
   Clarke D., 2010, SPLC WORKSH, P91
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Eric S., 2011, Social modeling for requirements engineering
   Ernst Neil A., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P382, DOI 10.1007/978-3-642-31095-9_25
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Groner Gerd, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P366, DOI 10.1007/978-3-642-31095-9_24
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Janota M, 2008, LECT NOTES COMPUT SC, V4961, P31, DOI 10.1007/978-3-540-78743-3_3
   Jureta I. J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P115, DOI 10.1109/RE.2010.24
   Kang K.C., 1990, CMUSEI90TR021
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   Liaskos S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P9, DOI 10.1109/RE.2005.19
   Liaskos Sotirios, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P77, DOI 10.1007/978-3-642-21640-4_8
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   McGregor JD, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.74
   Mendonca M, 2012, SOFTWARE PRODUCT LIN
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Mussbacher G, 2010, LECT NOTES COMPUT SC, V6210, P23
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Sebastiani R, 2004, BIOMED SCI INSTRUM, V3084, P20
   Silva Carla, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P472
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   van der Storm T, 2007, LECT NOTES COMPUT SC, V4829, P66
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   Yu YJ, 2008, LECT NOTES ARTIF INT, V4994, P1
   [No title captured]
NR 51
TC 20
Z9 22
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 257
EP 279
DI 10.1007/s10270-014-0402-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200010
DA 2024-07-18
ER

PT J
AU Jackson, EK
   Levendovszky, T
   Balasubramanian, D
AF Jackson, Ethan K.
   Levendovszky, Tihamer
   Balasubramanian, Daniel
TI Automatically reasoning about metamodeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodeling; Formal specifications; Automated analysis
ID META
AB Metamodeling is foundational to many modeling frameworks, and so it is important to formalize and reason about it. Ideally, correctness proofs and test-case generation on the metamodeling framework should be automatic. However, it has yet to be shown that extensive automated reasoning on metamodeling frameworks can be achieved. In this paper, we present one approach to this problem: metamodeling frameworks are specified modularly using algebraic data types and constraint logic programming (CLP). Proofs and test-case generation are encoded as open world query operations and automatically solved.
C1 [Jackson, Ethan K.] Microsoft Res, Redmond, WA 98052 USA.
   [Levendovszky, Tihamer; Balasubramanian, Daniel] Vanderbilt Univ, Nashville, TN 37235 USA.
C3 Microsoft; Vanderbilt University
RP Jackson, EK (corresponding author), Microsoft Res, Redmond, WA 98052 USA.
EM ejackson@microsoft.com; tihamer@isis.vanderbilt.edu;
   daniel@isis.vanderbilt.edu
OI Balasubramanian, Daniel/0000-0002-7531-0594
CR Alanen M, 2008, SOFTW SYST MODEL, V7, P103, DOI 10.1007/s10270-007-0049-9
   Alvaro P, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P223
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Balaban M, 2011, LECT NOTES COMPUT SC, V6981, P517, DOI 10.1007/978-3-642-24485-8_38
   Ball Thomas, 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P1, DOI 10.1007/978-3-642-31759-0_1
   Bjorner N., 2012, SAT
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Clark T., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P17
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ehrig H., 2006, EACTS SERIES
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Grönniger H, 2009, LECT NOTES COMPUT SC, V5522, P152, DOI 10.1007/978-3-642-02138-1_10
   Gurevich Y, 2008, CSF 2008: 21ST IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, PROCEEDINGS, P149, DOI 10.1109/CSF.2008.8
   Jackson E.K., 2011, ICLP (Technical Communications), P73
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Jackson EK, 2007, LECT NOTES COMPUT SC, V4735, P405
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   Lifschitz V, 2008, LECT NOTES COMPUT SC, V5366, P37, DOI 10.1007/978-3-540-89982-2_8
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Object Management Group, 2010, MET FAC MOF COR SPEC
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varro Daniel, 2004, Journal of Software and Systems Modeling, V3, P85, DOI [10.1007/s10270-003-0050-x, DOI 10.1007/S10270-003-0050-X, 10.1007/ s10270-003-0050-x]
NR 34
TC 5
Z9 5
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 271
EP 285
DI 10.1007/s10270-013-0315-y
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100016
DA 2024-07-18
ER

PT J
AU Keznikl, J
   Bures, T
   Plásil, F
   Hnetynka, P
AF Keznikl, Jaroslav
   Bures, Tomas
   Plasil, Frantisek
   Hnetynka, Petr
TI Automated resolution of connector architectures using constraint solving
   (ARCAS method)
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture; Software connectors; Constraint solving;
   Middleware-based connectors; Connector theory; Alloy
AB In current software systems, connectors play an important role by encapsulating the communication and coordination logic. Since they share common patterns (elements) depending on characteristics of the connections, the elements can be predefined and reused. A method of connector implementation based on a composition of predefined elements naturally comprises two steps: resolution of the connector architecture, and creation of the actual connector code based on the architecture. However, manual resolution of a connector architecture is very difficult due to the number of factors to be considered. Thus, the challenge is to come up with an automated method, able to address all the important factors. In this paper, we present a method for automated resolution of connector architectures based on constraint solving techniques. We exploit a propositional logic with relational calculus for defining a connector theory, a constraint specification reflecting both the predefined parts and the important resolution factors, and employ a constraint solver to find a suitable connector architecture as a model of the theory. As a proof of the concept, we show how the theory can be captured in the Alloy language and resolved via the Alloy Analyzer.
C1 [Keznikl, Jaroslav; Bures, Tomas; Plasil, Frantisek; Hnetynka, Petr] Charles Univ Prague, Fac Math & Phys, Prague 11800 1, Czech Republic.
C3 Charles University Prague
RP Plásil, F (corresponding author), Charles Univ Prague, Fac Math & Phys, Malostranske Namesti 25, Prague 11800 1, Czech Republic.
EM keznikl@d3s.mff.cuni.cz; bures@d3s.mff.cuni.cz; plasil@d3s.mff.cuni.cz;
   hnetynka@d3s.mff.cuni.cz
RI Hnětynka, Petr/J-1892-2017; Bures, Tomas/G-1821-2014
OI Hnětynka, Petr/0000-0002-1008-6886; Bures, Tomas/0000-0003-3622-9918
FU EU [ASCENS 257414]; Grant Agency of the Czech Republic [GACR
   P202/10/J042]
FX This work was partially supported by the EU project ASCENS 257414 and by
   the Grant Agency of the Czech Republic, project GACR P202/10/J042. We
   are also very grateful to the anonymous reviewers for their valuable
   comments and suggestions and to Hugo Gibson for proofreading the text.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 5 INT WORKSH AUT FOR
   [Anonymous], 2009, Ph. D. Dissertation
   Ben Mokhtar S, 2007, J SYST SOFTWARE, V80, P1941, DOI 10.1016/j.jss.2007.03.002
   Berre D. L., 2008, P 1 WORKSH AN SOFTW, P197
   Blair G., 2011, LNCS, V6659
   Bliudze Simon., 2007, Proceedings of the 7th ACM/IEEE International Conference on Embedded Software, EMSOFT '07, P11, DOI DOI 10.1145/1289927.1289935
   Bulej L., 2005, 200510 CHARL U DEP S
   BULEJ L, 2004, 20047 CHARL U DEP SW
   Bures T., 2006, P 4 INT C SOFTW ENG
   Bures T., 2004, SOFTWARE ENG RES APP
   Bures T., 2006, THESIS CHARLES U PRA
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Cubo J, 2011, J UNIVERS COMPUT SCI, V17, P777
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   El Ghazi A., 2011, RELATIONAL REASONING, P133
   Georgiadis I., 2002, P 1 WORKSH SELF HEAL
   Hansen K.M., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing (SAC), Sierre, Switzerland, March 22-26, 2010, P2257
   Herold S, 2008, LECT NOTES COMPUT SC, V5153, P16
   Inverardi P, 2011, LECT NOTES COMPUT SC, V6659, P148, DOI 10.1007/978-3-642-21455-4_5
   Issarny V, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P154, DOI 10.1109/ICECCS.2009.44
   Issarny E, 2011, LECT NOTES COMPUT SC, V6659, P217, DOI 10.1007/978-3-642-21455-4_7
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2000, Software Engineering Notes, V25, P149, DOI 10.1145/357474.355065
   Jackson D., 2011, ALLOY LANGUAGE REFER
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Keznikl J., 2012, D3STR201203 CHARL U
   Kim J.S., 2006, P ISSTA 2006 WORKSH
   Malohlava M., 2011, D3STR201104 CHARL U
   Mehta N.R., 2000, P 22 INT C SOFTW ENG
   Merle Philippe, 2008, Research Report RR-6721
   NAKAZAWA J, 2006, P 26 IEEE INT C DIST, P3
   Object Management Group, 2004, DEPL CONF COMP BAS D
   Radermacher A., 2009, P INT C GEN PROGR CO, P127
   Robert S, 2005, INT FED INFO PROC, V184, P137
   Spalazzese R, 2010, LECT NOTES COMPUT SC, V6285, P335, DOI 10.1007/978-3-642-15114-9_26
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Tiberghien A, 2010, LECT NOTES COMPUT SC, V5977, P91, DOI 10.1007/978-3-642-11811-1_8
NR 40
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 843
EP 872
DI 10.1007/s10270-012-0274-8
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300019
DA 2024-07-18
ER

PT J
AU Braatz, B
   Brandt, C
AF Braatz, Benjamin
   Brandt, Christoph
TI A framework for families of domain-specific modelling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Resource Description Framework; Algebraic graph transformation;
   Domain-specific modelling language; Language evolution; Model migration;
   Language integration; Distributed modelling
ID DESIGN SCIENCE
AB Domain-specific modelling langugages, which are tailored to the requirements of their users, can significantly increase the acceptance of formal (or at least semi-formal) modelling in scenarios where informal diagrams and natural language descriptions are predominant today. We show in this article how the Resource Description Framework (RDF), which is a standard for the fundamental data structures of the Semantic Web, and algebraic graph transformations on these data structures can be used to realise and modify the abstract syntax of models in such domain-specific languages. We examine a small domain-specific modelling language for IT infrastructures-inspired by real-world requirements from a banking environment-as an application scenario. From this scenario, we derive four key requirements for a domain-specific modelling framework: (1) distributed modelling, (2) evolution of language definitions, (3) migration of legacy models and (4) integration of modelling languages. RDF and transformation rules are then used to provide a solution which meets these requirements simultaneously, where all kinds of modifications-from simple editing steps via model migration to language integration-are realised in an integrated manner by the single, declarative formalism of algebraic graph transformation.
C1 [Braatz, Benjamin] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, SECAN LAB, Luxembourg, Germany.
   [Brandt, Christoph] Tech Univ Berlin, Inst Softwaretech & Theoret Informat, Berlin, Germany.
   [Brandt, Christoph] Ctr Rech Publ Henri Tudor, Luxembourg, Germany.
C3 Technical University of Berlin
RP Braatz, B (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, SECAN LAB, Luxembourg, Germany.
EM benjamin.braatz@uni.lu; cbrandt@cs.tu-berlin.de
OI Braatz, Benjamin/0000-0001-6686-7334
FU National Research Fund (FNR), Luxembourg, under the Marie Curie Actions
   of the European Commission; National Research Fund (FNR), Luxembourg, in
   the Pearl Project ASINE at the Centre de Recherche Public (CRP) Henri
   Tudor, Luxembourg
FX B. Braatz has been supported by the National Research Fund (FNR),
   Luxembourg, and cofunded under the Marie Curie Actions of the European
   Commission (FP7-COFUND). C. Brandt is currently funded by the National
   Research Fund (FNR), Luxembourg, in the Pearl Project ASINE at the
   Centre de Recherche Public (CRP) Henri Tudor, Luxembourg.
CR Amelunxen C, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P81
   Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], 2006, MET FAC MOF COR SPEC
   [Anonymous], 2012, OWL 2 Web Ontology Language: Document overview
   Bagge Anya Helene, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P123
   Bell Peter., 2007, Proceedings of The 7th OOPSLA Workshop on Domain-Specific Modeling, OOPSLA'07, P172
   Berners-Lee T., 2007, Giant Global Graph
   BRAATZ B, 2008, ELECT COMMUNICATIONS, V10
   BRAATZ B, 2009, THESIS TU BERLIN
   Braatz B., 2010, P MPM 2010 IN PRESS
   Braatz B, 2011, LECT NOTES COMPUT SC, V6563, P82, DOI 10.1007/978-3-642-19440-5_6
   Braatz B, 2011, J SYMB COMPUT, V46, P246, DOI 10.1016/j.jsc.2010.09.007
   Brandt C., 2012, INT J INF S IN PRESS
   Brandt C, 2011, J RES PRACT INF TECH, V43, P65
   Brickley D., 2004, RDF VOCABULARY DESCR
   Choi N, 2006, SIGMOD REC, V35, P34, DOI 10.1145/1168092.1168097
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2008, FORSCHUNGSBERICHT 20
   Frank U., 2009, P DSM 2009 HSE PRINT
   Guerra E., 2008, VISUAL LANGUAGES INT, P74
   Herrmannsdoerfer Markus, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P3
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Karna J., 2009, P DSM 2009 HSE PRINT
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Klyne G, 2004, Resource description framework (RDF): Concepts and abstract syntax
   Object Management Group (OMG), 2009, REQ PROP MOF RDF STR
   Object Management Group (OMG), 2010, OMG UN MOD LANG OMG
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Piirainen K, 2010, LECT NOTES COMPUT SC, V6105, P93, DOI 10.1007/978-3-642-13335-0_7
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Uschold M, 2003, AI MAG, V24, P25
   Wende C, 2010, LECT NOTES COMPUT SC, V5969, P254
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P334
NR 34
TC 4
Z9 4
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 109
EP 132
DI 10.1007/s10270-012-0271-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000007
DA 2024-07-18
ER

PT J
AU Cuadra, D
   Martínez, P
   Castro, E
   Al-Jumaily, H
AF Cuadra, Dolores
   Martinez, Paloma
   Castro, Elena
   Al-Jumaily, Harith
TI Guidelines for representing complex cardinality constraints in binary
   and ternary relationships
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Ternary associations; Conceptual models; Logical models; Model
   transformations; Database methodology
ID RULES
AB Ternary relationships represent the association among three entities whose constraints database designers do not always know how to manage. In other words, it is very difficult for the designer to detect, represent and add constraints in a ternary relationship according to the domain requirements. To remedy the shortcomings in capturing the semantics required for the representation of this kind of relationship, the present paper discusses a practical method to motivate the designer's use of ternary relationships in a methodological framework. The method shows how to calculate cardinality constraints in binary and ternary relationships and to preserve the associated semantics until the implementation phase of the database development method.
C1 [Cuadra, Dolores; Martinez, Paloma; Castro, Elena; Al-Jumaily, Harith] Univ Carlos III Madrid, Dept Comp Sci, Leganes 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Cuadra, D (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Avd Univ 30, Leganes 28911, Spain.
EM dcuadra@inf.uc3m.es; pmf@inf.uc3m.es; ecastro@inf.uc3m.es;
   haljumai@inf.uc3m.es
RI CUADRA, MARIA DOLORES/S-2084-2019; Martínez, Paloma/AAE-5501-2020
OI CUADRA, MARIA DOLORES/0000-0002-0414-7849; MARTINEZ,
   PALOMA/0000-0003-3013-3771
FU 'Thuban: Natural Interaction Platform for Virtual Attending in Real
   Environments' project [TIN2008-02711]; Spanish Ministry of Industry,
   Tourism and Trade [TSI-020100-2009-419]; Spanish research projects:
   MA2VICMR: Improving the access, analysis and visibility of the
   multilingual and multimedia information in web for the Region of Madrid
   [S2009/TIC-1542]
FX This work forms part of the 'Thuban: Natural Interaction Platform for
   Virtual Attending in Real Environments' project (TIN2008-02711), the
   Spanish Ministry of Industry, Tourism and Trade through the project
   Semants (TSI-020100-2009-419) and also by the Spanish research projects:
   MA2VICMR: Improving the access, analysis and visibility of the
   multilingual and multimedia information in web for the Region of Madrid
   (S2009/TIC-1542).
CR Al-Jumaily H., 2002, P 4 INT C ENT INF SY, P819
   Al-Jumaily H., 2003, P IADIS INT C WWW IN, P999
   Al-Jumaily H. T., 2004, WORKSH 7 INT C UN MO
   Al-Jumaily HT, 2004, LECT NOTES COMPUT SC, V3180, P654
   [Anonymous], 1974, Data Base Management
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   Badia A, 2004, SIGMOD RECORD, V33, P77, DOI 10.1145/974121.974135
   Barke R., 1990, CASE METHOD ENTITY R
   Batra D, 1994, EUR J INFORM SYST, V3, P228, DOI 10.1057/ejis.1994.23
   Batra D, 1994, EUR J INFORM SYST, V3, P57, DOI 10.1057/ejis.1994.7
   Bruce T., 1992, DESIGNING QUALITY DA
   Calí A, 2007, LECT NOTES COMPUT SC, V4801, P245
   Castro E., 2003, Informatics in Education, V2, P191
   Castro E., 2002, INF SCI IT ED C 2002
   Codd E. F., 1979, ACM Transactions on Database Systems, V4, P397, DOI 10.1145/320107.320109
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cuadra D., 2005, ENCY INFORM SCI TECH, VIV, P2419
   Cuadra D, 2010, IEEE T EDUC, V53, P358, DOI 10.1109/TE.2009.2022632
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Dullea J., 1998, Proceedings of the 1998 ACM CIKM International Conference on Information and Knowledge Management, P331, DOI 10.1145/288627.288674
   EISENBERG A, 2004, SIGMOD RECORD, V33
   Elmasri R., 2007, Fundamentals of Database Systems, V5th
   FAHRNER C, 1995, DATA KNOWL ENG, V15, P213, DOI 10.1016/0169-023X(95)00006-E
   Ferg S., 1991, P 10 INT C ENT REL A
   Garcia-Molina Hector, 2008, DATABASE SYSTEMS COM
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Genova G., 2002, SOFTW SYST MODEL, V1, P86
   Halpin T., 2001, INFORM MODELING RELA
   Hansen G., 1995, DATABASE MANAGEMENT
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Hartmann S, 2001, ANN MATH ARTIF INTEL, V33, P253, DOI 10.1023/A:1013133428451
   Hartmann S, 2009, DATA KNOWL ENG, V68, P1128, DOI 10.1016/j.datak.2009.06.001
   He Q, 2006, DATA KNOWL ENG, V58, P299, DOI 10.1016/j.datak.2005.07.005
   Iglesias A., 2002, ICEIS 2002. Proceedings of the Fourth International Conference on Enterprise Information Systems, P500
   Il-Yeol Song, 1995, Journal of Computer and Software Engineering, V3, P427
   Ishakbeyoglu NS, 1998, VLDB J, V7, P67, DOI 10.1007/s007780050054
   Jones T. H., 2000, Journal of Database Management, V11, P12, DOI 10.4018/jdm.2000040102
   Korth H., 2005, Database Systems Concepts
   MARTINEZ P, 2000, DATA CONCEPTUAL MODE, P500
   McAllister A, 1998, DATA KNOWL ENG, V27, P255, DOI 10.1016/S0169-023X(98)00007-X
   Moody DL, 2003, INFORM SYST, V28, P619, DOI 10.1016/S0306-4379(02)00043-1
   Paré RC, 2002, SIGMOD RECORD, V31, P46, DOI 10.1145/565117.565125
   PARENT C., 1999, P 7 ACM INT S ADV GE, P26, DOI DOI 10.1145/320134.320142
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Ram S, 2005, INFORM SYST, V30, P89, DOI 10.1016/j.is.2003.10.008
   Ramakrishnan Raghu, 2002, Database Management Systems
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   TARDIEU H, 1983, METHODE MERISE, V1
   Teorey T, 2011, MOR KAUF D, P1
   TEOREY TJ, 1986, COMPUT SURV, V18, P197, DOI 10.1145/7474.7475
   Thalheim B, 2007, LECT NOTES COMPUT SC, V4512, P72
   Thalheim Bernhard., 2000, ENTITY RELATIONSHIP
   Türker C, 2001, VLDB J, V10, P241, DOI 10.1007/s007780100050
NR 54
TC 3
Z9 4
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 871
EP 889
DI 10.1007/s10270-012-0234-3
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600012
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
   Kolovos, DS
   Paige, RF
   dos Santos, OM
AF Guerra, Esther
   de Lara, Juan
   Kolovos, Dimitrios S.
   Paige, Richard F.
   dos Santos, Osmar Marchi
TI Engineering model transformations with <i>trans</i>ML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Model transformation; Domain-specific
   languages
ID LANGUAGE; DESIGN; TOOL
AB Model transformation is one of the pillars of model-driven engineering (MDE). The increasing complexity of systems and modelling languages has dramatically raised the complexity and size of model transformations as well. Even though many transformation languages and tools have been proposed in the last few years, most of them are directed to the implementation phase of transformation development. In this way, even though transformations should be built using sound engineering principles-just like any other kind of software-there is currently a lack of cohesive support for the other phases of the transformation development, like requirements, analysis, design and testing. In this paper, we propose a unified family of languages to cover the life cycle of transformation development enabling the engineering of transformations. Moreover, following an MDE approach, we provide tools to partially automate the progressive refinement of models between the different phases and the generation of code for several transformation implementation languages.
C1 [Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
   [Kolovos, Dimitrios S.; Paige, Richard F.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [dos Santos, Osmar Marchi] Univ York, INESS European Project, York YO10 5DD, N Yorkshire, England.
C3 Autonomous University of Madrid; University of York - UK; University of
   York - UK
RP Guerra, E (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Esther.Guerra@uam.es; Juan.deLara@uam.es; dkolovos@cs.york.ac.uk;
   paige@cs.york.ac.uk; osantos@cs.york.ac.uk
RI Kolovos, Dimitrios/L-9830-2014; dos Santos, Osmar M Marchi/A-8479-2018;
   de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
FU Spanish Ministry of Science and Innovation [TIN2011-24139]; Community of
   Madrid [S2009/TIC-1650]
FX We thank the referees for their useful comments. This work has been
   sponsored by the Spanish Ministry of Science and Innovation with project
   "Go Lite" (TIN2011-24139), and by the R&D program of the Community of
   Madrid with project "e-Madrid" (S2009/TIC-1650).
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Bézivin J, 2003, LECT NOTES COMPUT SC, V2863, P175
   Bezivin J., 2005, EWMT 05
   Bondavalli A., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P64, DOI 10.1109/HASE.1999.809476
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Darabos A, 2008, ELECTRON NOTES THEOR, V211, P75, DOI 10.1016/j.entcs.2008.04.031
   de Lara J, 2010, FORM ASP COMPUT, V22, P297, DOI 10.1007/s00165-009-0114-y
   de Lara J, 2009, LECT NOTES COMPUT SC, V5795, P256, DOI 10.1007/978-3-642-04425-0_19
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P178, DOI 10.1007/978-3-540-87405-8_13
   Etien A., 2007, RR6187 INRIA
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Friedenthal S., 2009, PRACTICAL GUIDE SYSM
   Gardey G, 2005, LECT NOTES COMPUT SC, V3576, P418
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Gorp P.V., 2008, LNCS, V5452, P208
   Guerra Esther, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P119, DOI 10.1109/VLHCC.2010.25
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Guerra E, 2013, SOFTW SYST MODEL, V12, P145, DOI 10.1007/s10270-011-0192-1
   Habel A, 2005, LECT NOTES COMPUT SC, V3393, P293
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Insfran E, 2010, LECT NOTES COMPUT SC, V6395, P288
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kolovos Dimitrios S., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P356, DOI 10.1109/ICST.2008.23
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Kusel A., 2009, DOCT S MODELS
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Lilius J., 1999, 14th IEEE International Conference on Automated Software Engineering, P255, DOI 10.1109/ASE.1999.802301
   Lin Y., 2005, MODEL DRIVEN SOFTWAR
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Merilinna J., 2005, THESIS TECHNICAL RES
   Merlin P.M., 1976, IEEE T COMPUT, V24
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Orejas F, 2011, J SYMB COMPUT, V46, P294, DOI 10.1016/j.jsc.2010.09.009
   Polack Dimitrios S., 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P97, DOI 10.1109/ICSTW.2008.50
   Rahim LA, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P589, DOI 10.1109/ASWEC.2008.41
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Sampath P, 2009, SAE INT J PASSENG CA, V1, P45, DOI 10.4271/2008-01-0124
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Siikarla M, 2008, LECT NOTES COMPUT SC, V5063, P1, DOI 10.1007/978-3-540-69927-9_1
   SPIVEY JM, 1989, SOFTWARE ENG J, V4, P40, DOI 10.1049/sej.1989.0006
   Steel J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P151, DOI 10.1109/ISSRE.2004.23
   Stürmer I, 2007, IEEE T SOFTWARE ENG, V33, P622, DOI 10.1109/TSE.2007.70708
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Yie A, 2012, SOFTW SYST MODEL, V11, P55, DOI 10.1007/s10270-010-0179-3
NR 64
TC 29
Z9 31
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 555
EP 577
DI 10.1007/s10270-011-0211-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Jézéquel, JM
   Combemale, B
   Derrien, S
   Guy, C
   Rajopadhye, S
AF Jezequel, Jean-Marc
   Combemale, Benoit
   Derrien, Steven
   Guy, Clement
   Rajopadhye, Sanjay
TI Bridging the chasm between MDE and the world of compilation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering (MDE); Domain-specific language (DSL);
   Compilation; Intermediate representation (IR); Software language
   engineering (SLE)
ID FORMAL VERIFICATION; MODEL; LANGUAGE; TRANSFORMATIONS; DESIGN; COMPILER;
   SYSTEM
AB Modeling and transforming have always been the cornerstones of software system development, albeit often investigated by different research communities. Modeling addresses how information is represented and processed, while transformation cares about what the results of processing this information are. To address the growing complexity of software systems, model-driven engineering (MDE) leverages domain-specific languages to define abstract models of systems and automated methods to process them. Meanwhile, compiler technology mostly concentrates on advanced techniques and tools for program transformation. For this, it has developed complex analyses and transformations (from lexical and syntactic to semantic analyses, down to platform-specific optimizations). These two communities appear today quite complementary and are starting to meet again in the software language engineering (SLE) field. SLE addresses all the stages of a software language lifecycle, from its definition to its tooling. In this article, we show how SLE can lean on the expertise of both MDE and compiler research communities and how each community can bring its solutions to the other one. We then draw a picture of the current state of SLE and of the challenges it has still to face.
C1 [Jezequel, Jean-Marc; Combemale, Benoit; Derrien, Steven; Guy, Clement] Univ Rennes 1, IRISA, Inria, Rennes, France.
   [Rajopadhye, Sanjay] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Rajopadhye, Sanjay] Colorado State Univ, Elect & Comp Engn Dept, Ft Collins, CO 80523 USA.
   [Guy, Clement] Univ Rennes 1, Irisa Inria Lab, Rennes, France.
C3 Universite de Rennes; Inria; Colorado State University; Colorado State
   University; Universite de Rennes
RP Guy, C (corresponding author), Univ Rennes 1, IRISA, Inria, Rennes, France.
EM Jean-Marc.Jezequel@irisa.fr; Benoit.Combemale@irisa.fr;
   Steven.Derrien@irisa.fr; Clement.Guy@irisa.fr;
   Sanjay.Rajopadhye@colostate.edu
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745
FU Inria associated team MoCAA; Inria associated team LRS; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [0917319] Funding Source: National Science Foundation
FX This work is the result of a close collaboration between Inria and
   Colorado State University (CSU), involving two teams in MDE (the
   Triskell team at Inria and the SE group at CSU), and two teams in
   optimizing compilers (the CAIRN team at Inria and the Melange group at
   CSU). This collaboration is partially funded by the Inria associated
   teams MoCAA and LRS.
CR Almeida JP, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P253, DOI 10.1109/EDOC.2004.1342522
   [Anonymous], 2003, MOD DRIV ARCH MDA GU
   [Anonymous], 1999, ENTCS
   [Anonymous], 2006, MET FAC MOF 2 0 COR
   [Anonymous], 2006, COMPILERS PRINCIPLES
   [Anonymous], 2008, MOF 2 0 QUER VIEW TR
   Balland E, 2008, ELECTRON NOTES THEOR, V219, P97, DOI 10.1016/j.entcs.2008.10.037
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Berthomieu B., 2003, ELECT NOTES THEOR CO, V80, P203
   Berthomieu B., 2008, EUR C EMB REAL TIM S
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Charfi A, 2010, DES AUT TEST EUROPE, P1313
   Clavreul M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P69, DOI 10.1145/1810295.1810306
   CLEMENT D, 1990, LECT NOTES COMPUT SC, V467, P287
   Combemale Benoit, 2009, Journal of Software, V4, P943, DOI 10.4304/jsw.4.9.943-958
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Cuccuru A, 2007, LECT NOTES COMPUT SC, V4530, P68
   de Lara J., 2011, J SOFTW SYST MODEL
   DEGANO P, 1995, SOFTWARE PRACT EXPER, V25, P657, DOI 10.1002/spe.4380250606
   DeRemer F., 1975, SIGPLAN Notices, V10, P114, DOI 10.1145/390016.808431
   Diskin Z., 2010, INT WORKSHOP MODEL D, P42
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P194, DOI 10.1007/978-3-540-87405-8_14
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   EMMELMANN H, 1989, SIGPLAN NOTICES, V24, P227, DOI 10.1145/74818.74838
   Ernst E., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P303
   Farail P., 2006, P 3 EUR C EMB REAL T
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Favre JM, 2009, IEEE T SOFTWARE ENG, V35, P737, DOI 10.1109/TSE.2009.78
   Floch A, 2011, LECT NOTES COMPUT SC, V6981, P608, DOI 10.1007/978-3-642-24485-8_45
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   FRASER CW, 1991, SIGPLAN NOTICES, V26, P29, DOI 10.1145/122616.122621
   FRASER CW, 1992, SIGPLAN NOTICES, V27, P68
   Garavel H, 2002, LECT NOTES COMPUT SC, V2529, P276
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Guerra E, 2009, LECT NOTES COMPUT SC, V5563, P83, DOI 10.1007/978-3-642-02408-5_7
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hadjiyiannis G, 1997, DES AUT CON, P299, DOI 10.1145/266021.266108
   Hahn C., 2008, Proceedings of the 7th international joint conference on Autonomous agents and multiagent systems-Volume, V1, P233
   Hebig R., 2010, ELECTR COMMUN, V42, P1
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Kerboeuf M., 2011, P OOPSLA WORKSH DOM
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Klint P, 2009, LECT NOTES COMPUT SC, V5634, P1, DOI 10.1007/978-3-642-02655-3_1
   Knuth D. E., 1971, Acta Informatica, V1, P79, DOI 10.1007/BF00289517
   KNUTH DE, 1965, INFORM CONTROL, V8, P607, DOI 10.1016/S0019-9958(65)90426-2
   Leroy X, 2008, J AUTOM REASONING, V41, P1, DOI 10.1007/s10817-008-9099-0
   Leroy X, 2007, LECT NOTES COMPUT SC, V4533, P1
   MARTIN F, 1998, INT J SOFTW TOOLS TE, V2, P46
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Muller PA, 2008, SOFTW SYST MODEL, V7, P423, DOI 10.1007/s10270-008-0088-x
   Narayanan A, 2008, ELECTRON NOTES THEOR, V211, P191, DOI 10.1016/j.entcs.2008.04.041
   Nikolov H, 2008, IEEE T COMPUT AID D, V27, P542, DOI 10.1109/TCAD.2007.911337
   OMG, 2003, UML OBJ CONSTR LANG
   OMG, 2007, UN MOD LANG UML 2 1
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pickin S, 2007, IEEE T SOFTWARE ENG, V33, P252, DOI 10.1109/TSE.2007.39
   Risoldi M, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P179, DOI 10.1109/VLHCC.2007.21
   Robby, 2006, IEEE INT CONF AUTOM, P369
   Sagiv M., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P105, DOI 10.1145/292540.292552
   Salay Rick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P447, DOI 10.1109/ASE.2008.70
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   STARK EW, 1985, LECT NOTES COMPUT SC, V206, P369
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Stone A, 2009, INFORM SOFTWARE TECH, V51, P1440, DOI 10.1016/j.infsof.2009.04.014
   Tomita Masaru., 1985, EFFICIENT PARSING NA
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Vignaga A., 2011, SOFTWARE SYSTEMS MOD, V10, P1
   VOGT HH, 1989, SIGPLAN NOTICES, V24, P131, DOI 10.1145/74818.74830
   Wagelaar D, 2005, LECT NOTES COMPUT SC, V3713, P367, DOI 10.1007/11557432_27
   Wagner TA, 1998, ACM T PROGR LANG SYS, V20, P980, DOI 10.1145/293677.293678
   Wile D.S, 1982, POPART PRODUCER PARS
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Wimmer M., 2012, LECT NOTES COMPUTER
   Wimmer M., 2011, P INT WORKSH MULT MO
   Zeng J, 2006, ELECTRON NOTES THEOR, V164, P103, DOI 10.1016/j.entcs.2006.10.008
NR 81
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 581
EP 597
DI 10.1007/s10270-012-0266-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500011
DA 2024-07-18
ER

PT J
AU Paige, RF
   Drivalos, N
   Kolovos, DS
   Fernandes, KJ
   Power, C
   Olsen, GK
   Zschaler, S
AF Paige, Richard F.
   Drivalos, Nikolaos
   Kolovos, Dimitrios S.
   Fernandes, Kiran J.
   Power, Christopher
   Olsen, Goran K.
   Zschaler, Steffen
TI Rigorous identification and encoding of trace-links in model-driven
   engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Traceability; Semantics; Classifications; Identification
AB Model-driven engineering (MDE) involves the construction and manipulation of many models of different kinds in an engineering process. In principle, models can be used in the product engineering lifecycle in an end-to-end manner for representing requirements, designs and implementations, and assisting in deployment and maintenance. The manipulations applied to models may be manual, but they can also be automated-for example, using model transformations, code generation, and validation. To enhance automated analysis, consistency and coherence of models used in an MDE process, it is useful to identify, establish and maintain trace-links between models. However, the breadth and scope of trace-links that can be used in MDE is substantial, and managing trace-link information can be very complex. In this paper, we contribute to managing the complexity of traceability information in MDE in two ways: firstly, we demonstrate how to identify the different kinds of trace-links that may appear in an end-to-end MDE process; secondly, we describe a rigorous approach to defining semantically rich trace-links between models, where the models themselves may be constructed using diverse modelling languages. The definition of rich trace-links allows us to use tools to maintain and analyse traceability relationships.
C1 [Paige, Richard F.; Drivalos, Nikolaos] Univ York, Enterprise Syst Res Grp, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Olsen, Goran K.] SINTEF, Oslo, Norway.
   [Zschaler, Steffen] Univ Lancaster, Dept Comp, Lancaster, England.
   [Fernandes, Kiran J.] Univ York, Sch Management, York YO10 5DD, N Yorkshire, England.
   [Power, Christopher] Univ York, EU4All Project, York YO10 5DD, N Yorkshire, England.
C3 University of York - UK; SINTEF; Lancaster University; University of
   York - UK; University of York - UK
RP Paige, RF (corresponding author), Univ York, Enterprise Syst Res Grp, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM paige@cs.york.ac.uk
RI Fernandes, Kieran/HGB-8323-2022; Zschaler, Steffen/AAC-4911-2020;
   Kolovos, Dimitrios/L-9830-2014
OI Zschaler, Steffen/0000-0001-9062-6637; Kolovos,
   Dimitris/0000-0002-1724-6563; Fernandes, Kiran/0000-0002-1097-1789
FU European Commission; European Commission under the "Information Society
   Technologies"; EPSRC [EP/F016905/1] Funding Source: UKRI
FX The work in this paper was supported by the European Commission via the
   MODELPLEX project and the AMPLE project, co-funded by the European
   Commission under the "Information Society Technologies" Sixth Framework
   Programme (2006-2009).
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   AIZENBUDRESHEF N, 2005, P ECMDA WORKSH TRAC
   ALENCAR F, 2000, P 3 WORKSH ENG REQ R
   ALEXANDER I, 2002, P WORKSH TRAC EM FOR
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Atran S., 1993, Cognitive foundations of natural history
   CHAN ZE, 2005, LNCS, V3748
   CLELANDHUANG J, 2002, COMPSAC
   CYSNEIROS G, 2003, P WORKSH SOFTW ENG L
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   DICK J, 2002, P WORKSH TRAC EM FOR
   DRIVALOS N, 2008, LNCS, V5452
   *ECL FDN, ECL MOD TO MOD TRANS
   EGYED A, 2003, ASE
   ESPINOZA A, 2006, SEW
   GIESE H, 2006, LNCS, V4199
   GOTEL O, 1995, RE
   GOTEL O, 1994, RE
   GRAU G, 2006, SEKE, P657
   *IEEE, 2004, 610121990 IEEE
   JOUAULT F, 2005, P ECMDA WORKSH TRAC
   KOLOVOS DS, EXTENSIBLE PLATFORM
   KOLOVOS DS, 2006, P ECMDA WORKSH TRAC
   KOLOVOS DS, 2008, ICST
   KOLOVOS DS, 2008, LNCS, V5063
   KOLOVOS DS, 2007, P DAGST WORKSH RIG M
   KURTEV I, 2007, P ECMDA WORKSH TRAC
   LIMON A, 2005, P ECMDA WORKSH TRAC
   MADER P, 2009, LNCS, V5562
   Malone J.L., 1988, SCI LINGUISTICS ART
   MUSSULMAN L, 2004, HUMAN FACTORS ANAL C
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   *OBJ MAN GROUP, 2004, UML 2 0 INFR SPEC
   *OBJ MAN GROUP, 2006, 080116 OMG
   *OBJ MAN GROUP, 2003, UML 2 0 OCL SPEC
   *OBJ MAN GROUP, 2007, PTC20070707 OMG
   OLDEVIK J, 2005, LNCS, V3748
   OLSEN G, 2007, LNCS, V4530
   PAIGE RF, 2008, P ECMDA WORKSH TRAC
   POWER C, 2009, PREREQUIREM IN PRESS
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   ROSE LM, 2008, LNCS, V5095
   RUMMLER A, 2007, P ECMDA WORKSH TRAC
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SOUSA A, 2008, P ECMDA WORKSH TRAC
   Spanoudakis George., 2005, Handbook of Software Engineering and Knowledge Engineering, V3
   STRENS A, 1996, P WORKSH ENG COMP BA
   Tisi M., 2009, LNCS, V5562
   VOJTISEK D, TRACEABILITY MDK KER
   WALDERHAUG S, 2006, P ECMDA WORKSH TRAC
   YU E, 1997, RE
   ZSCHALER S, 2009, LNCS
NR 54
TC 32
Z9 36
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 469
EP 487
DI 10.1007/s10270-010-0158-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200004
DA 2024-07-18
ER

PT J
AU Wahler, M
   Basin, D
   Brucker, AD
   Koehler, J
AF Wahler, Michael
   Basin, David
   Brucker, Achim D.
   Koehler, Jana
TI Efficient analysis of pattern-based constraint specifications
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; OCL; Constraints; Patterns; Consistency
ID UML CLASS DIAGRAMS; OCL; CHECKING
AB Precision and consistency are important prerequisites for class models to conform to their intended domain semantics. Precision can be achieved by augmenting models with design constraints and consistency can be achieved by avoiding contradictory constraints. However, there are different views of what constitutes a contradiction for design constraints. Moreover, state-of-the-art analysis approaches for proving constrained models consistent either scale poorly or require the use of interactive theorem proving. In this paper, we present a heuristic approach for efficiently analyzing constraint specifications built from constraint patterns. This analysis is based on precise notions of consistency for constrained class models and exploits the semantic properties of constraint patterns, thereby enabling syntax-based consistency checking in polynomial-time. We introduce a consistency checker implementing these ideas and we report on case studies in applying our approach to analyze industrial-scale models. These studies show that pattern-based constraint development supports the creation of concise specifications and provides immediate feedback on model consistency.
C1 [Wahler, Michael] Asea Brown Boveri Corp Res, Ind Software Syst, CH-5405 Baden, Switzerland.
   [Basin, David] ETH, CH-8092 Zurich, Switzerland.
   [Brucker, Achim D.] SAP Res, D-76131 Karlsruhe, Germany.
   [Koehler, Jana] IBM Corp, Zurich Res Lab, CH-8803 Ruschlikon, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; SAP;
   International Business Machines (IBM)
RP Wahler, M (corresponding author), Asea Brown Boveri Corp Res, Ind Software Syst, CH-5405 Baden, Switzerland.
EM michael.wahler@ch.abb.com; basin@inf.ethz.ch; achim.brucker@sap.com;
   koe@zurich.ibm.com
RI Brucker, Achim D./J-7083-2013
OI Brucker, Achim D./0000-0002-6355-1200; Wahler,
   Michael/0009-0006-5301-6315
CR Ackermann J, 2006, LECT NOTES COMPUT SC, V4001, P255, DOI 10.1007/11767138_18
   Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   AICHERNIG BK, 1997, LECT NOTES COMPUTER, V1313, P338
   [Anonymous], SOFTW TOOLS TECHNOL
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bordbar B., 2005, IADIS AC, P209
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Brucker Achim D., 2007, THESIS ETH ZURICH
   BRUCKER AD, 2006, SEMANTIC ISSUES OCL
   BRY F, 1986, VLDB 86
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   CABOT J, 2007, ASE, P547
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   CHIOREAN D, 2003, UML 2003 WORKSH
   Clarke Edmund M., 2001, Model Checking
   CONFERENCE O, SOFTWARE ENG, P455
   CORREA AL, 2007, LANGUAGE, V6, P113
   COSTAL D, 2008, SOFT SYST MODEL
   COSTAL D, CONSTRAINTS
   DAMM F, 1991, LECT NOTES COMPUT SC, V551, P45
   Darvas A, 2006, J OBJECT TECHNOL, V5, P59, DOI 10.5381/jot.2006.5.5.a3
   Davis JP, 2007, IEEE T KNOWL DATA EN, V19, P427, DOI 10.1109/TKDE.2007.45
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   DISTEFANO D, 2000, P ECOOP WORKSHOP DEF
   DWYER MB, 1998, METHODS, V98, P7
   EMMERICH W, P OF INT, P25
   Farré C, 2005, DATA KNOWL ENG, V53, P163, DOI 10.1016/j.datak.2004.08.002
   Gallier J.H., 1986, LOGIC COMPUTER SCI F
   GLUBRECHT JM, 1983, KLASSENLOGIK BIBLIOG
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Hartmann S., 2001, LNCS, P241
   *IBM, 2007, DEVELOPERWORKS
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   JONCKERS V, 2003, LECT NOTES COMPUTER, V2863, P326
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kaneiwa K, 2006, LECT NOTES COMPUT SC, V3861, P219
   KENT S, 2002, LNCS, V2335, P286, DOI DOI 10.1007/3-540-47884-1
   Kleppe AnnekeG., 2003, OBJECT CONSTRAINT LA
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4714, P165
   Kuster J., 2004, THESIS U PADERBORN
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   LECTURE N, 2006, LECT NOTES IN COMPUT, V4199, P260
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Maraee A, 2007, LECT NOTES COMPUT SC, V4530, P17
   Miliauskaite E., 2005, Information Technology and Control, V34, P355
   Nipkow T., 2002, LNCS, V2283, DOI DOI 10.1007/3-540-45949-9
   *OMG, 2006, UNF MOD LANG SUP VER
   *OMG, 2003, UML 2 0 OCL FIN AD S
   OWRE S, 1996, COMPUT AIDED VERIF C, V96, P411
   Queralt A, 2008, LECT NOTES COMPUT SC, V5074, P281
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   SABETZADEH M, 2007, P 15 IEEE INT REQ EN
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Wahler M., 2008, THESIS ETH ZURICH SW
   WAHLER M, 2006, MODEL DRIVEN CONSTRA
   WAHLER M, 2008, PATTERN APPROACH INC
NR 59
TC 18
Z9 18
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2010
VL 9
IS 2
BP 225
EP 255
DI 10.1007/s10270-009-0123-6
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 577YP
UT WOS:000276260200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU White, J
   Schmidt, DC
   Gokhale, A
AF White, Jules
   Schmidt, Douglas C.
   Gokhale, Aniruddha
TI Simplifying autonomic enterprise Java Bean applications via model-driven
   engineering and simulation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE autonomic computing; model-driven engineering; enterprise Java Beans
AB The goal of autonomic computing is to reduce the configuration, operational, and maintenance costs of distributed applications by enabling them to self-manage, self-heal, and self-optimize. This paper provides two contributions to the Model-Driven Engineering (MDE) of autonomic computing systems using Enterprise Java Beans (EJBs). First, we describe the structure and functionality of an MDE tool that visually captures the design of EJB applications, their quality of service (QoS) requirements, and the adaptations applied to their EJBs. Second, the paper describes how MDE tools can be used to generate code to simulate adaptive systems for verification and plug EJBs into a Java component framework that provides runtime adaptation capabilities.
C1 [White, Jules; Schmidt, Douglas C.; Gokhale, Aniruddha] Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37235 USA.
C3 Vanderbilt University
RP White, J (corresponding author), Vanderbilt Univ, Dept Elect Engn & Comp Sci, Box 1679 Stn B, Nashville, TN 37235 USA.
EM jules@dre.vanderbilt.edu; schmidt@dre.vanderbilt.edu;
   gokhale@dre.vanderbilt.edu
OI Gokhale, Aniruddha/0000-0002-7706-7102
CR ALUR D, 2003, J2EE CORE PATTERNS
   [Anonymous], P 6 S OP SYST DES IM
   ASIKAINEN T, 2004, ECAI 2004 WORKSH CON
   Baldwin C.Y., 1999, Design Rules: The Power of Modularity
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bratko I., 2001, Prolog Programming for Artificial Intelligence
   Candea G., 2001, P 1 WORKSH EV ARCH S
   CHEON Y, 2002, P EUR C OBJ OR PROG
   COULSON G, 2002, ACM MULTIMEDIA J
   EYMANN T, 2003, P DEXA WORKSH
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GJORVEN E, 2006, P INT C AUT AUT SYST
   GRAY J, 2004, P AOSD 04 LANC UK
   HATCLIFF J, 2003, P 25 INT C SOFTW ENG
   HUEBSCHER MC, 2004, P 14 INT C DAT EXP S
   *IBM, AUT COMP TOOLK
   *IBM DEV, SPEC COMM BAS EV
   KANDASAMY N, 2006, P 26 IEEE INT DISTR
   Kang K. C., 1990, Technical Report
   KEPHART JO, 2003, IEEE COMPUTER    JAN
   KUIPERS B, 1986, ARTIF INTELL, V29, P289, DOI 10.1016/0004-3702(86)90073-1
   LEDECZI A., 2001, P WORKSH INT SIGN PR
   LEDECZI A, 2001, IEEE COMPUTER    NOV
   LOYALL JP, 1998, P 4 WORKSH LANG COMP
   MATENA V, 1999, ENTERPRISE JAVA BEAN
   MELCHER B, 2004, INTEL J TECHNOL  NOV
   NAGARAJA K, 2004, P 6 S OP SYST DES IM
   Oppenheimer D. L., 2003, P USENIX S INT TECHN
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Tarr P., 1999, P 21 INT C SOFTW ENG
   WHITE J, 2005, P ACM IEEE 8 INT C M
   WHITE J, 2005, P WORKSH MDD SOFTW P
   Zhang J, 2006, J SYST SOFTWARE, V79, P1361, DOI 10.1016/j.jss.2006.02.062
   ZINKY J, 1997, THEORY PRACT OBJECT, V3
NR 36
TC 5
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 3
EP 23
DI 10.1007/s10270-007-0057-9
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100002
DA 2024-07-18
ER

PT J
AU Halvorsrud, R
   Sanchez, OR
   Boletsis, C
   Skjuve, M
AF Halvorsrud, Ragnhild
   Sanchez, Odnan Ref
   Boletsis, Costas
   Skjuve, Marita
TI Involving users in the development of a modeling language for customer
   journeys
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling language (DSML); Customer journey; Conceptual
   modeling; User involvement
ID SERVICE QUALITY; EXPERIENCE; DESIGN
AB Although numerous methods for handling the technical aspects of developing domain-specific modeling languages (DSMLs) have been formalized, user needs and usability aspects are often addressed late in the development process and in an ad hoc manner. To this concern, this paper presents the development of the customer journey modeling language (CJML), a DSML for modeling service processes from the end-user's perspective. Because CJML targets a wide and heterogeneous group of users, its usability can be challenging to plan and assess. This paper describes how an industry-relevant DSML was systematically improved by using a variety of user-centered design techniques in close collaboration with the target group, whose feedback was used to refine and evolve the syntax and semantics of CJML. We also suggest how a service-providing organization may benefit from adopting CJML as a unifying language for documentation purposes, compliance analysis, and service innovation. Finally, we distill what we learned into general lessons and methodological guidelines.
C1 [Halvorsrud, Ragnhild; Sanchez, Odnan Ref; Boletsis, Costas; Skjuve, Marita] Sustainable Commun Technol, SINTEF Digital, Forskningsveien 1, N-0373 Oslo, Norway.
C3 SINTEF
RP Halvorsrud, R (corresponding author), Sustainable Commun Technol, SINTEF Digital, Forskningsveien 1, N-0373 Oslo, Norway.
EM ragnhild.halvorsrud@sintef.no; odnan.sanchez@sintef.no;
   konstantinos.boletsis@sintef.no; marita.skjuve@sintef.no
OI Boletsis, Costas/0000-0003-2741-8127; Halvorsrud,
   Ragnhild/0000-0002-3774-4287
FU SINTEF
FX Open access funding provided by SINTEF
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   [Anonymous], 2022, SINTEF DIGITAL CJML
   Barisic A., 2014, SOFTWARE DESIGN DEV, P2120
   Barisic A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P342, DOI 10.1109/QUATIC.2012.63
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Benzarti I, 2021, IEEE INT ENTERP DIST, P82, DOI 10.1109/EDOC52215.2021.00019
   Benzarti I, 2022, INNOV SYST SOFTW ENG, V18, P171, DOI 10.1007/s11334-021-00426-2
   Benzarti I, 2020, LECT NOTES COMPUT SC, V12541, P100, DOI 10.1007/978-3-030-64694-3_7
   Berendes C.I., 2018, P 39 INT C INFORM SY, P1
   Bernard G., 2017, 29 INT C ADV INF SYS, V1848, P49
   Bevan N., 2003, HUMAN COMPUTER INTER, V1, P434
   Bitner MJ, 2008, CALIF MANAGE REV, V50, P66, DOI 10.2307/41166446
   Bork D., 2017, AUSTRALASIAN C INFOR, V5, P1
   Canovas Izquierdo Javier Luis, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P101, DOI 10.1007/978-3-642-40840-3_16
   Chase RB, 2008, SERV SCI RES INNOV S, P35, DOI 10.1007/978-0-387-76578-5_6
   Chesbrough H, 2006, COMMUN ACM, V49, P35, DOI 10.1145/1139922.1139945
   De Keyser A, 2020, J SERV RES-US, V23, P433, DOI 10.1177/1094670520928390
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Folstad A, 2018, J SERV THEOR PRACT, V28, P196, DOI 10.1108/JSTP-11-2014-0261
   Frank U., 2013, Domain Engineering, P133
   Green D, 2006, J COMPUT INFORM SYST, V47, P66
   Gustafsson Anders., 2003, COMPETING SERVICE EC
   Halvorsrud R., 2017, INNOVATING TRUST
   Halvorsrud R., 2014, SERVDES 2014 SERVICE, P291
   Halvorsrud R, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P239, DOI 10.1109/MODELS50736.2021.00032
   Halvorsrud R, 2016, J SERV THEOR PRACT, V26, P840, DOI 10.1108/JSTP-05-2015-0111
   Halvorsrud R, 2016, S VIS LANG HUM CEN C, P40, DOI 10.1109/VLHCC.2016.7739662
   Haugstveit I.M., 2016, SERVICE DESIGN GEOGR, V125, P215
   Helo P., 2017, DESIGNING MANAGING I, DOI DOI 10.1007/978-3-319-40430-1
   Heuchert M, 2019, CONF BUS INFORM, P531, DOI 10.1109/CBI.2019.00068
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hyun Cho, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P22, DOI 10.1109/MISE.2012.6226010
   International Organization for Standardization (ISO), 2019, ERG HUM SYST INT 210
   Izquierdo Javier Luis Canovas, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P272, DOI 10.1007/978-3-642-38709-8_18
   Klikovits S, 2021, SOFTW SYST MODEL, V20, P837, DOI 10.1007/s10270-020-00831-4
   Kuhrmann M., 2011, FLEXITOOLS WORKSH CI
   Lammel B., 2016, ANN INT C ENTERPRISE, V24
   Law ELC, 2010, INTERACT COMPUT, V22, P313, DOI 10.1016/j.intcom.2010.04.006
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Lee E., 2015, INT J ADV SOFTWARE, V8, P288
   Lee E., 2016, Service Design Geographies. Proceedings of the ServDes. 2016 Conference, P228
   Lee E., 2017, Advances in the Human Side of Service Engineering, P269
   Lemon KN, 2016, J MARKETING, V80, P69, DOI 10.1509/jm.15.0420
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Meyer C, 2007, HARVARD BUS REV, V85, P116
   Moghadam Nima, 2016, 2016 4th International Conference on Model-Driven Engineering and Software Development (MODELSWARD). Proceedings, P193
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Object Management Group (OMG), 2017, OMG® Unified Modeling Language® (OMG UML®) Version 2.5.1
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Olleros FX, 2016, RESEARCH HANDBOOK ON DIGITAL TRANSFORMATIONS, P1
   OMG, 2016, CAS MAN MOD NOT VERS
   Osterwalder A., 2004, The business model ontology a proposition in a design science approach
   Palmer A, 2010, J SERV MARK, V24, P196, DOI 10.1108/08876041011040604
   PARASURAMAN A, 1985, J MARKETING, V49, P41, DOI 10.2307/1251430
   Patrício L, 2011, J SERV RES-US, V14, P180, DOI 10.1177/1094670511401901
   Rawson A, 2013, HARVARD BUS REV, V91, P90
   Recker J.C., 2008, BPTRENDS, V5, P1
   Rosenbaum MS, 2017, BUS HORIZONS, V60, P143, DOI 10.1016/j.bushor.2016.09.010
   S??derstr??m J., 2011, DAMN FUCKING SYSTEM
   Saco RM., 2008, DESIGN MANAGEMENT RE, V19, P10, DOI DOI 10.1111/J.1948-7169.2008.TB00101.X
   Sampson SE, 2010, SERV SCI RES INNOV S, P107, DOI 10.1007/978-1-4419-1628-0_7
   Shannon C. E., 1963, The mathematical theory of communication
   SHOSTACK GL, 1987, J MARKETING, V51, P34, DOI 10.2307/1251142
   SHOSTACK GL, 1982, EUR J MARKETING, V16, P49, DOI 10.1108/EUM0000000004799
   Stickdorn Marc., 2011, This is Service Design Thinking
   Stone D., 2013, From moments to journeys: a paradigma shift in customers experience excellence
   Tax SS, 2013, J SERV RES-US, V16, P454, DOI 10.1177/1094670513481108
   Tueanrat Y, 2021, J BUS RES, V125, P336, DOI 10.1016/j.jbusres.2020.12.028
   van der Aalst W, 2014, IEEE INT ENTERP DIST, P1, DOI 10.1109/EDOC.2014.11
   Villanueva M.J., 2014, Information System Development, P99
   von Zernichow R, 2018, NORDICHI'18: PROCEEDINGS OF THE 10TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION, P850, DOI 10.1145/3240167.3240277
   Wu Q, 2019, IEEE INT C SEMANT CO, P279, DOI [10.1109/ICSC.2019.00057, 10.1109/ICOSC.2019.8665577]
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 73
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1589
EP 1618
DI 10.1007/s10270-023-01081-w
EA JAN 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000913687200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Torres, ID
   Fantinato, M
   Branco, GM
   Gordijn, J
AF Torres, Isaac da Silva
   Fantinato, Marcelo
   Branco, Gabriela Musse
   Gordijn, Jaap
TI Guidelines to derive an<i> e<SUP>3 </SUP>value</i> business model from a
   BPMN process model: an experiment on real-world scenarios
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Ecosystems; Business model; Process model; e(3)value; BPMN
ID SYSTEMS
AB Process models, e.g., BPMN models, may represent how companies in an ecosystem interact with each other. However, the business model of the same ecosystem, e.g., expressed by an e(3 )value model, is often left implicit. This hinders the proper analysis of the ecosystem at the business level, and more specifically financial assessment, for which process models are less appropriate. Therefore, the question is if we can somehow derive e(3)value models from BPMN models. This would not only allow for proper business model analysis but would also facilitate business model mining, similar to the success of process mining. However, although an e(3 )value model and BPMN model represent the same ecosystem, their perspectives differ significantly. Therefore an automated derivation of an e(3)value model from a BPMN seems not to be feasible, but we can assist the e(3 )value model designer with practical guidelines. We explore and test our guidelines in two real-world settings, we then analyze and evaluate its application to better understand their limitations and how to improve them.
C1 [Torres, Isaac da Silva; Gordijn, Jaap] Vrije Univ, Amsterdam, Netherlands.
   [Torres, Isaac da Silva; Branco, Gabriela Musse] Univ Fed Rio Grande, Porto Alegre, Brazil.
   [Fantinato, Marcelo] Univ Sao Paulo, Sao Paulo, Brazil.
C3 Vrije Universiteit Amsterdam; Universidade Federal do Rio Grande;
   Universidade de Sao Paulo
RP Torres, ID (corresponding author), Vrije Univ, Amsterdam, Netherlands.; Torres, ID (corresponding author), Univ Fed Rio Grande, Porto Alegre, Brazil.
EM i.dasilvatorres@vu.nl; m.fantinato@usp.br;
   gabriela.branco@proplan.ufrgs.br; j.gordijn@vu.nl
RI Fantinato, Marcelo/G-1071-2012
OI Fantinato, Marcelo/0000-0001-6261-1497; Gordijn,
   Jaap/0000-0002-6401-3850
CR Bodenstaff L., 2010, THESIS U TWENTE
   Buder J., 2011, 19 EUROPEAN C INFORM, P22
   da SilvaTorres, 2020, 13 IFIP WORKING C PR
   da SilvaTorres I., 2021, 14 IFIP WORKING C PR
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Gordijn J, 2000, LECT NOTES COMPUT SC, V1921, P40
   Gordijn J., 2021, E3value user guide-designing your ecosystem in a digital world, V1st
   Gordijn J., 2018, VALUE WEBS UNDERSTAN, P214
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hines P, 1997, INT J OPER PROD MAN, V17, P46, DOI 10.1108/01443579710157989
   Hofreiter B, 2006, LECT NOTES COMPUT SC, V4231, P19
   Hotie F, 2019, BUS INFORM SYST ENG+, V61, P163, DOI 10.1007/s12599-017-0496-y
   Kopp O, 2012, LECT NOTES BUS INF P, V125, P38
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   Moore J, 1996, FORTUNE, V133, P142
   NORMANN R, 1993, HARVARD BUS REV, V71, P65
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Pijpers V., 2007, 20 ANN HAW INT C SYS
   Schuster Rainer, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P202, DOI 10.1109/CEC.2009.58
   Schuster R., 2010, THESIS VIENNA U TECH
   Weigand H, 2006, LECT NOTES COMPUT SC, V4001, P321, DOI 10.1007/11767138_22
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
   Zlatev, 2007, THESIS U TWENTE
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 24
TC 0
Z9 0
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2023
VL 22
IS 2
BP 599
EP 618
DI 10.1007/s10270-022-01074-1
EA JAN 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AE4F9
UT WOS:000917971900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bettini, L
   Di Ruscio, D
   Iovino, L
   Pierantonio, A
AF Bettini, Lorenzo
   Di Ruscio, Davide
   Iovino, Ludovico
   Pierantonio, Alfonso
TI An executable metamodel refactoring catalog
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodels; Evolution; Refactoring; Catalog
ID MANAGING MODEL
AB Like any software artifacts, metamodels are evolving entities that constantly change over time for different reasons. Changing metamodels by keeping them consistent with other existing artifacts is an error-prone and tedious activity without the availability of automated support. In this paper, we foster the adoption of metamodel refactorings collected in a curated catalog. The Edelta framework is proposed as an operative environment to provide modelers with constructs for specifying basic refactorings and evolution operators, to define a complete metamodel refactoring catalog. The proposed environment has been used to implement the metamodel refactorings available in the literature and make them executable. A detailed discussion on how modelers can use and contribute to the definition of the catalog is also given.
C1 [Bettini, Lorenzo] Univ Florence, Florence, Italy.
   [Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 University of Florence; University of L'Aquila; Gran Sasso Science
   Institute (GSSI)
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM ludovico.iovino@gssi.it
RI Di Ruscio, Davide/AAG-4674-2020
OI Di Ruscio, Davide/0000-0002-5077-6793; Iovino,
   Ludovico/0000-0001-6552-2609
FU Gran Sasso Science Institute -GSSI within the CRUI-CARE Agreement
FX Open access funding provided by Gran Sasso Science Institute -GSSI
   within the CRUI-CARE Agreement.
CR Anguel F, 2014, INT CONF COMP SCI, P142, DOI 10.1109/CSIT.2014.6805992
   Barriga A., 2018, P MODELS 2018 WORKSH, P781
   Basciani F, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a2
   Ben Sghaier O, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P798, DOI 10.1109/MODELS-C53483.2021.00126
   Berg H., 2017, GENERIC METAMODEL RE
   Berg H., RES REPORT
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Bettini L., 2020, ACM IEEE INT C MOD D, P1
   Bettini L., 2017, MODELS SATELLITE EVE, P71
   Bettini L, 2022, INT J SOFTW TOOLS TE, V24, P247, DOI 10.1007/s10009-022-00646-2
   Bettini L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a14
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Biermann E., ELECTR COMMUN, V3
   Cicchetti A, 2009, LECT NOTES COMPUT SC, V5563, P35, DOI 10.1007/978-3-642-02408-5_4
   De Lara J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280985
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Demuth A, 2012, IEEE INT CONF AUTOM, P302, DOI 10.1145/2351676.2351730
   Di Rocco J., 2014, ME WORKSH MODELS, P22
   Di Rocco J., 2015, P WORKSHOP DOMAIN SP, P47
   Di Ruscio Davide, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P114, DOI 10.1109/SEAA.2013.22
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Di Ruscio D., 2011, P 2 INT WORKSH MOD C, P30
   Di Ruscio D., EDELTA APPROACH DEFI
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Egea M, 2010, INNOV SYST SOFTW ENG, V6, P73, DOI 10.1007/s11334-009-0108-1
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamboa M.A., 2016, INT C MODEL DRIVEN E, P25
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   Garcia Jokin., 2013, Software Language Engineering, Lecture Notes in Computer Science, P144
   Gruschko Boris., 2007, INT WORKSH MOD DRIV, P3
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Iovino L, 2019, EUROMICRO CONF PROC, P458, DOI 10.1109/SEAA.2019.00074
   Iwamoto M., 2003, 4 AOSD MOD UML WORKS, P18
   Judson S.R., METAMODELING APPROAC
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Koegel Maximilian, 2009, P MODELS, V9
   Kusel A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P116, DOI 10.1109/MODELS.2015.7338242
   LLOYD JW, 1987, J LOGIC PROGRAM, V4, P331, DOI 10.1016/0743-1066(87)90009-4
   Lombardi T, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a7
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Opdyke W.F., 1992, THESIS US
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Pérez-Castillo R, 2011, COMPUT STAND INTER, V33, P519, DOI 10.1016/j.csi.2011.02.007
   Pierantonio, SUPPORTING USERS MAN
   Rocco J. D., 2013, P 2 WORKSH GRAPH MOD, P51
   Rose LM, 2009, IEEE INT CONF AUTOM, P545, DOI 10.1109/ASE.2009.57
   Rutle A, 2018, LECT NOTES COMPUT SC, V10890, P80, DOI 10.1007/978-3-319-92997-2_6
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Vermolen Sander D, 2011, INT C SOFTW LANG ENG, P201
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
NR 55
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1689
EP 1709
DI 10.1007/s10270-022-01034-9
EA AUG 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000840071200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Nesterov, R
   Bernardinello, L
   Lomazova, I
   Pomello, L
AF Nesterov, Roman
   Bernardinello, Luca
   Lomazova, Irina
   Pomello, Lucia
TI Discovering architecture-aware and sound process models of multi-agent
   systems: a compositional approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-agent systems; Event logs; Process mining; Process discovery;
   Petri nets; Composition; Transformations; Interface patterns
ID NETS
AB A process model discovered from an event log of a multi-agent system often does not fully cover certain viewpoints of its architecture. We consider those concerned with the structure of a model explicitly reflecting agent behavior and interactions. The direct discovery from an event log of a multi-agent system may result in an unclear model structure and over-generalizations of agent behavior. We suggest applying a compositional approach that yields architecture-aware process models of multi-agent systems. An event log of a multi-agent system is filtered by the behavior of individual agents. Then, a multi-agent system model is a composition of agent models discovered from filtered logs. We use an intermediate model, called an interface pattern, specifying agent interactions and representing the architecture of a multi-agent system. We design a collection of specific interface patterns modeling typical agent interactions. An interface pattern provides an abstract specification of interactions and has a part corresponding to the behavior of each agent. We use structural transformations to map agent models discovered from filtered logs on the respective parts in an interface pattern. If such a mapping exists, we guarantee that a composition of agent models preserves their soundness. We conduct a series of experiments to evaluate the compositional approach. Experimental results confirm the improvement in the structure of process models discovered using the compositional approach compared to those discovered directly from event logs.
C1 [Nesterov, Roman] Univ Milano Bicocca, Milan, Italy.
   [Bernardinello, Luca; Pomello, Lucia] Univ Milano Bicocca, Dept Informat Syst & Commun DISCo, Milan, Italy.
   [Nesterov, Roman; Lomazova, Irina] HSE Univ, Fac Comp Sci, Moscow, Russia.
C3 University of Milano-Bicocca; University of Milano-Bicocca; HSE
   University (National Research University Higher School of Economics)
RP Nesterov, R (corresponding author), Univ Milano Bicocca, Milan, Italy.; Nesterov, R (corresponding author), HSE Univ, Fac Comp Sci, Moscow, Russia.
EM rnesterov@hse.ru; luca.bernardinello@unimib.it; ilomazova@hse.ru;
   lucia.pomello@unimib.it
RI ; Nesterov, Roman/U-5939-2017
OI POMELLO CHINAGLIA POMELLO, LUCIA/0000-0001-5651-915X; Nesterov,
   Roman/0000-0002-4162-9070
FU MIUR, Italy; Basic Research Program at HSE University, Russia
FX This work is supported by MIUR, Italy and the Basic Research Program at
   HSE University, Russia.
CR Adriansyah Arya., 2014, Aligning Observed and Modeled Behavior, DOI DOI 10.6100/IR770080
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   Augusto A, 2019, IEEE T KNOWL DATA EN, V31, P686, DOI 10.1109/TKDE.2018.2841877
   Badouel E., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P529
   Badouel E, 2015, Text in Theoretical Computer Science, EATCS Series, DOI [10.1007/978-3-662-47967-4, DOI 10.1007/978-3-662-47967-4]
   Barros A, 2005, LECT NOTES COMPUT SC, V3649, P302, DOI 10.1007/11538394_20
   Bednarczyk MA, 2003, LECT NOTES COMPUT SC, V2679, P140
   Bergenthum R, 2007, LECT NOTES COMPUT SC, V4714, P375
   Bernardinello L., 2020, SOUNDNESS PRESERVING
   Bernardinello L., 2018, P INT WORKSH ALG THE, V2115, P2338
   Bernardinello L., 2022, IN PRESS
   Bernardinello L, 2007, FUND INFORM, V80, P31
   Bernardinello L, 2013, LECT NOTES COMPUT SC, V8100, P48
   Best E., 2001, MONO THEOR COMP SCI
   Buijs J., 2014, THESIS EINDHOVEN U T
   Buijs J.C.A.M., 2012, On the Move to Meaningful Internet Systems: OTM 2012, P305, DOI DOI 10.1007/978-3-642-33606-5_19
   Campagna D, 2015, COMM COM INF SC, V555, P3, DOI 10.1007/978-3-319-25579-8_1
   CARMONA J.-VAN, 2018, Conformance checking
   de Alfaro L, 2005, NATO SCI SER II-MATH, V195, P83
   de San Pedro J., 2016, P 31 ANN ACM S APPL, P839, DOI DOI 10.1145/2851613.2851645
   De Smedt J, 2014, LECT NOTES COMPUT SC, V8841, P446, DOI 10.1007/978-3-662-45563-0_26
   Decker G, 2008, LECT NOTES COMPUT SC, V4928, P208
   Decker G, 2006, LECT NOTES COMPUT SC, V4102, P414
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Girault C., 2003, Petri Nets for Systems Engineering: A Guide to Modeling, Verification, and Applications, DOI [10.1007/978.3-602-05324-9, DOI 10.1007/978-3-662-05324-9]
   Gunther Christian W., 2007, Business Process Management. Proceedings 5th International Conference, BPM 2007. (Lecture Notes in Computer Science vol. 4714), P328
   Kalenkova Anna A., 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P71, DOI 10.1007/978-3-319-07734-5_5
   Kalenkova AA, 2017, SOFTW SYST MODEL, V16, P1019, DOI 10.1007/s10270-015-0502-0
   Kalenkova AA, 2014, FUND INFORM, V133, P197, DOI 10.3233/FI-2014-1071
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Nesterov R., 2021, ZENODO, DOI [10.5281/zenodo.5830863, DOI 10.5281/ZENODO.5830863]
   Nesterov R., 2019, P MACSPRO WORKSH 201, V2478, P6273
   [Нестеров Р.А. Nesterov R.A.], 2018, [Труды Института системного программирования РАН, Trudy Instituta sistemnogo programmirovaniya RAN], V30, P285, DOI 10.15514/ISPRAS-2018-30(3)-20
   Padberg J, 2003, LECT NOTES COMPUT SC, V2472, P161
   Reisig W., 2013, Understanding Petri Nets - Modeling Techniques, Analysis Methods, Case Studies, DOI DOI 10.1007/978-3-642-33278-4
   van der Aalst W., 2018, P INT WORKSH ALG THE, V2115, P5674
   van der Aalst WMP, 2007, INT CONF APPL CONCUR, P3, DOI 10.1109/ACSD.2007.50
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   Van der Aalst W, 2012, COMMUN ACM, V55, P76, DOI 10.1145/2240236.2240257
   van der Aalst WMP, 2020, FUND INFORM, V175, P1, DOI 10.3233/FI-2020-1946
   van der Aalst WMP, 2015, LECT NOTES COMPUT SC, V9115, P287, DOI 10.1007/978-3-319-19488-2_15
   van der Aalst WMP, 2009, LECT NOTES COMPUT SC, V5569, P42
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3536, P48
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Werf JMEM, 2009, FUND INFORM, V94, P387, DOI 10.3233/FI-2009-136
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   WINSKEL G, 1987, INFORM COMPUT, V72, P197, DOI 10.1016/0890-5401(87)90032-0
NR 49
TC 0
Z9 0
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 351
EP 375
DI 10.1007/s10270-022-01008-x
EA MAY 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000790267600002
DA 2024-07-18
ER

PT J
AU Song, H
   Dautov, R
   Ferry, N
   Solberg, A
   Fleurey, F
AF Song, Hui
   Dautov, Rustem
   Ferry, Nicolas
   Solberg, Arnor
   Fleurey, Franck
TI Model-based fleet deployment in the IoT-edge-cloud continuum
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software deployment; IoT; Model-based software engineering; Device
   fleet; DevOps; Constraint solving
AB With the increasing computing and networking capabilities, IoT devices and edge gateways have become part of a larger IoT-edge-cloud computing continuum, where processing and storage tasks are distributed across the whole network hierarchy, not concentrated only in the cloud. At the same time, this also introduced continuous delivery practices to the development of software components for network-connected gateways and sensing/actuating nodes. These devices are placed on end users' premises and are characterized by continuously changing cyber-physical contexts, forcing software developers to maintain multiple application versions and frequently redeploy them on a distributed fleet of devices with respect to their current contexts. Doing this correctly and efficiently goes beyond manual capabilities and requires an intelligent and reliable automated solution. This paper describes a model-based approach to automatically assigning multiple software deployment plans to hundreds of edge gateways and connected IoT devices implemented in collaboration with a smart healthcare application provider. From a platform-specific model of an existing edge computing platform, we extract a platform-independent model that describes a list of target devices and a pool of available deployment plans. Next, we use constraint solving to automatically assign deployment plans to devices at once with respect to their specific contexts. The result is transformed back into the platform-specific model and includes a suitable deployment plan for each device, which is then consumed by our engine to deploy software components not only on edge gateways but also on their downstream IoT devices with constrained resources and connectivity. We validate the approach with a fleet deployment prototype integrated into a DevOps toolchain used by the partner application provider. Initial experiments demonstrate the viability of the approach and its usefulness in supporting DevOps for edge and IoT software development.
C1 [Song, Hui; Dautov, Rustem] SINTEF Digital, Forskningsveien 1, N-0373 Oslo, Norway.
   [Ferry, Nicolas] Univ Cote dAzur, I3S INRIA Kairos, Sophia Antipolis, France.
   [Solberg, Arnor; Fleurey, Franck] Tellu IoT AS, Lensmannslia 4, N-1386 Asker, Norway.
C3 SINTEF; Universite Cote d'Azur
RP Song, H (corresponding author), SINTEF Digital, Forskningsveien 1, N-0373 Oslo, Norway.
EM Hui.Song@sintef.no; Rustem.Dautov@sintef.no;
   nicolas.ferry@univ-cotedazur.fr; Arnor.Solberg@tellu.no;
   Franck.Fleurey@tellu.no
OI Dautov, Rustem/0000-0002-0260-6343
FU SINTEF
FX Open access funding provided by SINTEF.
CR Abdelfadeel K, 2020, I S WORLD WIREL MOBI, P16, DOI 10.1109/WoWMoM49955.2020.00018
   Anastasiou A., 2020, 2020 16 INT C DISTRI
   Anstegui, 2011, 9 S ABSTR REF APPR
   AntonGonzalez M.A., 2021, FINAL EVALUATION VAL
   Antonini M, 2014, 2014 22ND INTERNATIONAL CONFERENCE ON SOFTWARE, TELECOMMUNICATIONS AND COMPUTER NETWORKS (SOFTCOM), DOI 10.1109/SOFTCOM.2014.7039103
   Arta, 2016, P 2 INT WORKSH QUAL, P4041
   Asokan N, 2018, IEEE T COMPUT AID D, V37, P2290, DOI 10.1109/TCAD.2018.2858422
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bergmayr A., 2016, CLOSER
   Bergmayr A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3150227
   Beuche D., 2007, Overload J, V78, P5
   Binz T., 2013, INT C SERV OR COMP
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bofill M, 2012, CONSTRAINTS, V17, P273, DOI 10.1007/s10601-012-9123-1
   Bonacina MP, 2017, LECT NOTES ARTIF INT, V10395, P42, DOI 10.1007/978-3-319-63046-5_4
   Bryant R.E., 2002, INT C COMP AID VER, P7892
   Bucchiarone A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P34, DOI 10.1109/MODELS.2019.00-17
   Choi BC, 2016, IEEE T CONSUM ELECTR, V62, P39, DOI 10.1109/TCE.2016.7448561
   Combemale B., 2019, SOFTWARE ENG ASPECTS
   Dautov R., 2019, MDE4IOT MODCOMP MODE, P4754
   Dautov R, 2022, IEEE T CLOUD COMPUT, V10, P885, DOI 10.1109/TCC.2020.2983402
   Dautov R, 2017, 11TH INTERNATIONAL CONFERENCE ON DISTRIBUTED SMART CAMERAS (ICDSC 2017), P119, DOI 10.1145/3131885.3131918
   Dautov R, 2017, LECT NOTES COMPUT SC, V10517, P39, DOI 10.1007/978-3-319-67910-5_4
   DeMoura L., 2008, INT C TOOLS ALGORITH
   Eder, 2018, P 21 ACM IEEE INT C
   Eder J., 2017, 2017 ACMIEEE 20 INT
   Falas, 2020, ARXIV PREPRINT ARXIV
   Ferry N, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a16
   Ferry N, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3125621
   González CRA, 2009, IEEE COMMUN MAG, V47, P50, DOI 10.1109/MCOM.2009.5277455
   Hall D., 2013, ANSIBLE CONFIGURATIO
   Hochgeschwender N, 2013, IEEE INT C INT ROBOT, P3907, DOI 10.1109/IROS.2013.6696915
   Jain N, 2016, 2016 INTERNATIONAL CONFERENCE ON COMMUNICATION AND SIGNAL PROCESSING (ICCSP), VOL. 1, P1232, DOI 10.1109/ICCSP.2016.7754349
   Jo HJ, 2015, LECT NOTES COMPUT SC, V9114, P498, DOI 10.1007/978-3-319-19890-3_32
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lo N.W., 2019, INT C INF SYST ARCH
   McGrath W., 2015, P 7 ACM SIGCHI S ENG
   Morin B., 2018, P 21 ACM IEEE INT C
   Nguyen PH, 2019, 2019 IEEE INTERNATIONAL CONGRESS ON INTERNET OF THINGS (IEEE ICIOT 2019), P53, DOI 10.1109/ICIOT.2019.00021
   Nikolov N., 2018, 2018 IEEE 27 INT SCI, P14
   Object Management Group Inc. (OMG), 2006, DEPL CONF COMP BAS D
   Öncan T, 2007, INFOR, V45, P123, DOI 10.3138/infor.45.3.123
   Pentico DW, 2007, EUR J OPER RES, V176, P774, DOI 10.1016/j.ejor.2005.09.014
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pradhan Swadhin, 2018, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V2, DOI 10.1145/3214278
   Sahlmann K, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21010010
   Song H., 2018, P 40 INT C SOFTWARE, P97100
   Song H., 2020, P 23 ACM IEEE INT C
   Song H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P595, DOI 10.1109/ICSE.2015.201
   Vögler M, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2850416
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Yohan A., 2018, P INT C INF KNOWL EN
   You CS, 2017, IEEE T WIREL COMMUN, V16, P1397, DOI 10.1109/TWC.2016.2633522
NR 54
TC 16
Z9 17
U1 2
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2022
VL 21
IS 5
BP 1931
EP 1956
DI 10.1007/s10270-022-01006-z
EA MAY 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Z8HC
UT WOS:000790267600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Marchezan, L
   Kretschmer, R
   Assunçao, WKG
   Reder, A
   Egyed, A
AF Marchezan, Luciano
   Kretschmer, Roland
   Assuncao, Wesley K. G.
   Reder, Alexander
   Egyed, Alexander
TI Generating repairs for inconsistent models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Inconsistency repair; Consistency checking;
   Repair generation
ID MANAGEMENT
AB There are many repair alternatives for resolving model inconsistencies, each involving one or more model changes. Enumerating them all could overwhelm the developer because the number of possible repairs can grow exponentially. To address this problem, this paper focuses on the immediate cause of an inconsistency. By focusing on the cause, we can generate a repair tree with a subset of repair actions focusing on fixing this cause. This strategy identifies model elements that must be repaired, as opposed to additional model elements that may or may not have to be repaired later. Furthermore, our approach can provide an ownership-based filter for filtering repairs that modify model elements not owned by a developer. This filtering can further reduce the repair possibilities, aiding the developer when choosing repairs to be performed. We evaluated our approach on 24 UML models and four Java systems, using 17 UML consistency rules and 14 Java consistency rules. The evaluation data contained 39,683 inconsistencies, showing our approach's usability as the repair trees sizes ranged from five to nine on average per model. Also, these repair trees were generated in 0.3 seconds on average, showing our approach's scalability. Based on the results, we discuss the correctness and minimalism with regard to the cause of the inconsistency. Lastly, we evaluated the filtering mechanism, showing that it is possible to further reduce the number of repairs generated by focusing on ownership.
C1 [Marchezan, Luciano; Kretschmer, Roland; Assuncao, Wesley K. G.; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Kretschmer, Roland] Dynatrace Res, Linz, Austria.
   [Reder, Alexander] MIC Datenverarbeitung, Linz, Austria.
C3 Johannes Kepler University Linz
RP Marchezan, L (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM luciano.marchezan_de_paula@jku.at; roland.kretschmer@dynatrace.com;
   wesley.assuncao@jku.at; alexander.reder@gmail.com;
   alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017; Marchezan, Luciano/JXX-3922-2024; de
   Paula, Luciano Marchezan/AAJ-3752-2020
OI Marchezan, Luciano/0000-0003-3096-580X; Guez Assuncao, Wesley
   Klewerton/0000-0002-7557-9091
FU Austrian Science Fund (FWF) [P 25289-N15]; Province of Upper Austria of
   the COMET center SCCH
FX This research was funded by the Austrian Science Fund (FWF): P
   25289-N15, and has been supported by the Province of Upper Austria in
   the frame of the COMET center SCCH.
CR Afrati F.N., 2009, P 12 INT C DATABASE, V361, P31, DOI 10.1145/1514894.1514899
   Allaki D, 2018, 2018 IEEE 5TH INTERNATIONAL CONGRESS ON INFORMATION SCIENCE AND TECHNOLOGY (IEEE CIST'18), P1, DOI 10.1109/CIST.2018.8596468
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Bertossi L, 2019, PROCEEDINGS OF THE 38TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS (PODS '19), P48, DOI 10.1145/3294052.3322190
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Brida SG, 2021, PROC INT CONF SOFTW, P1135, DOI 10.1109/ICSE43902.2021.00105
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Clavel M, 2006, LECT NOTES COMPUT SC, V4019, P368
   Czarnecki K., 2006, GPCE, P211
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Dam HK, 2011, AUTON AGENT MULTI-AG, V23, P384, DOI 10.1007/s10458-010-9163-0
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Franconi E, 2019, SOFTW SYST MODEL, V18, P2655, DOI 10.1007/s10270-018-0688-z
   Gogolla, 2017, QUALITY IMPROVEMENT, P155
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jongeling R, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P642, DOI 10.1109/MODELS-C.2019.00098
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   König H, 2017, LECT NOTES COMPUT SC, V10376, P161, DOI 10.1007/978-3-319-61482-3_10
   Kowalski, 1974, DEP COMPUTATIONAL LO, V75
   Kretschmer R, 2021, SOFTW SYST MODEL, V20, P539, DOI 10.1007/s10270-020-00823-4
   Kretschmer R, 2017, ASIA PAC SOFWR ENG, P456, DOI 10.1109/APSEC.2017.52
   Krieger MP., 2010, P 9 INT C GEN PROGR, V46, P53, DOI 10.1145/1942788.1868303
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Nohrer A., 2012, VAMOS, P83
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   OMG, 2017, UML 2 5 1 SPEC
   OMG, 2014, OCL SPEC
   Oriol X, 2015, DATA KNOWL ENG, V99, P39, DOI 10.1016/j.datak.2015.06.006
   Pinna Puissant J., 2010, Proceedings of the 3rd Workshop on Living with Inconsistencies in Software Development, P8
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2013, IEEE T SOFTWARE ENG, V39, P1531, DOI 10.1109/TSE.2013.30
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Rull G, 2015, SOFTW SYST MODEL, V14, P953, DOI 10.1007/s10270-013-0350-8
   Scheffczyk J, 2004, International Conference on Computing, Communications and Control Technologies, Vol 2, Proceedings, P308
   Scheffczyk J., 2004, P 2004 ACM S DOC ENG, P137, DOI 10.1145/1030397.1030426
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Van Der Straeten R., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1210, DOI 10.1145/1141277.1141564
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Wang KY, 2018, IEEE INT CONF AUTOM, P577, DOI 10.1145/3238147.3238162
   Wang KY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P103, DOI 10.1109/ICSE-Companion.2019.00049
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 54
TC 3
Z9 3
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 297
EP 329
DI 10.1007/s10270-022-00996-0
EA APR 2022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000777871600001
PM 36844942
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Brunschwig, L
   Guerra, E
   de Lara, J
AF Brunschwig, Lea
   Guerra, Esther
   de Lara, Juan
TI Modelling on mobile devices A systematic mapping study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Modelling tools; Mobile devices; Systematic
   mapping study
AB Modelling is central to many disciplines in engineering and the natural and social sciences. A wide variety of modelling languages and tools have been proposed along the years, traditionally for static environments such as desktops and laptops. However, the availability of increasingly powerful mobile devices makes it possible to profit from their embedded sensors and components (e.g. camera, microphone, GPS, accelerometer, gyroscope) for modelling. This has promoted a new range of modelling tools specially designed for their use in mobility. Such tools open the door to modelling in dynamic scenarios that go beyond the capabilities of traditional desktop tools. For example, modelling in mobility can be useful to design smart factories on-site, or to create models of hiking routes while walking along the routes, among many other scenarios. In this paper, we report on a systematic mapping study to identify the state of the art and trends in modelling on mobile devices. The study covers both research papers and modelling apps from the Android and iOS stores. From this analysis, we derive a classification for mobile modelling tools along three orthogonal dimensions, discuss current gaps, and propose avenues for further research.
C1 [Brunschwig, Lea; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
C3 Autonomous University of Madrid
RP Brunschwig, L (corresponding author), Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
EM lea.brunschwig@uam.es; esther.guerra@uam.es; juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278; Brunschwig, Lea/0000-0003-0128-5370
FU European Union [813884]; Spanish Ministry of Science (project MASSIVE)
   [RTI2018-095255-B-I00]; R&D programme of Madrid (project FORTE)
   [P2018/TCS-4314]; Marie Curie Actions (MSCA) [813884] Funding Source:
   Marie Curie Actions (MSCA)
FX We thank the reviewers for their useful comments. This work has been
   funded by the European Union's Horizon 2020 research and innovation
   programme under the Marie Sklodowska-Curie grant agreement n. 813884
   (Lowcomote [96]), by the Spanish Ministry of Science (project MASSIVE,
   RTI2018-095255-B-I00), and by the R&D programme of Madrid (project
   FORTE, P2018/TCS-4314).
CR Aleksandr, 2020, PUREFLOW
   Alpers S, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON ADVANCED INFORMATION SYSTEMS FOR ENTERPRISES (IWAISE'14), P65, DOI 10.1109/IWAISE.2014.7
   [Anonymous], 2020, MIND VECTOR
   [Anonymous], 2020, CRIBSTER JSON DESIGN
   [Anonymous], 2007, MODELLING MECH ENG M
   [Anonymous], 2020, MINDNODE
   [Anonymous], 2020, MINDMASTER
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2020, KLIM DATABASE DESIGN
   [Anonymous], 2020, MAGICLEAP
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], 2020, MINDOMO
   [Anonymous], 2020, INSPIRATION MAPS
   [Anonymous], 2020, HALNA MIND
   [Anonymous], 2020, MINDMAPPING 3D
   [Anonymous], 2015, OMGS XML METADATA IN
   [Anonymous], 2020, INFORAPID KNOWLEDGEB
   [Anonymous], 2020, MIND MEISTER
   [Anonymous], 2020, GRAPHML
   [Anonymous], 2020, SIMPLEMIND
   [Anonymous], 2011, USER INTERFACE DESCR
   [Anonymous], 2020, MINDLY
   [Anonymous], 2021, IKEA ROOM PLANNER
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], 2020, LEKH DIAGRAM
   [Anonymous], 2017, UML 2 5 1 OMG SPECIF
   [Anonymous], 2020, LUCIDCHART
   [Anonymous], 2012, XML PROCESS DEFINITI
   [Anonymous], 2020, MIMIND
   [Anonymous], 2020, FLOWDIA DIAGRAMS
   [Anonymous], 2020, HOLOLENS
   [Anonymous], 2020, XMIND
   [Anonymous], 2020, ORGCHART
   [Anonymous], 2020, DRAWEXPRESS
   Antunes P, 2014, J SYST SOFTWARE, V89, P146, DOI 10.1016/j.jss.2013.11.1078
   Astah, 2020, UML PAD
   Azuma RT, 1997, PRESENCE-VIRTUAL AUG, V6, P355, DOI 10.1162/pres.1997.6.4.355
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Baloian N., 2011, Proceedings of the 2011 15th International Conference on Computer Supported Cooperative Work in Design (CSCWD), P473, DOI 10.1109/CSCWD.2011.5960115
   BankMyCell, 2021, MANY SMARTPHONES ARE
   Barricelli BR, 2019, J SYST SOFTWARE, V149, P101, DOI 10.1016/j.jss.2018.11.041
   Becker J, 2015, LECT NOTES COMPUT SC, V9073, P361, DOI 10.1007/978-3-319-18714-3_23
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Bergmann G., 2017, 2 INT WORKSH COLL MO, V2019, P135
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brunschwig L., 2020, ACM IEEE 23 INT C MO
   Brunschwig L, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P56, DOI 10.1109/ICSE-NIER52604.2021.00020
   Buchmann Thomas, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P81
   Buchmann Thomas., 2012, ICSOFT 2012 P 7 INT, P147, DOI DOI 10.5220/0004027401470157
   Corley J, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P339
   Danado J, 2014, J VISUAL LANG COMPUT, V25, P297, DOI 10.1016/j.jvlc.2014.03.005
   deSa M., 2009, 11 INT C HUM COMP IN
   Doweling S., 2013, 21 EUR C INF SYST EC, P29
   Francese R, 2017, J VISUAL LANG COMPUT, V38, P1, DOI 10.1016/j.jvlc.2016.10.009
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Gaouar L., 2015, INT C INT INF PROC S, P1
   Grundy J, 2007, SOFTWARE PRACT EXPER, V37, P1245, DOI 10.1002/spe.803
   Grundy JC, 2013, IEEE T SOFTWARE ENG, V39, P487, DOI 10.1109/TSE.2012.33
   Guerra E, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P23, DOI 10.1145/3239372.3239376
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Kammerer K, 2015, INT CONF RES CHAL, P31, DOI 10.1109/RCIS.2015.7128861
   Kang K., 1990, CMUSEI90TR201
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kelly S., 2008, Domain-Specific Modeling
   Korzetz M., 2019, LECT NOTES COMPUTER, V11573, P477
   Lemma R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P439, DOI 10.1109/SANER.2015.7081854
   Li Toby Jia-Jun, 2017, End-User Development. 6th International Symposium, IS-EUD 2017. Proceedings: LNCS 10303, P3, DOI 10.1007/978-3-319-58735-6_1
   López-Fernández JJ, 2019, SOFTW SYST MODEL, V18, P961, DOI 10.1007/s10270-017-0632-7
   López-Jaquero V, 2013, LECT NOTES COMPUT SC, V8118, P210
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Ma Zhiyi, 2014, P 29 ACM IEEE VAST S, P835
   Malan DJ, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P223, DOI 10.1145/1227504.1227388
   Mangano N., 2012, 2012 ACM C COMP SUPP, P45
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Masson C., 2017, ser. CEUR Workshop Proceedings, V2019, P164
   McDirmid S., 2011, P 10 SIGPLAN S NEW I, P61
   Muller T., 2003, Modelling in Natural Science: Design, Validation and Case Studies, DOI 10.1007/978-3-662-05304-1
   Nolte A., 2016, COLLABORATION MEETS, P259, DOI DOI 10.1007/978-3-319-45853
   Oppl S, 2011, LECT NOTES COMPUT SC, V6948, P443, DOI 10.1007/978-3-642-23765-2_31
   Pérez-Soler S, 2018, IEEE SOFTWARE, V35, P48, DOI 10.1109/MS.2018.290101511
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Rabah S, 2018, PROCEDIA MANUF, V17, P460, DOI 10.1016/j.promfg.2018.10.070
   Rachad T, 2020, MOB INF SYST, V2020, DOI 10.1155/2020/6715363
   Ribeiro A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P255, DOI 10.1109/QUATIC.2012.56
   Ritter C, 2015, LECT NOTES COMPUT SC, V9073, P371, DOI 10.1007/978-3-319-18714-3_25
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sebastián-Lombraña A, 2020, EUROMICRO CONF PROC, P150, DOI 10.1109/SEAA51224.2020.00033
   Seifert J., 2011, Proceedings of the 13th International Conference on Human Computer Interaction with Mobile Devices and Services, P109
   Seiger R, 2019, LECT NOTES BUS INF P, V352, P115, DOI 10.1007/978-3-030-20618-5_8
   Sousa V, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P42, DOI 10.1145/3357766.3359539
   Störrle H, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P468, DOI 10.1109/MODELS-C.2019.00075
   Tillmann N., 2012, P ACM SIGSOFT 20 INT, P39
   Tisi M., 2019, STAF 2019 COLOCATED
   Urrego J.S., 2014, LECT NOTES BUS INF P, V179, P302
   Vangheluwe H., 2002, AI, P9
   Vaquero-Melchor D, 2017, COMM COM INF SC, V743, P221, DOI 10.1007/978-3-319-62569-0_11
   Vaquero-Melchor D, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P75, DOI 10.1109/MODELS.2017.13
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wu, 2016, GLOBAL SMARTPHONE US
   Wüest D, 2019, SOFTW SYST MODEL, V18, P1513, DOI 10.1007/s10270-017-0623-8
   Zarwin Z, 2014, J OBJECT TECHNOL, V13, DOI 10.5381/jot.2014.13.3.a4
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhao D., 2006, 7 AUSTR US INT C AUI, V50, P101
   Zhu NP, 2007, J SYST SOFTWARE, V80, P1390, DOI 10.1016/j.jss.2006.10.028
NR 110
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 179
EP 205
DI 10.1007/s10270-021-00897-8
EA JUN 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000668033700001
DA 2024-07-18
ER

PT J
AU Augusto, A
   Dumas, M
   La Rosa, M
   Leemans, SJJ
   vanden Broucke, SKLM
AF Augusto, Adriano
   Dumas, Marlon
   La Rosa, Marcello
   Leemans, Sander J. J.
   vanden Broucke, Seppe K. L. M.
TI Optimization framework for DFG-based automated process discovery
   approaches
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Automated process discovery; Metaheuristic optimization; Process mining
ID ALGORITHM
AB The problem of automatically discovering business process models from event logs has been intensely investigated in the past two decades, leading to a wide range of approaches that strike various trade-offs between accuracy, model complexity, and execution time. A few studies have suggested that the accuracy of automated process discovery approaches can be enhanced by means of metaheuristic optimization techniques. However, these studies have remained at the level of proposals without validation on real-life datasets or they have only considered one metaheuristic in isolation. This article presents a metaheuristic optimization framework for automated process discovery. The key idea of the framework is to construct a directly-follows graph (DFG) from the event log, to perturb this DFG so as to generate new candidate solutions, and to apply a DFG-based automated process discovery approach in order to derive a process model from each DFG. The framework can be instantiated by linking it to an automated process discovery approach, an optimization metaheuristic, and the quality measure to be optimized (e.g., fitness, precision, F-score). The article considers several instantiations of the framework corresponding to four optimization metaheuristics, three automated process discovery approaches (Inductive Miner-directly-follows, Fodina, and Split Miner), and one accuracy measure (Markovian F-score). These framework instances are compared using a set of 20 real-life event logs. The evaluation shows that metaheuristic optimization consistently yields visible improvements in F-score for all the three automated process discovery approaches, at the cost of execution times in the order of minutes, versus seconds for the baseline approaches.
C1 [Augusto, Adriano; La Rosa, Marcello] Univ Melbourne, Melbourne, Vic, Australia.
   [Augusto, Adriano; Dumas, Marlon] Univ Tartu, Tartu, Estonia.
   [Leemans, Sander J. J.] Queensland Univ Technol, Brisbane, Qld, Australia.
   [vanden Broucke, Seppe K. L. M.] UGent, Ghent, Belgium.
   [vanden Broucke, Seppe K. L. M.] Katholieke Univ Leuven, Leuven, Belgium.
C3 University of Melbourne; University of Tartu; Queensland University of
   Technology (QUT); Ghent University; KU Leuven
RP Augusto, A (corresponding author), Univ Melbourne, Melbourne, Vic, Australia.; Augusto, A (corresponding author), Univ Tartu, Tartu, Estonia.
EM a.augusto@unimelb.edu.au
RI La Rosa, Marcello/J-1088-2012; Augusto, Adriano/AAS-9978-2021; Dumas,
   Marlon/H-2757-2015
OI Augusto, Adriano/0000-0001-7970-5246; Dumas, Marlon/0000-0002-9247-7476;
   Leemans, Sander/0000-0002-5201-7125
FU Australian Research Council [DP180102839]; European Research Council
   (PIX Project)
FX We thank Raffaele Conforti for his input to an earlier version of this
   paper. This research is partly funded by the Australian Research Council
   (DP180102839) and the European Research Council (PIX Project).
CR Adriansyah A, 2015, INF SYST E-BUS MANAG, V13, P37, DOI 10.1007/s10257-014-0234-7
   Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   Alizadeh S, 2018, APPL INTELL, V48, P4497, DOI 10.1007/s10489-018-1213-3
   [Anonymous], 1992, ADAPTATION NATURAL A, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Atashpaz-Gargari E, 2007, IEEE C EVOL COMPUTAT, P4661, DOI 10.1109/CEC.2007.4425083
   Augusto A., 2019, BPM
   AUGUSTO A, 2020, IN PRESS
   Augusto A, 2019, KNOWL INF SYST, V59, P251, DOI 10.1007/s10115-018-1214-x
   Augusto A, 2019, IEEE T KNOWL DATA EN, V31, P686, DOI 10.1109/TKDE.2018.2841877
   Augusto A, 2018, DATA KNOWL ENG, V117, P373, DOI 10.1016/j.datak.2018.04.007
   Augusto A, 2018, LECT NOTES COMPUT SC, V11080, P158, DOI 10.1007/978-3-319-98648-7_10
   Bäck T, 1993, EVOL COMPUT, V1, P1, DOI 10.1162/evco.1993.1.1.1
   Boussaïd I, 2013, INFORM SCIENCES, V237, P82, DOI 10.1016/j.ins.2013.02.041
   Buijs J.C.A.M., 2012, On the Move to Meaningful Internet Systems: OTM 2012, P305, DOI DOI 10.1007/978-3-642-33606-5_19
   Burattin A, 2010, IEEE C EVOL COMPUTAT
   deMedeiros A.K, 2006, THESIS EINDOVEN U TE
   Effendi YA, 2017, 2017 3RD INTERNATIONAL CONFERENCE ON SCIENCE IN INFORMATION TECHNOLOGY (ICSITECH), P97, DOI 10.1109/ICSITech.2017.8257092
   Gao DF, 2009, INT C COMP SUPP COOP, P474, DOI 10.1109/CSCWD.2009.4968104
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Kennedy J., 2017, Encyclopedia of Machine Learning and Data Mining, P760
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Leemans SJJ, 2018, SOFTW SYST MODEL, V17, P599, DOI 10.1007/s10270-016-0545-x
   Nurlaili A.L, 2017, 2017 4 ITN C EL ENG, P1
   Paven, 2012, ICCP
   Polyvyanyy A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387909
   Ribeiro J., 2015, ALGORITHMS THEORIES
   Smirnov S, 2010, LECT NOTES COMPUT SC, V6470, P1, DOI 10.1007/978-3-642-17358-5_1
   Song W., 2008, ICYCS
   Stu''tzle T.G., 1998, Local Search Algorithms for Combinatorial Problems: Analysis, Improvements, and New Applications
   Suriadi S, 2017, INFORM SYST, V64, P132, DOI 10.1016/j.is.2016.07.011
   Syring Anja F., 2019, Transactions on Petri Nets and Other Models of Concurrency XIV. Lecture Notes in Computer Science (LNCS 11790), P192, DOI 10.1007/978-3-662-60651-3_8
   Van der Aalst W, 2012, COMMUN ACM, V55, P76, DOI 10.1145/2240236.2240257
   VANDENBROUCKE S, 2017, DECIS SUPPORT SYST, V100, P109, DOI DOI 10.1016/J.DSS.2017.04.005
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Wen L, 2007, DATA MIN KNOWL DISC, V15, P145, DOI 10.1007/s10618-007-0065-y
NR 36
TC 2
Z9 2
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1245
EP 1270
DI 10.1007/s10270-020-00846-x
EA FEB 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000622675800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Challita, S
   Korte, F
   Erbel, J
   Zalila, F
   Grabowski, J
   Merle, P
AF Challita, Stephanie
   Korte, Fabian
   Erbel, Johannes
   Zalila, Faiez
   Grabowski, Jens
   Merle, Philippe
TI Model-based cloud resource management with TOSCA and OCCI
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cloud computing; Standards; OCCI; TOSCA; Model-driven engineering;
   Metamodels; Cloud orchestrator; Models@run; time
AB With the advent of cloud computing, different cloud providers with heterogeneous cloud services (compute, storage, network, applications, etc.) and their related Application Programming Interfaces (APIs) have emerged. This heterogeneity complicates the implementation of an interoperable cloud system. Several standards have been proposed to address this challenge and provide a unified interface to cloud resources. The Open Cloud Computing Interface (OCCI) thereby focuses on the standardization of a common API for Infrastructure-as-a-Service (IaaS) providers, while the Topology and Orchestration Specification for Cloud Applications (TOSCA) focuses on the standardization of a template language to enable the proper definition of the topology of cloud applications and their orchestrations on top of a cloud system. TOSCA thereby does not define how the application topologies are created on the cloud. Therefore, we analyze the conceptual similarities between the two approaches and we study how we can integrate them to obtain a complete standard-based approach to manage both Cloud Infrastructure and Cloud application layers. We propose an automated extensive mapping between the concepts of the two standards, and we provide TOSCA Studio, a model-driven tool chain for TOSCA that conforms to OCCI. TOSCA Studio allows to graphically design cloud applications as well as to deploy and manage them at runtime using a fully model-driven cloud orchestrator based on the two standards. Our contribution is validated by successfully transforming and deploying three cloud applications: WordPress, Node Cellar and Multi-Tier.
C1 [Challita, Stephanie] Univ Rennes 1, Software Engn, Rennes, France.
   [Challita, Stephanie] INRIA, IRISA, Rennes, France.
   [Korte, Fabian; Erbel, Johannes; Grabowski, Jens] Univ Goettingen, Gottingen, Germany.
   [Zalila, Faiez] CETIC, Model Based Engn & Distributed Syst MBEDiS Dept, Charleroi, Belgium.
   [Merle, Philippe] Inria Lille Nord Europe, Lille, France.
   [Merle, Philippe] Univ Lille, Lille, France.
C3 Universite de Rennes; Inria; Universite de Rennes; University of
   Gottingen; Universite de Lille
RP Challita, S (corresponding author), Univ Rennes 1, Software Engn, Rennes, France.; Challita, S (corresponding author), INRIA, IRISA, Rennes, France.
EM stephanie.challita@irisa.fr; Fabian.Korte@cs.uni-goettingen.de;
   Johannes.Erbel@cs.uni-goettingen.de; faiez.zalila@cetic.be;
   Jens.Grabowski@cs.uni-goettingen.de; philippe.merle@inria.fr
OI Challita, Stephanie/0000-0001-7614-7488
FU French Programme d'Investissements d'Avenir (PIA);
   Simulationswissenschaftliches Zentrum Clausthal-Gottingen (SWZ)
FX This work is supported by the OCCI ware research and development project
   funded by French Programme d'Investissements d'Avenir (PIA). We also
   thank the Simulationswissenschaftliches Zentrum Clausthal-Gottingen
   (SWZ) for financial support.
CR Alexander B., 2016, 6 INT C CLOUD COMP S
   Andrikopoulos V, 2014, IEEE INT CONF CLOUD, P697, DOI 10.1109/CLOUD.2014.98
   Andrikopoulos V, 2014, LECT NOTES COMPUT SC, V8745, P148, DOI 10.1007/978-3-662-44879-3_11
   Bergmayr Alexander., 2014, CEUR Workshop Proceedings, V1242, P56
   Boris N., 2016, GFD221
   Brabra H, 2019, IEEE INT CONF CLOUD, P422, DOI 10.1109/CLOUD.2019.00074
   Breitenbucher U., 2012, OTM Confederated International Conferences" On the Move to Meaningful Internet Systems", P416, DOI DOI 10.1007/978-3-642-33606-5_25
   Breitenbücher U, 2014, INT CONF CLOUD ENG, P87, DOI 10.1109/IC2E.2014.56
   Breiter G, 2014, IBM J RES DEV, V58, DOI 10.1147/JRD.2014.2304772
   Carrasco J, 2018, COMPUT STAND INTER, V58, P167, DOI 10.1016/j.csi.2018.01.005
   Carrasco J, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P170, DOI 10.5220/0005804501700177
   Challita S, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P367, DOI 10.1109/CLOUD.2018.00053
   Ernesto, 2014, EUR C SERV OR CLOUD, P278
   Glaser F, 2017, CLOSER: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P644, DOI 10.5220/0006372706720678
   Guillen Joaquin, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P180, DOI 10.1007/978-3-642-40651-5_15
   Hirmer P., 2014, GI-Jahrestagung, P247
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jens, 2018, P 8 INT C CLOUD SERV, V1
   Kamali A, 2014, 2014 7th International Symposium on Telecommunications (IST), P689, DOI 10.1109/ISTEL.2014.7000791
   Kopp O, 2013, LECT NOTES COMPUT SC, V8274, P700, DOI 10.1007/978-3-642-45005-1_64
   Korte F, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P100, DOI 10.5220/0006693001000111
   Loulloudes N, 2015, IEEE INTERNET COMPUT, V19, P54, DOI 10.1109/MIC.2015.60
   Merle, 2019, IEEE T CLOUD COMPUT, V11, P430
   Merle P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P852, DOI 10.1109/CLOUD.2015.117
   Michael, 2019, SICS SOFTW INTENSIVE, P1
   OASIS, 2017, TOPOLOGY ORCHESTRATI
   OASIS, 2014, CLOUD APPL MAN PLATF
   OASIS, 2016, TOSCA SIMPLE PROFILE
   OMG, MDA GUID REV 20 2014
   Paraiso F, 2016, IEEE INT CONF CLOUD, P718, DOI [10.1109/CLOUD.2016.98, 10.1109/CLOUD.2016.0100]
   Ralf N., 2016, OPEN CLOUD COMPUTING
   Robert B.F., 2009, COMPUTER, V42
   Rugaber S, 2004, IEEE SOFTWARE, V21, P45, DOI 10.1109/MS.2004.23
   Song H., 2015, CEUR WORKSHOP P
   Thijs, 2016, OPEN CLOUD COMPUTING
   Uwe B., 2016, EUROPEAN SPACE PROJE, P112
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wettinger J, 2014, INT CONF UTIL CLOUD, P59, DOI 10.1109/UCC.2014.14
   Yangui S, 2016, COMPUT J, V59, P308, DOI 10.1093/comjnl/bxu132
   Zalila Faiez, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P389, DOI 10.1007/978-3-319-69462-7_26
   Zalila F, 2019, FUTURE GENER COMP SY, V99, P260, DOI 10.1016/j.future.2019.04.015
NR 41
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2021
VL 20
IS 5
BP 1609
EP 1631
DI 10.1007/s10270-021-00869-y
EA FEB 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WH9YE
UT WOS:000622214300001
DA 2024-07-18
ER

PT J
AU Visconti, E
   Tsigkanos, C
   Hu, ZJ
   Ghezzi, C
AF Visconti, Ennio
   Tsigkanos, Christos
   Hu, Zhenjiang
   Ghezzi, Carlo
TI Model-driven engineering city spaces via bidirectional model
   transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bidirectional model transformations; Model-driven engineering; CityGML;
   Digital twins
ID SYSTEM; BIM
AB Engineering cyber-physical systems inhabiting contemporary urban spatial environments demands software engineering facilities to support design and operation. Tools and approaches in civil engineering and architectural informatics produce artifacts that are geometrical or geographical representations describing physical spaces. The models we consider conform to the CityGML standard; although relying on international standards and accessible in machine-readable formats, such physical space descriptions often lack semantic information that can be used to support analyses. In our context, analysis as commonly understood in software engineering refers to reasoning on properties of an abstracted model-in this case a city design. We support model-based development, firstly by providing a way to derive analyzable models from CityGML descriptions, and secondly, we ensure that changes performed are propagated correctly. Essentially, a digital twin of a city is kept synchronized, in both directions, with the information from the actual city. Specifically, our formal programming technique and accompanying technical framework assure that relevant information added, or changes applied to the domain (resp. analyzable) model are reflected back in the analyzable (resp. domain) model automatically and coherently. The technique developed is rooted in the theory of bidirectional transformations, which guarantees that synchronization between models is consistent and well behaved. Produced models can bootstrap graph-theoretic, spatial or dynamic analyses. We demonstrate that bidirectional transformations can be achieved in practice on real city models.
C1 [Visconti, Ennio; Tsigkanos, Christos] Tech Univ Wien, Vienna, Austria.
   [Hu, Zhenjiang] Peking Univ, Beijing, Peoples R China.
   [Ghezzi, Carlo] Politecn Milan, Milan, Italy.
C3 Technische Universitat Wien; Peking University; Polytechnic University
   of Milan
RP Tsigkanos, C (corresponding author), Tech Univ Wien, Vienna, Austria.
EM christos.tsigkanos@tuwien.ac.at
OI Tsigkanos, Christos/0000-0002-9493-3404; Visconti,
   Ennio/0000-0002-1146-4850
FU FWF Austria projects "High-dimensional statistical learning: New methods
   to advance economic and sustainability policies" [M 2778-N, LogiCS DK
   W1255-N23]
FX Research partially supported by FWF Austria projects "High-dimensional
   statistical learning: New methods to advance economic and sustainability
   policies" (ZK 35), "EDENSPACE" (M 2778-N), and by the LogiCS DK
   W1255-N23. We kindly acknowledge cloud usage from the Amazon AWS Credits
   for Research program.
CR AAMODT A, 1994, AI COMMUN, V7, P39
   Abdelmegid MA, 2015, ALEX ENG J, V54, P519, DOI 10.1016/j.aej.2015.05.011
   Abou-Saleh Faris, 2016, A List of Successes that can Change the World. Essays Dedicated to Philip Wadler on the Occasion of his 60th Birthday. LNCS 9600, P1, DOI 10.1007/978-3-319-30936-1_1
   Abou-Saleh Faris, 2018, Lecture Notes in Computer Science, V9715, P1, DOI [10.1007/978-3-319-79108-1_1, DOI 10.1007/978-3-319-79108-1_1]
   Ahmed S, 2014, PATTERN RECOGN LETT, V35, P91, DOI 10.1016/j.patrec.2013.04.005
   Alam N, 2013, URBAN AND REGIONAL DATA MANAGEMENT, P191
   Anjorin A, 2020, SOFTW SYST MODEL, V19, P647, DOI 10.1007/s10270-019-00752-x
   [Anonymous], 2013, SIG3D CITYGML 3 0 RE
   Aydar SA, 2016, INT ARCH PHOTOGRAMM, V41, P79, DOI 10.5194/isprsarchives-XLI-B2-79-2016
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Bartocci E, 2017, MEMOCODE 2017: PROCEEDINGS OF THE 15TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P147, DOI 10.1145/3127041.3127050
   Biljecki Filip, 2018, Open Geospatial Data, Software and Standards, V3, DOI 10.1186/s40965-018-0055-6
   Biljecki F, 2015, ISPRS INT GEO-INF, V4, P2842, DOI 10.3390/ijgi4042842
   Brambilla M., 2012, MODEL DRIVEN SOFTWAR, DOI [10.1007/978-3-031-02546-4, DOI 10.1007/978-3-031-02546-4]
   Buchmann T, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P336, DOI 10.5220/0006563503360345
   Clarke EM, 1999, MODEL CHECKING, P1
   Consortium, 2012, CITY GEOGRAPHY MARKU
   Conte D, 2004, INT J PATTERN RECOGN, V18, P265, DOI 10.1142/S0218001404003228
   DeBusk W, 2010, INF AER C AM I AER A, DOI 10.2514/6.2010-3506
   Eastman C., 2011, BIM HDB GUIDE BUILDI
   EATON C, 2016, AEROSPACE
   Feng BL, 2015, 2015 INTERNATIONAL CONFERENCE ON NETWORK AND INFORMATION SYSTEMS FOR COMPUTERS (ICNISC), P358, DOI 10.1109/ICNISC.2015.145
   Filip Biljecki K.H.H, 2017, CITYGML OPEN DATA IN
   Greiner S, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P15
   Group, 2013, 20130601 OMG
   Hermann F, 2011, LECT NOTES COMPUT SC, V6981, P668, DOI 10.1007/978-3-642-24485-8_49
   Irizarry J, 2012, J INF TECHNOL CONSTR, V17, P351
   KO H, 2017, PROC ACM PROGRAM LAN
   Ko HS., 2018, LECT NOTES COMPUT SC, P100, DOI 10.1007/978-3-319-79108-1_4
   Ko HS, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P61, DOI 10.1145/2847538.2847544
   Kolbe ThomasH., 2005, Geo-information for Disaster Management
   Krogstie, 2018, EDBT
   Kutzner T, 2020, PFG-J PHOTOGRAMM REM, V88, P43, DOI 10.1007/s41064-020-00095-z
   KWAN M., 2005, COMPUT ENV URBAN SYS, V29, P93, DOI [DOI 10.1016/J.COMPENVURBSYS.2003.08.002, j.compenvurbsys.2003.08.002]
   Langenhan C, 2013, ADV ENG INFORM, V27, P413, DOI 10.1016/j.aei.2013.04.005
   Lano K, 2019, IEEE ACCESS, V7, P5222, DOI 10.1109/ACCESS.2018.2889399
   Macedo N, 2013, LECT NOTES COMPUT SC, V7793, P297, DOI 10.1007/978-3-642-37057-1_22
   Milner R., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P16
   Milner R., 2009, SPACE MOTION COMMUNI, DOI DOI 10.1017/CBO9780511626661
   Ministeriumfuar Wirtschaft Innovation D.u.E.d.L.N.W., 2017, NORDRHEIN WESTFALEN
   Muanchen T, 2015, 3D CITY MODEL NEW YO
   Ohori KA, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7080311
   Pacheco H, 2014, PEPM '14: PROCEEDINGS OF THE ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P39, DOI 10.1145/2543728.2543737
   Porter S, 2014, AUTOMAT CONSTR, V40, P84, DOI 10.1016/j.autcon.2013.12.002
   Pratt T. W., 1971, Journal of Computer and System Sciences, V5, P560, DOI 10.1016/S0022-0000(71)80016-8
   Revit, 2018, REVIT PRODUCTS 2018
   SANKOFF D, 1972, P NATL ACAD SCI USA, V69, P4, DOI 10.1073/pnas.69.1.4
   Saran, 2017, ISG J GEOMATICS
   Saran S, 2018, J INDIAN SOC REMOTE, V46, P957, DOI 10.1007/s12524-018-0755-5
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Schwabe, 2016, P 33 ISARC AUB AL US, DOI 10.22260/ISARC2016/0026
   Soon K. H., 2017, INT ARCH PHOTOGRAMME, V42, P37, DOI DOI 10.5194/ISPRS-ARCHIVES-XLII-4-W7-37-2017
   Stadtverlassung M.W.M., 2019, GEN ROOF MODEL CATAL
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Stevens P., 2018, BIDIRECTIONAL TRANSF, DOI 10.1007/978-3-319-79108-1
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stouffs R, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7090355
   Teramoto Y, 2012, P 4 ACM SIGSPATIAL I, DOI [10.1145/2442616.2442623, DOI 10.1145/2442616.2442623]
   Tsigkanos, 2020, P 35 INT C AUT SOFTW
   Tsigkanos C, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P100, DOI 10.1109/SEAMS.2019.00021
   Tsigkanos C, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P13, DOI 10.1145/3196478.3196485
   Tsigkanos C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3106237.3106299
   Tsigkanos C, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P1, DOI [10.1109/SEsCPS.2016.009, 10.1145/2897035.2897042]
   Tsigkanos C, 2016, COMPUTING, V98, P1011, DOI 10.1007/s00607-016-0509-6
   van Nederveen G. A., 1992, Automation in Construction, V1, P215, DOI 10.1016/0926-5805(92)90014-B
   Visconti E, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P45, DOI 10.1109/MODELS.2019.00-16
   Wagner, 2014, THESIS U PENNSYLVANI
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
   Wessel R, 2008, WSCG 2008, FULL PAPERS, P73
   Zhu JX, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7020066
NR 71
TC 7
Z9 7
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 2003
EP 2022
DI 10.1007/s10270-020-00851-0
EA FEB 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000618190500001
PM 34924920
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wu, H
   Farrell, M
AF Wu, Hao
   Farrell, Marie
TI A formal approach to finding inconsistencies in a metamodel
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Metamodel; Conflicts; SMT
ID OCL CONSTRAINTS; MODELS; UML
AB Checking the consistency of a metamodel involves finding a valid metamodel instance that provably meets the set of constraints that are defined over the metamodel. These constraints are often specified in Object Constraint Language. Often, a metamodel is inconsistent due to conflicts among the constraints. Existing approaches and tools are typically incapable of pinpointing the conflicting constraints, and this makes it difficult for users to debug and fix their metamodels. In this paper, we present a formal approach for locating conflicting constraints in inconsistent metamodels. Our approach has four distinct features: (1) users can rank individual metamodel features using their own domain-specific knowledge, (2) we transform these ranked features to a weighted maximum satisfiability modulo theories problem and solve it to compute the set of maximum achievable features, (3) we pinpoint the conflicting constraints by solving the set cover problem using a novel algorithm, and (4) we have implemented our approach into a fully automated tool called MaxUSE. Our evaluation results, using our assembled set of benchmarks, demonstrate the scalability of our work and that it is capable of efficiently finding conflicting constraints.
C1 [Wu, Hao] Maynooth Univ, Comp Sci Dept, Maynooth, Kildare, Ireland.
   [Farrell, Marie] Univ Manchester, Comp Sci Dept, Manchester, Lancs, England.
C3 Maynooth University; University of Manchester
RP Wu, H (corresponding author), Maynooth Univ, Comp Sci Dept, Maynooth, Kildare, Ireland.
EM haowu@cs.nuim.ie; marie.farrell@manchester.ac.uk
RI Farrell, Marie/GVR-7233-2022
OI Farrell, Marie/0000-0001-7708-3877; Wu, Hao/0000-0001-5010-4746
FU UK Research and Innovation; EPSRC Hubs for Robotics and AI in Hazardous
   Environments [EP/R026092]; ISCF [EP/R026092/1] Funding Source: UKRI
FX This work was partially supported by UK Research and Innovation, and
   EPSRC Hubs for Robotics and AI in Hazardous Environments: EP/R026092
   (FAIR-SPACE).
CR Ahrendt W, 2007, LECT NOTES COMPUT SC, V4468, P32
   Alon Noga, 2003, Proceedings of the thirty-fifth annual ACM symposium on Theory of computing, P100
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2009, ELECT COMMUN EUR ASS
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Brucker AD, 2009, ACTA INFORM, V46, P255, DOI 10.1007/s00236-009-0093-8
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot J, 2009, LECT NOTES COMPUT SC, V5423, P40
   Cadoli D., 2004, INT WORKSH DESCR LOG
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Calvanese D, 1996, MOR KAUF R, P292
   Chen TL, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290362
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Cimatti A, 2010, LECT NOTES COMPUT SC, V6015, P99, DOI 10.1007/978-3-642-12002-2_8
   Dania C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P65, DOI 10.1145/2976767.2976774
   Dania Carolina., 2013, OCL@MoDELS, CEUR Workshop Proceedings, V1092, P53
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Drechsler, 2011, 8 INT WORKSH MOD DRI
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   El Ghazi Aboubakr Achraf, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P133, DOI 10.1007/978-3-642-21437-0_12
   Farré C, 2005, DATA KNOWL ENG, V53, P163, DOI 10.1016/j.datak.2004.08.002
   Feige U, 1998, J ACM, V45, P634, DOI 10.1145/285055.285059
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Garis A, 2011, LECT NOTES COMPUT SC, V7041, P221, DOI 10.1007/978-3-642-24690-6_16
   Gheyi R., 2005, ASE
   Giacomo G.D., 2003, INT WORKSH DESCR LOG
   Gogolla Martin, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P115, DOI 10.1007/978-3-642-38916-0_7
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   GULWANI S, 2011, 32 C PROGR LANG DES, P62
   Hao Wu, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P348, DOI 10.1007/978-3-319-66845-1_23
   Harris WR, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P71, DOI 10.1145/1706299.1706309
   Hoffmann B., 2011, 3 INT WORKSH GRAPH C
   Hoffmann Berthold., 2010, Electronic Communications of the EASST, V29, P1
   Holík L, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158092
   ILOG, 2002, ILOG OPL STUDIO SYST
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jangda A, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P78, DOI 10.1145/3133850.3133856
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Karp Richard M, 1972, COMPLEXITY COMPUTER, P85, DOI DOI 10.1007/978-1-4684-2001-2_9
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   Kuhlmann M., 2012, P 15 INT C MODEL DRI, V7590, P415, DOI DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Kyas M, 2005, ELECTRON NOTES THEOR, V115, P39, DOI 10.1016/j.entcs.2004.09.027
   Li Y, 2014, ACM SIGPLAN NOTICES, V49, P607, DOI 10.1145/2535838.2535857
   Liang TY, 2016, FORM METHOD SYST DES, V48, P206, DOI 10.1007/s10703-016-0247-6
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Maraee A, 2014, LECT NOTES COMPUT SC, V8767, P235, DOI 10.1007/978-3-319-11653-2_15
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Niemetz A., 2015, Journal of Satisfiability, Boolean Modeling and Computation (JSAT), V9, P53
   Nieuwenhuis R, 2006, LECT NOTES COMPUT SC, V4121, P156
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Przigoda N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P261, DOI 10.1145/2976767.2976780
   Przigoda N, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P176, DOI 10.1109/MODELS.2015.7338248
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   Rashid A., 2010, DOMAIN SPECIFIC META, P334
   Reynolds A, 2018, LECT NOTES COMPUT SC, V10806, P112, DOI 10.1007/978-3-319-89963-3_7
   Reynolds A, 2017, FORM METHOD SYST DES, V51, P500, DOI 10.1007/s10703-017-0290-y
   Reynolds A, 2015, LECT NOTES COMPUT SC, V9207, P198, DOI 10.1007/978-3-319-21668-3_12
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Soeken M, 2011, DES AUT TEST EUROPE, P1077
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tinelli C, 2010, INT WORKSH SAT MOD T
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Wille R, 2012, DES AUT TEST EUROPE, P1078
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Wu, 2019, 34 ACM SIGAPP S APPL
   Wu H., 2013, 7 INT S THEOR ASP SO
   Wu H, 2018, LECT NOTES COMPUT SC, V10748, P356, DOI 10.1007/978-3-319-74730-9_31
   Wu H, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P40
   Wu H, 2017, LECT NOTES COMPUT SC, V10376, P179, DOI 10.1007/978-3-319-61482-3_11
NR 84
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1271
EP 1298
DI 10.1007/s10270-020-00849-8
EA JAN 2021
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000612879300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Troya, J
   Moreno, N
   Bertoa, MF
   Vallecillo, A
AF Troya, Javier
   Moreno, Nathalie
   Bertoa, Manuel F.
   Vallecillo, Antonio
TI Uncertainty representation in software models: a survey
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software models; Uncertainty; Modeling languages; UML; Systematic
   literature review
ID CYBER-PHYSICAL SYSTEMS; FUZZY UML MODELS; SEQUENCE DIAGRAMS; RELATIONAL
   DATABASES; DESCRIPTION LOGIC; EXTENDING UML; PETRI NETS; FRAMEWORK;
   REQUIREMENTS; INFORMATION
AB This paper provides a comprehensive overview and analysis of research work on how uncertainty is currently represented in software models. The survey presents the definitions and current research status of different proposals for addressing uncertainty modeling and introduces a classification framework that allows to compare and classify existing proposals, analyze their current status and identify new trends. In addition, we discuss possible future research directions, opportunities and challenges.
C1 [Troya, Javier] Univ Seville, SCORE Lab, Inst I3US, Seville, Spain.
   [Moreno, Nathalie; Bertoa, Manuel F.; Vallecillo, Antonio] Univ Malaga, ITIS Software, Malaga, Spain.
C3 University of Sevilla; Universidad de Malaga
RP Troya, J (corresponding author), Univ Seville, SCORE Lab, Inst I3US, Seville, Spain.
EM jtroya@us.es; moreno@lcc.uma.es; bertoa@lcc.uma.es; av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Bertoa, Manuel F./K-6855-2012; Troya,
   Javier/B-6951-2017
OI Vallecillo, Antonio/0000-0002-8139-9986; MORENO VERGARA,
   NATHALIE/0000-0001-9470-0283; Bertoa, Manuel F./0000-0002-0950-5019;
   Troya, Javier/0000-0002-1314-9694
FU European Commission (FEDER); Spanish Government [US-1264651,
   RTI2018-101204-B-C21, P18-FR-2895, PGC2018-094905-B-I00]
FX We would like to thank the reviewers of the paper for their insightful
   comments and very valuable suggestions, which helped us significantly to
   improve this work. Many thanks also to the authors of the cited papers
   and to other members of the community who kindly provided comments and
   feedback on earlier drafts of this paper. This work is partially
   supported by the European Commission (FEDER) and the Spanish Government
   under projects APOLO (US-1264651), HORATIO (RTI2018-101204-B-C21),
   EKIPMENT-PLUS (P18-FR-2895) and COSCA (PGC2018-094905-B-I00).
CR Agli H, 2016, LECT NOTES COMPUT SC, V9718, P53, DOI 10.1007/978-3-319-42019-6_4
   Albers A, 2013, PROCEDIA COMPUT SCI, V16, P353, DOI 10.1016/j.procs.2013.01.037
   Alevizos E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3117809
   Ali S, 2015, 2015 15TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P62, DOI 10.1109/ICCSA.2015.11
   [Anonymous], 2015, ISO 9000
   [Anonymous], 2007, P COMPSYSTECH 07, DOI DOI 10.1145/1330598.1330726
   [Anonymous], 2013, TUM ANG REG
   [Anonymous], 2007, P 21 INT PAR DISTR P, DOI DOI 10.1109/IPDPS.2007.370524
   [Anonymous], 2016, PROC 5 INT WORKSHOP
   Association for Computing Machinery, 2012, ACM COMP CLASS SYST
   Bagheri E, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P357, DOI 10.1109/ASWEC.2008.44
   Bagheri E, 2009, J SYST SOFTWARE, V82, P707, DOI 10.1016/j.jss.2008.10.012
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Baresi L., 2010, 2010 18 IEEE INT REQ, DOI 10.1109/re.2010.25
   Bernardi S., 2013, Model-Driven dependability assessment of software systems
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bertoa MF, 2018, LECT NOTES COMPUT SC, V10890, P46, DOI 10.1007/978-3-319-92997-2_4
   Bertoa MF, 2019, SOFTW SYST MODEL
   BIPM, 2008, GUM series of JCGM
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blanco IJ, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P2323, DOI 10.1109/NAFIPS.2001.944435
   Bosc P, 2010, INT J UNCERTAIN FUZZ, V18, P565, DOI 10.1142/S0218488510006702
   Brambilla M., 2017, P MODELS 2017 SATELL, V2019, P435
   Bruns G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P274
   Bucaioni A, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P173, DOI 10.1109/SEAA.2016.32
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Büttner F, 2014, SCI COMPUT PROGRAM, V92, P162, DOI 10.1016/j.scico.2013.10.003
   Burgueño L, 2019, IEEE ACM INT WORKS M, P19, DOI 10.1109/MiSE.2019.00011
   Burgueño L, 2019, INFORM SOFTWARE TECH, V113, P82, DOI 10.1016/j.infsof.2019.05.006
   Burgueño L, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P23, DOI 10.1145/3196558.3196562
   Burgueño L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P57, DOI 10.1145/3239372.3239394
   Cámara J, 2018, SCI COMPUT PROGRAM, V167, P51, DOI 10.1016/j.scico.2018.07.002
   Camara Javier, 2017, Technical Report CMUISR- 17-110
   Chang E, 2005, THIRD INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND APPLICATIONS, VOL 1, PROCEEDINGS, P4
   Chechik M, 2019, LECT NOTES COMPUT SC, V11424, P3, DOI 10.1007/978-3-030-16722-6_1
   Chen M, 2015, INT C INTEL HUM MACH, P334, DOI 10.1109/IHMSC.2015.170
   Chen X, 2017, J INTELL FUZZY SYST, V33, P2727, DOI 10.3233/JIFS-169322
   Chen X, 2017, IEEE ACCESS, V5, P17975, DOI 10.1109/ACCESS.2017.2745540
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cheng S.W., 2007, P IWLU ASE 07
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Console M, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P592
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Cova TJ, 2002, INT J GEOGR INF SCI, V16, P509, DOI 10.1080/13658810210137040
   Crossland R, 2003, RES ENG DES, V14, P173, DOI 10.1007/S00163-003-0039-z
   D'Emilia G., 2015, P ICSOFT EA 15, V1, P1, DOI [10.5220/0005499402690276, DOI 10.5220/0005499402690276]
   Dajsuren Yanja, 2019, Automotive Systems and Software Engineering State of the Art and Future Trends, DOI [DOI 10.1007/978-3-030-12157-0, 10.1007/978-3-030-12157-0]
   Darwiche A, 2009, MODELING AND REASONING WITH BAYESIAN NETWORKS, P1, DOI 10.1017/CBO9780511811357
   de Finetti Bruno, 2017, Theory of Probability: A critical introductory treatment
   DESOTO AR, 2003, MATHWARE SOFT COMPUT, V10, P43
   Dong QC, 2012, J SYST ENG ELECTRON, V23, P78, DOI 10.1109/JSEE.2012.00011
   DUGAN JB, 1992, IEEE T RELIAB, V41, P363, DOI 10.1109/24.159800
   Eramo R., 2016, P COMMITMDE MODELS, P27
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Esfahani N, 2013, IEEE T SOFTWARE ENG, V39, P1467, DOI 10.1109/TSE.2013.37
   Esfahani N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P43, DOI 10.1109/ICSE.2013.6606550
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Famelis M, 2019, SOFTW SYST MODEL, V18, P1249, DOI 10.1007/s10270-017-0594-9
   Famelis M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P93, DOI 10.1109/MODELS.2017.3
   Famelis M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MiSE.2013.6595289
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Feller W., 1991, An introduction to probability theory and its applications, V2
   García-Valls M, 2018, J SYST SOFTWARE, V144, P559, DOI 10.1016/j.jss.2018.06.044
   Garlan David, 2010, P FSE SDP WORKSH FUT, P125, DOI [10.1145/1882362.1882389, DOI 10.1145/1882362.1882389]
   Garousi Vahid, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P92, DOI 10.1109/ICST.2008.7
   Garredu S, 2010, 22ND EUROPEAN MODELING AND SIMULATION SYMPOSIUM (EMSS 2010), P215
   Giese Holger, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P47
   Gnesi S, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P55, DOI 10.1109/HASE.2000.895442
   GOGOLLA M, 2019, J OBJECT TECHNOL, V18, P6
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Greengard S., 2015, MIT PRESS ESSENTIAL, DOI DOI 10.7551/MITPRESS/10277.001.0001
   Hack PD, 2012, IEEE T INSTRUM MEAS, V61, P2116, DOI 10.1109/TIM.2012.2193694
   Hacks S, 2018, IEEE INT ENTERP DIST, P51, DOI 10.1109/EDOC.2018.00017
   Hall B.D, 2020, GUM TREE CALCULATOR
   Hall BD, 2006, COMPUT STAND INTER, V28, P306, DOI 10.1016/j.csi.2005.07.009
   Hall BD, 2018, INTRO MEASUREMENT UN
   Han DS, 2016, INFORM SOFTWARE TECH, V76, P118, DOI 10.1016/j.infsof.2016.04.014
   Han DS, 2014, CHIN CONT DECIS CONF, P2400, DOI 10.1109/CCDC.2014.6852575
   Hanss M., 2005, Applied fuzzy arithmetic, DOI [DOI 10.1007/B138914, 10.1007/b138914]
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Hariri RH, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0206-3
   Haroonabadi A, 2008, ICIT 2008: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, P238, DOI 10.1109/ICIT.2008.24
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   Howard R, 2005, Decision Analysis, V2, P127, DOI [10.1287/deca.1050.0020, DOI 10.1287/DECA.1050.0020]
   Hua GD, 2018, CHIN INT CONF ELECTR, P24, DOI 10.1109/CICED.2018.8592179
   HUMPHREY WS, 1988, IEEE SOFTWARE, V5, P73, DOI 10.1109/52.2014
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Islam F, 2015, LECT NOTES COMPUT SC, V9272, P65, DOI 10.1007/978-3-319-23267-6_5
   Jiménez-Ramírez A, 2015, INFORM SOFTWARE TECH, V57, P571, DOI 10.1016/j.infsof.2014.06.006
   Johnson P, 2014, INF SYST E-BUS MANAG, V12, P567, DOI 10.1007/s10257-014-0237-4
   Johnson P, 2014, INF SYST E-BUS MANAG, V12, P595, DOI 10.1007/s10257-014-0241-8
   Josang A, 2016, ARTIF INTELL-FOUND, P1, DOI 10.1007/978-3-319-42337-1
   Karkhanis P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P148, DOI 10.1109/ICSA-C.2018.00044
   Khalfi B., 2015, CEUR WORKSHOP P, V1535, P297
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kiureghian AD, 2009, STRUCT SAF, V31, P105, DOI 10.1016/j.strusafe.2008.06.020
   Koehler H, 2014, LECT NOTES COMPUT SC, V8824, P108, DOI 10.1007/978-3-319-12206-9_9
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kwon Y, 1996, P AIS 1996, P227
   Laghouaouta Y, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1595, DOI 10.1145/3341105.3373971
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lebigot E.O., 2017, Uncertainties: a Python package for calculations with uncertainties
   Lee Edward A., 2018, Formal Aspects of Component Software. 15th International Conference (FACS 2018). Proceedings: Lecture Notes in Computer Science (LNCS 11222), P3, DOI 10.1007/978-3-030-02146-7_1
   Li LL, 2020, FRONT COMPUT SCI-CHI, V14, P162, DOI 10.1007/s11704-017-7063-z
   LIU BD, 2018, UNCERTAINTY THEORY
   LOONEY CG, 1988, IEEE T SYST MAN CYB, V18, P178, DOI 10.1109/21.87067
   Lopez-Landa R., 2012, P SPRINGSIM 12, P41
   Ma T, 2019, SOFTWARE QUAL J, V27, P615, DOI 10.1007/s11219-018-9437-3
   Ma Z., 2006, FUZZY ER EER UML DAT, P59, DOI [10.1007/11353270_4, DOI 10.1007/11353270_4]
   Ma ZM, 2007, DATA KNOWL ENG, V63, P972, DOI 10.1016/j.datak.2007.06.003
   Ma ZM, 2012, FUZZY SET SYST, V186, P26, DOI 10.1016/j.fss.2011.06.015
   Ma ZM, 2011, APPL SOFT COMPUT, V11, P4236, DOI 10.1016/j.asoc.2011.03.020
   Ma ZM, 2011, EXPERT SYST APPL, V38, P2536, DOI 10.1016/j.eswa.2010.08.042
   Ma ZM, 2010, J INF SCI ENG, V26, P427
   Ma ZM, 2014, STUD FUZZ SOFT COMP, V306, P99, DOI 10.1007/978-3-642-39283-2_5
   Ma ZM, 2006, STUD FUZZ SOFT COMP, V203, P123
   Maccaferri L., 2017, USING ZOTERO CONVERT
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Man Zhang, 2019, Software & Systems Modeling, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Manzano Miguel Angel, 2018, DICTOMAGRED DICCIONA
   Marsan M.A., 1995, MODELLING GEN STOCHA
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Martin-Rodilla P, 2019, TEEM'19: SEVENTH INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ECOSYSTEMS FOR ENHANCING MULTICULTURALITY, P788, DOI 10.1145/3362789.3362833
   Martin-Rodilla P, 2019, INFORMATICS-BASEL, V6, DOI 10.3390/informatics6020020
   Martin-Rodilla P, 2018, SIXTH INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ECOSYSTEMS FOR ENHANCING MULTICULTURALITY (TEEM'18), P863, DOI 10.1145/3284179.3284318
   Mayerhofer T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P118, DOI 10.1145/2997364.2997376
   McKeever S, 2009, LECT NOTES COMPUT SC, V5786, P65, DOI 10.1007/978-3-642-04559-2_6
   Menghi C, 2019, FORM ASP COMPUT, V31, P459, DOI 10.1007/s00165-019-00484-1
   Moon SI, 2004, IEEE T SYST MAN CY B, V34, P1045, DOI 10.1109/TSMCB.2003.819485
   Moreno GA, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P51, DOI 10.1145/3194133.3194144
   Moreno N, 2019, IEEE ACCESS, V7, P88026, DOI 10.1109/ACCESS.2019.2923953
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P17, DOI 10.1007/s10270-015-0493-x
   Motameni H., 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P520, DOI 10.1109/ICSESS.2011.5982367
   Nasiri R, 2004, J SUPERCOMPUT, V29, P287, DOI 10.1023/B:SUPE.0000032782.92290.52
   Neuberg LG, 2003, ECONOMET THEOR, V19, P675, DOI 10.1017/S026646603004109
   Novak P., 2009, LNCS, V5919, P67, DOI [10.1007/978-3-642-14843-9_5, DOI 10.1007/978-3-642-14843-9_5]
   Oberkampf WL, 2002, RELIAB ENG SYST SAFE, V75, P333, DOI 10.1016/S0951-8320(01)00120-X
   Object Management Group, 2018, 180501 SMM OMG
   Object Management Group, 2019, 190401 OMG
   Object Management Group, 2005, 050102 OMG
   Object Management Group, 2015, 150205 OMG
   Object Management Group, 2013, 130403 OMG
   Object Management Group, 2018, 181201 OMG
   Object Management Group, 2017, 2017121 OMG
   Object Management Group, 2019, 191101 OMG
   Oquendo F, 2019, 2019 14TH ANNUAL CONFERENCE SYSTEM OF SYSTEMS ENGINEERING (SOSE), P131, DOI [10.1109/sysose.2019.8753842, 10.1109/SYSOSE.2019.8753842]
   Ortiz V, 2019, CEUR P, V2513, P59
   OTHMAN NA, 2015, COMPUTER INFORM SCI, V8, P119, DOI DOI 10.5539/CIS.V8N3P119
   Ozgur NB, 2009, FUZZY SET SYST, V160, P2253, DOI 10.1016/j.fss.2009.02.017
   Pearl J., 1994, Uncertainty in Artificial Intelligence. Proceedings of the Tenth Conference (1994), P454
   Perez-Palacin Diego, 2014, 5 ACMSPEC INT C PERF, V14, P3
   Pivert O, 2018, LECT NOTES ARTIF INT, V11142, P396, DOI 10.1007/978-3-030-00461-3_30
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Rausand M, 2011, STAT PRACT, P1, DOI 10.1002/9781118281116
   Refsdal A, 2008, THESIS
   Refsdal A, 2008, INT FED INFO PROC, V263, P33
   Refsdal A, 2006, LECT NOTES COMPUT SC, V4037, P138
   Refsdal A, 2015, J COMPUT SYST SCI, V81, P1221, DOI 10.1016/j.jcss.2015.03.003
   Refsdal A, 2008, SCI COMPUT PROGRAM, V74, P34, DOI 10.1016/j.scico.2008.09.003
   Rinderknecht SL, 2012, ENVIRON MODELL SOFTW, V36, P122, DOI 10.1016/j.envsoft.2011.07.022
   Robak S, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P305
   Runde RK, 2013, FORM ASP COMPUT, V25, P159, DOI 10.1007/s00165-011-0192-5
   Russell S., 2016, Artificial intelligence a modern approach
   Sadegh-Zadeh K, 2012, STUD FUZZ SOFT COMP, V273, P141
   SALAY R, 2015, J OBJECT TECHNOL, V14, pNIL70
   Salay R, 2015, LECT NOTES COMPUT SC, V9033, P133, DOI 10.1007/978-3-662-46675-9_9
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Salay R, 2013, LECT NOTES COMPUT SC, V7793, P21, DOI 10.1007/978-3-642-37057-1_3
   Salih AM, 2018, COMM COM INF SC, V809, P164, DOI 10.1007/978-981-10-7796-8_13
   Saltelli A., 2008, Global Sensitivity Analysis: The Primer, DOI DOI 10.1002/9780470725184
   Saoud Z, 2016, J SYST SOFTWARE, V122, P496, DOI 10.1016/j.jss.2015.09.040
   Sedaghatbaf A, 2018, IET SOFTW, V12, P236, DOI 10.1049/iet-sen.2017.0077
   Seely AJE, 2004, CRIT CARE, V8, pR367, DOI 10.1186/cc2948
   Selic B, 2015, P MODELSWARD 2015 PE, pIS
   Senaratne H, 2012, LECT NOTES GEOINF CA, P3, DOI 10.1007/978-3-642-29063-3_1
   Shafer G., 1976, MATH THEORY EVIDENCE, DOI DOI 10.1515/9780691214696
   Sheng J, 2019, ADV INTELL SYST COMP, V1000, P589, DOI 10.1007/978-3-030-21920-8_52
   Shengling Geng, 2017, 2017 13th International Conference on Natural Computation, Fuzzy Systems and Knowledge Discovery (ICNC-FSKD), P1491, DOI 10.1109/FSKD.2017.8392986
   Shin SY, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P357, DOI 10.1145/3239372.3239382
   Shokravi S, 2014, ENVIRON MODELL SOFTW, V60, P1, DOI 10.1016/j.envsoft.2014.05.024
   Sibay GE, 2013, IEEE T SOFTWARE ENG, V39, P975, DOI 10.1109/TSE.2012.62
   Sicilia M.-A., 2004, WSEAS Transactions on Systems, V3, P2234
   Sicilia MA, 2002, 2002 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY PROCEEDINGS, P268, DOI 10.1109/NAFIPS.2002.1018068
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Stephenson Z, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P111, DOI 10.1007/978-3-642-21001-3_8
   Thomas O, 2010, STUD FUZZ SOFT COMP, V255, P227, DOI 10.1007/978-3-642-14010-5_9
   Thornton A, 2000, J CLIN EPIDEMIOL, V53, P207, DOI 10.1016/S0895-4356(99)00161-4
   Thunnissen DanielP., 2003, 3rd annual predictive methods conference, P1
   Troegner D., 2010, GI JAHRESTAGUNG, VP-176, P705
   Troya J., 2020, REPRESENTING UNCERTA
   Tseng C, 2005, COMPUT STAND INTER, V28, P218, DOI 10.1016/j.csi.2004.11.005
   Tudoroiu E-R, 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P763
   Tumeo MarkA., 1994, Stochastic_and_Statistical_Methods_in_Hydrology_and_Environmental_Engineering, P33, DOI [10.1007/978-94-011-1072-3_3, DOI 10.1007/978-94-011-1072-3_3]
   Turowski K, 2002, KNOWL-BASED SYST, V15, P67, DOI 10.1016/S0950-7051(01)00122-8
   Ubayashi N, 2019, COMM COM INF SC, V1077, P220, DOI 10.1007/978-3-030-29157-0_10
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   Vallecillo A, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P15, DOI [10.1109/QUATIC.2016.013, 10.1109/QUATIC.2016.11]
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vanherpen Ken, 2014, CEUR WORKSH P, V1340, P42
   Voudouris V, 2005, LECT NOTES COMPUT SC, V3762, P1056
   Voudouris V., 2006, CAPTURING REPRESENTI, P755, DOI [10.1007/3-540-35589-8_47, DOI 10.1007/3-540-35589-8_47]
   Voudouris V, 2010, INT J GEOGR INF SCI, V24, P1811, DOI 10.1080/13658816.2010.488237
   Walker W., 2003, Integr. Assessment, V4, P5, DOI [10.1076/iaij.4.1.5.16466, DOI 10.1076/IAIJ.4.1.5.16466]
   Wang YH, 2013, COMPUT MATH APPL, V66, P1808, DOI 10.1016/j.camwa.2013.06.032
   Wang YJ, 2013, KNOWL INF SYST, V37, P485, DOI 10.1007/s10115-013-0638-6
   Wang Y, 2019, IEEE ACCESS, V7, P45405, DOI 10.1109/ACCESS.2019.2908224
   Webster J, 2002, MIS QUART, V26, pXIII
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wolny S, 2020, SOFTW SYST MODEL, V19, P111, DOI 10.1007/s10270-019-00735-y
   Woltzenlogel Paleo B, 2016, ARXIVABS160307453 CO
   Wong S.K.M., 2000, LNCS, V2005, P511, DOI [10.1007/3-540-45554-X_63, DOI 10.1007/3-540-45554-X_63]
   Wortmann A, 2020, SOFTW SYST MODEL, V19, P67, DOI 10.1007/s10270-019-00757-6
   Xiao J., 2008, P ICMD 08, P237
   Xu SY, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P274, DOI 10.1109/QRS.2016.39
   Yan L, 2019, INT J INTELL SYST, V34, P3058, DOI 10.1002/int.22188
   Yan L, 2015, J INTELL FUZZY SYST, V28, P1969, DOI 10.3233/IFS-141307
   Yan L, 2013, INTEGR COMPUT-AID E, V20, P407, DOI 10.3233/ICA-130440
   Yang Z., 2017, ARXIVABS170400873 CO
   Yazici A, 2001, INT J INTELL SYST, V16, P881, DOI 10.1002/int.1040
   Zhang F, 2018, APPL SOFT COMPUT, V73, P134, DOI 10.1016/j.asoc.2018.08.025
   Zhang F, 2013, INT J COMPUT INT SYS, V6, P442, DOI 10.1080/18756891.2013.780735
   Zhang M, 2018, J SYST SOFTWARE, V144, P573, DOI 10.1016/j.jss.2018.06.075
   Zhang M, 2017, INFORM SOFTWARE TECH, V87, P140, DOI 10.1016/j.infsof.2017.03.003
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
   Zhou B, 2009, 2009 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL 1, PROCEEDINGS, P171, DOI 10.1109/IITA.2009.97
   Zimmermann H.-J., 2001, Fuzzy Set Theory-and Its Applications, DOI DOI 10.1007/978-94-010-0646-0
   Zvieli A., 1986, International Conference on Data Engineering (Cat. No.86CH2261-6), P320
NR 234
TC 26
Z9 26
U1 2
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 1183
EP 1213
DI 10.1007/s10270-020-00842-1
EA JAN 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL2LY
UT WOS:000606169300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tax, N
   Teinemaa, I
   van Zelst, SJ
AF Tax, Niek
   Teinemaa, Irene
   van Zelst, Sebastiaan J.
TI An interdisciplinary comparison of sequence modeling methods for
   next-element prediction
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Machine learning; Grammar inference; Sequence prediction
ID HIDDEN MARKOV-MODELS; PERFORMANCE EVALUATION; K-FOLD; AUTOMATA; SETS
AB Data of sequential nature arise in many application domains in the form of, e.g., textual data, DNA sequences, and software execution traces. Different research disciplines have developed methods to learn sequence models from such datasets: (i) In the machine learning field methods such as (hidden) Markov models and recurrent neural networks have been developed and successfully applied to a wide range of tasks, (ii) in process mining process discovery methods aim to generate human-interpretable descriptive models, and (iii) in the grammar inference field the focus is on finding descriptive models in the form of formal grammars. Despite their different focuses, these fields share a common goal: learning a model that accurately captures the sequential behavior in the underlying data. Those sequence models are generative, i.e., they are able to predict what elements are likely to occur after a given incomplete sequence. So far, these fields have developed mainly in isolation from each other and no comparison exists. This paper presents an interdisciplinary experimental evaluation that compares sequence modeling methods on the task of next-element prediction on four real-life sequence datasets. The results indicate that machine learning methods, which generally do not aim at model interpretability, tend to outperform methods from the process mining and grammar inference fields in terms of accuracy.
C1 [Tax, Niek] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Teinemaa, Irene] Univ Tartu, Tartu, Estonia.
   [van Zelst, Sebastiaan J.] FIT, Fraunhofer Inst Appl Informat Technol, St Augustin, Germany.
   [van Zelst, Sebastiaan J.] Rhein Westfal TH Aachen, Aachen, Germany.
C3 Eindhoven University of Technology; University of Tartu; Fraunhofer
   Gesellschaft; Fraunhofer Institute Center Schloss Birlinghoven; RWTH
   Aachen University
RP Tax, N (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM n.tax@tue.nl; irene.teinemaa@ut.ee;
   sebastiaan.van.zelst@fit.fraunhofer.de
RI van Zelst, Sebastiaan/ABE-5561-2021; Tax, Niek/GZA-4610-2022
OI van Zelst, Sebastiaan/0000-0003-0415-1036; Tax, Niek/0000-0001-7239-5206
CR Alizadeh M., 2014, CEUR WORKSHOP P, P1
   Alizadeh M, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P1358, DOI 10.1109/SSCI.2015.194
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2011, BUS PROC MOD NOT
   [Anonymous], LNBIP
   [Anonymous], 2014, ALIGNING OBSERVED MO
   Arrivault D., 2017, C FRANC APPR AURT
   Augusto A, 2019, IEEE T KNOWL DATA EN, V31, P686, DOI 10.1109/TKDE.2018.2841877
   Augusto A, 2017, IEEE DATA MINING, P1, DOI 10.1109/ICDM.2017.9
   Balle B, 2014, MACH LEARN, V96, P33, DOI 10.1007/s10994-013-5416-x
   Balle Borja., 2017, Int. Conf. on Grammatical Inference, P132
   Bengio Y, 2004, J MACH LEARN RES, V5, P1089
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Berti A., 2019, P ICPM DEM TRACK 201, V2374, P13
   Bojar O., 2014, P 9 WORKSH STAT MACH, P12
   Boulanger-Lewandowski N., P INT C MACH LEARN I
   Breuker D, 2016, MIS QUART, V40, P1009, DOI 10.25300/MISQ/2016/40.4.10
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Buijs JCAM, 2014, INT J COOP INF SYST, V23, DOI 10.1142/S0218843014400012
   Buijs J.C.A.M., 2012, On the Move to Meaningful Internet Systems: OTM 2012, P305, DOI DOI 10.1007/978-3-642-33606-5_19
   Carmona J., 2016, P BUS PROC MAN WORKS
   Ceci M, 2014, LECT NOTES ARTIF INT, V8777, P49, DOI 10.1007/978-3-319-11812-3_5
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Chung Junyoung, 2014, ARXIV14123555
   Clark A, 2007, MACH LEARN, V66, P93, DOI 10.1007/s10994-006-9592-9
   de la Higuera C, 2005, PATTERN RECOGN, V38, P1332, DOI 10.1016/j.patcog.2005.01.003
   De la Higuera Colin, 2010, GRAMMATICAL INFERENC
   Di Francescomarino C, 2019, IEEE T SERV COMPUT, V12, P896, DOI 10.1109/TSC.2016.2645153
   Dunning T., 1994, Technical Report
   Evermann J, 2017, DECIS SUPPORT SYST, V100, P129, DOI 10.1016/j.dss.2017.04.003
   Gagniuc PA., 2017, Markov Chains: From Theory to Implementation and Experimentation, DOI DOI 10.1002/9781119387596
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Gopalratnam K, 2007, IEEE INTELL SYST, V22, P52, DOI 10.1109/MIS.2007.15
   Gueniche Ted, 2013, Advanced Data Mining and Applications. 9th International Conference, ADMA 2013. Proceedings: LNCS 8347, P177, DOI 10.1007/978-3-642-53917-6_16
   Gueniche T, 2015, LECT NOTES ARTIF INT, V9078, P625, DOI 10.1007/978-3-319-18032-8_49
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HOPFIELD JJ, 1982, P NATL ACAD SCI-BIOL, V79, P2554, DOI 10.1073/pnas.79.8.2554
   Kingma D. P., 2014, arXiv
   Koorneef M., 2017, P BUS PROC MAN WORKS, P204
   Lakshmanan GT, 2015, KNOWL INF SYST, V42, P97, DOI 10.1007/s10115-013-0697-8
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Leemans M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P185, DOI 10.1109/SANER.2018.8330208
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Leemans S. J. J., 2014, LECT NOTES BUSINESS, P66, DOI [DOI 10.1007/978-3-319-06257-0, 10.1007/978-3-319-06257-0_6]
   Leemans SJJ, 2018, LECT NOTES COMPUT SC, V11229, P97, DOI 10.1007/978-3-030-02610-3_6
   Logan B, 2000, INT CONF ACOUST SPEE, P749
   Mannhardt F, 2017, RADAR EMISA CAISE, V1859, P72
   Márquez-Chamorro AE, 2017, EXPERT SYST APPL, V87, P1, DOI 10.1016/j.eswa.2017.05.069
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Mehdiyev N, 2017, CONF BUS INFORM, V1, P119, DOI 10.1109/CBI.2017.46
   Pitkow J, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'99), P139
   Pravilovic S, 2014, LECT NOTES ARTIF INT, V8399, P67, DOI 10.1007/978-3-319-08407-7_5
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Rogge-Solti A., 2013, BPMW13, P15
   Rogge-Solti A, 2015, INFORM SYST, V54, P1, DOI 10.1016/j.is.2015.04.004
   Rogge-Solti A, 2013, LECT NOTES COMPUT SC, V8274, P389, DOI 10.1007/978-3-642-45005-1_27
   Schonenberg H, 2008, LECT NOTES COMPUT SC, V5240, P51, DOI 10.1007/978-3-540-85758-7_7
   SHAO J, 1993, J AM STAT ASSOC, V88, P486, DOI 10.2307/2290328
   Stanke M, 2003, BIOINFORMATICS, V19, pII215, DOI 10.1093/bioinformatics/btg1080
   Tax Niek, 2018, Application and Theory of Petri Nets and Concurrency. 39th International Conference, PETRI NETS 2018. Proceedings: LNCS 10877, P374, DOI 10.1007/978-3-319-91268-4_20
   Tax Niek, 2016, Journal of Innovation in Digital Ecosystems, V3, P183, DOI 10.1016/j.jides.2016.11.001
   Tax N, 2018, LECT NOTES BUS INF P, V318, P165, DOI 10.1007/978-3-319-91704-7_11
   Tax N, 2017, LECT NOTES COMPUT SC, V10253, P477, DOI 10.1007/978-3-319-59536-8_30
   Teinemaa I, 2016, LECT NOTES COMPUT SC, V9850, P401, DOI 10.1007/978-3-319-45348-4_23
   Unuvar M, 2016, KNOWL INF SYST, V47, P433, DOI 10.1007/s10115-015-0842-7
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst WMP, 2010, SOFTW SYST MODEL, V9, P87, DOI 10.1007/s10270-008-0106-z
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Spoel S, 2013, LECT NOTES BUS INF P, V162, P60
   van der Werf JMEM, 2009, FUND INFORM, V94, P387, DOI 10.3233/FI-2009-136
   van Dongen BF, 2016, LECT NOTES COMPUT SC, V9850, P39, DOI 10.1007/978-3-319-45348-4_3
   van Dongen BF, 2008, LECT NOTES COMPUT SC, V5331, P319
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   van Zelst S.J., 2017, COMPUTING
   van Zelst SebastiaanJ., 2017, ATAED@Petri Nets/ACSD, V1847, P6
   vanden Broucke SKLM, 2014, IEEE T KNOWL DATA EN, V26, P1877, DOI 10.1109/TKDE.2013.130
   Verwer S, 2014, MACH LEARN, V96, P129, DOI 10.1007/s10994-013-5409-9
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Weinberger MJ, 1997, IEEE T INFORM THEORY, V43, P1697, DOI 10.1109/18.623176
   WIRTH N, 1977, COMMUN ACM, V20, P822, DOI 10.1145/359863.359883
   Wong TT, 2015, PATTERN RECOGN, V48, P2839, DOI 10.1016/j.patcog.2015.03.009
   ZIV J, 1978, IEEE T INFORM THEORY, V24, P530, DOI 10.1109/TIT.1978.1055934
NR 82
TC 22
Z9 23
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1345
EP 1365
DI 10.1007/s10270-020-00789-3
EA APR 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000524413300001
DA 2024-07-18
ER

PT J
AU Salnitri, M
   Angelopoulos, K
   Pavlidis, M
   Diamantopoulou, V
   Mouratidis, H
   Giorgini, P
AF Salnitri, Mattia
   Angelopoulos, Konstantinos
   Pavlidis, Michalis
   Diamantopoulou, Vasiliki
   Mouratidis, Haralambos
   Giorgini, Paolo
TI Modelling the interplay of security, privacy and trust in sociotechnical
   systems: a computer-aided design approach
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security; Privacy; Trust; Sociotechnical systems; CASE tools
ID REQUIREMENTS; TROPOS; FRAMEWORK; LANGUAGE
AB Personal data have become a central asset for multiple enterprise applications and online services offered by private companies, public organisations or a combination of both. The sensitivity of such data and the continuously growing legislation that accompanies their management dictate the development of methods that allow the development of more secure, trustworthy software systems with focus on privacy protection. The contribution of this paper is the definition of a novel requirements engineering method that supports both early and late requirements specification, giving emphasis on security, privacy and trust. The novelty of our work is that it provides the means for software designers and security experts to analyse the system-to-be from multiple aspects, starting from identifying high-level goals to the definition of business process composition, and elicitation of mechanisms to fortify the system from external threats. The method is supported by two CASE tools. To demonstrate the applicability and usefulness of our work, the paper shows its applications to a real-world case study.
C1 [Salnitri, Mattia] Politecn Milan, Dept Elect Comp Sci & Bioengn, Milan, Italy.
   [Angelopoulos, Konstantinos] Collibra, Brussels, Belgium.
   [Pavlidis, Michalis; Mouratidis, Haralambos] Univ Brighton, Ctr Secure Intelligent & Usable Syst, Brighton, E Sussex, England.
   [Diamantopoulou, Vasiliki] Univ Aegean, Dept Informat & Commun Syst Engn, Samos, Greece.
   [Giorgini, Paolo] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
C3 Polytechnic University of Milan; University of Brighton; University of
   Aegean; University of Trento
RP Salnitri, M (corresponding author), Politecn Milan, Dept Elect Comp Sci & Bioengn, Milan, Italy.
EM mattia.salnitri@polimi.it; konstantinos.angelopoulos@collibra.com;
   m.pavlidis@brighton.ac.uk; vdiamant@aegean.gr;
   h.mouratidis@brighton.ac.uk; paolo.giorgini@unitn.it
RI Diamantopoulou, Vasiliki/H-2163-2013; Giorgini, Paolo/G-7886-2012;
   Salnitri, Mattia/AAG-6353-2021; Pavlidis, Michalis/C-7223-2015
OI Pavlidis, Michalis/0000-0001-9135-2340; Giorgini,
   Paolo/0000-0003-4152-9683
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Ali R, 2009, LECT NOTES BUS INF P, V29, P326
   Angelopoulos K, 2015, LECT NOTES COMPUT SC, V9381, P384, DOI 10.1007/978-3-319-25264-3_28
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], 2012, Non-functional requirements in software engineering
   [Anonymous], THESIS
   [Anonymous], 2018, P 12 MED C INF SYST
   [Anonymous], 2016, Official Journal of the European Union
   [Anonymous], 2012, P 2012 6 INT C RES C
   [Anonymous], 2016, REQUIREMENTS ENG
   [Anonymous], TECHNICAL REPORT
   [Anonymous], BPMN 2 0 TECHN REP
   [Anonymous], HOLISTIC TRUST DESIG
   [Anonymous], UML 2 5 1 TECHN REP
   [Anonymous], 2014, CAISE FORUMDOCTORAL
   [Anonymous], 2016, DOMAINSPECIFIC CONCE
   [Anonymous], 2014, INT C SOFTW TECHN
   [Anonymous], TECHNICAL REPORT
   [Anonymous], SUPPORTING PRIVACY D
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2002, Use Case Modeling
   [Anonymous], SOFTWARE ENG SECURE
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Chopra AmitK., 2010, P 9 INT C AUTONOMOUS, V1, P457
   Dalpiaz F., 2016, Security Requirements Engineering: Designing Secure Socio-Technical Systems
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Diamantopoulou V, 2018, INF COMPUT SECUR, V26, P382, DOI 10.1108/ICS-12-2017-0087
   Elahi G, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P243, DOI 10.1109/RE.2009.12
   FaSSbender Stephan, 2014, Proceedings of the 9th International Conference on Software Paradigm Trends ICSOFT-PT 2014, P5
   Gharib M, 2016, INT REQUIR ENG CONF, P256, DOI 10.1109/RE.2016.13
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Górski J, 2005, RELIAB ENG SYST SAFE, V89, P33, DOI 10.1016/j.ress.2004.08.005
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Horkoff J., 2011, iStar Tool Fair: Proceedings of the 5th International i* Workshop, P154
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Lambrinoudakis C, 2003, COMPUT COMMUN, V26, P1873, DOI 10.1016/S0140-3664(03)00082-3
   LEE WS, 1985, IEEE T RELIAB, V34, P194, DOI 10.1109/TR.1985.5222114
   Martínez A, 2005, J COMPUT SCI TECHNOL, V5, P64
   Massacci F, 2010, STUD COMPUT INTELL, V265, P147
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   Mead N.R., 2005, SECURITY QUALITY REQ
   Miyazaki S, 2008, 2008 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE, VOLS 1-3, PROCEEDINGS, P367, DOI 10.1109/APSCC.2008.263
   Möllering G, 2005, INT SOCIOL, V20, P283, DOI 10.1177/0268580905055478
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Paja E, 2015, DATA KNOWL ENG, V98, P123, DOI 10.1016/j.datak.2015.07.007
   Pavlidis Michalis, 2012, International Journal of Secure Software Engineering, V3, P36, DOI 10.4018/jsse.2012040102
   Pavlidis M, 2014, INT J INF SYST MODEL, V5, P25, DOI 10.4018/ijismd.2014010102
   Pfitzmann A., 2010, A terminology for talking about privacy by data minimization: Anonymity, Unlinkability, Undetectability, Unobservability, Pseudonymity, and Identity Management
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Salini P, 2013, ADV INTELL SYST, V177, P341
   Salnitri M., 2014, Cyber Sercurity and Privacy, V470, P49, DOI [DOI 10.1007/978-3-319-12574-9_5, 10.1007/978-3-319-12574-9_5]
   Salnitri M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P155, DOI [10.1109/REW.2016.038, 10.1109/REW.2016.11]
   Schumacher M., 2013, Security Patterns: Integrating Security and Systems Engineering
   Shostack A., 2014, Threat Modeling: Designing for Security
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2017, Applications of case study research, V3rd
   Yu E., 2001, TRUST CYBER SOC, P175
   Yu E., 2010, SOCIAL MODELING REQU
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zainal Z., 2007, Jurnal Kemanusiaan, V5
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 71
TC 8
Z9 8
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 467
EP 491
DI 10.1007/s10270-019-00744-x
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200013
DA 2024-07-18
ER

PT J
AU Silva, E
   Leite, A
   Alves, V
   Apel, S
AF Silva, Eneias
   Leite, Alessandro
   Alves, Vander
   Apel, Sven
TI <i>ExpRunA</i> : a domain-specific approach for technology-oriented
   experiments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Controlled experiments; Technology-oriented experiments; Domain-specific
   modeling; Domain-specific language
ID SOFTWARE; SYSTEM; ENVIRONMENT; SUPPORT
AB Conducting technology-oriented experiments (i.e., experiments in which treatments are applied to objects by a computer-based tool) without proper tool support is often a time-consuming and highly error-prone task. Although many techniques have been proposed to help conducting controlled experiments, none of them simultaneously addresses (1) the executable specification of experiments at a high level of abstraction; (2) automated treatment execution and automated data analysis from the experiment specification; and (3) formal guaranties of the correctness of results according to an experiment specification for technology-oriented experiments. To address these issues, we provide a Domain-Specific Modeling approach to create a Web-based tool (ExpRunA ) comprising a Domain-Specific Language named ToExpDSL , execution and analysis script generators, a supporting framework, and a running infrastructure. An experimenter uses ToExpDSL to specify an experiment using experimentation concepts. From this specification, applications corresponding to the underlying treatments are executed, execution results are collected and analyzed, and, finally, the analysis results are presented to the experimenter. We establish the consistency of such results with respect to the experiment specification by formalizing and proving key correctness properties of ExpRunA . We empirically evaluated ExpRunA with respect to automation by replicating three already published experiments; we evaluated the level of abstraction by a qualitative assessment. Our empirical evaluation shows that ToExpDSL is expressive enough to specify three technology-oriented experiments and that ExpRunA can be used to enable sound automation of execution and analysis from the specification of technology-oriented experiments at a high level of abstraction.
C1 [Silva, Eneias; Leite, Alessandro; Alves, Vander] Univ Brasilia, Dept Comp Sci, CP 4466, BR-70910900 Brasilia, DF, Brazil.
   [Apel, Sven] Saarland Univ, Saarland Informat Campus,Campus E1 1, D-66123 Saarbrucken, Germany.
C3 Universidade de Brasilia; Saarland University
RP Silva, E (corresponding author), Univ Brasilia, Dept Comp Sci, CP 4466, BR-70910900 Brasilia, DF, Brazil.
EM eneiascs@gmail.com
RI Leite, Alessandro/AAP-5824-2020; Leite, Alessandro/I-3628-2015
OI Leite, Alessandro/0000-0002-3071-8019; Apel, Sven/0000-0003-3687-2233;
   Silva, Eneias/0000-0002-2459-9551
CR Abate A, 2017, LECT NOTES COMPUT SC, V10426, P462, DOI 10.1007/978-3-319-63387-9_23
   [Anonymous], 2013, BASICS SOFTWARE ENG
   [Anonymous], 2003, ACM SIGOPS OPERATING
   [Anonymous], 2017, HDB UNCERTAINTY QUAN
   [Anonymous], P 10 NORD WORKSH PRO
   [Anonymous], APPROACH QUANTITATIV
   Aydin A, 2015, LECT NOTES COMPUT SC, V9206, P255, DOI 10.1007/978-3-319-21690-4_15
   Bak S, 2017, LECT NOTES COMPUT SC, V10426, P401, DOI 10.1007/978-3-319-63387-9_20
   Bang L, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P193, DOI 10.1145/2950290.2950362
   Banks J., 1999, WSC'99. 1999 Winter Simulation Conference Proceedings. `Simulation - A Bridge to the Future' (Cat. No.99CH37038), P7, DOI 10.1109/WSC.1999.823046
   Beyer D, 2018, J AUTOM REASONING, V60, P299, DOI 10.1007/s10817-017-9432-6
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Box GE., 2005, Statistics for Experimenters: Design, Innovation, and Discovery, V2nd ed.
   Brennan T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/3106237.3106303
   Brihaye T, 2017, LECT NOTES COMPUT SC, V10426, P421, DOI 10.1007/978-3-319-63387-9_21
   Chen XL, 2017, BIOINFORMATICS, V33, P1210, DOI 10.1093/bioinformatics/btw817
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Devroey X, 2017, IEEE INT CONF SOFTW, P424, DOI 10.1109/ICST.2017.46
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feigenspan J, 2011, INT SYMP EMP SOFTWAR, P127, DOI 10.1109/ESEM.2011.21
   Freire M, 2013, LECT NOTES COMPUT SC, V7983, P65, DOI 10.1007/978-3-642-39259-7_8
   Freire M, 2014, INT J SOFTW ENG KNOW, V24, P1509, DOI 10.1142/S0218194014400178
   Gao H, 2012, J POWER SOURCES, V205, P164, DOI 10.1016/j.jpowsour.2012.01.062
   Hauck M, 2014, SOFTW SYST MODEL, V13, P1345, DOI 10.1007/s10270-013-0335-7
   Hochstein L, 2008, ADV COMPUT, V74, P175, DOI 10.1016/S0065-2458(08)00605-0
   Houben C, 2015, CURR OPIN CHEM ENG, V9, P1, DOI 10.1016/j.coche.2015.07.001
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kelly S., 2008, Domain-Specific Modeling
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Lajmi A, 2014, P DEM TRACK ACM IEEE, V1255, P25
   Lanna A, 2018, INFORM SOFTWARE TECH, V94, P59, DOI 10.1016/j.infsof.2017.10.001
   Leite AF, 2017, CLUSTER COMPUT, V20, P1951, DOI 10.1007/s10586-017-0897-1
   Luu L, 2014, ACM SIGPLAN NOTICES, V49, P565, DOI [10.1145/2666356.2594331, 10.1145/2594291.2594331]
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Mattoso Marta, 2010, International Journal of Business Process Integration and Management, V5, P79, DOI 10.1504/IJBPIM.2010.033176
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Pasareanu CS, 2013, AUTOMAT SOFTW ENG, V20, P391, DOI 10.1007/s10515-013-0122-2
   Pavlov SS, 2014, PHYS PART NUCLEI LET, V11, P737, DOI 10.1134/S1547477114060107
   Ralha CG, 2013, ENVIRON MODELL SOFTW, V42, P30, DOI 10.1016/j.envsoft.2012.12.003
   Rizzo T., 2012, EK SEC C
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sonntag M., 2010, LECT NOTES INFORMATI, VP-160, P209
   Sztipanovits J, 2014, LECT NOTES COMPUT SC, V8415, P235, DOI 10.1007/978-3-642-54848-2_16
   Tabatabaei S, 2017, J EXP THEOR ARTIF IN, V29, P273, DOI 10.1080/0952813X.2015.1132272
   Travassos G H, 2003, 2 WORKSH EMP SOFTW E, P117
   Travassos GH, 2008, IEEE INT C ENG COMP, P193, DOI 10.1109/ICECCS.2008.30
   Varga A., 2008, An Overview of the Omnet++ Simulation Environment, P1
   Visser W., 2012, SIGSOFT FSE
   Ward M, 1995, J SOFTW MAINT-RES PR, V7, P443, DOI 10.1002/smr.4360070606
   Weir M, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P162, DOI 10.1145/1866307.1866327
   Wohlin C., 2012, Experimentation in Software Engineering
   Yoo AB, 2003, LECT NOTES COMPUT SC, V2862, P44
   Zhao Y., 2011, Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), 2011 International Conference on, P455, DOI DOI 10.1109/CYBERC.2011.80
NR 55
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 493
EP 526
DI 10.1007/s10270-019-00749-6
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200014
DA 2024-07-18
ER

PT J
AU Somogyi, FA
   Asztalos, M
AF Somogyi, Ferenc Attila
   Asztalos, Mark
TI Systematic review of matching techniques used in model-driven
   methodologies
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model matching; Model comparison; Model differencing; Version control;
   Text-based modeling; Systematic literature review
ID CONFLICTING CHANGE OPERATIONS; OF-THE-ART; VERSION CONTROL; MERGING
   LANGUAGE; DIFFERENCE; TRANSFORMATION; ALGORITHMS; MANAGEMENT;
   RESOLUTION; SUPPORT
AB In model-driven methodologies, model matching is the process of finding a matching pair for every model element between two or more software models. Model matching is an important task as it is often used while differencing and merging models, which are key processes in version control systems. There are a number of different approaches to model matching, with most of them focusing on different goals, i.e., the accuracy of the matching process, or the generality of the algorithm. Moreover, there exist algorithms that use the textual representations of the models during the matching process. We present a systematic literature review that was carried out to obtain the state-of-the-art of model matching techniques. The search process was conducted based on a well-defined methodology. We have identified a total of 3274 non-duplicate studies, out of which 119 have been included as primary studies for this survey. We present the state-of-the-art of model matching, highlighting the differences between different matching techniques, mainly focusing on text-based and graph-based algorithms. Finally, the main open questions, challenges, and possible future directions in the field of model matching are discussed, also including topics like benchmarking, performance and scalability, and conflict handling.
C1 [Somogyi, Ferenc Attila; Asztalos, Mark] Budapest Univ Technol & Econ, Muegyetem Rkp 3, H-1111 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Somogyi, FA (corresponding author), Budapest Univ Technol & Econ, Muegyetem Rkp 3, H-1111 Budapest, Hungary.
EM Somogyi.Ferenc@aut.bme.hu; Asztalos.Mark@aut.bme.hu
OI Somogyi, Ferenc A./0000-0001-5491-4412
FU Budapest University of Technology and Economics (BME)
FX Open access funding provided by Budapest University of Technology and
   Economics (BME). The authors would like to thank the anonymous
   reviewers. Their insightful comments led to a much improved paper.
CR Addazi Lorenzo., 2016, P MODELS EVOLUTION W, P40, DOI DOI 10.1145/3417990.3421999
   Al-Khiaty Mojeeb Al-Rhman, 2016, Lecture Notes on Software Engineering, V4, P41, DOI 10.7763/LNSE.2016.V4.221
   Al-Khiaty Mojeeb Al-Rhman, 2014, 2014 International Computer Science and Engineering Conference (ICSEC), P228, DOI 10.1109/ICSEC.2014.6978199
   Al-Khiaty MA, 2017, PROCEEDINGS OF THE 2017 12TH INTERNATIONAL SCIENTIFIC AND TECHNICAL CONFERENCE ON COMPUTER SCIENCES AND INFORMATION TECHNOLOGIES (CSIT 2017), VOL. 1, P161, DOI 10.1109/STC-CSIT.2017.8098759
   Al-Khiaty MA, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P19, DOI 10.1109/ICSESS.2014.6933505
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   ALTMANNINGER K, 2009, P MODSE MCCM 2009 WO
   Altmanninger K, 2010, INT J ENTERP INF SYS, V6, P68, DOI 10.4018/jeis.2010120206
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   Alwanain M, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P384
   [Anonymous], 2006, Eclipse Modeling Symposium, P1
   [Anonymous], 2002, Software configuration management patterns: effective teamwork, practical integration
   Anwar Adil, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P83, DOI 10.1109/ICSEA.2008.38
   Anwar A, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P188, DOI 10.1109/ICECCS.2011.26
   Arnoldus BJ, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P137
   Arora S, 2009, COMPUTATIONAL COMPLEXITY: A MODERN APPROACH, P1, DOI 10.1017/CBO9780511804090
   Babich WayneA., 1986, Software Configuration Management: Coordination for Team Productivity
   Badreddin O, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P254
   BARRETT SC, 2010, P 1 INT WORKSH MOD C, P2, DOI DOI 10.1145/1826147.1826151
   BARRETT SC, 2008, MODSE 08
   Barrett S, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/TASE.2009.34
   BARTELT C, 2008, P 2008 INT WORKSH CO, P13
   Ben Rhouma T, 2012, IEEE INT C ENG COMP, P77, DOI 10.1109/ICECCS.2012.22
   BENDIX L, 2008, P 2008 INT WORKSH CO, P31
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Berlik S, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P486, DOI 10.1109/IRI.2007.4296667
   BIOLCHINI J, 2005, TECHNICAL REPORT
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Bogdanov K, 2009, WORK CONF REVERSE EN, P177, DOI 10.1109/WCRE.2009.17
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Brockmans S, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P191
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   BROSCH P, 2010, LNI, V161, P221
   Brosch P, 2009, PROC INT CONF SOFTW, P355, DOI 10.1109/ICSE-COMPANION.2009.5071020
   Brosch P, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P55, DOI 10.1109/CVSM.2009.5071723
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   BYRNE B, 2009, P 4 INT C ONT MATCH, V551, P1
   Chao-Ting Su, 2015, 2015 49th Annual International Carnahan Conference on Security Technology (ICCST), P1, DOI 10.1109/CCST.2015.7389709
   CHAOUNI SB, 2011, INT J COMPUT SCI ISS
   Chong H, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P127, DOI 10.1109/SNPD.2016.7515890
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2010, LECT NOTES COMPUT SC, V6002, P190
   Cicchetti A, 2009, IEEE ENABL TECHNOL, P149, DOI 10.1109/WETICE.2009.48
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2009.35
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   DIJKMAN RM, 2007, TECHNICAL REPORT
   Ehrig H, 2011, LECT NOTES COMPUT SC, V6603, P202, DOI 10.1007/978-3-642-19811-3_15
   EHRIG M, 2007, P 4 AS PAC C CONC MO, V67, P71
   Engel KD, 2006, LECT NOTES COMPUT SC, V4066, P143
   Eshuis R, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P171, DOI 10.1109/ECOWS.2007.22
   EVANS S, 2016, GIT STARTERS
   Fleurey F, 2008, LECT NOTES COMPUT SC, V5002, P7
   Förtsch S, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P90
   Forward A, 2012, SOFTWARE PRACT EXPER, V42, P781, DOI 10.1002/spe.1155
   Foucault M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P31, DOI 10.1109/MiSE.2013.6595293
   France R, 2007, IEEE INT ENTERP DIST, P253, DOI 10.1109/EDOC.2007.55
   Frankel David., 2002, Model Driven Architecture: Applying MDA to Enterprise Computing
   García-Díaz V, 2012, IET SOFTW, V6, P127, DOI 10.1049/iet-sen.2011.0040
   Gerth Christian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P57, DOI 10.1109/SCC.2010.38
   Gerth C, 2013, SOFTW SYST MODEL, V12, P517, DOI 10.1007/s10270-011-0226-8
   Gerth C, 2009, LECT NOTES COMPUT SC, V5795, P152, DOI 10.1007/978-3-642-04425-0_12
   GIRSCHICK M, 2006, TECHNICAL REPORT
   GRONNIGER H, 2014, ARXIV14096623
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   HERRMANNSDOERFE.M, 2010, P 1 INT WORKSH MOD C, P76, DOI DOI 10.1145/1826147.1826161
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   KEHRER T, 2014, SOFTWARETECHNIK TREN, V34
   Kehrer T, 2012, IEEE INT CONF AUTOM, P306, DOI 10.1145/2351676.2351731
   Kelly S., 2008, Domain-Specific Modeling
   KELTER U, 2008, P 2008 INT WORKSH CO, P1, DOI DOI 10.1145/1370152.1370154
   KELTER U, 2005, LECT NOTES INFORM, V64, P4
   KINDLER E, 2008, TECHNICAL REPORT
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Kobler Johannes., 1993, GRAPH ISOMORPHISM PR
   KOEGEL M, 2010, P 1 INT WORKSH MOD C, P21, DOI DOI 10.1145/1826147.1826154
   Koegel M, 2010, IEEE INT ENTERP DIST, P163, DOI 10.1109/EDOC.2010.15
   Koegel M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P43, DOI 10.1109/CVSM.2009.5071721
   KOGEL M, 2008, P 2008 INT WORKSH CO, P19, DOI DOI 10.1145/1370152.1370158
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kolovos DimitriosS., 2006, Global Integrated Model Management (GaMMa), P13, DOI DOI 10.1145/1138304.1138308
   Könemann P, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P37, DOI 10.1109/CVSM.2009.5071720
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Küster JM, 2009, LECT NOTES COMPUT SC, V5562, P158, DOI 10.1007/978-3-642-02674-4_12
   Kuryazov D, 2014, IEEE INT ENTERP, P211, DOI 10.1109/EDOCW.2014.39
   La Rosa M, 2010, LECT NOTES COMPUT SC, V6426, P96
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Lin Yuehua., 2004, Workshop on Best Practices for Model-Driven Software Development, associated to OOPSLA/GPCE, V108, P219
   MacKenzie D., 2015, GNU Diffutils Reference Manual
   Maoz Shahar, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P194, DOI 10.1007/978-3-642-21210-9_19
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S, 2018, SOFTW SYST MODEL, V17, P753, DOI 10.1007/s10270-016-0552-y
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P230, DOI 10.1007/978-3-642-22655-7_12
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   Melnik Sergey., 2003, SIGMOD C, P193, DOI DOI 10.1145/872757.872782
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MOHAGHEGHI P, 2007, P INT WORKSH MOD SOF
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Nejati S, 2012, IEEE T SOFTWARE ENG, V38, P1355, DOI 10.1109/TSE.2011.112
   Nguyen TN, 2006, P INT COMP SOFTW APP, P197
   Cardona PAN, 2015, CUAD ACT, P154
   Oda T, 2005, PROC IEEE INT CONF S, P515
   Oda T, 2006, IEICE T INF SYST, VE89D, P1390, DOI 10.1093/ietisy/e89-d.4.1390
   Ohst D, 2003, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSM.2003.1235402
   OHST D, 2004, TECHNICAL REPORT
   OHST D, 2003, P 9 EUR SOFTW ENG C, P227
   Oliveira K, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P78, DOI 10.1109/ICECCS.2009.55
   Oliveira K, 2009, J UNIVERS COMPUT SCI, V15, P2225
   OLIVEIRA KSF, 2007, INT C SOFTW ENG ADV, P27, DOI DOI 10.1109/ICSEA.2007.5
   OLIVEIRA KSF, 2008, P 20 INT C SOFTW ENG, P912
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Petticrew M, 2006, SYSTEMATIC REV SOCIA, V1
   PIETSCH P, 2013, SOFTWARETECHNIK TREN, V32, P47, DOI DOI 10.1007/BF03323525
   Rajbhoj A, 2013, LECT NOTES COMPUT SC, V8107, P422, DOI 10.1007/978-3-642-41533-3_26
   Romero JR, 2007, J OBJECT TECHNOL, V6, P187, DOI 10.5381/jot.2007.6.9.a10
   REDDY R, 2005, P AOM WORKSH MODELS
   Rivera JE, 2008, LECT NOTES BUS INF, V11, P141
   Rutle A, 2009, LECT NOTES COMPUT SC, V5503, P64
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schmidt M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P13, DOI 10.1109/CVSM.2009.5071716
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   SELONEN P, 2007, WORKSH P 5 NORD WORK, P37
   Selonen P, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P71
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   SOMOGYI FA, 2016, PUBLICATIONS MULTISC, V30
   Somogyi FA, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P657, DOI 10.5220/0006728006570667
   Song G, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P75
   Soto M., 2008, Proceedings of the 2008 International Workshop on Comparison and Versioning of Software Models, P35, DOI DOI 10.1145/1370152.1370162
   Soto M, 2006, LECT NOTES COMPUT SC, V4257, P123
   Spinellis D, 2005, IEEE SOFTWARE, V22, P108, DOI 10.1109/MS.2005.140
   Sriplakich P, 2006, PROC IEEE INT CONF S, P244
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Steel J, 2001, FIFTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P250, DOI 10.1109/EDOC.2001.950444
   Steinberg D., 2009, EMF ECLIPSE MODELING
   STEPHAN M, 2012, TECHNICAL REPORT
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   TREUDE C, 2007, P 6 JOINT M EUR SOFT, P295, DOI DOI 10.1145/1287624.1287665
   Uhrig Sabrina, 2013, MODELSWARD 2013. 1st International Conference on Model-Driven Engineering and Software Development. Proceedings, P101
   Uhrig S., 2008, Proceedings of the 2008 international workshop on comparison and versioning of software models (CSVM'08). 10-18 May 2008, P7, DOI DOI 10.1145/1370152.1370155
   Valiente Gabriel., 1997, Proc. of the 4th South American Workshop on String Processing, P180
   VALLECILLO A, 2008, DAGST SEM P, V8331
   van den Brand Mark., 2010, P 1 INT WORKSHOP MOD, P11, DOI [10.1145/1826147.1826152, DOI 10.1145/1826147.1826152]
   van Dongen B, 2008, LECT NOTES COMPUT SC, V5074, P450
   van Rozen R, 2015, LECT NOTES COMPUT SC, V9152, P18, DOI 10.1007/978-3-319-21155-8_2
   VANDENBRAND M, 2011, P 2 INT WORKSH MOD C, P2, DOI DOI 10.1145/2000410.2000412
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   WEIDLICH M, 2010, NOTES NUMERICAL FLUI, P483
   Wenzel S, 2007, PROC IEEE INT CONF S, P174
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   XING Z, 2010, P IEEE ACM INT C AUT, P135, DOI DOI 10.1145/1858996.1859020
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang Z, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/650748
   ZUNDORF A, 2001, P 10 INT WORKSH SOFT, V14
   2007, XML METADATA INTERCH
NR 167
TC 7
Z9 8
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 693
EP 720
DI 10.1007/s10270-019-00760-x
EA NOV 2019
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000493631300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ioannou, C
   Nurdiani, I
   Burattin, A
   Weber, B
AF Ioannou, Constantina
   Nurdiani, Indira
   Burattin, Andrea
   Weber, Barbara
TI Mining reading patterns from eye-tracking data: method and demonstration
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Eye-tracking; Reading patterns; Source code;
   Behavior-driven development
ID COMPREHENSION; FRAMEWORK
AB Understanding how developers interact with different software artifacts when performing comprehension tasks has a potential to improve developers' productivity. In this paper, we propose a method to analyze eye-tracking data using process mining to find distinct reading patterns of how developers interacted with the different artifacts. To validate our approach, we conducted an exploratory study using eye-tracking involving 11 participants. We applied our method to investigate how developers interact with different artifacts during domain and code understanding tasks. To contextualize the reading patterns and to better understand the perceived benefits and challenges participants associated with the different artifacts and their choice of reading patterns, we complemented the eye-tracking data with the data obtained from think aloud. The study used behavior-driven development, a development practice that is increasingly used in Agile software development contexts, as a setting. The study shows that our method can be used to explore developers' behavior at an aggregated level and identify behavioral patterns at varying levels of granularity.
C1 [Ioannou, Constantina; Burattin, Andrea; Weber, Barbara] Tech Univ Denmark, DTU Compute Software & Proc Engn, DK-2800 Lyngby, Denmark.
   [Nurdiani, Indira] Univ Southern Denmark, Maersk Mc Kinney Moller Inst, SDU Software Engn, DK-5230 Odense M, Denmark.
   [Weber, Barbara] Univ St Gallen, CH-9000 St Gallen, Switzerland.
C3 Technical University of Denmark; University of Southern Denmark;
   University of St Gallen
RP Nurdiani, I (corresponding author), Univ Southern Denmark, Maersk Mc Kinney Moller Inst, SDU Software Engn, DK-5230 Odense M, Denmark.
EM inj@mmmi.sdu.dk
RI Burattin, Andrea/K-4485-2016; Nurdiani, Indira/G-2954-2019
OI Burattin, Andrea/0000-0002-0837-0183; Nurdiani,
   Indira/0000-0001-9355-6179; Weber, Barbara/0000-0002-6004-4860
CR Abrahamsson P., 2002, TECHNICAL REPORT 478
   [Anonymous], APPL THEORY PETRI NE
   [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], 2017, VERSION ONE 12 ANN S
   [Anonymous], NAT EXPERT
   [Anonymous], CODING MANUAL QUALIT
   [Anonymous], THESIS
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], COMMUNICATIONS ACM
   [Anonymous], 2006, UNIFYING SOFTWARE PR
   [Anonymous], LEGEND AGILE DSL TOO
   [Anonymous], CORR
   [Anonymous], 2005, P 6 AUSTRALASIAN USE
   [Anonymous], COMPREHENSION STRATE
   [Anonymous], ICEIS
   Binamungu LP, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P175, DOI 10.1109/SANER.2018.8330207
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Chun-Nan Liu, 2016, 2016 International Symposium on VLSI Technology, Systems and Application (VLSI-TSA), P1, DOI 10.1109/VLSI-TSA.2016.7480474
   Cios KJ, 1998, DATA MINING METHODS, P1
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Ioannou C, 2018, LECT NOTES BUS INF P, V316, P167, DOI 10.1007/978-3-319-92898-2_14
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kevic K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P202, DOI 10.1145/2786805.2786864
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Leemans M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P44, DOI 10.1109/MODELS.2015.7338234
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Liu HH, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18010003
   Müller SC, 2013, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSM.2013.40
   North Dan., 2006, Better Software, V12
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Oliveira G, 2018, LECT NOTES COMPUT SC, V10753, P290, DOI 10.1007/978-3-319-77243-1_18
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Smart John Ferguson., 2014, Bdd in action
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2015, INT C COMP SUPP COOP, P7, DOI 10.1109/CSCWD.2015.7230925
   van der Aalst WMP, 2016, PROCESS MINING DATA, V2nd, DOI DOI 10.1007/978-3-662-49851-4
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Walters B., 2014, P 22 INT C PROGRAM C, P201, DOI [10.1145/2597008.2597795, DOI 10.1145/2597008.2597795]
   Wang Y, 2018, LECT NOTES BUS INF P, V314, P37, DOI 10.1007/978-3-319-91602-6_3
NR 54
TC 5
Z9 5
U1 2
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 345
EP 369
DI 10.1007/s10270-019-00759-4
EA OCT 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000492219500001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Mens, T
   Decan, A
   Spanoudakis, NI
AF Mens, Tom
   Decan, Alexandre
   Spanoudakis, Nikolaos I.
TI A method for testing and validating executable statechart models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Statechart; Executable modeling; Behaviour-driven development; Design by
   contract; Runtime verification
ID SYSTEM; UML
AB Statecharts constitute an executable language for modelling event-based reactive systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques. In this article, we propose a method aimed at enhancing statechart design with a range of techniques that have proven their usefulness to increase the quality and reliability of source code. The method is accompanied by a process that flexibly accommodates testing and validation techniques such as test-driven development, behaviour-driven development, design by contract, and property statecharts that check for violations of behavioural properties during statechart execution. The method is supported by the Sismic tool, an open-source statechart interpreter library in Python, which supports all the aforementioned techniques. Based on this tooling, we carry out a controlled user study to evaluate the feasibility, usefulness and adequacy of the proposed techniques for statechart testing and validation.
C1 [Mens, Tom; Decan, Alexandre] Univ Mons, Fac Sci, Software Engn Lab, B-7000 Mons, Belgium.
   [Spanoudakis, Nikolaos I.] Tech Univ Crete, Sch Prod Engn & Management, Appl Math & Comp Lab, Khania 73100, Greece.
C3 University of Mons; Technical University of Crete
RP Mens, T (corresponding author), Univ Mons, Fac Sci, Software Engn Lab, B-7000 Mons, Belgium.
EM tom.mens@umons.ac.be; alexandre.decan@umons.ac.be;
   nispanoudakis@isc.tuc.gr
RI Spanoudakis, Nikolaos I./I-4895-2012; Mens, Tom/B-6518-2013
OI Spanoudakis, Nikolaos I./0000-0002-4957-9194; Mens,
   Tom/0000-0003-3636-5020
CR [Anonymous], 2015, OMG unified modeling language (OMG UML) version 2.5
   Aravantinos V., 2015, CEUR WORKSHOP P, P19
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Beck Kent L., 2003, Test Driven Development By Example
   Beer I, 2001, LECT NOTES COMPUT SC, V2102, P363
   Bunse Christian, 2012, Energy Efficient Data Centers. First International Workshop, E2DC 2012. Revised Selected Papers, P54, DOI 10.1007/978-3-642-33645-4_6
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cariou E, 2011, LECT NOTES COMPUT SC, V6698, P3, DOI 10.1007/978-3-642-21470-7_2
   Cimatti A, 2015, SCI COMPUT PROGRAM, V97, P333, DOI 10.1016/j.scico.2014.06.011
   Corbett JC, 2000, LECT NOTES COMPUT SC, V1885, P205
   Cossentino Massimo, 2007, International Journal of Agent-Oriented Software Engineering, V1, P91, DOI 10.1504/IJAOSE.2007.013266
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Dietrich I., 2010, INT C SIM TOOLS TECH
   DOUGLAS BP, 1999, DOING HARD TIME DEV
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   Drusinsky D, 2005, ELECTRON NOTES THEOR, V113, P3, DOI 10.1016/j.entcs.2004.01.025
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Esmaeilsabzali S, 2010, REQUIR ENG, V15, P235, DOI 10.1007/s00766-010-0102-z
   Estler HC, 2014, LECT NOTES COMPUT SC, V8442, P230, DOI 10.1007/978-3-319-06410-9_17
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Gnesi S., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P46, DOI 10.1109/HASE.1999.809474
   Gogolla Martin, 2015, Behavior Modeling - Foundations and Applications. International Workshops, BM-FA 2009-2014. Revised Selected Papers: LNCS 6368, P31, DOI 10.1007/978-3-319-21912-7_2
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Hamann L., LECT NOTES COMPUTER, V7590, P235
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Harel D., 2004, LNCS, V3147
   Henderson-Sellers B., J UNIVERS COMPUT SCI, V16, P424
   Idelberger F, 2016, LECT NOTES COMPUT SC, V9718, P167, DOI 10.1007/978-3-319-42019-6_11
   Lazar I, 2010, ELECTRON NOTES THEOR, V264, P91, DOI 10.1016/j.entcs.2010.07.007
   Leavens G. T., 2006, TECHNICAL REPORT
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Magree J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P634, DOI 10.1109/ICSE.1999.841063
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B, 2007, LECT NOTES COMPUT SC, V4422, P11
   North Dan., 2006, Better Software
   Object Management Group, 2014, Tech. Rep.
   *OMG, 2008, SOFTW SYST PROC ENG
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Samek MiroM., 2008, PRACTICAL UML STATEC
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI DOI 10.1145/1321631.1321746
   Spanoudakis N, 2008, LECT NOTES ARTIF INT, V5253, P32, DOI 10.1007/978-3-540-85776-1_4
   Syriani E., 2013, CEUR WORKSHOP P, V1115
   Topalidou-Kyniazopoulou A., 2013, LNCS, V7500, P225, DOI DOI 10.1007/978-3-642-39250-4_21
   Trakhtenbrot M, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P151, DOI 10.1109/TAIC.PART.2007.23
   Wynne M., 2012, PRAGMATIC BOOKSHELF
NR 50
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 837
EP 863
DI 10.1007/s10270-018-0676-3
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400005
DA 2024-07-18
ER

PT J
AU Broy, M
AF Broy, Manfred
TI A logical approach to systems engineering artifacts: semantic
   relationships and dependencies beyond traceability-from requirements to
   functional and architectural views
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Specification; Architecture; Trace; Traceability; Refinement; Semantic
   dependencies
ID SOFTWARE
AB Not only system assurance drives a need for semantically richer relationships across various artifacts, work products, and items of information than are implied in the terms "trace and traceability" as used in current standards and textbooks. This paper deals with the task of working out artifacts in software and system development, their representation, and the analysis and documentation of the relationships between their logical contents-herein referred to as tracing and traceability; this is a richer meaning of traceability than in standards like IEEE STD 830. Among others, key tasks in system development are as follows: capturing, analyzing, and documenting system-level requirements, the step to functional system specifications, the step to architectures given by the decomposition of systems into subsystems with their connections and behavioral interactions. Each of these steps produces artifacts for documenting the development, as a basis for a specification and a design rationale, for documentation, for verification, and impact analysis of change requests. Crucial questions are how to represent and formalize the content of these artifacts and how to relate their content to support, in particular, system assurance. When designing multi-functional systems, key artifacts are system-level requirements, functional specifications, and architectures in terms of their subsystem specifications. Links and traces between these artifacts are introduced to relate their contents. Traceability has the goal to relate artifacts. It is required for instance in standards for functional system safety such as the ISO 26262. An approach to specifying semantic relationships is shown, such that the activity of creating and using (navigating through) these relationships can be supported with automation.
C1 [Broy, Manfred] Tech Univ Munich, Inst Informat, D-80290 Munich, Germany.
   [Broy, Manfred] Bavarian Ctr Digitizat, Lichtenbergstr 8, D-85748 Garching, Germany.
C3 Technical University of Munich
RP Broy, M (corresponding author), Tech Univ Munich, Inst Informat, D-80290 Munich, Germany.; Broy, M (corresponding author), Bavarian Ctr Digitizat, Lichtenbergstr 8, D-85748 Garching, Germany.
EM broy@in.tum.de
CR [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], 2008, A Practical Guide To SysML: The Systems Modeling Language
   [Anonymous], 8301998 IEEE
   Booch G., 2005, UNIFIED MODELING LAN, V2
   Broy M., 2003, LECT NOTES COMPUTER
   Broy M, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189753
   Broy M, 2010, SCI COMPUT PROGRAM, V75, P1193, DOI 10.1016/j.scico.2010.06.007
   Broy M, 2010, COMPUT J, V53, P1758, DOI 10.1093/comjnl/bxq005
   Broy M, 2007, INNOV SYST SOFTW ENG, V3, P75, DOI 10.1007/s11334-006-0011-y
   Calder M., 2000, 6 INT WORKSH FEAT IN
   Clements P., 2002, DOCUMENTING SOFTWARE
   Craig W., 1957, J SYMBOLIC LOGIC, V22, P269
   HEHNER ECR, 1984, COMMUN ACM, V27, P144, DOI 10.1145/69610.357990
   HEHNER ECR, 1984, COMMUN ACM, V27, P134, DOI 10.1145/69610.357988
   HOARE CAR, 1984, PHILOS T R SOC A, V312, P475, DOI 10.1098/rsta.1984.0071
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Quine Willard V, 1952, AM MATH MON, V59, P521, DOI [DOI 10.2307/2308219, 10.1080/00029890.1952.11988183, DOI 10.1080/00029890.1952.11988183]
   SANFORD DH, 1981, AM PHILOS QUART, V18, P171
   Schatz B., 2005, P INT WORKSH FORM AS, V160
NR 19
TC 8
Z9 10
U1 1
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 365
EP 393
DI 10.1007/s10270-017-0619-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300002
DA 2024-07-18
ER

PT J
AU Leemans, SJJ
   Fahland, D
   van der Aalst, WMP
AF Leemans, Sander J. J.
   Fahland, Dirk
   Van der Aalst, Wil M. P.
TI Scalable process discovery and conformance checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Big data; Scalable process mining; Block-structured process discovery;
   Directly; follows graphs; Algorithm evaluation; Rediscoverability;
   Conformance checking
ID PROCESS MODELS; PETRI NETS
AB Considerable amounts of data, including process events, are collected and stored by organisations nowadays. Discovering a process model from such event data and verification of the quality of discovered models are important steps in process mining. Many discovery techniques have been proposed, but none of them combines scalability with strong quality guarantees. We would like such techniques to handle billions of events or thousands of activities, to produce sound models (without deadlocks and other anomalies), and to guarantee that the underlying process can be rediscovered when sufficient information is available. In this paper, we introduce a framework for process discovery that ensures these properties while passing over the log only once and introduce three algorithms using the framework. To measure the quality of discovered models for such large logs, we introduce a model-model and model-log comparison framework that applies a divide-and-conquer strategy to measure recall, fitness, and precision. We experimentally show that these discovery and measuring techniques sacrifice little compared to other algorithms, while gaining the ability to cope with event logs of 100,000,000 traces and processes of 10,000 activities on a standard computer.
C1 [Leemans, Sander J. J.; Fahland, Dirk; Van der Aalst, Wil M. P.] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Leemans, SJJ (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM s.j.j.leemans@tue.nl; d.fahland@tue.nl; w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940; Fahland,
   Dirk/0000-0002-1993-9363; Leemans, Sander/0000-0002-5201-7125
CR Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   Adriansyah A, 2014, THESIS EINDHOVEN U T
   Adriansyah A, 2013, LECT NOTES BUS INF P, V132, P137
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], P 15 INT C KNOWL TEC
   ARMASCERVANTES A, 2014, BPM, V8659, P267, DOI DOI 10.1007/978-3-319-10172-9_
   Badouel E., 2012, LNCS, V7347, P128, DOI [10.1007/978-3-642-31131-48, DOI 10.1007/978-3-642-31131-48]
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   Bergenthum R., 2007, PROCESS MINING BASED
   Bergenthum R, 2009, FUND INFORM, V95, P187, DOI 10.3233/FI-2009-147
   Buijs J., 2014, THESIS EINDHOVEN U T
   Buijs J., 2012, Evolutionary Computation (CEC), 2012 IEEE Congress on, P1, DOI DOI 10.1109/CEC.2012.6256458
   Buijs J.C.A.M., 2012, On the Move to Meaningful Internet Systems: OTM 2012, P305, DOI DOI 10.1007/978-3-642-33606-5_19
   Burattin A, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2420, DOI 10.1109/CEC.2014.6900341
   Burattin Andrea., 2015, CoRR
   Carmona J., 2014, BPM DEMOS CEUR WP, V1295
   Cortadella J, 1998, IEEE T COMPUT, V47, P859, DOI 10.1109/12.707587
   Datta S, 2006, IEEE INTERNET COMPUT, V10, P18, DOI 10.1109/MIC.2006.74
   De Weerdt J, 2012, INFORM SYST, V37, P654, DOI 10.1016/j.is.2012.02.004
   Dijkman R M., 2013, Seminal Contributions to Information Systems Engineering, P421
   Dongen B., 2013, Seminal Contributions to Information Systems Engineering, P405, DOI DOI 10.1007/978-3-642-36926-133
   Janicki R., 1994, Journal of Information Processing and Cybernetics, V30, P143
   Evermann J., 2014, IEEE T SERVICES COMP
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gnther CW., 2012, BPM, V940, P40
   Hay B, 2004, KNOWL INF SYST, V6, P150, DOI 10.1007/s10115-003-0109-6
   Hwong YL, 2013, SCI COMPUT PROGRAM, V78, P2435, DOI 10.1016/j.scico.2012.11.009
   Kohavi R., 2000, SIGKDD EXPLORATIONS, V2, P86, DOI [10.1145/380995.381033, DOI 10.1145/380995.381033]
   Kunze M, 2015, SOFTW SYST MODEL, V14, P1105, DOI 10.1007/s10270-013-0389-6
   Leemans M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P44, DOI 10.1109/MODELS.2015.7338234
   Leemans S., 2014, BUS PROC MAN WORKSH
   Leemans Sander J. J., 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P91, DOI 10.1007/978-3-319-07734-5_6
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Leemans S.J.J., 2015, Enterprise, Business-Process and Information Systems Modeling, P85
   Leemans S. J. J., 2014, LECT NOTES BUSINESS, P66, DOI [DOI 10.1007/978-3-319-06257-0, 10.1007/978-3-319-06257-0_6]
   Liesaputra V, 2015, LECT NOTES COMPUT SC, V9253, P441, DOI 10.1007/978-3-319-23063-4_29
   Linz P, 2011, An Introduction to Formal Languages and Automata
   Lu X., 2016, BPM
   Moller A., 2010, DK BRICS AUTOMATON F
   Munoz-Gama J, 2014, INFORM SYST, V46, P102, DOI 10.1016/j.is.2014.04.003
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Redlich D., 2014, SIMPDA, P91
   Redlich D, 2014, LECT NOTES COMPUT SC, V8659, P134, DOI 10.1007/978-3-319-10172-9_9
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   TAPIAFLORES T, 2014, EMERGING TECHNOLOGY, P1, DOI DOI 10.1109/ETFA.2014.7005080
   van Beest NRTP, 2015, LECT NOTES COMPUT SC, V9253, P386, DOI 10.1007/978-3-319-23063-4_26
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst W., 2011, Modeling Business Processes: A Petri Net Oriented Approach
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2013, LECT NOTES BUS INF P, V159, P1
   van der Aalst WMP, 2013, DISTRIB PARALLEL DAT, V31, P471, DOI 10.1007/s10619-013-7127-5
   van der Aalst WilM. P., 2012, Application and Theory of Petri Nets - 33rd International Conference, PETRI NETS 2012, Hamburg, Germany, June 25-29, V7347, P72, DOI [10.1007/978-3-642-31131-45, DOI 10.1007/978-3-642-31131-45]
   van der Werf JMEM, 2009, FUND INFORM, V94, P387, DOI 10.3233/FI-2009-136
   VanGlabbeek RJ, 1996, J ACM, V43, P555, DOI 10.1145/233551.233556
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Weidlich M., 2012, Appl. Theor. Petri Nets, P148
   Weidlich M, 2011, FUND INFORM, V113, P399, DOI 10.3233/FI-2011-614
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   Weijters A.J.M.M., 2006, Technische Universiteit Eindhoven
   Wen L, 2007, DATA MIN KNOWL DISC, V15, P145, DOI 10.1007/s10618-007-0065-y
   Wen LJ, 2007, LECT NOTES COMPUT SC, V4505, P358
   Zha HP, 2010, COMPUT IND, V61, P463, DOI 10.1016/j.compind.2010.01.001
NR 66
TC 116
Z9 120
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 599
EP 631
DI 10.1007/s10270-016-0545-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300013
PM 29706859
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Partridge, C
   de Cesare, S
   Mitchell, A
   Odell, J
AF Partridge, Chris
   de Cesare, Sergio
   Mitchell, Andrew
   Odell, James
TI Formalization of the classification pattern: survey of classification
   modeling in information systems engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Classification system; Classification; Powerset; Powertype; Set theory
ID POWER; SETS
AB Formalization is becoming more common in all stages of the development of information systems, as a better understanding of its benefits emerges. Classification systems are ubiquitous, no more so than in domain modeling. The classification pattern that underlies these systems provides a good case study of the move toward formalization in part because it illustrates some of the barriers to formalization, including the formal complexity of the pattern and the ontological issues surrounding the "one and the many." Powersets are a way of characterizing the (complex) formal structure of the classification pattern, and their formalization has been extensively studied in mathematics since Cantor's work in the late nineteenth century. One can use this formalization to develop a useful benchmark. There are various communities within information systems engineering (ISE) that are gradually working toward a formalization of the classification pattern. However, for most of these communities, this work is incomplete, in that they have not yet arrived at a solution with the expressiveness of the powerset benchmark. This contrasts with the early smooth adoption of powerset by other information systems communities to, for example, formalize relations. One way of understanding the varying rates of adoption is recognizing that the different communities have different historical baggage. Many conceptual modeling communities emerged from work done on database design, and this creates hurdles to the adoption of the high level of expressiveness of powersets. Another relevant factor is that these communities also often feel, particularly in the case of domain modeling, a responsibility to explain the semantics of whatever formal structures they adopt. This paper aims to make sense of the formalization of the classification pattern in ISE and surveys its history through the literature, starting from the relevant theoretical works of the mathematical literature and gradually shifting focus to the ISE literature. The literature survey follows the evolution of ISE's understanding of how to formalize the classification pattern. The various proposals are assessed using the classical example of classification; the Linnaean taxonomy formalized using powersets as a benchmark for formal expressiveness. The broad conclusion of the survey is that (1) the ISE community is currently in the early stages of the process of understanding how to formalize the classification pattern, particularly in the requirements for expressiveness exemplified by powersets, and (2) that there is an opportunity to intervene and speed up the process of adoption by clarifying this expressiveness. Given the central place that the classification pattern has in domain modeling, this intervention has the potential to lead to significant improvements.
C1 [Partridge, Chris; de Cesare, Sergio] Brunel Univ London, London, England.
   [Partridge, Chris; Mitchell, Andrew] BORO Solut, London, England.
   [Odell, James] James Odell Associates, Ann Arbor, MI USA.
C3 Brunel University
RP de Cesare, S (corresponding author), Brunel Univ London, London, England.
EM sergio.decesare@brunel.ac.uk
RI Partridge, Chris/AAA-6370-2020
FU UK Engineering and Physical Sciences Research Council [EP/K009923/1];
   EPSRC [EP/K009923/1] Funding Source: UKRI
FX The authors would like to thank the UK Engineering and Physical Sciences
   Research Council (Grant EP/K009923/1) for supporting this research. We
   would like to thank the editors of this special issue Colin Atkinson,
   Thomas Kuhne and Juan de Lara, and the anonymous reviewers for their
   valuable feedback. We are also grateful to David Bell, David Hay, Brian
   Henderson-Sellers, Lars-Olof Kihlstrom, Matthew West, for their help in
   reviewing earlier drafts of this article.
CR Albano A., 1983, TYPE HIERARCHIES SEM, V18
   [Anonymous], 1974, Data Base Management
   [Anonymous], 2009, P 6 AS PAC C CONC MO
   [Anonymous], 1975, CLARENDON ARISTOTLE
   [Anonymous], ADV OBJECT ORIENTED
   [Anonymous], 2000, The search for mathematical roots, 1870-1940: logics, set theories and the foundations of mathematics from Cantor through Russell to Godel
   [Anonymous], 1967, From Frege to Godel
   Armstrong D. M., 1997, CAMBRIDGE STUDIES PH
   Aspinall D., 2000, Computer Science Logic. 14th International Workshop, CSL 2000. Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.1862), P156
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C., 1999, P WORKSH OBJ OR TECH, P185
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Barwise J., 1996, VICIOUS CIRCLES MATH
   BLACK M, 1971, REV METAPHYS, V24, P614
   Blass A., 1984, Contemp. Math., V30, P5
   Cantor G., 1877, J. Reine Angew. Math, V84, P242
   Cantor Georg, 1895, Mathematische Annalen, V46, P481, DOI [DOI 10.1007/BF01450220, DOI 10.1007/BF02124929]
   Cardelli L., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P70, DOI 10.1145/73560.73566
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Carnap R., 2003, The Logical Structure of the World and Pseudoproblems in Philosophy
   Church A., 1974, Proceedings of the Tarski Symposium, P297
   Clark T., 2014, P MULTI2014 COLOCATE, V1286, P43
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   Codd E. F., 1979, ACM Transactions on Database Systems, V4, P397, DOI 10.1145/320107.320109
   Codd E.F., 1969, IBM RES REP RJ, V599, P19
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Daga A., 2005, SYST SCI 2005 HICSS, p224a
   Daga A., 2004, AMCIS 2004 P, P4278
   Dahchour M, 2002, IEEE T KNOWL DATA EN, V14, P1078, DOI 10.1109/TKDE.2002.1033775
   Devlin K., 1996, Mathematics: The science of patterns: The search for order in life, 171 mind and the universe
   Durkheim Emile., 2009, PRIMITIVE CLASSIFICA
   EILENBERG S, 1945, T AM MATH SOC, V58, P231, DOI 10.2307/1990284
   Elmasri R., 1985, Data & Knowledge Engineering, V1, P75, DOI 10.1016/0169-023X(85)90027-8
   Ferreiros J, 1996, ARCH HIST EXACT SCI, V50, P5, DOI 10.1007/BF00375789
   Ferreirós J, 2011, B SYMB LOG, V17, P361, DOI 10.2178/bsl/1309952318
   Fine G., 1995, On Ideas: Aristotle's Criticism of Plato's Theory of Forms
   FINE K, 1991, NOUS, V25, P263, DOI 10.2307/2215504
   Forster T., 2001, Logic, Meaning and Computation, P109
   Foucault M., 1970, ORDER THINGS ANARCHA
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Freyd P., 1964, Abelian Categories: An Introduction to the Theory of Functors
   GHISELIN MT, 1974, SYST ZOOL, V23, P536, DOI 10.2307/2412471
   GOLDSTEIN RC, 1994, IEEE T KNOWL DATA EN, V6, P835, DOI 10.1109/69.317711
   Goldstein RC, 1999, DATA KNOWL ENG, V29, P293, DOI 10.1016/S0169-023X(98)00043-3
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gonzalez-Perez C, 2007, J SYST SOFTWARE, V80, P1778, DOI 10.1016/j.jss.2007.02.048
   Grothendieck A, 1957, Tohoku Math. J., V9, P119, DOI [10.2748/tmj/1178244839, DOI 10.2748/TMJ/1178244839]
   Gyssens M., 1988, POWERSET ALGEBRA RES, V17
   Halmos P. R., 1960, NAIVE SET THEORY
   Halpin T.A., 2004, CAISE WORKSH, P233
   Hay D.C., 1996, DATA MODEL PATTERNS
   Henderson-Sellers B., 2006, META MODEL ONTOL WOM, V2006, P11
   Henderson-Sellers B., 2005, Conferences in Research and Practice in Information Technology, eds, P7
   Henderson-Sellers B, 2005, J OBJECT TECHNOL, V4, P83, DOI 10.5381/jot.2005.4.7.a3
   Hoare C.A.R., 1972, Structured Programming, P83
   HULL DL, 1978, PHILOS SCI, V45, P335, DOI 10.1086/288811
   HULL R, 1987, COMPUT SURV, V19, P201, DOI 10.1145/45072.45073
   HULL R, 1991, J COMPUT SYST SCI, V43, P219, DOI 10.1016/0022-0000(91)90036-5
   Hull R., 1989, NESTED RELATIONS COM, P85
   International Standards Office, 2007, 24744 ISO
   International Standards Office, 2014, 24744 ISO
   Johnson M, 2009, ELECTRON NOTES THEOR, V225, P21, DOI 10.1016/j.entcs.2008.12.064
   Kanamori A., 1996, B SYMB LOG, V2, P1
   Kent W., 1978, DATA REALITY BASICAS
   Kuhne T., 2007, P 22 ANN ACM SIGPLAN
   Kuper G.M., 1985, LOGICAL DATA MODEL N
   Lakoff G., 1987, Women, Fire, and Dangerous Things: What Categories Reveal About the Mind
   Lewis D., 1986, On the Plurality of Worlds
   Lockemann P. C., 1979, ACM Transactions on Database Systems, V4, P60, DOI 10.1145/320064.320067
   Lycett M, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1516046.1516079
   Maietti ME, 1999, MATH LOGIC QUART, V45, P521, DOI 10.1002/malq.19990450410
   Martin J., 1995, OBJECT ORIENTED METH
   Martin J., 1992, OBJECT ORIENTED ANAL
   Martin J., 1994, Object-Oriented Methods, V1st
   Martin-Lof P., 1975, STUDIES LOGIC FDN MA, V80, P73
   Mayr E, 2002, J ZOOL SYST EVOL RES, V40, P169, DOI 10.1046/j.1439-0469.2002.00211.x
   Mealy G.H., 1967, P FALL JOINT COMPUTE, P525
   Neumayr B., 2008, COMPARISON CRITERIA
   Neumayr B, 2009, LECT NOTES COMPUT SC, V5833, P189, DOI 10.1007/978-3-642-04947-7_23
   Newman Andrew., 1992, The physical basis of predication
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Olson D.R., 1994, WORLD PAPER
   OMG, 2015, UN MOD LANG UML VER
   OMG, 2010, UN MOD LANG SUP VER
   OMG, 2006, UN MOD LANG SUP VER
   Ong W.J., 1982, ORALITY LITERACY TEC, V1
   PARTRIDGE C, 1994, J OBJECT-ORIENT PROG, V7, P39
   Partridge C., 2003, The Ontology and Modelling of Real Estate Transactions, P141
   Partridge C., 2003, 6 EUR C ACC INF SYST
   Partridge C., 2005, BUSINESS OBJECTS RE
   Partridge C., 2002, P 11 OOPSLA WORKSH B
   Partridge C., 2001, OPEN ENTERPRISE SOLU, P130
   Partridge C., 2003, PRACTICAL FDN BUSINE, P271
   Partridge C., 2002, 2 INT WORKSH SEM ENT
   Partridge C., 1996, BUSINESS OBJECTS RE
   PECKHAM J, 1988, COMPUT SURV, V20, P153, DOI 10.1145/62061.62062
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   PIROTTE A, 1994, P 20 INT C VER LARG, P630
   Pirotte A., 2004, J OBJECT TECHNOL, V3, P143
   Plato Gorgias., 1996, PARMENIDES
   Plato Waterfield R., 1994, REPUBLIC
   Ranganathan S.R., 1933, Colon Classification
   Richardson E.C., 1901, Classification: theoretical and practical
   Russell B., 1992, PRINCIPLES MATH
   Sambin Giovanni, 1998, 25 YEARS CONSTRUCTIV, V36, P221
   Shapiro S, 1991, Foundations without Foundationalism
   Shapiro Stewart, 1991, A case for second -order logic, V17
   Silverston L., 2001, DATA MODEL RESOURCE, V1
   Silverston L., 1997, DATA MODEL RESOURCE
   Silverston L., 2001, DATA MODEL RESOURCE, V2
   Silverston L., 2008, DATA MODEL RESOURCE, V3
   Smith J. M., 1977, ACM Transactions on Database Systems, V2, P105, DOI 10.1145/320544.320546
   Soldano H, 2011, LECT NOTES ARTIF INT, V6628, P235, DOI 10.1007/978-3-642-20514-9_18
   TEOREY TJ, 1986, COMPUT SURV, V18, P197, DOI 10.1145/7474.7475
   The Univalent Foundations Program, 2013, Homotopy Type Theory: Univalent Foundations of Mathematics
   Valentini S., 1998, 25 YEARS CONSTR TYPE, V36, P275
   Van Griethuysen J.J., 1982, ISOTC97SC5WG3N695 AN
   West M., 2010, DEV HIGH QUALITY DAT
   Woolf B., 1996, PATTERN LANG PROGR D, V3, P132
   Zermelo E, 1908, MATH ANN, V65, P261, DOI 10.1007/BF01449999
NR 120
TC 8
Z9 8
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 167
EP 203
DI 10.1007/s10270-016-0521-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100011
PM 29449796
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Duran, A
   Benavides, D
   Segura, S
   Trinidad, P
   Ruiz-Cortés, A
AF Duran, Amador
   Benavides, David
   Segura, Sergio
   Trinidad, Pablo
   Ruiz-Cortes, Antonio
TI FLAME: a formal framework for the automated analysis of software product
   lines validated by automated specification testing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Formal specification; Specification testing; Software product lines;
   Feature models
ID MODEL
AB In a literature review on the last 20 years of automated analysis of feature models, the formalization of analysis operations was identified as the most relevant challenge in the field. This formalization could provide very valuable assets for tool developers such as a precise definition of the analysis operations and, what is more, a reference implementation, i.e., a trustworthy, not necessarily efficient implementation to compare different tools outputs. In this article, we present the FLAME framework as the result of facing this challenge. FLAME is a formal framework that can be used to formally specify not only feature models, but other variability modeling languages (VMLs) as well. This reusability is achieved by its two-layered architecture. The abstract foundation layer is the bottom layer in which all VML-independent analysis operations and concepts are specified. On top of the foundation layer, a family of characteristic model layers-one for each VML to be formally specified-can be developed by redefining some abstract types and relations. The verification and validation of FLAME has followed a process in which formal verification has been performed traditionally by manual theorem proving, but validation has been performed by integrating our experience on metamorphic testing of variability analysis tools, something that has shown to be much more effective than manually designed test cases. To follow this automated, test-based validation approach, the specification of FLAME, written in Z, was translated into Prolog and 20,000 random tests were automatically generated and executed. Tests results helped to discover some inconsistencies not only in the formal specification, but also in the previous informal definitions of the analysis operations and in current analysis tools. After this process, the Prolog implementation of FLAME is being used as a reference implementation for some tool developers, some analysis operations have been formally specified for the first time with more generic semantics, and more VMLs are being formally specified using FLAME.
C1 [Duran, Amador; Benavides, David; Segura, Sergio; Trinidad, Pablo; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, ETSI Informat, Av Reina Mercedes S-N, E-41012 Seville, Spain.
C3 University of Sevilla
RP Duran, A (corresponding author), Univ Seville, Dept Comp Languages & Syst, ETSI Informat, Av Reina Mercedes S-N, E-41012 Seville, Spain.
EM amador@us.es; benavides@us.es; sergiosegura@us.es; ptrinidad@us.es;
   aruiz@us.es
RI Durán, Amador/O-4248-2014; Trinidad, Pablo/D-5502-2013; Benavides,
   David/K-2791-2014; Cortés, Antonio Ruiz/B-9056-2008; Segura,
   Sergio/A-9615-2011
OI Durán, Amador/0000-0003-3630-5511; Trinidad, Pablo/0000-0002-1320-2424;
   Benavides, David/0000-0002-8449-3273; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Segura, Sergio/0000-0001-8816-6213
FU European Commission (FEDER); Spanish and Andalusian R&D&I program grant
   COPAS [P12-TIC-1867]; Spanish and Andalusian R&D&I program grant TAPAS
   [TIN2012-32273]; Spanish and Andalusian R&D&I program grant THEOS
   [TIC-5906]; Spanish and Andalusian R&D&I program grant SaaS Firewall
   [IPT-2013-0890-3]
FX This work was partially supported by the European Commission (FEDER),
   and the Spanish and Andalusian R&D&I program grants COPAS
   (P12-TIC-1867), TAPAS (TIN2012-32273), THEOS (TIC-5906), and SaaS
   Firewall (IPT-2013-0890-3).
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Achour I., 2014, INT S NETW COMP COMM, P1
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2003, Programming in Prolog: using the ISO standard (Fifth)
   Bachmeyer RC, 2007, LECT NOTES ARTIF INT, V4604, P179
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2007, THESIS
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   BigLever, BIGL SOFTW GEARS
   Bowen J. P., 2012, Conquering Complexity, P237
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chen T.Y., 1998, HKUSTCS9801 U SCI TE
   Chen T.Y., 2004, PROC 4 IBERO AM S SO, P569
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   El-Sharkawy S., 2012, INT SOFTW PROD LIN C, P126
   Fagereng Johansen M., 2012, INT SOFTW PROD LIN C
   Fan SF, 2006, LECT NOTES ARTIF INT, V4252, P1144
   Fernandez-Amoros D., 2009, P 13 INT SOFTW PROD, P41
   Fernandez-Amoros D, 2014, IEEE T SOFTWARE ENG, V40, P895, DOI 10.1109/TSE.2014.2331073
   Galindo J.A., 2014, P 2014 INT S SOFTWAR, P293, DOI [10.1145/2610384.2610411, DOI 10.1145/2610384.2610411]
   Galindo JA, 2016, SOFTWARE QUAL J, V24, P365, DOI 10.1007/s11219-014-9258-y
   García-Galán J, 2016, FUTURE GENER COMP SY, V55, P200, DOI 10.1016/j.future.2015.03.006
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Gheyi Rohit., 2006, 1st Alloy workshop, P71
   Hewitt M., 1997, Z US M, P35
   ISA Research Group, FAMA TOOL SUIT
   ISO/IEC, 2002, 135682002 ISOIEC
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Kang Kyo C, 1990, Technical Report
   King P, 1990, PRINTING Z OBJECT Z
   Le Berre D, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P21
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Müller C, 2014, IEEE T SERV COMPUT, V7, P530, DOI 10.1109/TSC.2013.9
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R., 2012, INT WORKSH NONF SYST
   Lamancha BP, 2010, LECT NOTES COMPUT SC, V6435, P111, DOI 10.1007/978-3-642-16573-3_9
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Roos-Frantz F, 2012, THESIS
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Saaltink M., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P72, DOI 10.1007/BFb0027284
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Segura S, 2015, SOFTW TEST VERIF REL, V25, P138, DOI 10.1002/stvr.1566
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Segura Sergio., 2008, 1st Workshop on Analyses of Software Product Lines (SPLC'08), P201
   Sun J, 2005, IEEE INT C ENG COMP, P303
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Treinen R., 2009, 003 MANC PROJ
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
   von der Massen T, 2005, LECT NOTES COMPUT SC, V3714, P82
   WEST MM, 1992, SOFTWARE ENG J, V7, P264, DOI 10.1049/sej.1992.0027
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   Wielemaker J, PROLOG UNIT TESTS
   Zhang W, 2004, LECT NOTES COMPUT SC, V3308, P115
   Zhang W, 2008, LECT NOTES COMPUT SC, V5030, P186, DOI 10.1007/978-3-540-68073-4_18
   Zhou Z.Q., 2004, P 8 INT S FUT SOFTW, P346
NR 77
TC 16
Z9 16
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1049
EP 1082
DI 10.1007/s10270-015-0503-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800007
DA 2024-07-18
ER

PT J
AU Lima, L
   Miyazawa, A
   Cavalcanti, A
   Cornélio, M
   Iyoda, J
   Sampaio, A
   Hains, R
   Larkham, A
   Lewis, V
AF Lima, Lucas
   Miyazawa, Alvaro
   Cavalcanti, Ana
   Cornelio, Marcio
   Iyoda, Juliano
   Sampaio, Augusto
   Hains, Ralph
   Larkham, Adrian
   Lewis, Vaughan
TI An integrated semantics for reasoning about SysML design models using
   refinement
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process algebra; CML; Refinement; Automation; SysML; Semantics
ID DIAGRAMS
AB SysML is a variant of UML for systems design. Several formalisations of SysML (and UML) are available. Our work is distinctive in two ways: a semantics for refinement and for a representative collection of elements from the UML4SysML profile (blocks, state machines, activities, and interactions) used in combination. We provide a means to analyse and refine design models specified using SysML. This facilitates the discovery of problems earlier in the system development lifecycle, reducing time, and costs of production. Here, we describe our semantics, which is defined using a state-rich process algebra and implemented in a tool for automatic generation of formal models. We also show how the semantics can be used for refinement-based analysis and development. Our case study is a leadership-election protocol, a critical component of an industrial application. Our major contribution is a framework for reasoning using refinement about systems specified by collections of SysML diagrams.
C1 [Lima, Lucas; Cornelio, Marcio; Iyoda, Juliano; Sampaio, Augusto] Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
   [Miyazawa, Alvaro; Cavalcanti, Ana] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Hains, Ralph; Larkham, Adrian; Lewis, Vaughan] Atego, 701 Eagle Tower,Montpellier Dr, Cheltenham, Glos, England.
C3 Universidade Federal de Pernambuco; University of York - UK
RP Lima, L (corresponding author), Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
EM lal2@cin.ufpe.br; Alvaro.Miyazawa@york.ac.uk
RI Miyazawa, Alvaro/M-7118-2019
OI Miyazawa, Alvaro/0000-0003-2233-9091
FU EU project COMPASS [287829]; Brazilian National Council for Scientific
   and Technological Development-CNPq [483329/2012-6]; EU Horizon INTO-CPS;
   EPSRC [EP/H017461/1, EP/M025756/1] Funding Source: UKRI
FX This work has been funded by the EU FP7 project COMPASS (Grant Agreement
   287829), the EU Horizon 2020 INTO-CPS and the Brazilian National Council
   for Scientific and Technological Development-CNPq (Grant Agreement
   483329/2012-6).
CR Abdelhalim Islam, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P248, DOI 10.1007/978-3-642-33826-7_17
   Abdelhalim I., 2010, P 12 INT C FORM ENG, P371
   [Anonymous], 2013, SPARX SYSTEMS ENTERP
   [Anonymous], 2013, RATIONAL RHAPSODY AR
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Breu R., 1997, UML WORKSH, P93
   Broy M., 2007, TUMI0710 I INF
   Broy M, 2006, TUMI0612 I INF
   Broy M., 2007, TUMI0711 I INF
   Cafe D.C., 2013, P FOR SPEC DES LANG
   Coleman Joey W., 2012, 2012 7th International Conference on System of Systems Engineering (SoSE 2012). Proceedings, P451, DOI 10.1109/SYSoSE.2012.6384150
   Davies J., 2003, Formal Aspects of Computing, V15, P118, DOI 10.1007/s00165-003-0008-3
   Eichner C, 2005, LECT NOTES COMPUT SC, V3530, P133
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Friedenthal S., 2011, A practical guide to SysML: the systems modeling language
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Graves H, 2011, P INT WORKSH DESCR L
   Graves H, 2012, INCOSE S ROM IT
   Graves H, 2011, ANN MATH ARTIF INTEL, V63, P53, DOI 10.1007/s10472-011-9267-5
   Grüninger M, 2003, AI MAG, V24, P63
   Hamilton M.H., 2007, FORMAL UNIVERSAL SYS
   Hoare C. A. R., 1998, Unifying Theories of Programming
   Hoare CAR., 1985, Communicating Sequential Processes
   Holt J., 2008, SysML for Systems Engineering, V7
   Kuske S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P11
   Lano K, 1999, LECT NOTES COMPUT SC, V1577, P129
   Laurent Y, 2014, LECT NOTES COMPUT SC, V8484, P347, DOI 10.1007/978-3-319-07881-6_24
   Lilius J., 1999, TECH REP
   Lima Lucas, 2013, Formal Methods: Foundations and Applications. 16th Brazilian Symposium, SBMF 2013. Proceedings: LNCS 8195, P179, DOI 10.1007/978-3-642-41071-0_13
   Lima L., 2014, TECH REP
   Lima L., 2014, P INT C MOD DRIV ENG
   Meng S., 2004, P 2 INT C SOFTW ENG
   Miyazawa A., 2014, P 11 INT C INT FORM
   Miyazawa A., 2013, LECT NOTES COMPUTER, V8144
   Miyazawa A., 2013, TECH REP
   Object Management Group, 2017, OMG Unified Modeling Language (OMG UML)
   Object Management Group, 2014, TECH REP
   OMG, 2011, BUSINESS PROCESS MOD
   OMG, 2010, TECH REP
   OMG, 2012, OMG SYST MOD LANG OM
   Panda PR, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P75, DOI 10.1109/ISSS.2001.957916
   Ramos R, 2005, LECT NOTES COMPUT SC, V3535, P99
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Storrle H., 2004, Trace Semantics of Interactions in UML 2.0
   Vachoux A, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL III, P914
   Wood J., 2012, PHASE ONE PRELIMINAR, P1, DOI DOI 10.1109/SYSOSE.2012.6384144
   Woodcock J., 2012, D231 COMPASS
NR 48
TC 8
Z9 8
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 875
EP 902
DI 10.1007/s10270-015-0492-y
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800013
DA 2024-07-18
ER

PT J
AU Duarte, L
   Kramer, J
   Uchitel, S
AF Duarte, Lucio Mauro
   Kramer, Jeff
   Uchitel, Sebastian
TI Using contexts to extract models from code
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Behaviour models; Model extraction; Model analysis
ID VERIFICATION; EXECUTION
AB Behaviour models facilitate the understanding and analysis of software systems by providing an abstract view of their behaviours and also by enabling the use of validation and verification techniques to detect errors. However, depending on the size and complexity of these systems, constructing models may not be a trivial task, even for experienced developers. Model extraction techniques can automatically obtain models from existing code, thus reducing the effort and expertise required of engineers and helping avoid errors often present in manually constructed models. Existing approaches for model extraction often fail to produce faithful models, either because they only consider static information, which may include infeasible behaviours, or because they are based only on dynamic information, thus relying on observed executions, which usually results in incomplete models. This paper describes a model extraction approach based on the concept of contexts, which are abstractions of concrete states of a program, combining static and dynamic information. Contexts merge some of the advantages of using either type of information and, by their combination, can overcome some of their problems. The approach is partially implemented by a tool called LTS Extractor, which translates information collected from execution traces produced by instrumented Java code to labelled transition systems (LTS), which can be analysed in an existing verification tool. Results from case studies are presented and discussed, showing that, considering a certain level of abstraction and a set of execution traces, the produced models are correct descriptions of the programs from which they were extracted. Thus, they can be used for a variety of analyses, such as program understanding, validation, verification, and evolution.
C1 [Duarte, Lucio Mauro] Fed Univ Rio Grande Sul UFRGS, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
   [Kramer, Jeff; Uchitel, Sebastian] Imperial Coll London, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
C3 Universidade Federal do Rio Grande do Sul; Imperial College London
RP Duarte, L (corresponding author), Fed Univ Rio Grande Sul UFRGS, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
EM lmduarte@inf.ufrgs.br; jk@doc.ic.ac.uk; su2@doc.ic.ac.uk
RI Duarte, Lucio M/A-4212-2013
OI Uchitel, Sebastian/0000-0001-9352-1478
FU CAPES; CNPq
FX This work was sponsored by CAPES and CNPq.
CR Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1971, IJCAI
   [Anonymous], 2013, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), DOI [10.1145/2483760.2483783, DOI 10.1145/2483760.2483783]
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   Belinfante A, 2010, LECT NOTES COMPUT SC, V6015, P266, DOI 10.1007/978-3-642-12002-2_21
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Bodhuin T, 2009, COMM COM INF SC, V59, P143
   Burtscher M., 2004, Performance Evaluation Review, V32, P167, DOI 10.1145/1012888.1005708
   Chaki S, 2005, FORM ASP COMPUT, V17, P461, DOI 10.1007/s00165-005-0071-z
   Chaki S, 2004, IEEE T SOFTWARE ENG, V30, P388, DOI 10.1109/TSE.2004.22
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke EM, 1999, MODEL CHECKING, P1
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cordy JR, 2002, INFORM SOFTWARE TECH, V44, P827, DOI 10.1016/S0950-5849(02)00104-0
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Duarte L.M., 2007, THESIS
   Duarte LM, 2008, LECT NOTES COMPUT SC, V4961, P101, DOI 10.1007/978-3-540-78743-3_9
   Duarte LM, 2006, LECT NOTES COMPUT SC, V4199, P380
   Fernandez J. -C., 2003, LNCS, P147
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gao X., 2006, Proceedings of the 15th IEEE International Symposium on High Performance Distributed Computing (IEEE Cat. No.06TH8878), P57
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   Giannakopoulou D, 2012, LECT NOTES COMPUT SC, V7460, P248, DOI 10.1007/978-3-642-33125-1_18
   Gradara S., 2004, ENTCS, V110, P55
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Hoare CAR., 1985, Communicating Sequential Processes
   Holzmann G. J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P597, DOI 10.1109/ICSE.1999.841053
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P3, DOI 10.1109/CSD.2001.981759
   Holzmann GJ, 2001, SOFTW TEST VERIF REL, V11, P65, DOI 10.1002/stvr.228
   Ichii M., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P308, DOI 10.1109/WCRE.2012.40
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kwiatkowska Marta., 2001, Proc. Tools Session of Aachen 2001 International Multiconference on Measurement, P7
   Lei Feng, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P164, DOI 10.1007/978-3-642-41707-8_11
   Leuschel M., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P99
   Li H. F., 2004, Automated Software Engineering, V11, P63, DOI 10.1023/B:AUSE.0000008668.12782.6c
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Machado PDL, 2007, ELECTRON NOTES THEOR, V184, P3, DOI 10.1016/j.entcs.2007.06.001
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Mariani L., 2005, BEHAV CAPTURE TEST D
   Meinke K, 2012, COMM COM INF SC, V336, P200
   Meinke K, 2011, LECT NOTES COMPUT SC, V6706, P134, DOI 10.1007/978-3-642-21768-5_11
   Milner R., 1989, Communication and concurrency
   Nimmer J. W., 2002, Software Engineering Notes, V27, P232, DOI 10.1145/566171.566213
   Odom J., 2005, ACM IEEE SC, P59, DOI [10.1109/SC.2005.77, DOI 10.1109/SC.2005.77]
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Utting M., 2011, DESIGN EXTENDED FINI
   Utting M., 2007, PRACTICAL MODEL BASE
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Yu YJ, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P363
NR 63
TC 10
Z9 11
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2017
VL 16
IS 2
BP 523
EP 557
DI 10.1007/s10270-015-0466-0
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ET6IQ
UT WOS:000400395400011
OA Green Published
DA 2024-07-18
ER

PT J
AU Choi, YJ
   Byun, T
AF Choi, Yunja
   Byun, Taejoon
TI Constraint-based test generation for automotive operating systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Verification; Constraint specification; Operating system; Automotive
   software; Test generation
ID SPECIFICATION
AB This work suggests a method for systematically constructing a software-level environment model for safety checking automotive operating systems by introducing a constraint specification language, OSEK_CSL. OSEK_CSL is designed to specify the usage constraints of automotive operating systems using a pre-defined set of constraint types identified from the international standard OSEK/VDX. Each constraint specified in OSEK_CSL is interpreted as either a regular language or a context-free language that can be checked by a finite automaton or a pushdown automaton. The set of usage constraints is used to systematically classify the universal usage model of OSEK-/VDX-based operating systems and to generate test sequences with varying degrees of constraint satisfaction using LTL model checking. With pre-defined constraint patterns and the full support of automation, test engineers can choose the degree of constraint satisfaction and generate test cases using combinatorial intersections of selected constraints that cover all corner cases classified by constraints. A series of experiments on an open-source automotive operating system show that our approach finds safety issues more effectively than conventional specification-based testing, scenario-based testing, and conformance testing.
C1 [Choi, Yunja; Byun, Taejoon] Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
C3 Kyungpook National University
RP Choi, YJ (corresponding author), Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
EM yuchoi76@knu.ac.kr; bntejn@gmail.com
FU National Research Foundation of Korea - Korean Government
   [NRF-2012S1A2A1A01031160]; MSIP (Ministry of Science, ICT and Future
   Planning), Korea, under the ITRC (Information Technology Research
   Center) [NIPA-2014-H0301-14-1023]
FX This work was supported by the National Research Foundation of Korea
   Grant funded by Korean Government (NRF-2012S1A2A1A01031160) and the MSIP
   (Ministry of Science, ICT and Future Planning), Korea, under the ITRC
   (Information Technology Research Center) support program
   (NIPA-2014-H0301-14-1023) supervised by the NIPA (National IT Industry
   Promotion Agency).
CR [Anonymous], 2008, 26262 ISO CD
   Baier C, 2006, SCI COMPUT PROGRAM, V61, P75, DOI 10.1016/j.scico.2005.10.008
   Bechennec J.-L., 2006, P IEEE C EM TECHN FA, P62
   Botaschanjan J, 2008, FORM ASP COMPUT, V20, P637, DOI 10.1007/s00165-008-0097-0
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   Chen J, 2011, ASIA PAC SOFWR ENG, P274, DOI 10.1109/APSEC.2011.26
   Choi Y, 2013, LECT NOTES COMPUT SC, V8137, P305, DOI 10.1007/978-3-642-40561-7_21
   Choi Y, 2014, SOFTW TEST VERIF REL, V24, P38, DOI 10.1002/stvr.1482
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de la Riva C., 2006, J SYST SOFTW
   der Riden T. I., 2005, P INT WORKSH FORM ME
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   El-Fakih K, 2004, IEEE T SOFTWARE ENG, V30, P425, DOI 10.1109/TSE.2004.31
   Endres E., 2010, P NASA FORM METH S
   Fraser G., 2009, INT C SOFTW TEST VER
   Fraser G, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P72, DOI 10.1109/TAICPART.2009.20
   Gopinath D., 2012, 27 IEEE ACM INT C AU
   Gupta A, 2008, FORM METHOD SYST DES, V32, P285, DOI 10.1007/s10703-008-0050-0
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Hessel A., 2008, FORM METHODS TEST
   John D., 1998, P OSEK VDX OPEN SYST
   Jovanovi D., 2013, 14 INT C VER MOD CHE
   Kattenbelt M, 2009, LECT NOTES COMPUT SC, V5403, P182, DOI 10.1007/978-3-540-93900-9_17
   Klein G, 2010, COMMUN ACM, V53, P107, DOI 10.1145/1743546.1743574
   Krichen M., 2009, FORM METHODS SYSTEM
   Lettnin D., 2009, P DES AUT TEST EUR C
   Ling Fang, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P251, DOI 10.1109/ICST.2012.105
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Park M, 2012, ELECTRON P THEOR COM, P69, DOI 10.4204/EPTCS.105.6
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rollini Simone Fulvio, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P193, DOI 10.1007/978-3-642-31424-7_18
   Shi JQ, 2012, IEEE INT C ENG COMP, P293, DOI 10.1109/ICECCS.2012.27
   Tkachuk O, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/ASE.2003.1240300
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Yanhong Huang, 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P142, DOI 10.1109/TASE.2011.11
   Yatake K, 2010, LECT NOTES COMPUT SC, V6349, P58
   Zhou L., 2010, IEE INT C COMP INF T
NR 39
TC 10
Z9 10
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 7
EP 24
DI 10.1007/s10270-014-0449-6
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500003
DA 2024-07-18
ER

PT J
AU Hassine, J
   Amyot, D
AF Hassine, Jameleddine
   Amyot, Daniel
TI An empirical approach toward the resolution of conflicts in
   goal-oriented models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Goal model; Conflict resolution; GRL; Statistical analysis; Empirical
   analysis; Concept analysis
AB One significant problem requirements engineers have to cope with is the management of unclear requirements, ambiguities, and conflicts that may arise between stakeholders. Such issues may be desirable since they may allow for further elicitation of requirements that would have been missed otherwise. Goal models capture the objectives and other intentions of different stakeholders, together with their relationships. They can be used to refine unclear requirements and to detect conflicts and ambiguities early during model validation. However, resolving such ambiguities and conflicts is key for the successful implementation of the goal models. In this paper, we propose a novel approach to validate models in the Goal-oriented Requirement Language and resolve conflicts between the perspectives of intervening stakeholders (and especially between stakeholders of a given group). Our approach is based on a statistical analysis of empirical data that we collect from surveys designed for each group of stakeholders. We apply concept analysis in order to fix goal-model artifacts that are subject to conflict. We illustrate our approach using a case study of a goal model describing the involvement of undergraduate students in university research activities.
C1 [Hassine, Jameleddine] KFUPM, Dept Comp Sci, Dhahran 31261, Saudi Arabia.
   [Amyot, Daniel] Univ Ottawa, Sch Elect Engn & Comp Sci, 800 King Edward St, Ottawa, ON K1N 6N5, Canada.
C3 King Fahd University of Petroleum & Minerals; University of Ottawa
RP Hassine, J (corresponding author), KFUPM, Dept Comp Sci, Dhahran 31261, Saudi Arabia.
EM jhassine@kfupm.edu.sa; damyot@eecs.uottawa.ca
RI Amyot, Daniel/AAI-6948-2020; Hassine, Jameleddine/E-5940-2015
OI Amyot, Daniel/0000-0003-2414-1791; Hassine,
   Jameleddine/0000-0001-8170-9860
CR Akhigbe O, 2014, LECT NOTES COMPUT SC, V8824, P466, DOI 10.1007/978-3-319-12206-9_40
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Amyot D, 2009, LECT NOTES COMPUT SC, V5833, P254, DOI 10.1007/978-3-642-04947-7_31
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], 2012, REC Z 151 10 12 US R
   [Anonymous], STAND ALONE SERIES
   [Anonymous], 2008, 16 ACM SIGSOFT INT S
   [Anonymous], 2005, SEKE 2005
   [Anonymous], 1999, KLUWER INT SERIES SO
   [Anonymous], SPSS SOFTW
   [Anonymous], 1925, STAT METHODS RES WOR
   [Anonymous], JUCMNAV PROJ TOOL DO
   BOEHM B, 1995, PROC INT CONF SOFTW, P243, DOI 10.1145/225014.225037
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Easterbrook S., 1991, Knowledge Acquisition, V3, P255, DOI 10.1016/1042-8143(91)90007-A
   Espada Patricia, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P562, DOI 10.1007/978-3-642-38709-8_36
   Franch X, 2009, LECT NOTES COMPUT SC, V5565, P201, DOI 10.1007/978-3-642-02144-2_19
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Grimmer J, 2013, POLIT ANAL, V21, P267, DOI 10.1093/pan/mps028
   Hassine Jameleddine, 2013, System Analysis and Modeling: Theory and Practice. 7th International Workshop, SAM 2012. Revised Selected Papers, P212, DOI 10.1007/978-3-642-36757-1_13
   Hassine J, 2016, REQUIR ENG, V21, P285, DOI 10.1007/s00766-015-0221-7
   Horkoff J., 2008, PROC, P43
   Horkoff J., 2006, Proceedings of the 2006 International Conference on Privacy Security and Trust Bridge the Gap Between PST Technologies and Business Services PST 06, P1
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Jackson KM, 2002, ORGAN RES METHODS, V5, P307, DOI 10.1177/109442802237114
   Jackson S.L., 2010, Research methods: a modular approach
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Jureta IJ, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P57, DOI 10.1109/RE.2009.8
   Kassab M., 2013, IEEE 7th International Conference on Research Challenges in Information Science (RCIS), IEEE, P1
   KNAPP TR, 1990, NURS RES, V39, P121
   LABOVITZ S, 1967, SOC FORCES, V46, P151, DOI 10.2307/2574595
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Mirbel Isabelle, 2012, Computational Logic in Multi-Agent Systems. Proceedings of the 13th International Workshop, CLIMA XIII, P110, DOI 10.1007/978-3-642-32897-8_9
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Robinson W. N., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P219, DOI 10.1145/75199.75232
   ROBINSON WN, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P268, DOI 10.1109/ICSE.1990.63633
   Ryan G.W., 2000, HDB QUALITATIVE RES, V2nd, P769, DOI DOI 10.1177/0002764204273170
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Schuman H., 1981, QUESTIONS ANSWERS AT
   Seidel J., 1995, Computer-aided qualitative data analysis, P52
   Tabachnick B.G., 2014, USING MULTIVARIATE S, V6
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Vinay S, 2013, ADV INTELL SYST, V174, P441
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 49
TC 10
Z9 10
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 279
EP 306
DI 10.1007/s10270-015-0460-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500016
DA 2024-07-18
ER

PT J
AU Said, MY
   Butler, M
   Snook, C
AF Said, Mar Yah
   Butler, Michael
   Snook, Colin
TI A method of refinement in UML-B
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Visual modelling languages; Formal specification; UML-B; Event-B; Class
   diagram; State machine
AB UML-B is a 'UML-like' graphical front-end for Event-B that provides support for object-oriented and state machine modelling concepts, which are not available in Event-B. In particular, UML-B includes class diagram and state machine diagram editors with automatic generation of corresponding Event-B. In Event-B, refinement is used to relate system models at different abstraction levels. The same refinement concepts are also applicable in UML-B but require special consideration due to the higher-level modelling concepts. In previous work, we described a case study to introduce support for refinement in UML-B. We now provide a more complete presentation of the technique of refinement in UML-B including a formalisation of the refinement rules and a definition of the extensions to the abstract syntax of UML-B notation. The provision of gluing invariants to discharge the proof obligations associated with a refinement is a significant step in providing verifiable models. We discuss and compare two approaches for constructing gluing invariants in the context of UML-B refinement.
C1 [Said, Mar Yah] Univ Putra Malaysia, FSKTM, Serdang 43400, Malaysia.
   [Butler, Michael; Snook, Colin] Univ Southampton, ECS, Southampton, Hants, England.
C3 Universiti Putra Malaysia; University of Southampton
RP Said, MY (corresponding author), Univ Putra Malaysia, FSKTM, Serdang 43400, Malaysia.
EM maryah@upm.edu.my; mjb@ecs.soton.ac.uk; cfs@ecs.soton.ac.uk
OI Butler, Michael/0000-0003-4642-5373; Snook, Colin/0000-0002-0210-0983
FU ADVANCE project; Malaysian government; EU FP7 ADVANCE Project [ICT
   287563]; Ministry Higher Education Malaysia; Universiti Putra Malaysia
FX The authors gratefully acknowledge the financial assistance from the
   ADVANCE project and the Malaysian government. Butler and snook are
   funded in part by the EU FP7 ADVANCE Project (ICT 287563),
   www.advance-ict.eu. Mar Yah is funded by the Ministry Higher Education
   Malaysia and Universiti Putra Malaysia. We would like to thank the
   reviewers for their insightful comments and feedback on this paper.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2007, FUND INFORM, V77, P1
   Amalio N, 2006, SOFTWARE SPECIFICATI, P81
   [Anonymous], WORKSH TOOL BUILD FO
   Bergner K., 1999, 32 ANN HAW INT C, V6, P6018
   Butler M, 2007, BCS FACS CHRISTM 200
   *ECL FDN, ECL MOD FRAM
   Fischer C, 1997, TECHNICAL REPORT
   Frey P., 2000, SEM SOFTW TECHN I SO
   Idani A, 2005, LECT NOTES COMPUT SC, V3785, P37
   Ireland A, 2010, LECT NOTES COMPUT SC, V5977, P189, DOI 10.1007/978-3-642-11811-1_15
   Knapp A, 2004, LECT NOTES COMPUT SC, V3116, P274
   Laleau R., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P517
   LALEAU R, 2001, LNCS, V2068, P402
   Lano K, 2004, LECT NOTES COMPUT SC, V2999, P187
   Larsen Peter Gorm., 2010, SIGSOFT Softw. Eng. Notes, V35, P1, DOI DOI 10.1145/1668862.1668864
   Lausdahl K., 2008, THESIS
   Ledang H., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P109
   Llano M. T., 2012, DISCOVERY INVARIANTS, P1
   Mammar A., 2006, Automated Software Engineering, V13, P497, DOI 10.1007/s10515-006-0273-5
   Merz S, 2003, LECT NOTES COMPUT SC, V2621, P87
   Metayer C., 2005, IST511599RODIN EU
   Moller M, 2004, LECT NOTES COMPUT SC, V2999, P267
   *OBJ MAN GROUP, INTR OMGS UN MOD LAN
   *OBJ MAN GROUP, MET OBJ FAC MOF 2 0
   Object Management Group, UML 2 1 2 SUP SPEC
   Plaska M., 2007, P WORKSH METH MOD TO, P251
   Rumbaugh J., 1999, UNIFIED MODELLING LA, V1st
   Said M. Y., 2010, THESIS
   Said MY, 2009, LECT NOTES COMPUT SC, V5850, P579, DOI 10.1007/978-3-642-05089-3_37
   Simons AJH, 2006, SOFTW TEST VERIF REL, V16, P133, DOI 10.1002/stvr.349
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Snook Colin, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P336
   Snook C., 2004, UML B SPECIFICATION, P69
   Snook C., 2006, LNCS, V4355, P171
   Snook Colin., 2012, Formal Methods for Components and Objects, P251
   The Eclipse Foundation, GRAPH MOD PROJ
NR 39
TC 23
Z9 23
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1557
EP 1580
DI 10.1007/s10270-013-0391-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900012
DA 2024-07-18
ER

PT J
AU Desel, J
   Reisig, W
AF Desel, Joerg
   Reisig, Wolfgang
TI The concepts of Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling language; Petri nets; Carl Adam Petri; Modularity; Locality
C1 [Desel, Joerg] Fernuniv, Informat, Hagen, Germany.
   [Reisig, Wolfgang] Humboldt Univ, Inst Comp Sci, D-10099 Berlin, Germany.
C3 Fern University Hagen; Humboldt University of Berlin
RP Desel, J (corresponding author), Fernuniv, Informat, Hagen, Germany.
EM joerg.desel@FernUni-Hagen.de
CR [Anonymous], 1994, WILEY SERIES PARALLE
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Desel J, 2004, LECT NOTES COMPUT SC, V3147, P270
   Desel J, 2001, LECT NOTES COMPUT SC, V2128, P1
   Keller G, 1992, VEROFFENTLICHUNGEN I
   NUTTGENS M, 2002, PROZESSORIENTIERTE M, V21, P64
   PETRI CA, 1962, I INSTRUMENTELLE MAT
   Popova-Zeugmann L., 2013, Time and Petri Nets
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   SCHMIDT K, 2005, LNI P, V75, P236
   Sreenivas R.S., 1991, AM CONTR C 1991, P2899
   STARKE PH, 1990, LECT NOTES COMPUT SC, V424, P418
   STORRLE H, 2005, LNI, V64, P117
   van der Aalst W.M.P., EPK 2002 GESCHAFTSPR, P71
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
NR 15
TC 12
Z9 12
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 669
EP 683
DI 10.1007/s10270-014-0423-3
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400009
DA 2024-07-18
ER

PT J
AU Bavota, G
   Gravino, C
   Oliveto, R
   De Lucia, A
   Tortora, G
   Genero, M
   Cruz-Lemus, JA
AF Bavota, Gabriele
   Gravino, Carmine
   Oliveto, Rocco
   De Lucia, Andrea
   Tortora, Genoveffa
   Genero, Marcela
   Cruz-Lemus, Jose A.
TI A fine-grained analysis of the support provided by UML class diagrams
   and ER diagrams during data model maintenance
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
AB This paper presents the results of an empirical study aiming at comparing the support provided by ER and UML class diagrams during maintenance of data models. We performed one controlled experiment and two replications that focused on comprehension activities (the first activity in the maintenance process) and another controlled experiment on modification activities related to the implementation of given change requests. The results achieved were analyzed at a fine-grained level aiming at comparing the support given by each single building block of the two notations. Such an analysis is used to identify weaknesses (i.e., building blocks not easy to comprehend) in a notation and/or can justify the need of preferring ER or UML for data modeling. The analysis revealed that the UML class diagrams generally provided a better support for both comprehension and modification activities performed on data models as compared to ER diagrams. Nevertheless, the former has some weaknesses related to three building blocks, i.e., multi-value attribute, composite attribute, and weak entity. These findings suggest that an extension of UML class diagrams should be considered to overcome these weaknesses and improve the support provided by UML class diagrams during maintenance of data models.
C1 [Bavota, Gabriele; Gravino, Carmine; De Lucia, Andrea; Tortora, Genoveffa] Univ Salerno, I-84100 Salerno, Italy.
   [Oliveto, Rocco] Univ Molise, Pesche, Isernia, Italy.
   [Genero, Marcela; Cruz-Lemus, Jose A.] Univ Castilla La Mancha, La Mancha, Spain.
C3 University of Salerno; University of Molise; Universidad de Castilla-La
   Mancha
RP Oliveto, R (corresponding author), Univ Molise, Pesche, Isernia, Italy.
EM rocco.oliveto@unimol.it
RI Tortora, Genoveffa/M-8155-2019; De Lucia, Andrea/AAG-6781-2020; GENERO,
   MARCELA/L-6480-2014; Cruz-Lemus, Jose A./B-7299-2015
OI GENERO, MARCELA/0000-0002-6868-7465; Cruz-Lemus, Jose
   A./0000-0002-0470-609X; BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425; Gravino, Carmine/0000-0002-4394-9035
FU project ORIGIN (CDTI-MICINN); project ORIGIN (FEDER) [IDI-2010043(1-5)];
   project GEODAS-BC (Ministerio de Econom'a y Competitividad); project
   GEODAS-BC (FEDER) [TIN2012-37493-C03-01]
FX We would like to thank all the students participated as subjects to the
   controlled experiments. We would also like to thank the anonymous
   reviewers for their detailed, constructive, and thoughtful comments that
   helped us to improve the presentation of the results in this paper. This
   research has been partially funded by the following projects: ORIGIN
   (CDTI-MICINN and FEDER, IDI-2010043(1-5)) and GEODAS-BC (Ministerio de
   Econom'a y Competitividad and FEDER, TIN2012-37493-C03-01).
CR Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, ROMBACH GOAL QUESTIO
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Bavota G., 2012, UML VS ER EXPT MAT
   Bock D. B., 1993, Journal of Database Management, V4, P30
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   BROSEY M, 1978, INT J MAN MACH STUD, V10, P625, DOI 10.1016/S0020-7373(78)80024-8
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Decorte G., 1992, Eighth International Conference on Data Engineering (Cat. No.92CH3097-3), P126, DOI 10.1109/ICDE.1992.213199
   DURDING BM, 1977, HUM FACTORS, V19, P1
   Juhn S. H., 1985, Proceedings of the Sixth International Conference on Information Systems, P212
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Liao C., 1998, MIS REV, V8, P1
   Liao CC, 2000, INT J HUM-COMPUT ST, V52, P831, DOI 10.1006/ijhc.1999.0358
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   NAVATHE SB, 1992, COMMUN ACM, V35, P112, DOI 10.1145/130994.131001
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PALVIA P, 1991, INFORM MANAGE, V21, P217, DOI 10.1016/0378-7206(91)90067-C
   Palvia P. C., 1992, Journal of Database Management, V3, P4
   Shoval P., 1994, Journal of Database Management, V5, P28
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Sirkin R., 2005, STAT SOCIAL SCI
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 26
TC 4
Z9 4
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 287
EP 306
DI 10.1007/s10270-012-0312-6
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CA6LT
UT WOS:000349026100017
DA 2024-07-18
ER

PT J
AU Meedeniya, I
   Moser, I
   Aleti, A
   Grunske, L
AF Meedeniya, Indika
   Moser, Irene
   Aleti, Aldeida
   Grunske, Lars
TI Evaluating probabilistic models with uncertain model parameters
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software architecture evaluation; Parameter uncertainty; Probabilistic
   quality models; Monte-Carlo simulation
ID PERFORMANCE PREDICTION; RELIABILITY; OPTIMIZATION; SYSTEMS; DESIGN;
   PROPAGATION; CHECKING
AB Probabilistic models are commonly used to evaluate quality attributes, such as reliability, availability, safety and performance of software-intensive systems. The accuracy of the evaluation results depends on a number of system properties which have to be estimated, such as environmental factors or system usage. Researchers have tackled this problem by including uncertainties in the probabilistic models and solving them analytically or with simulations. The input parameters are commonly assumed to be normally distributed. Accordingly, reporting the mean and variances of the resulting attributes is usually considered sufficient. However, many of the uncertain factors do not follow normal distributions, and analytical methods to derive objective uncertainties become impractical with increasing complexity of the probabilistic models. In this work, we introduce a simulation-based approach which uses Discrete Time Markov Chains and probabilistic model checking to accommodate a diverse set of parameter range distributions. The number of simulation runs automatically regulates to the desired significance level and reports the desired percentiles of the values which ultimately characterises a specific quality attribute of the system. We include a case study which illustrates the flexibility of this approach using the evaluation of several probabilistic properties.
C1 [Meedeniya, Indika; Moser, Irene] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Aleti, Aldeida] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Grunske, Lars] Univ Kaiserslautern, Fac Comp Sci, D-67653 Kaiserslautern, Germany.
   [Grunske, Lars] Univ Kaiserslautern, Ctr Math & Computat Modelling CM, D-67653 Kaiserslautern, Germany.
C3 Swinburne University of Technology; Monash University; University of
   Kaiserslautern; University of Kaiserslautern
RP Meedeniya, I (corresponding author), Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
EM imeedeniya@swin.edu.au; imoser@swin.edu.au; aldeida.aleti@monash.edu;
   grunske@cs.uni-kl.de
RI Aleti, Aldeida/AAE-8486-2019; Grunske, Lars/AAH-4550-2019
OI Aleti, Aldeida/0000-0002-1716-690X; Grunske, Lars/0000-0002-8747-3745
FU Commonwealth of Australia through the Cooperative Research Center for
   Advanced Automotive Technology [C4-501]; C<SUP>e</SUP>nter for
   Mathematical and Computational Modelling (CM) 2 at the University of
   Kaiserslautern
FX This original research was proudly supported by the Commonwealth of
   Australia, through the Cooperative Research Center for Advanced
   Automotive Technology (projects C4-501: Safe and Reliable Integration
   and Deployment Architectures for Automotive Software Systems).
   Furthermore, the research was supported by the Center for Mathematical
   and Computational Modelling (CM) 2 at the University of Kaiserslautern.
CR ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   [Anonymous], 2007, APPL STAT PROBABILIT
   [Anonymous], P 16 IEEE INT S SOFT
   [Anonymous], SIMULATION MONTE CAR
   Ardagna D, 2008, LECT NOTES COMPUT SC, V5281, P1, DOI 10.1007/978-3-540-87879-7_1
   Assayad I, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P347
   Axelsson J., 2006, CURRENT PRACTICE
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Baier C, 1999, LECT NOTES COMPUT SC, V1664, P146
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Basseur M, 2006, LECT NOTES COMPUT SC, V3907, P727
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P169
   Beyer HG, 2007, COMPUT METHOD APPL M, V196, P3190, DOI 10.1016/j.cma.2007.03.003
   Bhunia AK, 2010, APPL MATH COMPUT, V216, P929, DOI 10.1016/j.amc.2010.01.106
   Birolini A, 2010, RELIABILITY ENGINEERING: THEORY AND PRACTICE, SIXTH EDITION, P1, DOI 10.1007/978-3-642-14952-8_1
   BOLCH G, 1998, QUEUING NETWORK MARK
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Ciesinski R, 2004, LECT NOTES COMPUT SC, V2925, P147
   Coit DW, 2002, COMPUT IND ENG, V41, P423, DOI 10.1016/S0360-8352(01)00066-3
   Coit DW, 2004, IEEE T RELIAB, V53, P369, DOI 10.1109/TR.2004.833312
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Fiondella L., 2008, P IPDPS 2008, P1
   Forster Marc, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P146, DOI 10.1109/ISSRE.2009.22
   Frolund S., 1998, Distributed Systems Engineering, V5, P179, DOI 10.1088/0967-1846/5/4/005
   Goseva-Popstojanova K, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/HASE.2004.1281745
   Goseva-Popstojanova K, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P307, DOI 10.1109/ISSRE.2003.1251052
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2007, P INT COMP SOFTW APP, P423
   Goseva-Popstojanova K, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P197
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Grunske L, 2008, IEEE HI ASS SYS ENGR, P283, DOI 10.1109/HASE.2008.32
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Jhumka A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P111
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Kwiatkowska M., 2004, International Journal on Software Tools for Technology Transfer, V6, P128, DOI 10.1007/s10009-004-0140-2
   Kwiatkowska M., 2005, ACM SIGMETRICS PERFO, V32, P16
   Kwiatkowska M, 2006, FORM METHOD SYST DES, V29, P33, DOI 10.1007/s10703-006-0005-2
   Limbourg P, 2008, RELIAB ENG SYST SAFE, V93, P815, DOI 10.1016/j.ress.2007.03.032
   Marseguerra M, 2005, IEEE T RELIAB, V54, P243, DOI 10.1109/TR.2005.847279
   Meedeniya I., 2011, QOSAISARCS, P85
   Meedeniya I, 2011, J SYST SOFTWARE, V84, P835, DOI 10.1016/j.jss.2011.01.004
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Oberkampf WL, 2004, RELIAB ENG SYST SAFE, V85, P11, DOI 10.1016/j.ress.2004.03.002
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Roshandel R., 2006, 28th International Conference on Software Engineering Proceedings, P853, DOI 10.1145/1134285.1134432
   Roshandel R, 2007, LECT NOTES COMPUT SC, V4880, P108
   Sanchez A, 2009, RELIAB ENG SYST SAFE, V94, P22, DOI 10.1016/j.ress.2007.03.022
   Trivedi K., 2009, PROIBABILITY STAT RE
   Wang W., 2002, DEP COMP 1999 P 1999, P143
   Wattanapongsakorn N, 2007, RELIAB ENG SYST SAFE, V92, P395, DOI 10.1016/j.ress.2005.12.011
   Yin L, 2001, P A REL MAI, P229, DOI 10.1109/RAMS.2001.902472
NR 52
TC 13
Z9 15
U1 2
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1395
EP 1415
DI 10.1007/s10270-012-0277-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300010
DA 2024-07-18
ER

PT J
AU Wenzel, S
AF Wenzel, Sven
TI Unique identification of elements in evolving software models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model evolution; Traceability; Identification
ID TRACEABILITY; DIFFERENCE; EVOLUTION; DESIGN
AB Evolving models are often managed in file-based software configuration management systems. This causes the identification problem: if the model elements are not assigned with globally unique identifiers, we cannot identify them over time. However, if such identifiers would be given, they can be misleading because the elements to which they are assigned might change completely. As a consequence, evolution becomes incomprehensible, partial transformation is hampered, and sufficient management of inter-model relationships (e.g. traceability links) is impeded. This article presents an approach to identify model elements or even complete model fragments over time. It establishes a fine-grained history representation to describe model evolution. The representation contains identification links between the elements of different model revisions allowing us to identify elements of a given revision in other revisions or variants of the model. Due to the explicit expression of model evolution, it further enables the capturing of changes that have been applied to the fine-grained elements inside a model.
C1 TU Dortmund, Dept Comp Sci, Chair Software Engn, Dortmund, Germany.
C3 Dortmund University of Technology
RP Wenzel, S (corresponding author), TU Dortmund, Dept Comp Sci, Chair Software Engn, Dortmund, Germany.
EM sven.wenzel@tu-dortmund.de
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Amar B, 2008, P ECMDA TRAC WORKSH
   [Anonymous], 2002, P 18 INT C DAT ENG I
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol Giuliano, 2007, 2007 IEEE International Conference on Software Maintenance, P14, DOI 10.1109/ICSM.2007.4362614
   Babich WayneA., 1986, Software Configuration Management: Coordination for Team Productivity
   Bendix L., 2008, Proceedings of the 2008 International Workshop on Comparison and Versioning of Software Models, P31, DOI DOI 10.1145/1370152.1370161
   BRUEGGE B, 2006, P 1 INT C GLOB SOFTW
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Colombo P, 2008, ICSOFT 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE/GSDCA/MUSE, P159
   De Lucia A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P32, DOI 10.1109/CSMR.2005.7
   Eclipse Foundation, 2010, EMF CONN DAT OBJ CDO
   Farail P., 2006, P 3 EMB REAL TIM SOF
   Fogel K., 2003, Open Source Development with CVS
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GIRSCHICK M, 2002, THESIS TU DARMSTADT
   Godfrey M., 2002, P INT WORKSH PRINC S
   Godfrey M.W., 2005, IEEE T SOFTW ENG, V31
   Gorek G.-D., 2010, THESIS U SIEGEN
   IEEE Computer Society, MIN SOFTW REP WORK C
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Kehrer T., 2008, P 21 INT C SOFTW SYS
   Kelter U., 2005, SOFTWARE ENG, P105
   Kelter U., 2008, P 2008 INT WORKSH CO
   Kogel M., 2008, P 2008 INT WORKSH CO
   Kolovos D.S., 2006, P 1 INT WORKSH GLOB
   Kolovos D.S., 2009, P 2 WORKSH COMP VERS
   Könemann P, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P37, DOI 10.1109/CVSM.2009.5071720
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Mader P., 2008, P 23 INT C AUT SOFTW
   Maletic J.I., 2005, P 3 ACM INT WORKSH T
   Marcus A., 2005, P 27 INT C SOFTW ENG, P125
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Murta L., 2008, P 2008 INT WORKSH CO
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Ohst D, 2003, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSM.2003.1235402
   Oliveira HamiltonL. R., 2008, Proceedings of the 12th International Workshop on Software Configuration Management, SCM 2005, Lisbon, Portugal, September 5-6, 2005, P1, DOI [10.1145/1109128.1109129, DOI 10.1145/1109128.1109129]
   Pilato C.M., 2008, VERSION CONTROL SUBV
   Reddy R, 2005, P ASP OR MOD AOM WOR
   Rho J, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P236, DOI 10.1109/APSEC.1998.733725
   Schmidt M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P947
   Schneider C., 2007, THESIS U KASSEL GERM
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Selonen P, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P71
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Treude C., 2007, P EUR SOFTW ENG C FD, P295
   Vanhooff B., 2007, 3 ECMDA TRAC WORKSH, P37
   von Knethen A, 2002, PROC IEEE INT CONF S, P482, DOI 10.1109/ICSM.2002.1167808
   Wenzel Sven, 2007, 2007 IEEE International Conference on Software Maintenance, P104, DOI 10.1109/ICSM.2007.4362623
   Wenzel S., 2008, Proceedings of the 2008 international workshop on Comparison and versioning of software models (CSVM'08), 10-18 May 2008, Leipzig Germany, P41
   Wenzel S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P831, DOI 10.1145/1368088.1368214
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
NR 56
TC 7
Z9 8
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 679
EP 711
DI 10.1007/s10270-012-0311-7
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300012
DA 2024-07-18
ER

PT J
AU Ebert, J
   Horn, T
AF Ebert, Juergen
   Horn, Tassilo
TI GReTL: an extensible, operational, graph-based transformation language
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Graph transformation; Metamodel merging
AB This article introduces the graph-based transformation language GReTL. GReTL is operational, and transformations are either specified in plain Java using the GReTL API or in a simple domain-specific language. GReTL follows the conception of incrementally constructing the target metamodel together with the target graph. When creating a new metamodel element, a set-based semantic expression is specified that describes the set of instances that have to be created in the target graph. This expression is defined as a query on the source graph. GReTL is a kernel language consisting of a minimal set of operations, but it is designed for being extensible. Custom higher-level operations can be built on top of the kernel operations easily. After a description of the foundations of GReTL, its most important elements are introduced along with a transformation example in the field of metamodel integration. Insights into the design of the GReTL API are given, and a convenience copy operation is implemented to demonstrate GReTL's extensibility.
C1 [Ebert, Juergen; Horn, Tassilo] Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
C3 University of Koblenz & Landau
RP Horn, T (corresponding author), Univ Koblenz Landau, Inst Software Technol, Koblenz, Germany.
EM ebert@uni-koblenz.de; horn@uni-koblenz.de
CR Aksit M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P39
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   [Anonymous], SHARE DEMO RELATED P
   [Anonymous], OBJ CONSTR LANG VERS
   [Anonymous], LNCS
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Assmann U, 2000, ACM T PROGR LANG SYS, V22, P583, DOI 10.1145/363911.363914
   ATLAS Group, 2011, ATL US GUID
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Biermann E, 2008, LECT NOTES COMPUT SC, V5088, P566
   BORGER E, 2003, ABSTR STAT MACH METH
   Buchwald S., 2011, P TTC 2011 5 TRANF T
   Cabot J., 2011, LECT NOTES COMPUTER, V6707
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Ebert J., 2008, GI LECT NOTES INFORM, V126
   Ehrig H, 2006, ELECTRON NOTES THEOR, V152, P3, DOI 10.1016/j.entcs.2006.01.011
   Ermel C., 2010, ECEASST, V32
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   GAMMA E, 1995, DESIGN PATTERNS
   Gönczy L, 2007, ELECTRON NOTES THEOR, V175, P37, DOI 10.1016/j.entcs.2007.04.015
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Horn Tassilo, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P183, DOI 10.1007/978-3-642-21732-6_13
   Horn T., 2011, POSTPR TTC 2011 5 TR
   Horn T., 2011, P TTC 2011 5 TRANSF
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kolovos D.S., EPSILON BOOK
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kurtev I., 2002, 4 INT S DISTR OBJ AP
   Miksa K., 2009, CASE STUDY DESIGN PR
   Object Management Group, 2011, MET FA CMOF COR SPEC
   Object Management Group, 2003, MDA GUIDE VERSION 1
   Object Management Group, 2008, MET FAC MOF 2 0 QUER
   Rath I, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P219, DOI 10.1109/VLHCC.2008.4639089
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Schösser A, 2008, LECT NOTES COMPUT SC, V5088, P233
   Schurr Andy., 1999, HDB GRAPH GRAMMARS C, P487
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G., 2005, ACM IEEE 8 INT C MOD
   The Eclipse Project, EMF MOD QUER
   The Eclipse Project, EMF MOD QUERY2
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Van Gorp P., 2011, POSTPR TTC 2011 5 TR
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Walter T., FDN GRAPH B IN PRESS
   Wimmer Manuel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P31, DOI 10.1007/978-3-642-21732-6_3
NR 49
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 301
EP 321
DI 10.1007/s10270-012-0250-3
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000015
DA 2024-07-18
ER

PT J
AU Leitner, A
   Preschern, C
   Kreiner, C
AF Leitner, Andrea
   Preschern, Christopher
   Kreiner, Christian
TI Effective development of automation systems through domain-specific
   modeling in a small enterprise context
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling; Small enterprise cost model; Automation
   system; Software product line; System development process
ID MANAGEMENT; ARCHITECTURE
AB High development and maintenance costs and a high error rate are the major problems in the development of automation systems, which are mainly caused by bad communication and inefficient reuse methods. To overcome these problems, we propose a more systematic reuse approach. Though systematic reuse approaches such as software product lines are appealing, they tend to involve rather burdensome development and management processes. This paper focuses on small enterprises. Since such companies are often unable to perform a "big bang" adoption of the software product line, we suggest an incremental, more lightweight process to transition from single-system development to software product line development. Besides the components of the transition process, this paper discusses tool selection, DSL technology, stakeholder communication support, and business considerations. Although based on problems from the automation system domain, we believe the approach may be general enough to be applicable in other domains as well. The approach has proven successful in two case studies. First, we applied it to a research project for the automation of a logistics lab model, and in the second case (a real-life industry case), we investigated the approaches suitability for fish farm automation systems. Several metrics were collected throughout the evolution of each case, and this paper presents the data for single system development, clone&own and software product line development. The results and observable effects are compared, discussed, and finally summarized in a list of lessons learned.
C1 [Leitner, Andrea; Preschern, Christopher; Kreiner, Christian] Graz Univ Technol, Inst Tech Informat, A-8010 Graz, Austria.
   [Preschern, Christopher] HOFERNET IT Solut, A-9811 Lendorf, Austria.
C3 Graz University of Technology
RP Kreiner, C (corresponding author), Graz Univ Technol, Inst Tech Informat, A-8010 Graz, Austria.
EM andrea.leitner@tugraz.at; christopher.preschern@tugraz.at;
   christian.kreiner@tugraz.at
OI Kreiner, Christian/0000-0001-8354-8415
FU FFG Innovationss-check
FX This work was funded by an FFG Innovationss-check.
CR Abdellaoui M., 2010, MULTIATTRIBUTE UTILI, P579
   Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bekkers W, 2010, COMM COM INF SC, V99, P1
   Bockle G., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P49
   Boehm B., 2004, INT S EMP SOFTW ENG
   Breivold HP, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P232, DOI 10.1109/SEAA.2008.13
   Clements P.C., 2005, Technical report
   Clements PC, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.133
   Constantinescu R., 2008, J APPL QUANT METHODS, V3, P241
   Dager JC, 2000, KLUWER INT SER ENG C, V576, P23
   Falbo R.d. A., 2002, 14th international conference on Software engineering and knowledge engineering (SEKE), P351, DOI DOI 10.1145/568760.568822
   Gonzalez J., 2010, TRANSITION PRODUCTS
   Haselsberger A., 2009, THESIS TU GRAZ GRAZ
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kelly S., 2008, Domain-Specific Modeling
   Kim K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P171, DOI 10.1109/SPLINE.2007.27
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krueger C.W., 2012, Introduction to software product lines
   Leitner A., 2012, ECBS 12 P
   Leitner A., 2010, KOPLE 2010 KNOWL OR, P1
   Leitner A., 2009, THESIS TU GRAZ GRAZ
   Mansell J.X., 2010, PRODUCT LINE ACTION
   Metzger A, 2007, PROC INT CONF SOFTW, P186, DOI 10.1109/ICSECOMPANION.2007.83
   Moser T., 2010, ODISE 2010
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Preschern C., 2012, EUROPLOP
   Preschern C., 2011, THESIS TU GRAZ GRAZ
   Preschern C., 2012, ECMFA12 P
   Robertson J, 2012, VOLERE REQUIREMENTS
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schreiber A., 2010, TRANSITION PROCESS S
   SEI Carnegie Mellon, 2012, PROD LIN HALL FAM
   SMOLANDER K, 1991, LECT NOTES COMPUT SC, V498, P168
   Steger M, 2004, LECT NOTES COMPUT SC, V3154, P34
   Stelzmann E, 2010, COMM COM INF SC, V99, P245
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   Tolvanen J.-P., 2012, ADV TOOLING DOMAIN S
   Volter M., 2003, P 8 EUR C PATT LANG
NR 43
TC 1
Z9 1
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 35
EP 54
DI 10.1007/s10270-012-0289-1
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000004
DA 2024-07-18
ER

PT J
AU Rose, LM
   Herrmannsdoerfer, M
   Mazanek, S
   Van Gorp, P
   Buchwald, S
   Horn, T
   Kalnina, E
   Koch, A
   Lano, K
   Schätz, B
   Wimmer, M
AF Rose, Louis M.
   Herrmannsdoerfer, Markus
   Mazanek, Steffen
   Van Gorp, Pieter
   Buchwald, Sebastian
   Horn, Tassilo
   Kalnina, Elina
   Koch, Andreas
   Lano, Kevin
   Schaetz, Bernhard
   Wimmer, Manuel
TI Graph and model transformation tools for model migration Empirical
   results from the transformation tool contest
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Graph transformation; Co-evolution
ID COUPLED EVOLUTION; COEVOLUTION; METAMODELS; LANGUAGE
AB We describe the results of the Transformation Tool Contest 2010 workshop, in which nine graph and model transformation tools were compared for specifying model migration. The model migration problem-migration of UML activity diagrams from version 1.4 to version 2.2-is non-trivial and practically relevant. The solutions have been compared with respect to several criteria: correctness, conciseness, understandability, appropriateness, maturity and support for extensions to the core migration task. We describe in detail the comparison method, and discuss the strengths and weaknesses of the solutions with a special focus on the differences between graph and model transformation for model migration. The comparison results demonstrate tool and language features that strongly impact the efficacy of solutions, such as support for retyping of model elements. The results are used to motivate an agenda for future model migration research (including suggestions for areas in which the tools need to be further improved).
C1 [Rose, Louis M.] Univ York, York YO10 5DD, N Yorkshire, England.
   [Herrmannsdoerfer, Markus; Mazanek, Steffen] Tech Univ Munich, Inst Informat, D-80290 Munich, Germany.
   [Van Gorp, Pieter] Eindhoven Univ Technol, Sch Ind Engn, NL-5600 MB Eindhoven, Netherlands.
   [Buchwald, Sebastian] Karlsruhe Inst Technol, Programming Paradigm Grp, D-76021 Karlsruhe, Germany.
   [Horn, Tassilo] Univ Koblenz Landau, Inst Software Technol, Landau, Germany.
   [Kalnina, Elina] Univ Latvia, IMCS, Riga, Latvia.
   [Koch, Andreas] Univ Kassel, Software Engn Res Grp, D-34125 Kassel, Germany.
   [Lano, Kevin] Kings Coll London, London, England.
   Fortiss GmbH, Munich, Germany.
   [Schaetz, Bernhard] Tech Univ Munich, D-80290 Munich, Germany.
   [Wimmer, Manuel] Vienna Univ Technol, Business Informat Grp, A-1040 Vienna, Austria.
C3 University of York - UK; Technical University of Munich; Eindhoven
   University of Technology; Helmholtz Association; Karlsruhe Institute of
   Technology; University of Koblenz & Landau; University of Latvia;
   Universitat Kassel; University of London; King's College London;
   fortiss; Technical University of Munich; Technische Universitat Wien
RP Rose, LM (corresponding author), Univ York, York YO10 5DD, N Yorkshire, England.
EM louis@cs.york.ac.uk; herrmama@in.tum.de; steffen.mazanek@gmail.com;
   p.m.e.v.gorp@tue.nl; buchwald@kit.edu; horn@uni-koblenz.de;
   elina.kalnina@lumii.lv; andreas.koch@cs.uni-kassel.de;
   kevin.lano@kcl.ac.uk; schaetz@fortiss.org; wimmer@big.tuwien.ac.at
RI Kalnina, Elina/A-7111-2010; Van Gorp, Pieter/L-9144-2013; Rose, Louis
   M/L-8892-2014
OI Van Gorp, Pieter/0000-0001-5197-3986; Kalnina,
   Elina/0009-0004-2680-3220; Lano, Kevin Charles/0000-0002-9706-1410
CR [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], P 27 INT C SOFTW ENG
   [Anonymous], LNCS
   Asztalos M., 2007, INT S HUNG RES COMP
   Barzdins J, 2008, LECT NOTES COMPUT SC, V4800, P130, DOI 10.1007/978-3-540-78127-1_8
   Biermann Enrico, 2010, International Journal on Software Tools for Technology Transfer, V12, P245, DOI 10.1007/s10009-010-0154-x
   Blomer Jakob, 2011, GRGEN NET USER MANUA
   Buchwald S., 2010, TTC 10 TRANSFORMATIO
   Cicchetti A., 2010, TTC 10 TRANSFORMATIO
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   Ebert J., 2008, GI LECT NOTES INFORM, V126
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Frankel David., 2002, Model Driven Architecture: Applying MDA to Enterprise Computing
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Geiger Leif, 2010, International Journal on Software Tools for Technology Transfer, V12, P287, DOI 10.1007/s10009-010-0152-z
   Geiss R., 2007, 20077 U KARLSR, P12
   Glass GeneV., 1995, STAT METHODS ED PSYC, VThird
   GORDON RD, 1979, IEEE T SOFTWARE ENG, V5, P121, DOI 10.1109/TSE.1979.234168
   Gorp P.V., 2007, AGTIVE 07
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Gronmo R, 2009, LECT NOTES COMPUT SC, V5562, P2
   Habel A., 2001, Foundations of Software Science and Computation Structures. 4th International Conference, FOSSACS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2030), P230
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Herrmannsdoerfer M, 2010, INT WORKSH MOD EV
   Herrmannsdoerfer M., 2008, MCCM 08 INT WORKSH M
   Herrmannsdoerfer M., 2010, TTC 10 TRANSF TOOL C
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Herrmannsdoerfer M, 2010, LECT NOTES COMPUT SC, V5969, P3
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Horn Tassilo, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P183, DOI 10.1007/978-3-642-21732-6_13
   Horn T., 2010, TTC 10 TRANSF TOOL C
   Horn T., 2012, SOFTW SYST IN PRESS
   Horvath Akos, 2010, International Journal on Software Tools for Technology Transfer, V12, P211, DOI 10.1007/s10009-010-0149-7
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   John C.M., 1995, TECHNOLOGY READINESS
   Jouault F., 2005, P EUROPEAN C MODEL D, P29
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kalnina E., 2010, TTC 10 TRANSF TOOL C
   Kalnins A., 2004, P MOD DRIV ARCH FDN, V3599, P14
   Koch A., 2010, TTC 10 TRANSF TOOL C
   Lano K., 2010, TTC 10 TRANSF TOOL C
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Mazanek S., 2011, AGTIVE 2011 IN PRESS
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T., 2007, SOFTWARE EVOLUTION
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Meszaros Tamas, 2010, International Journal on Software Tools for Technology Transfer, V12, P231, DOI 10.1007/s10009-010-0151-0
   MISUE K, 1995, J VISUAL LANG COMPUT, V6, P183, DOI 10.1006/jvlc.1995.1010
   MOAD J, 1990, DATAMATION, V36, P61
   Moha Naouel, 2010, International Journal on Software Tools for Technology Transfer, V12, P273, DOI 10.1007/s10009-010-0150-1
   Muliawan Olaf, 2010, International Journal on Software Tools for Technology Transfer, V12, P201, DOI 10.1007/s10009-010-0147-9
   Muliawan Olaf, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P151, DOI 10.1109/ICSTW.2008.16
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   OMG, 2001, UN MOD LANG 1 4 SPEC
   OMG, 2007, UN MOD LANG 2 2 SPEC
   Perez Javier, 2010, International Journal on Software Tools for Technology Transfer, V12, P183, DOI 10.1007/s10009-010-0153-y
   Portney L.G.., 2000, FDN CLIN RES, V2nd
   Rencis E., 2008, TECHNICAL REPORT
   Rensink Arend., 2010, International Journal on Software Tools for Technology Transfer, V12, P171, DOI DOI 10.1007/S10009-010-0157-7
   Rose L.M., 2009, MODSE MCCM 09 JOINT
   Rose L.M., 2010, TTC 10 TRANSFORMATIO
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Schatz B., 2010, TTC 10 TRANSFORMATIO
   Schatz B., 2010, ECEASST ELECT COMMUN, V29
   SELIC B, 2005, WHATS NEW UML 2 0
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Street JA, 2005, LECT NOTES COMPUT SC, V3713, P431, DOI 10.1007/11557432_33
   Syriani E., 2010, ECEASST, V29
   Taentzer G., 2005, Model Transformations, P5
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   van Amstel MF, 2009, LECT NOTES COMPUT SC, V5563, P239, DOI 10.1007/978-3-642-02408-5_17
   Van Gorp P, 2010, LECT NOTES COMPUT SC, V6395, P258
   Van Gorp P, 2009, LECT NOTES COMPUT SC, V5452, P208, DOI 10.1007/978-3-642-00434-6_14
   Van Gorp P, 2008, LECT NOTES COMPUT SC, V5214, P517, DOI 10.1007/978-3-540-87405-8_51
   Varró D, 2008, LECT NOTES COMPUT SC, V5088, P540
   Varró G, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P79, DOI 10.1109/VLHCC.2005.23
   Visser E., 2001, ELECT NOTES THEOR CO, V57
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
   Zundorf A, 2001, THESIS U PADERBORN
NR 85
TC 23
Z9 23
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 323
EP 359
DI 10.1007/s10270-012-0245-0
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000016
DA 2024-07-18
ER

PT J
AU Taentzer, G
   Ermel, C
   Langer, P
   Wimmer, M
AF Taentzer, Gabriele
   Ermel, Claudia
   Langer, Philip
   Wimmer, Manuel
TI A fundamental approach to model versioning based on graph modifications:
   from theory to implementation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model versioning; Graph modification; Conflict detection; Conflict
   resolution
AB In model-driven engineering, models are primary artifacts that can evolve heavily during their life cycle. Therefore, versioning of models is a key technique to be offered by integrated development environments for model-driven engineering. In contrast to text-based versioning systems, we present an approach that takes model structures and their changes over time into account. Considering model structures as graphs, we define a fundamental approach where model revisions are considered as graph modifications consisting of delete and insert actions. Two different kinds of conflict detection are presented: (1) the check for operation-based conflicts between different graph modifications, and (2) the check for state-based conflicts on merged graph modifications. For the merging of graph modifications, a two-phase approach is proposed: First, operational conflicts are temporarily resolved by always giving insertion priority over deletion to keep as much information as possible. Thereafter, this tentative merge result is the basis for manual conflict resolution as well as for the application of repair actions that resolve state-based conflicts. If preferred by the user, giving deletion priority over insertion might be one solution. The fundamental concepts are illustrated by versioning scenarios for simplified statecharts. Furthermore, we show an implementation of this fundamental approach to model versioning based on the Eclipse Modeling Framework as technical space.
C1 [Taentzer, Gabriele] Univ Marburg, Marburg, Germany.
   [Ermel, Claudia] Tech Univ Berlin, Berlin, Germany.
   [Langer, Philip; Wimmer, Manuel] Vienna Univ Technol, A-1040 Vienna, Austria.
C3 Philipps University Marburg; Technical University of Berlin; Technische
   Universitat Wien
RP Langer, P (corresponding author), Vienna Univ Technol, A-1040 Vienna, Austria.
EM taentzer@mathematik.uni-marburg.de; claudia.ermel@tu-berlin.de;
   langer@big.tuwien.ac.at; wimmer@big.tuwien.ac.at
OI Ermel, Claudia/0000-0001-5448-7289
FU Austrian Science Fund (FWF) [J 3159-N23]
FX M. Wimmer's work has been partially funded by the Austrian Science Fund
   (FWF) under Grant J 3159-N23.
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   Altmanninger K., 2009, P JOINT MODSE MCCM 2
   Altmanninger K, 2009, INT J WEB INF SYST, V5, P271, DOI 10.1108/17440080910983556
   [Anonymous], 2004, WORKSH DIR SOFTW ENG
   [Anonymous], P VERIFY WORKSH FED
   [Anonymous], LECT NOTES COMPUT SC
   Barrett S., 2008, P WORKSH MOD DRIV SO
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Brosch P., 2010, P 1 INT WORKSHOP MOD, P42
   Brosch P., 2010, LNI GI, V161
   Brun C., 2008, UPGRADE EUR J INFORM
   BUDINSKY F, 2003, ECLIPSE SERIES
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   De Lucia A, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P347
   De Lucia A, 2010, SOFTWARE PRACT EXPER, V40, P1007, DOI 10.1002/spe.986
   DELFABRO MD, 2005, P 1 JOURN INGN DIR M
   Diskin Z, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P7, DOI 10.1109/CVSM.2009.5071715
   Eclipse Consortium, 2011, ECL MOD FRAM EMF VER
   Eclipse Consortium, 2011, EMF VAL FRAM
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2011, 20111 TU BERL
   Ehrig H, 2011, LECT NOTES COMPUT SC, V6603, P202, DOI 10.1007/978-3-642-19811-3_15
   Fuentes-Fernandez L., 2004, The European Journal for the Informatics Professional, V5, P5
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Jensen K., 2003, Coloured Petri Nets: Basic Concepts, Analysis Methods and Practical Use
   Kehrer T., 2011, P 26 INT C AUT SOFTW
   Kelter U., 2005, SOFTWARE ENG, P105
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   KOGEL M, 2008, P 2008 INT WORKSH CO, P19, DOI DOI 10.1145/1370152.1370158
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Küster JM, 2009, LECT NOTES COMPUT SC, V5562, P158, DOI 10.1007/978-3-642-02674-4_12
   Langer P, 2011, LECT NOTES COMPUT SC, V6705, P52, DOI 10.1007/978-3-642-21952-8_6
   Letkeman K., 2005, TECHNICAL REPORT
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Mehra A., 2005, ASE, P204, DOI DOI 10.1145/1101908.1101940
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   MISUE K, 1995, J VISUAL LANG COMPUT, V6, P183, DOI 10.1006/jvlc.1995.1010
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5523, P16, DOI 10.1007/978-3-642-02164-0_2
   Murta Leonardo., 2008, 2nd International Workshop on Comparison and Versioning of Software Models (CVSM), P25, DOI DOI 10.1145/1370152.1370159
   Object Management Group (OMG), 2006, MET FAC VERS 2 0
   Object Management Group (OMG), 2010, OCL SPEC VERS 2 2
   Ohst D., 2003, Software Engineering Notes, V28, P227, DOI 10.1145/949952.940102
   Pottinger R., 2003, P 29 INT C VER LARG, P826
   Reder A, 2010, P IEEE ACM INT C AUT, P347, DOI DOI 10.1145/1858996.1859069
   Rutle A, 2009, LECT NOTES COMPUT SC, V5503, P64
   Sabetzadeh M, 2007, INT REQUIR ENG CONF, P221, DOI 10.1109/RE.2007.18
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31, DOI DOI 10.1145/1826147.1826155
NR 53
TC 42
Z9 44
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 239
EP 272
DI 10.1007/s10270-012-0248-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000013
DA 2024-07-18
ER

PT J
AU Paige, RF
   Varró, D
AF Paige, Richard F.
   Varro, Daniel
TI Lessons learned from building model-driven development tools
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven development; Model management; MDD tools; Model
   tansformation
ID TRANSFORMATIONS; LANGUAGE
AB Tools to support modelling in system and software engineering are widespread, and have reached a degree of maturity where their use and availability are accepted. Tools to support model-driven development (MDD)-where models are manipulated and managed throughout the system/software engineering lifecycle-have, over the last 10 years, seen much research and development attention. Over the last 10 years, we have had significant experience in the design, development and deployment of MDD tools in practical settings. In this paper, we distill some of the important lessons we have learned in developing and deploying two MDD tools: Epsilon and VIATRA. In doing so, we aim to identify some of the key principles of developing successful MDD tools, as well as some hints of the pitfalls and risks.
C1 [Paige, Richard F.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
C3 University of York - UK; Budapest University of Technology & Economics
RP Paige, RF (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM paige@cs.york.ac.uk; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022
OI Varro, Daniel/0000-0002-8790-252X
FU European Commission; EPSRC; Hungarian NDA; Hungarian Academy of Sciences
FX We thank Dimitris Kolovos, Louis Rose, Nikos Matragkas, James Williams,
   Fiona Polack, Antonio Garcia Dominguez, Juan de Lara, Esther Guerra,
   Maider Azanza, Anne Etien, Davide di Ruscio, Alfonso Pierantonio, Andras
   Pataricza, Istvan Rath, Gabor Bergmann, Akos Horvath, Abel Hegedus,
   Zoltan Ujhelyi, and Gergely Varro. We acknowledge the support of the
   European Commission, the EPSRC, the Hungarian NDA and the Hungarian
   Academy of Sciences.
CR Amelunxen C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P807, DOI 10.1145/1368088.1368206
   [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Bergmann G., 2011, SOFTW SYST MODEL
   Bergmann G., 2011, LNCS
   Bergmann G, 2011, LECT NOTES COMPUT SC, V6698, P389, DOI 10.1007/978-3-642-21470-7_32
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Bergmann G, 2008, LECT NOTES COMPUT SC, V5214, P396, DOI 10.1007/978-3-540-87405-8_27
   Bergmann G, 2009, LECT NOTES COMPUT SC, V5563, P20, DOI 10.1007/978-3-642-02408-5_3
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   Csertan G., 2002, P ASE 2002 17 IEEE I, P267
   de Lara J., 2004, SOFTWARE SYSTEMS MOD, V3, P194, DOI [DOI 10.1007/S10270-003-0047-5, 10.1007/s10270-003-0047-5]
   Gönczy L, 2009, LECT NOTES COMPUT SC, V5421, P153, DOI 10.1007/978-3-642-01648-6_17
   Hegedus A., 2011, P ASE 2011 26 IEEE A
   Herzner W, 2006, ERCIM NEWS, P22
   Horvath A., 2007, ELECT COMMUN EASST, V6
   Horvath A., 2010, 29 IEEE AIAA DIG AV, p5A5
   Horvath A., 2011, SOFTW SYST MODEL
   Kolovos D., 2006, GAMMA 06, P13, DOI DOI 10.1145/1138304.1138308
   Kolovos D.S., 2008, P 1 INT C MOD TRANSF
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Ráth I, 2010, SOFTW SYST MODEL, V9, P453, DOI 10.1007/s10270-009-0122-7
   Rath I, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P219, DOI 10.1109/VLHCC.2008.4639089
   Rose L.M., 2008, LNCS
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rose LM, 2010, LECT NOTES COMPUT SC, V6138, P245, DOI 10.1007/978-3-642-13595-8_20
   Schoitsch E, 2006, LECT NOTES COMPUT SC, V4166, P372
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
NR 38
TC 12
Z9 12
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 527
EP 539
DI 10.1007/s10270-012-0257-9
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500007
DA 2024-07-18
ER

PT J
AU Perrouin, G
   Vanwormhoudt, G
   Morin, B
   Lahire, P
   Barais, O
   Jézéquel, JM
AF Perrouin, Gilles
   Vanwormhoudt, Gilles
   Morin, Brice
   Lahire, Philippe
   Barais, Olivier
   Jezequel, Jean-Marc
TI Weaving variability into domain metamodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain specific languages; Model weaving; Variability and software
   product lines
ID DESIGN; MODELS
AB Domain-specific modeling languages (DSMLs) are the essence of MDE. A DSML describes the concepts of a particular domain in a metamodel, as well as their relationships. Using a DSML, it is possible to describe a wide range of different models that often share a common base and vary on some parts. On the one hand, some current approaches tend to distinguish the variability language from the DSMLs themselves, implying greater learning curve for DSMLs stakeholders and a significant overhead in product line engineering. On the other hand, approaches integrating variability in DSMLs lack generality and tool support. We argue that aspect-oriented modeling techniques enabling flexible metamodel composition and results obtained by the software product line community to manage and resolve variability form the pillars for a solution for integrating variability into DSMLs. In this article, we consider variability as an independent and generic aspect to be woven into the DSML. In particular, we detail how variability is woven and how to perform product line derivation. We validate our approach through the weaving of variability into two different metamodels: Ecore-widely used for DSML definition-and SmartAdapters, our aspect model weaver. These results emphasize how new abilities of the language can be provided by this means.
C1 [Perrouin, Gilles] Univ Namur, PReCISE, B-5000 Namur, Belgium.
   [Vanwormhoudt, Gilles] Univ Lille 1, Inst Telecom LIFL, F-59655 Villeneuve Dascq, France.
   [Morin, Brice] SINTEF ICT, Oslo, Norway.
   [Lahire, Philippe] I3S Nice Sophia Antipolis, Equipe Modalis, F-06903 Sophia Antipolis, France.
   [Barais, Olivier; Jezequel, Jean-Marc] Univ Rennes 1, Equipe Triskell, IRISA, F-35042 Rennes, France.
   [Jezequel, Jean-Marc] INRIA Rennes Bretagne Atlantique, F-35042 Rennes, France.
C3 University of Namur; Universite de Lille; SINTEF; Universite de Rennes;
   Universite de Rennes
RP Perrouin, G (corresponding author), Univ Namur, PReCISE, B-5000 Namur, Belgium.
EM gilles.perrouin@fundp.ac.be; vanwormhoudt@telecom-lille1.eu;
   Brice.Morin@sintef.no; Philippe.Lahire@unice.fr; barais@irisa.fr;
   jezequel@irisa.fr
RI Perrouin, Gilles/I-1621-2019; Jezequel, Jean-Marc/AAF-3854-2019; Barais,
   Olivier/KIH-2583-2024
OI Perrouin, Gilles/0000-0002-8431-0377; Jezequel,
   Jean-Marc/0000-0002-0582-9745; Barais, Olivier/0000-0002-4551-8562
FU ANR (French National Research Agency); NAPLES; Walloon Region (Belgium)
FX This work was realized in the context of the MOVIDA and the FAROS
   projects, funded by the ANR (French National Research Agency) and the
   NAPLES project funded by the Walloon Region (Belgium).
CR [Anonymous], 2008, ECLIPSE MODELING FRA
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Bruce K.B., 2003, ELECT NOTES THEOR CO, V82, P1
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clauss M., 2001, WORKSH DOM SPEC VIS
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Dhungana D., 2007, 1 INT WORKSH VAR MOD, P119
   Dhungana D., 2007, 22 IEEE ACM INT C AU, P533, DOI DOI 10.1145/1321631.1321730
   Dhungana D., 2008, 1 WORKSH AN SOFTW PR, P233
   Drey Z., 2009, Kermeta Language, Reference Manual
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Gomaa H, 2004, LECT NOTES COMPUT SC, V3154, P317
   Gray J., 2005, ASPECT ORIENTED SOFT, P681
   Griss M.L., 1998, ICSR WASH DC US
   Guelfi N., 2006, WORKSH MAN VAR SPL B
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Heidenreich F., 2008, COMP P 30 INT C SOFT, P943, DOI [10.1145/1370175.1370199, DOI 10.1145/1370175.1370199]
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jayaraman P, 2007, LECT NOTES COMPUT SC, V4735, P151
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Klein Jacques., 2006, AOSD, P27
   Lahire P., 2007, P ACM IEEE 10 INT C
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Muller P.A., 2005, LNCS
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339, DOI 10.1109/SPLC.2008.38
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   PureSystems, 2006, PUR VAR
   Ramos R., 2007, P ACM IEEE 10 INT C
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schobbens P.Y., 2006, RE MINN MINN US
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Team E.P., 2010, EMFT CONCR SYNT MAPP
   Team F.P., FEAT
   Team R.P., 2010, REUS COMP FRAM
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Voelter M., 2007, 11th International Software Product Line Conference, P10
   Whittle J, 2008, LECT NOTES COMPUT SC, V5002, P16
   ZIADI T, 2006, FAMILIES RES BOOK
   Zschaler S., 2009, P INT C SOFTW LANG E, P21
NR 52
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 361
EP 383
DI 10.1007/s10270-010-0186-4
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yie, A
   Casallas, R
   Deridder, D
   Wagelaar, D
AF Yie, Andres
   Casallas, Rubby
   Deridder, Dirk
   Wagelaar, Dennis
TI Realizing Model Transformation Chain interoperability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software Engineering; Model-driven Engineering; Model Transformation
   Chains; Interoperability
AB A single Model Transformation Chain (MTC) takes a high-level input model rooted in the problem domain and through one or more transformation steps produces a low-level output model rooted in the solution domain. To build a single "almighty" MTC that is in charge of every design, implementation and specific platform concern is a complex task. Instead, we can use several smaller MTCs that are easier to develop and maintain, because each MTC is independently developed focusing on a specific concern. However, the MTCs must interoperate to produce complete applications; this inherently creates dependencies between them, because each MTC generates a part of the final low-level model. In this paper, we propose an external and explicit mechanism to track dependencies between the MTCs (i.e., the MTCs are oblivious to the mechanism), which is used to automatically derive correspondence relationships between the final models generated by each MTC. The contribution of our mechanism is the reduction of complexity of building interoperable MTCs because the derived correspondences are resolved after the transformations execution, in the solution domain where the semantics of every concept is well-defined. The resolution process consists of (1) checking the consistency between the models, (2) producing communication bridges or (3) guiding the composition of the models. This paper presents three case studies to illustrate the derivation and resolution of correspondence relationships through the MTCs.
C1 [Yie, Andres; Casallas, Rubby] Univ Los Andes, Bogota, Colombia.
   [Deridder, Dirk; Wagelaar, Dennis] Vrije Univ Brussel, Brussels, Belgium.
C3 Universidad de los Andes (Colombia); Vrije Universiteit Brussel
RP Yie, A (corresponding author), Univ Los Andes, Bogota, Colombia.
EM a-yie@uniandes.edu.co; rcasalla@uniandes.edu.co;
   dirk.deridder@vub.ac.be; dennis.wagelaar@vub.ac.be
OI Casallas, Rubby/0000-0002-8857-3609
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   [Anonymous], INT WORKSH MOD TRANS
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4066, P346
   Cibran M., 2006, P 9 INT C MODELS UML, DOI [10.1007/11880240_13, DOI 10.1007/11880240_13]
   Cicchetti A, 2008, SCI COMPUT PROGRAM, V70, P62, DOI 10.1016/j.scico.2007.10.002
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   FRANCE R, 2007, FOSE 07 2007 FUTURE
   Gasevic D., 2009, Model driven engineering and ontology development, V2nd, P378
   Goncalves A., 2009, Beginning JavaEE 6 Platform with GlassFish3: From Novice to Professional
   Group O.M., 2007, OMG UN MOD LANG OMG
   Hanenberg S., 2007, AOSD 07
   JEANNERET C, 2008, AOM 08, P1, DOI DOI 10.1145/1404920.1404921
   Jouault F., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1188, DOI 10.1145/1141277.1141561
   Kienzle J., 2009, AOSD 09
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kuester JM, 2009, LECT NOTES COMPUT SC, V5795, P733, DOI 10.1007/978-3-642-04425-0_60
   Linington PF, 2007, IEEE INT ENTERP, P239, DOI 10.1109/EDOCW.2007.7
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   OMG, 2006, MET OBJ FAC MOF COR
   Romero JR, 2009, IEEE INT ENTERP DIST, P163, DOI 10.1109/EDOC.2009.23
   Romero J., 2009, P 13 IEEE INT C EDOC
   Ruiz-Gonzalez D., 2009, P 5 INT WORKSH MOD D, P46
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   TOLVANEN JP, 2005, DEFINING DOMAINSPECI, P198, DOI DOI 10.1007/11554844_22
   VANHOOFF B, 2007, 3 ECMDA TRAC WORKSH
   Vanhooff B, 2006, LECT NOTES COMPUT SC, V4017, P39, DOI 10.1007/11796435_6
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Yie A., 2009, ELECTR COMMUN, P1
   Yie A, 2010, LECT NOTES COMPUT SC, V6002, P225
   Yie A, 2009, LECT NOTES COMPUT SC, V5795, P551, DOI 10.1007/978-3-642-04425-0_42
NR 33
TC 17
Z9 19
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2012
VL 11
IS 1
BP 55
EP 75
DI 10.1007/s10270-010-0179-3
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 881SK
UT WOS:000299508500006
DA 2024-07-18
ER

PT J
AU Nayak, A
   Samanta, D
AF Nayak, Ashalatha
   Samanta, Debasis
TI Synthesis of test scenarios using UML activity diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Software testing; Model-based testing; Activity diagram; Test case
   generation
AB Often system developers follow Unified Modeling Language (UML) activity diagrams to depict all possible flows of controls commonly known as scenarios of use cases. Hence, an activity diagram is treated as a useful design artifact to identify all possible scenarios and then check faults in scenarios of a use case. However, identification of all possible scenarios and then testing with activity diagrams is a challenging task because several control flow constructs and their nested combinations make path identification difficult. In this paper, we address this problem and propose an approach to identify all scenarios from activity diagrams and use them to test use cases. The proposed approach is based on the classification of control constructs followed by a transformation approach which takes into account any combination of nested structures and transforms an activity diagram into a model called Intermediate Testable Model (ITM). We use ITM to generate test scenarios. With our approach it is possible to generate more scenarios than the existing work. Further, the proposed approach can be directly carried out using design models without any addition of testability information unlike the existing approaches.
C1 [Nayak, Ashalatha; Samanta, Debasis] Indian Inst Technol, Sch Informat Technol, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Nayak, A (corresponding author), Indian Inst Technol, Sch Informat Technol, Kharagpur 721302, W Bengal, India.
EM anayak@sit.iitkgp.ernet.in; dsamanta@iitkgp.ac.in
RI ; Nayak, Ashalatha/B-4471-2017
OI Samanta, Debasis/0000-0002-6104-3771; Nayak,
   Ashalatha/0000-0001-7888-6516
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], 2 ACM SIGSOFT S FDN
   BAI X, 2004, P 28 ANN INT C, P546
   BINDER RV, 1999, ADDISON WESLEY OBJEC
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Chandler R, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P9, DOI 10.1109/APSEC.2005.25
   CHANDLER R, 2007, P INT C SYST COMP SC, P415
   Chen M., 2006, P 2006 INT WORKSH AU, P2
   Delamaro M., 2001, XV Simposio Brasileiro de Engenharia de Software, P272
   FROHLICH P, 2000, P 14 EUR C OBJ OR PR
   HARTMANN J, 2005, J INNOVATIONS SYSTEM, P12
   Hecht MatthewS., 1972, Proceedings of the fourth annual ACM symposium on Theory of computing, STOC '72, P238
   HECHT MS, 1974, J ACM, V21, P367, DOI 10.1145/321832.321835
   Kim H, 2007, SNPD 2007: EIGHTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, VOL 3, PROCEEDINGS, P556, DOI 10.1109/SNPD.2007.189
   Kim S., 1999, P 12 INT C SOFTW SYS, P9
   KIM Y, 1999, P 8 ATS, P283
   Li HZ, 2005, LECT NOTES COMPUT SC, V3502, P69
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Ryser J., 1999, P 12 INT C SOFTW SYS
   SETHI R, 1974, J ACM, V21, P671, DOI 10.1145/321850.321862
   UML, 2003, UML 2 0 SUP FIN AD S
   VIEIRA M, 2006, P 2006 INT WORKSH AU, P9
   Wang LZ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P284, DOI 10.1109/APSEC.2004.55
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   XU DHL, 2005, P 12 AS PAC SOFTW EN, P15
   Zhang F, 2004, IEEE T SOFTWARE ENG, V30, P231, DOI 10.1109/TSE.2004.1274043
NR 30
TC 25
Z9 27
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2011
VL 10
IS 1
BP 63
EP 89
DI 10.1007/s10270-009-0133-4
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 711ST
UT WOS:000286612400005
DA 2024-07-18
ER

PT J
AU Evans, N
   Treharne, H
   Laleau, R
   Frappier, M
AF Evans, Neil
   Treharne, Helen
   Laleau, Regine
   Frappier, Marc
TI Applying CSP∥B to information systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE CSP; B; information systems; combining formalisms; compositional
   verification
AB CSP parallel to B is a formal approach which combines state and event-based descriptions of a system. It enables the automatic verification of dynamic properties using model checking techniques. In this paper we identify a variation on the standard CSP parallel to B architecture so that it is more applicable to support the specification of information systems. We specify a library system using this new architecture. We examine several safety and liveness requirements and demonstrate that we can compositionally verify them using FDR. If a property fails to model check we identify an abstraction technique which enables us to pinpoint the cause of the failure.
C1 [Treharne, Helen] Univ Surrey, Dept Comp, Surrey, England.
   [Laleau, Regine] Univ Paris 12, IUT Fontainebleau, Dept Informat, Paris, France.
   [Frappier, Marc] Univ Sherbrooke, Dept Informat, Sherbrooke, PQ J1K 2R1, Canada.
C3 University of Surrey; Universite Paris-Est-Creteil-Val-de-Marne (UPEC);
   University of Sherbrooke
EM Neil.Evans@awe.co.uk
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936; Treharne, Helen/0000-0003-1835-4803
CR Abrial J-R., 1996, The B Book
   Amálio N, 2004, LECT NOTES COMPUT SC, V3308, P418
   Brückner I, 2005, LECT NOTES COMPUT SC, V3785, P360
   BUTLER M, 2005, LNCS, V3582
   Dupuy S., 2000, 12 INT C CAISE 00 ST
   Elmasri R., 2004, FUNDAMENTALS DATABAS, V3rd
   EVANS N, 2005, SOFTW SYST MOD SPEC, V4
   EVANS N, 2004, 2 INT C SOFTW ENG FO
   EVANS N, 2005, P 5 INT WORKSH AUT V
   Fischer C., 1997, Formal Methods for Open Object-based Distributed Systems. Vol.2 IFIP TC6 WG6.1 International Workshop on Formal Methods for Open Object-based Distributed Systems (FMOODS '97), P423
   *FORM SYST EUR LTD, 1997, FAIL DIV REF FDR2 US
   FRAIKIN B, 2003, STEVE WORKSH FM 03
   Fraikin B., 2005, Software and Systems Modeling, V4, P236
   FRAPPIER Marc., 2003, Software and Systems Modeling, V2, P134, DOI DOI 10.1007/S10270-003-0024-Z
   GERVAIS F, 2006, SOFTWARE SPECIFICATI
   GERVAIS F, 2004, 683 CEDRIC
   Henzinger T. A., 2004, SIGPLAN Notices, V39, P232, DOI 10.1145/982962.964021
   Hoare CAR., 1985, Communicating Sequential Processes
   Jackson Michael., 1983, SYSTEM DEV
   LALEAU R, 2002, LNCS, V2272
   Laleau R., 2000, ASE
   Leuschel M, 2003, LNCS, V2805
   MEYER E, 1999, LNCS, V1708
   MORGAN C, 1989, LECT NOTES COMPUT SC, V375, P363
   Morgan C.C., 1990, BEAUTY IS OUR BUSINE
   NEILSON D, 1999, B TECHNOLOGIES SYSTE
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Schneider S, 2005, FORM ASP COMPUT, V17, P390, DOI 10.1007/s00165-005-0076-7
   Schneider S., 1999, Concurrent and Real Time Systems: The CSP Approach, V1st
   SCHNEIDER SA, 2002, LNCS, V227
   SNOOK C, 2006, IN PRESS ACM T SOFTW
   TREHARNE H, 2000, THESIS U LONDON
NR 32
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2008
VL 7
IS 1
BP 85
EP 102
DI 10.1007/s10270-007-0048-x
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WV
UT WOS:000254668100006
DA 2024-07-18
ER

PT J
AU Di Sipio, C
   Di Rocco, J
   Di Ruscio, D
   Nguyen, PT
AF Di Sipio, Claudio
   Di Rocco, Juri
   Di Ruscio, Davide
   Nguyen, Phuong T.
TI MORGAN: a modeling recommender system based on graph kernel
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Recommender systems; Graph kernels
AB Model-driven engineering (MDE) is an effective means of synchronizing among stakeholders, thereby being a crucial part of the software development life cycle. In recent years, MDE has been on the rise, triggering the need for automatic modeling assistants to support metamodelers during their daily activities. Among others, it is crucial to enable model designers to choose suitable components while working on new (meta)models. In our previous work, we proposed MORGAN, a graph kernel-based recommender system to assist developers in completing models and metamodels. To provide input for the recommendation engine, we convert training data into a graph-based format, making use of various natural language processing (NLP) techniques. The extracted graphs are then fed as input for a recommendation engine based on graph kernel similarity, which performs predictions to provide modelers with relevant recommendations to complete the partially specified (meta)models. In this paper, we extend the proposed tool in different dimensions, resulting in a more advanced recommender system. Firstly, we equip it with the ability to support recommendations for JSON schema that provides a model representation of data handling operations. Secondly, we introduce additional preprocessing steps and a kernel similarity function based on item frequency, aiming to enhance the capabilities, providing more precise recommendations. Thirdly, we study the proposed enhancements, conducting a well-structured evaluation by considering three real-world datasets. Although the increasing size of the training data negatively affects the computation time, the experimental results demonstrate that the newly introduced mechanisms allow MORGAN to improve its recommendations compared to its preceding version.
C1 [Di Sipio, Claudio; Di Rocco, Juri; Di Ruscio, Davide; Nguyen, Phuong T.] Universitadegli studi Aquila, Laquila, Italy.
RP Di Ruscio, D (corresponding author), Universitadegli studi Aquila, Laquila, Italy.
EM claudio.disipio@univaq.it; juri.dirocco@univaq.it;
   davide.dirsucio@univaq.it; phuong.nguyen@univaq.it
RI Nguyen, Phuong/ABE-3890-2021; Di Sipio, Claudio/JYQ-5925-2024
OI Nguyen, Phuong/0000-0002-3666-4162; Di Sipio,
   Claudio/0000-0001-9872-9542; Di Ruscio, Davide/0000-0002-5077-6793; Di
   Rocco, Juri/0000-0002-7909-3902
FU AIDOaRT Project from the European Union's H2020-ECSEL-2020; Federal
   Ministry of Education, Science and Research [101007350]
FX The research described in this paper has been partially supported by the
   AIDOaRT Project, which has received funding from the European Union's
   H2020-ECSEL-2020, Federal Ministry of Education, Science and Research,
   Grant Agreement no 101007350. We thank the anonymous reviewers for their
   valuable comments and suggestions that helped us improve the paper.
CR [Anonymous], GITHUB ARCHIVE DATAS
   [Anonymous], JSON Schema."
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Babur O., 2019, LABELED ECORE METAMO
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Clarete RL, 2018, PHILIPPINE ECONOMY: NO LONGER THE EAST ASIAN EXCEPTION?, P1
   Colantoni A, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P250, DOI 10.1109/MODELS50736.2021.00033
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   DIROCCO J, 2022, IEEE T SOFTWARE ENG, V2022, P1
   Dupont G, 2018, IEEE ACM INT WORKS M, P49, DOI 10.1145/3193954.3193962
   Fouss F, 2012, NEURAL NETWORKS, V31, P53, DOI 10.1016/j.neunet.2012.03.001
   GitHub, US
   Goldsby H.J., 2008, Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation, P1751, DOI DOI 10.1145/1389095.1389434
   López JAH, 2022, SOFTW SYST MODEL, V21, P967, DOI 10.1007/s10270-021-00929-3
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Kriege NM, 2016, ADV NEUR IN, V29
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Li X., 2012, P 12 ACM IEEE CS JOI, P409, DOI DOI 10.1145/2232817.2232915
   Li X, 2013, DECIS SUPPORT SYST, V54, P880, DOI 10.1016/j.dss.2012.09.019
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nguyen PT, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110860
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Ostuni VC, 2014, LECT NOTES BUS INF P, V188, P89
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Raschka S., 2018, ARXIV
   Riesen K., 2010, GRAPH CLASSIFICATION, DOI [10.1142/7731, DOI 10.1142/7731]
   Saini Rijul., 2020, P 23 ACMIEEE INT C M, DOI DOI 10.1145/3417990.3421385
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Siglidis G., 2020, ARXIV
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Sugiyama M., 2015, ADV NEURAL INFORM PR, V28, P1639
   Vishwanathan SVN, 2010, J MACH LEARN RES, V11, P1201
   Wang KY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P916, DOI 10.1145/3236024.3264594
   Wei Xu, 2019, Web Information Systems and Applications. 16th International Conference, WISA 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11817), P684, DOI 10.1007/978-3-030-30952-7_69
   Weisfeiler B., 1968, Nauchno-Technicheskaya Informatsiya, V2, P12
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
NR 41
TC 7
Z9 7
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1427
EP 1449
DI 10.1007/s10270-023-01102-8
EA APR 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000962963300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Schultheiss, A
   Bittner, PM
   Boll, A
   Grunske, L
   Thüm, T
   Kehrer, T
AF Schultheiss, Alexander
   Bittner, Paul Maximilian
   Boll, Alexander
   Grunske, Lars
   Thuem, Thomas
   Kehrer, Timo
TI RaQuN: a generic and scalable n-way model matching algorithm
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; n-Way model matching; Clone-and-own
   development; Software product lines
ID SOFTWARE; IDENTIFICATION; EVOLUTION
AB Model matching algorithms are used to identify common elements in input models, which is a fundamental precondition for many software engineering tasks, such as merging software variants or views. If there are multiple input models, an n-way matching algorithm that simultaneously processes all models typically produces better results than the sequential application of two-way matching algorithms. However, existing algorithms for n-way matching do not scale well, as the computational effort grows fast in the number of models and their size. We propose a scalable n-way model matching algorithm, which uses multi-dimensional search trees for efficiently finding suitable match candidates through range queries. We implemented our generic algorithm named RaQuN (Range Queries on N input models) in Java and empirically evaluate the matching quality and runtime performance on several datasets of different origins and model types. Compared to the state of the art, our experimental results show a performance improvement by an order of magnitude, while delivering matching results of better quality.
C1 [Schultheiss, Alexander] Humboldt Univ, Berlin, Germany.
   [Grunske, Lars] Humboldt Univ, Dept Comp Sci, Berlin, Germany.
   [Bittner, Paul Maximilian] Univ Ulm, Inst Software Engn & Programming Languages, Ulm, Germany.
   [Thuem, Thomas] Univ Ulm, Construct & Anal Secure Software Syst, Ulm, Germany.
   [Boll, Alexander] Univ Bern, Bern, Switzerland.
   [Kehrer, Timo] Univ Bern, Inst Comp Sci, Bern, Switzerland.
C3 Humboldt University of Berlin; Humboldt University of Berlin; Ulm
   University; Ulm University; University of Bern; University of Bern
RP Schultheiss, A (corresponding author), Humboldt Univ, Berlin, Germany.; Boll, A (corresponding author), Univ Bern, Bern, Switzerland.; Kehrer, T (corresponding author), Univ Bern, Inst Comp Sci, Bern, Switzerland.
EM alexander.schultheiss@informatik.hu-berlin.de; paul.bittner@uni-ulm.de;
   alexander.boll@inf.unibe.ch; grunske@informatik.hu-berlin.de;
   thomas.thuem@uni-ulm.de; timo.kehrer@inf.unibe.ch
RI Grunske, Lars/AAH-4550-2019; Kehrer, Timo/AAI-6563-2020
OI Grunske, Lars/0000-0002-8747-3745; Kehrer, Timo/0000-0002-2582-5557;
   Thum, Thomas/0000-0001-8069-9584; Bittner, Paul
   Maximilian/0000-0001-9388-0649; Boll, Alexander/0000-0002-9881-9748;
   Schultheiss, Alexander/0000-0002-1509-1449
FU German Research Foundation within the project VariantSync [KE 2267/1-1,
   TH 2387/1-1]
FX This work has been supported by the German Research Foundation within
   the project VariantSync (KE 2267/1-1 and TH 2387/1-1).
CR [Anonymous], SOFTWARE PLATTFORM E
   [Anonymous], COLLABORATIVE EMBEDD
   Apiwattanapong T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ASE.2004.1342719
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2013.34
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Babur Ö, 2016, IEEE INT CONF AUTOM, P888, DOI 10.1145/2970276.2975938
   Baeza-Yates R., 1999, Modern information retrieval
   BENTLEY JL, 1975, COMMUN ACM, V18, P509, DOI 10.1145/361002.361007
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Boll A, 2021, SOFTW SYST MODEL, V20, P2111, DOI 10.1007/s10270-021-00883-0
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Bürdek J, 2016, AUTOMAT SOFTW ENG, V23, P687, DOI 10.1007/s10515-015-0185-3
   Canfora G, 2009, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2009.5070564
   Capozucca A., 2011, ReMoDD repository
   Capozucca A., 2011, P INT WORKSH COMP MO
   Daniel S., LIBSSRCKDTREE J SOUR
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Duszynski S., 2015, THESIS U KAISERSLAUT
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Feldmann S., 2012, 12 INT DES C DESIGN, P1689
   Fenske W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P316, DOI 10.1109/SANER.2017.7884632
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Friedman J. H., 1977, ACM Transactions on Mathematical Software, V3, P209, DOI 10.1145/355744.355745
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kehrer T, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P21, DOI 10.1109/ICSE-NIER52604.2021.00013
   Kehrer T, 2014, AT-AUTOM, V62, P803, DOI 10.1515/auto-2014-1102
   Kehrer T, 2012, IEEE INT CONF AUTOM, P306, DOI 10.1145/2351676.2351731
   Kelter Udo., 2005, Software Engineering, volume 64 of LNI, V64, P105
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Klatt B., 2013, P 9 INT ACM SIGS C Q, P117, DOI DOI 10.1145/2465478.2465495
   Klatt Benjamin, 2013, P INT WORKSHOP REVER, P1
   Kolovos DS, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P1, DOI 10.1109/CVSM.2009.5071714
   Kpodjedo S, 2013, IEEE T SOFTWARE ENG, V39, P1090, DOI 10.1109/TSE.2013.9
   Krüger J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P251, DOI 10.1145/3233027.3236403
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Linsbauer L, 2017, SOFTW SYST MODEL, V16, P1179, DOI 10.1007/s10270-015-0512-y
   Lity S., 2012, DELTA ORIENTED SOFTW
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Rad Y.T., 2012, THESIS SCH COMPUTING
   Reuling D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1134, DOI 10.1109/ASE.2019.00120
   Reuling D, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3313789
   Reuling D, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a8
   Rubin J., 2013, SPLC, P101
   Rubin J, 2012, LECT NOTES COMPUT SC, V7212, P285, DOI 10.1007/978-3-642-28872-2_20
   Rubin Julia., 2013, P 2013 9 JOINT M FDN, P301, DOI DOI 10.1145/2491411.2491446
   Ryssel U, 2012, SCI COMPUT PROGRAM, V77, P83, DOI 10.1016/j.scico.2010.06.005
   Ryssel U, 2011, ACM SIGPLAN NOTICES, V46, P23, DOI 10.1145/1942788.1868299
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Schlie Alexander, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414973
   Schlie A., 2021, THESIS TU CAROLO WIL
   Schlie A., 2020, VAMOS
   Schmorleiz T., 2015, THESIS U KOBLENZ LAN
   Schmorleiz Thomas, 2014, SATToSE, P45
   Schultheiss A., 2022, ARTIFACT RAQUN GENER
   Schultheiss A., 2022, QUANTIFYING POTENTIA
   Schultheiss A, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P1, DOI 10.1109/MODELS50736.2021.00010
   Selonen P, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P71
   Strüber D, 2016, LECT NOTES COMPUT SC, V9633, P122, DOI 10.1007/978-3-662-49665-7_8
   TREUDE C, 2007, P 6 JOINT M EUR SOFT, P295, DOI DOI 10.1145/1287624.1287665
   Vogel-Heuser B., 2014, Researching Evolution in Industrial Plant Automation: Scenarios and Documentation of the Pick and Place Unit
   Vogel-Heuser B, 2015, J SYST SOFTWARE, V110, P54, DOI 10.1016/j.jss.2015.08.026
   Wenzel S, 2014, SOFTW SYST MODEL, V13, P679, DOI 10.1007/s10270-012-0311-7
   Wille D, 2018, SCI COMPUT PROGRAM, V163, P62, DOI 10.1016/j.scico.2018.04.002
   Wille D, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P63, DOI 10.1145/3001867.3001875
   Wille D, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P271, DOI 10.1109/SANER.2016.13
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Ziadi T., 2014, P 29 ANN ACM S APPL, P1064
NR 77
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1495
EP 1517
DI 10.1007/s10270-022-01062-5
EA NOV 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000886194500001
OA hybrid
DA 2024-07-18
ER

PT J
AU David, I
   Syriani, E
AF David, Istvan
   Syriani, Eugene
TI Real-time collaborative multi-level modeling by conflict-free replicated
   data types
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Collaborative modeling; Real-time collaboration; Multi-level modeling;
   Conflict-free replicated data types; Model-driven engineering
AB The need for real-time collaborative solutions in model-driven engineering has been increasing over the past years. Conflict-free replicated data types (CRDT) provide scalable and robust replication mechanisms that align well with the requirements of real-time collaborative environments. In this paper, we propose a real-time collaborative multi-level modeling framework to support advanced modeling scenarios, built on a collection of custom CRDT, specifically tailored for the needs of modeling environments. We demonstrate the benefits of the framework through an illustrative modeling case and compare it with other state-of-the-art modeling frameworks.
C1 [David, Istvan; Syriani, Eugene] Univ Montreal, DIRO, Montreal, PQ, Canada.
C3 Universite de Montreal
RP David, I (corresponding author), Univ Montreal, DIRO, Montreal, PQ, Canada.
EM istvan.david@umontreal.ca; syriani@iro.umontreal.ca
RI David, Istvan/KEI-9054-2024
OI David, Istvan/0000-0002-4870-8433
CR Alvarez J.M., 2001, INT C UN MOD LANG, V2185, P34, DOI DOI 10.1007/3-540-45441-1_4
   [Anonymous], 2008, Metamodelling for software engineering
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2000, INT WORKSH MOD ENG 1, V12, P16
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   Atkinson Colin, 2016, MODELLIERUNG 2016 WO, V255, P117
   Bauwens J, 2019, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON VIRTUAL MACHINES AND INTERMEDIATE LANGUAGES (VMIL '19), P48, DOI 10.1145/3358504.3361231
   Boronat A, 2009, LECT NOTES COMPUT SC, V5486, P71, DOI 10.1007/978-3-642-03429-9_6
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brasileiro F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P975, DOI 10.1145/2872518.2891117
   Brewer E, 2012, COMPUTER, V45, P23, DOI 10.1109/MC.2012.37
   Buzan T., 2006, The Ultimate Book of Mind Maps
   Izquierdo JLC, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.84
   Chengzheng Sun, 1998, ACM Transactions on Computer-Human Interaction, V5, P63, DOI 10.1145/274444.274447
   Corley J., 2016, MODERN SOFTWARE ENG, P120, DOI DOI 10.4018/978-1-4666-9916-8.CH007
   Davey B.A., 2002, Introduction to lattices and order, V2nd ed., DOI DOI 10.1017/CBO9780511809088
   David Istvan, 2018, Software & Systems Modeling, V17, P135, DOI 10.1007/s10270-016-0533-1
   David I., 2022, IN PRESS
   David I., 2022, P 17 C COMPUTER SCI
   David I, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P273, DOI 10.1109/MODELS50736.2021.00035
   De Lara J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280985
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   De Porre K, 2019, LECT NOTES COMPUT SC, V11534, P36, DOI 10.1007/978-3-030-22496-7_3
   Debreceni C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P984, DOI 10.1145/3106237.3122829
   Derntl M, 2015, LECT NOTES COMPUT SC, V9381, P344, DOI 10.1007/978-3-319-25264-3_25
   Du J., 2014, P ACM S CLOUD COMP S, P1
   Fowler M., 2000, UML DISTILLED A BRIE
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Gallardo J, 2012, J NETW COMPUT APPL, V35, P1086, DOI 10.1016/j.jnca.2011.12.009
   Grosch P, 2020, 7TH WORKSHOP ON PRINCIPLES AND PRACTICE OF CONSISTENCY FOR DISTRIBUTED DATA (PAPOC '20), DOI 10.1145/3380787.3393679
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Johnson P.R., 1975, RFC, V677, P1
   Kelly S, 2018, LECT NOTES COMPUT SC, V10748, P20, DOI 10.1007/978-3-319-74730-9_3
   Kühne T, 2022, SOFTW SYST MODEL, V21, P543, DOI 10.1007/s10270-021-00951-5
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Le Noir J, 2011, LECT NOTES COMPUT SC, V6698, P85, DOI 10.1007/978-3-642-21470-7_7
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Meiklejohn C, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P184, DOI 10.1145/2790449.2790525
   Michaux J., 2011, P 2011 ACM S APPL CO, P1470, DOI DOI 10.1145/1982185.1982500
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Muccini H, 2018, IEEE SOFTWARE, V35, P20, DOI 10.1109/MS.2018.4321244
   Preguiça N, 2009, INT CON DISTR COMP S, P395, DOI 10.1109/ICDCS.2009.20
   Reineke S., 2014, INT C TOOLS ALG CONS, P217, DOI DOI 10.1007/978-3-642-54862-8_15
   Roh HG, 2011, J PARALLEL DISTR COM, V71, P354, DOI 10.1016/j.jpdc.2010.12.006
   Saini R, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P37, DOI 10.1109/MODELS-C53483.2021.00013
   Saito Y, 2005, ACM COMPUT SURV, V37, P42, DOI 10.1145/1057977.1057980
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shapiro M., 2011, COMPREHENSIVE STUDY
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   SINGHAL M, 1992, INFORM PROCESS LETT, V43, P47, DOI 10.1016/0020-0190(92)90028-T
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sun David, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392825
   Sun D., 2006, P 2006 20 ANN C COMP, P279
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Taentzer G, 2010, LECT NOTES COMPUT SC, V6372, P171
   Thomas R. H., 1979, ACM Transactions on Database Systems, V4, P180, DOI 10.1145/320071.320076
   Van Mierlo S., 2014, International Conference on Model Driven Engineering Languages and Systems, P83
   Van Tendeloo Yentl, 2018, 2018 IEEE 27th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE), P127, DOI 10.1109/WETICE.2018.00031
   Van Tendeloo Y, 2017, WINT SIMUL C PROC, P944, DOI 10.1109/WSC.2017.8247845
   Vanherpen K, 2016, 2016 1ST INTERNATIONAL WORKSHOP ON CYBER-PHYSICAL PRODUCTION SYSTEMS (CPPS)
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wuest D., 2012, INT C MOB COMP APPL, P225, DOI DOI 10.1007/978-3-642-36632-1_13
NR 67
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1131
EP 1150
DI 10.1007/s10270-022-01054-5
EA NOV 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000877751700001
DA 2024-07-18
ER

PT J
AU Parra-Ullauri, JM
   García-Domínguez, A
   Bencomo, N
   Zheng, CG
   Zhen, C
   Boubeta-Puig, J
   Ortiz, G
   Yang, SF
AF Parra-Ullauri, Juan Marcelo
   Garcia-Dominguez, Antonio
   Bencomo, Nelly
   Zheng, Changgang
   Zhen, Chen
   Boubeta-Puig, Juan
   Ortiz, Guadalupe
   Yang, Shufan
TI Event-driven temporal models for explanations-ETeMoX: explaining
   reinforcement learning
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Temporal models; Complex event processing; Artificial intelligence;
   Explainable reinforcement learning; Event-driven monitoring
AB Modern software systems are increasingly expected to show higher degrees of autonomy and self-management to cope with uncertain and diverse situations. As a consequence, autonomous systems can exhibit unexpected and surprising behaviours. This is exacerbated due to the ubiquity and complexity of Artificial Intelligence (AI)-based systems. This is the case of Reinforcement Learning (RL), where autonomous agents learn through trial-and-error how to find good solutions to a problem. Thus, the underlying decision-making criteria may become opaque to users that interact with the system and who may require explanations about the system's reasoning. Available work for eXplainable Reinforcement Learning (XRL) offers different trade-offs: e.g. for runtime explanations, the approaches are model-specific or can only analyse results after-the-fact. Different from these approaches, this paper aims to provide an online model-agnostic approach for XRL towards trustworthy and understandable AI. We present ETeMoX, an architecture based on temporal models to keep track of the decision-making processes of RL systems. In cases where the resources are limited (e.g. storage capacity or time to response), the architecture also integrates complex event processing, an event-driven approach, for detecting matches to event patterns that need to be stored, instead of keeping the entire history. The approach is applied to a mobile communications case study that uses RL for its decision-making. In order to test the generalisability of our approach, three variants of the underlying RL algorithms are used: Q-Learning, SARSA and DQN. The encouraging results show that using the proposed configurable architecture, RL developers are able to obtain explanations about the evolution of a metric, relationships between metrics, and were able to track situations of interest happening over time windows.
C1 [Parra-Ullauri, Juan Marcelo; Garcia-Dominguez, Antonio] Aston Univ, Engn & Appl Sci Sch, Birmingham, W Midlands, England.
   [Bencomo, Nelly] Univ Durham, Dept Comp Sci, Durham, England.
   [Zheng, Changgang] Univ Oxford, Dept Engn Sci, Oxford, England.
   [Zhen, Chen] Univ Sci & Technol China, Comp Sci & Technol, Hefei, Peoples R China.
   [Boubeta-Puig, Juan; Ortiz, Guadalupe] Univ Cadiz, Dept Comp Sci & Engn, Cadiz, Spain.
   [Yang, Shufan] Edinburgh Napier Univ, Sch Comp, Edinburgh, Midlothian, Scotland.
   [Yang, Shufan] Univ Glasgow, Ctr Med & Ind Ultrason, Glasgow, Lanark, Scotland.
C3 Aston University; Durham University; University of Oxford; Chinese
   Academy of Sciences; University of Science & Technology of China, CAS;
   Universidad de Cadiz; Edinburgh Napier University; University of Glasgow
RP Parra-Ullauri, JM (corresponding author), Aston Univ, Engn & Appl Sci Sch, Birmingham, W Midlands, England.
EM j.parra-ullauri@aston.ac.uk; a.garcia-dominguez@aston.ac.uk;
   nelly.bencomo@durham.ac.uk; changgang.zheng@eng.ox.ac.uk;
   cz2016@mail.ustc.edu.cn; juan.boubeta@uca.es; guadalupe.ortiz@uca.es;
   s.yang@napier.ac.uk
RI Bencomo, Nelly/GZL-1379-2022; Zheng, Changgang/AFS-4697-2022;
   Parra-Ullauri, Juan Marcelo/JDW-2634-2023; Ortiz, Guadalupe/K-8601-2014;
   Boubeta-Puig, Juan/L-9429-2014; Garcia Dominguez, Antonio/IAN-2064-2023
OI Zheng, Changgang/0000-0003-1894-722X; Parra-Ullauri, Juan
   Marcelo/0000-0003-1801-3494; Ortiz, Guadalupe/0000-0002-5121-6341;
   Boubeta-Puig, Juan/0000-0002-8989-7509; Garcia Dominguez,
   Antonio/0000-0002-4744-9150
FU The Leverhulme Trust Fellowship "QuantUn: quantification of uncertainty
   using Bayesian surprises" [RF-2019-548/9]; EPSRC Research Project
   [EP/T017627/1]; Royal Society of Edinburgh project "A Reinforcement
   Learning Based Resource Management System for Long Term Care for Elderly
   People" [961_Yang]; Spanish Ministry of Science and Innovation; European
   Regional Development Funds under project FAME [RTI2018-093608-B-C33];
   Research Plan from the University of Cadiz; Grupo Ener-getico de Puerto
   Real S.A. under project GANGES [IRTP03_UCA]; EPSRC [EP/T017627/2]
   Funding Source: UKRI
FX This work has been partially sponsored by The Leverhulme Trust
   Fellowship "QuantUn: quantification of uncertainty using Bayesian
   surprises" (Grant No. RF-2019-548/9), the EPSRC Research Project
   Twenty20Insight (Grant No. EP/T017627/1), The Royal Society of Edinburgh
   project "A Reinforcement Learning Based Resource Management System for
   Long Term Care for Elderly People" (Grant No. 961_Yang), the Spanish
   Ministry of Science and Innovation and the European Regional Development
   Funds under project FAME (Grant No. RTI2018-093608-B-C33], and the
   Research Plan from the University of Cadiz and Grupo Ener-getico de
   Puerto Real S.A. under project GANGES (Grant No. IRTP03_UCA).
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   Anjomshoae S, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1078
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 2017, ELASTIC INTRO MACHIN
   Asim M, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P550, DOI 10.1109/SocialCom.2013.83
   Barquero G, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P166, DOI 10.1145/3239372.3239402
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Boubeta-Puig J, 2015, KNOWL-BASED SYST, V89, P97, DOI 10.1016/j.knosys.2015.06.021
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Camacho A, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6065
   Carey P., 2018, Data Protection: A Practical Guide to U.K. and EU Law
   Cashmore M., 2019, ARXIV PREPRINT ARXIV
   Castelvecchi D, 2016, NATURE, V537, P20, DOI 10.1038/538020a
   Cicotti G, 2012, LECT NOTES COMPUT SC, V7155, P15, DOI 10.1007/978-3-642-29737-3_3
   Coggan M., 2004, Exploration and exploitation in reinforcement learning
   Corral-Plaza D, 2020, COMPUT STAND INTER, V70, DOI 10.1016/j.csi.2020.103426
   Cox MT., 2011, METAREASONING MONITO
   Davis F.D., 1986, TECHNOLOGY ACCEPTANC
   de Freitas Edison Pignaton, 2010, 2010 International Congress on Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT 2010), P309, DOI 10.1109/ICUMT.2010.5676621
   Dodson T, 2013, ACM T INTERACT INTEL, V3, DOI 10.1145/2513564
   Esling P, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379788
   Feltrin G., 2019, SENTINEL NODE EVENT, DOI 10.1155/2019/8652527
   Fowler Martin, 2005, Event sourcing, P18
   Fridman L., 2017, ARXIV PREPRINT ARXIV, V1
   García-Domínguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P194, DOI 10.1109/MODELS.2019.000-2
   Gómez A, 2018, LECT NOTES COMPUT SC, V11157, P365, DOI 10.1007/978-3-030-00847-5_26
   Haeusler M., 2019, SOFTW SYST MODEL
   Hartmann Thomas, 2017, P SEKE 17
   Heuillet A, 2021, KNOWL-BASED SYST, V214, DOI 10.1016/j.knosys.2020.106685
   Juozapaitis Zoe, 2019, IJCAI ECAI WORKSH EX
   Konno S, 2019, IEEE PAC RIM INT SYM, P33, DOI 10.1109/PRDC47002.2019.00020
   Le Bras P, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173978
   Letham B, 2015, ANN APPL STAT, V9, P1350, DOI 10.1214/15-AOAS848
   Light RA, 2017, J Open Source Software, V2, P265, DOI [DOI 10.21105/JOSS.00265, 10.21105/joss.00265]
   Lim BY, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2119
   Lipton ZC, 2018, COMMUN ACM, V61, P36, DOI 10.1145/3233231
   Luckham D.C., 1998, Computer Systems Laboratory, V28, P16
   Mahmud M, 2018, IEEE T NEUR NET LEAR, V29, P2063, DOI 10.1109/TNNLS.2018.2790388
   Mazak A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a14
   Merwaday A, 2015, IEEE WIREL COMMUNN, P329, DOI 10.1109/WCNCW.2015.7122576
   Michalski R.S., 2013, Machine Learning: An Artificial Intelligence Approach
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Moser O, 2010, LECT NOTES COMPUT SC, V6488, P38, DOI 10.1007/978-3-642-17616-6_6
   OH J, 2020, ARXIV PREPRINT ARXIV
   Overeem M, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P193, DOI 10.1109/SANER.2017.7884621
   Panch T, 2018, J GLOB HEALTH, V8, DOI 10.7189/jogh.08.020303
   Parra-Ullauri Juan Marcelo, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P155, DOI 10.1145/3419804.3420276
   Parra-Ullauri J.M., ARCHITECTURE INTEGRA
   Parra-Ullauri J.M., 2021, ETEMOX EVENT DRIVEN
   Paul, 2014, GLOB J RES ENG
   Petter EA, 2018, TRENDS COGN SCI, V22, P911, DOI 10.1016/j.tics.2018.08.004
   PooleDavid MackworthAlan, 1998, COMPUTATIONAL INTELL
   Popovic N, 2017, STRUCT CONTROL HLTH, V24, DOI 10.1002/stc.1934
   Puiutta Erika, 2020, Machine Learning and Knowledge Extraction. 4th IFIP TC 5, TC 12, WG 8.4, WG 8.9, WG 12.9. International Cross-Domain Conference, CD-MAKE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12279), P77, DOI 10.1007/978-3-030-57321-8_5
   Ras G., 2018, Explainable and interpretable models in computer vision and machine learning, P19, DOI DOI 10.1007/978-3-319-98131-4_2
   Ricciato F., 2015, Estimating Population Density Distribution from Network-Based Mobile Phone Data
   Robinson I., 2013, Graph databases
   Roldán J, 2020, EXPERT SYST APPL, V149, DOI 10.1016/j.eswa.2020.113251
   Romano L., 2011, 2011 First International Conference on Data Compression, Communications and Processing, P45, DOI 10.1109/CCP.2011.49
   Rosenfeld A., 2021, P 20 INT C AUT AG MU, P45, DOI [DOI 10.5555/3463952.3463962, 10.5555/3463952.3463962]
   Samek W., 2017, ARXIV PREPRINT ARXIV
   Sequeira P, 2020, ARTIF INTELL-AMST, V288, DOI 10.1016/j.artint.2020.103367
   Spinner T, 2020, IEEE T VIS COMPUT GR, V26, P1064, DOI 10.1109/TVCG.2019.2934629
   Such F.P., 2018, NEURIPS DEEP RL WORK
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 1996, ADV NEUR IN, V8, P1038
   Theodoridis T, 2019, 12TH ACM INTERNATIONAL CONFERENCE ON PERVASIVE TECHNOLOGIES RELATED TO ASSISTIVE ENVIRONMENTS (PETRA 2019), P540, DOI 10.1145/3316782.3322760
   Turilli M, 2009, ETHICS INF TECHNOL, V11, P105, DOI 10.1007/s10676-009-9187-9
   ValenteKlaine, 2019, THESIS U GLASGOW
   vander Waa J., 2018, ARXIV PREPRINT ARXIV
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Vijayakumar K., 2017, J AMB INTEL HUM COMP, P1
   Watkins C. J. C. H., 1989, Learning from Delayed Rewards
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Zeng Y, 2016, IEEE COMMUN MAG, V54, P36, DOI 10.1109/MCOM.2016.7470933
   Zheng C., IEEE TETCI
NR 77
TC 8
Z9 9
U1 3
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1091
EP 1113
DI 10.1007/s10270-021-00952-4
EA DEC 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000731367600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mulder, MAT
   Proper, HA
AF Mulder, Mark A. T.
   Proper, Henderik A.
TI On Enterprise-Grade Tool Support for DEMO
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise engineering; DEMO; Modelling tools
ID SYSTEMS
AB The Design and Engineering Methodology for Organisations (DEMO) is a core method within the discipline of enterprise engineering. It enables the creation of so-called essential models of enterprises. Such models are enterprise models that aim to focus on the organisational essence of an enterprise by leaving out (as much as possible) details of the socio-technical implementation. The organisational essence is then expressed primarily in terms of the actor roles involved, and the business transactions between these roles. The DEMO method has a firm theoretical foundation. At the same time, there is an increasing uptake of DEMO in practice. This also results in a need for enterprise-grade tool support for the use of the method. In this paper, we report on a study concerning the selection, configuration, and extension, of an enterprise-grade tool platform to support the use of DEMO in practice. The configuration of the selected tool framework to support DEMO modelling, provided general insights regarding the development of enterprise-grade tool support for (model-driven) methods such as DEMO, while also providing feedback on the consistency and completeness of the DEMO specification language; the specification language that accompanies the DEMO method.
C1 [Mulder, Mark A. T.] TEEC2, Hoevelaken, Netherlands.
   [Mulder, Mark A. T.] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Proper, Henderik A.] Luxembourg Inst Sci & Technol LIST, Belval, Luxembourg.
   [Proper, Henderik A.] Univ Luxembourg, Belval, Luxembourg.
C3 Radboud University Nijmegen; Luxembourg Institute of Science &
   Technology; University of Luxembourg
RP Mulder, MAT (corresponding author), TEEC2, Hoevelaken, Netherlands.; Mulder, MAT (corresponding author), Radboud Univ Nijmegen, Nijmegen, Netherlands.; Proper, HA (corresponding author), Luxembourg Inst Sci & Technol LIST, Belval, Luxembourg.; Proper, HA (corresponding author), Univ Luxembourg, Belval, Luxembourg.
EM markmulder@teec2.nl; e.proper@acm.org
OI Mulder, Mark/0000-0002-1846-0238; Proper, Henderik
   Alex/0000-0002-7318-2496
CR [Anonymous], 2017, FORMETIS ONLINE MODE
   Aveiro David, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P21, DOI 10.1109/CBI.2013.12
   Aveiro D., 2018, ENT ENG WORK C, P144
   Caetano A., 2012, Advances in Enterprise Information Systems II, P133, DOI [10.1201/b12295-17, DOI 10.1201/B12295-17]
   CaseWise, 2016, CAS SUIT CAS WISMOD
   de Kinderen S, 2012, LECT NOTES BUS INF P, V113, P270
   de Kinderen S, 2014, SOFTW SYST MODEL, V13, P1043, DOI 10.1007/s10270-012-0299-z
   Décosse C, 2014, LECT NOTES BUS INF P, V174, P16
   Dietz J., 2020, Enterprise Ontology: A human-centric approach to understanding the essence of organisation, DOI DOI 10.1007/978-3-030-38854-6
   Dietz Jan L. G., 2013, International Journal of Organisational Design and Engineering, V3, P86
   Dietz J.L. G., 2006, Enterprise ontology, DOI DOI 10.1007/3-540-33149-2
   Ettema R, 2009, LECT NOTES BUS INF P, V34, P172
   Gartner, 2020, INF TECHN GLOSS
   Gray Thomas, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P359, DOI 10.1007/978-3-030-49418-6_25
   Habermas J., 1984, THEORY COMMUNICATIVE
   Hommes B.J., 2015, MODELWORLD
   Kepes B., 2013, WHAT DOES ENTERPRISE
   Krouwel MR, 2011, LECT NOTES BUS INF P, V79, P31
   Land O, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-540-85232-2
   Lankhorst M, 2009, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-01310-2
   Liebrock L.M., 2008, P 23 ANN ACM S APPL, DOI [10.1145/1363686.1363815, DOI 10.1145/1363686.1363815]
   Meertens L.O., 2012, P 27 ANN ACM S APPL, P1694
   Microsoft, 2020, VISIO
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mráz O, 2017, LECT NOTES BUS INF P, V284, P85, DOI 10.1007/978-3-319-57955-9_7
   Mulder, 2019, ADV ENTERPRISE ENG, VXIII, P55
   Mulder, THESIS RADBOUD U NIJ
   Mulder Mark A. T., 2020, The Practice of Enterprise Modeling. 13th IFIP Working Conference, PoEM 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 400), P90, DOI 10.1007/978-3-030-63479-7_7
   Mulder Mark A. T., 2019, On the Move to Meaningful Internet Systems. OTM 2018 Workshops. Confederated International Workshops: EI2N, FBM, ICSP, and Meta4eS 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11231), P97, DOI 10.1007/978-3-030-11683-5_10
   Mulder M.A.T., 2017, DEMO SPECIFICATION L
   Mulder M.A.T., 2020, NEN 7513 MODELLED DE
   Mulder M.A.T., 2018, ENTERPRISE ENG WORKI, P131, DOI [10.1007/978-3-030-06097-8_8, DOI 10.1007/978-3-030-06097-8_8]
   Nunn R., 2015, WHAT IS ENTERPRISE G
   Partridge T., 2017, WHAT EXACTLY DOES EN
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pinto D., 2019, ENT ENG WORK C, P66
   Proper, 2021, IN PRESS
   Proper, 2009, ARCHIMATE 10 SPECIFI
   Santbrink J.v., 2020, OPEN MODELING
   Severien T., 2016, BUSINESS FUNDAMENTAL
   Software AG, ARIS
   Sparks G., 2020, WHAT DOES ENTERPRISE
   Sparx, 2017, ENTERPRISE ARCHITECT
   ter Hofstede AHM, 1998, INFORM SOFTWARE TECH, V40, P519, DOI 10.1016/S0950-5849(98)00078-0
   uSoft, 2016, UREQUIRE STUDIO
   van Reijswoud VE, 1999, INFORM SYST J, V9, P117, DOI 10.1046/j.1365-2575.1999.00055.x
   Vos J., 2011, BUSINESS MODELING SO
   Wagter R., PROPER ET, P99, DOI [10.1007/978-3-319-69584-6, DOI 10.1007/978-3-319-69584-6]
   Wang Y., 2009, THESIS DELFT U TECHN
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
   Zacarias, 2013, INT J RES BUS TECHNO, V2, P33, DOI [10.17722/ijrbt.v2i3.57, DOI 10.17722/IJRBT.V2I3.57]
NR 51
TC 0
Z9 0
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2022
VL 21
IS 4
BP 1341
EP 1361
DI 10.1007/s10270-021-00911-z
EA JUL 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4C3QP
UT WOS:000679022500002
DA 2024-07-18
ER

PT J
AU Amrani, M
   Blouin, D
   Heinrich, R
   Rensink, A
   Vangheluwe, H
   Wortmann, A
AF Amrani, Moussa
   Blouin, Dominique
   Heinrich, Robert
   Rensink, Arend
   Vangheluwe, Hans
   Wortmann, Andreas
TI Multi-paradigm modelling for cyber-physical systems: a descriptive
   framework
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-paradigm modelling; Foundations of model-based systems
   engineering; Cyber-physical systems
AB The complexity of cyber-physical systems (CPSs) is commonly addressed through complex workflows, involving models in a plethora of different formalisms, each with their own methods, techniques, and tools. Some workflow patterns, combined with particular types of formalisms and operations on models in these formalisms, are used successfully in engineering practice. To identify and reuse them, we refer to these combinations of workflow and formalism patterns as modelling paradigms. This paper proposes a unifying (Descriptive) Framework to describe these paradigms, as well as their combinations. This work is set in the context of Multi-Paradigm Modelling (MPM), which is based on the principle to model every part and aspect of a system explicitly, at the most appropriate level(s) of abstraction, using the most appropriate modelling formalism(s) and workflows. The purpose of the Descriptive Framework presented in this paper is to serve as a basis to reason about these formalisms, workflows, and their combinations. One crucial part of the framework is the ability to capture the structural essence of a paradigm through the concept of a paradigmatic structure. This is illustrated informally by means of two example paradigms commonly used in CPS: Discrete Event Dynamic Systems and Synchronous Data Flow. The presented framework also identifies the need to establish whether a paradigm candidate follows, or qualifies as, a (given) paradigm. To illustrate the ability of the framework to support combining paradigms, the paper shows examples of both workflow and formalism combinations. The presented framework is intended as a basis for characterisation and classification of paradigms, as a starting point for a rigorous formalisation of the framework (allowing formal analyses), and as a foundation for MPM tool development.
C1 [Amrani, Moussa] Univ Namur, Namur Digital Inst NaDi, Namur, Belgium.
   [Blouin, Dominique] Telecom Paris, Inst Polytech Paris, Palaiseau, France.
   [Heinrich, Robert] Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Rensink, Arend] Univ Twente, Enschede, Netherlands.
   [Vangheluwe, Hans] Univ Antwerp Flanders Make, Antwerp, Belgium.
   [Wortmann, Andreas] Rhein Westfal TH Aachen, Aachen, Germany.
   [Wortmann, Andreas] Univ Stuttgart, Stuttgart, Germany.
C3 University of Namur; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom Paris; Helmholtz Association; Karlsruhe
   Institute of Technology; University of Twente; RWTH Aachen University;
   University of Stuttgart
RP Rensink, A (corresponding author), Univ Twente, Enschede, Netherlands.
EM Moussa.Amrani@unamur.be; Dominique.Blouin@telecom-paris.fr;
   Robert.Heinrich@kit.edu; arend.rensink@utwente.nl;
   Hans.Vangheluwe@uantwerpen.be; Andreas.Wortmann@isw.uni-stuttgart.de
RI ; Vangheluwe, Hans/H-9884-2016
OI Heinrich, Robert/0000-0003-0779-9444; Rensink,
   Arend/0000-0002-1714-6319; Blouin, Dominique/0000-0001-7606-0251;
   Vangheluwe, Hans/0000-0003-2079-6643
FU Walloon Region Cluster of Excellence SkyWin SW_D-DAMS Project; ISC Chair
   (Ingenierie des Systemes Complexes) on cyber-physical systems and
   distributed control systems; German Federal Ministry of Education and
   Research [01IS18067D]; KASTEL institutional fund; Flanders Make;
   strategic research centre for the Flemish manufacturing industry;
   Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under
   Germany Excellence Strategy [EXC 2023]
FX Moussa Amrani was funded by the Walloon Region Cluster of Excellence
   SkyWin SW_D-DAMS Project. Dominique Blouin was partially supported by
   the ISC Chair (Ingenierie des Systemes Complexes) on cyber-physical
   systems and distributed control systems. Robert Heinrich was partially
   funded by the German Federal Ministry of Education and Research under
   grant 01IS18067D (RESPOND), and the KASTEL institutional funding. Hans
   Vangheluwe's Research Group was partially supported by Flanders Make,
   the strategic research centre for the Flemish manufacturing industry.
   Andreas Wortmann was partially funded by the Deutsche
   Forschungsgemeinschaft (DFG, German Research Foundation) under Germany
   Excellence Strategy-EXC 2023 Internet of Production.
CR Abadi M., 1998, A Theory of Objects
   Alur R, 2015, PRINCIPLES OF CYBER-PHYSICAL SYSTEMS, P1
   Amrani M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P419, DOI 10.1109/MODELS-C.2019.00067
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 2020, Cambridge Dictionary
   [Anonymous], 2007, Engineering Design
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], 2020, Oxford English Dictionary
   [Anonymous], 2007, P WORKSH SEM BUS PRO
   [Anonymous], 2020, MERRIAM WEBSTER ONLI
   Astrom K.J., 2012, Feedback Systems An Introduction for Scientists and Engineers
   Benveniste A, 2018, FOUND TRENDS ELECTRO, V12, pI, DOI 10.1561/1000000053
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Brockmans S, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P191
   Broenink J.F., 2020, FDN MULTIPARADIGM MO, P15
   Burden R. L., 2015, Cengage Learning
   Butting A, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P65, DOI 10.1145/3233027.3233037
   Carreira P., 2020, FDN MULTIPARADIGM MO
   Clavel M., 2007, ALL MAUDE SPECIFY PR
   Combemale Benoit, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P119, DOI 10.1007/978-3-642-33666-9_9
   COOPER D, 1983, STANDARD PASCAL USER
   Corradini A, 2004, LECT NOTES COMPUT SC, V3256, P383
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   Decker G, 2011, INFORM SYST, V36, P292, DOI 10.1016/j.is.2010.06.005
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Denckla B, 2005, IEEE DECIS CONTR P, P4193
   Dumas M., 2018, FUNDAMENTALS BUSINES
   El-Fakih K, 2013, ACTA CYBERN, V21, P205, DOI 10.14232/actacyb.21.2.2013.1
   Erdweg S., 2012, P 12 WORKSH LANG DES, P1, DOI DOI 10.1145/2427048.2427055
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Fritzsche M., 2011, MODELLIERUNG, P213
   Gomes C., 2020, Causal-Block Diagrams: A Family of Languages for Causal Modelling of Cyber-Physical Systems, P97
   Gomes C, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3179993
   Grainger J., 2015, Power systems analysis
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   HAILPERN B, 1986, IEEE SOFTWARE, V3, P6, DOI 10.1109/MS.1986.232426
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Heidenreich Florian, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P349, DOI 10.1007/978-3-642-21210-9_34
   HEINRICH R, 2019, IEEE T SOFTW ENG
   Hölldobler K, 2018, COMPUT LANG SYST STR, V54, P386, DOI 10.1016/j.cl.2018.08.002
   Holldobler K., 2021, MontiCore Language Workbench and Library Handbook
   IEEE, 1996, 127821995 IEEE, P1, DOI [10.1109/IEEESTD.1996.80824, DOI 10.1109/IEEESTD.1996.80824]
   Jinzhi L., 2019, THESIS KTH ROYAL I T
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Leduc M, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P47, DOI 10.1145/3276604.3276622
   LEE EA, 1987, IEEE T COMPUT, V36, P24, DOI 10.1109/TC.1987.5009446
   Lee Edward Ashford, 2016, INTRO EMBEDDED SYSTE
   Liu Shih-Hsi, 2010, Design Space Exploration for Distributed Real-Time
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Maraninchi F, 2003, SCI COMPUT PROGRAM, V46, P219, DOI 10.1016/S0167-6423(02)00093-X
   Merkow M., 2019, SECURE RESILIENT AGI, DOI 10.1201/9781003025399
   Messerschmitt D. G., 1984, IEEE Journal on Selected Areas in Communications, VSAC-2, P137, DOI 10.1109/JSAC.1984.1146044
   Meyers B., 2017, IEEE T SOFTW ENG TSE, V93, P1045
   Mosterman PJ, 2004, IEEE T CONTR SYST T, V12, P223, DOI 10.1109/TCST.2004.824280
   Przybylek A., 2019, LECT NOTES BUSINESS, V376
   Rumpe Bernhard, 2018, Principles of Modeling - Essays Dedicated to Edward A. Lee on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 10760), P383, DOI 10.1007/978-3-319-95246-8_23
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   St┬u├▒rk RF., 2014, JAVA JAVA VIRTUAL MA
   Syriani E, 2015, SOFTW SYST MODEL, V14, P1215, DOI 10.1007/s10270-013-0370-4
   Taha W., 2020, CYBER PHYS SYSTEMS M
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   van der Aalst WMP, 2009, LECT NOTES COMPUT SC, V5569, P42
   Van Roy P., 2012, CHAP PROGRAMMING PAR, P9
   Vangheluwe H., 1996, EUROPEAN SIMULATION
   Vangheluwe H. L., 1996, Simulation in Industry. 8th European Simulation Symposium. ESS'96, P168
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wainer GA, 2009, COMPUT ANAL SYNTH DE, P1, DOI 10.1201/9781420053371
   Wainer GA, 2009, COMPUT ANAL SYNTH DE, P3
   WATSON I, 1982, COMPUTER, V15, P51, DOI 10.1109/MC.1982.1653941
   Wegner P., 1987, SIGPLAN Notices, V22, P168, DOI 10.1145/38807.38823
   Wende C., 2012, THESIS TU DRESDEN
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Wuliang Sun, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P118, DOI 10.1007/978-3-642-39013-5_9
   Youth4Climate, 2021, UN CLIM CHANG C UK 2
   ZAVE P, 1989, IEEE SOFTWARE, V6, P15, DOI 10.1109/52.35586
   Zeigler B. P., 2018, Theory of modeling and simulation: discrete event & iterative system computational foundations
   Zhang F., 2008, IFAC Proceedings Volumes, V41, P7967, DOI [10.3182/20080706-5-KR-1001.01346, DOI 10.3182/20080706-5-KR-1001.01346]
NR 80
TC 16
Z9 16
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 611
EP 639
DI 10.1007/s10270-021-00876-z
EA JUN 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000659439100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Götz, S
   Tichy, M
   Groner, R
AF Goetz, Stefan
   Tichy, Matthias
   Groner, Raffaela
TI Claimed advantages and disadvantages of (dedicated) model transformation
   languages: a systematic literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model transformation language; DSL; Model transformation; MDSE;
   Advantages; Disadvantages
ID DOMAIN-SPECIFIC LANGUAGES; SOFTWARE; QUALITY; TOOLS; LINES
AB There exists a plethora of claims about the advantages and disadvantages of model transformation languages compared to general-purpose programming languages. With this work, we aim to create an overview over these claims in the literature and systematize evidence thereof. For this purpose, we conducted a systematic literature review by following a systematic process for searching and selecting relevant publications and extracting data. We selected a total of 58 publications, categorized claims about model transformation languages into 14 separate groups and conceived a representation to track claims and evidence through the literature. From our results, we conclude that: (i) the current literature claims many advantages of model transformation languages but also points towards certain deficits and (ii) there is insufficient evidence for claimed advantages and disadvantages and (iii) there is a lack of research interest into the verification of claims.
C1 [Goetz, Stefan] Ulm Univ, D-89081 Ulm, Germany.
   [Tichy, Matthias] Ulm Univ, Software Engn, D-80901 Ulm, Germany.
   [Tichy, Matthias] Ulm Univ, Inst Software Engn & Programming Languages, D-80901 Ulm, Germany.
   [Groner, Raffaela] Ulm Univ, D-80901 Ulm, Germany.
C3 Ulm University; Ulm University; Ulm University; Ulm University
RP Götz, S (corresponding author), Ulm Univ, D-89081 Ulm, Germany.
EM stefan.goetz@uni-ulm.de; matthias.tichy@uni-ulm.de;
   raffaela.groner@uni-ulm.de
OI Hoppner, Stefan/0000-0001-7028-131X
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Alves R, 2016, LECT NOTES COMPUT SC, V9856, P335, DOI 10.1007/978-3-319-44902-9_21
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], 2001, Model driven architecture (mda)
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Aruoba S. B., 2014, TECHNICAL REPORT
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Barat S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P15, DOI 10.1145/3021460.3021462
   Barb AS, 2014, INNOV SYST SOFTW ENG, V10, P243, DOI 10.1007/s11334-014-0231-5
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   BASILI VR, 1979, COMPUTER, V12, P21, DOI 10.1109/MC.1979.1658573
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boot A, 2016, SYSTEMATIC APPROACHE
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Cary JR, 1997, COMPUT PHYS COMMUN, V105, P20, DOI 10.1016/S0010-4655(97)00043-X
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Cuadrado J., 2006, MODEL DRIVEN ARCHITE, DOI [10.1007/11787044_13, DOI 10.1007/11787044_13]
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gherardi Luca., 2012, Proceedings of the Third International Conference on Simulation, Modeling, P161, DOI [10.1007/978-3-642-34327-8_17, DOI 10.1007/978-3-642-34327-8_17]
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hebig R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P445, DOI 10.1145/3236024.3236046
   HENDERSON R, 1994, SOFTWARE PRACT EXPER, V24, P1077, DOI 10.1002/spe.4380241106
   Hinkel G, 2013, THESIS
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jianbin Fang, 2011, 2011 International Conference on Parallel Processing, P216, DOI 10.1109/ICPP.2011.45
   JONES TC, 1978, IBM SYST J, V17, P39, DOI 10.1147/sj.171.0039
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kfikava F., 2014, MODEL DRIVEN ENG LAN, DOI [10.1007/978-3-319-11653-2_35, DOI 10.1007/978-3-319-11653-2_35]
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kofod-Petersen A, 2015, DO STRUCTURED LIT RE
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Kurniawan B., 2004, AS PAC WEB C APWEB 2, DOI [10.1007/978-3-540-24655-8_77, DOI 10.1007/978-3-540-24655-8_77]
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Rein Patrick, 2020, DESIGN THINKING RES, P111, DOI [10.1007/978-3- 030-28960-7_7, DOI 10.1007/978-3-030-28960-7_7]
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Sjoberg D.I.K, 2002, P 2002 INT S EMP SOF, DOI [10.1109/ISESE.2002.1166921, DOI 10.1109/ISESE.2002.1166921]
   Somasundaram R., 2003, ECIS 2003 P, P53
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   van Amstel M, 2011, THEORY PRACTICE MODE, DOI [10.1007/978-3-642-21732-6_8, DOI 10.1007/978-3-642-21732-6_8]
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Varro D, 2006, GRAPH TRANSFORMATION, DOI [10.1007/11841883_19, DOI 10.1007/11841883_19]
   Weyns D., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P89, DOI 10.1109/SEAMS.2012.6224395
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wiger U, 2001, 4 FOLD INCREASE PROD
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 67
TC 7
Z9 7
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2021
VL 20
IS 2
BP 469
EP 503
DI 10.1007/s10270-020-00815-4
EA JUL 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3NG
UT WOS:000548110300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Eder, J
   Voss, S
   Bayha, A
   Ipatiov, A
   Khalil, M
AF Eder, Johannes
   Voss, Sebastian
   Bayha, Andreas
   Ipatiov, Alexandru
   Khalil, Maged
TI Hardware architecture exploration: automatic exploration of distributed
   automotive hardware architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE E; E architecture; Design space exploration; Automotive
AB As the engineering of distributed embedded systems is getting more and more complex, due to increasingly sophisticated functionalities demanding more and more powerful hardware, model-based development of software-intensive embedded systems has become a de facto standard in recent years. Among other advantages, it enables design space exploration methods allowing for frontloading techniques which support a system architect already at early stages of development. In this paper, we want to present an approach which is capable of automatically generating automotive E/E architectures (electric/electronic architecture; in-car network of processing units and buses). Based on the concept of viewpoints, we will introduce dedicated technical meta-models, a language to formally describe a hardware architecture exploration problem and an automatic exploration approach using satisfiability modulo theories. We will furthermore introduce a dedicated methodology and show how an exploration integrates into a system development process. In the end, we will evaluate our approach by applying it to an industrial use case provided by Continental.
C1 [Eder, Johannes; Voss, Sebastian; Bayha, Andreas] Fortiss GmbH, Guerickestr 25, D-80805 Munich, Germany.
   [Ipatiov, Alexandru; Khalil, Maged] Continental AG, Frankfurt, Germany.
C3 fortiss; Continental AG
RP Eder, J (corresponding author), Fortiss GmbH, Guerickestr 25, D-80805 Munich, Germany.
EM eder@fortiss.org; voss@fortiss.org; bayha@fortiss.org;
   Alexandru.Ipatiov@continental-corporation.com;
   Maged.Khalil@continental-corporation.com
CR Alexander Diewald SV, 2015, LIGHTWEIGHT DESIGN S, P4503
   [Anonymous], 2012, MODEL BASED ENG EMBE, DOI DOI 10.1007/978-3-642-34614-9
   Aravantinos V., 2015, CEUR WORKSHOP P, P19
   Bajaj N, 2015, DES AUT TEST EUROPE, P561
   Barner S, 2018, MODELING DEV PROCESS, P76
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Bayha A, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P57, DOI 10.1145/2866614.2866623
   Becker K, 2015, 2015 IEEE 18TH INTERNATIONAL SYMPOSIUM ON REAL-TIME DISTRIBUTED COMPUTING (ISORC), P110, DOI 10.1109/ISORC.2015.10
   Bilic D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P288, DOI 10.1109/MODELS-C.2019.00045
   Bjorner N., 2015, Tools and Algorithms for the Construction and Analysis of Systems, V9035, P194, DOI DOI 10.1007/978-3-662-46681-0
   Brandt L. S., 2012, P INT DES C DESIGN D, V70, P737
   Broy M., 2012, Specification and development of interactive systems: focus on streams, interfaces, and refinement
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eder J, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P437, DOI 10.1145/3239372.3239385
   Eder J, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P270, DOI 10.1109/MODELS.2017.36
   Glass M, 2008, 2008 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION, PROCEEDINGS, P74, DOI 10.1109/ICSAMOS.2008.4664849
   ISO, 2011, I26262 ISOFDIS, V26262
   ISO/IEC S, 2011, 42010 ISOIEC, V42010
   Kugele S, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P158, DOI 10.1109/MEMCOD.2015.7340482
   OMG, 2012, OMG SYST MOD LANG OM
   Pasricha S, 2005, DES AUT CON, P565
   Pinto A, 2006, ACM T DES AUTOMAT EL, V11, P537, DOI 10.1145/1142980.1142982
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K., 2016, ADV MODEL BASED ENG, P3
   Prasad KV, 2010, P IEEE, V98, P510, DOI 10.1109/JPROC.2010.2041835
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Ross JA, 2019, SOFTW SYST MODEL, V18, P739, DOI 10.1007/s10270-017-0592-y
   Schätz B, 2015, DES AUT CON, DOI 10.1145/2744769.2747912
   Sommer S., 2013, RACE CTR PLATFORM CO
   Voss S, 2013, 2013 20TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2013), P100, DOI 10.1109/ECBS.2013.23
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Zeller M, 2013, J SYST ARCHITECT, V59, P1067, DOI 10.1016/j.sysarc.2012.11.003
   Zverlov S, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P366, DOI 10.1109/COMPSACW.2014.63
NR 33
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 911
EP 934
DI 10.1007/s10270-020-00786-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000550793200007
DA 2024-07-18
ER

PT J
AU Chen, T
   Schiek, M
   Dammers, J
   Shah, NJ
   van Waasen, S
AF Chen, Tao
   Schiek, Michael
   Dammers, Juergen
   Shah, N. Jon
   van Waasen, Stefan
TI Requirement-driven model-based development methodology applied to the
   design of a real-time MEG data processing unit
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MBSE; SysML; Real-time systems; MEG; Artifact rejection; Neurofeedback
ID IMPLEMENTATION; SEPARATION; STATISTICS; FASTICA; SYSTEM; FPGA
AB The paper describes a multidisciplinary work that uses a model-based systems engineering method for developing real-time magnetoencephalography (MEG) signal processing. We introduce a requirement-driven, model-based development methodology (RDD and MBD) to provide a high-level environment and efficiently handle the complexity of computation and control systems. The proposed development methodology focuses on the use of System Modeling Language to define high-level model-based design descriptions for later implementation in heterogeneous hardware/software systems. The proposed approach was applied to the implementation of a real-time artifact rejection unit in MEG signal processing and demonstrated high efficiency in designing complex high-performance embedded systems. In MEG signal processing, biological artifacts in particular have a signal strength that overtop the signal of interest by orders of magnitude and must be removed from the measurement to achieve high-quality source reconstructions with minimal error contributions. However, many existing brain-computer interface studies overlook real-time artifact removal because of the demanding computational process. In this work, an automated real-time artifact rejection method is introduced, which is based on the recently presented method "ocular and cardiac artifact rejection for real-time analysis in MEG" (OCARTA). The method has been implemented using the RDD and MBD approach and successfully verified on a Virtex-6 field-programmable gate array.
C1 [Chen, Tao; Schiek, Michael; van Waasen, Stefan] Forschungszentrum Julich, Cent Inst Elect Syst ZEA 2, D-52425 Julich, Germany.
   [Chen, Tao; Dammers, Juergen; Shah, N. Jon] Forschungszentrum Julich, Inst Neurosci & Med INM 4, D-52425 Julich, Germany.
   [Shah, N. Jon] Rhein Westfal TH Aachen, Fac Med, Dept Neurol, D-52074 Aachen, Germany.
   [Shah, N. Jon] Rhein Westfal TH Aachen, JARA BRAIN Translat Med, D-52074 Aachen, Germany.
   [van Waasen, Stefan] Univ Duisburg Essen, Fac Engn, Commun Syst, D-47057 Duisburg, Germany.
C3 Helmholtz Association; Research Center Julich; Helmholtz Association;
   Research Center Julich; RWTH Aachen University; RWTH Aachen University;
   University of Duisburg Essen
RP Chen, T (corresponding author), Forschungszentrum Julich, Cent Inst Elect Syst ZEA 2, D-52425 Julich, Germany.; Chen, T (corresponding author), Forschungszentrum Julich, Inst Neurosci & Med INM 4, D-52425 Julich, Germany.
EM t.chen.mbse@hotmail.com
RI Dammers, Jürgen/I-1485-2013; van Waasen, Stefan/HTP-8323-2023; Shah, N.
   Jon/H-5849-2013
OI Dammers, Jürgen/0000-0003-1526-6592; van Waasen,
   Stefan/0000-0003-0682-7941; Shah, N. Jon/0000-0002-8151-6169
FU China Scholarship Council (CSC); Central Institute of Engineering,
   Electronics and Analytics - Electronic Systems [ZEA-2]; Institute of
   Neuroscience and Medicine at Forschungszentrum Julich GmbH [INM-4]
FX The presented research is supported by China Scholarship Council (CSC),
   in cooperation with the Central Institute of Engineering, Electronics
   and Analytics - Electronic Systems (ZEA-2) and the Institute of
   Neuroscience and Medicine (INM-4) at Forschungszentrum Julich GmbH.
CR [Anonymous], 2012, OMG SYST MOD LANG OM
   [Anonymous], P 4 ANN S BEN
   [Anonymous], 2019, MODEL BASED DESIGN H
   Basit-Ur-Rahim M.A., 2014, 2014 5 IEEE INT C SO
   Behera RK, 2015, PROCEEDINGS 2015 INTERNATIONAL CONFERENCE ON MAN AND MACHINE INTERFACING (MAMI)
   BELL AJ, 1995, NEURAL COMPUT, V7, P1129, DOI 10.1162/neco.1995.7.6.1129
   Biomagnetic Technologies Inc, 2006, MAGNES 2500 WH X 360
   Breuer L, 2015, IDENTIFICATION NEURO
   Breuer L, 2014, J NEUROSCI METH, V233, P105, DOI 10.1016/j.jneumeth.2014.06.016
   Buch E, 2008, STROKE, V39, P910, DOI 10.1161/STROKEAHA.107.505313
   Charoensak C., 2005, IEEE INT S CIRC SYST
   Chen T, 2018, INT J BIOELECTROMAGN, V209, P39
   Chen T, 2017, 2017 EUR MOD S EMS
   Chen T-Y, 2016, SYSTEM ON CHIP DESIG
   Dale CL, 2010, INT J PSYCHOPHYSIOL, V75, P183, DOI 10.1016/j.ijpsycho.2009.10.009
   Dammers J., 2011, MAGNETOENCEPHALOGRAP, DOI [10.5772/27523, DOI 10.5772/27523]
   Dammers J, 2008, IEEE T BIO-MED ENG, V55, P2353, DOI 10.1109/TBME.2008.926677
   Delligatti L., 2013, SYSML DISTILLED BRIE
   Dinh C, 2015, BRAIN TOPOGR, V28, P771, DOI 10.1007/s10548-015-0431-9
   Du H, 2004, PROC SPIE, V5439, P74, DOI 10.1117/12.543962
   Du H., 2004, 2004 IEEE INT GEOSC, V5
   Esch L, 2018, J NEUROSCI METH, V303, P55, DOI 10.1016/j.jneumeth.2018.03.020
   Florin E, 2014, NEUROIMAGE, V88, P54, DOI 10.1016/j.neuroimage.2013.10.028
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   HAMALAINEN M, 1993, REV MOD PHYS, V65, P413, DOI 10.1103/RevModPhys.65.413
   Huang W.-C, 2008, IEEE BIOM CIRC SYST
   Karamizadeh S., 2020, J SIGNAL INF PROCESS, V4, P173, DOI [10.4236/jsip.2013.43B031, DOI 10.4236/JSIP.2013.43B031]
   Kim CM, 2003, IEEE T NEURAL NETWOR, V14, P1038, DOI 10.1109/TNN.2003.818381
   Kuriakose J., 2016, IJSTE INT J SCI TECH, P392
   Van LD, 2011, IEEE T NEURAL NETWOR, V22, P1809, DOI 10.1109/TNN.2011.2166979
   Lauer RT, 2000, IEEE T REHABIL ENG, V8, P205, DOI 10.1109/86.847817
   Li Z., 2005, INT C NEUR NETW BRAI, V2
   Mellinger J, 2007, NEUROIMAGE, V36, P581, DOI 10.1016/j.neuroimage.2007.03.019
   Office of the Deputy Under Secretary of Defense for Acquisition and Technology Systems and Software Engineering, 2008, SYST SOFTW ENG SYST
   Paredis C.J., 2010, INCOSE INT S
   Roh T, 2014, IEEE T BIOMED CIRC S, V8, P755, DOI 10.1109/TBCAS.2014.2384017
   Rongen H., 2005, REAL TIM C 2005 14 I
   Rosenberg D., 2010, EMBEDDED SYSTEMS DEV, P4
   Sattar F, 2002, P IEEE INT ASIC C&E, P15, DOI 10.1109/ASIC.2002.1158023
   Shahrouzi SN, 2017, EURASIP J EMBED SYST, DOI 10.1186/s13639-017-0074-x
   Shih W.-Y, 2012, 2012 IEEE BIOM CIRC
   Shyu KK, 2008, IEEE T NEURAL NETWOR, V19, P958, DOI 10.1109/TNN.2007.915115
   SMIRNOV N, 1948, ANN MATH STAT, V19, P279, DOI 10.1214/aoms/1177730256
   STEPHENS MA, 1970, J ROY STAT SOC B, V32, P115
   Sudre G, 2011, COMPUT INTEL NEUROSC, V2011, DOI 10.1155/2011/327953
   Suslov S, 2013, PARALLELISATION POTE
   Suslov S, 2017, PRESENTATION SYSML C
   Wang JC, 2016, IEEE T CIRCUITS-II, V63, P196, DOI 10.1109/TCSII.2015.2468928
   Weilkiens T., 2011, Systems Engineering with SysML/UML: Modeling, Analysis, Design
   Yang CH, 2015, IEEE T BIOMED CIRC S, V9, P60, DOI 10.1109/TBCAS.2014.2318592
   Zamrini Edward, 2011, Int J Alzheimers Dis, V2011, P280289, DOI 10.4061/2011/280289
NR 51
TC 0
Z9 0
U1 0
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD NOV
PY 2020
VL 19
IS 6
BP 1567
EP 1587
DI 10.1007/s10270-020-00797-3
EA MAY 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NV3VW
UT WOS:000531132800001
DA 2024-07-18
ER

PT J
AU Gulden, J
   Burattin, A
   Andaloussi, AA
   Weber, B
AF Gulden, Jens
   Burattin, Andrea
   Andaloussi, Amine A.
   Weber, Barbara
TI From analytical purposes to data visualizations: a decision process
   guided by a conceptual framework and eye tracking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Data visualization; Process execution data; Process Modeling Behavior
   Analysis; Eye tracking; Reading patterns; Process mining
AB Data visualizations are versatile tools for gaining cognitive access to large amounts of data and for making complex relationships in data understandable. This paper proposes a method for assessing data visualizations according to the purposes they fulfill in domain-specific data analysis settings. We introduce a framework that gets configured for a given analysis domain and allows to choose data visualizations in a methodically justified way, based on analysis questions that address different aspects of data to be analyzed. Based on the concepts addressed by the analysis questions, the framework provides systematic guidance for determining which data visualizations are able to serve which conceptual analysis interests. In a second step of the method, we propose to follow a data-driven approach and to experimentally compare alternative data visualizations for a particular analytical purpose. More specifically, we propose to use eye tracking to support justified decisions about which of the data visualizations selected with the help of the framework are most suitable for assessing the analysis domain in a cognitively efficient way. We demonstrate our approach of how to come from analytical purposes to data visualizations using the example domain of Process Modeling Behavior Analysis. The analyses are performed on the background of representative analysis questions from this domain.
C1 [Gulden, Jens] Univ Duisburg Essen, Essen, Germany.
   [Burattin, Andrea; Andaloussi, Amine A.; Weber, Barbara] Tech Univ Denmark, Lyngby, Denmark.
   [Weber, Barbara] Univ St Gallen, St Gallen, Switzerland.
C3 University of Duisburg Essen; Technical University of Denmark;
   University of St Gallen
RP Gulden, J (corresponding author), Univ Duisburg Essen, Essen, Germany.
EM jensgulden@acm.org; andbur@dtu.dk; amab@dtu.dk; barbara.weber@unisg.ch
RI Burattin, Andrea/K-4485-2016
OI Burattin, Andrea/0000-0002-0837-0183; Abbad-Andaloussi,
   Amine/0000-0002-3404-7849; Weber, Barbara/0000-0002-6004-4860
CR [Anonymous], 2016, LEVERAGING HUMAN PRO
   [Anonymous], 1999, PHILOS FLESH EMBODIE
   [Anonymous], TECH REP
   [Anonymous], INFORM VISUALIZATION
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bennett KB, 2011, DISPLAY AND INTERFACE DESIGN: SUBTLE SCIENCE, EXACT ART, P1
   Berson A., 2004, Data Warehousing, Data Mining Olap
   Bertin J, 1983, IN PRESS
   Borner Katy., 2014, VISUAL INSIGHTS PRAC
   Buckl S., 2009, P 14 ANN EUR C PATT
   Burattin A., 2016, TAPROVIZ
   Cairo A, 2010, FUNCTIONAL ART VOICE
   Chen C., 2008, HDB DATA VISUALIZATI
   Claes J, 2017, DECIS SUPPORT SYST, V100, P57, DOI 10.1016/j.dss.2017.02.004
   Claes J, 2015, INF SYST E-BUS MANAG, V13, P147, DOI 10.1007/s10257-014-0245-4
   Codd E.F., 1993, CSBSCT PROVIDING OLA
   Cooper A., 2014, FACE ESSENTIALS INTE
   Daniel F., 2011, LECT NOTES BUS INF P, P169
   Few S., 2006, Information dashboard design: the effective visual communication of data, V1st ed.
   Frank U., 2009, P 9 OOPSLA WORKSH DO
   Gardenfors P., 2000, Conceptual Spaces
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Gulden J., 2015, CAISE FORUM
   Gulden J., 2016, ENASE C
   Gulden J, 2016, BUS PROC MAN WORKSH
   Hichert R., 2017, INT BUSINESS COMMUNI
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kirk A., 2012, Data Visualization: a successful design process
   Kleiner N, 2004, INNOVATIONS THROUGH INFORMATION TECHNOLOGY, VOLS 1 AND 2, P529
   Kurzhals K, 2016, INFORM VISUAL, V15, P340, DOI 10.1177/1473871615609787
   Pinggera J., 2014, THESIS
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Poole A, 2005, BCS CONF SERIES, P363, DOI 10.1007/1-84628-062-1_23
   Poole A., 2005, ENCY HUMAN COMPUTER
   Sharp H, 2011, INTERACTION DESIGN
   Shmueli G., 2017, Data mining for business analytics: concepts, techniques
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Spence R., 2007, INFORM VISUALIZATION
   Surma J., 2011, Business Intelligence: Making Decisions through Data Analytics
   Weber B., 2017, BPMDS 2017 RAD P CEU
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 44
TC 4
Z9 4
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2020
VL 19
IS 3
BP 531
EP 554
DI 10.1007/s10270-019-00742-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LG6OL
UT WOS:000528217800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arcega, L
   Font, J
   Haugen, O
   Cetina, C
AF Arcega, Lorena
   Font, Jaime
   Haugen, Oystein
   Cetina, Carlos
TI An approach for bug localization in models using two levels: model and
   metamodel
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Bug localization; Model-driven engineering; Reverse engineering
ID SOFTWARE; GUIDE; TESTS
AB Bug localization is a common task in software engineering, especially when maintaining and evolving software products. This paper introduces a bug localization approach that, in contrast to existing source code approaches, takes advantage of domain information found in the model and the metamodel. Throughout this paper, we present an approach for bug localization in models (BLiM2) that applies the source code ideas for bug localization (textual similarity to the bug description and the Defect Localization Principle) and takes advantage of the domain information from the model and the metamodel. We evaluated our approach in BSH, a real-world industrial case study in the induction hob domain measuring the results in terms of recall, precision, the combination of both the F-measure and the Matthews correlation coefficient. Our study shows that our BLiM2 approach, which combines information from the model and the metamodel for the textual similarity and differentiates between the timespan from the model and metamodel, provides the best results in this work. We also performed a statistical analysis to provide evidence of the significance of the results. The values obtained show that there exist significant differences in the performance of the best BLiM2 approach with the approach used by our industrial partner. Finally, the effect size statistics reveals that the best BLiM2 approach obtains better results in the 78% of the times in the worst case.
C1 [Arcega, Lorena; Font, Jaime; Cetina, Carlos] Univ San Jorge, Escuela Arquitectura & Tecnol, Zaragoza, Spain.
   [Arcega, Lorena; Font, Jaime] Univ Oslo, Dept Informat, Oslo, Norway.
   [Haugen, Oystein] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
C3 Universidad San Jorge; University of Oslo; Ostfold University College
RP Arcega, L (corresponding author), Univ San Jorge, Escuela Arquitectura & Tecnol, Zaragoza, Spain.; Arcega, L (corresponding author), Univ Oslo, Dept Informat, Oslo, Norway.
EM larcega@usj.es; jfont@usj.es; oystein.haugen@hiof.no; ccetina@usj.es
RI Cetina, Carlos/P-8682-2017; Arcega, Lorena/AAA-8929-2022; Font,
   Jaime/S-1243-2018
OI Cetina, Carlos/0000-0001-8542-5515; Arcega, Lorena/0000-0002-2464-8894;
   Font, Jaime/0000-0002-2980-5596
FU Ministry of Economy and Competitiveness (MINECO) through the
   SpanishNationalR+ D+ i Plan; ERDF funds under the project Model-Driven
   Variability Extraction for Software Product Line Adoption
   [TIN2015-64397-R]; ITEA3 [15010 REVaMP2]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the SpanishNationalR+ D+ i Plan and
   ERDF funds under the project Model-Driven Variability Extraction for
   Software Product Line Adoption (TIN2015-64397-R). We also thank ITEA3
   15010 REVaMP2 Project.
CR Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 2006, WATCHMAKER FRAMEWORK
   [Anonymous], 2010, TOOLK PROC NAT LANG
   [Anonymous], ENGLISH PORTER2 STEM
   [Anonymous], MINING UNSTRUCTURED
   Arcega L., 2017, MOD FDN APPL 13 EUR
   Arcega Lorena, 2017, P 26 INT C INF SYST
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Barros M. de Oliveira, 2011, RELATE DIA, V5
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B., 2011, J SOFTW MAINT EVOL R
   Font J., 2016, 15 INT C SOFTW REUS
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Font J, 2017, COMPUT LANG SYST STR, V48, P20, DOI 10.1016/j.cl.2016.08.003
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Hoang TV, 2018, IEEE T SOFTW ENG
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lehman M. M., 2001, TECH REP
   Liang DL, 2002, ACM T SOFTW ENG METH, V11, P347, DOI 10.1145/567793.567796
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Neumann Geoffrey, 2015, TRANSFORMED VARGHA D, P318, DOI 10.1007/978-3-319-22183-0_29
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rahman MM, 2018, PROC IEEE ACM INT C, P335, DOI 10.1145/3183440.3194997
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wille D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P44
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zhang XR, 2012, ASIA PAC SOFWR ENG, P766, DOI 10.1109/APSEC.2012.76
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 64
TC 12
Z9 13
U1 2
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2019
VL 18
IS 6
BP 3551
EP 3576
DI 10.1007/s10270-019-00727-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW9NO
UT WOS:000485320600013
DA 2024-07-18
ER

PT J
AU Dyck, J
   Giese, H
   Lambers, L
AF Dyck, Johannes
   Giese, Holger
   Lambers, Leen
TI Automatic verification of behavior preservation at the transformation
   level for relational model transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Relational model transformation; Formal verification of behavior
   preservation; Behavioral equivalence and refinement; Bisimulation and
   simulation; Graph transformation; Triple graph grammars; Invariant
   checking
ID ATTRIBUTED GRAPH TRANSFORMATION; SEMANTICS; TOOL
AB The correctness of model transformations is a crucial element for model-driven engineering of high-quality software. In particular, behavior preservation is an important correctness property avoiding the introduction of semantic errors during the model-driven engineering process. Behavior preservation verification techniques show some kind of behavioral equivalence or refinement between source and target model of the transformation. Automatic tool support is available for verifying behavior preservation at the instance level, i.e., for a given source and target model specified by the model transformation. However, until now there is no sound and automatic verification approach available at the transformation level, i.e., for all source and target models. In this article, we extend our results presented in earlier work (Giese and Lambers, in: Ehrig et al (eds) Graph transformations, Springer, Berlin, 2012) and outline a new transformation-level approach for the sound and automatic verification of behavior preservation captured by bisimulation resp.simulation for outplace model transformations specified by triple graph grammars and semantic definitions given by graph transformation rules. In particular, we first show how behavior preservation can be modeled in a symbolic manner at the transformation level and then describe that transformation-level verification of behavior preservation can be reduced to invariant checking of suitable conditions for graph transformations. We demonstrate that the resulting checking problem can be addressed by our own invariant checker for an example of a transformation between sequence charts and communicating automata.
C1 [Dyck, Johannes; Giese, Holger; Lambers, Leen] Univ Potsdam, Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
C3 University of Potsdam
RP Dyck, J (corresponding author), Univ Potsdam, Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
EM johannes.dyck@hpi.de; holger.giese@hpi.de; leen.lambers@hpi.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X
CR Ab Rahim L, 2010, LECT NOTES COMPUT SC, V6394, P166
   [Anonymous], 1995, COMMUNICATION CONCUR
   [Anonymous], 1993, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-57208-26
   Arendt T, 2014, LECT NOTES COMPUT SC, V8571, P97
   Barroca B, 2018, SOFTWARE QUAL J, V26, P417, DOI 10.1007/s11219-016-9352-4
   Becker Basil, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P123, DOI 10.1007/978-3-642-21732-6_9
   Bezivin J., 2003, 2 OOPSLA WORKSH GEN
   Bisztray D, 2009, LECT NOTES COMPUT SC, V5835, P308, DOI 10.1007/978-3-642-10248-6_13
   Blume Christoph, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P264, DOI 10.1007/978-3-642-33654-6_18
   Boneva I, 2012, TRCTIT1226 U TWENT
   Charpentier M, 2003, LECT NOTES COMPUT SC, V2805, P401
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   de Lara J, 2004, LECT NOTES ARTIF INT, V2980, P182
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Dyck J., 2015, CEUR WORKSHOP P, V1500, P36
   Dyck J., 2015, INDUCTIVE INVARIANT, P237
   Dyck J., 2017, 112 U POTSD H PLATTN
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2010, ELECT COMMUN EUR ASS, V26, DOI [/10.14279/tuj.eceasst.26.363, DOI 10.14279/TUJ.ECEASST.26.363]
   Ehrig H, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000357
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Engels G, 2008, UML ACTIVITIES TAAL, P94
   Ermel C, 2011, MODELING PLAUSIBILIT, P156
   Fischer T, 2000, STORY DIAGRAMS NEW G, P296
   Giese Holger, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P249, DOI 10.1007/978-3-642-33654-6_17
   Giese H., 2006, P 3 INT WORKSH MOD D, P78
   Giese H, 2014, SOFTW SYST MODEL, V13, P273, DOI 10.1007/s10270-012-0247-y
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Golas U, 2012, BRIDGING GAP FORMAL, P141
   Golas U, 2012, THEOR COMPUT SCI, V424, P46, DOI 10.1016/j.tcs.2012.01.032
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hausmann J.H., 2004, Software Systems Modeling, V3, P181, DOI DOI 10.1007/s10270-003-0045-7
   Hildebrandt S, 2012, ELECT COMMUN EASST, V54, P1
   Hülsbusch M, 2010, LECT NOTES COMPUT SC, V6396, P183, DOI 10.1007/978-3-642-16265-7_14
   Karsai G, 2003, J UNIVERS COMPUT SCI, V9, P1296
   Konig B, 2014, LECT NOTES COMPUTER, P467
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Lúcio L, 2010, LECT NOTES COMPUT SC, V6394, P136
   Narayanan A, 2008, P GT VMT, V10, P1
   Narayanan A, 2008, ELECTRON NOTES THEOR, V211, P191, DOI 10.1016/j.entcs.2008.04.041
   Nicolai C., 2016, THESIS
   Orejas F, 2012, FUND INFORM, V118, P65, DOI 10.3233/FI-2012-706
   Pennemann K. H., 2009, THESIS
   Rangel G, 2008, LECT NOTES COMPUT SC, V5214, P242, DOI 10.1007/978-3-540-87405-8_17
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Spinner S, 2006, DTIP 2006: SYMPOSIUM ON DESIGN,TEST, INTEGRATION AND PACKAGING OF MEMS/MOEMS 2006, P77
   Steenken D., 2015, THESIS
   Stevens P, 2013, SOFTW SYST MODEL, V12, P175, DOI 10.1007/s10270-011-0198-8
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1779, P481
   Tiso A., 2012, P AMT, P15
   VANGLABBEEK RJ, 1990, LECT NOTES COMPUT SC, V458, P278
   Varro Daniel., 2003, Critical Systems Development workshop in UML03: 6th International Conference on the Unified Modeling Language, LNCS, V2863, P63
NR 57
TC 1
Z9 1
U1 3
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2937
EP 2972
DI 10.1007/s10270-018-00706-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500007
OA hybrid
DA 2024-07-18
ER

PT J
AU Hinkel, G
AF Hinkel, Georg
TI Using structural decomposition and refinements for deep modeling of
   software architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Deep modeling; Structural decomposition; Refinements; NMeta; Modeling
   language
AB Traditional metamodeling in two levels gets to its limits when model elements of a domain should be described as instances of other model elements. For example in architecture description languages, components may be instances of their component types. Although workarounds to model such instance relations between model elements exist, they require many validation constraints and imply a cumbersome interface. To obtain more elegant metamodels, deep modeling seeks ways to represent non-transitive instantiation chains directly. However, existing concepts cannot be applied in some situations we refer as composite instantiation patterns. Further, these concepts make existing technologies for model transformation and analysis obsolete as these languages have to be adapted. In this paper, we present an approach to realize deep modeling through structural decomposition and refinements that can be implemented as a noninvasive extension to EMOF-like meta-metamodels. As a consequence, existing tools need not be adapted and composite instantiation patterns are fully supported. We validate our concept by creating a deep modeling architecture description language based on the Palladio Component Model and demonstrate its advantages by modeling a synthetic web application. We show that existing tools for incremental model analysis can be reused and manifest several orders of speedup for a synthetic example analysis.
C1 [Hinkel, Georg] FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
RP Hinkel, G (corresponding author), FZI Forschungszentrum Informat, Haid & Neu Str 10-14, D-76131 Karlsruhe, Germany.
EM hinkel@fzi.de
OI Hinkel, Georg/0000-0002-6462-5208
CR Akehurst D.H., 2008, ELECT COMMUNICATIONS, V9
   [Anonymous], THESIS
   [Anonymous], UN MOD LANG UML VERS
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C., 2000, INT WORKSH MOD ENG 1, P12
   Atkinson C, 2012, MULTILEVEL AWARE MOD, P208
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Atkinson C, 2012, P 2 INT MAST CLASS M
   ATKINSON R, 2001, MED RADIOL, P19
   Back R.-J., 1998, Refinement Calculus
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Carvalho VA, 2017, DATA KNOWL ENG, V109, P3, DOI 10.1016/j.datak.2017.03.002
   Costal D, 2011, LECT NOTES COMPUT SC, V6998, P189, DOI 10.1007/978-3-642-24606-7_15
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Gomez de Villar Fernando Macias, 2016, MULTI2016 P 3 INT WO, P66
   Hamann L, 2013, LECT NOTES COMPUT SC, V8107, P488, DOI 10.1007/978-3-642-41533-3_30
   Henderson-Sellers B, 2013, SEARCH LEVEL AGNOSTI, P240
   Henderson-Sellers B, 2005, J OBJECT TECHNOL, V4, P83, DOI 10.5381/jot.2005.4.7.a3
   Hinkel G., 2018, P 6 INT C MOD DRIV E
   Hinkel G., 2018, THEORY PRACTICE MODE
   Hinkel G., 2016, TECH REP
   Hinkel G., 2017, THESIS
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2016, LECT NOTES COMPUT SC, V9764, P217, DOI 10.1007/978-3-319-42061-5_14
   Igamberdiev M, 2018, SOFTW SYST MODEL, V17, P269, DOI 10.1007/s10270-016-0520-6
   Igamberdiev Muzaffar, 2016, CEUR WORKSHOP P, V1722, P45
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Jouault F., 2016, 16 INT WORKSH OCL TE
   Kainz G, 2010, LECT NOTES COMPUT SC, V6395, P391
   Kimura K., 2015, P 2 INT WORKSH MULT, P43
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   Maraee Azzam, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P302, DOI 10.1007/978-3-642-33666-9_20
   Maraee A., 2011, P 8 INT WORKSH MOD D
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Neumayr B, 2011, MODELING TECHNIQUES, P68
   NEUMAYR B, 2009, APCCM CRPIT, V96, P107
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Nieto P, 2011, DATA KNOWL ENG, V70, P182, DOI 10.1016/j.datak.2010.10.007
   Object Management Group (OMG), 2016, MOF 2 5 1 COR SPEC F
   Pons C, 2006, LECT NOTES COMPUT SC, V3831, P461
   Reyes C, 2014, ENGLISH LEARNER INSTRUCTION THROUGH COLLABORATION AND INQUIRY IN TEACHER EDUCATION, P43
   Rossini A, 2015, LECT NOTES COMPUT SC, V9153, P18, DOI 10.1007/978-3-319-21151-0_2
   Seifermann S., 2016, SOFTWARETECHNIK TREN, V36, P8
   Selway M, 2015, LECT NOTES COMPUT SC, V9381, P287, DOI 10.1007/978-3-319-25264-3_21
   Staron Miroslaw., 2006, ADOPTING MODEL DRIVE, P57
   Stier C., 2015, LNCS
   Stier C., 2017, SOFTWARE ENG 2017, P99
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
NR 55
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2787
EP 2819
DI 10.1007/s10270-018-0701-6
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500002
DA 2024-07-18
ER

PT J
AU Ma, T
   Ali, S
   Yue, T
AF Ma, Tao
   Ali, Shaukat
   Yue, Tao
TI Modeling foundations for executable model-based testing of self-healing
   cyber-physical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Self-healing; Uncertainty; Model execution;
   Model-based testing
ID RECOVERY
AB Self-healing cyber-physical systems (SH-CPSs) detect and recover from faults by themselves at runtime. Testing such systems is challenging due to the complex implementation of self-healing behaviors and their interaction with the physical environment, both of which are uncertain. To this end, we propose an executable model-based approach to test self-healing behaviors under environmental uncertainties. The approach consists of a Modeling Framework of SH-CPSs (MoSH) and an accompanying Test Model Executor (TM-Executor). MoSH provides a set of modeling constructs and a methodology to specify executable test models, which capture expected system behaviors and environmental uncertainties. TM-Executor executes the test models together with the systems under test, to dynamically test their self-healing behaviors under uncertainties. We demonstrated the successful application of MoSH to specify 11 self-healing behaviors and 17 uncertainties for three SH-CPSs. The time spent by TM-Executor to perform testing activities was in the order of milliseconds, though the time spent was strongly correlated with the complexity of test models.
C1 [Ma, Tao; Ali, Shaukat; Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Ma, Tao; Yue, Tao] Univ Oslo, Oslo, Norway.
C3 University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Oslo, Norway.; Yue, T (corresponding author), Univ Oslo, Oslo, Norway.
EM taoma@simula.no; shaukat@simula.no; taoma@simula.no
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577
FU MBT4CPS - Research Council of Norway (RCN) [240013]; Zen-Configurator
   project of RCN [240024]
FX This work was supported by the MBT4CPS (Project# 240013) project funded
   by the Research Council of Norway (RCN). Tao Yue and Shaukat are also
   supported by the Zen-Configurator project (Project# 240024) of RCN.
CR Ali S, 2017, ADV COMPUT, P23
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 2012, Possibility theory
   [Anonymous], 2004, Mastering Simulink
   [Anonymous], 2011, Introduction to Embedded Systems-A Cyber-Physical Systems Approach
   [Anonymous], 2017, PREC SEM UML STAT MA
   [Anonymous], 2015, SIGSOFT SOFTW ENG NO
   [Anonymous], 2008, 15 WORLD C INT TRANS
   [Anonymous], CONCR SYNT UML ACT L
   [Anonymous], 2007, PRINCIPLES SOFT COMP, DOI DOI 10.1007/978-3-540-35781-0
   [Anonymous], ROY SOC CH
   [Anonymous], 2006, 2006 IEEE C COMP AID
   [Anonymous], 1993, FUZZY LOGIC
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Black DC, 2011, SYSTEMC GROUND
   Blanke M, 2006, Diagnosis and fault-tolerant control, V2
   Blockwitz T., 2012, 9 INT MOD C, P173, DOI DOI 10.3384/ECP12076173
   Broman D., 2013, P 11 ACM INT C EMB S, P2
   Carter K., 2007, EXECUTABLE UML XUML
   Cellier F. E., 2006, Continuous System Simulation
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Cioara T., 2010, INT C INFORM INTEGRA, P859
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Dunrova E., 2008, FAULT TOLERANT DESIG
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Fredericks EM, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P156, DOI 10.1109/SEAMS.2015.15
   Fredericks EM, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P169, DOI 10.1109/SEAMS.2013.6595504
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Fritzson P., 2010, OVERVIEW SYSML MODEL
   Gama K, 2014, APPL COMPUT REV, V14, P44, DOI 10.1145/2670967.2670971
   Garlan David, 2002, P 1 WORKSH SELFH HEA, P27, DOI [10.1145/582128.582134, DOI 10.1145/582128.582134]
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Giachetti G., 2009, INT J COMPUTER SCI A, V6, P145
   Hänsel J, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P134, DOI 10.1109/SASOW.2015.27
   Huebscher MC, 2004, 15TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P694, DOI 10.1109/DEXA.2004.1333555
   Kephart JO, 2004, FIFTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2004.1309145
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   Koutsoumpas V, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P26, DOI 10.1109/SEsCPS.2015.13
   Lahami M, 2016, SCI COMPUT PROGRAM, V122, P1, DOI 10.1016/j.scico.2016.02.002
   Lanusse Agnes., 2009, Proc. of the Fifth BIBLIOGRAPHY 84 European Conference on Model-Driven Architecture Foundations and Applications ECMDA-FA 2009, P1
   Ma T., 2016, MODELING HEALING BEH
   Ma T, 2017, LECT NOTES COMPUT SC, V10533, P3, DOI 10.1007/978-3-319-67549-7_1
   Mayerhofer T, 2012, PROC INT CONF SOFTW, P1579, DOI 10.1109/ICSE.2012.6227032
   Minnerup P, 2016, IFAC PAPERSONLINE, V49, P38, DOI 10.1016/j.ifacol.2016.07.611
   Morandini Mirko, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P485, DOI 10.1109/ASE.2008.83
   NELSON VP, 1990, COMPUTER, V23, P19, DOI 10.1109/2.56849
   NSF, 2014, 14542 NSF
   OMG, 2016, SEM FDN SUBS EX UML
   OMG, 2011, PROF MOD AN REAL TIM
   OMG, 2008, PROF MOD QUAL SERV F
   OMG, 2015, UN MOD LANG V2 5 FOR
   OMG, 2017, UML TEST PROF PTC 17
   Park J, 2015, CLUSTER COMPUT, V18, P587, DOI 10.1007/s10586-014-0414-8
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Ramirez Andres J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P568, DOI 10.1109/ASE.2011.6100127
   Ramos AL, 2012, IEEE T SYST MAN CY C, V42, P101, DOI 10.1109/TSMCC.2011.2106495
   Robert S, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P155, DOI 10.1109/SEAA.2009.81
   Rodosek GD, 2009, SELF HEALING SYSTEMS
   Ryu BH, 2011, COMM COM INF SC, V150, P66
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Shi JC, 2011, INT GEOSCI REMOTE SE, P1, DOI 10.1109/IGARSS.2011.6048882
   Simmonds J, 2010, LECT NOTES COMPUT SC, V6400, P250
   Siripongwutikorn Peerapon, 2003, IEEE Communications Surveys & Tutorials, V5, P14, DOI 10.1109/COMST.2003.5342227
   Spinka O, 2011, IEEE T IND ELECTRON, V58, P880, DOI 10.1109/TIE.2009.2030827
   Sridhar S, 2012, P IEEE, V100, P210, DOI 10.1109/JPROC.2011.2165269
   Staszesky D. M., 2005, IEEE Power & Energy Magazine, V3, P56, DOI 10.1109/MPAE.2005.1507027
   Tatibouet J., 2016, ECLIPSECON
   Torres-Pomales Wilfredo., 2000, SOFTWARE FAULT TOLER
   Veanes M, 2006, LECT NOTES COMPUT SC, V4262, P240
   Venkatsubramanian V, 2003, COMPUT CHEM ENG, V27, P293, DOI 10.1016/S0098-1354(02)00160-6
   Vromant Pieter., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. SEAMS 2011, P202, DOI DOI 10.1145/1988008.1988037
   Walker W.E., 2013, ENCY OPERATIONS RES, DOI [10.1007/978-1-4419-, DOI 10.1007/978-1-4419-1153-7_1140, 10.1007/978-1-4419-1153-7_1140]
   White SR, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P2, DOI 10.1109/ICAC.2004.1301340
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
   Yue T, 2016, SOFTW SYST MODEL, V15, P757, DOI 10.1007/s10270-014-0438-9
   Zhang M., 2015, 12 EUR C MOD FDN APP
   Zhang M., 2017, 201703 SIM RES LAB
   Zhang M., 2017, SOFTW SYST MODEL
   Zhang Man, 2017, 201613 SIM RES LAB, P1
   Zheng X., 2014, TRARISE2014001 CTR A, V1485
NR 83
TC 9
Z9 11
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2019
VL 18
IS 5
BP 2843
EP 2873
DI 10.1007/s10270-018-00703-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OX
UT WOS:000475600500004
DA 2024-07-18
ER

PT J
AU Kövesdán, G
   Lengyel, L
AF Kovesdan, Gabor
   Lengyel, Laszlo
TI Meta3: a code generator framework for domain-specific languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain-specific modeling; Code generation; Architecture
AB In software development, domain-specific languages (DSLs) are often applied for specific or repetitive tasks. For executable DSLs, a model interpreter can be developed to run DSL programs. Nevertheless, it is more widespread to generate code in a general-purpose programming language. A properly chosen DSL expresses the original problem more naturally for both domain and information technology experts, and thus, this approach makes the whole development process, especially requirements engineering and requirements analysis, more efficient and less prone to human errors. There are code generator frameworks and so-called language workbenches available that make the development of code generators for DSLs easier. In this paper, we report on our own code generator framework, called Meta3. Meta3 is based on our code generator development experience. We believe that this experience report will be useful for developers of code generators and language workbenches interested in building more flexible and robust code generators as well as better tools that support the construction of the latter.
C1 [Kovesdan, Gabor; Lengyel, Laszlo] Budapest Univ Technol & Econ, Dept Automat & Appl Informat, Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Kövesdán, G (corresponding author), Budapest Univ Technol & Econ, Dept Automat & Appl Informat, Budapest, Hungary.
EM gabor.kovesdan@aut.bme.hu; lengyel@aut.bme.hu
FU National Research, Development and Innovation Fund of Hungary under the
   FIEK_16 funding scheme [FIEK_16-1-2016-0007]; CONCERTO EU-Artemis
   project - ARTEMIS Joint Undertaking [ART-2012-333053]; Hungarian
   National Research, Development and Innovation Fund; Janos Bolyai
   Research Scholarship of the Hungarian Academy of Sciences; New National
   Excellence Program of the Ministry of Human Capacities [UNKP-16-4-III]
FX This work was performed in the frame of FIEK_16-1-2016-0007 project,
   implemented with the support provided from the National Research,
   Development and Innovation Fund of Hungary, financed under the FIEK_16
   funding scheme. This work was partially supported by the CONCERTO
   (ART-2012-333053) EU-Artemis project, co-financed by the ARTEMIS Joint
   Undertaking and the Hungarian National Research, Development and
   Innovation Fund. This paper was supported by the Janos Bolyai Research
   Scholarship of the Hungarian Academy of Sciences and supported by the
   UNKP-16-4-III. New National Excellence Program of the Ministry of Human
   Capacities.
CR [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Baracchi L, 2016, LECT NOTES COMPUT SC, V9695, P113, DOI 10.1007/978-3-319-39083-3_8
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Edwards L, 2012, PME CONFERENCE PROCE, P161
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Fowler M., 2010, Domain-specific languages
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   Jorges S., 2013, Construction i Evolution of Code Generators, A Model-Driven i Service-Oriented Approach
   Kelly S., 2008, Domain-Specific Modeling
   Kovesdan G, 2014, XM 2014 EXTR MOD WOR
   Kovesdan G, 2014, CLOUDMDE WORKSH EXPL
   Kuhn A, 2012, LECT NOTES COMPUTER, V7590
   Naujokat S, 2015, INT J SOFTW TOOLS TE
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Reiter T, 2006, P 8 INT C ENT INF SY
   Schmitt C, P INT C COMP SCI ITS
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   THOMAS D, 2003, J OBJECT TECHNOLOGY, V2, P7, DOI DOI 10.5381/JOT.2003.2.1.C1
   Visser E, DECLARE YOUR OWN LAN
   Voelter M., 2001, WORKSH GEN PROGR OOP
NR 22
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2421
EP 2439
DI 10.1007/s10270-018-0673-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900003
DA 2024-07-18
ER

PT J
AU Aouadhi, MA
   Delahaye, B
   Lanoix, A
AF Aouadhi, Mohamed Amine
   Delahaye, Benoit
   Lanoix, Arnaud
TI Introducing probabilistic reasoning within Event-B
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Event-B; Probabilistic systems; Markov chains
ID REFINEMENT CALCULUS
AB Event-B is a proof-based formal method used for discrete systems modelling. Several works have previously focused on the extension of Event-B for the description of probabilistic systems. In this paper, we propose an extension of Event-B that allows designing fully probabilistic systems as well as systems containing both probabilistic and non-deterministic choices. Compared to existing approaches which only focus on probabilistic assignments, our approach allows expressing probabilistic choices in all places where non-deterministic choices originally appear in a standard Event-B model: in the choice between enabled events, event parameter values and in probabilistic assignments. Furthermore, we introduce novel and adapted proof obligations for the consistency of such systems and introduce two key aspects to incremental design: probabilisation of existing events and refinement through the addition of new probabilistic events. In particular, we provide proof obligations for the almost-certain convergence of a set of new events, which is a required property in order to prove standard refinement in this context. Finally, we propose a fully detailed case study, which we use throughout the paper to illustrate our new constructions.
C1 [Aouadhi, Mohamed Amine; Delahaye, Benoit; Lanoix, Arnaud] Univ Nantes, CNRS, UMR 6004, LS2N, Nantes, France.
C3 Nantes Universite; Centre National de la Recherche Scientifique (CNRS)
RP Delahaye, B (corresponding author), Univ Nantes, CNRS, UMR 6004, LS2N, Nantes, France.
EM benoit.delahaye@univ-nantes.fr
OI Delahaye, Benoit/0000-0002-9104-4361
CR Abdulla PA, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(4:7)2007
   Abrial J.-R., 2003, Formal Aspects of Computing, V14, P215, DOI 10.1007/s001650300002
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], 2014, Markov decision processes: discrete stochastic dynamic programming
   [Anonymous], 2010, THESIS
   [Anonymous], MODERN CRYPTOGRAPHY
   Aouadhi M.A., 2017, P 32 ANN ACM S APPL
   Audebaud P, 2009, SCI COMPUT PROGRAM, V74, P568, DOI 10.1016/j.scico.2007.09.002
   BACK RJR, 1990, LECT NOTES COMPUT SC, V430, P67
   BACK RJR, 1990, LECT NOTES COMPUT SC, V430, P42
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barthe G, 2014, ACM SIGPLAN NOTICES, V49, P193, DOI 10.1145/2535838.2535847
   Bert D, 2000, LECT NOTES COMPUT SC, V1945, P235
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Butler Michael, 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P67, DOI 10.1007/978-3-642-39698-4_5
   Chu W. W., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P272, DOI 10.1109/REAL.1988.51122
   de Roever Willem-Paul, 1998, Data Refinement Model-Oriented Proof methods and their Comparison
   Dehnert C, 2014, ABSTRACTION PROBABIL, P87
   Haghighi H, 2012, COMPUT SCI ENG, V2, P24, DOI 10.5923/j.computer.20120203.04
   Hallerstede S, 2007, LECT NOTES COMPUT SC, V4591, P293
   HE J, 1986, LECT NOTES COMPUT SC, V213, P187
   Hoang T.S., 2005, THESIS
   Hurd J., 2003, THESIS
   Hurd J, 2005, ELECTRON NOTES THEOR, V112, P95, DOI 10.1016/j.entcs.2004.01.021
   Jonsson B., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P266, DOI 10.1109/LICS.1991.151651
   Katoen J-P, 2007, ABSTRACTION PROBABIL, P1
   McIver Annabelle., 2006, Abstraction, refinement and proof for probabilistic systems
   Morgan C, 2005, LECT NOTES COMPUT SC, V3455, P162
   Raghavan P., 2010, RANDOMIZED ALGORITHM
   Sere K., 1996, P 8 NORD WORKSH PROG, P373
   Stoelinga Marielle., 2002, Bulletin of the EATCS, V78, P2
   Tarasyuk A., 2009, NODES 09, P11
   TARASYUK A, 1928, COMPUTER, V27, P53, DOI DOI 10.1007/S00165-014-0305-Z
   Tarasyuk A, 2010, LECT NOTES COMPUT SC, V6396, P275, DOI 10.1007/978-3-642-16265-7_20
   Hoang TS, 2014, SCI COMPUT PROGRAM, V81, P108, DOI 10.1016/j.scico.2013.08.006
   Trivedi KS, 2003, P IEEE, V91, P1023, DOI 10.1109/JPROC.2003.814619
   Villemeur A., 1992, RELIABILITY AVAILABI
NR 38
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1953
EP 1984
DI 10.1007/s10270-017-0626-5
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sandkuhl, K
   Seigerroth, U
AF Sandkuhl, Kurt
   Seigerroth, Ulf
TI Method engineering in information systems analysis and design: a
   balanced scorecard approach for method improvement
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Method improvement; Balanced scorecard; Method engineering; Information
   demand analysis method
ID PERFORMANCE; QUALITY
AB Modeling methods have been proven to provide beneficial instrumental support for different modeling tasks during information system analysis and design. However, methods are a complex phenomenon that include constructs such as procedural guidelines, concepts to focus on, visual representations and cooperation principles. In general, method development is an expensive task that usually involves many stakeholders and results in various method iterations. Since methods and method development are complex in nature, there is a need for a well-structured and resource-efficient approach for method improvement. This paper aims to contribute to the field of method improvement by proposing a balanced scorecard-based approach and by reporting on experiences from developing and using it in the context of a method for information demand analysis. The main contributions of the paper are as follows: (1) It provides a description of the process for developing a scorecard for method improvement; (2) it shows how the scorecard as such can be used as a tool for improving a specific method; and (3) it discusses experiences from applying the scorecard in industrial settings.
C1 [Sandkuhl, Kurt] Univ Rostock, Albert Einstein Str 22, D-18059 Rostock, Germany.
   [Sandkuhl, Kurt; Seigerroth, Ulf] Jonkoping Univ, Sch Engn, Box 1026, S-55111 Jonkoping, Sweden.
C3 University of Rostock; Jonkoping University
RP Seigerroth, U (corresponding author), Jonkoping Univ, Sch Engn, Box 1026, S-55111 Jonkoping, Sweden.
EM kurt.sandkuhl@uni-rostock.de; ulf.seigerroth@ju.se
OI Sandkuhl, Kurt/0000-0002-7431-8412
CR Aalst WM, 2016, BUS INF SYST ENG
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 1997, THESIS
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2012, Model-based development and evolution of information systems a quality approach
   [Anonymous], 2016, Software testing and continuous quality improvement
   Arthur J. D., 1992, Journal of Software Maintenance: Research and Practice, V4, P129, DOI 10.1002/smr.4360040303
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Benkenstein M, 2016, LECT NOTES BUS INF P, V267, P299, DOI 10.1007/978-3-319-48393-1_21
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Chang JCJ, 2005, J MANAGE INFORM SYST, V22, P85, DOI 10.1080/07421222.2003.11045833
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Deming W. E., 1986, OUT CRISIS
   Goldkuhl G., 1998, IEE Proceedings-Software, V145, P113, DOI 10.1049/ip-sen:19982197
   Goldkuhl G., 2005, 3 INT C ACT LANG ORG, P148
   Goldkuhl G, 1999, CMTO RES PAPERS, V1999:03
   Gregor S, 2006, J STRATEGIC INF SYST, V15, P249, DOI 10.1016/j.jsis.2006.04.001
   Hammar K, 2013, ONTOLOGY DESIGN PATT
   Henderson-Sellers B., 2014, Situational Method Engineering
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   International Organization for Standardization, 2001, INT STAND ISO GUID 7
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Keyes J., 2005, IMPLEMENTING IT BALA
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   LANGER I, 1973, Z EXP ANGEW PSYCHOL, V20, P269
   Lincoln YS, 1985, NATURALISTIC INQUIR, V75
   Lind M., 2008, IN M AIS SPEC INT GR
   Lundqvist M., 2008, INT J COMMUNICATIONS
   Lundqvist M, 2008, INFOFLOW APPL CASE E
   Lundqvist M, 2011, INT J INF SYST MODEL, V2, P75, DOI 10.4018/jismd.2011070104
   Margner V, 2014, HDB DOCUMENT IMAGE P, P1011
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Moody DL, 1994, LECT NOTES COMPUT SC, V881, P94
   Mooney JG, 1996, DATA BASE ADV INF SY, V27, P68
   Parker M, 1998, INFORM EC
   Parmenter D., 2015, KEY PERFORMANCE INDI
   Ralytlé J, 2006, LECT NOTES COMPUT SC, V4215, P339
   Sandkuhl K., 2010, EVALUATION FRAMEWORK
   Sandkuhl K, 2011, P PATTERNS 2011 3 IN, P1
   Sandkuhl K., 2008, ECIS 2008 P, P1752
   SANDKUHL K, 2001, J CONTROL, V39, P259
   Sandkuhl K., 2009, INFOFLOW DELIVERABLE
   Sandkuhl K, 2017, LECT NOTES BUS INF P, V287, P204, DOI 10.1007/978-3-319-59466-8_13
   Seigerroth U., 2011, International Journal of IT/Business Alignment and Governance (IJITBAG), V1, P16, DOI [DOI 10.4018/JITBAG.2011010102, DOI 10.4018/jitbag.2011010102]
   Sein MK, 2011, MIS QUART, V35, P37
   Siau K, 2011, INFORM SYST J, V21, P249, DOI 10.1111/j.1365-2575.2007.00255.x
   Sivaji A., 2012, 2012 Southeast Asian Network of Ergonomics Societies Conference (SEANES), P1, DOI DOI 10.1109/SEANES.2012.6299576
   Staron M, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P191, DOI 10.1109/IWSM-Mensura.2013.35
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Wieringa R, 2012, LNCS
NR 51
TC 11
Z9 12
U1 1
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1833
EP 1857
DI 10.1007/s10270-018-0692-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HZ6XP
UT WOS:000468996100016
OA hybrid
DA 2024-07-18
ER

PT J
AU Schönig, S
   Cabanillas, C
   Di Ciccio, C
   Jablonski, S
   Mendling, J
AF Schoenig, Stefan
   Cabanillas, Cristina
   Di Ciccio, Claudio
   Jablonski, Stefan
   Mendling, Jan
TI Mining team compositions for collaborative work in business processes
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Declarative process mining; Event log
   analysis; Resource perspective; Teamwork
ID MODEL
AB Process mining aims at discovering processes by extracting knowledge about their different perspectives from event logs. The resource perspective (or organisational perspective) deals, among others, with the assignment of resources to process activities. Mining in relation to this perspective aims to extract rules on resource assignments for the process activities. Prior research in this area is limited by the assumption that only one resource is responsible for each process activity, and hence, collaborative activities are disregarded. In this paper, we leverage this assumption by developing a process mining approach that is able to discover team compositions for collaborative process activities from event logs. We evaluate our novel mining approach in terms of computational performance and practical applicability.
C1 [Schoenig, Stefan; Cabanillas, Cristina; Mendling, Jan] Vienna Univ Econ & Business, Inst Informat Business, Vienna, Austria.
   [Di Ciccio, Claudio] Vienna Univ Econ & Business, Vienna, Austria.
   [Jablonski, Stefan] Univ Bayreuth, Comp Sci, Inst Comp Sci, Bayreuth, Germany.
C3 Vienna University of Economics & Business; Vienna University of
   Economics & Business; University of Bayreuth
RP Schönig, S (corresponding author), Vienna Univ Econ & Business, Inst Informat Business, Vienna, Austria.
EM stefan.schoenig@wu.ac.at; cristina.cabanillas@wu.ac.at;
   claudio.di.ciccio@wu.ac.at; stefan.jablonski@uni-bayreuth.de;
   jan.mendling@wu.ac.at
RI Di Ciccio, Claudio/H-8898-2018; Cabanillas, Cristina/V-4178-2017
OI Di Ciccio, Claudio/0000-0001-5570-0475; Cabanillas,
   Cristina/0000-0001-9182-8847; Schonig, Stefan/0000-0002-7666-4482
CR Adamo J., DATA MINING ASS RULE
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2010, P 19 ACM INT C INFOR, DOI DOI 10.1145/1871437.1871515
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2015, ENTERPRISE BUSINESS
   Baumgrass und A., 2013, Information Security Technical Report, Bd, V17, Nr, P148, DOI DOI 10.1016/j.istr.2013.03.003
   Baykasoglu A, 2007, CYBERNET SYST, V38, P155, DOI 10.1080/01969720601139041
   Bose R. P. Jagadeesh Chandra, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P97, DOI 10.1007/978-3-642-40176-3_9
   Bussler Christoph., 1998, Organisationsverwaltung in Workflow-Management-Systemen
   Cabanillas C., 2015, Proceedings of the 2015 international conference on software and system process, P42, DOI DOI 10.1145/2785592.2785613
   Datta A., 2011, Proceedings of the 20th international conference companion on World wide web, WWW '11, P201
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Dorn C, 2011, DATA KNOWL ENG, V70, P866, DOI 10.1016/j.datak.2011.06.004
   Dorn C, 2010, LECT NOTES COMPUT SC, V6426, P472
   Dustdar S, 2004, DISTRIB PARALLEL DAT, V15, P45, DOI 10.1023/B:DAPD.0000009431.20250.56
   Ferber J, 2004, LECT NOTES COMPUT SC, V2935, P214
   Fitzpatrick EL, 2005, COMPUT IND ENG, V48, P593, DOI 10.1016/j.cie.2004.12.014
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Guimaraes N, 1998, NATO ADV SCI I F-COM, V164, P222
   Hanachi C, 2012, LECT NOTES BUS INF P, V123, P63
   Horling B, 2004, KNOWL ENG REV, V19, P281, DOI 10.1017/S0269888905000317
   Jin T, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P670, DOI 10.1109/GCC.2007.93
   Kitano H., 1997, Proceedings of the First International Conference on Autonomous Agents, P340, DOI 10.1145/267658.267738
   Lappas T, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P467
   Leitner M., 2012, BUS PROC MAN WORKSH, P719
   Ly LT, 2006, LECT NOTES COMPUT SC, V3812, P177
   Maggi Fabrizio M., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P270, DOI 10.1007/978-3-642-31095-9_18
   Meyer A., 2009, THESIS HASSO PLATTNE
   Nakatumba J, 2010, LECT NOTES BUS INF P, V43, P69
   Nurcan S, 1998, INFORM SOFTWARE TECH, V40, P143, DOI 10.1016/S0950-5849(98)00048-2
   OMG, 2011, OMG BPMN 2 0 REC
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Salas E, 2007, NEBR SYM MOTIV, V52, P185
   Singh PV, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824763
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   Tambe M, 1999, ARTIF INTELL, V110, P215, DOI 10.1016/S0004-3702(99)00022-3
   Tambe M, 1996, TEAMWORK REAL WORLD
   Van Der Aalst W. M. P., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P549, DOI 10.1007/s10606-005-9005-9
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 2001, DATA KNOWL ENG, V38, P335, DOI 10.1016/S0169-023X(01)00034-9
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   Yang DN, 2011, PROC VLDB ENDOW, V4, P397, DOI 10.14778/1978665.1978671
   Zeising M, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P94, DOI 10.4108/icst.collaboratecom.2014.257269
   Zhao WD, 2014, ADV INTELL SYST COMP, V277, P701, DOI 10.1007/978-3-642-54924-3_66
NR 46
TC 17
Z9 17
U1 1
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 675
EP 693
DI 10.1007/s10270-016-0567-4
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300016
DA 2024-07-18
ER

PT J
AU Seiger, R
   Huber, S
   Schlegel, T
AF Seiger, Ronny
   Huber, Steffen
   Schlegel, Thomas
TI Toward an execution system for self-healing workflows in cyber-physical
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process execution; Cyber-physical systems; Workflow system; Internet of
   things; System architecture; Middleware; Event processing
ID DYNAMIC SERVICE COMPOSITION; BUSINESS PROCESSES; INTERNET; YAWL
AB Cyber-physical systems (CPS) represent a new class of information system that also takes real-world data and effects into account. Software-controlled sensors, actuators and smart objects enable a close coupling of the cyber and physical worlds. Introducing processes into CPS to automate repetitive tasks promises advantages regarding resource utilization and flexibility of control systems for smart spaces. However, process execution systems face new challenges when being adapted for process execution in CPS: the automated processing of sensor events and data, the dynamic invocation of services, the integration of human interaction, and the synchronization of the cyber and physical worlds. Current workflow engines fulfill these requirements only to a certain degree. In this work, we present PROtEUS-an integrated system for process execution in CPS. PROtEUS integrates components for event processing, data routing, dynamic service selection and human interaction on the modeling and execution level. It is the basis for executing self-healing model-based workflows in CPS. We demonstrate the applicability of PROtEUS within two case studies from the Smart Home domain and discuss its feasibility for introducing workflows into cyber-physical systems.
C1 [Seiger, Ronny] Tech Univ Dresden, Software Technol Grp, Dresden, Germany.
   [Huber, Steffen] Tech Univ Dresden, Software Engn Ubiquitous Syst Grp, Dresden, Germany.
   [Schlegel, Thomas] Karlsruhe Univ Appl Sci, Inst Ubiquitous Mobil Syst, Karlsruhe, Germany.
C3 Technische Universitat Dresden; Technische Universitat Dresden;
   Karlsruhe University of Applied Sciences
RP Seiger, R (corresponding author), Tech Univ Dresden, Software Technol Grp, Dresden, Germany.
EM ronny.seiger@tu-dresden.de; steffen.huber@tu-dresden.de;
   thomas.schlegel@hs-karlsruhe.de
RI Seiger, Ronny/AAF-4765-2019; Schlegel, Thomas/O-2910-2013
OI Seiger, Ronny/0000-0003-1675-2592; Schlegel, Thomas/0000-0003-3339-3720;
   Huber, Steffen/0000-0001-8904-2634
CR Agrawal A., 2007, WEB SERVICES HUMAN T
   Alliance O.S.G., 2003, OSGI SERVICE PLATFOR
   [Anonymous], PRINCIPLES KNOWLEDGE
   Baheti R., 2011, Impact Control Technol, V12, P161, DOI DOI 10.1145/1795194.1795205
   Barros A, 2007, LECT NOTES COMPUT SC, V4439, P29
   Baumgardt A., 2015, P 1 IEEE C NETW SOFT, P1
   Baumgrass A., 2015, CEUR WORKSH P
   Bellur U, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P289, DOI 10.1109/ITCC.2005.280
   Bernhardt T., 2007, ESPER EVENT STREAM P
   Brand C., 2011, Eclipse Magazine
   Broy Manfred, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P1, DOI 10.1007/978-3-642-34059-8_1
   Bulow S, 2014, P INT C BUS PROC MAN, P277, DOI DOI 10.1007/978-3-319-06257-0_22
   Burkhart T., 2010, Proceedings of MultikonferenzWirtschaftsinformatik (MKWI-2010), P1217
   Cao JW, 2003, CCGRID 2003: 3RD IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, PROCEEDINGS, P198, DOI 10.1109/CCGRID.2003.1199369
   Chakraborty D, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P87, DOI 10.1109/PERCOM.2004.1276848
   Dadam P, 2009, COMPUT SCI-RES DEV, V23, P81, DOI 10.1007/s00450-009-0068-6
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   Dayarathna Miyuru, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P225, DOI 10.1007/978-3-642-40196-1_19
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Domingos D, 2014, J UNIVERS COMPUT SCI, V20, P1109
   Fette I., 2011, WEBSOCKET PROTOCOL
   Giner P, 2011, PERS UBIQUIT COMPUT, V15, P399, DOI 10.1007/s00779-010-0360-2
   Grefen P, 1998, DATA KNOWL ENG, V27, P31, DOI 10.1016/S0169-023X(97)00057-8
   Hermosillo Gabriel, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P466, DOI 10.1109/SCC.2010.48
   Huber S, 2016, IEEE INT C SEMANT CO, P213, DOI 10.1109/ICSC.2016.75
   Kalasapur S, 2007, IEEE T PARALL DISTR, V18, P907, DOI 10.1109/TPDS.2007.1039
   KEPHART J, 2003, ARCHITECTURAL BLUEPR
   Kloppmann M., 2005, JOINT WHITE PAPER IB, V183, P184
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Luckham David., 2002, THE POWER OF EVENTS, V204
   Mangler J, 2014, BPM DEMO SESSIONS CE, V1295, pp51
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Montagnat J., 2006, WORKSH WORKFL SUPP L, P1, DOI [10.1109/WORKS.2006.5282350, DOI 10.1109/WORKS.2006.5282350]
   Montagut F., 2005, 2005 International Conference on Collaborative Computing: Networking, Applications and Worksharing and Workshops (IEEE Cat. No. 05EX1251C)
   Montagut F, 2008, IEEE T SYST MAN CY C, V38, P319, DOI 10.1109/TSMCC.2008.919184
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Poovendran R, 2010, P IEEE, V98, P1363, DOI 10.1109/JPROC.2010.2050377
   Qian ZZ, 2012, J INTELL MANUF, V23, P1271, DOI 10.1007/s10845-010-0410-7
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Reijers Hajo A., 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P307, DOI 10.1007/978-3-642-40176-3_26
   Richly S, 2010, 2010 8TH WORLD CONGRESS ON INTELLIGENT CONTROL AND AUTOMATION (WCICA), P1680, DOI 10.1109/WCICA.2010.5554771
   Scheer A.-W., 2000, ARIS ARCHITECTURE RE
   Schiefer J., 2007, Proceedings of the 2007 inaugural international Conference on Distributed Event-Based Systems (Toronto, Ontario, Canada, June 20 - 22, V233, P198
   Schlordt T, 2012, J CERAM SCI TECHNOL, V3, P81, DOI 10.4416/JCST2012-00003
   Seiger R, 2015, J COMPUT SCI-NETH, V10, P137, DOI 10.1016/j.jocs.2014.07.001
   Seiger R, 2014, LECT NOTES COMPUT SC, V8522, P347, DOI 10.1007/978-3-319-07863-2_34
   Seiger R, 2014, INT CONF PERVAS COMP, P220, DOI 10.1109/PerComW.2014.6815205
   Seiger Ronny., 2015, Enterprise, Business-Process and Information Systems Modeling, volume 214 of Lecture Notes in Business Information Processing, V214, P265, DOI DOI 10.1007/978-3-319-19237-6_17
   Shen J, 2007, ADV ENG INFORM, V21, P221, DOI 10.1016/j.aei.2006.05.001
   Shi JC, 2011, INT GEOSCI REMOTE SE, P1, DOI 10.1109/IGARSS.2011.6048882
   Smirek L., 2014, IARIA Conference, Nice, France, P29
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Sungur C. Timurhan, 2013, 2013 IEEE 15th Conference on Business Informatics (CBI), P109, DOI 10.1109/CBI.2013.24
   Talcott Carolyn, 2008, Software-Intensive Systems and New Computing Paradigms, P101
   Tuysuz Gokhan, 2013, 2013 Seventh International Conference on Next-Generation Mobile Apps, Services and Technologies (NGMAST), P13, DOI 10.1109/NGMAST.2013.12
   Van der Aalst W., 1996, Proceedings of the International Working Conference on Information and Process Integration in Enterprises (IPIC96), P179
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 2004, BIOMED SCI INSTRUM, V3084, P142
   Weidlich M, 2014, IEEE T KNOWL DATA EN, V26, P2759, DOI 10.1109/TKDE.2014.2302306
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Wieland M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS), P32, DOI 10.1109/PERCOMW.2015.7133989
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Wombacher Andreas, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P329, DOI 10.1007/978-3-642-23059-2_25
   Wombacher Andreas, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P226, DOI 10.1109/SCC.2011.24
NR 65
TC 37
Z9 40
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 551
EP 572
DI 10.1007/s10270-016-0551-z
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD5LK
UT WOS:000430548300011
DA 2024-07-18
ER

PT J
AU Igamberdiev, M
   Grossmann, G
   Selway, M
   Stumptner, M
AF Igamberdiev, Muzaffar
   Grossmann, Georg
   Selway, Matt
   Stumptner, Markus
TI An integrated multi-level modeling approach for industrial-scale data
   interoperability
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level modeling; Interoperability; Multi-level model reasoning;
   F-Logic; Multi-level model querying; Multi-level model verification
ID LANGUAGE
AB Multi-level modeling is currently regaining attention in the database and software engineering community with different emerging proposals and implementations. One driver behind this trend is the need to reduce model complexity, a crucial aspect in a time of analytics in Big Data that deal with complex heterogeneous data structures. So far no standard exists for multi-level modeling. Therefore, different formalization approaches have been proposed to address multi-level modeling and verification in different frameworks and tools. In this article, we present an approach that integrates the formalization, implementation, querying, and verification of multi-level models. The approach has been evaluated in an open-source F-Logic implementation and applied in a large-scale data interoperability project in the oil and gas industry. The outcomes show that the framework is adaptable to industry standards, reduces the complexity of specifications, and supports the verification of standards from a software engineering point of view.
C1 [Igamberdiev, Muzaffar; Grossmann, Georg; Selway, Matt; Stumptner, Markus] Univ South Australia, Sch IT & Math Sci, Adv Comp Res Ctr, Mawson Lakes, SA 5095, Australia.
C3 University of South Australia
RP Grossmann, G (corresponding author), Univ South Australia, Sch IT & Math Sci, Adv Comp Res Ctr, Mawson Lakes, SA 5095, Australia.
EM Muzaffar.Igamberdiev@unisa.edu.au; Georg.Grossmann@unisa.edu.au;
   Matt.Selway@unisa.edu.au; Markus.Stumptner@unisa.edu.au
RI Selway, Matt/K-4330-2016; Stumptner, Markus/B-5558-2009
OI Selway, Matt/0000-0001-6220-6352; Stumptner, Markus/0000-0002-7125-3289;
   Grossmann, Georg/0000-0003-4415-2228
FU South Australian Premier's Research and Industry Fund
FX This research was supported by the South Australian Premier's Research
   and Industry Fund.
CR Angele J., 2009, Handbook on Ontologies, International Handbooks on Information Systems, P45, DOI DOI 10.1007/978-3-540-92673-3
   [Anonymous], 2012, THESIS
   [Anonymous], 2019, 159264 ISO
   [Anonymous], CEUR
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2015, P WORKSH MULT MOD CO
   Atkinson C, 2012, P 2 INT MAST CLASS M
   Atkinson C., 2014, CEUR WORKSHOP P, V1286
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, INFORM SYST, V54, P289, DOI 10.1016/j.is.2015.01.003
   Atkinson C, 2015, SOFTW SYST MODEL, V14, P645, DOI 10.1007/s10270-013-0384-y
   Atkinson C, 2014, LECT NOTES COMPUT SC, V8569, P18
   Atkinson C, 2011, LECT NOTES COMPUT SC, V6563, P266, DOI 10.1007/978-3-642-19440-5_16
   Atkinson Colin, 2011, P 7 INT WORKSH SEM W, P1
   Balaban M, 2011, LECT NOTES COMPUT SC, V6981, P517, DOI 10.1007/978-3-642-24485-8_38
   Bock J, 2008, AREA2008 WORKSH ADV
   Burgstaller Felix., 2015, Integrated Communication, Navigation, and Surveillance Conference (ICNS), 2015, pD3
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Calvanese D, 1998, 3RD IFCIS INTERNATIONAL CONFERENCE ON COOPERATIVE INFORMATION SYSTEMS - PROCEEDINGS, P280, DOI 10.1109/COOPIS.1998.706234
   Clark T., 2014, P MULTI2014 COLOCATE, V1286, P43
   Daclin N, 2015, LECT NOTES BUS INF P, V213, P73, DOI 10.1007/978-3-662-47157-9_7
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Demuth A., 2014, MULTI 2014 MULT MOD, P73
   Gallaher M. P., 2004, TECHNICAL REPORT
   Giachetti G., 2012, Research Challenges in Information Science (RCIS), 2012 Sixth International Conference on, P1
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   GPy, 2012, Technical Report
   Haraty RA, 2014, J COMPUT SCI-NETH, V5, P653, DOI 10.1016/j.jocs.2014.02.009
   Horridge M, 2011, SEMANT WEB, V2, P11, DOI 10.3233/SW-2011-0025
   Igamberdiev M., 2014, MULTI MODELS, P33
   Jordan A., 2012, P MOD PHYS WORLD MOT
   Kantner D., 2014, THESIS
   Kifer M., 2013, FLORA, V2, P4
   Kim S., 2000, ZB 00, P2
   Kleiner M, 2009, LECT NOTES COMPUT SC, V5795, P122, DOI 10.1007/978-3-642-04425-0_10
   Klokkhammer O., 2014, THESIS
   Lara J., 2013, MODEL DRIVEN ENG DOM
   Lucas F. J., 2008, INF SOFTW TECHNOL, V51, P1631
   Lucas F. J., INF SOFTW TECHNOL, V51, P1631
   Mayer W., 2013, AAAI 2013 FALL S SEM
   Mayer W, 2011, AI EDAM, V25, P143, DOI 10.1017/S0890060410000594
   MIMOSA, 2012, TECHNICAL REPORT
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   Segura AM, 2014, IEEE INT ENTERP, P335, DOI 10.1109/EDOCW.2014.55
   Selway M, 2014, LECT NOTES ARTIF INT, V8862, P496, DOI 10.1007/978-3-319-13560-1_40
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Stumptner M, 1998, AI EDAM, V12, P307, DOI 10.1017/S0890060498124046
NR 56
TC 23
Z9 23
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2018
VL 17
IS 1
BP 269
EP 294
DI 10.1007/s10270-016-0520-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FV5WW
UT WOS:000424654100014
DA 2024-07-18
ER

PT J
AU Li, XB
   Yang, F
   Lei, YL
   Wang, WP
   Zhu, YF
AF Li, Xiao-bo
   Yang, Feng
   Lei, Yong-lin
   Wang, Wei-ping
   Zhu, Yi-fan
TI A model framework-based domain-specific composable modeling method for
   combat system effectiveness simulation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling and simulation; Composable modeling; Domain-specific modeling;
   Simulation model framework; System effectiveness simulation
AB Combat system effectiveness simulation (CoSES) plays an irreplaceable role in the effectiveness measurement of combat systems. According to decades of research and practice, composable modeling and multidomain modeling are recognized as two major modeling requirements in CoSES. Current effectiveness simulation researches attempt to cope with the structural and behavioral complexity of CoSES based on a unified technological space, and they are limited to their existing modeling paradigms and fail to meet these two requirements. In this work, we propose a model framework-based domain-specific composable modeling method to solve this problem. This method builds a common model framework using application invariant knowledge for CoSES, and designs domain-specific modeling infrastructures for subdomains as corresponding extension points of the framework to support the modeling of application variant knowledge. Therefore, this method supports domain-specific modeling in multiple subdomains and the composition of subsystem models across different subdomains based on the model framework. The case study shows that this method raises the modeling abstraction level, supports generative modeling, and promotes model reuse and composability.
C1 [Li, Xiao-bo; Yang, Feng; Lei, Yong-lin; Wang, Wei-ping; Zhu, Yi-fan] Natl Univ Def Technol, Coll Informat Syst & Management, Changsha 410073, Hunan, Peoples R China.
   [Li, Xiao-bo] Univ Antwerp, Dept Math & Comp Sci, B-2020 Antwerp, Belgium.
C3 National University of Defense Technology - China; University of Antwerp
RP Yang, F (corresponding author), Natl Univ Def Technol, Coll Informat Syst & Management, Changsha 410073, Hunan, Peoples R China.
EM lixiaobo@nudt.edu.cn; forestyoung@nudt.edu.cn; yllei@nudt.edu.cn;
   wangwp@nudt.edu.cn; yfzhu@nudt.edu.cn
RI Zhu, Yifan/GXH-6179-2022; zhu, yifan/JMR-2845-2023
FU National Natural Science Foundation of China [61273198, 71401167]
FX We specially thank the anonymous reviewers for their valuable
   suggestions and advices which greatly improve the quality of this paper.
   We thank our colleagues, Professor Qun Li and Dr. ChaoWang, for their
   contributions on SMP2 simulation system implementation. We are grateful
   to the suggestions and insights provided by Professor Hans Vangheluwe
   from University of Antwerp and Professor Pieter Mosterman from McGill
   University. The work presented in this paper is partly supported by the
   National Natural Science Foundation of China (Nos. 61273198 and
   71401167).
CR [Anonymous], 2000, NETWORK CENTRIC WARF
   [Anonymous], 2010, IEEE STAND MOD SIM H
   [Anonymous], 2000, 15162000 IEEESA
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Balasubramanian Daniel., 2006, Electronic Communication of the European Association of Software Science and Technology, V1, P1, DOI [10.14279/tuj.eceasst.1.89, DOI 10.14279/TUJ.ECEASST.1.89]
   Balci O, 2012, SIMUL-T SOC MOD SIM, V88, P870, DOI 10.1177/0037549712438469
   Chen Kai., 2005, P 5 ACM INT C EMBEDD, P35, DOI DOI 10.1145/1086228.1086236
   Clark T, 2002, LECT NOTES COMPUT SC, V2306, P159
   Davis P.K. J.H. Bigelow., 1998, Experiments in multiresolution modeling MRM
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Denckla B, 2005, IEEE DECIS CONTR P, P4193
   Emerson M.J., 2004, 4 OOPSLA WORKSH DOM, P83
   European Space Agency, 2005, EGOSSIMGENTN0099 EUR
   France R., 2005, SOFTW SYST MODEL, V4, P1, DOI [10.1007/s10270-005-0078-1, DOI 10.1007/S10270-005-0078-1]
   Hall S.B., 1999, P SIM INT WORKSH
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Kelly S., 2008, DOMAIN SPECIFIC MODE, P437
   Kwon SJ, 2012, PROC INFO COMMUN, V4, P385
   Li C., 2009, UML BASED SMP2 MODEL
   Li XB, 2013, J ZHEJIANG U-SCI C, V14, P311, DOI 10.1631/jzus.C1200374
   Li XB, 2013, WINT SIMUL C PROC, P1179, DOI 10.1109/WSC.2013.6721506
   Li XB, 2011, P SUMM COMP, P210
   Li XB, 2014, J STAT COMPUT SIM, V84, P1261, DOI 10.1080/00949655.2013.797421
   LOCHMANN H, 2009, P IASTED INT C SOFTW, P1
   Modarres M, 1999, RELIAB ENG SYST SAFE, V64, P181, DOI 10.1016/S0951-8320(98)00062-3
   Modelica Association, 2010, MOD UN OBJ OR LANG S
   Sarjoughian HS, 2000, T SOC COMPUT SIMUL I, V17, P187
   SISO Base Object Model Product Development Group, 2006, BAS OBJ MOD BOM TEMP
   Sprinkle J, 2010, LECT NOTES COMPUT SC, V6100, P57, DOI 10.1007/978-3-642-16277-0_3
   Tolk A., 2003, 2003 FALL SIM INT WO
   US Army Space and Missile Defense Command, 2013, EADSIM EX SUMM
   Vallecillo A, 2010, LECT NOTES COMPUT SC, V6138, P305, DOI 10.1007/978-3-642-13595-8_24
   Vanderbilt University, 2010, GME MAN US GUID GEN
   Vangheluwe H., 2007, 2 INT C SOFTW DAT TE
   Yang F., 2010, EQUIPMENT COMBAT EFF
   Zacharewicz G, 2008, SIMUL-T SOC MOD SIM, V84, P197, DOI 10.1177/0037549708092833
   Zeigler BP., 2000, Theory of Modeling and Simulation
   Zimmerman P., 2013, DOD MODELING SIMULAT
NR 38
TC 5
Z9 6
U1 2
U2 38
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1201
EP 1222
DI 10.1007/s10270-015-0513-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800012
DA 2024-07-18
ER

PT J
AU Devroey, X
   Perrouin, G
   Cordy, M
   Samih, H
   Legay, A
   Schobbens, PY
   Heymans, P
AF Devroey, Xavier
   Perrouin, Gilles
   Cordy, Maxime
   Samih, Hamza
   Legay, Axel
   Schobbens, Pierre-Yves
   Heymans, Patrick
TI Statistical prioritization for software product line testing: an
   experience report
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software product line testing; Prioritization; Statistical testing
ID MODEL CHECKING; SYSTEMS
AB Software product lines (SPLs) are families of software systems sharing common assets and exhibiting variabilities specific to each product member of the family. Commonalities and variabilities are often represented as features organized in a feature model. Due to combinatorial explosion of the number of products induced by possible features combinations, exhaustive testing of SPLs is intractable. Therefore, sampling and prioritization techniques have been proposed to generate sorted lists of products based on coverage criteria or weights assigned to features. Solely based on the feature model, these techniques do not take into account behavioural usage of such products as a source of prioritization. In this paper, we assess the feasibility of integrating usage models into the testing process to derive statistical testing approaches for SPLs. Usage models are given as Markov chains, enabling prioritization of probable/rare behaviours. We used featured transition systems, compactly modelling variability and behaviour for SPLs, to determine which products are realizing prioritized behaviours. Statistical prioritization can achieve a significant reduction in the state space, and modelling efforts can be rewarded by better automation. In particular, we used MaTeLo, a statistical test cases generation suite developed at ALL4TEC. We assess feasibility criteria on two systems: Claroline, a configurable course management system, and Sferion (TM), an embedded system providing helicopter landing assistance.
C1 [Devroey, Xavier; Perrouin, Gilles; Cordy, Maxime; Schobbens, Pierre-Yves; Heymans, Patrick] Univ Namur, PReCISE, Rue Grandgagnage 21, B-5000 Namur, Belgium.
   [Samih, Hamza] Alcatel Lucent, IP T&R Wireless Transmiss, Route De VilleJust, F-91620 Nozay, France.
   [Samih, Hamza] All4tec GL, 6 Rue Leonard de Vinci,BP 0119, F-53001 Laval, France.
   [Samih, Hamza; Legay, Axel] Inria Rennes, Bretagne Atlantique, Campus Univ Beaulieu, F-35042 Rennes, France.
C3 University of Namur; Alcatel-Lucent; Universite de Rennes
RP Perrouin, G (corresponding author), Univ Namur, PReCISE, Rue Grandgagnage 21, B-5000 Namur, Belgium.
EM xavier.devroey@unamur.be; gilles.perrouin@unamur.be;
   maxime.cordy@unamur.be; hamza.samih@gmail.com; axel.legay@inria.fr;
   pierre-yves.schobbens@unamur.be; patrick.heymans@unamur.be
RI Schobbens, Pierre-Yves/H-2333-2011; Perrouin, Gilles/I-1621-2019;
   Devroey, Xavier/I-3918-2019; Cordy, Maxime/O-3328-2019
OI Schobbens, Pierre-Yves/0000-0001-8677-4485; Perrouin,
   Gilles/0000-0002-8431-0377; Devroey, Xavier/0000-0002-0831-7606; Cordy,
   Maxime/0000-0001-8312-1358
CR [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], ARXIV13111343
   [Anonymous], P 2 INT WORKSH PROD
   [Anonymous], VAMOS 11
   [Anonymous], 26 IFIP INT C TEST S
   [Anonymous], 19 INT C ENG COMPL C
   [Anonymous], P 18 INT SOFTW PROD
   [Anonymous], 36 INT C SOFTW ENG I
   [Anonymous], 2013, P VAMOS 2013
   [Anonymous], VARIABILITY INTENSIV
   Asirelli Patrizia, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P130, DOI 10.1109/SPLC.2011.34
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Cichos H, 2011, LECT NOTES COMPUT SC, V6981, P425, DOI 10.1007/978-3-642-24485-8_31
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Devroey Xavier, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P208, DOI 10.1007/978-3-642-34026-0_16
   Devroey X., 2014, SOFTW PROD LIN C, P86, DOI DOI 10.1145/2647908.2655971
   Devroey X, 2014, 8 INT WORKSH VAR MOD, p10:1, DOI [10.1145/2556624.2556635, DOI 10.1145/2556624.2556635]
   Devroey X, 2014, LECT NOTES COMPUT SC, V8802, P336, DOI 10.1007/978-3-662-45234-9_24
   Feliachi Abderrahmane, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P99, DOI 10.1109/ICST.2010.26
   Fischbein D., 2006, ROSATEA 06, P39
   García-Teodoro P, 2009, COMPUT SECUR, V28, P18, DOI 10.1016/j.cose.2008.08.003
   Gouraud SD, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P5, DOI 10.1109/ASE.2001.989785
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Kang K, 1990, TECH REP
   Kim C. H. P., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P221, DOI 10.1109/ISSRE.2012.23
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Lochau M, 2012, SOFTWARE QUAL J, V20, P567, DOI 10.1007/s11219-011-9165-4
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Metzger A., Proc. Futur. Softw. Eng. - FOSE 2014, ACM Press, New York, New York, USA, P70, DOI DOI 10.1145/2593882.2593888
   Musa John D, 1996, Reliability and Maintenance of Complex Systems, P333
   Oster Sebastian, 2011, ModelBased Testing for Embedded Systems, DOI [10.1201/b11321-14, DOI 10.1201/B11321-14]
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prowell S. J., 2003, 36th Hawaii International Conference on Systems Sciences
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S., 2014, INT C AUT SOFTW ENG, P139, DOI DOI 10.1145/2642937.2642939
   Sprenkle SE, 2013, SOFTW TEST VERIF REL, V23, P439, DOI 10.1002/stvr.1496
   Thevenod-Fosse Pascale., 1991, Software Testing, Verification and Reliability, V1, P5
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Utting M., 2007, PRACTICAL MODEL BASE
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Verwer S, 2014, MACH LEARN, V96, P129, DOI 10.1007/s10994-013-5409-9
   VITERBI AJ, 1967, IEEE T INFORM THEORY, V13, P260, DOI 10.1109/TIT.1967.1054010
   Weissleder Stephan, 2008, 1 WORKSH MOD BAS TES, P19
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
NR 58
TC 22
Z9 22
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 153
EP 171
DI 10.1007/s10270-015-0479-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500011
DA 2024-07-18
ER

PT J
AU de Gouw, S
   de Boer, F
   Ahrendt, W
   Bubel, R
AF de Gouw, Stijn
   de Boer, Frank
   Ahrendt, Wolfgang
   Bubel, Richard
TI Integrating deductive verification and symbolic execution for abstract
   object creation in dynamic logic
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Specification; Verification; Program logic; Dynamic logic; Object
   creation
ID ORIENTED PROGRAMS; JAVA; PARALLEL
AB We present a fully abstract weakest precondition calculus and its integration with symbolic execution. Our assertion language allows both specifying and verifying properties of objects at the abstraction level of the programming language, abstracting from a specific implementation of object creation. Objects which are not (yet) created never play any role. The corresponding proof theory is discussed and justified formally by soundness theorems. The usage of the assertion language and proof rules is illustrated with an example of a linked list reachability property. All proof rules presented are fully implemented in a version of the KeY verification system for Java programs.
C1 [de Gouw, Stijn; de Boer, Frank] CWI, Amsterdam, Netherlands.
   [de Gouw, Stijn] SDL Fredhopper, Amsterdam, Netherlands.
   [de Boer, Frank] Leiden Univ, Amsterdam, Netherlands.
   [Ahrendt, Wolfgang] Chalmers Univ Technol, Gothenburg, Sweden.
   [Bubel, Richard] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
C3 Leiden University; Leiden University - Excl LUMC; Chalmers University of
   Technology; Technical University of Darmstadt
RP Bubel, R (corresponding author), Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
EM cdegouw@cwi.nl; frb@cwi.nl; ahrendt@chalmers.se;
   bubel@cs.tu-darmstadt.de
OI de Gouw, Stijn/0000-0003-2964-6844
CR Abadi M., 1997, TAPSOFT '97: Theory and Practice of Software Development. 7th International Joint Conference CAAP/FASE. Proceedings, P682, DOI 10.1007/BFb0030634
   Abrahám E, 2008, FUND INFORM, V82, P391
   Ahrendt W, 2012, PROCEEDINGS OF THE 10TH INTERNATIONAL WORKSHOP ON JAVA TECHNOLOGIES FOR REAL-TIME AND EMBEDDED SYSTEMS, P145
   Ahrendt W, 2009, LECT NOTES COMPUT SC, V5850, P612, DOI 10.1007/978-3-642-05089-3_39
   AMERICA P, 1991, LECT NOTES COMPUT SC, V527, P1
   America P., 1990, REX WORKSH, P60
   [Anonymous], 1981, TRACTATUS LOGICOPHIL
   [Anonymous], 2004, J. Obj. Technol., DOI [10.5381/jot.2004.3.6.a2, DOI 10.5381/JOT.2004.3.6.A2]
   APT KR, 1981, ACM T PROGR LANG SYS, V3, P431, DOI 10.1145/357146.357150
   Apt KR, 2012, J COMPUT SYST SCI, V78, P823, DOI 10.1016/j.jcss.2011.08.002
   Apt Krzysztof R., 2009, VERIFICATION SEQUENT, V3, DOI DOI 10.1007/978-1-84882-745-5
   Beckert B., 2007, LECT NOTES COMPUTER, V4334
   Beckert B, 2006, LECT NOTES ARTIF INT, V4130, P266
   Berdine Josh, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P178, DOI 10.1007/978-3-642-22110-1_15
   Berdine J, 2006, LECT NOTES COMPUT SC, V4111, P115
   Bormer T., 2011, INT C FORMAL VERIFIC, P3, DOI 10.1007/978-3-642-31762-0_2
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Burstall R., 1974, Information Processing 74, (Stockholm, Sweden), P308
   Cadar Cristian, 2008, USENIX OSDI
   Calcagno C., 2001, LNCS, V2245, P108, DOI [10.1007/3-540-45294-X10, DOI 10.1007/3-540-45294-X10]
   Darvas A, 2008, LECT NOTES ARTIF INT, V5195, P100, DOI 10.1007/978-3-540-71070-7_8
   de Boer FS, 1999, LECT NOTES COMPUT SC, V1578, P135
   de Gouw S, 2013, LECT NOTES COMPUT SC, V7741, P207
   de Halleux J, 2008, LECT NOTES COMPUT SC, V4966, P171
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Distefano D, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P213
   Engel C, 2007, LECT NOTES COMPUT SC, V4454, P169
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Galeotti JP, 2013, IEEE T SOFTWARE ENG, V39, P1283, DOI 10.1109/TSE.2013.15
   Harel D., 1978, ICALP, V62, P268
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Huizing K, 2000, LECT NOTES COMPUT SC, V1783, P208
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Kassios IT, 2012, LECT NOTES COMPUT SC, V7152, P196, DOI 10.1007/978-3-642-27705-4_16
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Klein G, 2006, ACM T PROGR LANG SYS, V28, P619, DOI 10.1145/1146809.1146811
   Leavens G.T., 2000, OBJECT ORIENTED PROG, P105
   Leavens GT, 2007, LECT NOTES COMPUT SC, V4590, P37
   Leino K.R.M., 2009, CHAPTER VERIFICATION, P195
   Leino KRM, 2010, LECT NOTES COMPUT SC, V6012, P407, DOI 10.1007/978-3-642-11957-6_22
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Mostowski W, 2005, LECT NOTES COMPUT SC, V3442, P357, DOI 10.1007/978-3-540-31984-9_27
   Mostowski W., 2007, VERIFY
   *OBJ MOD GROUP, 2005, OBJ CONSTR LANG SPEC
   OWICKI S, 1976, ACTA INFORM, V6, P319, DOI 10.1007/BF00268134
   Rümmer P, 2006, LECT NOTES ARTIF INT, V4246, P422, DOI 10.1007/11916277_29
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Smans J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160911
   Tucker J., 1988, PROGRAM CORRECTNESS
   van den Berg J., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P299
NR 51
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1117
EP 1140
DI 10.1007/s10270-014-0446-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800010
OA Green Published
DA 2024-07-18
ER

PT J
AU Hegedüs, A
   Horváth, A
   Ráth, I
   Starr, RR
   Varró, D
AF Hegedus, Abel
   Horvath, Akos
   Rath, Istvan
   Starr, Rodrigo Rizzi
   Varro, Daniel
TI Query-driven soft traceability links for models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Soft links; Incremental model queries; Derived features; Traceability
AB Model repositories play a central role in the model driven development of complex software-intensive systems by offering means to persist and manipulate models obtained from heterogeneous languages and tools. Complex models can be assembled by interconnecting model fragments by hard links, i.e., regular references, where the target end points to external resources using storage-specific identifiers. This approach, in certain application scenarios, may prove to be a too rigid and error prone way of interlinking models. As a flexible alternative, we propose to combine derived features with advanced incremental model queries as means for soft interlinking of model elements residing in different model resources. These soft links can be calculated on-demand with graceful handling for temporarily unresolved references. In the background, the links are maintained efficiently and flexibly by using incremental model query evaluation. The approach is applicable to modeling environments or even property graphs for representing query results as first-class relations, which also allows the chaining of soft links that is useful for modular applications. The approach is evaluated using the Eclipse Modeling Framework (EMF) and EMF-IncQuery in two complex industrial case studies. The first case study is motivated by a knowledge management project from the financial domain, involving a complex interlinked structure of concept and business process models. The second case study is set in the avionics domain with strict traceability requirements enforced by certification standards (DO-178b). It consists of multiple domain models describing the allocation scenario of software functions to hardware components.
C1 [Hegedus, Abel; Horvath, Akos; Rath, Istvan; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Starr, Rodrigo Rizzi] Embraer SA, Av Brigadeiro Faria Lima, BR-2170 Sao Jose Dos Campos, Brazil.
C3 Budapest University of Technology & Economics; Embraer S.A.
RP Hegedüs, A (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM hegedusa@mit.bme.hu; ahorvath@mit.bme.hu; rath@mit.bme.hu;
   rodrigo.starr@embraer.com.br; varro@mit.bme.hu
RI Varro, Daniel/G-8963-2012; Hegedüs, Ábel/A-8494-2012; Rath,
   Istvan/E-4846-2013; Varro, Daniel/C-5447-2015
OI Varro, Daniel/0000-0002-8790-252X
FU CERTIMOT [ERC_HU-09-01-2010-0003]; Trans-IMA (industrial) projects;
   TAMOP Grant [4.2.2.B-10/1-2010-0009]; Janos Bolyai Scholarship
FX This work was partially supported by the CERTIMOT
   (ERC_HU-09-01-2010-0003) and the Trans-IMA (industrial) projects, the
   TAMOP (4.2.2.B-10/1-2010-0009) Grant and the Janos Bolyai Scholarship.
CR [Anonymous], CDO MOD REP
   [Anonymous], ECEASST
   [Anonymous], LNCS
   [Anonymous], XCORE ECORE MEETS XT
   [Anonymous], P EUR C MOD DRIV ARC
   [Anonymous], 7EMES JOURNEES INGEN
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], SIVOES MDA WORKSH UM
   [Anonymous], LNCS
   [Anonymous], XML PROC DEF LANG V2
   [Anonymous], P ICMT 11
   [Anonymous], IEEE S VIS LANG HUM
   [Anonymous], ACM IEEE 17 INT C MO
   [Anonymous], SPARQL INF NOT
   [Anonymous], P GT VMT 2009 ECEASS
   [Anonymous], IMPLEMENTING MOF 2 0
   [Anonymous], VIRT UN SERV
   [Anonymous], P 2 EC MDA WORKSH TR
   [Anonymous], XTEXT LANG DEV MAD E
   [Anonymous], XTEND MOD JAV
   [Anonymous], 2010, 3 INT C SOFTW LANG E, DOI DOI 10.1007/978-3-642-19440-5_7
   [Anonymous], SPIN SUPP TOPBRAID
   [Anonymous], ARCH AN DES LANG AAD
   [Anonymous], THESIS
   [Anonymous], OBJ CONSTR LANG V2 0
   [Anonymous], 5 ECMDA WORKSH TRAC
   [Anonymous], THE AUTOSAR STAND
   Anwar A, 2010, J OBJECT TECHNOL, V9, P89, DOI 10.5381/jot.2010.9.2.a1
   Balsters H, 2003, LECT NOTES COMPUT SC, V2863, P295
   Bergmann G., 2012, 6 INT C GRAPH TRANSF
   Biermann E., 2008, MoDELS'08
   Bürger C, 2011, LECT NOTES COMPUT SC, V6563, P22, DOI 10.1007/978-3-642-19440-5_3
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Debreceni Csaba., 2014, Proceedings of the 2nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling, P31, DOI [DOI 10.1145/2631675.2631677, 10.1145/2631675.2631677]
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Diskin Z., 2012, FASE 2012
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6491, P92, DOI 10.1007/978-3-642-18023-1_3
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Drivalos-Matragkas N., 2010, Proceedings of the 6th ECMFA Traceability Workshop. ECMFA-TW'10, P23, DOI DOI 10.1145/1814392.1814396
   Ehrig H., 1999, Handbook of Graph Grammars and Computing by Graph Transformation: Applications, Languages and Tools, V2
   Gupta A., 1995, IEEE DATA ENG B, V18, P3
   HEIMBIGNER D, 1985, ACM T OFF INF SYST, V3, P253, DOI 10.1145/4229.4233
   Izsó B, 2013, IEEE INT CONF AUTOM, P421, DOI 10.1109/ASE.2013.6693100
   Jeusfeld M., 2009, METAMODELING METHOD
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Limon A E., 2005, ECMDA Traceability Workshop (ECMDA-TW), P47
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Rath Istvan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P102, DOI 10.1007/978-3-642-31491-9_10
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rensink A, 2005, ELECTRON NOTES THEOR, V127, P127, DOI 10.1016/j.entcs.2004.12.036
   Rose LM, 2010, LECT NOTES COMPUT SC, V6138, P245, DOI 10.1007/978-3-642-13595-8_20
   Tolvanen J.-P., 2003, COMPANION 18 ANN ACM, P92, DOI DOI 10.1145/949344.949365
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vanhooff B., 2005, ECMDA-TW Workshop, SINTEF, P15
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   W3C, 2013, SPARQL query language for RDF
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
NR 63
TC 11
Z9 13
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 733
EP 756
DI 10.1007/s10270-014-0436-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600007
DA 2024-07-18
ER

PT J
AU Lúcio, L
   Amrani, M
   Dingel, J
   Lambers, L
   Salay, R
   Selim, GMK
   Syriani, E
   Wimmer, M
AF Lucio, Levi
   Amrani, Moussa
   Dingel, Juergen
   Lambers, Leen
   Salay, Rick
   Selim, Gehan M. K.
   Syriani, Eugene
   Wimmer, Manuel
TI Model transformation intents and their properties
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Intent; Property; Verification; Description
   framework
ID GRAPH TRANSFORMATION; TOOL; VERIFICATION; REFINEMENT; CHECKING;
   LANGUAGE; TIME
AB The notion of model transformation intent is proposed to capture the purpose of a transformation. In this paper, a framework for the description of model transformation intents is defined, which includes, for instance, a description of properties a model transformation has to satisfy to qualify as a suitable realization of an intent. Several common model transformation intents are identified, and the framework is used to describe six of them in detail. A case study from the automotive industry is used to demonstrate the usefulness of the proposed framework for identifying crucial properties of model transformations with different intents and to illustrate the wide variety of model transformation intents that an industrial model-driven software development process typically encompasses.
C1 [Lucio, Levi] McGill Univ, Modelling Simulat & Design Lab, Montreal, PQ, Canada.
   [Amrani, Moussa] Univ Luxembourg, Luxembourg, Luxembourg.
   [Dingel, Juergen; Selim, Gehan M. K.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Lambers, Leen] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Salay, Rick] Univ Toronto, Dept Comp Sci, Software Engn Grp, Toronto, ON, Canada.
   [Syriani, Eugene] Univ Alabama, Comp Sci, Tuscaloosa, AL USA.
   [Wimmer, Manuel] Vienna Univ Technol, Business Informat Grp, Vienna, Austria.
C3 McGill University; University of Luxembourg; Queens University - Canada;
   University of Potsdam; University of Toronto; University of Alabama
   System; University of Alabama Tuscaloosa; Technische Universitat Wien
RP Lúcio, L (corresponding author), McGill Univ, Modelling Simulat & Design Lab, Montreal, PQ, Canada.
EM Levi@cs.mcgill.ca; Moussa.Amrani@uni.lu; Dingel@cs.queensu.ca;
   Leen.Lambers@hpi.uni-potsdam.de; rsalay@cs.toronto.edu;
   Gehan@cs.queensu.ca; esyriani@cs.ua.edu; wimmer@big.tuwien.ac.at
RI Selim, Gehan/GVS-8529-2022; Syriani, Eugene/AAI-5036-2020
OI Syriani, Eugene/0000-0001-6527-1651; Lambers, Leen/0000-0001-6937-5167
CR ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   Akehurst D., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P243
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   Amrani Moussa., 2012, P 1 WORKSHOP ANAL MO, P3
   [Anonymous], 2006, Software and Systems Modeling, DOI [10.1007/s10270-006-0027-7, DOI 10.1007/S10270-006-0027-7]
   [Anonymous], [No title captured]
   [Anonymous], ECEASST
   [Anonymous], [No title captured]
   [Anonymous], 2007, LNCS
   [Anonymous], 2000, MODELING LANGUAGES 1
   [Anonymous], THESIS
   Asztalos M., 2011, LNCS, V6627, P293
   Bae JH, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P1253, DOI 10.1109/ITNG.2008.179
   Baresi L., 2006, Software and System Modeling, V5, P187
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Bezivin J., 2005, COMMUNICATION
   Biermann E, 2009, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2009.46
   Borger E., 2003, ABSTRACT STATE MACHI
   Brunelière H, 2010, LECT NOTES COMPUT SC, V6138, P32, DOI 10.1007/978-3-642-13595-8_5
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2006, P 9 INT C MOD DRIV E
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   Cariou E., 2009, ECEASST
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Clark T., 2004, APPL METAMODELLING F
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   de Lara J, 2004, LECT NOTES ARTIF INT, V2980, P182
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   de Lara J, 2010, LECT NOTES COMPUT SC, V6372, P266
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Deltombe G., 2012, P SEKE, P517
   Denil J., 2013, THESIS
   Denil J., 2012, RECENT ADV MULTIPARA, V50
   Do Quang Tri, 2012, 2012 Fourth International Conference on Knowledge and Systems Engineering (KSE), P203, DOI 10.1109/KSE.2012.39
   Dorf R. C., 2011, Modern Control Systems
   Ducasse S, 2006, LECT NOTES COMPUT SC, V4199, P604
   Rivera JE, 2009, LECT NOTES COMPUT SC, V5452, P54, DOI 10.1007/978-3-642-00434-6_5
   Engel KD, 2006, LECT NOTES COMPUT SC, V4066, P143
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Ermel C, 2008, ELECTRON NOTES THEOR, V213, P55, DOI 10.1016/j.entcs.2008.04.074
   Fischer Thorsten., 1998, International Workshop on Theory and Application of Graph Transformations, P296, DOI DOI 10.1007/978-3-540-46464-8_21
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gabmeyer S., 2013, P 2 INT WORKSH VER M
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gardner Tracy, 2003, P METAMODELLING MDA, P178
   Gargantini A., 2010, Int. J. Adv. Softw., V3, P1
   Gessenharter D, 2008, LECT NOTES COMPUT SC, V5301, P813, DOI 10.1007/978-3-540-87875-9_56
   Giese H., 2007, LNCS, V4364
   Gogolla M, 2011, LECT NOTES COMPUT SC, V6698, P221, DOI 10.1007/978-3-642-21470-7_16
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Guerra E, 2006, LECT NOTES COMPUT SC, V4178, P351
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Izquierdo J.L.C., 2012, EXTRACTING MODELS SO, P1
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kern H., 2009, P ECMDA WORKSH MOD D
   Kern H., 2009, P INT WORKSH DOM SPE
   Kern H., 2011, P INT WORKSH DOM SPE
   Kern H., 2007, P INT WORKSH DOM SPE
   Kilov H., 1990, Systems Integration '90. Proceedings of the First International Conference on Systems Integration (Cat. No.90TH0309-5), P385, DOI 10.1109/ICSI.1990.138704
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Koch N., 2008, Web Engineering: Modelling and Implementing Web Applications, P157, DOI 10.1007/978-1-84628-923-1_7
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Lucio L., 2013, P 2 WORKSH VER MOD T
   Lucio L., 2013, SOCSTR20132 MCGILL U
   Lucio L., 2014, ADDITIONAL MAT PAPER
   Mannadiar R., 2010, MOD BAS METH PERV EM
   Mayerhofer T., 2012, P 12 WORKSH DOM SPEC
   Mc Brien Peter., 1999, CONCEPTUAL MODELING, V1782, P99
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mosterman PJ, 2004, SIMUL-T SOC MOD SIM, V80, P433, DOI 10.1177/0037549704050532
   Muller P.A., 2005, P WORKSH SOFTW MOD E
   Muller P.-A., 2010, SOFTWARE SYSTEMS MOD, P1
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   Mustafiz S., 2012, P MULT MOD WORKSH MP
   Narayanan A., 2008, ELECT COMMUNICATIONS, V10
   Narayanan A, 2008, ELECTRON NOTES THEOR, V211, P191, DOI 10.1016/j.entcs.2008.04.041
   Object Management Group, 2011, UN MOD LANG UML 2 4
   Object Management Group, 2003, MDA GUIDE VERSION 1
   Object Management Group, 2008, MOF QVT QUER VIEW TR
   Padberg J, 1999, APPL CATEGOR STRUCT, V7, P371, DOI 10.1023/A:1008695316594
   Paige RF, 2005, ELECTRON NOTES THEOR, V137, P151, DOI 10.1016/j.entcs.2005.04.029
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Rahim L.A., 2013, SOFTW SYST MODEL, P1
   Romero JR, 2007, J OBJECT TECHNOL, V6, P187, DOI 10.5381/jot.2007.6.9.a10
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rivera JE, 2010, LECT NOTES COMPUT SC, V6381, P174, DOI 10.1007/978-3-642-16310-4_12
   Schatz Bernhard, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P173, DOI 10.1109/ECBS.2010.25
   Scheidgen M, 2007, LECT NOTES COMPUT SC, V4530, P157
   Scholz P, 1998, LECT NOTES COMPUT SC, V1382, P285, DOI 10.1007/BFb0053597
   Selim G. M., 2012, 2012592 QUEENS U
   Selim G.M.K., 2012, P 1 INT WORKSH AN MO
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shannon Robert., 1976, IEEE T SYST MAN CYB, V6, P723, DOI [DOI 10.1109/TSMC.1976, 10.1109/TSMC.1976.4309432]
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Syriani E., 2011, J SOFTW SYST MODEL, V11, P1
   Syriani E., 2010, DEVS SEMANTIC DOMAIN, P3
   Syriani E., 2013, MODELS'13 Demonstrations
   Syriani E., 2012, P RE 2012 WORKSH IEE
   Syriani E., 2012, DOMAIN ENG PRODUCT L
   Syriani E, 2008, LECT NOTES COMPUT SC, V5063, P91, DOI 10.1007/978-3-540-69927-9_7
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Troya J, 2013, INFORM SOFTWARE TECH, V55, P88, DOI 10.1016/j.infsof.2012.07.009
   Troya J, 2010, LECT NOTES COMPUT SC, V6002, P296
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   Van Der Straeten R, 2007, SOFTW SYST MODEL, V6, P139, DOI 10.1007/s10270-006-0025-9
   van Lamsweerde A., 2001, P 5 IEEE INT S REQ E
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Varro Daniel., 2003, Critical Systems Development workshop in UML03: 6th International Conference on the Unified Modeling Language, LNCS, V2863, P63
   Viehstaedt G., 1995, P INT WORKSH NEXT GE, P155
   Visser E, 2005, J SYMB COMPUT, V40, P831, DOI 10.1016/j.jsc.2004.12.011
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Wimmer M., 2009, P 9 OOPSLA WORKSH DO
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Yu E. S. K., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P159, DOI 10.1109/ICSE.1994.296775
   Zhang J, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P199, DOI 10.1007/3-540-28554-7_9
NR 134
TC 66
Z9 71
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 647
EP 684
DI 10.1007/s10270-014-0429-x
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600004
DA 2024-07-18
ER

PT J
AU Bensalem, S
   Bozga, M
   Legay, A
   Nguyen, TH
   Sifakis, J
   Yan, RJ
AF Bensalem, Saddek
   Bozga, Marius
   Legay, Axel
   Thanh-Hung Nguyen
   Sifakis, Joseph
   Yan, Rongjie
TI Component-based verification using incremental design and invariants
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Verification method; Invariant; Component-based systems; Incremental
   design; Verification tools; Deadlock-freedom; BIP
AB We propose invariant-based techniques for the efficient verification of safety and deadlock-freedom properties of component-based systems. Components and their interactions are described in the BIP language. Global invariants of composite components are obtained by combining local invariants of their constituent components with interaction invariants that take interactions into account. We study new techniques for computing interaction invariants. Some of these techniques are incremental, i.e., interaction invariants of a composite hierarchically structured component are computed by reusing invariants of its constituents. We formalize incremental construction of components in the BIP language as the process of building progressively complex components by adding interactions (synchronization constraints) to atomic components. We provide sufficient conditions ensuring preservation of invariants when new interactions are added. When these conditions are not satisfied, we propose methods for generating new invariants in an incremental manner by reusing existing invariants from the constituents in the incremental construction. The reuse of existing invariants reduces considerably the overall verification effort. The techniques have been implemented in the D-Finder toolset. Among the experiments conducted, we have been capable of verifying safety properties and deadlock-freedom of sub-systems of the functional level of the DALA autonomous robot. This work goes far beyond the capacity of existing monolithic verification tools.
C1 [Bensalem, Saddek; Bozga, Marius; Sifakis, Joseph] UJF Grenoble 1, CNRS, VERIMAG UMR 5104, F-38041 Grenoble, France.
   [Legay, Axel] INRIA, IRISA, F-35042 Rennes, France.
   [Thanh-Hung Nguyen] Hanoi Univ Sci & Technol, Dept Software Engn, Hanoi, Vietnam.
   [Yan, Rongjie] State Key Lab Comp Sci, Beijing 100190, Peoples R China.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Universite de Rennes; Inria; Hanoi
   University of Science & Technology (HUST); Chinese Academy of Sciences
RP Yan, RJ (corresponding author), State Key Lab Comp Sci, Beijing 100190, Peoples R China.
EM yan.rongjie@gmail.com
CR Abdellatif T., 2010, Proceedings of the tenth ACM international conference on Embedded software, P229
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 57 MIT PROJ MAC COMP
   [Anonymous], THESIS I NATL POLYTE
   [Anonymous], CONCURRENCY VERIFICA
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   [Anonymous], THE OMEGA
   [Anonymous], 1989, CWI Q.
   [Anonymous], P INT S FORM DESCR T
   [Anonymous], FORM METH COMP OBJ 1
   [Anonymous], 2009, ACM INT C EMB SOFTW, DOI DOI 10.1145/1629335.1629347
   [Anonymous], 2012, PROC 15 INT ACM SIGS
   [Anonymous], ISAIRAS
   [Anonymous], SAVCBS
   Balarin F, 2002, LECT NOTES COMPUT SC, V2549, P228
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   Ball T, 2001, LECT NOTES COMPUT SC, V2102, P260
   Basu A, 2007, Sixth IEEE International Symposium on Network Computing and Applications, Proceedings, P257, DOI 10.1109/NCA.2007.52
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Basu A, 2010, LECT NOTES COMPUT SC, V6418, P330, DOI 10.1007/978-3-642-16612-9_25
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Basu A, 2010, LECT NOTES COMPUT SC, V6117, P32, DOI 10.1007/978-3-642-13464-7_4
   Bensalem Saddek, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P327, DOI 10.1007/978-3-642-34026-0_25
   Bensalem Saddek, 2011, Software Composition. Proceedings of the 10th International Conference, SC 2011, P116, DOI 10.1007/978-3-642-22045-6_8
   Bensalem S., 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P119, DOI 10.1109/MEMCOD.2011.5970518
   Bensalem S., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P257
   Bensalem Saddek, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P157, DOI 10.1109/TASE.2010.23
   Bensalem S, 2010, IET SOFTW, V4, P181, DOI 10.1049/iet-sen.2009.0011
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   Bensalem S, 2009, IEEE ROBOT AUTOM MAG, V16, P67, DOI 10.1109/MRA.2008.931631
   Bensalem S, 2008, LECT NOTES COMPUT SC, V5311, P64, DOI 10.1007/978-3-540-88387-6_7
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   CHENG A, 1995, THEOR COMPUT SCI, V147, P117, DOI 10.1016/0304-3975(94)00231-7
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 1999, MODEL CHECKING, P1
   Cobleigh JM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348253
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   Cook B, 2006, LECT NOTES COMPUT SC, V4144, P415, DOI 10.1007/11817963_37
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   de Alfaro L, 2005, LECT NOTES COMPUT SC, V3717, P81
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   Farzan A, 2008, LECT NOTES COMPUT SC, V4963, P2, DOI 10.1007/978-3-540-78800-3_2
   Flanagan C, 2003, LECT NOTES COMPUT SC, V2648, P213
   Fleury S., 1997, Proceedings of the 1997 IEEE/RSJ International Conference on Intelligent Robot and Systems. Innovative Robotics for Real-World Applications. IROS '97 (Cat. No.97CH36108), P842, DOI 10.1109/IROS.1997.655108
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Gössler G, 2003, LECT NOTES COMPUT SC, V3188, P314
   Gupta A, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P331, DOI 10.1145/1926385.1926424
   HELMBOLD D, 1985, IEEE SOFTWARE, V2, P47, DOI 10.1109/MS.1985.230351
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Henzinger TA, 1998, LECT NOTES COMPUT SC, V1427, P440, DOI 10.1007/BFb0028765
   Henzinger TA, 2010, LECT NOTES COMPUT SC, V6397, P348, DOI 10.1007/978-3-642-16242-8_25
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Jones C. B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P321
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Pnueli A., 1985, Proceedings of the NATO Advanced Study Institute on Logics and Models of Concurrent Systems, P123, DOI DOI 10.1007/978-3-642-82453-1_5
   Popeea C, 2012, LECT NOTES COMPUT SC, V7214, P237, DOI 10.1007/978-3-642-28756-5_17
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Somenzi Fabio., CUDD CU DECISION DIA
   Thiele L, 2007, INT CONF APPL CONCUR, P29, DOI 10.1109/ACSD.2007.53
   Tripakis S, 2013, MATH STRUCT COMP SCI, V23, P834, DOI 10.1017/S0960129512000278
NR 68
TC 14
Z9 14
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 427
EP 451
DI 10.1007/s10270-014-0410-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800008
DA 2024-07-18
ER

PT J
AU Elgammal, A
   Turetken, O
   van den Heuvel, WJ
   Papazoglou, M
AF Elgammal, Amal
   Turetken, Oktay
   van den Heuvel, Willem-Jan
   Papazoglou, Mike
TI Formalizing and appling compliance patterns for business process
   compliance
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process compliance; Compliance patterns; Formal specification;
   Regulatory compliance; Compliance management tool support; Design-time
   compliance management
ID COMPLIANCE-CHECKING; SPECIFICATION; VERIFICATION; FRAMEWORK; MODELS
AB Today's enterprises demand a high degree of compliance of business processes to meet diverse regulations and legislations. Several industrial studies have shown that compliance management is a daunting task, and organizations are still struggling and spending billions of dollars annually to ensure and prove their compliance. In this paper, we introduce a comprehensive compliance management framework with a main focus on design-time compliance management as a first step towards a preventive lifetime compliance support. The framework enables the automation of compliance-related activities that are amenable to automation, and therefore can significantly reduce the expenditures spent on compliance. It can help experts to carry out their work more efficiently, cut the time spent on tedious manual activities, and reduce potential human errors. An evident candidate compliance activity for automation is the compliance checking, which can be achieved by utilizing formal reasoning and verification techniques. However, formal languages are well known of their complexity as only versed users in mathematical theories and formal logics are able to use and understand them. However, this is generally not the case with business and compliance practitioners. Therefore, in the heart of the compliance management framework, we introduce the Compliance Request Language (CRL), which is formally grounded on temporal logic and enables the abstract pattern-based specification of compliance requirements. CRL constitutes a series of compliance patterns that spans three structural facets of business processes; control flow, employed resources and temporal perspectives. Furthermore, CRL supports the specification of compensations and non-monotonic requirements, which permit the relaxation of some compliance requirements to handle exceptional situations. An integrated tool suite has been developed as an instantiation artefact, and the validation of the approach is undertaken in several directions, which includes internal validity, controlled experiments, and functional testing.
C1 [Elgammal, Amal] Natl Univ Ireland Univ Coll Cork, Governance Risk Management & Compliance Technol C, Cork, Ireland.
   [Turetken, Oktay] Eindhoven Univ Technol, Sch Ind Engn, POB 513, NL-5600 MB Eindhoven, Netherlands.
   [van den Heuvel, Willem-Jan; Papazoglou, Mike] Tilburg Univ, European Res Inst Serv Sci, NL-5000 LE Tilburg, Netherlands.
C3 University College Cork; Eindhoven University of Technology; Tilburg
   University
RP Elgammal, A (corresponding author), Natl Univ Ireland Univ Coll Cork, Governance Risk Management & Compliance Technol C, Cork, Ireland.
EM aelgammal@ucc.ie; o.turetken@tue.nl; w.j.a.m.vdnheuvel@uvt.nl;
   m.p.papazoglou@uvt.nl
RI Turetken, Oktay/H-1667-2015; Elgammal, Amal/IZE-0192-2023; Turetken,
   Oktay/AAA-3441-2020
OI Turetken, Oktay/0000-0003-3798-0439; Papazoglou,
   Michael/0000-0002-2482-2282
CR Abi-Lahoud E., 2013, RULEML
   Abouzaid F, 2008, ELECTRON NOTES THEOR, V200, P43, DOI 10.1016/j.entcs.2008.04.092
   Accorsi R, 2012, LECT NOTES COMPUT SC, V7481, P172, DOI 10.1007/978-3-642-32885-5_13
   Accorsl R, 2011, BUS INFORM SYST ENG+, V3, P145, DOI 10.1007/s12599-011-0155-7
   Accutiy, VIS TRENDS ANT LAUND
   Ahn Gail-Joon., 2000, RBAC 00, P1
   ALUR R, 1993, INFORM COMPUT, V104, P35, DOI 10.1006/inco.1993.1025
   [Anonymous], 2007, P EMISA 2007
   [Anonymous], 2008, SEM BUS VOC BUS RUL
   Armoni R., 2002, LECT NOTES COMPUTER, V2280
   Awad Ahmed, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P406, DOI 10.1007/978-3-642-21640-4_31
   Awad A, 2009, LECT NOTES COMPUT SC, V5900, P500, DOI 10.1007/978-3-642-10383-4_37
   Bank for International Settlements, 2010, BAS 3 INT FRAM LIQ R
   Baral C, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P236
   Been Catriel., 2006, VLDB 2006 P 32 INT C, P343
   COBIT, 2007, CONTR OBJ INF REL TE
   COMPAS Project, 2008, DEL 2 1 STAT ART FIE
   COSO, 1994, INT CONTR INT FRAM C
   Delfmann P, 2010, ENTERP MODELLING INF, V5, P24
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Elgammal A., 2010, INT PERF ASS AUD SER
   Elgammal A, 2012, THESIS, P284
   Elgammal A., 2010, 4 WORKSH FORM LANG A, P33
   Elgammal A, 2010, LECT NOTES COMPUT SC, V6470, P17, DOI 10.1007/978-3-642-17358-5_2
   Elgammal A, 2012, INT J COOP INF SYST, V21, P31, DOI 10.1142/S0218843012400023
   Elgammal A, 2010, KNOWLEDGE MANAGEMENT AND INNOVATION: A BUSINESS COMPETITIVE EDGE PERSPECTIVE, VOLS 1-3, P1480
   Ernst & Young, 2010, TOP 10 RISKS BUS ERN
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   FINRA, 2008, FIN IND REG AUTH FIN
   Fu X, 2004, LECT NOTES COMPUT SC, V3114, P510
   Fu X., 2004, Analysis of Interacting BPEL Web Services, P621
   Geist D, 2003, CORR HARDW DES VER M, P21
   Giblin C., 2006, From Regulatory Policies to Event Monitoring Rules: Towards Model-Driven Compliance Automation
   Giblin C., 2005, 18 C LEG KNOWL INF S, P37
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Gordon TF, 2008, LECT NOTES ARTIF INT, V4884, P162, DOI 10.1007/978-3-540-85569-9_11
   Governatori Guido, 2011, Rule-Based Modeling and Computing on the Semantic Web. Proceedings 5th International Symposium, RuleML 2011 - America, P282, DOI 10.1007/978-3-642-24908-2_29
   Governatori G, 2008, AUTON AGENT MULTI-AG, V17, P36, DOI 10.1007/s10458-008-9030-4
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2011, LECT NOTES ARTIF INT, V6814, P364, DOI 10.1007/978-3-642-22359-4_25
   Gruhn V, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P189, DOI 10.1109/TIME.2005.33
   Hallé S, 2009, IEEE T SOFTWARE ENG, V35, P669, DOI 10.1109/TSE.2009.29
   Hartman T.E., 2006, COST BEING PUBLIC ER
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Khaluf Lial, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P521, DOI 10.1007/978-3-642-21640-4_39
   Konrad S., 2005, INT C SOFTW ENG ICSE, P15
   Kühne S, 2010, J SOFTW MAINT EVOL-R, V22, P547, DOI 10.1002/smr.517
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   Ly LT, 2012, INFORM SYST FRONT, V14, P195, DOI 10.1007/s10796-009-9185-9
   Markovic Ivan, 2008, BUSINESS PROCESS MOD, P1703
   OCEG, 2009, GRC CAP MOD VER 2 0
   Palmirani M., 2011, Proceedings of the thirteenth international conference on artificial intelligence and law, P131
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Pesic M., 2006, BPM 06 WORKSH
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ramezani E, 2012, LECT NOTES COMPUT SC, V7481, P262, DOI 10.1007/978-3-642-32885-5_21
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Sebahi S, 2012, BUSINESS PROCESS COM
   Turetken O., 2011, 19 EUR C INF SYST EC
   Turetken O, 2012, IEEE SOFTWARE, V29, P28, DOI 10.1109/MS.2012.45
   Wang HJ, 2011, DECIS SUPPORT SYST, V51, P562, DOI 10.1016/j.dss.2011.03.001
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   Yu J, 2006, LECT NOTES COMPUT SC, V4255, P156
   Yu J, 2008, J COMPUT SCI TECH-CH, V23, P885, DOI 10.1007/s11390-008-9196-x
NR 66
TC 59
Z9 66
U1 4
U2 57
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 119
EP 146
DI 10.1007/s10270-014-0395-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mosterman, PJ
   Zander, J
AF Mosterman, Pieter J.
   Zander, Justyna
TI Cyber-physical systems challenges: a needs analysis for collaborating
   embedded software systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Computation; Embedded systems; Challenges;
   Internet of Things; Modeling and simulation
ID TIME
AB Embedding computing power in a physical environment has provided the functional flexibility and performance necessary in modern products such as automobiles, aircraft, smartphones, and more. As product features came to increasingly rely on software, a network infrastructure helped factor out common hardware and offered sharing functionality for further innovation. A logical consequence was the need for system integration. Even in the case of a single original end manufacturer who is responsible for the final product, system integration is quite a challenge. More recently, there have been systems coming online that must perform system integration even after deployment-that is, during operation. This has given rise to the cyber-physical systems (CPS) paradigm. In this paper, select key enablers for a new type of system integration are discussed. The needs and challenges for designing and operating CPS are identified along with corresponding technologies to address the challenges and their potential impact. The intent is to contribute to a model-based research agenda in terms of design methods, implementation technologies, and organization challenges necessary to bring the next-generation systems online.
C1 [Mosterman, Pieter J.] MathWorks, 3 Apple Hill Dr, Natick, MA 01760 USA.
   [Zander, Justyna] Worcester Polytech Inst, Worcester, MA 01609 USA.
C3 MathWorks; Worcester Polytechnic Institute
RP Zander, J (corresponding author), Worcester Polytech Inst, Worcester, MA 01609 USA.
EM pieter.mosterman@mathworks.com; justyna.zander@gmail.com
RI Zander, Justyna/C-8207-2013
OI Zander, Justyna/0000-0001-7215-0962
CR [Anonymous], CYB PHYS SYST DRIV F
   Arrieta Aitor, 2014, 6 INT C ADV SYST TES, P66
   Atkinson C, 2010, COMM COM INF SC, V69, P206
   Baillieul J, 2007, P IEEE, V95, P9, DOI 10.1109/JPROC.2006.887290
   Balarin F., 2009, MODEL BASED DESIGN E, P259
   Basanta-Val P, 2013, SOFTWARE PRACT EXPER, V43, P33, DOI 10.1002/spe.2101
   Bencomo N., 2014, MODELS RUNTIME FDN A, V8378
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cooklev T, 2007, IEEE T INSTRUM MEAS, V56, P1632, DOI 10.1109/TIM.2007.903640
   Dai Z. R., 2006, THESIS TU BERLIN BER
   Di Natale M., 2012, COMPUTATIONAL ANAL S, P523
   DORF RC, 1987, MODERN CONTROL SYSTE
   Ferris J. B., 1995, 1995 International Conference on Bond Graph Modeling and Simulation (ICBGM '95). Proceedings of the 1995 Western MultiConference, P43
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   France R, 2013, SOFTW SYST MODEL, V12, P223, DOI 10.1007/s10270-013-0346-4
   Valls MG, 2013, IEEE T IND INFORM, V9, P228, DOI 10.1109/TII.2012.2198662
   Gu Z., 2012, J. Softw. Eng. Appl, V5, P277, DOI [10.4236/jsea.2012.54033, DOI 10.4236/JSEA.2012.54033]
   Hoffert Joe, 2007, Proceedings of the 45th ACM Southeast Conference. ACMSE 07, P355, DOI 10.1145/1233341.1233406
   Horrocks I, 2011, HANDBOOK OF SEMANTIC WEB TECHNOLOGIES: FOUNDATIONS AND TECHNOLOGIES, VOLS 1 AND 2, P365, DOI 10.1007/978-3-540-92913-0_9
   Huang YL, 2010, PROCEDIA COMPUT SCI, V1, P1253, DOI 10.1016/j.procs.2010.04.140
   Jiang Z., 2014, MLAB70 U PENNS
   Kaiser B, 2010, LECT NOTES COMPUT SC, V6351, P452, DOI 10.1007/978-3-642-15651-9_33
   Kaiser Bernhard., 2003, Safety Critical Systems and Software 2003, Eigth Australian Workshop on Safety-Related Programmable Systems, V33, P37
   Khadka R, 2011, LECT NOTES BUS INF P, V76, P177
   Krishnamurthy Y, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P121, DOI 10.1109/RTTAS.2004.1317256
   Lee E.A, 2012, PERF METR INT SYST P
   Leitner Philipp, 2013, 2013 5th International Workshop on Principles of Engineering Service-Oriented Systems (PESOS), P45, DOI 10.1109/PESOS.2013.6635977
   Levinson J, 2013, ROBOTICS SCI SYSTEMS
   Liu J., 2005, MSRTR200528
   McLean T, 2004, CONCURR COMP-PRACT E, V16, P1483, DOI 10.1002/cpe.874
   Miller S.P., 2005, NASACR2005213912 LAN
   Mosterman P.J., 2016, SOFTW SYST MODEL, V15
   Mosterman P.J., 2004, P IN CDEN DES C CDEN
   Mosterman P. J., 2011, P 4 INT WORKSH EQ BA, P3
   Mosterman P.J., 2005, P 2 CDEN INT C DES E
   Mosterman P.J., 2007, P 2007 FRONT ED C FI
   Mosterman P.J., 2015, GITHUB REPOSITORY TO, DOI [10.5281/zenodo.13977, DOI 10.5281/ZENODO.13977]
   Mosterman P.J., 2013, P 1 WORKSH CYB PHYS
   Mosterman PJ, 2014, ANNU REV CONTROL, V38, P259, DOI 10.1016/j.arcontrol.2014.09.008
   Mosterman PJ, 2014, COMPUT SCI ENG, V16, P90, DOI 10.1109/MCSE.2014.58
   Mosterman PJ, 2012, CONTROL ENG PRACT, V20, P2, DOI 10.1016/j.conengprac.2011.04.013
   Mosterman PJ, 2002, SIMUL-T SOC MOD SIM, V78, P5, DOI 10.1177/0037549702078001197
   Mosterman PJ, 2000, PROCEEDINGS OF THE 2000 IEEE INTERNATIONAL SYMPOSIUM ON COMPUTER-AIDED CONTROL SYSTEM DESIGN, P65, DOI 10.1109/CACSD.2000.900188
   Mosterman PJ, 2000, LECT NOTES COMPUT SC, V1790, P324
   Muller G., 2007, 17 INT S INT COUNC S
   Nicolescu G., 2009, Model-Based Design for Embedded Systems
   Palattella MR, 2013, IEEE COMMUN SURV TUT, V15, P1389, DOI 10.1109/SURV.2012.111412.00158
   Pérez H, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2532636
   Popovici K., 2012, REAL TIME SIMULATION
   President's Council of Advisors on Science and Technology, 2007, TECHNICAL REPORT
   Quigley M., 2009, ICRA WORKSH OP SOUR
   Sameh A, 1996, ACM COMPUT SURV, V28, P810, DOI 10.1145/242223.246865
   Sanders JW, 2012, FORM ASP COMPUT, V24, P45, DOI 10.1007/s00165-011-0190-7
   Schmidt D.C., 2008, DISTRIBUTED SOFTWARE
   Seceleanu T, 2013, COMPUTER, V46, P68, DOI 10.1109/MC.2013.297
   Smith B, 2012, TECHNICAL REPORT
   Song Zhexuan., 2010, INTERNET THINGS IOT, P1, DOI DOI 10.1109/IOT.2010.5678448
   Steering Committee for Foundations in Innovation for Cyber-Physical Systems, 2013, TECHNICAL REPORT
   Stein J. L., 1995, 1995 International Conference on Bond Graph Modeling and Simulation (ICBGM '95). Proceedings of the 1995 Western MultiConference, P109
   Sullivan M., 2007, GAO07360
   Taylor S.J., 2013, Proceedings of the Symposium on Theory of Modeling Simulation-DEVS Integrative MS Symposium, P34
   Tsai WT, 2006, SOSE 2006: SECOND IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING, PROCEEDINGS, P49
   Uhrmacher A. M, 2009, MULTIAGENT SYSTEMS S
   Waibel M, 2011, IEEE ROBOT AUTOM MAG, V18, P69, DOI 10.1109/MRA.2011.941632
   Zander J., 2015, NIST SPECIAL PUBLICA, V1191, P246, DOI [10.6028/NIST.SP.1191, DOI 10.6028/NIST.SP.1191]
   Zhang YF, 2010, IEEE T PARALL DISTR, V21, P393, DOI 10.1109/TPDS.2009.67
   [No title captured]
NR 67
TC 52
Z9 56
U1 0
U2 23
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2016
VL 15
IS 1
BP 5
EP 16
DI 10.1007/s10270-015-0469-x
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DC1WR
UT WOS:000369009200002
DA 2024-07-18
ER

PT J
AU Balaban, M
   Maraee, A
   Sturm, A
   Jelnov, P
AF Balaban, Mira
   Maraee, Azzam
   Sturm, Arnon
   Jelnov, Pavel
TI A pattern-based approach for improving model quality
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Anti-patterns; Pattern languages; Pattern awareness; Experiments;
   Modeling problems; Analysis capabilities; Software engineering
   education; Correctness; Quality
AB UML class diagrams play a central role inmodeling activities, and it is essential that class diagrams keep their high quality all along a product life cycle. Correctness problems in class diagrams are mainly caused by complex interactions among class-diagram constraints. Detection, identification, and repair of such problems require background training. In order to improve modelers' capabilities in these directions, we have constructed a catalog of anti-patterns of correctness and quality problems in class diagrams, where an anti-pattern analyzes a typical constraint interaction that causes a correctness or a quality problem and suggests possible repairs. This paper argues that exposure to correctness anti-patterns improvesmodeling capabilities. The paper introduces the catalog and its pattern language, and describes experiments that test the impact of awareness to modeling problems in class diagrams (via concrete examples and anti-patterns) on the analysis capabilities of modelers. The experiments show that increased awareness implies increased identification. The improvement is remarkably noticed when the awareness is stimulated by anti-patterns, rather than by concrete examples.
C1 [Balaban, Mira; Maraee, Azzam] Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
   [Maraee, Azzam] Ben Gurion Univ Negev, Deutsch Telekom Labs, IL-84105 Beer Sheva, Israel.
   [Sturm, Arnon] Ben Gurion Univ Negev, Informat Syst Engn, IL-84105 Beer Sheva, Israel.
   [Jelnov, Pavel] Tel Aviv Univ, Eitan Berglas Sch Econ, IL-69978 Tel Aviv, Israel.
C3 Ben Gurion University; Ben Gurion University; Deutsche Telekom AG; Ben
   Gurion University; Tel Aviv University
RP Maraee, A (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
EM mira@cs.bgu.ac.il; mari@cs.bgu.ac.il; sturm@bgu.ac.il;
   pavlikjel@gmail.com
RI Balaban, Mira/AAD-2603-2019; STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Alexander C., 1979, The timeless way of building, V1
   Ali M.A., 1981, J INSTRUCTIONAL DEV, V5, P2, DOI DOI 10.1007/BF02905289
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Balaban M, 2011, LECT NOTES COMPUT SC, V6981, P517, DOI 10.1007/978-3-642-24485-8_38
   Balaban M, 2010, INT J INF SYST MODEL, V1, P24, DOI 10.4018/jismd.2010100102
   Ballis D, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P51, DOI 10.1109/ITNG.2008.227
   Ballis D, 2008, ELECTRON NOTES THEOR, V219, P51, DOI 10.1016/j.entcs.2008.10.034
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   BGU Modeling Group, 2011, FINITESATUSE CLASS D
   BGU Modeling Group, 2010, CAT UML CLASS DIAGR
   Bolloju N., 2009, 18 INT C INF SYST DE
   Borchers J., 2001, PATTERN APPROACH INT
   Bottoni Paolo, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P235, DOI 10.1109/VLHCC.2010.40
   Bottoni P., 2010, ARXIV10033338
   Bottoni P, 2010, INFORM SOFTWARE TECH, V52, P821, DOI 10.1016/j.infsof.2010.03.005
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2008, COMPUT EDUC, V51, P1007, DOI 10.1016/j.compedu.2007.10.003
   Commission E., 2008, E LEN PROJ
   DELLA L, 2000, P AUSTR C COMP ED ME, P56
   Dewan P., 2005, SIGCSE Bulletin, V37, P482, DOI 10.1145/1047124.1047498
   Eden A., 2007, TECHNICAL REPORT, P1744
   Eden AH, 2013, FORM METHOD SYST DES, V43, P1, DOI 10.1007/s10703-012-0181-1
   Eden A.H., 2011, CODECHARTS ROADMAPS
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Elaasar M., SOFTWARE SY IN PRESS
   Elaasar M., 2010, Metamodeling Anti-Patterns
   Elaasar M., 2010, SCE1002 CARL U
   Elaasar M., 2012, THESIS
   Elaasar M, 2006, LECT NOTES COMPUT SC, V4199, P484
   Elaasar M, 2011, LECT NOTES COMPUT SC, V6698, P282, DOI 10.1007/978-3-642-21470-7_20
   Figl K, 2010, J VISUAL LANG COMPUT, V21, P359, DOI 10.1016/j.jvlc.2010.08.009
   Fowler M., 1997, ANAL PATTERNS REUSAB
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma Erich., 1995, DESIGN PATTERNS ELEM, V206
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Haack Paul., 1972, Journal of Research in Music Education, V20, P456
   Henninger S., 2007, P 14 C PATT LANG PRO, P14
   Huang H, 2008, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE FOR YOUNG COMPUTER SCIENTISTS, VOLS 1-5, P2422, DOI 10.1109/ICYCS.2008.127
   Jalil M., 2008, INT S INF TECHN 2008, V1, P1
   Kim D.-K., 2007, Design Pattern Formalization Techniques, P183
   Kim DK, 2007, J VISUAL LANG COMPUT, V18, P560, DOI 10.1016/j.jvlc.2007.02.009
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kotze P., 2006, P 1 JOINT BCS IFIP W
   Kotzé P, 2008, COMPUT EDUC, V50, P979, DOI 10.1016/j.compedu.2006.10.003
   LeGuennec A., 2004, LNCS, V482-496, P482
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Llano MT, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P39, DOI 10.1109/ICSEA.2009.15
   Makarenkov V., 2009, MODEVVA 09, P1
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   Maplesden D., 2001, P IEEE 338
   Maraee A., 2008, MCCM08
   Maraee A., 2012, MODELS 2012
   Maraee A., 2012, THESIS
   Maraee A, 2009, MBSE: 2009 INTERNATIONAL CONFERENCE ON MODEL-BASED SYSTEMS ENGINEERING, P1, DOI 10.1109/MBSE.2009.5031714
   Mens T, 2001, PROC IEEE INT CONF S, P570, DOI 10.1109/ICSM.2001.972774
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nicholson J., 2009, P 1 NASA FORM METH S, P76
   OMG, 2011, UML 2 4 SUP SPEC SPE
   OMG, 2012, OMG Object Constraint Language (OCL), Version 2.3.1
   OMG, 2011, MOF QUER VIEW TRANSF
   PECINOVSKY R., 2006, ACM SIGCSE Bulletin, V38, P188
   Richle D, 2011, LECT NOTES COMPUT SC, V6510, P1, DOI 10.1007/978-3-642-19432-0_1
   Rising L., 2001, DESIGN PATTERNS COMM
   Stamelos I., 2011, Proceedings of the 2011 15th Panhellenic Conference on Informatics (PCI 2011), P8, DOI 10.1109/PCI.2011.21
   Stuurman S., 2004, SIGCSE Bulletin, V36, P151, DOI 10.1145/1026487.1008037
   Taib T., 2007, DESIGN PATTERNS FORM
   Tanriöver ÖÖ, 2011, COMPUT STAND INTER, V33, P448, DOI 10.1016/j.csi.2010.12.001
   Tanriover R., 2008, THESIS
   The AntiPatterns Group, 2010, ANTIPATTERNS CAT
   The Hillside Group, 2010, SOFTW PATT
   Wai Ming Ho, 1999, 14th IEEE International Conference on Automated Software Engineering, P275, DOI 10.1109/ASE.1999.802320
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wick M., 2005, 36 TECHN S COMP SCI
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 78
TC 9
Z9 11
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1527
EP 1555
DI 10.1007/s10270-013-0390-0
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900011
DA 2024-07-18
ER

PT J
AU Hassine, J
AF Hassine, Jameleddine
TI Describing and assessing availability requirements in the early stages
   of system development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Non-functional requirements; Availability; URN; Use Case Maps;
   Availability analysis; Architectural tactics
ID RELIABILITY
AB Non-functional aspects such as timing constraints, availability, and fault tolerance are critical in the design and implementation of distributed real-time systems. As a result, it is becoming crucial to model and analyze nonfunctional requirements at the early stages of the software development life cycle. The widespread interest in dependability modeling and analysis techniques at the requirements phase provides the major motivation for this research. This paper presents a novel approach to describe and validate high-level availability requirements using theUse Case Maps (UCM) language of the ITU-T User Requirements Notation standard. The proposed approach relies on a mapping of availability architectural tactics to UCM models. The resulting extensions are described using a metamodel and are implemented within the jUCMNav tool. Early assessment and characterization of the means to achieve availability are then performed using amatrix representation allowing for feature-based availability composition and reasoning. We demonstrate the applicability of our approach through a case study of lawful intercept andACL-based forwarding features on IP routers.
C1 [Hassine, Jameleddine] KFUPM, Dept Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Hassine, J (corresponding author), KFUPM, Dept Comp Sci, Dhahran 31261, Saudi Arabia.
EM jhassine@kfupm.edu.sa
RI Hassine, Jameleddine/E-5940-2015
OI Hassine, Jameleddine/0000-0001-8170-9860
FU Deanship of Scientific Research at King Fahd University of Petroleum &
   Minerals (KFUPM) [FT101011]
FX Dr. Jameleddine Hassine would like to acknowledge the support provided
   by the Deanship of Scientific Research at King Fahd University of
   Petroleum & Minerals (KFUPM) for funding this work through project No.
   FT101011.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   [Anonymous], 2010, JUCMNAV V4 4 0 JUCMN
   [Anonymous], 2008, E800 ITU T
   [Anonymous], 1994, Fault Tolerance in Distributed Systems
   [Anonymous], 3924 RFC
   [Anonymous], 2012, Z1511012 ITU T
   [Anonymous], 1992, Dependability: Basic Concepts and Terminology
   ANSI/IEEE: Standard Glossary of Software Engineering Terminology, 1991, STD7291991 ANSI IEEE
   AsmL, 2011, MICR RES ABSTR STAT
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bernardi Simona, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P15, DOI 10.1007/978-3-642-24270-0_2
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardi S, 2008, LECT NOTES COMPUT SC, V5301, P736, DOI 10.1007/978-3-540-87875-9_51
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Chen D, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P337, DOI 10.1109/DSN.2002.1028918
   Dal Cin M., 2003, Proceedings. Ninth IEEE International Workshop on Object-Oriented Real-Time Dependable Systems, P325
   Forum S. A., SAIAISAMFB0401
   Forum S. A., SAIAISSMFA0102
   GOKHALE SS, 2005, SOFTW ENG WORKSH 200, P47
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Hassine Jameleddine, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P54, DOI 10.1007/978-3-642-25264-8_6
   Hassine J., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P754, DOI 10.1109/ITNG.2011.133
   Hassine J., 2008, THESIS
   Hassine J, 2007, LECT NOTES COMPUT SC, V4745, P225
   Hassine J, 2006, LECT NOTES COMPUT SC, V4320, P99
   Hassine J, 2009, LECT NOTES COMPUT SC, V5719, P98, DOI 10.1007/978-3-642-04554-7_7
   Hatebur D, 2009, LECT NOTES COMPUT SC, V5775, P311, DOI 10.1007/978-3-642-04468-7_25
   IBE OC, 1989, IEEE T RELIAB, V38, P146, DOI 10.1109/24.24588
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Kaâniche M, 2001, IEEE IC COMP COM NET, P40, DOI 10.1109/ICCCN.2001.956217
   Kanoun K, 1999, IEEE T COMPUT, V48, P528, DOI 10.1109/12.769435
   Montecchi L., 2011, 2011 IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops, P254, DOI 10.1109/ISORCW.2011.32
   Mustafiz S, 2008, SOFTW SYST MODEL, V7, P487, DOI 10.1007/s10270-008-0084-1
   OMG: Object Management Group, 2008, V11080405 OMG
   Pai GJ, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P243, DOI 10.1109/ISSRE.2002.1173261
   Petriu D, 2003, LECT NOTES COMPUT SC, V2708, P18
   Rossebo J. E. Y., 2006, QUALITY PROTECTION S
   SA Forum, APPL INTERFACE SPECI
   Scott J., 2009, TECHNICAL REPORT
   Shooman M., 1983, MCGRAW HILL COMPUTER
   Sun HR, 2001, 2001 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P241, DOI 10.1109/PRDC.2001.992704
   Trivedi KS, 2009, I C DES RELIABL COMM, P11, DOI 10.1109/DRCN.2009.5340029
   Yin L, 2002, P REL MAINT S, P584, DOI 10.1109/RAMS.2002.981706
NR 45
TC 4
Z9 6
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1455
EP 1479
DI 10.1007/s10270-013-0382-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900008
DA 2024-07-18
ER

PT J
AU van der Aalst, WMP
AF van der Aalst, W. M. P.
TI Business process management as the "Killer App" for Petri nets
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Petri nets; Process modeling; Process
   mining
AB Since their inception in 1962, Petri nets have been used in a wide variety of application domains. Although Petri nets are graphical and easy to understand, they have formal semantics and allow for analysis techniques ranging from model checking and structural analysis to process mining and performance analysis. Over time Petri nets emerged as a solid foundation for Business Process Management (BPM) research. The BPM discipline develops methods, techniques, and tools to support the design, enactment, management, and analysis of operational business processes. Mainstream business process modeling notations and workflow management systems are using token-based semantics borrowed from Petri nets. Moreover, state-of-the-art BPM analysis techniques are using Petri nets as an internal representation. Users of BPM methods and tools are often not aware of this. This paper aims to unveil the seminal role of Petri nets in BPM.
C1 [van der Aalst, W. M. P.] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
   [van der Aalst, W. M. P.] Queensland Univ Technol, Business Proc Management Discipline, Brisbane, Qld 4001, Australia.
   [van der Aalst, W. M. P.] Natl Res Univ, Higher Sch Econ, Int Lab Proc Aware Informat Syst, Moscow, Russia.
C3 Eindhoven University of Technology; Queensland University of Technology
   (QUT); HSE University (National Research University Higher School of
   Economics)
RP van der Aalst, WMP (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   Ter Hofstede A.H. M., 2010, Modern business process automation: YAWL and its support environment, DOI DOI 10.1007/978-3-642-03121-2
   Van den Brink W., 2013, ISRN SOFTW ENG, P1, DOI DOI 10.1155/2013/507984
   van der Aalst W., 2011, Modeling Business Processes: A Petri Net Oriented Approach
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
NR 9
TC 23
Z9 24
U1 0
U2 31
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 685
EP 691
DI 10.1007/s10270-014-0424-2
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400010
OA Green Published
DA 2024-07-18
ER

PT J
AU Steimann, F
AF Steimann, Friedrich
TI From well-formedness to meaning preservation: model refactoring for
   almost free
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model refactoring; Constraints
AB Modelling languages such as the UML specify well-formedness as constraints on models. For the refactoring of a model to be correct, it must take these constraints into account and check that they are still satisfied after the refactoring has been performed-if not, execution of the refactoring must be refused. By replacing constraint checking with constraint solving, we show how the role of constraints can be lifted from permitting or denying a tentative refactoring to computing additional model changes required for the refactoring to be executable. Thus, to the degree that the semantics of a modelling language is specified using constraints, refactorings based on these constraints are guaranteed to be meaning preserving. To be able to exploit constraints available in the form of a language's well-formedness rules for refactoring, we present a mapping from these rules to the constraint rules required by constraint-based refactoring. Where there are no gaps between well-formedness and (static) semantics of a modelling language, these mappings enable structural refactorings of models at no extra cost; where there are, we identify ways of detecting and filling the gaps.
C1 Fernuniv, Lehrgebiet Programmiersyst, D-58084 Hagen, Germany.
C3 Fern University Hagen
RP Steimann, F (corresponding author), Fernuniv, Lehrgebiet Programmiersyst, D-58084 Hagen, Germany.
EM steimann@acm.org
OI Steimann, Friedrich/0000-0002-8887-134X
FU Deutsche Forschungsgemeinschaft (DFG) [STE 906/4-1]
FX The work described in this article has been supported by the Deutsche
   Forschungsgemeinschaft (DFG) under grant STE 906/4-1. The author thanks
   Thomas Kuhne for his comments on an earlier version of this article.
CR Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   [Anonymous], 2003, Practical Foundations of Business and System Specifications
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gheyi R., 2005, ASE
   Griswold William G., 1992, Program Restructuring as an Aid to Software Maintenance
   Heimann J, 2010, LECT NOTES COMPUT SC, V6395, P78
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Palsberg J., 1994, OBJECT ORIENTED TYPE
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Pretschner A, 2007, SOFTW SYST MODEL, V6, P381, DOI 10.1007/s10270-006-0037-5
   Russell S., 2003, NORVEL ARTIFICIAL IN
   Schafer M, 2010, THESIS OXFORD U COMP
   Steimann F, 2012, IEEE INT CONF AUTOM, P290, DOI 10.1145/2351676.2351726
   Steimann F, 2011, LECT NOTES COMPUT SC, V6813, P255, DOI 10.1007/978-3-642-22655-7_13
   Steimann F, 2012, LECT NOTES COMPUT SC, V7313, P535, DOI 10.1007/978-3-642-31057-7_24
   Steimann F, 2011, LECT NOTES COMPUT SC, V6981, P440, DOI 10.1007/978-3-642-24485-8_32
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
NR 24
TC 12
Z9 15
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 307
EP 320
DI 10.1007/s10270-013-0314-z
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100018
DA 2024-07-18
ER

PT J
AU Feinerer, I
   Salzer, G
AF Feinerer, Ingo
   Salzer, Gernot
TI Numeric semantics of class diagrams with multiplicity and uniqueness
   constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model engineering; Formal methods; Reasoning about class diagrams;
   Integer linear programming; Configuration management
ID UML CLASS DIAGRAMS; CONSISTENCY
AB We translate class diagrams with multiplicity constraints and uniqueness attributes to inequalities over non-negative integers. Based on this numeric semantics we check the satisfiability and consistency of class diagrams and compute minimal models. We show that this approach is efficient and provides succinct user feedback in the case of errors. In an experimental section we demonstrate that general off-the-shelf solvers for integer linear programming perform as well on real-world and synthetic benchmarks as specialised algorithms do, facilitating the extension of the formal model by further numeric constraints like cost functions. Our results are embedded in a research programme on reasoning about class diagrams and are motivated by applications in configuration management. Compared to other (for instance logic-based) approaches our aim is to hide the complexity of formal methods behind familiar user interfaces like class diagrams and to concentrate on problems that can be solved efficiently in order to be able to provide immediate feedback to users.
C1 [Feinerer, Ingo; Salzer, Gernot] Vienna Univ Technol, A-1060 Vienna, Austria.
C3 Technische Universitat Wien
RP Feinerer, I (corresponding author), Vienna Univ Technol, A-1060 Vienna, Austria.
EM ingo.feinerer@tuwien.ac.at; gernot.salzer@tuwien.ac.at
OI Feinerer, Ingo/0000-0001-7656-8338; Salzer, Gernot/0000-0002-8950-1551
CR Ali A.B.H., 2006, Information and Communication Technologies, V2, P3599
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Andre P., 2000, PROTOSTARS PLANETS 4, P1
   [Anonymous], LNCS
   [Anonymous], THESIS VIENNA U TECH
   [Anonymous], P VERIFY WORKSH FED
   Artale A, 2007, LECT NOTES COMPUT SC, V4801, P277
   Artale A., 2008, DL 2009 CEUR WORKSH, V477
   Aschinger M., 2011, P 2 WORKSH LOG COMP
   Baader F., 2003, DESCRIPTION LOGIC HD
   Balaban M, 2006, LECT NOTES COMPUT SC, V4032, P71
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Boufares F, 2004, INFORM SCIENCES, V163, P263, DOI 10.1016/j.ins.2003.06.015
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Calì A, 2002, LECT NOTES ARTIF INT, V2366, P503
   Calvanese D, 1999, J ARTIF INTELL RES, V11, P199, DOI 10.1613/jair.548
   Cormen T.H., 1989, Introduction to Algorithms
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Falkner Andreas, 2010, International Journal of Mass Customisation, V3, P351, DOI 10.1504/IJMASSC.2010.037650
   Feinerer I, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P411
   Feinerer I, 2011, LECT NOTES COMPUT SC, V6981, P379, DOI 10.1007/978-3-642-24485-8_27
   Felfernig A., 2002, P RULEML 2002 CEUR W, V60
   Genova G., 2002, SOFTW SYST MODEL, V1, P86
   Hartmann S, 2000, LECT NOTES COMPUT SC, V1762, P136
   Hartmann S., 2001, LNCS, P241
   Kaneiwa K, 2006, LECT NOTES COMPUT SC, V3861, P219
   Kim SK, 1999, LECT NOTES COMPUT SC, V1723, P83
   Krishnan P, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P162, DOI 10.1109/APSEC.2000.896695
   LAGARIAS JC, 1985, SIAM J COMPUT, V14, P196, DOI 10.1137/0214016
   LENZERINI M, 1990, INFORM SYST, V15, P453, DOI 10.1016/0306-4379(90)90048-T
   Niederbrucker G., 2010, THESIS TU WIEN
   Object Management Group, 2012, UN MOD LANG 2 3 1 OB
   Object Management Group, 2011, UN MOD LANG 2 4 1 SU
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   Richters M, 2000, LECT NOTES COMPUT SC, V1939, P265
   Rosati R, 2008, LECT NOTES COMPUT SC, V5021, P215
   Satoh K, 2006, IEEE INT CONF AUTOM, P277
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Szlenk M, 2008, LECT NOTES COMPUT SC, V5082, P129
   Szlenk M, 2006, DEPCOS-RELCOMEX 2006, P51
   The Alliance for Telecommunications Industry Solutions, 2000, ATIS TEL GLOSS
NR 43
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1167
EP 1187
DI 10.1007/s10270-012-0294-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600013
DA 2024-07-18
ER

PT J
AU Tambouris, E
   Kaliva, E
   Liaros, M
   Tarabanis, K
AF Tambouris, Efthimios
   Kaliva, Eleni
   Liaros, Michail
   Tarabanis, Konstantinos
TI A reference requirements set for public service provision enterprise
   architectures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE E-government; Public service provision; Requirements engineering;
   Enterprise architecture; ArchiMate
ID E-GOVERNMENT; SECURITY REQUIREMENTS; INFRASTRUCTURE; FRAMEWORK
AB Electronic Government (eGov) is a political priority worldwide. One of the core objectives of eGov is the online public services provision (PSP). However, many of eGov PSP systems fail in realizing their objectives. Enterprise Architectures (EA) could contribute to overcome some of the relevant obstacles. The objective of this paper is to derive a reference requirements set for eGov PSP that can be used in EA development. Aiming at capitalizing on existing knowledge, we conduct a systematic literature review on eGov PSP systems requirements. This results in identifying a unified requirements set, i.e. 186 requirements, and stakeholders set, i.e. 19 stakeholders, for eGov PSP systems. Based on these findings, we determine 16 overview use cases demonstrating the basic functionality of such systems. Our findings are modeled using ArchiMate 2.0 notation. The identified requirements set can be used by virtually any public organization providing public services for developing its own EA. As a result, it can lead to the reduction of eGov PSP project failures, the decrease of software development costs and the improvement of its effectiveness and quality. Furthermore, it can be used as a basis to develop a complete reference EA for the eGov PSP domain.
C1 [Tambouris, Efthimios; Kaliva, Eleni; Liaros, Michail; Tarabanis, Konstantinos] Univ Macedonia, Thessaloniki, Greece.
C3 University of Macedonia
RP Tambouris, E (corresponding author), Univ Macedonia, Thessaloniki, Greece.
EM tambouris@uom.gr
RI Tambouris, Efthimios/F-3851-2011; Tambouris, Efthimios/ISA-7828-2023
OI Tarabanis, Konstantinos/0000-0002-4663-2113; Tambouris,
   Efthimios/0000-0001-8036-9788; Kaliva, Eleni/0000-0003-0998-4299
CR Abugessaisa I., 2011, INT J PUBLIC INF SYS, V2011, P11
   Alexander I., 2001, WRITING BETTER REQUI
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2011, TOGAF VERS 9 1
   [Anonymous], 1998, IEEE REC PRACT SOFTW
   [Anonymous], 2010, DIG AG EUR
   [Anonymous], 2006, IMPLEMENTING MANAGIN
   [Anonymous], P 3 INT S NCOSE
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], DIG PUBL SERV EUR PU
   [Anonymous], 2003, Software requirements
   [Anonymous], 2007, HICSS 2007 IEEE COMP
   Berenbach B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ICGSE.2006.261238
   Bresciani P, 2003, LECT NOTES COMPUT SC, V2814, P217
   Cao J, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT AND ENGINEERING, PROCEEDINGS, P683, DOI 10.1109/ICIME.2009.55
   CapGemini, 2005, STUD STAK REQ PAN EU
   Christiansen P., 2007, J ENTERPRISE ARCHITE, V3, P8
   Chutimaskul W, 2003, LECT NOTES COMPUT SC, V2739, P496
   *CIO COUNC, 1999, FED ARCH ENT FRAM V
   Dada D, 2006, ELECTR J INF SYS DEV, V26
   Davey Bill, 2008, Issues in Informing Science and Information Technology, V5, P543
   DAVIS JS, 1989, INFORM SOFTWARE TECH, V31, P472, DOI 10.1016/0950-5849(89)90145-6
   de Jong M, 2006, LECT NOTES COMPUT SC, V4084, P174
   De Meo P, 2008, IEEE T SYST MAN CY C, V38, P686, DOI 10.1109/TSMCC.2008.923889
   Dennis Alan., 2005, SYSTEM ANAL DESIGN U, VSecond
   Donzelli P, 2003, LECT NOTES COMPUT SC, V2681, P601
   Dridi F., 2004, P 37 ANN HAW INT C S
   Dürbeck S, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P366
   Ebrahim Z, 2005, BUS PROCESS MANAG J, V11, P589, DOI 10.1108/14637150510619902
   Eeles P., 2005, TECHNICAL REPORT
   European Commission, 2010, EUR EG ACT PLAN 2011
   European Commission, 2009, STUD US EXP LIF EV A
   European Commission, 2008, STUD US SAT IMP EU27
   European Commission, 2010, STUD EGOV SCEN 2020
   European Commission, 2004, MULT CHANN DEL EGOV
   Fugini M.G., 2007, P 2 INT C AV REL SEC
   Garcia AC, 2006, ANNU REV INFORM SCI, V40, P393, DOI 10.1002/aris.1440400117
   Gartner, 2000, 4 PHAS E GOV MOD
   Gartner, 2011, FOR IT SERV 2008 201
   Glassey O, 2002, P 3 IFIP WORKSH KNOW
   Glinz M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P385, DOI 10.1109/RE.2010.73
   Grima-Izquierdo C., 2008, P C ONL DEL DIAC 200
   Gritzalis S, 2000, COMPUT SECUR, V19, P731, DOI 10.1016/S0167-4048(00)08022-6
   Gritzalis S., 2002, P INT C PAR DISTR PR, P127
   Gugliotta A., 2005, AAAI S SEM WEB MEETS
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   IBM, 2001, TECHNICAL REPORT
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   International Telecommunication Union, 2008, US REQ NOT URN LANG
   Irani Z, 2006, P 39 HAW INT C SYST
   Jalote P., 2008, CONSICE INTRO SOFTWA
   Janowski T., 2006, P 8 INT C DIG GOV RE, P292
   Janssen M., 2004, Electron. J. E Gov., V2, P31
   Janssen M., 2011, Social Science Computer Review
   Jiang L, 2008, SOFTW SYST MODEL, V7, P303, DOI 10.1007/s10270-007-0055-y
   Kaliontzoglou A, 2005, ELECTRON COMMER R A, V4, P174, DOI 10.1016/j.elerap.2004.09.002
   Karetsos S, 2011, OPER RES-GER, V11, P59, DOI 10.1007/s12351-009-0060-8
   Kayed Ahmad, 2010, Proceedings of the Fifth International Conference on Internet and Web Applications and Services (ICIW 2010), P396, DOI 10.1109/ICIW.2010.66
   Kim JW, 2006, COMPUTER, V39, P111, DOI 10.1109/MC.2006.398
   Kim S, 2009, GOV INFORM Q, V26, P42, DOI 10.1016/j.giq.2008.09.002
   Klaassen R., 2006, P INT C EL GOV EGOV2
   Krenner J, 2002, LECT NOTES COMPUT SC, V2456, P124
   Lambrinoudakis C, 2003, COMPUT COMMUN, V26, P1873, DOI 10.1016/S0140-3664(03)00082-3
   Layne K, 2001, GOV INFORM Q, V18, P122, DOI 10.1016/S0740-624X(01)00066-1
   Lines L, 2007, UNIVERSAL ACCESS IN HUMAN-COMPUTER INTERACTION: APPLICATIONS AND SERVICES, PT 3, PROCEEDINGS, P932
   Macaulay L.A., 1996, Requirements engineering
   Magoutas B, 2010, EXPERT SYST APPL, V37, P4292, DOI 10.1016/j.eswa.2009.11.071
   Mannion M., 1995, SIGSOFT Software Engineering Notes, V20, P42, DOI 10.1145/224155.224157
   Marzoughi F., 2010, Proceedings 2010 IEEE 7th International Conference on e-Business Engineering (ICEBE 2010), P421, DOI 10.1109/ICEBE.2010.106
   Matheis T., 2008, P MKWI MULT WIRTSCH
   Medjahed B, 2003, IEEE INTERNET COMPUT, V7, P58, DOI 10.1109/MIC.2003.1167340
   Mellado D., 2006, P 11 EUR S RES COMP
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Meneklis B, 2005, Third European Conference on Web Services, Proceedings, P118
   Moon MJ, 2002, PUBLIC ADMIN REV, V62, P424, DOI 10.1111/0033-3352.00196
   Moosa A., 2008, P 2 INT C THEOR PRAC, P52
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Object management group, 2010, SYST MOD LANG
   Ojo A., 2007, 369 UNUIIST
   Ostasius E., 2010, P 16 INT C INF SOFTW
   Peristeras V., 2006, P 2006 AAAI SPR S SE
   Peters R.M., 2004, P 6 INT C EL COMM, P480, DOI DOI 10.1145/1052220.1052281
   Pieterson W, 2007, GOV INFORM Q, V24, P148, DOI 10.1016/j.giq.2005.12.001
   Power N., 2003, Proceedings of the 21st annual international conference on documentation, San Francisco, CA, USA, P86, DOI [10.1145/944885.944887, DOI 10.1145/944885.944887]
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Sadraei E, 2007, REQUIR ENG, V12, P145, DOI 10.1007/s00766-007-0042-4
   Saha P., 2008, Advances in government enterprise architecture
   Savvas I., 2009, IADIS INT J WWW INTE, V7, P152
   Schneider F, 2012, PROCEDIA COMPUT SCI, V8, P201, DOI 10.1016/j.procs.2012.01.043
   STAMPER RK, 1991, J APPL SYSTEMS ANAL, V18, P69
   Tambouris Efthimios, 2008, 2008 Third International Conference on Digital Information Management, P794, DOI 10.1109/ICDIM.2008.4746837
   Terzakis J., 2010, P ICCGI C VAL 20 SEP
   The Access eGov Project, 2006, D2 2 US REQ AN DEV T
   The eGov Project, 2002, DEL D121 SERV PROC M
   The FEA Program Management Office, 2007, FEA CONS REF MOD DOC
   The FIDIS Project, 2009, D16 3 REQ PRIV FRIEN
   The OneStopGov Project, 2007, D2 1 US REQ PLATF AR
   The OntoGov Project, 2004, D4 US REQ SPEC
   The Open Group, 2009, SOA SOURC BOOK
   The Open Group, 2012, ARCH SPEC 2 0
   The SmartGov Project, 2003, D41 US REQ SERV PLAT
   Torres L, 2005, GOV INFORM Q, V22, P217, DOI 10.1016/j.giq.2005.02.004
   Tsai N, 2009, GOV INFORM Q, V26, P368, DOI 10.1016/j.giq.2008.11.007
   Tsumaki T., 2006, Software Process Improvement and Practice, V11, P505, DOI 10.1002/spip.293
   U.S. Department of Commerce, 2006, MIN SEC REQ FED INF
   United Nations, 2010, GLOB E GOV SURV 2010
   van Velsen L, 2008, LECT NOTES COMPUT SC, V5184, P243, DOI 10.1007/978-3-540-85204-9_21
   van Velsen L, 2009, GOV INFORM Q, V26, P477, DOI 10.1016/j.giq.2009.02.007
   Vassilakis C., 2003, Telematics and Informatics, V20, P315, DOI 10.1016/S0736-5853(03)00011-X
   Webster J, 2002, MIS QUART, V26, pXIII
   Wei XJ, 2005, Seventh International Conference on Electronic Commerce, Vols 1 and 2, Selected Proceedings, P525
   Wiegers K., 1999, SOFTW DEV, V7, P11
   Wilson W.M., 1999, Crosstalk J. Def. Softw. Eng, P16
   Wimmer M.A., 2002, Electronic Commerce Research and Applications, V1, P92, DOI DOI 10.1016/S1567-4223(02)00008-X
   Wimmer M.A., 2002, LNCS, P167
   Winkler S., 2007, P 13 INT WORK C REQ
   Wolf P., 2008, P 41 ANN HAW INT C S
   Yang LQ, 2009, ICCSSE 2009: PROCEEDINGS OF 2009 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION, P233, DOI 10.1109/ICCSE.2009.5228454
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zhang Z., 2007, SOFTWARE QUALITY MAN, P225
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 123
TC 10
Z9 13
U1 1
U2 30
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 991
EP 1013
DI 10.1007/s10270-012-0303-7
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AK5YG
UT WOS:000338502600006
DA 2024-07-18
ER

PT J
AU Biehl, M
   El-Khoury, J
   Loiret, F
   Törngren, M
AF Biehl, Matthias
   El-Khoury, Jad
   Loiret, Frederic
   Torngren, Martin
TI On the modeling and generation of service-oriented tool chains
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Domain specific modeling language; Generative approach; Service-oriented
   architecture; Tool integration
ID INTEGRATION
AB Tool chains have grown from ad-hoc solutions to complex software systems, which often have a service-oriented architecture. With service-oriented tool integration, development tools are made available as services, which can be orchestrated to form tool chains. Due to the increasing sophistication and size of tool chains, there is a need for a systematic development approach for service-oriented tool chains. We propose a domain-specific modeling language (DSML) that allows us to describe the tool chain on an appropriate level of abstraction. We present how this language supports three activities when developing service-oriented tool chains: communication, design and realization. A generative approach supports the realization of the tool chain using the service component architecture. We present experiences from an industrial case study, which applies the DSML to support the creation of a service-oriented tool chain. We evaluate the approach both qualitatively and quantitatively by comparing it with a traditional development approach.
C1 [Biehl, Matthias; El-Khoury, Jad; Loiret, Frederic; Torngren, Martin] Royal Inst Technol, Stockholm, Sweden.
C3 Royal Institute of Technology
RP Biehl, M (corresponding author), Royal Inst Technol, Stockholm, Sweden.
EM biehl@md.kth.se
RI Törngren, Martin/ADN-5708-2022
OI Törngren, Martin/0000-0002-4300-885X
CR Altheide F., 2003, WORKSH TOOL INT SYST
   Amelunxen C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P807, DOI 10.1145/1368088.1368206
   [Anonymous], P 10 WORKSH DOM SPEC
   [Anonymous], 2000, Dissertation
   [Anonymous], CAMEL ACTION
   Armengaud E., 2011, SAE 2011 WORLD C EXH
   Asplund F., 2011, FIRST WORKSH INT INF
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Beisiegel M., 2007, TECHNICAL REPORT
   Bell M., 2008, SERV OR MOD SOA SERV
   Biehl M., 2011, ISRNKTHMMKR1116SE RO
   Biehl M., 2012, INT C WEB ENG ICWE20
   Biehl M., 2012, P INT C COMP SCI ICC
   Biehl M., 2010, 3 WORKSH MOD DRIV TO
   Biehl M, 2010, ACM SIGPLAN NOTICES, V45, P125, DOI 10.1145/1755951.1755907
   Brown A. W., 1992, SIGSOFT Software Engineering Notes, V17, P47, DOI 10.1145/140938.140944
   Christie A., 1997, TECHNICAL REPORT
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Eisenecker U., 2000, Generative Programming
   Erl T., 2007, SOA Principles of Service Design
   Falleri JR, 2008, LECT NOTES COMPUT SC, V5301, P326, DOI 10.1007/978-3-540-87875-9_24
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Gilmore S, 2011, SOFTW SYST MODEL, V10, P287, DOI 10.1007/s10270-010-0155-y
   Hein C., 2009, WORKSH FUT TRENDS MO
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hillairet G., 2008, 4 INT WORKSH SEM WEB
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   Ingo W., 2011, MBERTS, V6100, P337
   Johnsto S., 2005, TECHNICAL REPORT
   Kappel G, 2006, LECT NOTES COMPUT SC, V4199, P528
   Kapsammer Elisabeth., 2006, Proceedings of the Modellierung 2006, P11
   Karsai G., 2005, SOFTWARE SYSTEMS MOD, V4, P157, DOI DOI 10.1007/S10270-004-0073-Y
   Kelly S., 2008, Domain-Specific Modeling
   Klar F., 2009, P 5 ECMDA TRAC WORKS, P39
   Konigs Alexander, 2006, Softw. Syst. Model., V5, P349, DOI [10.1007/s10270-006-0016-x, DOI 10.1007/S10270-006-0016-X]
   Kramler Gerhard., 2006, Proceedings of the 2006 international workshop on Global integrated model management, pp, P43
   Kurtev I., 2002, 4 INT S DISTR OBJ AP
   Margaria T, 2005, LECT NOTES COMPUT SC, V3440, P557
   OASIS, 2007, TECHNICAL REPORT
   OMG, 2008, TECHNICAL REPORT
   OMG, 2011, TECHNICAL REPORT
   OMG, 2009, TECHNICAL REPORT
   OSLC Core Specification Workgroup, 2010, TECHNICAL REPORT
   Papadopoulos Y, 1999, LECT NOTES COMPUT SC, V1698, P139
   Potociar M., 2009, TECHNICAL REPORT
   Seinturier L., 2011, SOFTW PRAC EXP
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sztipanovits J., 2011, MBERTS, V6100, P369
   WASSERMAN AL, 1989, P SOFTW ENG ENV INT, P137, DOI DOI 10.1007/3-540-53452-0_38
   Wicks MN, 2007, J SYST SOFTWARE, V80, P1569, DOI 10.1016/j.jss.2007.03.089
   Wicks M. N., 2006, TECHNICAL REPORT
NR 51
TC 13
Z9 13
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2014
VL 13
IS 2
BP 461
EP 480
DI 10.1007/s10270-012-0275-7
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG2HF
UT WOS:000335236300003
DA 2024-07-18
ER

PT J
AU Altevogt, P
   Kiss, T
   Kistler, M
   Rangan, R
AF Altevogt, Peter
   Kiss, Tibor
   Kistler, Mike
   Rangan, Ram
TI Mesoscale performance simulation of multicore processor systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Microprocessor design; Performance simulations; Performance modeling
AB Modern microprocessor design relies heavily on detailed full-chip performance simulations to evaluate complex trade-offs. Typically, different design alternatives are tried out for a specific sub-system or component, while keeping the rest of the system unchanged. We observe that full-chip simulations for such studies is overkill. This paper introduces mesoscale simulation, which employs high-level modeling for the unchanged parts of a design and uses detailed cycle-accurate simulations for the components being modified. This combination of high-level and low-level modeling enables accuracy on par with detailed full-chip modeling while achieving much higher simulation speeds than detailed full-chip simulations. Consequently, mesoscale models can be used to quickly explore vast areas of the design space with high fidelity. We describe a proof-of-concept mesoscale implementation of the memory subsystem of the Cell/B.E. processor and discuss results from running various workloads.
C1 [Altevogt, Peter] IBM Germany Res & Dev GmbH, Boblingen, Germany.
   [Kiss, Tibor] Gamax Ltd, Budapest, Hungary.
   [Kistler, Mike] IBM Res, Austin, TX 78758 USA.
   [Rangan, Ram] Nvidia Corp, Bangalore, Karnataka, India.
C3 International Business Machines (IBM); Nvidia Corporation
RP Altevogt, P (corresponding author), IBM Germany Res & Dev GmbH, Boblingen, Germany.
EM peter.altevogt@de.ibm.com; tibor.kiss@hu.ibm.com; mkistler@us.ibm.com;
   rrangan@nvidia.com
CR [Anonymous], P 10 INT C ARCH SUPP
   [Anonymous], P WORKSH PERF AN ITS
   [Anonymous], P INT S HIGH PERF CO
   [Anonymous], 2000, Simulation Modeling and Analysis
   August D.I., 2007, IEEE COMPUT ARCHIT L
   Banks J., 2010, DISCRETE EVENT SYSTE, V5th ed., DOI DOI 10.2307/1268124
   Bloch G, 2006, QUEUEING NETWORKS MA
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Chiou D., 2007, P 40 INT S MICR MICR
   DENZEL WE, 2008, P 1 INT C SIM TOOLS
   Genbrugge D., 2010, HIGH PERFORMANCE COM, P1
   Hackenberg Daniel., 2007, Fast matrix multiplication on cell (smp) systems
   IPEK E., 2006, P INT C ARCH SUPP PR
   Kahle JA, 2005, IBM J RES DEV, V49, P589, DOI 10.1147/rd.494.0589
   KelinOsowski A., 2002, IEEE COMPUT ARCHIT L, V1
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   Kleinrock L, 1976, Queueing Systems, V2
   Lee W., 2006, P CODES ISSS OCT
   Onder S., 1998, P INT C COMP LANG IC
   Pai VS, 1997, THIRD INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE - PROCEEDINGS, P72, DOI 10.1109/HPCA.1997.569611
   Prete C.A., 1995, IEEE T PARALLEL DIST, V6
   Schnarr E, 1998, ACM SIGPLAN NOTICES, V33, P283, DOI 10.1145/291006.291063
   Tam E.S., 1997, 34897 U MICH
   Vachharajani M., 2002, P 35 INT S MICR
   Wenisch T.F., 2005, P ACM SIGMETRICS INT
   Wild T., 2007, J SYST ARCHIT EUROMI, V53
   WUNDERLICH RE, 2003, P 30 ANN INT S COMP
   2008, CELL BROADBAND ENGIN
NR 28
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 731
EP 744
DI 10.1007/s10270-012-0231-6
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600006
DA 2024-07-18
ER

PT J
AU Díaz, O
   Puente, G
   Izquierdo, JLC
   Molina, JG
AF Diaz, Oscar
   Puente, Gorka
   Canovas Izquierdo, Javier Luis
   Garcia Molina, Jesus
TI Harvesting models from web 2.0 databases
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Web2.0; Harvesting; Data re-engineering;
   Databases
AB Data rather than functionality are the sources of competitive advantage for Web2.0 applications such as wikis, blogs and social networking websites. This valuable information might need to be capitalized by third-party applications or be subject to migration or data analysis. Model-Driven Engineering (MDE) can be used for these purposes. However, MDE first requires obtaining models from the wiki/blog/website database (a.k.a. model harvesting). This can be achieved through SQL scripts embedded in a program. However, this approach leads to laborious code that exposes the iterations and table joins that serve to build the model. By contrast, a Domain-Specific Language (DSL) can hide these "how" concerns, leaving the designer to focus on the "what", i.e. the mapping of database schemas to model classes. This paper introduces Schemol, a DSL tailored for extracting models out of databases which considers Web2.0 specifics. Web2.0 applications are often built on top of general frameworks (a.k.a. engines) that set the database schema (e.g., MediaWiki, Blojsom). Hence, table names offer little help in automating the extraction process. In addition, Web2.0 data tend to be annotated. User-provided data (e.g., wiki articles, blog entries) might contain semantic markups which provide helpful hints for model extraction. Unfortunately, these data end up being stored as opaque strings. Therefore, there exists a considerable conceptual gap between the source database and the target metamodel. Schemol offers extractive functions and view-like mechanisms to confront these issues. Examples using Blojsom as the blog engine are available for download.
C1 [Diaz, Oscar; Puente, Gorka] Univ Basque Country, ONEKIN Res Grp, San Sebastian, Spain.
   [Canovas Izquierdo, Javier Luis; Garcia Molina, Jesus] Univ Murcia, Model UM Res Grp, Murcia, Spain.
   [Garcia Molina, Jesus] Univ Murcia, Modelum Res Grp, Dept Informat & Syst, Murcia, Spain.
C3 University of Basque Country; University of Murcia; University of Murcia
RP Puente, G (corresponding author), Univ Basque Country, ONEKIN Res Grp, San Sebastian, Spain.
EM oscar.diaz@ehu.es; gorka.puente@ehu.es; jlcanovas@um.es; jmolina@um.es
RI Izquierdo, Javier Luis Canovas/JAO-0822-2023; Izquierdo, Javier Luis
   Canovas/E-8940-2016; Diaz, Oscar/T-7269-2019; GARCIA-MOLINA, JESUS
   J/X-7078-2019
OI Izquierdo, Javier Luis Canovas/0000-0002-2326-1700; Diaz,
   Oscar/0000-0003-1334-4761; 
FU Spanish Ministry of Education; European Social Fund
   [TIN2008-06507-C02-01/TIN]; Fundacion Seneca (Spain) [08797/PI/08];
   University of the Basque Country [U07/09]; Fundacion Seneca; Spanish
   Ministry of Science Education
FX This work is co-supported by the Spanish Ministry of Education, and the
   European Social Fund under contract TIN2008-06507-C02-01/TIN (MODELINE);
   Fundacion Seneca (Spain), grant 08797/PI/08 and the University of the
   Basque Country under contract U07/09. Javier Luis Canovas Izquierdo
   enjoys a doctoral grant from the Fundacion Seneca and Gorka Puente has a
   doctoral grant from the Spanish Ministry of Science & Education.
CR [Anonymous], BUSINESS WEEK ONLINE
   Barbier G., 2010, INFORM SYSTEMS TRANS
   Blaha M, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P183, DOI 10.1109/WCRE.1998.723188
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Canovas J. L., 2008, MODSE 2008
   Cook S., 2004, MDA J
   Czarnecki D., BLOJSOM
   Davis KH, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P70, DOI 10.1109/WCRE.2000.891454
   Diaz O, 2010, J SYST SOFTWARE, V83, P1970, DOI 10.1016/j.jss.2010.05.075
   Hainaut J.-L., MENS DEMEYER, P105
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Jahnke JH, 2004, FUZZY SET SYST, V145, P3, DOI 10.1016/j.fss.2003.10.003
   Jahnke JH, 1997, LECT NOTES COMPUT SC, V1301, P193, DOI 10.1145/267896.267911
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2006, OOPSLA COMPANION
   KURTEV I, 2002, INT S DISTR OBJ APPL
   Lockwood N. S., 2008, P 41 ANN HAW INT C S
   Markines B., 2009, SIGWEB NEWSL, P3
   MartSoft, OP CAT FORM
   Mens T., 2008, Software Evolution
   Muller H., 2000, Proceedings of the Future of Software Engineering, P47, DOI [10.1145/336512.336526, DOI 10.1145/336512.336526]
   Polo M, 2007, J SOFTW MAINT EVOL-R, V19, P383, DOI 10.1002/smr.353
   Reus T, 2006, LECT NOTES COMPUT SC, V4066, P213
   Simitsis A., 2009, DATA KNOWLEDGE ENG
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stonebraker M., 1996, OBJECT RELATIONAL DB
   Ulrich WM, 2010, INFORMATION SYSTEMS TRANSFORMATION: ARCHITECTURE-DRIVEN MODERNIZATION CASE STUDIES, pXII
NR 27
TC 9
Z9 9
U1 0
U2 30
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2013
VL 12
IS 1
BP 15
EP 34
DI 10.1007/s10270-011-0194-z
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 090KU
UT WOS:000314978800004
DA 2024-07-18
ER

PT J
AU Zambon, E
   Etalle, S
   Wieringa, RJ
   Hartel, P
AF Zambon, Emmanuele
   Etalle, Sandro
   Wieringa, Roel J.
   Hartel, Pieter
TI Model-based qualitative risk assessment for availability of IT
   infrastructures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Information risk management; Risk assessment; Availability; Information
   security; System modelling
ID REQUIREMENTS
AB For today's organisations, having a reliable information system is crucial to safeguard enterprise revenues (think of on-line banking, reservations for e-tickets etc.). Such a system must often offer high guarantees in terms of its availability; in other words, to guarantee business continuity, IT systems can afford very little downtime. Unfortunately, making an assessment of IT availability risks is difficult: incidents affecting the availability of a marginal component of the system may propagate in unexpected ways to other more essential components that functionally depend on them. General-purpose risk assessment (RA) methods do not provide technical solutions to deal with this problem. In this paper we present the qualitative time dependency (QualTD) model and technique, which is meant to be employed together with standard RA methods for the qualitative assessment of availability risks based on the propagation of availability incidents in an IT architecture. The QualTD model is based on our previous quantitative time dependency (TD) model (Zambon et al. in BDIM '07: Second IEEE/IFIP international workshop on business-driven IT management. IEEE Computer Society Press, pp 75-83, 2007), but provides more flexible modelling capabilities for the target of assessment. Furthermore, the previous model required quantitative data which is often too costly to acquire, whereas QualTD applies only qualitative scales, making it more applicable to industrial practice. We validate our model and technique in a real-world case by performing a risk assessment on the authentication and authorisation system of a large multinational company and by evaluating the results with respect to the goals of the stakeholders of the system. We also perform a review of the most popular standard RA methods and discuss which type of method can be combined with our technique.
C1 [Zambon, Emmanuele; Etalle, Sandro; Wieringa, Roel J.; Hartel, Pieter] Univ Twente, NL-7500 AE Enschede, Netherlands.
   [Etalle, Sandro] Tech Univ Eindhoven, NL-5600 MB Eindhoven, Netherlands.
C3 University of Twente; Eindhoven University of Technology
RP Zambon, E (corresponding author), Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
EM emmanuele.zambon@utwente.nl; sandro.etalle@utwente.nl;
   r.j.wieringa@utwente.nl; pieter.hartel@utwente.nl
OI Hartel, Pieter/0000-0002-0411-0421
CR ALBERTS C, 2001, ESCTR2001016 CARN ME
   [Anonymous], 1001 BSI
   [Anonymous], 2006, 77993 BS
   [Anonymous], 2007, Complete guide to security and privacy metrics: measuring regulatory compliance, operational resilience
   [Anonymous], 2005, 270012005 ISOIEC
   [Anonymous], 2005, 270022005 ISOIEC
   BAGCHI S, 2001, DSOM 01
   Baiardi F, 2006, LECT NOTES COMPUT SC, V4347, P42
   BENNETT SP, 1992, 8TH P IEEE ANN COMP, P64
   BROWN A, 2001, IEEE IFIP INT S INT, P377
   *BSI, 2001, 618822001 BSI BS IEC
   *CISCO SYST, 2007, CISC 2007 ANN SEC RE
   *CRAMM, 2009, CRAMM V5 1 INF SEC T
   CUNNINGHAM B, 2007, BEST DAMN IT SECURIT
   DELADRIERE A, 2008, RISK MANAGEMENT CHAL
   den Braber F, 2007, BT TECHNOL J, V25, P101, DOI 10.1007/s10550-007-0013-9
   EVANGELIDIS A, 2002, ELECT GOVT, V2456, P93
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   HAASL D., 1981, Fault tree handbook
   INNERHOFEROBERP.F, 2006, ISSA 06
   *ISO IEC, 2006, 154082006 ISOIEC
   *ISO IEC, 2001, 133352001 ISOIEC
   ISO/IEC, 2000, 177992000 ISOIEC
   Kar G., 2000, NOMS 2000. 2000 IEEE/IFIP Network Operations and Management Symposium `The Networked Planet: Management Beyond 2000' (Cat. No.00CB37074), P61, DOI 10.1109/NOMS.2000.830375
   Kim I, 2004, SAM '04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND MANAGEMENT, P249
   LIPPMANN RP, 1998, ANNOTATED REV PAPERS
   McAfee, 2010, CROSSF CRIT INFR AG
   MORALI A, 2009, ICSE 09
   MUNTZ RR, 1989, PERF E R SI, V17, P29, DOI 10.1145/75372.75376
   *NIST, 2009, NIST NAT VULN DAT
   Pawson R., 2004, REALISTIC EVALUATION
   *PRIC WATERHOUSECO, 2008, BERR INF SEC BREACH
   *RISK MAN, 2004, 43602004 ASNZS RISK
   Rossebo JEY, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P925
   Sheyner O, 2002, P IEEE S SECUR PRIV, P273, DOI 10.1109/SECPRI.2002.1004377
   Stoneburner Gary, 2002, NISTSP800-308
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wieringa R., 2007, CERE 07, P36
   ZAMBON E, 2007, BDIM 07, P75
   Zavyalov A.D., 2006, Medium -Term Earthquake Forecast: Basics, Methodology, Implementation
   2007, MEHARI 2007 RISK ANA
   2007, COBIT 4 1 CONTROL OB
   2004, EBIOS EXPRESSION BES
NR 44
TC 24
Z9 27
U1 0
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2011
VL 10
IS 4
BP 553
EP 580
DI 10.1007/s10270-010-0166-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 825KI
UT WOS:000295272200008
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Del Fabro, MD
   Valduriez, P
AF Del Fabro, Marcos Didonet
   Valduriez, Patrick
TI Towards the efficient development of model transformations using model
   weaving and matching transformations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 22nd ACM Symposium on Applied Computing
CY MAR 11-15, 2007
CL Seoul, SOUTH KOREA
SP ACM
DE Model engineering; Matching transformations; Model weaving
AB Model transformations can be used in many different application scenarios, for instance, to provide interoperability between models of different size and complexity. As a consequence, they are becoming more and more complex. However, model transformations are typically developed manually. Several code patterns are implemented repetitively, thus increasing the probability of programming errors and reducing code reusability. There is not yet a complete solution that automates the development of model transformations. In this paper, we present a novel approach that uses matching transformations and weaving models to semi-automate the development of transformations. Weaving models are models that contain different kinds of relationships between model elements. These relationships capture different transformation patterns. Matching transformations are a special kind of transformations that implement methods that create weaving models. We present a practical solution that enables the creation and the customization of different creation methods in an efficient way. We combine different methods, and present a metamodel-based method that exploits metamodel data to automatically produce weaving models. The weaving models are derived into model integration transformations. To validate our approach, we present an experiment using metamodels with distinct size and complexity, which show the feasibility and scalability of our solution.
C1 [Del Fabro, Marcos Didonet] ILOG SA, Paris, France.
   [Del Fabro, Marcos Didonet; Valduriez, Patrick] INRIA, ATLAS Grp, Nantes, France.
   [Del Fabro, Marcos Didonet; Valduriez, Patrick] LINA, Nantes, France.
C3 Inria
RP Del Fabro, MD (corresponding author), ILOG SA, Paris, France.
EM mddfabro@ilog.fr; patrick.valduriez@inria.fr
CR [Anonymous], 1 INT WORKSH MET MDA
   ATZENI P, P EDBT 2006, P368
   AUMUELLER D, P SIGMOD 2005, P906
   BALOGH A, 2005, P ECMDA 2005 TOOLS T
   BERNSTEIN PA, P SIGMOD 2007 BEIJ C, P1
   BERNSTEIN PA, P CIDR 2003, P209
   Chapman Sam., 2006, SimMetrics
   COHEN W, P IIWEB 2003, P73
   Del Fabro MD, 2006, LECT NOTES COMPUT SC, V4275, P863
   DELFABRO MD, P 22 ANN ACM SAC MT2, P963
   DHAMANKA R, P SIGMOD 2004, P383
   Didonet del Fabro M., 2007, THESIS U NANTES
   DION B, 2006, EFFICIENT DEV SAFE R
   Ehrig M, 2005, LECT NOTES COMPUT SC, V3729, P186, DOI 10.1007/11574620_16
   EUZENAT J, P ISWC 2004, P698
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   FUXMAN A, P VLDB 2006 SEOUL KO, P67
   JOUAULT F, 2006, P 2006 ACM S APPL CO, P1188, DOI DOI 10.1145/1141277.1141561
   JOUAULT F, 2005, P MOD TRANSF PRACT W, P128, DOI DOI 10.1007/11663430_14
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Konigs A., 2005, MOD TRANSF PRACT SAT
   MADHAVAN J, P VLDB 2001, P49
   MELNIK S, P SIGMOD 2007 BEIJ C, P461
   MELNIK S, P SIGMOD 2005 MAR US, P167
   Melnik S., 2004, SPRINGER LNCS, P2967
   Miller RJ, 2001, SIGMOD RECORD, V30, P78, DOI 10.1145/373626.373713
   MITRA P, 2000, LNCS, V1777
   NOY N, P AAAI IAAI, P450
   SAYYADIAN M, P VLDB 2005 TRODH NO, P994
   SHVAIKO P, 2005, J DATA SEMANTICS, V4, P146, DOI DOI 10.1007/11603412\-5
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   WIMMER M, 2007, P 40 HICSS 2007 3 6
   2007, AM3 ATLANTIC ZOO
NR 33
TC 71
Z9 73
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2009
VL 8
IS 3
BP 305
EP 324
DI 10.1007/s10270-008-0094-z
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 466UE
UT WOS:000267687600002
DA 2024-07-18
ER

PT J
AU Akehurst, D
   Howells, G
   McDonald-Maier, K
AF Akehurst, D.
   Howells, G.
   McDonald-Maier, K.
TI Implementing associations: UML 2.0 to Java 5
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML; Java; association; property; code generation
AB A significant current software engineering problem is the conceptual mismatch between the abstract concept of an association as found in modelling languages such as UML and the lower level expressive facilities available in object-oriented languages such as Java. This paper introduces some code generation patterns that aid the production of Java based implementations from UML models. The work is motivated by a project to construct model driven development tools in support of the construction of embedded systems. This involves the specification and implementation of a number of meta-models (or models of languages). Many current UML oriented tools provide code generation facilities, in particular the generation of object-oriented code from class diagrams. However, many of the more complex aspects of class diagrams, such as qualified associations are not supported. In addition, several concepts introduced in UML version 2.0 are also not supported. The aim of the work presented in this paper is to develop a number of code generation patterns that allow us to support the automatic generation of Java code from UML class diagrams that support these new and complex association concepts. These patterns significantly improve the code generation abilities of UML tools, providing a useful automation facility that bridges the gap between the concept of an association and lower level object-oriented programming languages.
C1 [Akehurst, D.; Howells, G.] Univ Kent, Canterbury CT2 7NT, Kent, England.
   [McDonald-Maier, K.] Univ Essex, Colchester CO4 3SQ, Essex, England.
C3 University of Kent; University of Essex
RP Akehurst, D (corresponding author), Univ Kent, Canterbury CT2 7NT, Kent, England.
EM D.H.Akehurst@kent.ac.uk; W.G.J.Howells@kent.ac.uk; K.D.Maier@kent.ac.uk
OI McDonald-Maier, Klaus/0000-0002-6412-8519
CR AMELUNXEN C, 2004, P MOD 2004 P45 MARB, P149
   [Anonymous], UML 2 0 OCL SPEC
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 2003, J OBJECT TECHNOL
   Bock Conrad., 2004, J OBJECT TECHNOL, V3, P47
   Bracha Gilad., 2004, GENERICS JAVA PROGRA
   Bunse C, 1999, LECT NOTES COMPUT SC, V1723, P675
   BUTTNER F, 2004, P OCL MOD DRIV ENG W
   Fowler M., 2003, A brief guide to the standard object modeling language
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GENOVA G, 2003, THESIS U MADRID CARL
   GENOVA G, 2004, J OBJECT TECHNOLOGY, V3, P83
   Genova G., 2002, SOFTW SYST MODEL, V1, P86
   GOGOLLA M, 1998, P 1 INT WORKSH UN MO, V1618, P92
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Harrison W, 2000, ACM SIGPLAN NOTICES, V35, P178, DOI 10.1145/354222.353184
   *IBM, 2003, ECL MOD FRAM
   *IBM, 2001, ECL UN TOOL PLATF
   JEANPOUSIN C, 1993, P SOFTW ENG ITS APPL, P149
   *KMF TEAM, 2002, KENT MOD FRAM KMF
   KOLLMANN R, 2001, P 8 WORK C REV ENG W
   Larman Craig, 1997, Applying UML and Patterns: An Introduction to ObjectOriented Analysis and Design
   MAIER T, 2004, P 2 INT FUJ DAYS DAR
   Matula M., 2003, Netbeans metadata repository
   *MODEASY TEAM, MODEASY PROJ
   NOBLE J, 1997, P 1997 EUR C PATT LA
   *OMG, 2003, XML MET INT XMI V2 0
   *OMG, OBJ MAN GROUP
   *OMG, 2003, UML 2 0 INFR SPEC
   OMG (Object Management Group), 2003, Meta Object Facility (MOF) 2.0 Core Specification, Specification Version 2.0
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   STEVENS P, 2002, J SOFTWARE SYSTEMS M, V1, P68
   SUSCHECK C, 2003, J OBJECT TECHNOL, V2, P101
   2002, JAVA COMMUNITY PROCE
NR 34
TC 21
Z9 26
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2007
VL 6
IS 1
BP 3
EP 35
DI 10.1007/s10270-006-0020-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WQ
UT WOS:000254667600002
DA 2024-07-18
ER

PT J
AU Arbab, F
   Baier, C
   de Boer, F
   Rutten, J
AF Arbab, Farhad
   Baier, Christel
   de Boer, Frank
   Rutten, Jan
TI Models and temporal logical specifications for timed component
   connectors
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 2nd International Conference on Software Engineering and Formal Methods
CY SEP 28-30, 2004
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Tech Comm Complex Comp, UNU IIST, Peking Univ, Chinese Acad Sci, Acad Div
DE coordination; real-time; composition; Reo; constraint automata; timed
   automata; linear temporal logic; timed data streams
AB Component-based software engineering advocates construction of software systems through composition of coordinated autonomous components. Significant benefits of this approach include software reuse, simpler and faster construction, enhanced reliability, and dramatic reductions in the complexity of construction of provably correct critical systems, many of which involve real-time concerns. Effective, flexible component composition by itself still poses a challenge today and yet the special nature of real-time constraints makes component-based construction of real-time systems even more demanding. The coordination language Reo supports compositional system construction through connectors that exogenously coordinate the interactions among the constituent components which unawarely comprise a complex system, into a coherent collaboration. The simple, yet surprisingly rich, calculus of channel composition that underlies Reo offers a flexible framework for compositional construction of coordinating component connectors with real-time properties. In this paper, we present an operational semantics for the channel-based component connectors of Reo in terms of Timed Constraint Automata and introduce a temporal-logic for specification and verification of their real-time properties.
C1 [Arbab, Farhad; de Boer, Frank; Rutten, Jan] Ctr Voor Wiskunde Informat, Dept Software Engn, Amsterdam, Netherlands.
   [Baier, Christel] Univ Bonn, Inst Informat 1, Bonn, Germany.
   [Arbab, Farhad; de Boer, Frank] Leiden Univ, Leiden, Netherlands.
   [Rutten, Jan] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 University of Bonn; Leiden University - Excl LUMC; Leiden University;
   Vrije Universiteit Amsterdam
RP de Boer, F (corresponding author), Ctr Voor Wiskunde Informat, Dept Software Engn, Amsterdam, Netherlands.
EM F.s.de.Boer@cwi.nl
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], STTT
   [Anonymous], 1989, PRENTICE HALL INT SE
   [Anonymous], P 24 ACM S FDN COMP
   [Anonymous], MATH STRUCTURES COMP
   Arbab F, 2003, LECT NOTES COMPUT SC, V2755, P34
   ARBAB F, 2003, ELECT NOTES THEORETI, V97
   ARBAB F, 2006, IN PRESS MODELING CO
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Cerans Karlis., 1993, CAV 92, P302
   De Alfaro L, 2002, LECT NOTES COMPUT SC, V2491, P108
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Harel E., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P402, DOI 10.1109/LICS.1990.113765
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   HENZINGER TA, 1997, SOFTWARE TOOLS TECHN, V1, P110
   HOLLIDAY MA, 1987, IEEE T SOFTWARE ENG, V13, P1297, DOI 10.1109/TSE.1987.233141
   Kaynar DK, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/REAL.2003.1253264
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LEONARD L, 1994, IFIP TRANS C, V22, P483
   Merlin P. M., 1974, A study of the recoverability of computing systems
   MERRITT M, 1991, LECT NOTES COMPUT SC, V527, P408
   PANANGADEN P, 2004, CRM MONOGRAPH SERIES
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   RAMCHANDANI C, 1974, PROJECT MAC, V120
   REED GM, 1988, THEOR COMPUT SCI, V58, P249, DOI 10.1016/0304-3975(88)90030-8
   Segala R, 1998, INFORM COMPUT, V141, P119, DOI 10.1006/inco.1997.2671
   SIFAKIS J, 1980, LECT NOTES COMPUTER, V84
   TASIRAN S, 1996, LNCS, V1119, P546
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Wolper P., 1982, Proc. 9th ACM Symp. on Principles of Programming Languages, P20
   YI W, 1991, LECT NOTES COMPUT SC, V510, P217
NR 36
TC 31
Z9 32
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2007
VL 6
IS 1
BP 59
EP 82
DI 10.1007/s10270-006-0009-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WQ
UT WOS:000254667600005
DA 2024-07-18
ER

PT J
AU Johnsen, EB
   Owe, O
AF Johnsen, Einar Broch
   Owe, Olaf
TI An asynchronous communication model for distributed concurrent objects
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 2nd International Conference on Software Engineering and Formal Methods
CY SEP 28-30, 2004
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Tech Comm Complex Comp, UNU IIST, Peking Univ, Chinese Acad Sci, Acad Div
DE asynchronous method calls; concurrent objects; distributed systems;
   rewriting logic
ID FORMAL SEMANTICS; REWRITING LOGIC; SPECIFICATION; VERIFICATION; LANGUAGE
AB Distributed systems are often modeled by objects that run concurrently, each with its own processor, and communicate by synchronous remote method calls. This may be satisfactory for tightly coupled systems, but in the distributed setting synchronous external calls lead to much waiting; at best resulting in inefficient use of processor capacity, at worst resulting in deadlock. Furthermore, it is difficult to combine active and passive behavior in concurrent objects. This paper proposes an object-oriented solution to these problems by means of asynchronous method calls and conditional processor release points. Although at the cost of additional internal nondeterminism in the objects, this approach seems attractive in asynchronous or unreliable environments. The concepts are integrated in a small object-oriented language with an operational semantics defined in rewriting logic, and illustrated by examples.
C1 [Johnsen, Einar Broch; Owe, Olaf] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Johnsen, EB (corresponding author), Univ Oslo, Dept Informat, POB 1080, N-0316 Oslo, Norway.
EM einarj@ifi.uio.no; olaf@ifi.uio.no
OI Johnsen, Einar Broch/0000-0001-5382-3949; Owe, Olaf/0000-0003-0976-5678
CR Abadi M., 1996, MONOGRAPHS COMPUTER
   Abrahám-Mumm E, 2002, LECT NOTES COMPUT SC, V2303, P5
   Agha GulA., 1997, J FUNCT PROGRAM, V7, P1
   AMERICA P, 1987, OBJECT ORIENTED CONC, P199
   Andrews G.R., 2000, Foundations of Multithreaded, Parallel, and Distributed Programming
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 1985, INT SERIES COMP SCI
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Benton N, 2004, ACM T PROGR LANG SYS, V26, P769, DOI 10.1145/1018203.1018205
   BERGSTRA JA, 1984, INFORM CONTROL, V60, P109, DOI 10.1016/S0019-9958(84)80025-X
   CARDELLI L, 1995, COMPUT SYST, V8, P27, DOI 10.1080/08934219509367604
   Caromel D., 1996, Object-Based Parallel and Distributed Computation. France-Japan Workshop, OBPDC '95. Selected Papers, P125
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Cenciarelli P., 1999, LECT NOTES COMP SCI, V1523, P157
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   CLAVEL M, 2000, REFLECTION REWRITING
   CUGOLA G, 1997, 4 INT C OBJ OR INF S, P504
   DAHL OJ, 1968, S2 NORSK REGN NORW C
   DAHL OJ, 1994, CLASSICAL MIND ESSAY, P93
   Damm W, 2003, LECT NOTES COMPUT SC, V2852, P71
   DIBLASIO P, 1996, LECT NOTES COMPUTER, V1119, P655
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Dovland J, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P141, DOI 10.1109/SWSTE.2005.24
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   FISCHER C, 1997, P 2 IFIP WORKSH FORM, P423
   FOURNET C, 1996, ACM SIGPLAN SIGACT S, P372
   Ghezzi C., 1998, PROGRAMMING LANGUAGE
   Goguen J., 2000, SOFTWARE ENG OBJ ALG, P3
   GORDON AD, 1998, HLCL 98 HIGH LEVEL C, V16
   Gosling J., 2000, The Java Language Specification
   Hansen PB, 1999, ACM SIGPLAN NOTICES, V34, P38, DOI 10.1145/312009.312034
   HOARE CAR, 1974, COMMUN ACM, V17, P549, DOI 10.1145/355620.361161
   HONDA K, 1991, LECT NOTES COMPUT SC, V512, P133
   International Telecommunication Union, 1995, OP DISTR PROC REF 1
   Itzstein GS, 2003, LECT NOTES COMPUT SC, V2823, P151
   Johnsen E. B., 2002, Formal Methods for Open Object-Based Distributed Systems V. IFIP TC6/WG6.1. Fifth International Conference on Formal Methods for Open Object-Based Distributed Systems (FMOODS 2002), P45
   Johnsen EB, 2005, LECT NOTES COMPUT SC, V3657, P274
   Johnsen EB, 2005, LECT NOTES COMPUT SC, V3535, P15
   Johnsen EB, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P188, DOI 10.1109/SEFM.2004.1347520
   Johnsen EB, 2004, LECT NOTES COMPUT SC, V2635, P137
   JOHNSEN EB, 2005, P 5 INT WORKSH REWR, V117, P375
   JOHNSEN EB, 2005, P 38 HAW INT C SYST
   JOHNSEN EB, 2005, 327 U OSL DEP INF
   Jones C. B., 1981, THESIS OXFORD U
   LISKOV B, 1988, P C PROGR LANG DES I, P260
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Mahony B, 1999, LECT NOTES COMPUT SC, V1709, P1166
   Malabarba S, 2000, LECT NOTES COMPUT SC, V1850, P337
   Meseguer J, 2004, LECT NOTES ARTIF INT, V3097, P1
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   NAJM E, 1995, COMPUT NETWORKS ISDN, V27, P1305, DOI 10.1016/0169-7552(94)00032-O
   NIERSTRASZ O, 1992, ADV OBJECT ORIENTED
   NOTKIN D, 1993, LNCS, V742, P489
   Philippsen M, 2000, CONCURRENCY-PRACT EX, V12, P917, DOI 10.1002/1096-9128(20000825)12:10<917::AID-CPE517>3.0.CO;2-F
   PIERCE BC, 1998, PROOF LANGUAGE INTER
   Sangiorgi Davide, 2001, -calculus: A Theory of Mobile Processes
   SHAW M, 1994, LECT NOTES COMPUTER, V1078, P17
   Smith G, 2001, FORM METHOD SYST DES, V18, P249, DOI 10.1023/A:1011269103179
   VASCONCELOS V, 1994, LNCS, V821, P100
   VINOSKI S, 1997, IEEE COMMUN MAG, V14
   Yokote Yasuhiko, 1987, OBJECT ORIENTED CONC, P129
   Yonezawa A., 1990, ABCL: an Object-Oriented Concurrent System
   [No title captured]
NR 63
TC 98
Z9 99
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2007
VL 6
IS 1
BP 39
EP 58
DI 10.1007/s10270-006-0011-2
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 283WQ
UT WOS:000254667600004
DA 2024-07-18
ER

PT J
AU Bucchiarone, A
   Savary-Leblanc, M
   Le Pallec, X
   Cicchetti, A
   Gérard, S
   Bassanelli, S
   Gini, F
   Marconi, A
AF Bucchiarone, Antonio
   Savary-Leblanc, Maxime
   Le Pallec, Xavier
   Cicchetti, Antonio
   Gerard, Sebastien
   Bassanelli, Simone
   Gini, Federica
   Marconi, Annapaola
TI Gamifying model-based engineering: the PapyGame experience
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based engineering; Education; Gamification; Papyrus
ID GAMIFICATION; DESIGN; ELEMENTS; PERCEPTIONS; COMPETITION; EDUCATION;
   SYSTEMS; SUPPORT
AB Modeling is an essential and challenging activity in any engineering environment. It implies some hard-to-train skills such as abstraction and communication. Teachers, project leaders, and tool vendors have a hard time teaching or training their students, co-workers, or users. Gamification refers to the exploitation of gaming mechanisms for serious purposes, like promoting behavioral changes, soliciting participation and engagement in activities, etc. We investigate the introduction of gaming mechanisms in modeling tasks with the primary goal of supporting learning/training. The result has been the realization of a gamified modeling environment named PapyGame. In this article, we present the approach adopted for PapyGame implementation, the details on the gamification elements involved, and the derived conceptual architecture required for applying gamification in any modeling environment. Moreover, to demonstrate the benefits of using PapyGame for learning/training modeling, a set of user experience evaluations have been conducted. Correspondingly, we report the obtained results together with a set of future challenges we consider as critical to make gamified modeling a more effective education/training approach.
C1 [Bucchiarone, Antonio; Bassanelli, Simone; Gini, Federica; Marconi, Annapaola] Fdn Bruno Kessler, Trento, Italy.
   [Savary-Leblanc, Maxime; Le Pallec, Xavier] Univ Lille, Lille, France.
   [Cicchetti, Antonio] Malardalen Univ, Vasteras, Sweden.
   [Savary-Leblanc, Maxime; Gerard, Sebastien] Univ Paris Saclay, CEA, List, F-91120 Palaiseau, France.
   [Bassanelli, Simone; Gini, Federica] Univ Trento, Trento, Italy.
C3 Fondazione Bruno Kessler; Universite de Lille; Malardalen University;
   Universite Paris Cite; CEA; Universite Paris Saclay; University of
   Trento
RP Cicchetti, A (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM bucchiarone@fbk.eu; maxime.savary-leblanc@univ-lille.fr;
   xavier.le-pallec@univ-lille.fr; antonio.cicchetti@mdu.se;
   sebastien.gerard@cea.fr; simone.bassanelli@unitn.it;
   federica.gini@unitn.it; marconi@fbk.eu
RI Bucchiarone, Antonio/S-6522-2019
OI Bucchiarone, Antonio/0000-0003-1154-1382; BASSANELLI,
   SIMONE/0000-0001-6061-8169
FU Malardalen University
FX AcknowledgementsThe authors would like to thank Robbert Jongeling and
   all the students of his class at Malardalen University, Sweden, who
   accepted to contribute to the experimentation of PapyGame and its
   potentials.
CR Abt C.C., 1971, SERIOUS GAMES
   Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Aldemir T, 2018, COMPUT HUM BEHAV, V78, P235, DOI 10.1016/j.chb.2017.10.001
   [Anonymous], COMPARE 120 GAMIFICA
   Awais M, 2019, IEEE ACCESS, V7, P107171, DOI 10.1109/ACCESS.2019.2931565
   Batterton K. A., 2017, Phalanx, V50, P32, DOI DOI 10.2307/26296382
   Brooks CF, 2010, INNOV EDUC TEACH INT, V47, P261, DOI 10.1080/14703297.2010.498177
   Bucchiarone A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P34, DOI 10.1109/MODELS.2019.00-17
   Bucchiarone A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P753, DOI 10.1109/MODELS-C.2019.00117
   Bucciarelli A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON FLEXIBLE AND PRINTABLE SENSORS AND SYSTEMS (IEEE FLEPS 2020)
   Burguillo JC, 2010, COMPUT EDUC, V55, P566, DOI 10.1016/j.compedu.2010.02.018
   Calderon A, 2018, INFORM SOFTWARE TECH, V95, P238, DOI 10.1016/j.infsof.2017.11.009
   Carless D, 2006, STUD HIGH EDUC, V31, P219, DOI 10.1080/03075070600572132
   Chan E, 2018, LECT NOTES COMPUT SC, V10923, P445, DOI 10.1007/978-3-319-91716-0_35
   Chin C.-L., 2014, Encyclopedia of Quality of Life and Well-Being Research, P1275, DOI [DOI 10.1007/978-94-007-0753-5573, DOI 10.1007/978-94-007-0753-5_573]
   Cosentino V., 2017, ER, P15
   De Smedt J, 2016, LECT NOTES BUS INF P, V256, P432, DOI 10.1007/978-3-319-42887-1_35
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [DOI 10.1145/2181037.2181040, 10.1145/2181037.2181040]
   Di Rocco J, 2015, IEEE SOFTWARE, V32, P28, DOI 10.1109/MS.2015.61
   Dicheva Darina, 2019, SIGCSE '19: Proceedings of the 50th ACM Technical Symposium on Computer Science Education, DOI 10.1145/3287324.3293726
   Fraternali P, 2019, J WEB ENG, V18, P655, DOI 10.13052/jwe1540-9589.1874
   Gini F., 2022, PREPRINTS, DOI [10.21203/rs.3.rs-1898746/v1, DOI 10.21203/RS.3.RS-1898746/V1]
   Herzig Philipp, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P129, DOI 10.1007/978-3-642-39617-5_14
   Jagust T, 2018, COMPUT EDUC, V125, P444, DOI 10.1016/j.compedu.2018.06.022
   Jolak R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P213, DOI 10.1145/3239372.3239404
   Jurgelaitis M, 2019, COMPUT APPL ENG EDUC, V27, P332, DOI 10.1002/cae.22077
   Jurgelaitis M, 2018, BALT J MOD COMPUT, V6, P119, DOI 10.22364/bjmc.2018.6.2.03
   Kelly H, 2007, COMMUN ACM, V50, P44, DOI 10.1145/1272516.1272538
   Koivisto J, 2019, INT J INFORM MANAGE, V45, P191, DOI 10.1016/j.ijinfomgt.2018.10.013
   Legaki NZ, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P1813
   Li MN, 2021, ENTERP INF SYST-UK, V15, P1501, DOI 10.1080/17517575.2021.1941272
   Martínez S, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P312, DOI 10.1145/3239372.3239405
   Modic B. H., 2017, SERIOUS GAMES AFFECT
   Mokadam NA, 2015, J THORAC CARDIOV SUR, V150, P1052, DOI 10.1016/j.jtcvs.2015.07.064
   Morschheuser B, 2019, J MANAGE INQUIRY, V28, P145, DOI 10.1177/1056492618790921
   Morschheuser B, 2018, INFORM SOFTWARE TECH, V95, P219, DOI 10.1016/j.infsof.2017.10.015
   Noble Helen, 2019, Evid Based Nurs, V22, P67, DOI 10.1136/ebnurs-2019-103145
   Oberhauser R, 2021, LECT NOTES BUS INF P, V422, P40, DOI 10.1007/978-3-030-79976-2_3
   Palomino PT, 2019, IEEE INT CONF ADV LE, P97, DOI 10.1109/ICALT.2019.00035
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Pedro A., 2020, GAMIFICATION MODEL D
   Petri G., 2018, INCOD BRAZILIAN I DI, P1, DOI DOI 10.1007/978-3-319-08234-9_214-1
   Petri G, 2017, COMPUT EDUC, V107, P68, DOI 10.1016/j.compedu.2017.01.004
   Pflanzl N., 2016, P 7 INT WORKSHOP ENT, V1701, P17
   Robson K, 2015, BUS HORIZONS, V58, P411, DOI 10.1016/j.bushor.2015.03.006
   Sailer M, 2017, COMPUT HUM BEHAV, V69, P371, DOI 10.1016/j.chb.2016.12.033
   Santos A.C.G., 2021, 5 INT GAMIFIN C GAMI, P90
   Sedrakyan G, 2012, LECT NOTES BUS INF P, V113, P435
   Sepehr S., 2013, Proceeding of the First International Conference on Gameful Design, Research, and Application, P2, DOI DOI 10.1145/2583008.2583009
   Short JC, 2010, J MANAGE, V36, P40, DOI 10.1177/0149206309342746
   Souza MRD, 2018, INFORM SOFTWARE TECH, V95, P201, DOI 10.1016/j.infsof.2017.09.014
   Souza MRD, 2017, CONF SOFTW ENG EDUC, P276, DOI 10.1109/CSEET.2017.51
   Stuart H., 2019, EUROPEAN C TECHNOLOG
   Suran S, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3368986
   Tantan O., 2017, MCIS 2017 11 MEDITER
   Thurmond VA, 2001, J NURS SCHOLARSHIP, V33, P253, DOI 10.1111/j.1547-5069.2001.00253.x
   Toda AM, 2019, EDUC TECHNOL SOC, V22, P47
   Toda AM, 2019, SMART LEARN ENVIRON, V6, DOI 10.1186/s40561-019-0106-1
   Tondello G, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P1118
   Yigitbas E., 2022, 24 INT C MODEL DRIVE
   Yigitbas E, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P27, DOI 10.1145/3550356.3559088
NR 61
TC 3
Z9 3
U1 2
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1369
EP 1389
DI 10.1007/s10270-023-01091-8
EA MAR 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000943316500001
PM 37363105
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wiesmayr, B
   Zoitl, A
   Rabiser, R
AF Wiesmayr, Bianca
   Zoitl, Alois
   Rabiser, Rick
TI Assessing the usefulness of a visual programming IDE for large-scale
   automation software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Usefulness study; Open source software; IEC 61499; Modeling tools;
   Model-driven engineering
ID ENGINEERING METHODS; EVOLUTION; TOOLS
AB Industrial control applications are usually designed by domain experts instead of software engineers. These experts frequently use visual programming languages based on standards such as IEC 61131-3 and IEC 61499. The standards apply model-based engineering concepts to abstract from hardware and low-level communication. Developing industrial control software is challenging due to the fact that control systems are usually unique and need to be maintained for many years. The arising challenges, together with the growing complexity of control software, require very usable model-based development environments for visual programming languages. However, so far only little empirical research exists on the practical usefulness of such environments, i.e., their usability and utility. In this paper, we discuss common control software maintenance tasks and tool capabilities based on existing research and show the realization of these capabilities in the 4diac IDE. We performed a walkthrough of the demonstrated capabilities using the cognitive dimensions of notations framework from the field of human-computer interaction. We then improved the tool and conducted a user study involving ten industrial automation engineers, who used the 4diac IDE in a realistic control software maintenance scenario. Based on lessons learnt from this study, we adapted the 4diac IDE to better handle large graphical models. We evaluated these changes in a reassessment study with automation engineers from seven industrial enterprises. We derive general implications with respect to large-scale applications for developers of IDEs that we deem applicable in the context of (visual) model-based engineering tools.
C1 [Wiesmayr, Bianca; Zoitl, Alois; Rabiser, Rick] Johannes Kepler Univ Linz, LIT CPS Lab, Linz, Austria.
   [Zoitl, Alois; Rabiser, Rick] Johannes Kepler Univ Linz, CDL VaS, Linz, Austria.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz
RP Wiesmayr, B (corresponding author), Johannes Kepler Univ Linz, LIT CPS Lab, Linz, Austria.
EM bianca.wiesmayr@jku.at; alois.zoitl@jku.at; rick.rabiser@jku.at
RI Rabiser, Rick/B-8673-2017
OI Rabiser, Rick/0000-0003-3862-1112; Wiesmayr, Bianca/0000-0002-9512-5249
FU Austrian Federal Ministry for Digital and Economic Affairs; National
   Foundation for Research, Technology and Development; Christian Doppler
   Research Association
FX The financial support by the Austrian Federal Ministry for Digital and
   Economic Affairs, the National Foundation for Research, Technology and
   Development, and the Christian Doppler Research Association is
   gratefully acknowledged. We want to thank our industry partner for their
   continuous support. We particularly thank all participants of the study.
CR BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Balzer R, 2001, PROC INT CONF SOFTW, P665, DOI 10.1109/ICSE.2001.919148
   Bayrak Gulden., 2017, Journal of Software Engineering and Applications, V10, P457, DOI [10.4236/jsea.2017.105026, DOI 10.4236/JSEA.2017.105026]
   Blackwell A., 2003, HCI MODELS THEORIES, P103, DOI [DOI 10.1016/B978-155860808-5/50005-8, 10.1016/B978-155860808-5/50005-8]
   Cicchetti A, 2019, SOFTW SYST MODEL, V18, P3207, DOI 10.1007/s10270-018-00713-w
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Eclipse 4diac, 2020, ECL 4DIAC OP SOURC E
   Fischer J, 2020, IN C IND ENG ENG MAN, P1126, DOI [10.1109/ieem45057.2020.9309857, 10.1109/IEEM45057.2020.9309857]
   Fuhrmann H, 2010, LECT NOTES COMPUT SC, V6394, P196
   Harrison R, 2016, P IEEE, V104, P973, DOI 10.1109/JPROC.2015.2510665
   Hofstetter P., 2003, J IND ECOL, V7, P79, DOI [10.1162/108819803322564361, DOI 10.1162/108819803322564361]
   Holobloc Inc., 2021, FUNCT BLOCK DEV KIT
   Holwerda R, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P217, DOI 10.1109/VLHCC.2018.8506483
   Holzinger A, 2005, COMMUN ACM, V48, P71, DOI 10.1145/1039539.1039541
   Hopsu A, 2019, PROC IEEE INT SYMP, P1306, DOI 10.1109/ISIE.2019.8781290
   International Electrotechnical Commission (IEC), 2014, 61131 IEC 3
   International Electrotechnical Commission (IEC), 2012, TC65WG6 1
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Kritzinger LM, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P56, DOI 10.1109/VISSOFT.2019.00015
   Legat C, 2013, IEEE IND ELEC, P4386, DOI 10.1109/IECON.2013.6699841
   Lyu G, 2021, IEEE T IND INFORM, V17, P2295, DOI 10.1109/TII.2020.3016990
   Mackay W. E., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P153, DOI 10.1145/108844.108867
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   National Instruments, 2020, LABV 2020
   Nielsen, 1994, USABILITY ENG
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   nxtControl GmbH, 2021, NXT TECHN IDE
   Oberlehner M., 2021, 26 IEEE INT C EM TEC
   Obermeier M, 2015, IEEE T IND INFORM, V11, P790, DOI 10.1109/TII.2014.2346133
   Obermeier M, 2011, LECT NOTES COMPUT SC, V6770, P497, DOI 10.1007/978-3-642-21708-1_56
   Ovsiannikova P, 2021, IEEE INT C EMERG, DOI 10.1109/ETFA45728.2021.9613491
   Rabiser R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P122, DOI 10.1145/2889160.2889234
   Rockwell Automation, 2021, ISAGRAF DEV TOOLK
   Rubel D., 2012, The Eclipse Graphical Editor Framework (GEF)
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sonnleithner L, 2021, IEEE INT C EMERG, DOI 10.1109/ETFA45728.2021.9613569
   Sonnleithner L, 2020, IEEE INT C EMERG, P997, DOI 10.1109/ETFA46521.2020.9212090
   Sorokin R., 2022, 14 IFAC WORKSHOP INT, P433
   Sorokin Radimir, 2021, FBME FUNCTION BLOCKS
   The MathWorks, 2021, SIM R2021A
   Torngren M., 2018, Designs, V2, P40, DOI [DOI 10.3390/DESIGNS2040040, 10.3390/designs2040040]
   Vogel-Heuser B, 2015, IEEE INTL CONF IND I, P314, DOI 10.1109/INDIN.2015.7281753
   Vogel-Heuser B., 2014, Journal of Software Engineering and Applications, V07, P440
   Vogel-Heuser B, 2015, J SYST SOFTWARE, V110, P54, DOI 10.1016/j.jss.2015.08.026
   Weber T, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P228, DOI 10.1109/MODELS-C.2019.00037
   Wiesmayr B., 2021, 2021 ACMIEEE 24 INT
   Wiesmayr B., 2021, ZENODO, DOI [10.5281/ZENODO.4758816, DOI 10.5281/ZENODO.4758816]
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zoitl A., 2014, Modelling Control Systems Using IEC 61499, DOI [10.1049/PBCE095E, DOI 10.1049/PBCE095E]
   Zoitl A, 2013, IEEE T IND INFORM, V9, P2387, DOI 10.1109/TII.2012.2235449
   Zoitl A, 2013, IEEE INTL CONF IND I, P358, DOI 10.1109/INDIN.2013.6622910
NR 53
TC 1
Z9 1
U1 5
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1619
EP 1643
DI 10.1007/s10270-023-01084-7
EA FEB 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000932000500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Di Rocco, J
   Di Ruscio, D
   Di Sipio, C
   Nguyen, PT
   Pierantonio, A
AF Di Rocco, Juri
   Di Ruscio, Davide
   Di Sipio, Claudio
   Nguyen, Phuong T.
   Pierantonio, Alfonso
TI MemoRec: a recommender system for assisting modelers in specifying
   metamodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Recommender systems; Collaborative filtering
   techniques
AB Model-driven engineering has been widely applied in software development, aiming to facilitate the coordination among various stakeholders. Such a methodology allows for a more efficient and effective development process. Nevertheless, modeling is a strenuous activity that requires proper knowledge of components, attributes, and logic to reach the level of abstraction required by the application domain. In particular, metamodels play an important role in several paradigms, and specifying wrong entities or attributes in metamodels can negatively impact on the quality of the produced artifacts as well as other elements of the whole process. During the metamodeling phase, modelers can benefit from assistance to avoid mistakes, e.g., getting recommendations like metaclasses and structural features relevant to the metamodel being defined. However, suitable machinery is needed to mine data from repositories of existing modeling artifacts and compute recommendations. In this work, we propose MemoRec, a novel approach that makes use of a collaborative filtering strategy to recommend valuable entities related to the metamodel under construction. Our approach can provide suggestions related to both metaclasses and structured features that should be added in the metamodel under definition. We assess the quality of the work with respect to different metrics, i.e., success rate, precision, and recall. The results demonstrate that MemoRec is capable of suggesting relevant items given a partial metamodel and supporting modelers in their task.
C1 [Di Rocco, Juri; Di Ruscio, Davide; Di Sipio, Claudio; Nguyen, Phuong T.; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
C3 University of L'Aquila
RP Di Ruscio, D (corresponding author), Univ Aquila, Laquila, Italy.
EM juri.dirocco@univaq.it; davide.dirsucio@univaq.it;
   claudio.disipio@graduate.univaq.it; phuong.nguyen@univaq.it;
   alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Di Rocco, Juri/HSE-7230-2023; Di Sipio,
   Claudio/JYQ-5925-2024; Nguyen, Phuong/ABE-3890-2021
OI Di Ruscio, Davide/0000-0002-5077-6793; Di Sipio,
   Claudio/0000-0001-9872-9542; Nguyen, Phuong/0000-0002-3666-4162; Di
   Rocco, Juri/0000-0002-7909-3902
FU AIDOaRT Project - European Union's H2020-ECSEL-2020, Federal Ministry of
   Education, Science and Research [101007350]
FX Y The research described in this paper has been partially supported by
   the AIDOaRT Project, which has received funding from the European
   Union's H2020-ECSEL-2020, Federal Ministry of Education, Science and
   Research, Grant Agreement n. Y101007350. We thank the anonymous
   reviewers for their valuable comments and suggestions that helped us
   improve the paper.
CR Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Barriga A., 2018, P MODELS 2018 WORKSH, P781
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Breuker D, 2014, P ANN HICSS, P758, DOI 10.1109/HICSS.2014.101
   Chen A, 2005, LECT NOTES COMPUT SC, V3479, P244, DOI 10.1007/11426646_23
   Di Rocco J., 2020, P 14 ACMIEEE INT S E, P1
   Di Rocco J., 2020, P 14 ACM IEEE INT S
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   Di Rocco J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09963-7
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Dupont G., 2018, BUILDING DOMAIN SPEC, P8
   García-Díaz V, 2015, INT J INTERACT MULTI, V3, P6, DOI 10.9781/ijimai.2015.351
   Giannotti F., 2021, P 13 INT C AG ART IN, V1, P11
   Goldsby H.J., 2008, Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation, P1751, DOI DOI 10.1145/1389095.1389434
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Konstan J., 2001, P 10 INT C WORLD WID, P285
   Korotaev A., 2018, P 10 INT JOINT C KNO, P231
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Loepp B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P975, DOI 10.1145/2702123.2702496
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Mussbacher Gunter, 2020, P 23 ACM IEEE INT C, P1
   Nguyen PT, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110860
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen PD, 2022, INT J CONTROL, V95, P3416, DOI 10.1080/00207179.2021.1974571
   Rabbi F., 2015, AMT MODELS
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Schafer JB., 2007, COLLABORATIVE FILTER, V291, P324
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sen S, 2010, SIMUL-T SOC MOD SIM, V86, P109, DOI 10.1177/0037549709340530
   Solomon J, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4166, DOI 10.1145/2858036.2858513
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Sujeeth A.K., 2011, ICML
   Wang KY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P916, DOI 10.1145/3236024.3264594
NR 41
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2023
VL 22
IS 1
BP 203
EP 223
DI 10.1007/s10270-022-00994-2
EA MAR 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9E9PT
UT WOS:000774602800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Findik-Coskunçay, D
   Çakir, MP
AF Findik-Coskuncay, Duygu
   Cakir, Murat Perit
TI An investigation of the relationship between joint visual attention and
   product quality in collaborative business process modeling: a dual
   eye-tracking study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Computer-supported collaborative business process modeling; Joint visual
   attention; Business process model quality; Dual eye tracking; Gaze
   cross-recurrence
ID COGNITIVE-PROCESSES; GAZE; INFANT; CONVERSATION; COORDINATION; MOVEMENTS
AB Collaborative business process modeling is a collective activity where team members jointly discuss, design, and document business processes. During such activities, team members need to communicate with each other to coordinate the modeling activities, propose and justify changes, and negotiate common terms and definitions. Throughout this process, stakeholders should be aware of when and what kind of changes have been made by each team member on the shared space so that they can discuss design ideas and build on each other's work. Joint visual attention has a fundamental role in establishing and maintaining common ground among interlocutors in such cooperative work settings. In addition to this, the co-constructed model's quality is often considered a key evaluation outcome measure to assess the success of collaboration. However, process and outcome measures of collaboration have been prone to difficulties due to challenges in devising measures that can adequately capture the complex dynamics of collaborative work. This study explored the relationship between a popularly used outcome measure in the business process modeling literature and a process measure approximating the level of joint visual attention present among the participants based on the degree of gaze cross-recurrence among the team members over a shared task space. The results suggest that joint visual attention as operationalized in terms of gaze cross-recurrence was a strong predictor of the syntactic, semantic, and pragmatic qualities of collaboratively produced business process models. Moreover, the collaboration process was subjected to qualitative analysis to probe further into the interactional organization of the modeling activity, which identified communication, coordination, awareness, group decision making, and motivation dimensions as key factors contributing to the quality of collaboration among group members. The results indicated strong relationships between the distribution of quality factors and the degree of gaze cross-recurrence and the final models' syntactic and semantic quality scores. Given the increasing availability of affordable eye trackers and the low resolution, practical nature of the employed analysis methodology, the proposed approach can be fruitfully employed to evaluate team performance and test the effectiveness of software interfaces designed to support collaborative work.
C1 [Findik-Coskuncay, Duygu] Ataturk Univ, Fac Econ & Adm Sci, Erzurum, Turkey.
   [Findik-Coskuncay, Duygu; Cakir, Murat Perit] Middle East Tech Univ, Informat Inst, Ankara, Turkey.
   [Cakir, Murat Perit] Middle East Tech Univ, METU TAF Modeling & Simulat R&D Ctr, Ankara, Turkey.
C3 Ataturk University; Middle East Technical University; Middle East
   Technical University
RP Findik-Coskunçay, D (corresponding author), Ataturk Univ, Fac Econ & Adm Sci, Erzurum, Turkey.; Findik-Coskunçay, D (corresponding author), Middle East Tech Univ, Informat Inst, Ankara, Turkey.
EM dygfndk@gmail.com; perit@metu.edu.tr
RI Cakir, Murat Perit/B-4939-2012
OI Cakir, Murat Perit/0000-0003-4295-1245
FU Scientific and Technological Research Council of Turkey [TUBITAK 2211-A]
FX This work was supported by The Scientific and Technological Research
   Council of Turkey] under grant [TUBITAK 2211-A].
CR Ambler S. W., 2005, ELEMENTS UML TM 2 0
   Andaloussi Amine Abbad, 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P475, DOI 10.1007/978-3-030-11641-5_37
   Antikainen M, 2010, EUR J INNOV MANAG, V13, P100, DOI 10.1108/14601061011013258
   Baghaei N, 2007, INT J COMP-SUPP COLL, V2, P159, DOI 10.1007/s11412-007-9018-0
   BAKEMAN R, 1984, CHILD DEV, V55, P1278, DOI 10.2307/1129997
   Bannon L., 1989, DAIMI Report Series, V18, DOI [https://doi.org/10.7146/dpb.v18i289.6667, DOI 10.7146/DPB.V18I289.6667]
   Barron B, 2003, J LEARN SCI, V12, P307, DOI 10.1207/S15327809JLS1203_1
   Basheri M, 2010, TRTEL1005 DURH U
   Battistella C, 2012, INNOV-ORGAN MANAG, V14, P557, DOI 10.5172/impp.2012.14.4.557
   Bera P, 2019, MIS QUART, V43, P1105, DOI 10.25300/MISQ/2019/14163
   Brennan SE, 2008, COGNITION, V106, P1465, DOI 10.1016/j.cognition.2007.05.012
   Brooks R, 2008, J CHILD LANG, V35, P207, DOI 10.1017/S030500090700829X
   Brown R, 2011, BUS PROCESS MANAG J, V17, P546, DOI 10.1108/14637151111136414
   Cardoso Jorge., 2005, The Workflow Handbook, P199
   Carpenter M, 2011, JOINT ATTENTION: NEW DEVELOPMENTS IN PSYCHOLOGY, PHILOSOPHY OF MIND, AND SOCIAL NEUROSCIENCE, P159
   Charman T, 2000, COGNITIVE DEV, V15, P481, DOI 10.1016/S0885-2014(01)00037-5
   Cherubini M, 2010, J EYE MOVEMENT RES, V3
   Cherubini M, 2008, PROCEEDINGS OF THE EYE TRACKING RESEARCH AND APPLICATIONS SYMPOSIUM (ETRA 2008), P173, DOI 10.1145/1344471.1344515
   CLARK HH, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P127, DOI 10.1037/10096-006
   Courgeon M, 2014, IEEE T AFFECT COMPUT, V5, P238, DOI 10.1109/TAFFC.2014.2335740
   DAVIS R., 2007, ARIS DESIGN PLATFORM
   Dollmann T, 2011, IEEE ENABL TECHNOL, P217, DOI 10.1109/WETICE.2011.36
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Duchowski A, 2007, EYE TRACKING METHODO
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Fiebich A, 2013, PHILOS PSYCHOL, V26, P571, DOI 10.1080/09515089.2012.690176
   Field A., 2013, Sage, DOI DOI 10.1016/B978-012691360-6/50012-4
   Figl Kathrin, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P452, DOI 10.1007/978-3-642-21640-4_34
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   Forster S., 2013, CAISE FORUM, P98
   Frederiks RJM, 2006, DATA KNOWL ENG, V58, P4, DOI 10.1016/j.datak.2005.05.007
   Gulden J, 2020, SOFTW SYST MODEL, V19, P531, DOI 10.1007/s10270-019-00742-z
   Gurbuz O, 2011, THESIS MIDDLE E TU
   Hahn C, 2011, LECT NOTES BUS INF P, V66, P61
   Haisjackl C, 2018, SOFTW SYST MODEL, V17, P655, DOI 10.1007/s10270-016-0563-8
   Hinsz VB, 1997, PSYCHOL BULL, V121, P43, DOI 10.1037/0033-2909.121.1.43
   Hogrebe F., 2011, P 4 INT WORKSHOP ENT, P183
   Hoppenbrouwers Stijn, 2012, International Journal of Organisational Design and Engineering, V2, P19, DOI 10.1504/IJODE.2012.045905
   Hoppenbrouwers S, 2013, P INT WORKSHOP MODEL, P41
   Jermann P., 2012, CSCW, P1125, DOI DOI 10.1145/2145204.2145371
   Kahrimanis G, 2009, LECT NOTES COMPUT SC, V5794, P267, DOI 10.1007/978-3-642-04636-0_25
   Kaplan F, 2006, INTERACT STUD, V7, P135, DOI 10.1075/is.7.2.04kap
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kolb J, 2012, LECT NOTES BUS INF P, V112, P280
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Meier A, 2007, INT J COMP-SUPP COLL, V2, P63, DOI 10.1007/s11412-006-9005-x
   Mendling J., 2012, EMISA FORUM, V32, P48
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Moody DL, 2003, PROC INT CONF SOFTW, P295
   Moore C., 1995, Joint attention: its origins and role in development
   Mundy P, 2007, CURR DIR PSYCHOL SCI, V16, P269, DOI 10.1111/j.1467-8721.2007.00518.x
   Mundy P, 2010, NEURAL NETWORKS, V23, P985, DOI 10.1016/j.neunet.2010.08.009
   Nussli, 2011, THESIS ECOLE POLYTEC, DOI 10.5075/epfl-thesis-5232
   Nussli Marc-Antoine., 2009, Proceedings of the 9th international conference on Computer supported collaborative learning-Volume 1, V1, P78
   Oppl S, 2017, INF SYST E-BUS MANAG, V15, P717, DOI 10.1007/s10257-016-0324-9
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Petrusel R, 2017, DECIS SUPPORT SYST, V96, P1, DOI 10.1016/j.dss.2017.01.005
   Petrusel R, 2016, INFORM SOFTWARE TECH, V79, P63, DOI 10.1016/j.infsof.2016.07.003
   Pfeiffer UJ, 2013, NEUROSCI BIOBEHAV R, V37, P2516, DOI 10.1016/j.neubiorev.2013.07.017
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Pinggera J, 2013, LECT NOTES BUS INF P, V132, P438
   Poole A., 2006, Encyclopedia of human computer interaction, P211, DOI [10.4018/978-1-59140-562-7.ch034, DOI 10.4018/978-1-59140-562-7.CH034]
   Recker J, 2013, INFORM SYST, V38, P1031, DOI 10.1016/j.is.2013.04.001
   Richardson DC, 2007, PSYCHOL SCI, V18, P407, DOI 10.1111/j.1467-9280.2007.01914.x
   Richardson DC, 2009, COGNITIVE SCI, V33, P1468, DOI 10.1111/j.1551-6709.2009.01057.x
   Richardson DC, 2005, COGNITIVE SCI, V29, P1045, DOI 10.1207/s15516709cog0000_29
   Ridings CM, 2004, J COMPUT-MEDIAT COMM, DOI [DOI 10.1111/J.1083-6101.2004.TB00229.X, 10.1111/j.1083-6101.2004.tb00229.x, 10.1111/j.1083-6101.2004.tb00229]
   Riemer K, 2011, EUR C INF SYST HELS, V39
   Risko EF, 2011, ATTEN PERCEPT PSYCHO, V73, P291, DOI 10.3758/s13414-010-0042-1
   RITTGEN P, 2008, P CAISE 08 FOR, P61
   Rittgen P, 2007, LECT NOTES COMPUT SC, V4495, P561
   Rittgen P, 2010, LECT NOTES COMPUT SC, V6051, P24, DOI 10.1007/978-3-642-13094-6_4
   Roschelle J., 1995, Computer Supported Collaborative Learning. Proceedings NATO Advanced Research Workshop, P69
   Roscoe J.T., 1975, FUNDAMENTAL RES STAT
   Roser S, 2005, Seventh IEEE International Conference on E-Commerce Technology Workshops, P43, DOI 10.1109/CECW.2005.1
   Roth WM, 2001, REV EDUC RES, V71, P365, DOI 10.3102/00346543071003365
   Rummel N, 2005, J LEARN SCI, V14, P201, DOI 10.1207/s15327809jls1402_2
   Sánchez-González L, 2012, INFORM SOFTWARE TECH, V54, P1159, DOI 10.1016/j.infsof.2012.05.001
   Sangin M., 2008, P 8 INT C INT C LEAR, P287, DOI DOI 10.5555/1599871.1599907
   Schneider B, 2013, INT J COMP-SUPP COLL, V8, P375, DOI 10.1007/s11412-013-9181-4
   Schwartz DL, 1995, J LEARN SCI, V4, P321, DOI 10.1207/s15327809jls0403_3
   Sebanz N, 2006, TRENDS COGN SCI, V10, P70, DOI 10.1016/j.tics.2005.12.009
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharma K, 2021, J COMPUT ASSIST LEAR, V37, P51, DOI 10.1111/jcal.12467
   Spada H, 2005, CSCL 2005: COMPUTER SUPPORTED COLLABORATIVE LEARNING 2005: THE NEXT 10 YEARS, PROCEEDINGS, P622
   Stahl G, 2009, COMPUT-SUPP COLLAB L, V11, P1, DOI 10.1007/978-1-4419-0228-3
   Stern D.N., 2009, The first relationship: Infant and mother
   Tomasello M., 1995, Joint attention: Its origins and role in development, P103
   Turetken O, 2011, INFORM MANAGE-AMSTER, V48, P235, DOI 10.1016/j.im.2011.06.001
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   Vanderhaegen F, 2021, COGN TECHNOL WORK, V23, P193, DOI 10.1007/s10111-019-00602-2
   Wang W, 2017, LECT NOTES COMPUT SC, V10445, P200, DOI 10.1007/978-3-319-65000-5_12
   Zhang Y., 2009, Qualitative analysis of content
   Zimoch M, 2018, LECT NOTES COMPUT SC, V10971, P155, DOI 10.1007/978-3-319-94307-7_12
   Zimoch M, 2017, LECT NOTES BUS INF P, V287, P153, DOI 10.1007/978-3-319-59466-8_10
NR 96
TC 1
Z9 1
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2022
VL 21
IS 6
BP 2429
EP 2460
DI 10.1007/s10270-022-00974-6
EA FEB 2022
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6C4TH
UT WOS:000754931200001
DA 2024-07-18
ER

PT J
AU Batot, ER
   Sahraoui, H
AF Batot, Edouard R.
   Sahraoui, Houari
TI Promoting social diversity for the automated learning of complex MDE
   artifacts
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Genetic programming; Model-driven engineering; Social diversity
ID MODEL TRANSFORMATION; ALGORITHM; EXAMPLE
AB Software modeling activities typically involve a tedious and time-consuming effort by specially trained personnel. This lack of automation hampers the adoption of model-driven engineering (MDE). Nevertheless, in the recent years, much research work has been dedicated to learn executable MDE artifacts instead of writing them manually. In this context, mono- and multi-objective genetic programming (GP) has proven being an efficient and reliable method to derive automation knowledge by using, as training data, a set of examples representing the expected behavior of an artifact. Generally, conformance to the training example set is the main objective to lead the learning process. Yet, single fitness peak, or local optima deadlock, a common challenge in GP, hinders the application of GP to MDE. In this paper, we propose a strategy to promote populations' social diversity during the GP learning process. We evaluate our approach with an empirical study featuring the case of learning well-formedness rules in MDE with a multi-objective genetic programming algorithm. Our evaluation shows that integration of social diversity leads to more efficient search, faster convergence, and more generalizable results. Moreover, when the social diversity is used as crowding distance, this convergence is uniform through a hundred of runs despite the probabilistic nature of GP. It also shows that genotypic diversity strategies cannot achieve comparable results.
C1 [Batot, Edouard R.] IN3 SOM Univ Oberta Catalunya, Barcelona, Spain.
   [Sahraoui, Houari] Diro Geodes Univ Montreal, Montreal, PQ, Canada.
RP Sahraoui, H (corresponding author), Diro Geodes Univ Montreal, Montreal, PQ, Canada.
EM ebatot@uoc.edu; sahraouh@iro.umontreal.ca
RI Alidadi, Mehdi/HJZ-0235-2023
OI Alidadi, Mehdi/0000-0001-5183-7829
CR Adra SF, 2011, IEEE T EVOLUT COMPUT, V15, P183, DOI 10.1109/TEVC.2010.2058117
   Affenzeller M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1553, DOI 10.1145/3067695.3082530
   [Anonymous], 1997, LATE BREAKING PAPERS
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   Auerbach JE, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1061, DOI 10.1145/2908961.2931675
   Back T., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P57, DOI 10.1109/ICEC.1994.350042
   Baki I., 2015, ACM T SOFTW ENG METH, VX, P36
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Batot E, 2018, LECT NOTES COMPUT SC, V11036, P166, DOI 10.1007/978-3-319-99241-9_8
   Batot E, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P210, DOI 10.1109/MODELS.2017.25
   Baudry B, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2807593
   Beadle L, 2009, GENET PROGRAM EVOL M, V10, P307, DOI 10.1007/s10710-009-9082-5
   Benbassat A, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1559, DOI 10.1145/3067695.3082528
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Bosman PAN, 2003, IEEE T EVOLUT COMPUT, V7, P174, DOI 10.1109/TEVC.2003.810761
   Burke EK, 2004, IEEE T EVOLUT COMPUT, V8, P47, DOI 10.1109/TEVC.2003.819263
   Burks AR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P991, DOI 10.1145/2739480.2754649
   Byron J, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P953, DOI 10.1145/2908961.2931653
   Cadavid J.J., 2012, RR7882 ATLANMOD
   Cadavid JJ, 2015, COMPUT LANG SYST STR, V41, P42, DOI 10.1016/j.cl.2015.02.002
   Castillo JC, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1565, DOI 10.1145/3067695.3082527
   Chen G, 2009, IEEE T EVOLUT COMPUT, V13, P661, DOI 10.1109/TEVC.2008.2011742
   Clarisó R, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P74, DOI 10.1109/QUATIC.2018.00020
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Dabhi VipulK, 2012, ABS12111119 CORR
   Dang D.-H., 2015, P 6 INT C KNOWL SYST, P219
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Deb Kalyanmoy., 2005, On finding pareto-optimal solutions through dimensionality reduction for certain large-dimensional multi-objective optimization problems
   deJong E., 2001, PROC GECCO 01, P11
   Dang DC, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P645, DOI 10.1145/2908812.2908956
   Eiben A. E., 1998, Fundamenta Informaticae, V35, P35
   Ekárt A, 2000, LECT NOTES COMPUT SC, V1802, P259
   ESHELMAN LJ, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P9
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Faunes M, 2013, LECT NOTES COMPUT SC, V8107, P187, DOI 10.1007/978-3-642-41533-3_12
   Ferdjoukh A., 2017, ICSEA INT C SOFTW EN
   Fortin FA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P623
   Gabor T, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1572, DOI 10.1145/3067695.3082529
   Galvan-Lopez E., 2010, P 12 ANN C GENETIC E, P901, DOI [DOI 10.1145/1830483.1830646, 10.1145/1830483.1830646]
   Ganesan, 2015, ROUGE
   García-Magariño I, 2009, LECT NOTES COMPUT SC, V5563, P52, DOI 10.1007/978-3-642-02408-5_5
   Gogolla M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P312, DOI 10.1109/MODELS.2015.7338262
   Gomez Juan Jose Cadavid, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P131, DOI 10.1109/ICST.2012.93
   Hassam K., 2010, BELGIAN NETHERLANDS, P16
   He ZA, 2016, IEEE T EVOLUT COMPUT, V20, P145, DOI 10.1109/TEVC.2015.2433266
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jackson D, 2010, LECT NOTES COMPUT SC, V6021, P98, DOI 10.1007/978-3-642-12148-7_9
   Jones K.S., 1988, Document Retrieval Systems, P132
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Liu HL, 2017, IEEE T EVOLUT COMPUT, V21, P408, DOI 10.1109/TEVC.2016.2606577
   Lopez-Fernandez J.J., 2015, SLE, P101
   Luke S, 2006, EVOL COMPUT, V14, P309, DOI 10.1162/evco.2006.14.3.309
   MAHFOUD SW, 1992, PARALLEL PROBLEM SOLVING FROM NATURE, 2, P27
   McPhee NF, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1112
   McPhee NF, 2008, LECT NOTES COMPUT SC, V4971, P134, DOI 10.1007/978-3-540-78671-9_12
   Mokaddem CE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P257, DOI 10.1145/3239372.3239406
   Mueller-Bady R, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P95, DOI 10.1145/2908961.2909052
   Neumann A, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P991, DOI 10.1145/3205455.3205532
   Ryan, 1994, RACIAL HARMONY GENET
   Saada Hajer, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P546, DOI 10.1007/978-3-642-33666-9_35
   Saggion H., 2002, P 19 INT C COMPUTATI, V1, P1
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Seada H, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P77, DOI 10.1145/2908961.2908991
   Segura C, 2017, IEEE T EVOLUT COMPUT, V21, P539, DOI 10.1109/TEVC.2016.2641477
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Soule T, 1998, EVOL COMPUT, V6, P293, DOI 10.1162/evco.1998.6.4.293
   Spears, 1994, SIMPLE SUBPOPULATION, P296
   Strommer M, 2008, LECT NOTES BUS INF, V11, P372
   Strommer M, 2007, LECT NOTES COMPUT SC, V4802, P116
   Szubert M, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P797, DOI 10.1145/2908812.2908939
   Tian Y, 2019, IEEE T EVOLUT COMPUT, V23, P331, DOI 10.1109/TEVC.2018.2866854
   Vanneschi L, 2014, GENET PROGRAM EVOL M, V15, P195, DOI 10.1007/s10710-013-9210-0
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Varro Daniel, 2018, AUTOMATED GENERATION, P285
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
   Wu H, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P40
   Wyns B, 2006, LECT NOTES COMPUT SC, V3905, P250
   Yuan Y, 2016, IEEE T EVOLUT COMPUT, V20, P180, DOI 10.1109/TEVC.2015.2443001
NR 89
TC 3
Z9 3
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 1159
EP 1178
DI 10.1007/s10270-021-00969-9
EA JAN 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000744412600003
DA 2024-07-18
ER

PT J
AU Di Ciccio, C
   Meroni, G
   Plebani, P
AF Di Ciccio, Claudio
   Meroni, Giovanni
   Plebani, Pierluigi
TI On the adoption of blockchain for business process monitoring
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Blockchain; Distributed ledger technology; Business process management;
   Software architectures; Business process monitoring
ID PROCESS MANAGEMENT; SECURITY
AB Being the blockchain and distributed ledger technologies particularly suitable to create trusted environments where participants do not trust each other, business process management represents a proper setting in which these technologies can be adopted. In this direction, current research work primarily focuses on blockchain-oriented business process design, or on execution engines able to enact processes through smart contracts. Conversely, less attention has been paid to study if and how blockchains can be beneficial to business process monitoring. This work aims to fill this gap by (1) providing a reference architecture for enabling the adoption of blockchain technologies in business process monitoring solutions, (2) defining a set of relevant research challenges derived from this adoption, and (3) discussing the current approaches to address the aforementioned challenges.
C1 [Di Ciccio, Claudio] Sapienza Univ Rome, Dept Comp Sci, Rome, Italy.
   [Meroni, Giovanni] Politecn Milan, Milan, Italy.
   [Plebani, Pierluigi] Politecn Milan, Dipartimento Elettron Infortnaz & Bioingn, Milan, Italy.
C3 Sapienza University Rome; Polytechnic University of Milan; Polytechnic
   University of Milan
RP Meroni, G (corresponding author), Politecn Milan, Milan, Italy.
EM claudio.diciccio@uniroma1.it; giovanni.meroni@polimi.it;
   pierluigi.plebani@polimi.it
RI Meroni, Giovanni/ABD-2702-2021; Di Ciccio, Claudio/H-8898-2018
OI Meroni, Giovanni/0000-0002-9551-1860; Di Ciccio,
   Claudio/0000-0001-5570-0475
FU ITS Italy [CTN01_00176_166195]; MUR under grant "Dipartimenti di
   eccellenza 2018-2022" of the Department of Computer Science at Sapienza
   University of Rome; Sapienza research project SPECTRA
FX The work of G. Meroni and P. Plebani was partly supported by the ITS
   Italy 2020 cluster under grant number "CTN01_00176_166195." The work of
   C. Di Ciccio was supported by theMUR under grant "Dipartimenti di
   eccellenza 2018-2022" of the Department of Computer Science at Sapienza
   University of Rome and by the Sapienza research project SPECTRA.
CR Adler Felix, 2020, Blockchain and Applications. 2nd International Congress. Advances in Intelligent Systems and Computing (AISC 1238), P153, DOI 10.1007/978-3-030-52535-4_16
   Ahrendt Wolfgang, 2019, Fundamentals of Software Engineering. 8th International Conference, FSEN 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11761), P228, DOI 10.1007/978-3-030-31517-7_16
   Al-Breiki H, 2020, IEEE ACCESS, V8, P85675, DOI 10.1109/ACCESS.2020.2992698
   Garcia-Garcia JA, 2020, IEEE ACCESS, V8, P142312, DOI 10.1109/ACCESS.2020.3013911
   Alves PH, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P817, DOI 10.5220/0009565108170825
   Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   Bandara H.D., 2020, EUROPLOP 20, DOI [10.1145/3424771.3424796, DOI 10.1145/3424771.3424796]
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Basile Davide, 2021, Business Process Management: Blockchain and Robotic Process Automation Forum: BPM 2021 Blockchain and RPA Forum, Proceedings. Lecture Notes in Business Information Processing (428), P102, DOI 10.1007/978-3-030-85867-4_8
   Biais B, 2019, REV FINANC STUD, V32, P1662, DOI 10.1093/rfs/hhy095
   Cappiello C, 2019, LECT NOTES BUS INF P, V361, P166, DOI 10.1007/978-3-030-30429-4_12
   Carminati B, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P58, DOI 10.1109/ICWS.2018.00015
   Chen J, 2019, THEOR COMPUT SCI, V777, P155, DOI 10.1016/j.tcs.2019.02.001
   Corradini F, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1470, DOI 10.1145/3341105.3373988
   Denisov V, 2018, LECT NOTES COMPUT SC, V11080, P139, DOI 10.1007/978-3-319-98648-7_9
   Di Ciccio C., 2019, InformatikSpektrum, V42, P182, DOI DOI 10.1007/S00287-019-01178-X
   Di Ciccio C., 2020, INT C BUSINESS PROCE, P36, DOI [10.1007/978-3-030-49418-6_3, DOI 10.1007/978-3-030-49418-6_3]
   Duchmann F., 2019, ZEUS CEUR WORKSHOP P, V2339, P13
   Dumas M., 2018, FUNDAMENTALS BUSINES
   Eberhardt J, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1084, DOI 10.1109/Cybermatics_2018.2018.00199
   Eberhardt J, 2017, LECT NOTES COMPUT SC, V10465, P3, DOI 10.1007/978-3-319-67262-5_1
   El Kharbili M., 2008, Modellierung betrieblicher Informationssysteme-Modellierung zwischen SOA und Compliance Management-27.-28. November 2008 Saarbrucken, P107
   Falazi G, 2020, LECT NOTES COMPUT SC, V12127, P134, DOI 10.1007/978-3-030-49435-3_9
   Filtz E., 2017, DATA SCI ANAL APPL, P77, DOI DOI 10.1007/978-3-658-19287-7_11
   Frauenthaler P., 2020, ABS200212837 CORR
   Frederiks RJM, 2006, DATA KNOWL ENG, V58, P4, DOI 10.1016/j.datak.2005.05.007
   Fridgen G., 2018, P 51 HAWAII INT C SY
   Hardjono T., 2018, ABS180505934 CORR
   Haslhofer B., 2016, SEMANTICS POSTERS DE
   Hewelt M., 2016, P BPM DEMO TRACK CEU, V1789, P67
   Huang Bowen, 2019, 2019 IEEE 5th International Conference on Computer and Communications (ICCC), P1231, DOI 10.1109/ICCC47050.2019.9064149
   Iqbal M, 2019, LECT NOTES BUS INF P, V361, P13, DOI 10.1007/978-3-030-30429-4_2
   Janiesch C, 2020, IEEE SYST MAN CYBERN, V6, P34, DOI 10.1109/MSMC.2020.3003135
   Kirrane S, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P539, DOI 10.1109/Blockchain50366.2020.00078
   Kirrane S, 2018, SEMANT WEB, V9, P153, DOI 10.3233/SW-180289
   Klinkmüller C, 2019, LECT NOTES BUS INF P, V361, P71, DOI 10.1007/978-3-030-30429-4_6
   Köpke J, 2019, LECT NOTES BUS INF P, V361, P87, DOI 10.1007/978-3-030-30429-4_7
   Ladleif J., 2020, BUSINESS PROCESS MAN, P67, DOI DOI 10.1007/978-3-030-58779-6_5
   Ladleif J, 2020, IEEE INT ENTERP DIST, P217, DOI 10.1109/EDOC49727.2020.00034
   Liu BW, 2020, I C DEPEND SYS NETWO, P221, DOI 10.1109/DSN48063.2020.00039
   Lo SK, 2020, COMPUT ELECTR ENG, V83, DOI 10.1016/j.compeleceng.2020.106582
   Lo SK, 2017, IEEE INT C ENG COMP, P158, DOI 10.1109/ICECCS.2017.26
   López-Pintado O, 2019, IEEE INT ENTERP DIST, P206, DOI 10.1109/EDOC.2019.00033
   López-Pintado O, 2019, LECT NOTES COMPUT SC, V11483, P399, DOI 10.1007/978-3-030-21290-2_25
   López-Pintado O, 2019, SOFTWARE PRACT EXPER, V49, P1162, DOI 10.1002/spe.2702
   Ly LT, 2015, INFORM SYST, V54, P209, DOI 10.1016/j.is.2015.02.007
   Madsen M.F., 2018, FAB, P8
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Mendling J, 2018, ACM TRANS MANAG INF, V9, DOI 10.1145/3183367
   Meroni G, 2019, LECT NOTES BUS INF P, V361, P55, DOI 10.1007/978-3-030-30429-4_5
   Meroni G, 2018, INFORM SYST, V73, P61, DOI 10.1016/j.is.2017.12.009
   Mohanty D., 2019, R3 Corda for Architects and Developers
   Mühlberger R, 2019, LECT NOTES BUS INF P, V362, P690, DOI 10.1007/978-3-030-37453-2_55
   Muhlberger Roman, 2020, Business Process Management. Blockchain and Robotic Process Automation Forum. BPM 2020 Blockchain and RPA Forum. Proceedings. Lecture Notes in Business Information Processing (LNBIP 393), P35, DOI 10.1007/978-3-030-58779-6_3
   Muller Marcel, 2020, Business Process Management. Blockchain and Robotic Process Automation Forum. BPM 2020 Blockchain and RPA Forum. Proceedings. Lecture Notes in Business Information Processing (LNBIP 393), P3, DOI 10.1007/978-3-030-58779-6_1
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nelaturu K, 2020, IEEE T ENG MANAGE, V67, P1444, DOI 10.1109/TEM.2020.2993673
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Popov S., 2019, IEEE Blockchain Technical Briefs
   Popov S, 2019, COMPUT IND ENG, V136, P160, DOI 10.1016/j.cie.2019.07.025
   Pourmirza S, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3232677
   Praitheeshan P, 2020, LECT NOTES COMPUT SC, V12570, P22, DOI 10.1007/978-3-030-65745-1_2
   Prybila C, 2020, FUTURE GENER COMP SY, V107, P816, DOI 10.1016/j.future.2017.08.024
   Schulte S, 2019, LECT NOTES BUS INF P, V361, P3, DOI 10.1007/978-3-030-30429-4_1
   Scriber BA, 2018, IEEE SOFTWARE, V35, P70, DOI 10.1109/MS.2018.2801552
   Soffer P, 2019, INFORM SYST, V81, P181, DOI 10.1016/j.is.2017.11.002
   Sturm C., 2018, INT C BUSINESS PROCE, P361
   Szabo N., 1997, First Monday, V2
   Tai S, 2018, COMM COM INF SC, V707, P205, DOI 10.1007/978-3-319-72125-5_16
   Tasca P, 2019, LEDGER-PITTSBURGH, V4, P1, DOI 10.5195/LEDGER.2019.140
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tran A.B., 2018, BPM 2018 DISSERTATIO, P56
   Van Der Aalst W., 2016, Process mining: data science in action, V2
   van der Aalst WMP., 2013, ISRN SOFTW ENG, V37
   Viriyasitavat W, 2020, J INTELL MANUF, V31, P1737, DOI 10.1007/s10845-018-1422-y
   Weber I, 2016, LECT NOTES COMPUT SC, V9850, P329, DOI 10.1007/978-3-319-45348-4_19
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Xu Xiang, 2019, arXiv
   Xu XW, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI [10.3897/phytokeys.96.23142, 10.1145/3282308.3282312]
   Xu XW, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P243, DOI 10.1109/ICSA.2017.33
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 81
TC 9
Z9 10
U1 0
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2022
VL 21
IS 3
BP 915
EP 937
DI 10.1007/s10270-021-00959-x
EA JAN 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0U0DM
UT WOS:000744412600002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Thalheim, B
AF Thalheim, Bernhard
TI Models: the fourth dimension of computer science Towards studies of
   models and modelling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model; Study of models and modelling; More
AB Models are a universal instrument in science, technology, and daily life. They function as instruments in almost every scenario. Any human activity can be (and is) supported by models, e.g. reason, explain, design, act, predict, explore, communicate, collaborate, interact, orient, direct, guide, socialises, perceive, reflect, develop, making sense, teach, learn, imagine, etc. This universal suitability is also the basis for a wide use of models and modelling in Computer Science and Engineering. We claim that models form the fourth dimension in Computer Science. This paper sketches and systematises the main ingredients of the study model and modelling.
C1 [Thalheim, Bernhard] Univ Kiel, Dept Comp Sci, D-24098 Kiel, Germany.
C3 University of Kiel
RP Thalheim, B (corresponding author), Univ Kiel, Dept Comp Sci, D-24098 Kiel, Germany.
EM bernhard.thalheim@email.uni-kiel.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 1992, HANDLEXIKON WISSENSC
   [Anonymous], 2015, WISSENSCHAFT KUNST M
   Bourbaki Nicolas., 1949, The Journal of Symbolic Logic, V14, P1
   Denning P.J., 2008, WILEY ENCY COMPUTER
   Denning PJ, 2012, COMPUT J, V55, P803, DOI 10.1093/comjnl/bxs065
   Denning PJ, 2015, GREAT PRINCIPLES OF COMPUTING, P1
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P1, DOI 10.1007/978-3-642-15865-0
   Frank U., 2011, EMISA, P93
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Hesse W., 2006, LNI, V82, P99
   Hesse Wolfgang., 2008, Informatik-Spektrum, V31, P377
   Karagiannis D., 2016, Domain-Specific Conceptual Modeling
   Kaschek R., 2003, THESIS U KLAGENFURTH
   Liu L, 2018, DATABASE-OXFORD, DOI 10.1093/database/bay034
   Mahr B., 2021, Schriften zur Modellforschung
   Mahr B., 2005, TU BERLIN SUMMER TER
   Mahr Bernd., 2015, EWE, V26, P329
   Mayr HC, 2021, SOFTW SYST MODEL, V20, P7, DOI 10.1007/s10270-020-00836-z
   Muller R., 2016, MODEL HIST IS CULTUR
   Page S. E., 2018, The Model Thinker: What You Need to Know to Make Data Work for You
   Schewe K.-D., 2012, DESIGN DEV WEB INFOR
   Simon H., 1981, The Sciences of the Artificial, V2nd ed.
   Thalheim B., 2019, COLLECTION OF PAPERS
   Thalheim Bernhard., 2000, ENTITY RELATIONSHIP
   Zimmermann W., 2004, LNCS, pV
NR 25
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 9
EP 18
DI 10.1007/s10270-021-00954-2
EA DEC 2021
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000731367600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Daszczuk, WB
AF Daszczuk, Wiktor B.
TI Graphic modeling in Distributed Autonomous and Asynchronous Automata
   (DA<SUP>3</SUP>)
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Distributed systems; Distributed system modeling; Distributed automata;
   Graphic modeling; Formal methods
AB Automated verification of distributed systems becomes very important in distributed computing. The graphical insight into the system in the early and late stages of the project is essential. In the design phase, the visual input helps to articulate the collaborative distributed components clearly. The formal verification gives evidence of correctness or malfunction, but in the latter case, graphical simulation of counterexample helps for better understanding design errors. For these purposes, we invented Distributed Autonomous and Asynchronous Automata (DA(3)), which have the same semantics as the formal verification base-Integrated Model of Distributed Systems (IMDS). The IMDS model reflects the natural characteristics of distributed systems: unicasting, locality, autonomy, and asynchrony. Distributed automata have all of these features because they share the same semantics as IMDS. In formalism, the unified system definition has two views: the server view of the cooperating distributed nodes and the agent view of the migrating agents performing distributed computations. The automata have two formally equivalent forms that reflect two views: Server DA(3) for observing servers exchanging messages, and Agent DA(3) for tracking agents, which visit individual servers in their progress of distributed calculations. We present the DA(3) formulation based on the IMDS formalism and their application to design and verify distributed systems in the Dedan environment. DA(3) formalism is compared with other concepts of distributed automata known from the literature.
C1 [Daszczuk, Wiktor B.] Warsaw Univ Technol, Inst Comp Sci, Nowowiejska Str 15-19, PL-00665 Warsaw, Poland.
C3 Warsaw University of Technology
RP Daszczuk, WB (corresponding author), Warsaw Univ Technol, Inst Comp Sci, Nowowiejska Str 15-19, PL-00665 Warsaw, Poland.
EM wbd@ii.pw.edu.pl
RI Daszczuk, Wiktor/Q-1755-2015
OI Daszczuk, Wiktor/0000-0001-7532-362X
CR Abdullah M.A., 2015, Journal of Emerging Economies and Islamic Research, V3, P1, DOI [10.24191/jeeir.v3i2.9061, DOI 10.24191/JEEIR.V3I2.9061]
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Babaoglu O, 1997, IEEE T COMPUT, V46, P642, DOI 10.1109/12.600823
   Balan MS, 2009, ELECTRON P THEOR COM, P59, DOI 10.4204/EPTCS.3.5
   BALANESCU T, 1999, J UNIVERS COMPUT SCI, V5, P494
   Baumann C, 2019, J CRYPTOGR ENG, V9, P243, DOI 10.1007/s13389-019-00216-4
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Bollig B, 2005, LECT NOTES COMPUT SC, V3731, P53
   Bollig B, 2004, LECT NOTES COMPUT SC, V3170, P146
   Bollig B, 2018, FORM METHOD SYST DES, V53, P339, DOI 10.1007/s10703-017-0282-y
   Brim L, 2006, ELECTRON NOTES THEOR, V135, P3, DOI 10.1016/j.entcs.2005.10.015
   Corbett J.C., 2000, 22 INT C SOFTW ENG I, P762, DOI [10.1145/337180.337625, DOI 10.1145/337180.337625]
   Czejdo B., 2016, AUTOBUSY TEST, V17, P1294
   Daszczuk, 2020, INTEGRATED MODEL DIS, P193, DOI [10.1007/978-3-030-12835-7_11, DOI 10.1007/978-3-030-12835-7_11]
   Daszczuk, 2020, INTEGRATED MODEL DIS, P53, DOI [10.1007/978-3-030-12835-7_5, DOI 10.1007/978-3-030-12835-7_5]
   Daszczuk Wiktor B., 2019, Contemporary Complex Systems and Their Dependability. Proceedings of the Thirteenth International Conference on Dependability and Complex Systems (DepCoS-RELCOMEX). Advances in Intelligent Systems and Computing (AISC 761), P135, DOI 10.1007/978-3-319-91446-6_14
   Daszczuk W. B., 2017, P KKIO 17 SOFTWARE E, P135
   Daszczuk W.B., 2019, STUDIES IN BIG DATA, V40, P115, DOI [10.1007/978-3-319-77604-0_9, DOI 10.1007/978-3-319-77604-0_9]
   Daszczuk W.B., 2020, INTEGRATED MODEL DIS, P161, DOI [10.1007/978-3-030-12835-7_10, DOI 10.1007/978-3-030-12835-7_10]
   Daszczuk WB., 2020, INTEGRATED MODEL DIS, P125, DOI [10.1007/978-3-030-12835-7_8, DOI 10.1007/978-3-030-12835-7_8]
   Daszczuk WB, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21134541
   Daszczuk WB, 2018, COMPUTERS, V7, DOI 10.3390/computers7040065
   Dick G, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2700, DOI 10.1109/CEC.2014.6900622
   Diekert Volker, 2012, Logic, Language, Information and Computation. Proceedings of the 19th International Workshop, WoLLIC 2012, P70, DOI 10.1007/978-3-642-32621-9_5
   Enea C, 2014, ELECTRON P THEOR COM, P74, DOI 10.4204/EPTCS.161.9
   Gorla D, 2008, INFORM COMPUT, V206, P931, DOI 10.1016/j.ic.2008.05.001
   Grosu R., 1995, TUM19533 TU MUN
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jia W., 2005, NETA, V15, DOI 10.1007/b102545
   Krishnan P., 2000, ELECT NOTES THEOR CO, V28, P5, DOI [10.1016/S1571-0661(05)80627-9, DOI 10.1016/S1571-0661(05)80627-9]
   Kutrib M, 2019, LECT NOTES COMPUT SC, V11525, P35, DOI 10.1007/978-3-030-20981-0_3
   Lanese I, 2006, ELECTRON NOTES THEOR, V154, P55, DOI 10.1016/j.entcs.2005.03.032
   Lauer H. C., 1979, Operating Systems Review, V13, P3, DOI 10.1145/850657.850658
   Lewerentz C., 1995, LNCS, P891
   Liu, 2016, COMPUTATION WILD REC
   Lodaya K, 2006, ACTA CYBERN, V17, P751
   Lutz, 2006, ACM SIGSOFT 1 ALL WO, P1
   Lutz Michael J., 2013, 2013 IEEE Frontiers in Education Conference (FIE), DOI 10.1109/FIE.2013.6684771
   Madhusudan P, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P283, DOI 10.1145/1926385.1926419
   Manna Z., 1992, The temporal logic of reactive and concurrent systems-specification, DOI DOI 10.1007/978-1-4612-0931-7
   Martin O.B., 2005, AAAI P 20 NAT C ART, P321
   Martin-Vide C., 2002, International Journal of Foundations of Computer Science, V13, P733, DOI 10.1142/S0129054102001424
   MAY D, 1983, SIGPLAN NOTICES, V18, P69, DOI 10.1145/948176.948183
   Morales LEM, 2014, IBER CONF INF SYST
   Miescicki J., 2006, ANN UMCS INFORM, V4AI, P244, DOI [10.17951/ai.2006.4.1.244-253, DOI 10.17951/AI.2006.4.1.244-253]
   Mukund M., 2012, Modern Applications of Automata Theory, P257
   Muscholl A, 2015, LECT NOTES COMPUT SC, V9135, P11, DOI 10.1007/978-3-662-47666-6_2
   Olson AG, 2005, INT CONF ACOUST SPEE, P73
   Penczek W., 2000, Fundamenta Informaticae, V43, P245
   Phawade Ramchandra, 2019, Transactions on Petri Nets and Other Models of Concurrency XIV. Lecture Notes in Computer Science (LNCS 11790), P146, DOI 10.1007/978-3-662-60651-3_6
   Poizat P, 1999, LECT NOTES COMPUT SC, V1709, P939
   Quaglia P, 2000, LECT NOTES COMPUT SC, V1784, P283
   Reiter Fabian, 2017, LIPICS, V80
   Reniers MA, 2011, LECT NOTES COMPUT SC, V6543, P494, DOI 10.1007/978-3-642-18381-2_41
   Rowstron A., 1998, World Wide Web, V1, P167, DOI 10.1023/A:1019263731139
   Sakarovitch Jacques, 2009, Elements of Automata Theory
   Sandholm A.B., 1997, BRICS REP SER, V4, DOI 10.7146/brics.v4i47.19268
   STOTTS PD, 1994, J SYST SOFTWARE, V27, P27, DOI 10.1016/0164-1212(94)90112-0
   van Schuppen JH, 2011, EUR J CONTROL, V17, P579, DOI 10.3166/EJC.17.579-602
   von der Beeck M., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P128
   Zhou Y, 2013, J COMPUT SCI TECH-CH, V28, P188, DOI 10.1007/s11390-013-1322-8
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
   ZIELONKA W, 1987, RAIRO-INF THEOR APPL, V21, P99, DOI 10.1051/ita/1987210200991
NR 65
TC 3
Z9 3
U1 2
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 363
EP 398
DI 10.1007/s10270-021-00917-7
EA NOV 2021
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000713559700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mohd-Shafie, ML
   Kadir, WMNW
   Lichter, H
   Khatibsyarbini, M
   Isa, MA
AF Mohd-Shafie, Muhammad Luqman
   Kadir, Wan Mohd Nasir Wan
   Lichter, Horst
   Khatibsyarbini, Muhammad
   Isa, Mohd Adham
TI Model-based test case generation and prioritization: a systematic
   literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Model-based testing; Test case prioritization; Test case generation;
   Systematic literature review
ID TEST SEQUENCES; TEST SCENARIOS; STATE; SEARCH; DIAGRAMS; PROGRAMS; COST
AB Model-based test case generation (MB-TCG) and prioritization (MB-TCP) utilize models that represent the system under test (SUT) for test generation and prioritization in software testing. They are based on model-based testing (MBT), a technique that facilitates automation in testing. Automated testing is indispensable for testing complex and industrial-size systems because of its advantages over manual testing. In recent years, MB-TCG and MB-TCP publications have shown an encouraging growth. However, the empirical studies done to validate these approaches must not be taken lightly because they reflect the results' validity and whether these approaches are generalizable to the industrial context. This systematic review aims at identifying and reviewing the state-of-the-art for MB-TCG, MB-TCP, and the approaches that combined MB-TCG and MB-TCP. The needs for this review were used to design the research questions. Keywords extracted from the research questions were utilized to search for studies in the literature that will answer the research questions. Prospective studies also underwent a quality assessment to ensure that only studies with sufficient quality were selected. All the research data of this review are also available in a public repository for full transparency. 122 primary studies were finalized and selected. There were 100, 15, and seven studies proposed for MB-TCG, MB-TCP, and MB-TCG and MB-TCP combination approaches, respectively. One of the main findings is that the most common limitations in the existing approaches are the dependency on specifications, the need for manual interventions, and the scalability issue.
C1 [Mohd-Shafie, Muhammad Luqman; Kadir, Wan Mohd Nasir Wan; Khatibsyarbini, Muhammad; Isa, Mohd Adham] Univ Teknol Malaysia, Fac Engn, Sch Comp, Dept Software Engn, Johor Baharu 81310, Kagawa, Malaysia.
   [Lichter, Horst] Rhein Westfal TH Aachen, Grp Software Construct, Aachen, Germany.
C3 Universiti Teknologi Malaysia; RWTH Aachen University
RP Mohd-Shafie, ML (corresponding author), Univ Teknol Malaysia, Fac Engn, Sch Comp, Dept Software Engn, Johor Baharu 81310, Kagawa, Malaysia.
EM mluqman24@graduate.utm.my; wnasir@utm.my; lichter@swc.rwth-aachen.de;
   fkmuhammad4@gmail.com; mohdadham@utm.my
RI Isa, Mohd Adham/M-6026-2019; Mohd-Shafie, Muhammad Luqman/JWP-9255-2024
OI Isa, Mohd Adham/0000-0002-0049-8510; Mohd-Shafie, Muhammad
   Luqman/0000-0001-6988-8851
FU Universiti Teknologi Malaysia (UTM); Malaysian Ministry of Higher
   Education (MOHE) under the Industry-International Incentive Grant Scheme
   (IIIGS) [Q.J130000.3051.01M86]; Academic Fellowship Scheme (SLAM)
FX The research was funded by Universiti Teknologi Malaysia (UTM), and the
   Malaysian Ministry of Higher Education (MOHE) under the
   Industry-International Incentive Grant Scheme (IIIGS) (Vote Number:
   Q.J130000.3051.01M86), and the Academic Fellowship Scheme (SLAM). The
   authors would also like to express their deepest gratitude to the
   members of the Software Engineering Research Group (SERG) and the
   anonymous reviewers for their constructive comments and suggestions.
CR Acharya A. A., 2015, COMPUT INTELL DATA M, V3, P429
   Acharya AA, 2010, INT J ADV COMPUT SC, V1, P108
   Aggarwal M, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION TECHNOLOGY (ICCCT), P133, DOI 10.1109/ICCCT.2012.34
   Ahmad J., 2017, INT J APPL ENG RES, V12, P1389
   Ahmad T, 2019, COMPUT SCI REV, V33, P98, DOI 10.1016/j.cosrev.2019.07.001
   Akbari Z, 2017, INT J SOFTW ENG KNOW, V27, P575, DOI 10.1142/S0218194017500218
   Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Anbunathan R, 2019, IET SOFTW, V13, P423, DOI 10.1049/iet-sen.2018.5207
   Andrade WL, 2013, IEEE T SOFTWARE ENG, V39, P1216, DOI 10.1109/TSE.2013.13
   [Anonymous], 2008, P 8 ACM IEEE INT C E
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 2013, INT C ROL TECHN NAT
   Arcaini Paolo, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P36, DOI 10.1007/978-3-642-30885-7_3
   Arcaini P, 2019, IEEE T SOFTWARE ENG, V45, P507, DOI 10.1109/TSE.2017.2781231
   Arcaini P, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P119, DOI 10.1145/2786805.2786837
   Arcaini P, 2014, SCI COMPUT PROGRAM, V94, P93, DOI 10.1016/j.scico.2014.02.007
   Arora PK, 2018, IET SOFTW, V12, P30, DOI 10.1049/iet-sen.2016.0203
   Arora PK, 2018, ARAB J SCI ENG, V43, P447, DOI 10.1007/s13369-017-2796-4
   Arora V, 2017, COMPUT LANG SYST STR, V50, P1, DOI [10.1016/j.cl.2017.05.002, 10.1016/j.c1.2017.05.002]
   Arrieta A, 2018, IEEE T IND INFORM, V14, P1055, DOI 10.1109/TII.2017.2788019
   Asoudeh N, 2014, PROC INT SYMP SOFTW, P288, DOI 10.1109/ISSRE.2014.14
   Bahrin NK, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P43, DOI 10.1109/MySEC.2015.7475193
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli F, 2016, SCI COMPUT PROGRAM, V120, P25, DOI 10.1016/j.scico.2016.01.003
   Belli F, 2015, IEEE T SOFTWARE ENG, V41, P113, DOI 10.1109/TSE.2014.2360690
   Belli F, 2014, SOFTWARE PRACT EXPER, V44, P201, DOI 10.1002/spe.2161
   Belli F, 2012, IEICE T INF SYST, VE95D, P2211, DOI 10.1587/transinf.E95.D.2211
   Belli F, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P718
   Bittner R., 2019, INT SOC MUSIC INFORM, P99, DOI [10.5281/zenodo.3527750, DOI 10.5281/ZENODO.3527750]
   Bonfanti S, 2018, IEEE ICST WORKSHOP, P185, DOI 10.1109/ICSTW.2018.00049
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand Lionel, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P66, DOI 10.1007/978-3-642-39742-4_7
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chang-ai Sun, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P853, DOI 10.1109/CSE.2009.99
   Chen MS, 2010, DES AUTOM EMBED SYST, V14, P105, DOI 10.1007/s10617-010-9052-4
   Chen MS, 2009, COMPUT J, V52, P545, DOI 10.1093/comjnl/bxm057
   Chen Y, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P87, DOI 10.1109/QRS-C.2018.00029
   Choi YM, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9173492
   Chugh MA., 2017, INT J RECENT INNOV T, V5, P273
   de Souza EF, 2017, SOFTWARE QUAL J, V25, P373, DOI 10.1007/s11219-015-9300-8
   Devroey X., 2014, SOFTW PROD LIN C, P86, DOI DOI 10.1145/2647908.2655971
   Ding ZH, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5598-5
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   El-Fakih K, 2004, IEEE T SOFTWARE ENG, V30, P425, DOI 10.1109/TSE.2004.31
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Emam SS, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2789209
   Endo AT, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1637
   Endo AT, 2013, 15 INT C INF INT WEB, P240
   Enoiu EP, 2016, LECT NOTES COMPUT SC, V9976, P155, DOI 10.1007/978-3-319-47443-4_10
   Enoiu EP, 2016, INT J SOFTW TOOLS TE, V18, P335, DOI 10.1007/s10009-014-0355-9
   Enoiu EP, 2013, IEEE ICST WORKSHOP, P158, DOI 10.1109/ICSTW.2013.27
   Ernits J, 2009, LECT NOTES COMPUT SC, V5826, P211
   Fragal VH, 2019, COMPUT J, V62, P109, DOI 10.1093/comjnl/bxy046
   Fraser G, 2008, SOFTWARE QUAL J, V16, P161, DOI 10.1007/s11219-007-9031-6
   Fraser G, 2007, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P267
   Gadkari AmbarA., 2007, MoDeVVa workshop Model-Driven Engineering,Verification and Validation, P33, DOI 10.1002/stvr.1489
   Gallagher L, 2006, SOFTW TEST VERIF REL, V16, P215, DOI 10.1002/stvr.340
   Gargantini A, 2003, LECT NOTES COMPUT SC, V2589, P263
   Gökçe N, 2015, TURK J ELECTR ENG CO, V23, P623, DOI 10.3906/elk-1209-109
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Guan Jing., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1
   Gupta Prateek, 2011, 2011 INT C COMM IND, P1
   Gurav Y., 2013, INT J ADV RES TECHNO, V2, P282
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hessel A, 2007, ELECTRON NOTES THEOR, V190, P47, DOI 10.1016/j.entcs.2007.08.005
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Ingle S. E., 2015, INT RES J ENG TECHNO, V2, P971
   Javed Hasan, 2016, Journal of Software, V11, P347, DOI 10.17706/jsw.11.4.347-361
   Jiang ZY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P363, DOI 10.1109/QRS-C.2017.67
   Jie Zhang, 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P76, DOI 10.1109/IWAST.2012.6228994
   Kalaee A, 2019, INFORM SOFTWARE TECH, V108, P1, DOI 10.1016/j.infsof.2018.12.001
   Kalaji AS, 2011, INFORM SOFTWARE TECH, V53, P1297, DOI 10.1016/j.infsof.2011.06.004
   Kaur K., 2014, INT J INVENT ENG SCI, V2, P17
   Keele S, 2007, GUIDELINES PERFORMIN
   Keum C, 2006, LECT NOTES COMPUT SC, V3964, P103
   Khamaiseh S, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P405, DOI 10.1109/QRS.2018.00054
   KHANDAI M, 2011, INT J COMPUTER SCI I, V2, P1164
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kirkici A, 2018, IEEE ICST WORKSHOP, P398, DOI 10.1109/ICSTW.2018.00080
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   Kruse P. M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P539, DOI 10.1109/ICST.2012.139
   Kundu D, 2009, SOFTW TEST VERIF REL, V19, P297, DOI 10.1002/stvr.407
   Lasi H, 2014, BUS INFORM SYST ENG+, V6, P239, DOI 10.1007/s12599-014-0334-4
   Li WB, 2018, COMM COM INF SC, V779, P77, DOI 10.1007/978-3-319-71734-0_7
   Liu B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P359, DOI 10.1109/SANER.2017.7884636
   Liu P, 2018, IEEE ACCESS, V6, P56222, DOI 10.1109/ACCESS.2018.2872774
   Liu WL, 2007, INT C COMP AID DES C, P252
   Lorber F, 2018, IEEE ICST WORKSHOP, P59, DOI 10.1109/ICSTW.2018.00029
   Mahadik P., 2016, INT J SECUR APPL, V10, P13, DOI [10.14257/ijseia.2016.10.12.02, DOI 10.14257/IJSEIA.2016.10.12.02]
   Mahali P, 2018, INT J SYST ASSUR ENG, V9, P1063, DOI 10.1007/s13198-018-0736-7
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Marinescu R, 2017, IEEE ICST WORKSHOP, P69, DOI 10.1109/ICSTW.2017.19
   Masood A, 2009, IEEE T SOFTWARE ENG, V35, P654, DOI 10.1109/TSE.2009.35
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Mohanty S., 2011, INT J COMPUT SCI INF, V2, P1042
   Mohd Shafie M. L., 2018, J THEORETICAL APPL I, V96, P4548
   Morozov A, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P20, DOI 10.1109/SATE.2017.11
   Nabuco M, 2014, LECT NOTES COMPUT SC, V8584, P248, DOI 10.1007/978-3-319-09153-2_19
   Nayak Ashalatha, 2012, ISRN Software Engineering, DOI 10.5402/2012/324054
   Nayak A, 2011, SOFTW SYST MODEL, V10, P63, DOI 10.1007/s10270-009-0133-4
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nguyen, 2016, VNU J COMPUT SCI COM, V31, P28
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Nguyen R., 2013, INT WORKSH FUT INT T, P59, DOI [10.1007/978-3-319-07785-7_4, DOI 10.1007/978-3-319-07785-7_4]
   Pahwa N., 2014, INT J COMPUT APPL, V95, P1
   Paiva SC, 2016, FORM ASP COMPUT, V28, P65, DOI 10.1007/s00165-015-0350-2
   Panigrahi CR, 2010, COMM COM INF SC, V54, P380
   Panthi V, 2017, INT J SYST ASSUR ENG, V8, P242, DOI 10.1007/s13198-016-0419-1
   Peranandam P, 2012, DES AUT TEST EUROPE, P308
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Pradhan S, 2022, J KING SAUD UNIV-COM, V34, P993, DOI 10.1016/j.jksuci.2019.05.005
   Prasanna M., 2005, ACAD OPEN INTERNET J, V15
   Prasanna M., 2009, INT J ADV SOFT COMPU, V1, P19
   Prasanna M., 2015, INDIAN J SCI TECHNOL, V8, P1
   Pretschner A, 2005, LECT NOTES COMPUT SC, V3472, P281
   Rajal J.S., 2015, International Journal of Computer Applications, V116
   Rapos E.J., 2015, 2015 IEEE 8 INT C SO, P1
   Rathore Lokesh Kumar, 2015, International Journal of Research in Computer Applications and Robotics, V3, P31
   Rava Mohammad, 2016, INT J SOFTWARE ENG I, V1, P221, DOI DOI 10.14257/IJSEIA.2016.10.1.21
   Reis S, 2007, LECT NOTES COMPUT SC, V4422, P321
   Rezaee A, 2017, SCI IRAN, V24, P3132, DOI 10.24200/sci.2017.4528
   Rui Yang, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P17, DOI 10.1109/HASE.2011.12
   Sabbaghi A, 2017, 2017 IEEE 4TH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P942, DOI 10.1109/KBEI.2017.8324934
   Saeed A, 2017, INT J SOFTW ENG KNOW, V27, P601, DOI 10.1142/S021819401750022X
   Samuel P, 2008, IET SOFTW, V2, P79, DOI 10.1049/iet-sen:20060061
   Sant Jessica., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Sarma M., 2008, International Journal of Information and Communication Technology, V1, P347, DOI 10.1504/IJICT.2008.024007
   Satpathy M, 2012, SOFTW TEST VERIF REL, V22, P457, DOI 10.1002/stvr.444
   Seqerloo AY, 2019, REQUIR ENG, V24, P119, DOI 10.1007/s00766-018-0304-3
   Setiani N, 2019, PROCEEDINGS OF THE 2019 2ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND INFORMATION MANAGEMENT (ICSIM 2019) / 2019 2ND INTERNATIONAL CONFERENCE ON BIG DATA AND SMART COMPUTING (ICBDSC 2019), P91, DOI 10.1145/3305160.3305186
   Shafie ML, 2017, J TELECOMMUN ELECT C, V9, P125
   Shah Syed Asad Ali, 2016, Journal of Software, V11, P464, DOI 10.17706/jsw.11.5.464-480
   Sharma S, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND GRID COMPUTING (PDGC), P177, DOI 10.1109/PDGC.2016.7913140
   Shin KW, 2018, INT J AUTO TECH-KOR, V19, P107, DOI 10.1007/s12239-018-0011-6
   Shirole Mahesh, 2013, Software Engineering Notes, V38, P119, DOI 10.1145/2492248.2492274
   Shu T, 2016, INFORM SCIENCES, V370, P63, DOI 10.1016/j.ins.2016.07.059
   Singh R, 2019, IET SOFTW, V13, P403, DOI 10.1049/iet-sen.2018.5043
   Singh R, 2014, INT CONF COMM SYST, P981, DOI 10.1109/CSNT.2014.201
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Skou A., 2003, P 3 INT WORKSH FORM, P114, DOI 10.1007/978-3-540-24617-6_9
   Soucha M, 2018, IEEE ICST WORKSHOP, P194, DOI 10.1109/ICSTW.2018.00050
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Sulaiman RA, 2020, ADV INTELL SYST, V1073, P199, DOI 10.1007/978-3-030-33582-3_19
   Sun CA, 2016, SOFTWARE PRACT EXPER, V46, P551, DOI 10.1002/spe.2324
   Swain RK, 2014, INNOV SYST SOFTW ENG, V10, P165, DOI 10.1007/s11334-013-0228-5
   Swain S.K., 2010, International Journal of Software Engineering, V3, P21
   Swain SK, 2010, J OBJECT TECHNOL, V9, P1, DOI 10.5381/jot.2010.9.5.a1
   Tahat L, 2017, SOFTWARE QUAL J, V25, P703, DOI 10.1007/s11219-016-9330-x
   Tahiliani S., 2012, INT J COMPUT ENG RES, V2, P1396
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162, DOI 10.1109/ICSE.2013.6606562
   Tiple B., 2014, INT J COMPUT SCI INF, V5, P6736
   Tung K.T., 2015, INT J ELECT COMPUT E, V5
   Turlea A, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P242, DOI 10.1109/QRS-C.2018.00052
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   van Eck NJ, 2010, SCIENTOMETRICS, V84, P523, DOI 10.1007/s11192-009-0146-3
   Wang J., 2019, FORMAL METHODS COMPU, DOI [10.1201/9780429184185, DOI 10.1201/9780429184185]
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wong S, 2013, IEEE INT SYMP CIRC S, P1724, DOI 10.1109/ISCAS.2013.6572197
   Wong WE, 2009, INFORM SOFTWARE TECH, V51, P1505, DOI 10.1016/j.infsof.2009.06.005
   Wotawa F., 2007, P 3 INT WORKSH ADV M, P64, DOI 10.1145/1291535.1291542
   Xiaobo Han, 2012, 2012 International Symposium on Computer, Consumer and Control (IS3C 2012), P886, DOI 10.1109/IS3C.2012.226
   Xu DX, 2015, IEEE T RELIAB, V64, P247, DOI 10.1109/TR.2014.2354172
   Xu DX, 2012, SOFTW TEST VERIF REL, V22, P267, DOI 10.1002/stvr.440
   Yano T., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P164, DOI 10.1109/ICSTW.2011.37
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Zeller, 2017, P S APPL COMP MARR M, P1213, DOI 10.1145/3019612.3019778
   Zhang CC, 2017, IEEE INT CONF AUTOM, P38, DOI 10.1109/ASE.2017.8115616
   Zhang HL, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P64, DOI [10.1109/AST.2016.018, 10.1145/2896921.2896932]
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
   Zhao R., 2018, 13 INT C SOFTW ENG K, P548, DOI [10.18293/SEKE2018-177, DOI 10.18293/SEKE2018-177]
NR 185
TC 9
Z9 9
U1 6
U2 43
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 717
EP 753
DI 10.1007/s10270-021-00924-8
EA SEP 2021
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000693504300001
DA 2024-07-18
ER

PT J
AU Sanchez, BA
   Zolotas, A
   Rodriguez, HH
   Kolovos, D
   Paige, RF
   Cooper, JC
   Hampson, J
AF Sanchez, Beatriz A.
   Zolotas, Athanasios
   Rodriguez, Horacio Hoyos
   Kolovos, Dimitris
   Paige, Richard F.
   Cooper, Justin C.
   Hampson, Jason
TI Runtime translation of OCL-like statements on Simulink models: Expanding
   domains and optimising queries
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model driven engineering; Interoperability; Epsilon; MATLAB Simulink;
   Query optimisation; Eclipse Modelling Framework
ID SOFTWARE
AB Open-source model management frameworks such as OCL and ATL tend to focus on manipulating models built atop the Eclipse Modelling Framework (EMF), a de facto standard for domain specific modelling. MATLAB Simulink is a widely used proprietary modelling framework for dynamic systems that is built atop an entirely different technical stack to EMF. To leverage the facilities of open-source model management frameworks with Simulink models, these can be transformed into an EMF-compatible representation. Downsides of this approach include the synchronisation of the native Simulink model and its EMF representation as they evolve; the completeness of the EMF representation, and the transformation cost which can be crippling for large Simulink models. We propose an alternative approach to bridge Simulink models with open-source model management frameworks that uses an "on-the-fly" translation of model management constructs into MATLAB statements. Our approach does not require an EMF representation and can mitigate the cost of the upfront transformation on large models. To evaluate both approaches we measure the performance of a model validation process with Epsilon (a model management framework) on a sample of large Simulink models available on GitHub. Our previous results suggest that, with our approach, the total validation time can be reduced by up to 80%. In this paper, we expand our approach to support the management of Simulink requirements and dictionaries, and we improve the approach to perform queries on collections of model elements more efficiently. We demonstrate the use of the Simulink requirements and dictionaries with a case study and we evaluate the optimisations on collection queries with an experiment that compares the performance of a set of queries on models with different sizes. Our results suggest an improvement by up to 99% on some queries.
C1 [Sanchez, Beatriz A.; Zolotas, Athanasios; Kolovos, Dimitris; Paige, Richard F.; Cooper, Justin C.] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Rodriguez, Horacio Hoyos] Kinori Tech, Merida, Yucatan, Mexico.
   [Paige, Richard F.] McMaster Univ, Dept Comp & Software, Hamilton, ON, Canada.
   [Hampson, Jason] Rolls Royce, Control Syst, Derby, England.
C3 University of York - UK; McMaster University; Rolls-Royce Holding Group
RP Sanchez, BA (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM basp500@york.ac.uk; thanos.zolotas@york.ac.uk; h.hoyos.r@kinori.tech;
   dimitris.kolovos@york.ac.uk; paigeri@mcmaster.ca;
   justin.cooper@york.ac.uk; jason.hampson2@rolls-royce.com
RI Zolotas, Athanasios/AAA-4972-2022; Kolovos, Dimitrios/L-9830-2014
OI Zolotas, Athanasios/0000-0001-6020-4468; Sanchez,
   Beatriz/0000-0002-0601-947X; Hoyos Rodriguez,
   Horacio/0000-0002-0322-059X; Kolovos, Dimitris/0000-0002-1724-6563;
   Paige, Richard Freeman/0000-0002-1978-9852
FU Innovate UK; UK aerospace industry through the HICLASS project [113213];
   EPSRC through the National Productivity Investment Fund; NSERC;
   Rolls-Royce [EP/R512230/1]
FX The work in this paper was partially supported by Innovate UK and the UK
   aerospace industry through the HICLASS project (contract #113213) and
   the EPSRC through the National Productivity Investment Fund in
   partnership with Rolls-Royce under Grant EP/R512230/1. Richard Paige
   acknowledges the support of NSERC via the Discovery Grant program.
CR [Anonymous], IBM RATIONAL DOORS
   [Anonymous], POLARSYS CAPELLA
   [Anonymous], EPSILON SIMULINK VS
   [Anonymous], OPEN SERVICES LIFECY
   [Anonymous], ANSYS ANSYS SCADE SU
   [Anonymous], 2020, BEST PRACT GUID REQI
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], Bigquery
   [Anonymous], WHAT IS DAT DICT
   [Anonymous], EPSILON SIMULINK QUE
   [Anonymous], 2020, LARG SCAL MOD
   [Anonymous], ECLIPSE MODELING FRA
   Bender M, 2015, SCI COMPUT PROGRAM, V113, P29, DOI 10.1016/j.scico.2015.07.005
   Chabibi B, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P148, DOI 10.1109/WETICE.2016.39
   Dassautl Systems, REQTIFY
   Di Natale M, 2018, SOFTW SYST MODEL, V17, P11, DOI 10.1007/s10270-016-0534-0
   Di Natale M, 2014, LECT NOTES COMPUT SC, V8767, P353, DOI 10.1007/978-3-319-11653-2_22
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   El-Khoury J, 2016, LECT NOTES COMPUT SC, V9764, P36, DOI 10.1007/978-3-319-42061-5_3
   Engel G, 2018, LECT NOTES COMPUT SC, V10729, P315, DOI 10.1007/978-3-319-74781-1_22
   Filipovikj P, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2168, DOI 10.1145/3297280.3297493
   Francis M, 2013, LECT NOTES COMPUT SC, V8107, P35, DOI 10.1007/978-3-642-41533-3_3
   itemis AG, YAK TRAC
   Kolovos D.S., 2013, P WORKSH EXTR MOD CO, P46
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2017, SOFTW SYST MODEL, V16, P229, DOI 10.1007/s10270-015-0455-3
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Maro S, 2016, INT REQUIR ENG CONF, P407, DOI 10.1109/RE.2016.19
   MathWorks, REQ DEF CRUIS CONTR
   Mathworks, MATLAB STAT
   MathWorks, MATLAB SIM
   MathWorks, CREAT SIMPL MOD
   Mikulcak M, 2019, INF TECHNOL CONTROL, V48, P299, DOI 10.5755/j01.itc.48.2.21759
   OpenJDK, JAV MICR HARN
   Pantelic V, 2018, INT J SOFTW TOOLS TE, V20, P95, DOI 10.1007/s10009-017-0450-9
   Pantelic V, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P50
   Rizzi Starr, 2015, TECH REP
   Sanchez BA, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P205, DOI 10.1109/MODELS.2019.000-1
   Sindico A, 2011, SIMULTECH 2011: PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON SIMULATION AND MODELING METHODOLOGIES, TECHNOLOGIES AND APPLICATIONS, P45
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   The Eclipse Foundation, PAPYRUS
   The Eclipse Foundation, EPS PROJ
   The Eclipse Foundation, LYO SIM ADAPT
   The Eclipse Foundation, LYO PROJ
   The Eclipse Foundation, ACC PROJ
   Viatra, MASS MATL SIM INT FR
   Zolotas A, 2020, SOFTW SYST MODEL, V19, P17, DOI 10.1007/s10270-019-00732-1
NR 49
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD DEC
PY 2021
VL 20
IS 6
BP 1889
EP 1918
DI 10.1007/s10270-021-00910-0
EA AUG 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ3QM
UT WOS:000687501300001
PM 34924919
OA hybrid, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Kraas, A
AF Kraas, Alexander
TI On the automation-supported derivation of domain-specific UML profiles
   considering static semantics
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID GENERATION
AB In the light of standardization, the model-driven engineering (MDE) is becoming increasingly important for the development of DSLs, in addition to traditional approaches based on grammar formalisms. Metamodels define the abstract syntax and static semantics of a DSL and can be created by using the language concepts of the Meta Object Facility (MOF) or by defining a UML profile. Both metamodels and UML profiles are often provided for standardized DSLs, and the mappings of metamodels to UML profiles are usually specified informally in natural language, which also applies for the static semantics of metamodels and/or UML profiles, which has the disadvantage that ambiguities can occur, and that the static semantics must be manually translated into a machine-processable language. To address these weaknesses, we propose a new automated approach for deriving a UML profile from the metamodel of a DSL. One novelty is that subsetting or redefining metaclass attributes are mapped to stereotype attributes whose values are computed at runtime via automatically created OCL expressions. The automatic transfer of the static semantics of a DSL to a UML profile is a further contribution of our approach. Our DSL Metamodeling and Derivation Toolchain (DSL-MeDeTo) implements all aspects of our proposed approach in Eclipse. This enabled us to successfully apply our approach to the two DSLs Test Description Language (TDL) and Specification and Description Language (SDL).
C1 [Kraas, Alexander] Univ Bamberg, Software Technol Res Grp, Bamberg, Germany.
C3 Otto Friedrich University Bamberg
RP Kraas, A (corresponding author), Univ Bamberg, Software Technol Res Grp, Bamberg, Germany.
EM Alexander.Kraas@swt-bamberg.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2013, DOMAIN ENG PRODUCT L
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], 2016, ETSIES2031191
   [Anonymous], 2012, Service oriented architecture Modeling Language ( SoaML ) Specification
   Bergmayr Alexander, 2013, CEUR WORKSHOP PROC, V1104, P22
   Boulet P, 2015, LECT NOTES COMPUT SC, V9369, P193, DOI 10.1007/978-3-319-24912-4_14
   Clark T., 2015, COMPUTING RES REPOSI
   D'Souza D, 1999, LECT NOTES COMPUT SC, V1723, P265
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Efftinge Sven., 2006, WORKSHOP MODELING S, V32, P118
   ETSI, 2016, ETSIES2031192
   ETSI, 2018, ETSIES2018731
   Falleri JR, 2008, LECT NOTES COMPUT SC, V5301, P326, DOI 10.1007/978-3-540-87875-9_24
   Fischer J, 2005, LECT NOTES COMPUT SC, V3319, P208
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Giachetti G., 2009, INT J COMPUTER SCI A, V6, P145
   Giachetti G, 2010, J UNIVERS COMPUT SCI, V16, P2353
   Giachetti G, 2009, LECT NOTES COMPUT SC, V5565, P110, DOI 10.1007/978-3-642-02144-2_13
   Giachetti G, 2008, LECT NOTES COMPUT SC, V5232, P113, DOI 10.1007/978-3-540-87991-6_16
   Goldschmidt T, 2008, LECT NOTES COMPUT SC, V5095, P169, DOI 10.1007/978-3-540-69100-6_12
   Heidenreich F., 2013, LNCS, V7680, P322
   ITU-T, 2007, REC Z 109 SPEC DESCR
   ITU-T, 2016, REC Z 100 SPEC DESCR
   ITU-T, 2013, REC Z 109 SPEC DESCR
   ITU-T:, 2011, REC Z 120 MESS SEQ C
   Karsai G., 2009, DOMAIN SPECIFIC MODE
   Kobryn C, 1999, COMMUN ACM, V42, P29, DOI 10.1145/317665.317673
   Kraas A, 2017, LNCS, V10567, P1
   Kraas A., 2019, THESIS U BAMBERG GER
   Kraas A, 2009, 106519 FRAUNH ESK
   Kraas A, 2017, LECT NOTES COMPUT SC, V10376, P3, DOI 10.1007/978-3-319-61482-3_1
   Kraas A, 2014, LECT NOTES COMPUT SC, V8769, P255, DOI 10.1007/978-3-319-11743-0_18
   Kraas A, 2011, LECT NOTES COMPUT SC, V6598, P108, DOI 10.1007/978-3-642-21652-7_7
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   Langer P, 2010, LECT NOTES COMPUT SC, V6142, P153, DOI 10.1007/978-3-642-13688-7_11
   Maag S., 2015, P 2015 C RES AD CONV, P497, DOI DOI 10.1145/2811411.2811554
   Makedonski P, 2016, LECT NOTES COMPUT SC, V9959, P116, DOI 10.1007/978-3-319-46613-2_8
   Malavolta I, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P259, DOI 10.1109/SEAA.2015.64
   Noyrit Florian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P20, DOI 10.1007/978-3-642-33666-9_3
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   OMG, 2015, OMG MET FAC MOF COR
   OMG, 2014, OBJECT CONSTRAINT LA
   OMG, 2019, UML PROF BPMN PROC V
   OMG, 2011, OMG UN MOD LANG OMG
   OMG, 2011, MET FAC MOF 2 0 QUER
   *OMG, 2008, SOFTW SYST PROC ENG
   OMG: OMG Unified Modeling Language (OMG UML), 2011, SUP VERS 2 4 1
   OMG: OMG Unified Modeling Language (OMG UML), 2011, INFR VERS 2 4 1
   Scheidgen M, 2009, THESIS HUMBOLDT U BE
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Ulrich A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P601
   Weyer, 2013, LECT NOTES INFORMATI, V215, P235
   Wimmer M, 2009, INT J WEB INF SYST, V5, P372, DOI 10.1108/17440080910983592
NR 56
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2022
VL 21
IS 1
BP 51
EP 79
DI 10.1007/s10270-021-00890-1
EA MAY 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB5IL
UT WOS:000653697400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Koutsopoulos, G
   Henkel, M
   Stirna, J
AF Koutsopoulos, Georgios
   Henkel, Martin
   Stirna, Janis
TI An analysis of capability meta-models for expressing dynamic business
   transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Capability; Enterprise modeling; Change; Adaptability; Transformation
ID ARCHITECTURE; DESIGN; SYSTEM
AB Environmental dynamism is gaining ground as a driving force for enterprise transformation. To address the changes, the capabilities of digital enterprises need to adapt. Capability modeling can facilitate this process of transformation. However, a plethora of approaches for capability modeling exist. This study explores how concepts relevant to change have been implemented in the meta-models of these approaches, aiming to visualize relationships among change-related concepts, and identify ways to improve capability modeling toward a more efficient depiction of capability change. The concepts are visualized in concept maps, and a framework is developed to assist the classification of concepts relevant to change functions. Similarities and differences among the existing models are discussed, leading to suggestions toward improvements of capability modeling for capability adaptation.
C1 [Koutsopoulos, Georgios; Henkel, Martin; Stirna, Janis] Stockholm Univ, Dept Comp & Syst Sci, Stockholm, Sweden.
C3 Stockholm University
RP Koutsopoulos, G (corresponding author), Stockholm Univ, Dept Comp & Syst Sci, Stockholm, Sweden.
EM georgios@dsv.su.se; martinh@dsv.su.se; js@dsv.su.se
OI Koutsopoulos, Georgios/0000-0003-2511-9086
FU Stockholm University
FX Open access funding provided by Stockholm University.
CR Aldea Adina, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P352
   Aldea A, 2014, CONF BUS INFORM, P183, DOI 10.1109/CBI.2014.45
   [Anonymous], 2017, WIRELESS MOBILE COMM, DOI DOI 10.1007/978-3-319-58877-3_16
   [Anonymous], 2012, MODAF ONTOLOGICAL DA
   [Anonymous], 2018, TOGAF STAND VERS 9 2
   [Anonymous], 2012, REF ARCH FDN SERV OR
   [Anonymous], 2007, DYNAMIC CAPABILITIES
   Anteroinen J., 2012, 2012 7th International Conference on System of Systems Engineering (SoSE 2012). Proceedings, P167, DOI 10.1109/SYSoSE.2012.6384199
   Antunes G, 2013, INCOSE INT S, V23, P590
   Antunes G, 2013, LECT NOTES BUS INF P, V143, P29
   Antunes G, 2011, IEEE INT ENTERP, P3, DOI 10.1109/EDOCW.2011.9
   Azevedo CLB, 2015, INFORM SYST, V54, P235, DOI 10.1016/j.is.2015.04.008
   Baccar Sana, 2016, International Journal of Business Information Systems, V22, P26
   Barbero M, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P277, DOI 10.1109/ECBS.2008.42
   Barroero T, 2010, IFIP ADV INF COMM TE, V326, P32
   Becker C., 2011, INT C PRES DIG OBJ I
   Becker P, 2011, NEUE Z MUSIK, P84
   Beimborn D., 2005, IPSI C AM IT JAN
   Bergstrom S, 2015, MODELLING BUSINESS C
   Bhiri S., 2013, WEB INFORM SYSTEMS T, P70, DOI 10.1007/978-3-642-36608-6_5
   Bork D, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.101425
   Boyd J.R., 1996, The essence of winning and losing, V12, P123
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bravos G, 2017, EAI ENDORSED T INTER, V3, P153051, DOI 10.4108/eai.31-8-2017.153051
   Caesar B., 2019, MIM 2019 POSTPROCEED
   Danesh M.H, 2018, P DOCT CONS 11 IFIP, P31
   Danesh MH, 2015, LECT NOTES COMPUT SC, V9381, P358, DOI 10.1007/978-3-319-25264-3_26
   DeLoach Scott A., 2010, International Journal of Agent-Oriented Software Engineering, V4, P244, DOI 10.1504/IJAOSE.2010.036984
   DeLoach SA, 2008, AUTON AGENT MULTI-AG, V16, P13, DOI 10.1007/s10458-007-9019-4
   Derguech W, 2018, COMPUT J, V61, P1075, DOI 10.1093/comjnl/bxy011
   Derguech W, 2017, INFORM SYST, V72, P77, DOI 10.1016/j.is.2017.10.001
   du Toit Francois A., 2015, International MultiConference of Engineers and Computer Scientists 2015 (IMECS). Proceedings, P482
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Feltus C., 2017, COMPLEX SYST INFORM, P75
   Feltus C, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P412, DOI 10.1109/ARES.2009.45
   Ge BF, 2013, SYSTEMS ENG, V16, P363, DOI 10.1002/sys.21253
   Gong J, 2013, 2013 5TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK & MULTIMEDIA TECHNOLOGY (IC-BNMT), P30, DOI 10.1109/ICBNMT.2013.6823909
   Gongolidis E, 2016, 20TH PAN-HELLENIC CONFERENCE ON INFORMATICS (PCI 2016), DOI 10.1145/3003733.3003783
   Grabis  J., 2018, CAPABILITY MANAGEMEN, P139, DOI [10.1007/978-3-319-90424-58, DOI 10.1007/978-3-319-90424-5_8]
   Grabis J., 2018, CAPABILITY MANAGEMEN, P59, DOI [10.1007/978-3-319-90424-5_4, DOI 10.1007/978-3-319-90424-5_4]
   Grabis J, 2016, LECT NOTES BUS INF P, V249, P52, DOI 10.1007/978-3-319-39564-7_5
   Helfat CE, 2011, STRATEGIC MANAGE J, V32, P1243, DOI 10.1002/smj.955
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P261, DOI 10.1007/978-1-4419-5653-8_18
   Homann U., 2006, EFFICIENT FLEXIBLE B
   Iacob ME, 2012, IEEE INT ENTERP DIST, P11, DOI 10.1109/EDOC.2012.12
   Iacobucci J.V, 2012, RAPID ARCHITECTURE A
   Johannesson P., 2014, An Introduction to Design Science, DOI [10.1007/978-3-319-10632-8, DOI 10.1007/978-3-319-10632-8]
   Klinkmuller C., 2010, BUSINESS INFORM SYST, P242, DOI 10.1007/978-3-642-12814-1_21
   Koç H, 2015, LECT NOTES BUS INF P, V235, P209, DOI 10.1007/978-3-319-25897-3_14
   Koç H, 2014, LECT NOTES BUS INF P, V178, P53
   Kolini F., 2015, CONFIRM
   Koutsopoulos G., 2018, JOINT P BIR 2018 WOR, P387
   Koutsopoulos G, 2019, LECT NOTES BUS INF P, V352, P181, DOI 10.1007/978-3-030-20618-5_13
   Kudryavtsev D., 2014, Proceedings of the 1st International Workshop on Capability-oriented Business Informatics (CoBI) as part of the 16th IEEE Conference on Business Informatics, Geneve, 1182, P15
   Liu L, 2009, SIMUL MODEL PRACT TH, V17, P1430, DOI 10.1016/j.simpat.2009.06.012
   Loucopoulos P, 2018, PROCEEDINGS OF 2018 10TH INTERNATIONAL CONFERENCE ON COMPUTER AND AUTOMATION ENGINEERING (ICCAE 2018), P185, DOI 10.1145/3192975.3192998
   Loucopoulos P., 2016, Domain-specific conceptual modeling, P197, DOI [10.1007/978-3-319-39417-6_9, DOI 10.1007/978-3-319-39417-6_9]
   Loucopoulos P., 2016, AMCIS 2016 P ASS INF, P1
   Loucopoulos P, 2019, LECT NOTES COMPUT SC, V11483, P276, DOI 10.1007/978-3-030-21290-2_18
   Malik N, 2013, ENTERPRISE BUSINESS
   Miklo J, 2012, J THEOR APPL INF TEC, V43, P301
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   NATO, 2018, NATO Architecture Framework v.4
   Nunes I., 2016, INT J AGENT ORIENTED, V5, P203
   O. M. G. (OMG), 2012, SERV OR ARCH MOD LAN
   Object Management Group (OMG), 2018, VAL DEL MOD LANG V 1
   Object Management Group (OMG), 2015, VAL DEL MOD LANG
   OMG, 2011, BUS PROC MOD NOT
   PAPAZOGLOU A, 2014, CAPABILITY BASED PLA
   Pastor O, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.4
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petrevska Nechkoska R., 2018, P 2 INT WORKSH PRACT, P61
   Plum N, 2018, TRAK ENTERPRISE ARCH
   Qi YD, 2015, J SYST ENG ELECTRON, V26, P754, DOI 10.1109/JSEE.2015.00084
   Radeck C, 2017, LECT NOTES BUS INF P, V292, P58, DOI 10.1007/978-3-319-66468-2_4
   Rafati L, 2014, CAPABILITY SOURCING, DOI [10.1007/978-3-319-07869-4, DOI 10.1007/978-3-319-07869-4]
   Rafati L, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.8
   Rafati L, 2014, LECT NOTES BUS INF P, V178, P77
   Rauffet P, 2016, INT J TECHNOL MANAGE, V70, P300, DOI 10.1504/IJTM.2016.075902
   Rauffet P, 2012, COMPUT IND, V63, P706, DOI 10.1016/j.compind.2012.05.004
   Roubtsova E., 2014, P 2014 WORKSH BEH MO, P1, DOI [10.1145/2630768.2630774, DOI 10.1145/2630768.2630774]
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sandkuhl K., 2018, CAPABILITY MANAGEMEN, DOI [10.1007/978-3-319-90424-5, DOI 10.1007/978-3-319-90424-5]
   Sinnott-Armstrong W, 2015, UNDERSTANDING ARGUME
   Stirna J, 2016, LECT NOTES COMPUT SC, V9974, P396, DOI 10.1007/978-3-319-46397-1_30
   Straube C, 2014, LECT NOTES COMPUT SC, V8374, P707, DOI 10.1007/978-3-642-54420-0_69
   Teece DJ, 1997, STRATEGIC MANAGE J, V18, P509, DOI 10.1002/(SICI)1097-0266(199708)18:7<509::AID-SMJ882>3.0.CO;2-Z
   The Open Group, 2017, ARCH 3 0 1 SPEC
   UK Ministry of Defence, 2010, MIN DEF ARCH FRAM V1
   USA Department of Defense, 2009, DEP DEF ARCH FRAM 2
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   Van Eck N.J., 2014, Measuring Scholarly Impact: Methods and Practice, P285, DOI [10.1007/978-3-319-10377-8_13(InEng.), 10.1007/978-3-319-10377-8_13, DOI 10.1007/978-3-319-10377-813]
   Van Eck NJ, 2007, STUD CLASS DATA ANAL, P299
   van Eck NJ, 2010, SCIENTOMETRICS, V84, P523, DOI 10.1007/s11192-009-0146-3
   Vogt W.P., 2005, DICT STAT METHODOLOG, DOI DOI 10.4135/9781412983907
   Walker SK, 2005, STRATEGY RES PROJECT
   Waltman L, 2010, J INFORMETR, V4, P629, DOI 10.1016/j.joi.2010.07.002
   Wang Z, 2012, J COMMAND INF SYST, V8, P2829
   Weizhong Zhang, 2012, Journal of Software, V7, P2046, DOI 10.4304/jsw.7.9.2046-2052
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Zdravkovic J, 2018, CAPABILITY MANAGEMEN, P41, DOI [10.1007/978-3-319-90424-5_3, DOI 10.1007/978-3-319-90424-5_3]
   ZDRAVKOVIC J., 2017, COMPLEX SYST INFORM, V10, P1, DOI DOI 10.7250/CSIMQ.2017-10.01
   Zhang TT, 2016, COMPUT SCI INF SYST, V13, P287, DOI 10.2298/CSIS150222046T
NR 105
TC 7
Z9 7
U1 1
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 147
EP 174
DI 10.1007/s10270-020-00843-0
EA DEC 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QM0VS
UT WOS:000601548900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Leroy, D
   Bousse, E
   Wimmer, M
   Mayerhofer, T
   Combemale, B
   Schwinger, W
AF Leroy, Dorian
   Bousse, Erwan
   Wimmer, Manuel
   Mayerhofer, Tanja
   Combemale, Benoit
   Schwinger, Wieland
TI Behavioral interfaces for executable DSLs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Language engineering; Domain-specific language; Model execution
ID EXECUTION
AB Executable domain-specific languages (DSLs) enable the execution of behavioral models. While an execution is mostly driven by the model content (e.g., control structures), many use cases require interacting with the running model, such as simulating scenarios in an automated or interactive way, or coupling the model with other models of the system or environment. The management of these interactions is usually hardcoded into the semantics of the DSL, which prevents its reuse for other DSLs and the provision of generic interaction-centric tools (e.g., event injector). In this paper, we propose a metalanguage for complementing the definition of executable DSLs with explicit behavioral interfaces to enable external tools to interact with executed models in a unified way. We implemented the proposed metalanguage in the GEMOC Studio and show how behavioral interfaces enable the realization of tools that are generic and thus usable for different executable DSLs.
C1 [Leroy, Dorian] JKU Linz, Linz, Austria.
   [Wimmer, Manuel] JKU Linz, Inst Business Informat Software Engn, Linz, Austria.
   [Schwinger, Wieland] JKU Linz, Inst Telecooperat, Linz, Austria.
   [Bousse, Erwan; Mayerhofer, Tanja] TU Wien, Vienna, Austria.
   [Wimmer, Manuel] CDL MINT, Christian Doppler Lab, Linz, Austria.
   [Combemale, Benoit] UT2J, Toulouse, France.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz;
   Johannes Kepler University Linz; Technische Universitat Wien; Universite
   de Toulouse; Universite de Toulouse - Jean Jaures
RP Leroy, D (corresponding author), JKU Linz, Linz, Austria.
EM dorian.leroy@jku.at; erwan.bousse@tuwien.ac.at; manuel.wimmer@jku.at;
   mayerhofer@big.tuwien.ac.at; benoit.combemale@irisa.fr;
   wieland.schwinger@jku.ac.at
OI Bousse, Erwan/0000-0003-0000-9219
FU Austrian Science Fund (FWF) [P 28519-N31, P 30525-N31]; Austrian Federal
   Ministry for Digital and Economic Affairs; National Foundation for
   Research, Technology and Development; Austrian Agency for International
   Mobility and Cooperation in Education, Science and Research (OeAD) [FR
   08/2017]; French Ministries of Foreign Affairs and International
   Development (MAEDI); French Ministry of Education, Higher Education and
   Research (MENESR); French Project ELOGE (Atlanstic 2020 Amorcage) -
   Region des Pays de la Loire
FX Open access funding provided by Austrian Science Fund (FWF). This work
   is partially funded by the Austrian Science Fund (FWF): P 28519-N31 and
   P 30525-N31 as well as by the Austrian Federal Ministry for Digital and
   Economic Affairs and the National Foundation for Research, Technology
   and Development. This work is also partially funded by the Austrian
   Agency for International Mobility and Cooperation in Education, Science
   and Research (OeAD) on behalf of the Federal Ministry for Science,
   Research and Economy (BMWFW) under the Grand No. FR 08/2017, by the
   French Ministries of Foreign Affairs and International Development
   (MAEDI) and the French Ministry of Education, Higher Education and
   Research (MENESR), and by the French Project ELOGE (Atlanstic 2020
   Amorcage) financed by Region des Pays de la Loire.
CR Anicic D, 2010, LECT NOTES COMPUT SC, V6333, P42, DOI 10.1007/978-3-642-15918-3_5
   [Anonymous], OMG UN MOD LANG OMG
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2002, the Power of Events
   [Anonymous], 2013, WORKSH MOD DRIV ENG
   [Anonymous], 2013, MPM MODELS
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bandener Nils, 2010, P 3 INT C SOFTW LANG, P357, DOI DOI 10.1007/978-3-642-19440-5_24
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bousse E, 2019, SOFTW SYST MODEL, V18, P385, DOI 10.1007/s10270-017-0598-5
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Combemale B, 2012, ASIA PAC SOFWR ENG, P282, DOI 10.1109/APSEC.2012.79
   Deantoni J, 2016, 2016 ARCHITECTURE-CENTRIC VIRTUAL INTEGRATION (ACVI), P12, DOI 10.1109/ACVI.2016.9
   Degueule T, 2017, COMPUT LANG SYST STR, V49, P176, DOI 10.1016/j.cl.2016.09.001
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Fischer T., 2000, LECT NOTES COMPUTER, P157
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Hofer C, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P137
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Kindler E, 2012, P 4 WORKSH BEH MOD F, P1
   Larsen MEV, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P186, DOI 10.1109/MODELS.2015.7338249
   Mayerhofer T., 2013, P 6 INT C SOFTW LANG
   MCAFFER J., 2005, ECLIPSE RICH CLIENT
   Meyers B, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P181, DOI 10.1145/2997364.2997367
   Meyers B, 2014, LECT NOTES COMPUT SC, V8706, P1, DOI 10.1007/978-3-319-11245-9_1
   Object Management Group, 2016, MET FAC MOF CAR SPEC
   Object Management Group, 2013, Semantics of a Foundational Subset for Executable UML Models (FUML)
   Object Management Group, 2019, Precise semantics of UML state machines
   OMG, 2014, OBJ CONSTR LANG OCL
   Pedro L, 2006, P IEEE RAP SYST PROT, P10, DOI 10.1109/RSP.2006.29
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Rodriguez-Echeverria R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P370, DOI 10.1145/3239372.3239383
   Soden M, 2009, P 1 WORKSH BEH MOD M, P4
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steinberg D, 2008, ECLIPSE SERIES ADDIS
   Syriani E, 2019, SCI COMPUT PROGRAM, V170, P45, DOI 10.1016/j.scico.2018.10.005
   Tatibouet J., 2014, P 17 INT C MOD DRIV
NR 43
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 1015
EP 1043
DI 10.1007/s10270-020-00798-2
EA APR 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000528330800001
PM 32728354
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Bruneliere, H
   de Kerchove, FM
   Daniel, G
   Madani, S
   Kolovos, D
   Cabot, J
AF Bruneliere, Hugo
   de Kerchove, Florent Marchand
   Daniel, Gwendal
   Madani, Sina
   Kolovos, Dimitris
   Cabot, Jordi
TI Scalable model views over heterogeneous modeling technologies and
   resources
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Modeling; Views; Heterogeneity; Scalability; Persistence; Database;
   Design time; Runtime
ID FRAMEWORK; QUERIES; ATL
AB When engineering complex systems, models are typically used to represent various systems aspects. These models are often heterogeneous in terms of modeling languages, provenance, number or scale. As a result, the information actually relevant to engineers is usually split into different kinds of interrelated models. To be useful in practice, these models need to be properly integrated to provide global views over the system. This has to be made possible even when those models are serialized or stored in different formats adapted to their respective nature and scalability needs. Model view approaches have been proposed to tackle this issue. They provide unification mechanisms to combine and query various different models in a transparent way. These views usually target specific engineering tasks such as system design, monitoring and evolution. In an industrial context, there can be many large-scale use cases where model views can be beneficial, in order to trace runtime and design-time data, for example. However, existing model view solutions are generally designed to work on top of one single modeling technology (even though model import/export capabilities are sometimes provided). Moreover, they mostly rely on in-memory constructs and low-level modeling APIs that have not been designed to scale in the context of large models stored in different kinds of data sources. This paper presents a general solution to efficiently support scalable model views over heterogeneous modeling resources possibly handled via different modeling technologies. To this intent, it describes our integration approach between a model view framework and various modeling technologies providing access to multiple types of modeling resources (e.g., in XML/XMI, CSV, databases). It also presents how queries on such model views can be executed efficiently by benefiting from the optimization of the different model technologies and underlying persistence backends. Our solution has been evaluated on a practical large-scale use case provided by the industry-driven European MegaM@Rt2 project that aims at implementing a runtime. design time feedback loop. The corresponding EMF-based tooling support, modeling artifacts and reproducible benchmarks are all available online.
C1 [Bruneliere, Hugo; de Kerchove, Florent Marchand] IMT Atlantique, CNRS, LS2N, Nantes, France.
   [Bruneliere, Hugo; de Kerchove, Florent Marchand] ARMINES, Nantes, France.
   [Daniel, Gwendal; Cabot, Jordi] ICREA, Barcelona, Spain.
   [Daniel, Gwendal; Cabot, Jordi] UOC, Barcelona, Spain.
   [Madani, Sina; Kolovos, Dimitris] Univ York, York, N Yorkshire, England.
C3 Centre National de la Recherche Scientifique (CNRS); IMT - Institut
   Mines-Telecom; IMT Atlantique; ICREA; University of York - UK
RP Bruneliere, H (corresponding author), IMT Atlantique, CNRS, LS2N, Nantes, France.; Bruneliere, H (corresponding author), ARMINES, Nantes, France.
EM hugo.bruneliere@imt-atlantique.fr;
   florent.marchand-de-kerchove@imt-atlantique.fr; gdaniel@uoc.edu;
   sm1748@york.ac.uk; dimitris.kolovos@york.ac.uk; jordi.cabot@icrea.cat
RI Kolovos, Dimitrios/L-9830-2014; Cabot, Jordi/P-7723-2015
OI Kolovos, Dimitris/0000-0002-1724-6563; Bruneliere,
   Hugo/0000-0002-5987-2175; Cabot, Jordi/0000-0003-2418-2489
FU ECSEL Joint Undertaking [737494]; European Union
FX This work has received funding from the ECSEL Joint Undertaking under
   Grant Agreement No. 737494 (MegaM@Rt2project).This Joint Undertaking
   receives support from the European Union's Horizon 2020 research and
   innovation program and from Sweden, France, Spain, Italy, Finland &
   Czech Republic.
CR Afzal W, 2018, MICROPROCESS MICROSY, V61, P86, DOI 10.1016/j.micpro.2018.05.010
   [Anonymous], 2020, UN MOD LANG UML
   [Anonymous], 2020, MOF 2 XMI MAPP SPEC
   [Anonymous], 2020, TEN
   [Anonymous], 2015, BIGMDE STAF
   [Anonymous], 2020, JSON JAVASCRIPT OBJ
   [Anonymous], 2020, CONN DAT OBJ CDO
   [Anonymous], 2020, 420102011 ISOIECIEEE
   Apache TinkerPop, 2020, GREML LANG
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Barmpis K., 2012, PROC 2012 EXTREME MO, P33, DOI [10.1145/2467307.2467314, DOI 10.1145/2467307.2467314]
   Barmpis Konstantinos., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering, page, P6, DOI [10.1145/2487766.2487771, DOI 10.1145/2487766.2487771]
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Bruneliere H., 2018, LNCS, VLNCS 11176
   Bruneliere H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P334, DOI 10.1145/3239372.3239408
   Bruneliere H, 2019, SOFTW SYST MODEL, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9381, P317, DOI 10.1007/978-3-319-25264-3_23
   Bruneliere H, 2015, LECT NOTES COMPUT SC, V9153, P62, DOI 10.1007/978-3-319-21151-0_5
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Burger E, 2016, SOFTW SYST MODEL, V15, P473, DOI 10.1007/s10270-014-0413-5
   Chevalier M, 2015, IEEE IMAGE PROC, P3101, DOI 10.1109/ICIP.2015.7351374
   Cho J, 2015, ANN CONF PRIV SECUR, P173, DOI 10.1109/PST.2015.7232970
   Daniel G, 2017, IEEE INT CONF AUTOM, P462, DOI 10.1109/ASE.2017.8115658
   Daniel G, 2017, SCI COMPUT PROGRAM, V149, P9, DOI 10.1016/j.scico.2017.08.002
   Daniel G, 2016, INT CONF RES CHAL, P225
   Debreceni Csaba., 2014, Proceedings of the 2nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling, P31, DOI [DOI 10.1145/2631675.2631677, 10.1145/2631675.2631677]
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Eramo R, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a1
   Pagán JE, 2015, SOFTW SYST MODEL, V14, P219, DOI 10.1007/s10270-013-0326-8
   Golra FR, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P206, DOI 10.1145/2892664.2892701
   Gupta H, 1997, LECT NOTES COMPUT SC, V1186, P98
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolev B, 2016, DISTRIB PARALLEL DAT, V34, P463, DOI 10.1007/s10619-015-7185-y
   Kolovos D.S., 2013, P WORKSH EXTR MOD CO, P46
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6142, P138, DOI 10.1007/978-3-642-13688-7_10
   Langlois B., 2014, P 14 WORKSHOP DOMAIN, P19
   Madani S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a3
   Marussy K, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P323, DOI 10.1145/3239372.3239412
   Object Management Group (OMG), 2020, Requirements interchange format (ReqIF)
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Semeráth O, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P306, DOI 10.1145/2976767.2976788
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Willink E. D., 2017, STAF 2017 COLL WORKS, P340
NR 49
TC 6
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2020
VL 19
IS 4
BP 827
EP 851
DI 10.1007/s10270-020-00794-6
EA APR 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MN4DH
UT WOS:000524632800001
DA 2024-07-18
ER

PT J
AU Bucchiarone, A
   Cabot, J
   Paige, RF
   Pierantonio, A
AF Bucchiarone, Antonio
   Cabot, Jordi
   Paige, Richard F.
   Pierantonio, Alfonso
TI Grand challenges inmodel-driven engineering: an analysis of the state of
   the research
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Grand challenge; Research roadmap
ID MODEL; EVOLUTION
AB In 2017 and 2018, two events were held-in Marburg, Germany, and San Vigilio di Marebbe, Italy, respectively-focusing on an analysis of the state of research, state of practice, and state of the art in model-driven engineering (MDE). The events brought together experts from industry, academia, and the open-source community to assess what has changed in research in MDE over the last 10 years, what challenges remain, and what new challenges have arisen. This article reports on the results of those meetings, and presents a set of grand challenges that emerged from discussions and synthesis. These challenges could lead to research initiatives for the community going forward.
C1 [Bucchiarone, Antonio] Fdn Bruno Kessler, Trento, Italy.
   [Cabot, Jordi] ICREA, Barcelona, Spain.
   [Cabot, Jordi] UOC, Barcelona, Spain.
   [Paige, Richard F.] Univ York, York, N Yorkshire, England.
   [Paige, Richard F.] McMaster Univ, Hamilton, ON, Canada.
   [Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
C3 Fondazione Bruno Kessler; ICREA; University of York - UK; McMaster
   University; University of L'Aquila
RP Paige, RF (corresponding author), Univ York, York, N Yorkshire, England.; Paige, RF (corresponding author), McMaster Univ, Hamilton, ON, Canada.
EM bucchiarone@fbk.eu; jordi.cabot@icrea.cat; paigeri@mcmaster.ca;
   alfonso.pierantonio@univaq.it
RI Bucchiarone, Antonio/S-6522-2019; Cabot, Jordi/P-7723-2015
OI Bucchiarone, Antonio/0000-0003-1154-1382; Paige, Richard
   Freeman/0000-0002-1978-9852; Cabot, Jordi/0000-0003-2418-2489
CR Babur Ö, 2018, LECT NOTES COMPUT SC, V10748, P129, DOI 10.1007/978-3-319-74730-9_10
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Bill R, 2018, LECT NOTES COMPUT SC, V10748, P136, DOI 10.1007/978-3-319-74730-9_11
   Bruneliere H, 2019, SOFTW SYST MODEL, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Butting A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P145, DOI 10.1109/ICSA.2017.34
   Cabot J, 2018, LECT NOTES COMPUT SC, V10748, P154, DOI 10.1007/978-3-319-74730-9_13
   Di Rocco J., 2017, P WORKSH GRAND CHALL
   Diskin Z, 2018, LECT NOTES COMPUT SC, V10748, P200, DOI 10.1007/978-3-319-74730-9_19
   Evans A, 1999, LECT NOTES COMPUT SC, V1723, P140
   Evans A., 1998, UML 98, V1618, P336
   Evans A., 2014, ARXIV14096917 CORR
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   France R., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P311
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   France R, 2013, SOFTW SYST MODEL, V12, P223, DOI 10.1007/s10270-013-0346-4
   Garcia-Dominguez A, 2018, LECT NOTES COMPUT SC, V10748, P161, DOI 10.1007/978-3-319-74730-9_14
   Gogolla M, 2018, LECT NOTES COMPUT SC, V10748, P172, DOI 10.1007/978-3-319-74730-9_15
   Kelly S, 2018, LECT NOTES COMPUT SC, V10748, P178, DOI 10.1007/978-3-319-74730-9_16
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5421, P48, DOI 10.1007/978-3-642-01648-6_5
   Laemmel R., 2018, SOFTWARE LANGUAGES S
   Mayerhofer T, 2018, LECT NOTES COMPUT SC, V10748, P193, DOI 10.1007/978-3-319-74730-9_18
   Moreno G.A., 2008, QUALITY SOFTWARE ARC
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3748, P239
   Roohitavaf M, 2017, SYM REL DIST SYST, P184, DOI 10.1109/SRDS.2017.27
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Storrle H., 2005, Software Engineering, P117
   Van Der Straeten R., 2008, International Conference on Model Driven Engineering Languages and Systems, P35
NR 30
TC 88
Z9 92
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2020
VL 19
IS 1
BP 5
EP 13
DI 10.1007/s10270-019-00773-6
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8NU
UT WOS:000518564900002
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU de Kinderen, S
   Kaczmarek-Hess, M
AF de Kinderen, Sybren
   Kaczmarek-Hess, Monika
TI On model-based analysis of organizational structures: an assessment of
   current modeling approaches and application of multi-level modeling in
   support of design and analysis of organizational structures
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Organizational structure; Multi-level modeling; Conceptual modeling
ID ENTERPRISE; ONTOLOGY; COORDINATION; FRAMEWORK
AB Conceptual modeling promises to support various analysis questions on organizational structures, such as allocation of tasks, responsibilities, and authority in an organization. In this paper, we first synthesize requirements on an organizational structure analysis from the business scholar literature and assess to what extent and how current modeling languages fulfill these. In particular, we find limitations in the covered scope as well as the information processing capabilities of the reviewed approaches. Second, as a response to identified gaps, we propose multi-level modeling and integrated modeling and programming as a way to support design and analysis of organizational structure. We use the structure of universities as a case scenario. This paper is an extension of our earlier work. Firstly, we add an explicit set of requirements derived from business scholar literature. Secondly, we draw a comparison to the abstraction mechanisms used in conventional meta-modeling, as prominently exemplified by UML class diagrams, and we critically discuss multi-level modeling. Finally, we discuss a prototypical implementation of our multi-level model in the XModeler software tool.
C1 [de Kinderen, Sybren; Kaczmarek-Hess, Monika] Univ Duisburg Essen, Informat Syst & Enterprise Modeling, Essen, Germany.
C3 University of Duisburg Essen
RP de Kinderen, S (corresponding author), Univ Duisburg Essen, Informat Syst & Enterprise Modeling, Essen, Germany.
EM sybren.dekinderen@uni-due.de; monika.kaczmarek-hess@uni-due.de
OI Kaczmarek-Hess, Monika/0000-0002-1621-2775
CR Abramowicz W., 2008, 3 INT WORKSH SEM BUS
   Almeida J.P.A., 2018, DAGSTUHL REP, V7, P18
   [Anonymous], 1998, ADV OBJECT ORIENTED
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2017, P MOD 2017 SAT RV WO
   [Anonymous], HOCHSCHULE WANDEL U
   [Anonymous], 2009, MAKING SENSE ORG IMP
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, INFORM SYST, V54, P289, DOI 10.1016/j.is.2015.01.003
   ATKINSON R, 2001, MED RADIOL, P19
   Bock A, 2015, CONF BUS INFORM, P181, DOI 10.1109/CBI.2015.34
   Buttner F., 2004, OCL MODEL DRIVEN ENG, P1
   Carvalho L, 2015, 2015 INTERNATIONAL SYMPOSIUM ON LIGHTNING PROTECTION (XIII SIPDA), P309, DOI 10.1109/SIPDA.2015.7339310
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Carvalho VA, 2015, IEEE INT ENTERP DIST, P50, DOI 10.1109/EDOC.2015.18
   CHILD J, 1972, SOCIOLOGY, V6, P1, DOI 10.1177/003803857200600101
   Clark T., 2018, CEUR WORKSHOP P, V2245, P103
   Clark T, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P311, DOI 10.4018/978-1-4666-2092-6.ch011
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   Daft R., 2010, SWC GEN BUSINESS SER
   de Kinderen S, 2018, LECT NOTES BUS INF P, V318, P229, DOI 10.1007/978-3-319-91704-7_15
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Eric S. K, 2011, SOCIAL MODELING REQU
   Fayol H., 1949, General and Industrial Management
   Filipowska A, 2009, LECT NOTES BUS INF P, V21, P1
   Forest J.F., 2007, International handbook of higher education, V2nd
   Fox MS, 1996, COMPUT IND, V29, P123, DOI 10.1016/0166-3615(95)00079-8
   Frank U., 2000, JOOP, V13, P13
   Frank U., 2014, P 4 INT S BUS MOD SO, V1, P9
   Frank U, 2011, 43 ICB U DUISB ESS, V2nd
   Frank U., 2011, ICB Research Report 48
   Frank U., 2011, ICB Research Report 46
   Frank U., 2013, Domain Engineering, P133
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Frank U, 2014, SOFTW SYST MODEL, V13, P941, DOI 10.1007/s10270-012-0273-9
   Frank Ulrich, 2018, Technical Report 66, ICB-Research Report
   GALBRAITH JR, 1971, BUS HORIZONS, V14, P29, DOI 10.1016/0007-6813(71)90037-1
   Gerbig R., 2015, P 1 INT WORKSHOP EXE, V1560, P28
   Gerbig Ralph, 2017, Deep, seamless, multi-format, multi-notation definition and use of domain-specific languages
   Gerwin D, 1992, WILEY SERIES ENG TEC
   Gomez de Villar Fernando Macias, 2016, MULTI2016 P 3 INT WO, P66
   Guizzardi Giancarlo., 2004, CAiSE Workshops, P129
   Gulden J, 2017, P 4 INT WORKSH MULT
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hahn J, 2016, LECT NOTES GEOINF CA, P3, DOI 10.1007/978-3-319-33783-8_1
   Hanschke I, 2010, STRATEGIC IT MANAGEMENT: A TOOLKIT FOR ENTERPRISE ARCHITECTURE MANAGEMENT, P105, DOI 10.1007/978-3-642-05034-3_4
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Igamberdiev Muzaffar, 2016, CEUR WORKSHOP P, V1722, P45
   Jackson J., 1978, Organization Theory: A Macro Perspective for Management
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Johnston MA, 2000, GROUP ORGAN MANAGE, V25, P4, DOI 10.1177/1059601100251002
   Kaczmarek-Hess M., 2018, P 5 INT WORKSH MULT
   Kaczmarek-Hess M, 2017, BUS INFORM SYST ENG+, V59, P315, DOI 10.1007/s12599-017-0482-4
   Kehm B., 2007, International handbook of higher education, P729
   Kessel M, 2015, 2015 18th International ACM SIGSOFT Symposium on Component-Based Software Engineering (CBSE), P11, DOI 10.1145/2737166.2737180
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Lange A., 2018, P MODELS 2018 WORKSH
   Lankhorst Marc., 2013, Enterprise Architecture at Work: Modelling, Communication and Analysis (The Enterprise Engineering Series)
   Lawrence P., 1967, Organization and Environment: Managing Differentiation and Integration
   Lazzeretti L, 2006, EUR EDUC RES J, V5, P18, DOI 10.2304/eerj.2006.5.1.18
   Lee H, 2005, PARA 2004, P1017
   Likert R., 1967, The human organization: Its management and value
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   MALONE TW, 1987, MANAGE SCI, V33, P1317, DOI 10.1287/mnsc.33.10.1317
   Manning S, 2017, RES POLICY, V46, P1399, DOI 10.1016/j.respol.2017.06.005
   Mathiassen L., 2000, OBJECT ORIENTED ANAL
   Mintzberg H, 1979, THEORY MANAGEMENT PO
   Mintzberg H., 2003, STRATEGY PROCESS
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   NADLER DA, 1980, ORGAN DYN, V9, P35, DOI 10.1016/0090-2616(80)90039-X
   Närman P, 2016, IEEE INT ENTERP, P106
   Närman P, 2016, ENTERP INF SYST-UK, V10, P523, DOI 10.1080/17517575.2014.986211
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   Neumayr Bernd., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling, V96, P107
   Nguyen TLH, 2015, J RES ADMIN, V46, P41
   Österle H, 2011, EUR J INFORM SYST, V20, P7, DOI 10.1057/ejis.2010.55
   Oh S., 2002, S ACCESS CONTROL MOD, V5, P155, DOI DOI 10.1145/507711.507737
   OMG, 2015, TECH REP
   OMG, 2016, TECH REP
   OMG, 2019, DEC MOD NOT VERS 1 2
   OMG: Organization Structure Metamodel (OSM), 2006, 2 IN SUBM RESP ORG S
   Pepenel M, 2010, EUR J INTERDISCIP ST, V2, P96
   Pereira D., 2014, 6 WORKSHOP FORMAL ON, P1
   Roethlisberger FJ, 1939, Management and the Worker
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Sandkuhl K., 2013, UNTERNEHMENSMODELLIE
   Santos PS, 2013, INFORM SYST, V38, P690, DOI 10.1016/j.is.2012.09.004
   Scheer A., 2001, ARIS MODELLIERUNGSME
   Selway M, 2017, DATA KNOWL ENG, V109, P85, DOI 10.1016/j.datak.2017.03.006
   SoftwareAG, 2017, AR METH MAN V 10
   Sonnenberg Christian, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P381, DOI 10.1007/978-3-642-29863-9_28
   The Open Group, 2013, ARCHIMATE 2 1 SPEC O
   Thompson J.D., 2011, Organizations in action: Social science bases of administrative theory
   Topel Daniel, 2017, CEUR WORKSHOP P, P243
   Tran Q., 2013, AM J IND BUSINESMA, V3, P229, DOI DOI 10.4236/AJIBM.2013.32028
   Uschold M, 1998, KNOWL ENG REV, V13, P1, DOI 10.1017/S0269888998001027
   van Donk Dirk Pieter, 2008, International Journal of Project Management, V26, P129, DOI 10.1016/j.ijproman.2007.05.006
   W3C, 2014, TECH REP
   Weber M., 1947, The theory of social and economic organization
NR 105
TC 6
Z9 7
U1 2
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 313
EP 343
DI 10.1007/s10270-019-00767-4
EA NOV 2019
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT6YX
UT WOS:000499629800001
DA 2024-07-18
ER

PT J
AU Ruiz, J
   Serral, E
   Snoeck, M
AF Ruiz, Jenny
   Serral, Estefania
   Snoeck, Monique
TI Evaluating user interface generation approaches: model-based versus
   model-driven development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-based user interface software tools; User interface generation;
   Model-driven development; Integration with application development
ID ENVIRONMENT
AB Advances in software design possibilities have led to a growing interest in the study of user interfaces (UIs). Many Model-Based User Interface Development Environments (MB-UIDEs) have been proposed to deal with the generation of the UIs (semi-) automatically by using models with different levels of abstraction. Often, this generation is limited to the UI part of an application. However, achieving true model-driven development (MDD) requires the co-development of application and UI and, hence, needs to go a step further. This paper analyzes a large set of existing MB-UIDEs, evaluates, from a critical perspective, to what extent they can be considered full MDD environments, and adequately addresses the co-design of UI and application. Following the guidelines proposed by Kitchenham and Charters (Engineering 2, 2007), we performed a systematic literature review. A total of 96 papers were examined. Based on these papers, an assessment framework containing 10 criteria with specific metrics to evaluate MB-UIDEs was defined and 30 different environments were evaluated following these criteria. The evaluation identifies several gaps in the existing state of the art and highlights the areas of promising improvement. The evaluation shows that, although a strong progress has being achieved over the last years, the existing environments do not yet fully exploit the benefits and potentialities of MDD, nor do they adequately integrate UI design with application logic design and generation. Further research needs to be done to support the MDD of UIs and the co-design of the underlying application. The difficulty of use of the existing MB-UIDEs, the lack of UI design flexibility, and the lack of complete and integrated development support are the main research gaps that need to be addressed.
C1 [Ruiz, Jenny] Univ Holguin, 20 Anniversary Ave, Holguin 80100, Cuba.
   [Serral, Estefania; Snoeck, Monique] Katholieke Univ Leuven, Naamsestr 69, B-3000 Louvain, Belgium.
C3 KU Leuven
RP Serral, E (corresponding author), Katholieke Univ Leuven, Naamsestr 69, B-3000 Louvain, Belgium.
EM jruizp@uho.edu.cu; estefania.serralasensio@kuleuven.be;
   monique.snoeck@kuleuven.be
RI Snoeck, Monique/H-7771-2018; de la Peña, Jenny Ruiz/ABE-7241-2020;
   Serral, Estefanía/I-8123-2018
OI Snoeck, Monique/0000-0002-3824-3214; de la Peña, Jenny
   Ruiz/0000-0002-1371-6353; Serral, Estefanía/0000-0001-7579-910X
FU VLIR-UOS program under the Cuba Network project [ZIUS2015AP033]
FX This project was funded by the VLIR-UOS program under the Cuba Network
   project ZIUS2015AP033.
CR Akiki P.A., 2013, Proceedings of the 5th ACM SIGCHI symposium on Engineering interactive computing systems, P3
   Akiki PA, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2597999
   [Anonymous], 2008, SEPARATION USER INTE
   [Anonymous], DTIC DOCUMENT
   [Anonymous], P 1996 INT C INT DAT
   [Anonymous], TALLER DESARROLLOS D
   [Anonymous], THESIS
   [Anonymous], 1 INT WORKSH USER IN
   [Anonymous], INT WORKSH DES SPEC
   [Anonymous], 2016, INT J COMPUT SCI INF
   [Anonymous], 2010, P 2010 ACM S APPL CO, DOI DOI 10.1145/1774088.1774340
   [Anonymous], 2004, P WORKSHOP DEVELOPIN
   [Anonymous], IST PROGRAMME
   [Anonymous], MDA TOOL SUPPORT MOD
   [Anonymous], 2004, P 3 ANN C TASK MODEL
   [Anonymous], USIXML 2011
   [Anonymous], MICS 5
   Aquino N, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P335
   BEZIVIN J, 2004, EUR J INFORM PROF, V5, P21
   Blumendorf M, 2008, LECT NOTES COMPUT SC, V5136, P238, DOI 10.1007/978-3-540-70569-7_22
   Bodart F., 1995, Design, Specification and Verification of Interactive Systems '95. Proceedings of the Eurographics Workshop, P262
   Botterweck G., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P106
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Cabot J, 2006, LECT NOTES COMPUT SC, V4066, P256
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Coninx K, 2003, LECT NOTES COMPUT SC, V2795, P256
   Delgado A, 2007, WEBIST 2007: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, VOL WIA, P226
   Engel J, 2014, LECT NOTES COMPUT SC, V8510, P295, DOI 10.1007/978-3-319-07233-3_28
   Feuerstack S., 2008, P WORK C ADV VIS INT, P217, DOI [10.1145/1385569.1385605, DOI 10.1145/1385569.1385605]
   Feuerstack S, 2008, LECT NOTES COMPUT SC, V5247, P134, DOI 10.1007/978-3-540-85992-5_12
   Gajos Krzysztof, 2004, P 9 INT C INT US INT, P93, DOI DOI 10.1145/964442.964461
   Garcia Josefina Guerrero, 2008, International Journal of Web Engineering and Technology, V4, P163, DOI 10.1504/IJWET.2008.018096
   Griffiths T, 2001, INTERACT COMPUT, V14, P31, DOI 10.1016/S0953-5438(01)00042-X
   Guerrero-García J, 2009, LA-WEB: 2009 LATIN AMERICAN WEB CONGRESS, P36, DOI 10.1109/LA-WEB.2009.40
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Jha NK, 2005, IEE P-COMPUT DIG T, V152, P344, DOI 10.1049/ip-cdt:20045067
   Julien D, 2005, Computer-Aided Design of User Interfaces IV, P95, DOI 10.1007/1-4020-3304-4_8
   Kennard R, 2010, J SYST SOFTWARE, V83, P1896, DOI 10.1016/j.jss.2010.05.079
   Kitchenham B., 2007, 2007001 EBSE
   Li YZ, 2002, INT C PATT RECOG, P573, DOI 10.1109/ICPR.2002.1048004
   Limbourg Q, 2004, ENGINEERING ADVANCED WEB APPLICATIONS, P325
   Limbourg Q, 2005, LECT NOTES COMPUT SC, V3425, P200
   Lintzmayer CN, 2012, P INT C CHIL COMPUT, P207, DOI 10.1109/SCCC.2012.31
   Lonczewski F., 1996, CADUI, V96, P37
   LUO P, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P107
   Marin I, 2015, FRONT INFORM TECH EL, V16, P995, DOI 10.1631/FITEE.1500083
   Martin D, 2002, SOTSIOL ISSLED+, P57
   Meixner Gerrit, 2011, i-com Zeitschrift fur Interaktive und Kooperative Medien, V10, P2, DOI 10.1524/icom.2011.0026
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Meskens J., 2008, WORK C ADV VIS INT, DOI DOI 10.1145/1385569.1385607
   Molina AI, 2012, ADV ENG SOFTW, V52, P10, DOI 10.1016/j.advengsoft.2012.06.002
   Molina P.J., 2002, COMPUT AIDED DESIGN, P63, DOI DOI 10.1007/978-94-010-0421-3_5
   Mori G, 2004, IEEE T SOFTWARE ENG, V30, P507, DOI 10.1109/TSE.2004.40
   Mori G, 2002, IEEE T SOFTWARE ENG, V28, P797, DOI 10.1109/TSE.2002.1027801
   Myers B. A., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P195, DOI 10.1145/142750.142789
   Myers B.A., 1995, ACM T COMPUT-HUM INT, V2, P64, DOI [10.1145/200968.200971, DOI 10.1145/200968.200971]
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Penichet VMR, 2009, ADV ENG SOFTW, V40, P1212, DOI 10.1016/j.advengsoft.2009.01.026
   Popp R, 2013, ASIA PAC SOFWR ENG, P215, DOI 10.1109/APSEC.2013.38
   PUERTA A, 1996, COMPUT AIDED DESIGN, P19
   Schlungbaum Edberg., 1996, MODEL BASED USER INT
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Souchon N, 2003, LECT NOTES COMPUT SC, V2844, P377
   Sousa K, 2008, 2008 3RD IEEE/IFIP INTERNATIONAL WORKSHOP ON BUSINESS-DRIVEN IT MANAGEMENT, P11, DOI 10.1109/BDIM.2008.4540070
   Stary C, 2000, IEEE T SYST MAN CY A, V30, P509, DOI 10.1109/3468.867859
   SUKAVIRIYA PN, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P375
   Szekely PedroA., 1995, EHCI, P120
   Vi T, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P353
   Viana W, 2008, J SYST SOFTWARE, V81, P382, DOI 10.1016/j.jss.2007.04.045
   WIECHA C, 1990, ACM T INFORM SYST, V8, P204, DOI 10.1145/98188.98194
NR 72
TC 10
Z9 10
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2753
EP 2776
DI 10.1007/s10270-018-0698-x
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Brdjanin, D
   Banjac, G
   Banjac, D
   Maric, S
AF Brdjanin, Drazen
   Banjac, Goran
   Banjac, Danijela
   Maric, Slavko
TI An experiment in model-driven conceptual database design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE BPMN; Collaborative business process model; Conceptual database model;
   Evaluation; Experiment; Model-driven; UML
ID BUSINESS PROCESS; TRANSFORMATION; DIAGRAMS; ASTERISK; CIM
AB The article presents the results of an experiment we conducted with database professionals in order to evaluate an approach to automatic design of the initial conceptual database model based on collaborative business process models. The source business process model is represented by BPMN, while the target conceptual model is represented by the UML class diagram. The results confirm those already obtained in a case-study-based evaluation, as well as those of an earlier controlled experiment conducted with undergraduate students. The evaluation implies that the proposed approach and implemented generator enable automatic generation of the target conceptual model with a high percentage of completeness and precision. The experiment also confirms that the automatically generated model can be efficiently used as a starting point for manual design of the target model, since it significantly shortens the estimated efforts and actual time spent to obtain the target model in contrast to the manual design from scratch.
C1 [Brdjanin, Drazen; Banjac, Goran; Banjac, Danijela; Maric, Slavko] Univ Banja Luka, Fac Elect Engn, Patre 5, Banja Luka 78000, Bosnia & Herceg.
C3 University of Banja Luka (UNIBL)
RP Brdjanin, D (corresponding author), Univ Banja Luka, Fac Elect Engn, Patre 5, Banja Luka 78000, Bosnia & Herceg.
EM drazen.brdjanin@etf.unibl.org; goran.banjac@etf.unibl.org;
   danijela.banjac@etf.unibl.org; slavko.maric@etf.unibl.org
RI Brdjanin, Drazen/AAD-3507-2019
OI Brdjanin, Drazen/0000-0002-0212-6569
CR Adam N. R., 1993, Proceedings. Ninth International Conference on Data Engineering (Cat. No.92CH3258-1), P302, DOI 10.1109/ICDE.1993.344052
   ALABISO B, 1988, SIGPLAN NOTICES, V23, P335, DOI 10.1145/62084.62114
   ALENCAR F, 2003, P WER 2003, P109
   Alencar F.M.R., 2002, P WER 2002, P147
   Alencar F.M.R, 2006, P CIBSE 2006, P125
   Alencar F, 2009, LECT NOTES BUS INF P, V39, P99
   Aguilar JA, 2010, J UNIVERS COMPUT SCI, V16, P2475
   [Anonymous], 2012, P ICSEA
   [Anonymous], 2008, MOF 2 0 QUER VIEW TR
   Banjac D, 2016, AISC, P134
   Banjac G, 2014, THESIS
   Barros J., 2000, CONJ 3 INT C UML YOR
   Barros O. H., 2004, BUSINESS INFORM SYST, DOI [10.1108/14637150710721122, DOI 10.1108/14637150710721122]
   Becker L. B., 2000, Proceedings Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing (ISORC 2000) (Cat. No. PR00607), P198, DOI 10.1109/ISORC.2000.839529
   Bloomfield T, 2005, LECT NOTES COMPUT SC, V3748, P9
   Boccalatte A., 2000, Proceedings Academia/Industry Working Conference on Research Challenges '00. Next Generation Enterprises: Virtual Organizations and Mobile/Pervasive Technologies. AIWORC'00. (Cat. No.PR00628), P293, DOI 10.1109/AIWORC.2000.843307
   Boccalatte A, 1998, IEEE SYS MAN CYBERN, P1347, DOI 10.1109/ICSMC.1998.728070
   Brambilla M., 2010, ADV SOFTW ENG, V2010
   Brambilla M, 2007, LECT NOTES COMPUT SC, V4735, P375
   Brdjanin D, 2012, AISC, V186, P31
   Brdjanin D., 2015, ICT INNOVATIONS 2014, V311, P145
   Brdjanin D., 2013, ELECTRONICS, V17, P130
   Brdjanin D., 2011, P EUR 2011, P1
   Brdjanin D, 2017, LECT NOTES BUS INF P, V287, P289, DOI 10.1007/978-3-319-59466-8_18
   Brdjanin D, 2017, LECT NOTES COMPUT SC, V10563, P57, DOI 10.1007/978-3-319-66854-3_5
   Brdjanin D, 2012, COMPUT SCI INF SYST, V9, P249, DOI 10.2298/CSIS110318069B
   Brdjanin D, 2011, LECT NOTES COMPUT SC, V6999, P292, DOI 10.1007/978-3-642-24574-9_37
   Brdjanin D, 2010, LECT NOTES COMPUT SC, V6295, P117, DOI 10.1007/978-3-642-15576-5_11
   Brdjanin D, 2007, EUROCON 2007: THE INTERNATIONAL CONFERENCE ON COMPUTER AS A TOOL, VOLS 1-6, P538, DOI 10.1109/EURCON.2007.4400437
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Carswell J. L., 1987, Entity-Relationship Approach: Ten Years of Experience in Information Modeling. Proceedings of the Fifth International Conference, P381
   CASTRO J, 2010, INFORM SYST, V27, P365
   Castro JF, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P146
   Chawla S, 2011, GOREWEB FRAMEWORK GO, P229
   CHEN P, INF SCI, V29, P127
   Cheng-Leong A, 1999, INT J PROD RES, V37, P3839, DOI 10.1080/002075499189790
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cruz Estrela F., 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P49
   Cruz EF, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P205, DOI 10.1109/QUATIC.2012.31
   DATE C.J., 2003, An Introduction to Database Systems, Veight
   de la Vara J. L., 2011, THESIS
   Donins U, 2011, MODEL-DRIVEN ARCHITECTURE AND MODEL-DRIVEN SOFTWARE DEVELOPMENT, P79
   Donins U, 2010, LECT NOTES COMPUT SC, V5968, P220
   Drozdova M., 2016, INFORM SYSTEMS ARCHI, P193
   Drozdová M, 2012, 10TH IEEE INTERNATIONAL CONFERENCE ON EMERGING ELEARNING TECHNOLOGIES AND APPLICATIONS (ICETA 2012), P81, DOI 10.1109/ICETA.2012.6418619
   Espana S, 2011, THESIS
   Essebaa I., 2016, 2016 11 INT C INT SY, P1
   Fernandes J.M., 2006, SOFTW SYST MODEL, V5, P403
   Fouad A., 2011, THESIS
   González A, 2011, LECT NOTES BUS INF P, V81, P246, DOI 10.32468/Espe.6607
   Hadi Y., 2014, INT J COMPUT INF SYS, V8, P1334
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Hsu CT, 2006, METHODOLOGY TRANSFOR
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Insfran E, 2003, THESIS
   Jian-chih L, 2004, TRANSFORMATION SEQUE
   Jiang L, 2007, INT REQUIR ENG CONF, P195, DOI 10.1109/RE.2007.32
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kamimura M., 2003, J INTEGRATED DESIGN, V7, P35
   Kardos M, 2010, J INF ORGAN SCI, V34, P89
   Kherraf S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P338, DOI 10.1109/ASWEC.2008.63
   Koch N., 2006, Proc. Sixth Int'l Conf. Web Eng, P281
   Koch N., 2006, P WORKSH ICWE 06
   Koskinen J, 2001, PROC INT CONF SOFTW, P819, DOI 10.1109/ICSE.2001.919189
   Kosters G., 2001, REQUIR ENG, V6, P3
   Kriouile A., 2015, Am. J. Softw. Eng. Appl, V4, P1, DOI 10.11648/j.ajsea.20150401.11
   Lingzhi L., 1996, EXPERT SYST APPL, V10, p373 
   Liu D, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P831
   de la Vara JL, 2009, LECT NOTES BUS INF P, V21, P133
   Lukovic I, 2007, SOFTWARE PRACT EXPER, V37, P1621, DOI 10.1002/spe.820
   Markowitz V. M., 1990, Sixth International Conference on Data Engineering (Cat. No.90CH2840-7), P103, DOI 10.1109/ICDE.1990.113459
   Martinez A., 2003, WORKSH EN REQ SP BRA, P93
   Martinez Rebollar A, 2008, THESIS
   Melo J., 2015, P 8 INT I WORKSH IST
   Molina JG, 2000, LECT NOTES COMPUT SC, V1920, P281
   Nikiforova O, 2004, BIOMED SCI INSTRUM, V3084, P219
   Nikiforova O., 2008, P 23 IEEE INT S COMP, P1
   Nikiforova O., 2011, SOFTWARE ENG TECHNIQ, P118
   Nikiforova O, 2013, APPL COMPUT SYST, V14, P19, DOI 10.2478/acss-2013-0003
   Nikiforova O, 2009, INFORMATION SYSTEMS DEVELOPMENT: TOWARDS A SERVICE PROVISION SOCIETY, P289, DOI 10.1007/b137171_30
   Nikiforova O, 2010, LECT NOTES COMPUT SC, V5968, P185
   Nuttgens M., 1998, P UML TECHN ASP APPL, P250
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Omar N., 2004, 15 IRISH C ARTICIAL, P302
   OMG, 2015, UN MOD LANG OMG UML
   Osis J., 2007, IEEE INT C SOFTW SCI IEEE INT C SOFTW SCI, P22
   Rodríguez A, 2007, LECT NOTES COMPUT SC, V4657, P104
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rodríguez A, 2008, LECT NOTES COMPUT SC, V5232, P103, DOI 10.1007/978-3-540-87991-6_15
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Rungworawut W., 2005, P 5 WSEAS INT C APPL, P233
   Rungworawut W, 2006, PROC WRLD ACAD SCI E, V12, P165
   Santos Maribel Yasmina, 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P107, DOI 10.1109/ICSEA.2010.24
   Santos MY, 2016, DATA WAREHOUSE MODEL, P241
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   Sepúlveda C, 2017, IEEE LAT AM T, V15, P729, DOI 10.1109/TLA.2017.7896401
   Shiroiwa M, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P480, DOI 10.1109/CMPSAC.2003.1245383
   Shoval P, 1990, INFORM SYST, V16, P49
   Silva L.F, 2006, ELECTR COMMUN, V3, P1
   Solomencevs A, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P341
   Song IY, 2015, LECT NOTES COMPUT SC, V9381, P18, DOI 10.1007/978-3-319-25264-3_2
   Srivastava S, 2014, INT J SOFT COMPUTING, V3, P66
   Suarez E, 2008, LECT NOTES ENG COMP, P165
   Tan HBK, 2006, IEEE T SOFTWARE ENG, V32, P111, DOI 10.1109/TSE.2006.1599420
   Tan HBK, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P249
   Tiwari Kirti, 2012, International Journal of Scientific and Research Publications, V8, P1
   Truscan D, 2004, P ECBS 04, P378
   WRYCZA S, 1990, INFORM SYST, V15, P603, DOI 10.1016/0306-4379(90)90063-U
   Yu E., 2010, SOCIAL MODELING REQU
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
   Zhang JF, 2010, INT J SOFTW ENG KNOW, V20, P289, DOI 10.1142/S0218194010004736
NR 112
TC 6
Z9 6
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1859
EP 1883
DI 10.1007/s10270-018-0672-7
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100017
DA 2024-07-18
ER

PT J
AU Kolesnikov, S
   Siegmund, N
   Kästner, C
   Grebhahn, A
   Apel, S
AF Kolesnikov, Sergiy
   Siegmund, Norbert
   Kastner, Christian
   Grebhahn, Alexander
   Apel, Sven
TI Tradeoffs in modeling performance of highly configurable software
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Performance-influence models; Highly configurable software systems;
   Performance prediction; Feature interactions; Variability; Software
   product lines; Machine learning
ID PREDICTION
AB Modeling the performance of a highly configurable software system requires capturing the influences of its configuration options and their interactions on the system's performance. Performance-influence models quantify these influences, explaining this way the performance behavior of a configurable system as a whole. To be useful in practice, a performance-influence model should have a low prediction error, small model size, and reasonable computation time. Because of the inherent tradeoffs among these properties, optimizing for one property may negatively influence the others. It is unclear, though, to what extent these tradeoffs manifest themselves in practice, that is, whether a large configuration space can be described accurately only with large models and significant resource investment. By means of 10 real-world highly configurable systems from different domains, we have systematically studied the tradeoffs between the three properties. Surprisingly, we found that the tradeoffs between prediction error and model size and between prediction error and computation time are rather marginal. That is, we can learn accurate and small models in reasonable time, so that one performance-influence model can fit different use cases, such as program comprehension and performance prediction. We further investigated the reasons for why the tradeoffs are marginal. We found that interactions among four or more configuration options have only a minor influence on the prediction error and that ignoring them when learning a performance-influence model can save a substantial amount of computation time, while keeping the model small without considerably increasing the prediction error. This is an important insight for new sampling and learning techniques as they can focus on specific regions of the configuration space and find a sweet spot between accuracy and effort. We further analyzed the causes for the configuration options and their interactions having the observed influences on the systems' performance. We were able to identify several patterns across subject systems, such as dominant configuration options and data pipelines, that explain the influences of highly influential configuration options and interactions, and give further insights into the domain of highly configurable systems.
C1 [Kolesnikov, Sergiy; Grebhahn, Alexander; Apel, Sven] Univ Passau, Chair Software Engn, Passau, Germany.
   [Siegmund, Norbert] Bauhaus Univ Weimar, Chair Intelligent Software Syst, Weimar, Germany.
   [Kastner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 University of Passau; Bauhaus-Universitat Weimar; Carnegie Mellon
   University
RP Kolesnikov, S; Apel, S (corresponding author), Univ Passau, Chair Software Engn, Passau, Germany.
EM kolesnik@fim.uni-passau.de; apel@uni-passau.de
RI Siegmund, Norbert/U-1325-2019
OI Siegmund, Norbert/0000-0001-7741-7777; Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/5, AP 206/6, AP 206/7, AP 206/11, SI
   2171/2, SI 2171/3]; Austrian Federal Ministry of Transport, Innovation
   and Technology (BMVIT) Project [849928]; National Science Foundation
   [1318808, 1552944, 1717022]; Science of Security Lablet [H9823014C0140];
   AFRL; DARPA [FA8750-16-2-0042]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [1717022] Funding
   Source: National Science Foundation; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1552944]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1318808] Funding Source: National Science Foundation
FX Kolesnikov's, Grebhahn's, and Apel's work has been supported by the
   German Research Foundation (AP 206/5, AP 206/6, AP 206/7, AP 206/11) and
   by the Austrian Federal Ministry of Transport, Innovation and Technology
   (BMVIT) Project No. 849928. Siegmund's work has been supported by the
   German Research Foundation under the Contracts SI 2171/2 and SI 2171/3.
   Kastner's work has been supported in part by the National Science
   Foundation (Awards 1318808, 1552944, and 1717022), the Science of
   Security Lablet (H9823014C0140), and AFRL and DARPA (FA8750-16-2-0042).
CR [Anonymous], PARALLEL COMPUTING A
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bastian P., 2006, P S SIM TECHN HANN, P12
   Ben-Gal I.E., 2007, Bayesian networks
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Brunnert A, 2013, AUTOMATIC PERFORMANC, P74
   Calder M, 2006, FORM METHOD SYST DES, V28, P213, DOI 10.1007/s10703-006-0002-5
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Domingos P, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P564
   Grelck C, 2006, INT J PARALLEL PROG, V34, P383, DOI 10.1007/S10766-006-0018-x
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Membarth R, 2012, INT PARALL DISTRIB P, P569, DOI 10.1109/IPDPS.2012.59
   Myung JI, 2004, METHOD ENZYMOL, V383, P351
   Nhlabatsi Armstrong, 2008, Progress in Informatics, P75, DOI 10.2201/NiiPi.2008.5.8
   Pooley R., 2000, the conference on The future of Software engineering, P189
   Prehofer C., 2004, SOFTWARE SYSTEM MODE, V3, P221, DOI DOI 10.1007/s10270-003-0040-z
   Sammut C., 2011, Leave-One-Out Cross-Validation, DOI DOI 10.1007/978-0-387-30164-8469
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   SCHRUBEN L, 1993, 1993 WINTER SIMULATION CONFERENCE PROCEEDINGS, P641
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Simon D., 2013, EVOLUTIONARY OPTIMIZ
   Steinberg D, 2009, CH CRC DATA MIN KNOW, P179, DOI 10.1201/9781420089653.ch10
   Steinwart Ingo, 2008, SUPPORT VECTOR MACHI
   Wallace J. C., 1987, 1987 Winter Simulation Conference Proceedings, P597, DOI 10.1145/318371.318670
   Zhang Y., 2016, SOC PETROLEUM ENG, P2, DOI [DOI 10.2118/182285-MS, 10.1145/2934466.2934469, DOI 10.1145/2934466.2934469]
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
NR 34
TC 29
Z9 30
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2265
EP 2283
DI 10.1007/s10270-018-0662-9
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100031
DA 2024-07-18
ER

PT J
AU Kühne, T
AF Kuhne, Thomas
TI Unifying nominal and structural typing
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Explanatory modeling; Constructive modeling; Unification; Ontologies;
   Conceptual models; Structural typing; Nominal typing
AB In this article, I argue for a typing scheme for modeling that unifies the hitherto separated approaches of nominal and structural typing. Both these approaches have their respective advantages and disadvantages, and I suggest a unifying approach that provides one with the best of both worlds on demand. The ultimate goal is to make a contribution toward removing the gulf currently running through the modeling community that is created by the differences between explanatory and constructive modeling with their dependence on structural and nominal typing, respectively. To this end, I first characterize the typing disciplines underlying these different schools of thought, then identify their respective trade-offs, subsequently observe what aspects of these rather different typing approaches are compatible with each other and which are inherently incompatible, and finally propose a scheme that supports fluid transitioning between the approaches.
C1 [Kuhne, Thomas] Victoria Univ Wellington, POB 600, Wellington 6140, New Zealand.
C3 Victoria University Wellington
RP Kühne, T (corresponding author), Victoria Univ Wellington, POB 600, Wellington 6140, New Zealand.
EM Thomas.Kuehne@ecs.victoria.ac.nz
RI Kühne, Thomas/E-8867-2016; Kuehne, Thomas/AAH-3220-2020
OI Kühne, Thomas/0000-0002-7674-2209; Kuehne, Thomas/0000-0002-7674-2209
CR Aβmann U., 2006, Ontologies for Software Engineering and Software Technology, P249, DOI DOI 10.1007/3-540-34518-3_9
   [Anonymous], 2014, MULTILEVEL MODELING
   [Anonymous], 2012, THESIS
   [Anonymous], 1961, PRINCIPLES ANIMAL
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2012, P MOD WIZ 12
   Atkinson C., 2006, LNI, V96
   Atkinson C, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P216, DOI 10.1109/MODELS.2015.7338252
   Atkinson Colin, 2011, P 7 INT WORKSH SEM W, P1
   Atkinson Colin, 2017, THEME ISSUE MULTILEV
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bartho A., 2010, LNCS, V6325
   Blumberg R., 2003, DM Review, V13, P42
   BRACHMAN RJ, 1983, COMPUTER, V16, P30, DOI 10.1109/MC.1983.1654194
   BRACHMAN RJ, 1985, COGNITIVE SCI, V9, P171, DOI 10.1207/s15516709cog0902_1
   Carnap R., 1947, MEANING NECESSITY ST
   Clark K. L., 1978, NEGATION FAILURE LOG, P293
   Drake F. L, PYTHON 3 6 DOCUMENTA
   Gruber T.R., 1993, Formal Ontology in Conceptual Analysis and Knowledge Representation
   Guarino N., 1992, Data & Knowledge Engineering, V8, P249, DOI 10.1016/0169-023X(92)90025-7
   Guizzardi Giancarlo., 2005, CTIT PhD Thesis Series, P05, DOI [10.1007/978-3-642-31095-9_45, DOI 10.1007/978-3-642-31095-9_45]
   Hesse W., 2006, Software and Systems Modeling, V5, P387, DOI [10.1007/s10270-006-0033-9, DOI 10.1007/S10270-006-0033-9]
   Hursch W. L., 1994, Object-Oriented Programming. 8th European Conference, ECOOP '94. Proceedings, P12, DOI 10.1007/BFb0052174
   Jackson E., 2013, Open-World Logic Programs: A New Foundation for Formal Specifications
   Kappel G, 2006, LECT NOTES COMPUT SC, V4199, P528
   Kühne T, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P95, DOI 10.1145/2976767.2976770
   Kühne T, 2013, SOFTW SYST MODEL, V12, P475, DOI 10.1007/s10270-012-0241-4
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Prinz A, 2016, LECT NOTES COMPUT SC, V9953, P119, DOI 10.1007/978-3-319-47169-3_9
   SHELDON FT, 2003, SOFT, V14, P147, DOI DOI 10.1002/SMR.249
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Simons A J H, 2003, J OBJECT TECHNOLOGY, V2, P13, DOI DOI 10.5381/jot.2003.2.1.c2
   Steimann F., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P34
   Wang XH, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P18
   Wüest D, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P685, DOI 10.1109/ICSE.2015.223
NR 37
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1683
EP 1697
DI 10.1007/s10270-018-0660-y
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100008
DA 2024-07-18
ER

PT J
AU Wüest, D
   Seyff, N
   Glinz, M
AF Wuest, Dustin
   Seyff, Norbert
   Glinz, Martin
TI FlexiSketch: a lightweight sketching and metamodeling approach for
   end-users
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Requirements engineering; Tool; Sketching; Ad hoc modeling; Notation
   definition; End-user metamodeling; Lightweight metamodeling;
   Collaborative metamodeling; Evaluation
ID DIAGRAMS; DESIGN
AB Engineers commonly use paper and whiteboards to sketch and discuss ideas in early phases of requirements elicitation and software modeling. These physical media foster creativity because they are quick to use and do not restrict in any way the form in which content can be drawn. If the sketched information needs to be reused later on, however, engineers have to spend extra effort for preserving the information in a form that can be processed by a software modeling tool. While saving information in a machine-readable way comes for free with formal software modeling tools, they typically anticipate the use of specific, predefined modeling languages and therefore hamper creativity. To combine the advantages of informal and formal tools, we have developed a flexible tool-supported modeling approach that augments a sketching environment with lightweight metamodeling capabilities. Users can create their own modeling languages by defining sketched constructs on demand and export model sketches as semiformal models. In this article, we first give an overview of FlexiSketch and then focus on an evaluation of our approach with two studies conducted with both novice modelers and experienced practitioners. Our goal was to find out how well modelers manage to use our lightweight metamodeling mechanisms, and how they build notations collaboratively. Results show that experienced modelers adopt our approach quickly, while novices have difficulties to distinguish between the model and metamodel levels and would benefit from additional guidance and user awareness features. The lessons learned from our studies can serve as advice for similar flexible modeling approaches.
C1 [Wuest, Dustin; Seyff, Norbert] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Glinz, Martin] Univ Zurich, Dept Informat, Informat, Zurich, Switzerland.
   [Wuest, Dustin; Seyff, Norbert] Univ Appl Sci & Arts Northwestern Switzerland, FHNW, Windisch, Switzerland.
C3 University of Zurich; University of Zurich; FHNW University of Applied
   Sciences & Arts Northwestern Switzerland
RP Wüest, D (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.; Wüest, D (corresponding author), Univ Appl Sci & Arts Northwestern Switzerland, FHNW, Windisch, Switzerland.
EM dustin.wueest@fhnw.ch; norbert.seyff@fhnw.ch; glinz@ifi.uzh.ch
CR Alvarado C., 2004, PROC ACM S USER INTE, P23, DOI DOI 10.1145/1029632.1029637
   [Anonymous], 2009, Found. Trends Hum.-Comput. Interact, DOI DOI 10.1561/1100000013
   [Anonymous], 2007, P 21 BRIT HCI GROUP
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering
   Branham S, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P75
   Izquierdo JLC, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.84
   Chen Q, 2008, SOFTWARE PRACT EXPER, V38, P961, DOI 10.1002/spe.856
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Correia F. F., 2013, 20 C PATT LANG PROGR
   Coyette A, 2007, LECT NOTES COMPUT SC, V4662, P124
   Dekel U, 2007, ACM SIGPLAN NOTICES, V42, P261, DOI 10.1145/1297105.1297047
   Di Ruscio Davide, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P114, DOI 10.1109/SEAA.2013.22
   Do Q, 2012, PROCEDIA COMPUT SCI, V8, P285, DOI 10.1016/j.procs.2012.01.059
   Ellis T. O., 1969, RM5999ARPA RAND CORP
   Ferguson RI, 2000, LECT NOTES ARTIF INT, V1889, P407
   Gabrysiak G., 2011, ICSE WORKSH FLEX MOD
   Goel V., 1995, Sketches of thought
   Golra FR, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P24, DOI 10.1145/2976767.2976807
   Gross Mark D., 1996, P 9 ANN ACM S US INT, P183, DOI DOI 10.1145/237091.237119
   Grundy J, 2007, PROC INT CONF SOFTW, P282
   Gutwin C., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P207, DOI 10.1145/289444.289495
   Gutwin C, 2000, IEEE 9TH INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P98, DOI 10.1109/ENABL.2000.883711
   Haller M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P609
   Hammond Tracy., 2006, ACM SIGGRAPH 2006 CO
   Hili N., 2 WORKSH FLEX MOD DR, P2
   Hyun Cho, 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P22, DOI 10.1109/MISE.2012.6226010
   Javed F, 2008, INFORM SOFTWARE TECH, V50, P948, DOI 10.1016/j.infsof.2007.08.003
   Johansson Maria., 2007, Proceedings of the 21st British HCI Group Annual Conference on People and Computers: HCI...but not as we know it - Volume 1, V1, P177
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kleffmann M., 2015, Proceedings of the 7th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'15, page, P200
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kuhrmann M., 2011, ICSE WORKSH FLEX MOD
   Landay JA, 2001, COMPUTER, V34, P56, DOI 10.1109/2.910894
   Lee JG, 2012, 2012 12TH INTERNATIONAL CONFERENCE ON CONTROL, AUTOMATION AND SYSTEMS (ICCAS), P1135
   Lee LC, 2008, LECT NOTES COMPUT SC, V5236, P567
   Loksa D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1073, DOI 10.1109/ICSE.2013.6606657
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Mangano N, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P331, DOI 10.1145/2556288.2557411
   Mernik M, 2009, 2009 XXII INTERNATIONAL SYMPOSIUM ON INFORMATION, COMMUNICATION AND AUTOMATION TECHNOLOGIES, P14
   Minas M., 2006, ELECT COMMUNICATIONS, V1
   Ossher H., 2010, RC24949W1002054 IBM
   Ossher H, 2010, ACM SIGPLAN NOTICES, V45, P848, DOI 10.1145/1932682.1869529
   Plimmer Beryl., 2004, CHI '04: CHI '04 extended abstracts on Human factors in computing systems, P1337
   Qattous H., 2010, 2010 ACM IEEE INT S
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Sangiorgi U. B., 2010, ICSE WORKSH FLEX MOD
   Sangiorgi U.B., 2012, P DESIGNING INTERACT, P378, DOI DOI 10.1145/2317956.2318013
   Scharf A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P822, DOI 10.1109/ICSE.2013.6606628
   Shih PC, 2009, GROUP 2009 PROCEEDINGS, P139
   Sottet Jean-Sebastien, 2016, P 2 WORKSH FLEX MOD, V1694, P42
   Sutherland Ivan E., 1963, THESIS
   TANG JC, 1991, INT J MAN MACH STUD, V34, P143, DOI 10.1016/0020-7373(91)90039-A
   Tversky B., 2002, 2002 AAAI SPRING S S
   v d Lugt R., 2002, Proceedings of the 4th conference on Creativity cognition, P72, DOI [https://doi.org/10.1145/581710.581723, DOI 10.1145/581710.581723]
   Volz B., 2011, ICSE WORKSH FLEX MOD
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wouters L, 2013, LECT NOTES COMPUT SC, V8107, P522, DOI 10.1007/978-3-642-41533-3_32
   Wüest D, 2013, IEEE INT CONF AUTOM, P664, DOI 10.1109/ASE.2013.6693130
   Wuest D., 2012, INT C MOB COMP APPL, P225, DOI DOI 10.1007/978-3-642-36632-1_13
   Wüest D, 2015, INT REQUIR ENG CONF, P186, DOI 10.1109/RE.2015.7320421
   Wüest D, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P685, DOI 10.1109/ICSE.2015.223
   Zolotas A, 2015, LECT NOTES COMPUT SC, V9153, P75, DOI 10.1007/978-3-319-21151-0_6
NR 63
TC 17
Z9 19
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1513
EP 1541
DI 10.1007/s10270-017-0623-8
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS7AM
UT WOS:000464022400033
DA 2024-07-18
ER

PT J
AU Carré, B
   Vanwormhoudt, G
   Caron, O
AF Carre, Bernard
   Vanwormhoudt, Gilles
   Caron, Olivier
TI On submodels and submetamodels with their relation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Submodel; Submetamodel; Model space; Set-theoretic formalization; Model
   repository
ID MODEL; UML; DESIGN
AB Model-driven engineering (MDE) recognized software models as first-class objects with their own relationships and operations, up to constitute full structured model spaces. We focus on inclusion capacities through the concepts of submodel and submetamodel which contribute a lot to the structuring effort. Submodels and submetamodels underlie many MDE practices which require their precise characterization for plain control. A typical application is model management as offered by model repositories. On the basis of results on submodel inclusion we stated in a preceding paper, we concentrate on the special form of submodels which are submetamodels and their specific role in model space structuring. Pointing out that relating submodels and submetamodels is two ways, their respective inclusion hierarchies will be systematically characterized and symmetrically compared under the logical relationships of metamodel membership and model well-formedness. As amajor result, it will be shown that submodel well-formedness w.r.t submetamodels closely relates to submodel invariance (a property which guarantees transitive structure preservation) applied at both levels. The uniform formalization offers algebraic grounding to better comprehension and control of model spaces which underlie MDE activities. At a much more practical level, reusable technology which takes advantage of established results will be offered.
C1 [Carre, Bernard; Vanwormhoudt, Gilles; Caron, Olivier] Univ Lille, CNRS, UMR 9189, CRIStAL, F-59655 Villeneuve Dascq, France.
   [Vanwormhoudt, Gilles] Inst Mines Telecom, F-75634 Paris 13, France.
C3 Universite de Lille; Centrale Lille; Centre National de la Recherche
   Scientifique (CNRS)
RP Carré, B (corresponding author), Univ Lille, CNRS, UMR 9189, CRIStAL, F-59655 Villeneuve Dascq, France.
EM Bernard.Carre@univ-lille1.fr; Gilles.Vanwormhoudt@univ-lille1.fr;
   Olivier.Caron@univ-lille1.fr
OI Carre, Bernard/0000-0002-7299-9461; Caron, Olivier/0000-0002-7007-2769
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   [Anonymous], T ASP ORIENTED SOF 6
   [Anonymous], P SOFTW TEST VER VAL
   [Anonymous], 2005, WORKSH MDWE 2005
   [Anonymous], LNCS
   [Anonymous], P 1 INT WORKSH TOW M
   [Anonymous], LNCS
   [Anonymous], P FUT SOFTW ENG ICSE
   [Anonymous], P 5 INT C INF TECHN
   [Anonymous], P ACM IEEE 18 INT C
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], P WORKSH EXTR MOD MO
   [Anonymous], INT WORKSH TOW MOD T
   [Anonymous], P WORKSH SCAL MOD DR
   [Anonymous], LNCS
   Baniassad E, 2004, PROC INT CONF SOFTW, P158, DOI 10.1109/ICSE.2004.1317438
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Burger E, 2016, SOFTW SYST MODEL, V15, P473, DOI 10.1007/s10270-014-0413-5
   Carré B, 2015, SOFTW SYST MODEL, V14, P861, DOI 10.1007/s10270-013-0340-x
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Pagán JE, 2014, INFORM SOFTWARE TECH, V56, P586, DOI 10.1016/j.infsof.2014.01.005
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   France R., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P311
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Javed F, 2008, INFORM SOFTWARE TECH, V50, P948, DOI 10.1016/j.infsof.2007.08.003
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kelsen P, 2011, LECT NOTES COMPUT SC, V6603, P171, DOI 10.1007/978-3-642-19811-3_13
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Klein J, 2009, LECT NOTES COMPUT SC, V5795, P514, DOI 10.1007/978-3-642-04425-0_39
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Kühne T, 2010, LECT NOTES COMPUT SC, V6394, P31
   Lahire P, 2007, LECT NOTES COMPUT SC, V4735, P498
   Lano K, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a11
   Levendovszky T, 2009, SOFTW SYST MODEL, V8, P501, DOI 10.1007/s10270-009-0118-3
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Lucrédio D, 2012, SOFTW SYST MODEL, V11, P183, DOI 10.1007/s10270-010-0167-7
   Melnik Sergey., 2003, SIGMOD C, P193, DOI DOI 10.1145/872757.872782
   Muller A, 2005, LECT NOTES COMPUT SC, V3748, P130
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Siikarla M., 2006, Nordic Journal of Computing, V13, P180
   Solberg A., 2005, P 4 WORKSH SOFTW MOD
   Sriplakich P, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P674
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Störrle H, 2011, J VISUAL LANG COMPUT, V22, P3, DOI 10.1016/j.jvlc.2010.11.004
   Taentzer G, 2014, SOFTW SYST MODEL, V13, P239, DOI 10.1007/s10270-012-0248-x
   Vanwormhoudt G, 2017, SOFTW SYST MODEL, V16, P469, DOI 10.1007/s10270-015-0463-3
   Vignaga A, 2013, SOFTW SYST MODEL, V12, P105, DOI 10.1007/s10270-011-0191-2
NR 57
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2018
VL 17
IS 4
BP 1105
EP 1137
DI 10.1007/s10270-016-0540-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE2IV
UT WOS:000453101000004
DA 2024-07-18
ER

PT J
AU Hajri, I
   Goknil, A
   Briand, LC
   Stephany, T
AF Hajri, Ines
   Goknil, Arda
   Briand, Lionel C.
   Stephany, Thierry
TI Configuring use case models in product families
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT ACM/IEEE 18th International Conference on Model Driven Engineering
   Languages and Systems (MODELS)
CY SEP 27-OCT 02, 2015
CL Ottawa, CANADA
SP IEEE, IEEE Comp Soc, Asso Computing Machinery, SigSoft, Asso Enterprise Architects, Eclipse, CEA
DE Product line engineering; Use case-driven development; Configuration;
   Natural language processing; Consistency checking
ID REQUIREMENTS; LINES
AB In many domains such as automotive and avionics, the size and complexity of software systems is quickly increasing. At the same time, many stakeholders tend to be involved in the development of such systems, which typically must also be configured for multiple customers with varying needs. Product Line Engineering (PLE) is therefore an inevitable practice for such systems. Furthermore, because in many areas requirements must be explicit and traceability to them is required by standards, use cases and domain models are common practice for requirements elicitation and analysis. In this paper, based on the above observations, we aim at supporting PLE in the context of use case-centric development. Therefore, we propose, apply, and assess a use case-driven configuration approach which interactively receives configuration decisions from the analysts to generate product-specific (PS) use case and domain models. Our approach provides the following: (1) a use case-centric product line modeling method (PUM), (2) automated, interactive configuration support based on PUM, and (3) an automatic generation of PS use case and domain models from Product Line (PL) models and configuration decisions. The approach is supported by a tool relying on Natural Language Processing (NLP) and integrated with an industrial requirements management tool, i.e., IBM DOORS. We successfully applied and evaluated our approach to an industrial case study in the automotive domain, thus showing evidence that the approach is practical and beneficial to capture variability at the appropriate level of granularity and to configure PS use case and domain models in industrial settings.
C1 [Hajri, Ines; Goknil, Arda; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Stephany, Thierry] IEE, Contern, Luxembourg.
C3 University of Luxembourg
RP Hajri, I (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM ines.hajri@uni.lu; arda.goknil@uni.lu; lionel.Briand@uni.lu;
   thierry.stephany@iee.lu
FU IEE; FNR [FNR/P10/03, FNR10045046]
FX Financial support was provided by IEE and FNR under Grants FNR/P10/03
   and FNR10045046.
CR Alferez M., 2008, VAMOS 08, P81
   Alférez M, 2014, REQUIR ENG, V19, P355, DOI 10.1007/s00766-013-0184-5
   Alférez M, 2010, LECT NOTES COMPUT SC, V5969, P103
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2011, P 2011 ACM S APPL CO
   Armour F., 2001, ADV USE CASE MODELIN
   Arora C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P962, DOI 10.1145/2786805.2803185
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Biddle R, 2002, LECT NOTES COMPUT SC, V2319, P210
   Blanes D., 2014, 23 INT C INF SYST DE, P329
   Bonifacio R., 2015, SOFTW SYST MODEL, P1
   Bonifacio R., 2008, EA AOSD 08, P1
   Bonifácio R, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P125
   Bragança A, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2007.17
   Buhne S., REFSQ 03, P59
   Buhne S., 2006, SOFTWARE PRODUCT LIN
   Choi WS, 2008, 2008 IEEE 8TH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, VOLS 1 AND 2, P760, DOI 10.1109/CIT.2008.4594770
   Cockburn A., 2001, Writing effective use cases
   Cunningham Hamish, DEV LANGUAGE PROCESS
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2005, Conference on Object Oriented Programming Systems Languages and Applications, P200, DOI [10.1145/1094855.1094934, DOI 10.1145/1094855.1094934]
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   ERIKSSON M, 2004, SERPS 04, P73
   Eriksson M, 2009, J SYST SOFTWARE, V82, P435, DOI 10.1016/j.jss.2008.07.046
   Fantechi A, 2004, LECT NOTES COMPUT SC, V3014, P152
   Fantechi A, 2004, LECT NOTES COMPUT SC, V3154, P255
   Faulk SR, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P48
   Forbus K., 1993, BUILDING PROBLEM SOL
   Goknil Arda, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P159, DOI 10.1109/EDOC.2013.26
   Goknil A., ECMDA FA 08, P310
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Goknil A, 2011, SOFTW SYST MODEL, V10, P31, DOI 10.1007/s10270-009-0142-3
   GOMAA H, 2000, IEEE INT C SOFTW REU, P89
   Hajri I, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P338, DOI 10.1109/MODELS.2015.7338265
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   John I., 2004, EMPRESS 04
   Kulak D., 2003, USE CASES REQUIREMEN, V2 nd
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Lauenroth K., RE 08, P193
   Lauenroth K., 2007, ASE 07, P373
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Moon M, 2004, LECT NOTES COMPUT SC, V3107, P23
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Myllarniemi V., 2005, IJCAI 05, P51
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   Nöhrer A, 2013, AUTOMAT SOFTW ENG, V20, P265, DOI 10.1007/s10515-012-0117-4
   Nohrer A., 2012, VAMOS, P83
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   NShrer A., 2010, Fourth International Workshop on Variability Modelling of Software-Intensive Systems, Linz, Austria, January 27-29, P107
   Oppenheim A.N., 2005, QUESTIONNAIRE DESIGN
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Stoiber R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P403, DOI 10.1109/RE.2010.59
   Stoiber R, 2010, VAMOS 10, V37, P77
   Stoiber R., THESIS
   Sun J, 2005, IEEE INT C ENG COMP, P303
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   Trinidad P., 2009, 3 INT WORKSH VAR MOD VAMOS, V9, P145
   Wang B, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P121, DOI 10.1109/RE.2009.15
   Wang CH, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P942, DOI 10.1145/2786805.2803187
   Wang H., 2005, SWESE 05
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Wohlin C., 2012, Experimentation in Software Engineering
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2011, LECT NOTES COMPUT SC, V6698, P115, DOI 10.1007/978-3-642-21470-7_9
   Zhang G., 2013, CEUR WS, P41
   Ziadi T., 2006, SOFTWARE PRODUCT LIN
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P82
NR 78
TC 14
Z9 15
U1 0
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2018
VL 17
IS 3
BP 939
EP 971
DI 10.1007/s10270-016-0539-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GJ7YK
UT WOS:000435606000010
DA 2024-07-18
ER

PT J
AU Franke, U
   Cohen, M
   Sigholm, J
AF Franke, Ulrik
   Cohen, Mika
   Sigholm, Johan
TI What can we learn from enterprise architecture models? An experiment
   comparing models and documents for capability development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture; MODAF; Model-based capability development;
   Experiment; Models versus documents
ID FREE-TEXT; LANGUAGE
AB Enterprise architecture (EA) has been established as a discipline to cope with the complex interactions of business operations and technology. Models, i.e., formal descriptions in terms of diagrams and views, are at the heart of the approach. Though it is widely thought that such architecture models can contribute to improved understanding and decision making, this proposition has not rigorously been tested. This article describes an experiment conducted with a real EA model and corresponding real traditional documents, investigating whether the model or the documents lead to better and faster understanding. Understanding is interesting to study, as it is a prerequisite to other EA uses. The subjects () were officer cadets, and the experiment was carried out using a comprehensive description of military Close Air Support capability either (1) in the form of a MODAF model or (2) in the form of traditional documents. Based on the results, the model seems to lead to better, though not faster, understanding.
C1 [Franke, Ulrik; Cohen, Mika] FOI Swedish Def Res Agcy, S-16490 Stockholm, Sweden.
   [Sigholm, Johan] FHS Swedish Def Univ, POB 27805, S-11593 Stockholm, Sweden.
   [Franke, Ulrik] SICS, POB 1263, S-16429 Kista, Sweden.
C3 FOI - Swedish Defence Research Agency; RISE Research Institutes of
   Sweden
RP Franke, U (corresponding author), FOI Swedish Def Res Agcy, S-16490 Stockholm, Sweden.; Franke, U (corresponding author), SICS, POB 1263, S-16429 Kista, Sweden.
EM ulrik.franke@sics.se
OI Franke, Ulrik/0000-0003-2017-7914
FU Military Academy Karlberg; RAMP;D program of the Swedish Armed Forces
FX The authors wish to acknowledge the assistance of Peter Hammar, Vahid
   Mojtahed, Daniel Oskarsson, and Bjorn Pelzer for participating in the
   pre-trial of the experiment and for suggesting valuable improvements. We
   also thank Teodor Sommestad for encouragement and comments on the
   research setup very early in the process. We would also like to express
   our gratitude to all the participating cadets at the Military Academy
   Karlberg, and to the R&D program of the Swedish Armed Forces for
   funding. The three anonymous reviewers also made comments which
   substantially improved the manuscript.
CR Abraham R., 2012, 7 MED C INF SYST, V33
   Aier S, 2010, LECT NOTES COMPUT SC, V6275, P35
   Anajafi F., 2010, SOFTW TECHN ENG ICST, V1, pV1
   [Anonymous], VIEWPOINT BASED META
   [Anonymous], 2009, LNI
   Bergey BW, 2015, BRIT J EDUC PSYCHOL, V85, P59, DOI 10.1111/bjep.12062
   Boucharas V, 2010, LECT NOTES BUS INF P, V70, P1
   Boudreau MC, 2001, MIS QUART, V25, P1, DOI 10.2307/3250956
   Breimer E., P 16 ANN JOINT C INN, P128
   Brewer MB, 2000, Handbook of Research Methods in Social and Personality Psychology, P3, DOI DOI 10.1017/CBO9780511996481.005
   Busuioc M, 2010, INVEST OPHTH VIS SCI, V51
   CAREY JM, 1991, J MANAGE, V17, P77, DOI 10.1177/014920639101700106
   Corey SM, 1934, J EDUC PSYCHOL, V25, P459, DOI 10.1037/h0074323
   DAHLKOETTER JA, 1979, J CONSULT CLIN PSYCH, V47, P898, DOI 10.1037/0022-006X.47.5.898
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Fischer R, 2007, ENTERP MODELLING INF, V2, P14
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Hammond D, 2007, AM J PREV MED, V32, P202, DOI 10.1016/j.amepre.2006.11.011
   HERRON C, 1995, FR REV, V68, P775
   Hjort-Madsen K., 2006, HICSS 2006, V4, p71c
   Innerhofer-Oberperfler F., 2006, PROC ISSA, P1
   Johnson P., 2004, 2 ANN C SYST ENG RES
   Jonkers H, 2006, INFORM SYST FRONT, V8, P63, DOI 10.1007/s10796-006-7970-2
   Jugel D, 2014, IEEE INT ENTERP, P33, DOI 10.1109/EDOCW.2014.14
   Kaisler S.H, 2005, 38 ANN HAW INT C SYS, P224
   Korhonen JJ, 2014, CONF BUS INFORM, P175, DOI 10.1109/CBI.2014.41
   Lagerstrom R., 2011, 44th Hawaii International Conference on System Sciences, P1, DOI [10.1109/hicss.2011.187, DOI 10.1109/HICSS.2011.187]
   Lagerström R, 2014, P ANN HICSS, P3847, DOI 10.1109/HICSS.2014.477
   Lange M, 2016, EUR J INFORM SYST, V25, P411, DOI 10.1057/ejis.2014.39
   Lankhorst MM, 2004, ADV ENG INFORM, V18, P205, DOI 10.1016/j.aei.2005.01.005
   Lindström Å, 2006, INFORM SYST FRONT, V8, P81, DOI 10.1007/s10796-006-7972-0
   MCGILL R, 1978, AM STAT, V32, P12, DOI 10.2307/2683468
   McGovern J., 2004, PRACTICAL GUIDE ENTE
   Ministry of Defence, 2010, TECHNICAL REPORT
   Närman P, 2014, SOFTW SYST MODEL, V13, P1085, DOI 10.1007/s10270-012-0288-2
   NATO Standardization Agency (NSA), 2004, TECHNICAL REPORT
   Nielsen, 1994, USABILITY ENG
   Quartel D, 2009, IEEE INT ENTERP DIST, P3, DOI 10.1109/EDOC.2009.22
   Rohloff M., 2005, ECIS 2005 P, P113
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Schalles C., 2013, USABILITY EVALUATION, DOI [10.1007/978-3-658-00051-6, DOI 10.1007/978-3-658-00051-6]
   Schaub M., 2012, Modellierung, P75
   Schirillo JA, 2005, RISK ANAL, V25, P555, DOI 10.1111/j.1539-6924.2005.00624.x
   Seidling HM, 2010, INT J MED INFORM, V79, P792, DOI 10.1016/j.ijmedinf.2010.08.003
   Sistrom CL, 2005, AM J ROENTGENOL, V185, P804, DOI 10.2214/ajr.185.3.01850804
   Swedish Defence Materiel Administration (FMV), 2010, TECHNICAL REPORT
   Taylor R. S., 2006, Journal of Educational Computing Research, V35, P289, DOI 10.2190/403P-N4N2-6715-1515
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van der Raadt B, 2008, LECT NOTES COMPUT SC, V5292, P19, DOI 10.1007/978-3-540-88030-1_4
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yeung P, 2009, J MINIM INVAS GYN, V16, P411, DOI 10.1016/j.jmig.2009.02.011
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
NR 53
TC 4
Z9 4
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2018
VL 17
IS 2
BP 695
EP 711
DI 10.1007/s10270-016-0535-z
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD5LK
UT WOS:000430548300017
DA 2024-07-18
ER

PT J
AU Abdelzad, V
   Lethbridge, TC
AF Abdelzad, Vahdat
   Lethbridge, Timothy C.
TI Promoting traits into model-driven development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Reusability; Traits; Modeling; Umple; UML
ID INHERITANCE
AB Traits, as sets of behaviors, can provide a good mechanism for reusability. However, they are limited in important ways and are not present in widely used programming and modeling languages and hence are not readily available for use by mainstream developers. In this paper, we add UML associations and other modeling concepts to traits and apply them to Java and C++ through model-driven development. We also extend traits with required interfaces so dependencies at the semantics level become part of their usage, rather than simple syntactic capture. All this is accomplished in Umple, a textual modeling language based upon UML that allows adding programming constructs to the model. We applied the work to two case studies. The results show that we can promote traits to the modeling level along with the improvement in flexibility and reusability.
C1 [Abdelzad, Vahdat; Lethbridge, Timothy C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
C3 University of Ottawa
RP Abdelzad, V (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
EM v.abdelzad@uottawa.ca; tcl@eecs.uottawa.ca
RI Lethbridge, Timothy/I-3199-2014; Abdelzad, Vahdat/Y-3602-2019
OI Lethbridge, Timothy/0000-0001-9410-2056; 
CR Allen Eric, 2005, Em: Sun Microsystems, V139, P140
   [Anonymous], 2005, E~ective C++: 55 Speci~c Ways to Improve Your Programs and Designs
   [Anonymous], ACM COMPUTING SURVEY, DOI DOI 10.1145/130844.130856
   [Anonymous], 2004, JHOTDRAW 7
   [Anonymous], 2015, UMPL US MAN
   Arevalo G., 2003, P LMO 2003 LANGAGES, P47
   Badreddin O., 2013, SCI, V496, P33
   Badreddin O, 2013, SCI, P129, DOI [10.1007/978-3-319-00948-3, DOI 10.1007/978-3-319-00948-3_]
   Badreddin O., 2014, ENHANCED CODE GENERA
   Badreddin O., 2012, Proceedings of the 2012 Conference of the Center for Advanced Studies on Collaborative Research, P73
   Benedicenti L., 1996, SIGAPP APPL COMPUT R, V4, P8
   Bergel A., 2007, LNCS, P66
   Bergel A, 2008, COMPUT LANG SYST STR, V34, P83, DOI 10.1016/j.cl.2007.05.003
   Bettini L., P 2013 INT C PRINC P, P67
   Bettini L, 2008, PPPJ, P149, DOI [10.1145/1411732.1411753, DOI 10.1145/1411732.1411753]
   Bettini Lorenzo., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, SAC '10, P2096
   BIGGERSTAFF T, 1987, IEEE SOFTWARE, V4, P41, DOI 10.1109/MS.1987.230095
   Black A. P., 2004, P 26 INT C SOFTW ENG
   Bono V., 2007, EL P FORM TECHN JAV
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Chung W, 2005, PROC INT CONF SOFTW, P666
   Denier S., 2005, RSTI LOBJET, V11, P69
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Duggan D, 2001, ACM SIGPLAN NOTICES, V36, P223, DOI 10.1145/504311.504299
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Frogley T., 2001, OVERLOAD J, V43
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garzon M., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P491, DOI 10.1109/WCRE.2012.58
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Ingalls D, 1997, ACM SIGPLAN NOTICES, V32, P318, DOI 10.1145/263700.263754
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lee E., 1988, THESIS
   Lethbridge TC, 2014, CONF SOFTW ENG EDUC, P23, DOI 10.1109/CSEET.2014.6816777
   Lienhard A., 2005, PROC 20 IEEEACM INT, P66
   Liquori L., 2004, RR5247 INRIA
   Liquori L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330022
   Meyers S, 2004, IEEE SOFTWARE, V21, P14, DOI 10.1109/MS.2004.29
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Murphy-Hill EmersonR., 2005, OOPSLA 05, P282, DOI 10.1145/1094855.1094963
   Nierstrasz O., 2005, IAM05006 I INF ANG M
   Petre M, 2014, SOFTW SYST MODEL, V13, P1225, DOI 10.1007/s10270-014-0430-4
   Quitslund P. J., 2004, CSE04005 OGI SCH SCI
   Quitslund P. J., 2004, P 2004 OOPSLA WORKSH, P37
   Quitslund P.J., 2004, P 3 INT WORKSH MECH, P45
   Reichhart S., 2005, TRAITS IN CSHARP
   Reppy J, 2007, LECT NOTES COMPUT SC, V4609, P373
   Sakkinen M., 1989, ECOOP '89. Proceedings of the 1989 European Conference on Object-Oriented Programming, P39
   Schaffer N, 2002, P INT EL RHIN RES S, P1
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Ungar D., 1991, LISP and Symbolic Computation, V4, P223, DOI 10.1007/BF01806107
   Van Cutsem T., 2011, P ACM INT WORKSH PRO, P1, DOI [10.1145/2093328.2093330, DOI 10.1145/2093328.2093330]
NR 52
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 997
EP 1017
DI 10.1007/s10270-015-0505-x
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800005
DA 2024-07-18
ER

PT J
AU Jalali, A
   Ouyang, C
   Wohed, P
   Johannesson, P
AF Jalali, Amin
   Ouyang, Chun
   Wohed, Petia
   Johannesson, Paul
TI Supporting aspect orientation in business process management From
   process modelling to process enactment
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process management; Aspect-oriented decomposition; Process
   modelling; Process enactment; Weaving; Cross-cutting concerns
ID REPRESENTATION; COMPLEXITY
AB Coping with complexity is an important issue in both research and industry. One strategy to deal with complexity is separation of concerns, which can be addressed using aspect-oriented paradigm. Despite being well researched in programming, this paradigm is still in a preliminary stage in the area of business process management (BPM). While some efforts have been made to introduce aspect orientation in business process modelling, there is no holistic approach with a formal underlying foundation to support aspect-oriented business process design and enactment, and this gap restricts aspect-oriented paradigm from being practically deployed in the area of BPM. Therefore, this paper proposes a sound systematic approach which builds on a formal syntax for modelling aspect-oriented business processes and a Petri Net-based operational semantics for enacting these processes. The approach enables the implementation of software system artefacts as a proof of concept to support design and enactment of aspect-oriented business processes in practice. The approach is demonstrated using a banking case study, where processes are modelled using a concrete notation that conforms to the proposed formal syntax and then executed in a state-of-the-art BPM system where the implemented artefacts are deployed.
C1 [Jalali, Amin; Wohed, Petia; Johannesson, Paul] Stockholm Univ, Forum 100, S-16440 Kista, Sweden.
   [Ouyang, Chun] Queensland Univ Technol, Room503,126 Margaret St, Brisbane, Qld, Australia.
C3 Stockholm University; Queensland University of Technology (QUT)
RP Jalali, A (corresponding author), Stockholm Univ, Forum 100, S-16440 Kista, Sweden.
EM aj@dsv.su.se; c.ouyang@qut.edu.au; petia@dsv.su.se; pajo@dsv.su.se
RI Jalali, Amin/AAE-7345-2020; Johannesson, Paul/AAB-8636-2020
OI Jalali, Amin/0000-0002-6633-8587; Johannesson, Paul/0000-0002-7416-8725;
   Wohed, Petia/0000-0001-9154-2064; Ouyang, Chun/0000-0001-7098-5480
FU Australian Research Council [DP120101624]
FX We would like to express our gratitude to Mr. Saman Mesgari for his
   valuable help in the case study. Moreover, we thank the anonymous
   reviewers for their constructive comments that helped us to improve the
   paper. This work is partially supported by an Australian Research
   Council Discovery grant with number DP120101624.
CR Agrawal A., 2007, TECHNICAL REPORT
   Andrews T., 2003, BUSINESS PROCESS EXE, P136
   [Anonymous], 2007, NEWSWEEK INT
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Bider I., 2014, INF SYST E-BUS MANAG, P1, DOI 10.1007/10257-014-0256-1
   Cappelli C, 2010, BUS PROCESS MANAG J, V16, P662, DOI 10.1108/14637151011065955
   Cardoso J, 2006, LECT NOTES COMPUT SC, V4103, P117
   Cardoso J, 2005, PROC WRLD ACAD SCI E, V8, P213
   Charfi A, 2004, LECT NOTES COMPUT SC, V3250, P168
   Charfi A, 2007, THESIS
   Charfi A, 2006, LECT NOTES COMPUT SC, V4275, P183
   Charfi A, 2007, WORLD WIDE WEB, V10, P309, DOI 10.1007/s11280-006-0016-3
   Charfi A, 2010, LECT NOTES COMPUT SC, V6138, P48, DOI 10.1007/978-3-642-13595-8_6
   Decker G, 2008, LECT NOTES COMPUT SC, V5240, P382, DOI 10.1007/978-3-540-85758-7_29
   Di Francescomarino C, 2011, IET SOFTW, V5, P552, DOI 10.1049/iet-sen.2010.0145
   Di Francescomarino C, 2009, LECT NOTES BUS INF, V17, P18
   Filman R., 2000, ASPECT ORIENTED PROG, V17, P18
   Fuentes Lidia., 2007, AOM 07, P28, DOI DOI 10.1145/1229375.1229380
   Ghidini C, 2012, IEEE T SYST MAN CY C, V42, P25, DOI 10.1109/TSMCC.2011.2138133
   Grundy J, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISRE.1999.777988
   Hollingsworth D., 1995, TECHNICAL REPORT
   Jabeen A., 2011, 2011 Proceedings of the IEEE 14th International Multitopic Conference (INMIC 2011), P255, DOI 10.1109/INMIC.2011.6151484
   Jalali A., 2012, LNCS, P649
   Jalali A, 2014, LECT NOTES BUS INF P, V194, P246
   Jalali A, 2014, LECT NOTES BUS INF P, V194, P231
   Jalali A, 2012, LECT NOTES BUS INF P, V125, P23
   Jalali A, 2013, LECT NOTES BUS INF P, V147, P199
   Jalali A, 2013, LECT NOTES COMPUT SC, V8185, P2, DOI 10.1007/978-3-642-41030-7_2
   Johannesson PaulErik Perjons., 2014, INTRO DESIGN SCI, P1, DOI DOI 10.1007/978-3-030-78132-3
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Law J., 2004, AFTER METHOD
   Machado I., 2011, P 2011 INT WORKSH EA, P25
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moreira A., 2002, SEKE 02 P 14 INT C S, V15 - 19, P167
   Santos FJN, 2012, LECT NOTES BUS INF P, V113, P61
   Santos FJN, 2012, BUS PROCESS MANAG J, V18, P964, DOI 10.1108/14637151211283375
   Patiniotakis I, 2013, LECT NOTES BUS INF P, V132, P414
   Pinto M, 2005, COMPUT J, V48, P401, DOI 10.1093/comjnl/bxh083
   POPOVICI A., 2002, P 1 INT C ASPECT ORI, P141
   Popovici Andrei., 2003, AOSD 03, P100
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N., 2007, EVALUATION BPEL4PEOP
   Russell N., 2007, EVALUATION BPEL4PEOP, P513
   Russell N, 2009, LECT NOTES COMPUT SC, V5460, P79
   Santos F., 2012, P 27 ANN ACM S APPL, P1725
   Santos F.J.N., 2011, P 2011 INT WORKSH EA, P19
   Shankardass A, 2009, THESIS
   Souza A., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P164, DOI 10.1109/SOSE.2011.6139105
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Van den Brink W., 2013, ISRN SOFTW ENG, P1, DOI DOI 10.1155/2013/507984
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Wang J, 2007, INT CONF E BUS ENG, P355, DOI 10.1109/ICEBE.2007.52
   Witteborg H, 2014, LECT NOTES COMPUT SC, V8745, P47, DOI 10.1007/978-3-662-44879-3_4
NR 56
TC 5
Z9 5
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 903
EP 925
DI 10.1007/s10270-015-0496-7
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FD2MA
UT WOS:000407367800014
DA 2024-07-18
ER

PT J
AU Sánchez-González, L
   García, F
   Ruiz, F
   Piattini, M
AF Sanchez-Gonzalez, Laura
   Garcia, Felix
   Ruiz, Francisco
   Piattini, Mario
TI A case study about the improvement of business process models driven by
   indicators
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process improvement; Measurement; Indicators; Redesign
   guidelines
ID QUALITY; DESIGN; TOOL
AB Organizations are increasingly concerned about business process model improvement in their efforts to guarantee improved operational efficiency. Quality assurance of business process models should be addressed in the most objective manner, e.g., through the application of measures, but the assessment of measurement results is not a straightforward task and it requires the identification of relevant indicators and threshold values, which are able to distinguish different levels of process model quality. Furthermore, indicators must support the improvements of the models by using suitable guidelines. In this paper, we present a case study to evaluate the BPMIMA framework for BP model improvement. This framework is composed of empirically validated measures related to quality characteristics of the models, a set of indicators with validated thresholds associated with modeling guidelines and a prototype supporting tool. The obtained data suggest that the redesign by applying guidelines driven by the indicator results was successful, as the understandability and modifiability of the models were improved. In addition, the changes in the models according to guidelines were perceived as acceptable by the practitioners who participated in the case study.
C1 [Sanchez-Gonzalez, Laura] INSA, Ave Bellisens, Tarragona, Spain.
   [Garcia, Felix; Ruiz, Francisco; Piattini, Mario] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ 4, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP García, F (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM laurasnchezglez@gmail.com; Felix.Garcia@uclm.es;
   Francisco.RuizG@uclm.es; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Ruiz, Francisco/D-4295-2011; Garcia,
   Felix/D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Ruiz,
   Francisco/0000-0002-4923-7848; Garcia, Felix/0000-0001-6460-0353
FU GEODAS-BC (Fondo Europeo de Desarrollo Regional FEDER)
   [TIN2012-37493-C03-01]; INGENIOSO, Junta de Comunidades de Castilla-La
   Mancha [PEII-2014-050-P]; INGENIOSO, FEDER [PEII-2014-050-P]
FX The authors would like to thank Jan Mendling for his support in research
   related to this study. This work has been developed under the projects:
   GEODAS-BC (Min. de Economia y Competitividad and Fondo Europeo de
   Desarrollo Regional FEDER, TIN2012-37493-C03-01) and INGENIOSO
   (PEII-2014-050-P), Junta de Comunidades de Castilla-La Mancha and FEDER.
CR [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], S APPL COMP SAC06
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Becker J., 2000, GUIDELINES BUSINESS
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Cardoso J, 2006, P IEEE I C SERV COMP, P167, DOI 10.1109/SCC.2006.82
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Figl K, 2013, DECIS SUPPORT SYST, V54, P1104, DOI 10.1016/j.dss.2012.10.037
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Guceglioglu AS, 2005, LECT NOTES COMPUT SC, V3649, P374, DOI 10.1007/11538394_26
   Heravizadeh M., 2008, 6 INT C BUS PROC MAN
   Houy Constantin, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P64, DOI 10.1007/978-3-642-34002-4_5
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Kettinger W.J., MIS Q, V21, P55
   Kim J, 2003, INT J HUM-COMPUT ST, V59, P899, DOI 10.1016/j.ijhcs.2003.06.002
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Matook S, 2009, DECIS SUPPORT SYST, V47, P60, DOI 10.1016/j.dss.2008.12.006
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Mendling J, 2012, J SYST SOFTWARE, V85, P1188, DOI 10.1016/j.jss.2012.01.017
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Qi Yu-dong, 2010, Proceedings 2010 International Conference on Web Information Systems and Mining (WISM 2010), P329, DOI 10.1109/WISM.2010.51
   Recker J, 2011, COMMUN ASSOC INF SYS, V28, P65
   Recker J, 2010, LECT NOTES COMPUT SC, V6336, P29, DOI 10.1007/978-3-642-15618-2_5
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   Rittgen P., 2010, SAC 10
   Robson C., 2002, Real World Research, V2nd
   Rolón E, 2008, HEALTHINF 2008: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON HEALTH INFORMATICS, VOL 2, P173
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Sánchez-González L, 2013, INT J COOP INF SYST, V22, DOI 10.1142/S0218843013500032
   Sánchez-González L, 2012, INFORM SOFTWARE TECH, V54, P1159, DOI 10.1016/j.infsof.2012.05.001
   Sánchez-González L, 2010, LECT NOTES COMPUT SC, V6426, P78
   Satpathy M., 2000, P 10 INT WORKSH NEW, P94
   Sharp A, 2001, ART H COMP SCI LIBR, P3
   Sutcliffe AG, 2006, INT J HUM-COMPUT ST, V64, P375, DOI 10.1016/j.ijhcs.2005.08.016
   SWELLER J, 1994, COGNITION INSTRUCT, V12, P185, DOI 10.1207/s1532690xci1203_1
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Yin R.K., 2003, CASE STUDY RES DESIG
   Yu-dong Q., 2010, 2010 INT C COMP APPL
   ZWEIG MH, 1993, CLIN CHEM, V39, P561
NR 46
TC 16
Z9 19
U1 2
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2017
VL 16
IS 3
BP 759
EP 788
DI 10.1007/s10270-015-0482-0
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FD2MA
UT WOS:000407367800009
DA 2024-07-18
ER

PT J
AU De Francesco, N
   Lettieri, G
   Santone, A
   Vaglini, G
AF De Francesco, Nicoletta
   Lettieri, Giuseppe
   Santone, Antonella
   Vaglini, Gigliola
TI Heuristic search for equivalence checking
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Heuristic search algorithms; Bisimulation; Concurrent systems; Model
   checking
ID LOCAL MODEL CHECKING; REDUCTION; ALGORITHM; GRAPHS
AB Equivalence checking plays a crucial role in formal verification since it is a natural relation for expressing the matching of a system implementation against its specification. In this paper, we present an efficient procedure, based on heuristic search, for checking well-known bisimulation equivalences for concurrent systems specified through process algebras. The method tries to improve, with respect to other solutions, both the memory occupation and the time required for proving the equivalence of systems. A prototype has been developed to evaluate the approach on several examples of concurrent system specifications.
C1 [De Francesco, Nicoletta; Lettieri, Giuseppe; Vaglini, Gigliola] Univ Pisa, Dipartimento Ingn Informaz, Pisa, Italy.
   [Santone, Antonella] Univ Sannio, Dipartimento Ingn, Benevento, Italy.
C3 University of Pisa; University of Sannio
RP Santone, A (corresponding author), Univ Sannio, Dipartimento Ingn, Benevento, Italy.
EM n.defrancesco@unipi.it; g.lettieri@iet.unipi.it; santone@unisannio.it;
   g.vaglini@iet.unipi.it
RI Lettieri, Giuseppe/ABI-8376-2020
OI Lettieri, Giuseppe/0000-0003-1005-7441
CR Alur R, 1999, LECT NOTES COMPUT SC, V1664, P98
   [Anonymous], 1984, HEURISTICS INTELLIGE
   [Anonymous], DAC
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1989, Form. Asp. Comput., DOI DOI 10.1007/BF01887209
   [Anonymous], CORR
   [Anonymous], 1989, PRENTICE HALL INT SE
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], LICS
   [Anonymous], IEEE INT C ALG ARCH
   [Anonymous], 1996, LECT NOTES COMPUTER
   [Anonymous], 1989, TAV TOOLS AUTOMATIC
   [Anonymous], CAV 91 P 3 INT WORKS
   [Anonymous], ALL ONE ONE ALL MODE
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1993, LNCS
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], MOCHART
   [Anonymous], IWSC
   [Anonymous], P 2011 INT C ART INT
   [Anonymous], AAAI IAAI
   [Anonymous], MODEL CHECKING SOFTW
   [Anonymous], TACAS
   [Anonymous], SCI COMPUT PROGRAM
   Barbuti R, 1999, J COMPUT SYST SCI, V59, P537, DOI 10.1006/jcss.1999.1660
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Brebner G., 1993, Formal Aspects of Computing, V5, P467, DOI 10.1007/BF01212487
   Bustan D., 2003, ACM Transactions on Computational Logic, V4, P181, DOI 10.1145/635499.635502
   CHAKRABARTI PP, 1994, ARTIF INTELL, V65, P329, DOI 10.1016/0004-3702(94)90020-5
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Cuomo A, 2014, SCI COMPUT PROGRAM, V95, P390, DOI 10.1016/j.scico.2013.11.022
   De Francesco N, 1998, SCI COMPUT PROGRAM, V30, P309, DOI 10.1016/S0167-6423(97)00017-8
   Edelkamp S, 1998, LECT NOTES ARTIF INT, V1504, P81
   Gentilini R, 2003, J AUTOM REASONING, V31, P73, DOI 10.1023/A:1027328830731
   Godefroid P, 2002, LECT NOTES COMPUT SC, V2280, P266
   Godefroid P., 1996, Lecture Notes in Computer Science, V1032
   Gradara S, 2005, INFORM COMPUT, V202, P191, DOI 10.1016/j.ic.2005.07.004
   Gradara S, 2006, J COMPUT SYST SCI, V72, P1397, DOI 10.1016/j.jcss.2006.03.003
   Graf S., 1996, Formal Aspects of Computing, V8, P607, DOI 10.1007/BF01211911
   Groce A, 2002, LECT NOTES COMPUT SC, V2318, P242
   Hansen EA, 2001, ARTIF INTELL, V129, P35, DOI 10.1016/S0004-3702(01)00106-0
   Jiménez P, 2000, ARTIF INTELL, V124, P1, DOI 10.1016/S0004-3702(00)00063-1
   KANELLAKIS PC, 1990, INFORM COMPUT, V86, P43, DOI 10.1016/0890-5401(90)90025-D
   MAHANTI A, 1985, J ACM, V32, P28, DOI 10.1145/2455.2459
   McMillan K. L., 1993, Symbolic model checking
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Santone A, 2003, IEEE T SOFTWARE ENG, V29, P510, DOI 10.1109/TSE.2003.1205179
   Santone A, 2002, ACTA INFORM, V38, P531, DOI 10.1007/s00236-002-0084-5
   Santone A, 2013, SCI COMPUT PROGRAM, V78, P1346, DOI 10.1016/j.scico.2012.07.015
   Santone A, 2012, ACTA INFORM, V49, P313, DOI 10.1007/s00236-012-0161-3
   STIRLING C, 1991, THEOR COMPUT SCI, V89, P161, DOI 10.1016/0304-3975(90)90110-4
   Valmari A., 1992, Formal Methods in System Design, V1, P297, DOI 10.1007/BF00709154
NR 57
TC 27
Z9 28
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 513
EP 530
DI 10.1007/s10270-014-0416-2
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Demuth, A
   Lopez-Herrejon, RE
   Egyed, A
AF Demuth, Andreas
   Lopez-Herrejon, Roberto Erick
   Egyed, Alexander
TI Constraint-driven modeling through transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering (MDE); Model transformation; Ambiguity;
   Consistency checking; Incremental constraint management
ID CHECKING
AB In model-driven software engineering, model transformation plays a key role for automatically generating and updating models. Transformation rules define how source model elements are to be transformed into target model elements. However, defining transformation rules is a complex task, especially in situations where semantic differences or incompleteness allow for alternative interpretations or where models change continuously before and after transformation. This paper proposes constraint-driven modeling where transformation is used to generate constraints on the target model rather than the target model itself. We evaluated the approach on three case studies that address the above difficulties and other common transformation issues. We also developed a proof-of-concept implementation that demonstrates its feasibility. The implementation suggests that constraint-driven transformation is an efficient and scalable alternative and/or complement to traditional transformation.
C1 [Demuth, Andreas; Lopez-Herrejon, Roberto Erick; Egyed, Alexander] JKU, Inst Syst Engn & Automat, Linz, Austria.
C3 Johannes Kepler University Linz
RP Demuth, A (corresponding author), JKU, Inst Syst Engn & Automat, Linz, Austria.
EM andreas.demuth@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) [P21321-N15, P23115-N23]; EU [254965]; FWF
   Lise-Meitner Fellowship [M1421-N15]; Austrian Science Fund (FWF)
   [P25513] Funding Source: Austrian Science Fund (FWF)
FX The research was funded by the Austrian Science Fund (FWF): P21321-N15
   and P23115-N23, the EU Marie Curie Actions-Intra European Fellowship
   (IEF) through project number 254965, and FWF Lise-Meitner Fellowship
   M1421-N15.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Bajwa IS, 2011, LECT NOTES COMPUT SC, V6698, P132, DOI 10.1007/978-3-642-21470-7_10
   Büttner F, 2005, SIXTEENTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P823, DOI 10.1109/DEXA.2005.192
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Capozucca A., 2011, BARBADOS CRASH MANAG
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Demuth Andreas, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P248, DOI 10.1007/978-3-642-30476-7_17
   Demuth A, 2012, IEEE INT CONF AUTOM, P302, DOI 10.1145/2351676.2351730
   Demuth Andreas, 2011, P 19 ACM SIGSOFT S 1, P452, DOI [10.1145/2025113.2025189, DOI 10.1145/2025113.2025189]
   Di Ruscio Davide, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P91, DOI 10.1007/978-3-642-30982-3_4
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Giese M, 2005, LECT NOTES COMPUT SC, V3713, P309, DOI 10.1007/11557432_23
   Groher I, 2010, LECT NOTES COMPUT SC, V6013, P203, DOI 10.1007/978-3-642-12029-9_15
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Horváth A, 2012, SOFTW SYST MODEL, V11, P385, DOI 10.1007/s10270-010-0185-5
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Lopez-Herrejon RE, 2010, LECT NOTES COMPUT SC, V6138, P217, DOI 10.1007/978-3-642-13595-8_18
   Manders EJ, 2006, JOINT MEETING OF THE FOURTH WORKSHOP ON MODEL-BASED DEVELOPMENT OF COMPUTER-BASED SYSTEMS AND THIRD INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P159
   Mazo R, 2011, P INT COMP SOFTW APP, P456, DOI 10.1109/COMPSAC.2011.66
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Micskei Z, 2011, SOFTW SYST MODEL, V10, P489, DOI 10.1007/s10270-010-0157-9
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nöhrer A, 2013, AUTOMAT SOFTW ENG, V20, P265, DOI 10.1007/s10515-012-0117-4
   NOHRER A, 2011, ICSE, P864
   Ossher H, 2010, ACM SIGPLAN NOTICES, V45, P848, DOI 10.1145/1932682.1869529
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Puissant Jorge Pinna, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P146, DOI 10.1007/978-3-642-31491-9_13
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Reder A, 2010, P IEEE ACM INT C AUT, P347, DOI DOI 10.1145/1858996.1859069
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Sasano Isao, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P138, DOI 10.1007/978-3-642-21732-6_10
   Saxena T, 2010, LECT NOTES COMPUT SC, V6394, P46
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shah SMA, 2010, LECT NOTES COMPUT SC, V6002, P158
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Sun J, 2005, IEEE INT C ENG COMP, P303
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Tisi M, 2011, LECT NOTES COMPUT SC, V6981, P32, DOI 10.1007/978-3-642-24485-8_4
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   Vierhauser M., 2010, P IEEEACM INT C AUTO, P63
   XIONG Y, 2009, ESEC FSE, P315
   Xiong YF, 2009, LECT NOTES COMPUT SC, V5563, P213, DOI 10.1007/978-3-642-02408-5_15
NR 62
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 573
EP 596
DI 10.1007/s10270-013-0363-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400004
DA 2024-07-18
ER

PT J
AU Kim, J
   Kang, I
   Choi, JY
   Lee, I
   Kang, S
AF Kim, Jinhyun
   Kang, Inhye
   Choi, Jin-Young
   Lee, Insup
   Kang, Sungwon
TI Formal synthesis of application and platform behaviors of embedded
   software systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Embedded software systems; Real-time operating systems; Model-driven
   development; Statecharts; TRoS; Formal methods and engineering
ID MODEL; SPECIFICATION; VERIFICATION; STATECHARTS; CSP
AB Two main embedded software components, application software and platform software, i.e., the real-time operating system (RTOS), interact with each other in order to achieve the functionality of the system. However, they are so different in behaviors that one behavior modeling language is not sufficient to model both styles of behaviors and to reason about the characteristics of their individual behaviors as well as their parallel behavior and interaction properties. In this paper, we present a formal approach to the synthesis of the application software and the RTOS behavior models. In this approach, each of them is modeled with its adequate modeling language and then is composed into a system model for analysis. Moreover, this paper also presents a consistent way of analyzing the application software with respect to both functional requirements and timing requirements. To show the effectiveness of the approach, a case study is conducted, where ARINC 653 and its application are modeled and verified against timing requirements. Using our approach, application software can be constructed as a behavioral model independently from a specific platform and can be verified against various platforms and timing constraints in a formal way.
C1 [Kim, Jinhyun] Aalborg Univ, Dept Comp Sci, DK-9229 Aalborg, Denmark.
   [Kang, Inhye] Univ Seoul, Dept Mech & Informat Engn, Seoul 130743, South Korea.
   [Choi, Jin-Young] Korea Univ, Coll Informat & Commun, Seoul 136701, South Korea.
   [Lee, Insup] Univ Penn, Dept Comp & Informat Sci, Philadelphia, PA 19104 USA.
   [Kang, Sungwon] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Aalborg University; University of Seoul; Korea University; University of
   Pennsylvania; Korea Advanced Institute of Science & Technology (KAIST)
RP Kim, J (corresponding author), Aalborg Univ, Dept Comp Sci, Sci Selma Lagerlofs Vej 300, DK-9229 Aalborg, Denmark.
EM jhkim@formal.korea.ac.kr; inhye@uos.ac.kr; choi@formal.korea.ac.kr;
   lee@cis.upenn.edu; sungwon.kang@kaist.ac.kr
OI Choi, Jin-Young/0000-0002-8100-7583
FU National Research Foundation of Korea (NRF) - Ministry of Education,
   Science and Technology [2012R1A1A2009354]
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Education, Science and Technology (2012R1A1A2009354).
CR ALUR R, 1992, LECT NOTES COMPUT SC, V600, P45, DOI 10.1007/BFb0031987
   Alur R., 1999, Computer Aided Verification, V1633, P688
   [Anonymous], 2004, ELECTRON NOTES THEOR
   [Anonymous], OBJ CONSTR LANG VERS
   Baeten J.C. M., 2002, MONO THEOR COMP SCI
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Butler M, 2005, LECT NOTES COMPUT SC, V3582, P221
   Butler M., 2000, Formal Aspects of Computing, V12, P182, DOI 10.1007/PL00003930
   Cai LK, 2003, CODES(PLUS)ISSS 2003: FIRST IEEE/ACM/IFIP INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN & SYSTEM SYNTHESIS, P19, DOI 10.1109/CODESS.2003.1275250
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Clarke D., 1995, J COMPUT SOFTW ENG, V3
   de la Cámara P, 2011, SOFTW TEST VERIF REL, V21, P267, DOI 10.1002/stvr.422
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Fischer C., 1998, FORTE 10 PSTV 17 97, P503
   Gamatié A, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P144, DOI 10.1109/RTTAS.2003.1203046
   Gamatie A., 2002, RR4678 2NR2A
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HENNESSY M, 1995, INFORM COMPUT, V117, P221, DOI 10.1006/inco.1995.1041
   In der Rieden T., 2005, FMICS 05, P115
   Inc A.R., 2005, 653P12 ARINC
   Kaynar D.K., 2006, Synthesis Lectures on Computer Science, V1, P1
   Kim J., 2011, SIGSOFT SOFTW ENG NO, V36, P1
   Kim J, 2010, J UNIVERS COMPUT SCI, V16, P2415
   Kim J, 2010, IEEE T IND INFORM, V6, P568, DOI 10.1109/TII.2010.2060206
   Koutsoukos XD, 1998, DISCRETE EVENT DYN S, V8, P137, DOI 10.1023/A:1008293802713
   Lee Edward A., 2009, Technical report
   Lee I, 2007, J LOGIC ALGEBR PROGR, V72, P98, DOI 10.1016/j.jlap.2007.02.005
   LEE IS, 1994, P IEEE, V82, P158, DOI 10.1109/5.259433
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Mallet F., 2008, P 1 INT C SIM TOOLS, P43
   Merritt M., 1991, LNCS, V527, P408
   Milner R., 1989, Communication and concurrency
   Pettersson P., 2008, MDHMRTC23220081SE MA
   REED GM, 1988, THEOR COMPUT SCI, V58, P249, DOI 10.1016/0304-3975(88)90030-8
   Sagonas K. F., 2005, P 2005 ACM SIGPLAN W
   Schneider S, 2005, LECT NOTES COMPUT SC, V3771, P89
   Smith G, 2002, LECT NOTES COMPUT SC, V2495, P108
   Waszniowski L, 2008, REAL-TIME SYST, V38, P39, DOI 10.1007/s11241-007-9036-z
NR 40
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 839
EP 859
DI 10.1007/s10270-013-0342-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400020
DA 2024-07-18
ER

PT J
AU Jacquel, M
   Berkani, K
   Delahaye, D
   Dubois, C
AF Jacquel, Melanie
   Berkani, Karim
   Delahaye, David
   Dubois, Catherine
TI Verifying B proof rules using deep embedding and automated theorem
   proving
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE B Method; Proof rules; Verification; Deep embedding; Automated theorem
   proving; Coq; Zenon
ID PROVER
AB We propose a formal and mechanized framework which consists in verifying proof rules of the B method, which cannot be automatically proved by the elementary prover of Atelier B and using an external automated theorem prover called Zenon. This framework contains in particular a set of tools, named BCARe and developed by Siemens IC-MOL, which relies on a deep embedding of the B theory within the logic of the Coq proof assistant. This toolkit allows us to automatically generate the required properties to be checked for a given proof rule. Currently, this tool chain is able to automatically verify a part of the derived rules of the B-Book, as well as some added rules coming from Atelier B and the rule database maintained by Siemens IC-MOL.
C1 [Jacquel, Melanie; Berkani, Karim] Siemens IC MOL, Chatillon, France.
   [Delahaye, David] CEDRIC CNAM, Paris, France.
   [Dubois, Catherine] INRIA CEDRIC ENSIIE, Paris, France.
C3 Siemens AG; Institut Polytechnique de Paris; ENSTA Paris; heSam
   Universite; Conservatoire National Arts & Metiers (CNAM); Ecole
   Nationale Superieure d'Informatique pour l'Industrie et l'Entreprise
   (ENSIIE); heSam Universite; Conservatoire National Arts & Metiers (CNAM)
RP Delahaye, D (corresponding author), CEDRIC CNAM, Paris, France.
EM Melanie.Jacquel@siemens.com; Karim.Berkani@siemens.com;
   David.Delahaye@cnam.fr; dubois@ensiie.fr
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 2002, LNCS, V2272, P317
   Barendregt H, 2001, J SYMB COMPUT, V32, P3, DOI 10.1006/jsco.2001.0455
   Berkani K., 2004, Technique et Science Informatiques, V23, P855, DOI 10.3166/tsi.23.855-878
   Bobot F., 2011, INT WORKSH INT VER L
   Bobot F., 2011, ALT ERGO VERSION 0 9
   Bodeveix J.-P., 1999, B US GROUP M TOUL FR
   Bonichon R, 2007, LECT NOTES ARTIF INT, V4790, P151, DOI 10.1007/978-3-540-75560-9_13
   Chartier P, 1998, LECT NOTES COMPUT SC, V1393, P66
   Cirstea H., 1998, STRATEGIES AUTOMATED, P25
   Couchot J.-F., 2003, ENTCS, V95, P189
   Déharbe D, 2010, LECT NOTES COMPUT SC, V5977, P217, DOI 10.1007/978-3-642-11811-1_17
   Delahaye D, 2000, LECT NOTES ARTIF INT, V1955, P85, DOI 10.1007/3-540-44404-1_7
   Jaeger É, 2007, LECT NOTES ARTIF INT, V4790, P288, DOI 10.1007/978-3-540-75560-9_22
   Korovin K, 2008, LECT NOTES ARTIF INT, V5195, P292, DOI 10.1007/978-3-540-71070-7_24
   Le Lay E., 2008, THESIS INSA RENNES
   Maamria I., 2010, LNCS, V5977, P407
   McCune W, 1997, J AUTOM REASONING, V18, P211, DOI 10.1023/A:1005843632307
   Mentre David, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P238, DOI 10.1007/978-3-642-30885-7_17
   Mikhailov L., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P140
   Riazanov A., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P292
   Schulz S, 2002, AI COMMUN, V15, P111
   The Coq Development Team, 2010, COQ DEV TEAM COQ VER
NR 23
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 101
EP 119
DI 10.1007/s10270-013-0322-z
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100008
DA 2024-07-18
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI From misuse cases to mal-activity diagrams: bridging the gap between
   functional security analysis and design
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Misuse cases; Mal-activity diagrams; Metamodels
AB Secure software engineering is concerned with developing software systems that will continue delivering its intended functionality despite a multitude of harmful software technologies that can attack these systems from anywhere and at anytime. Misuse cases and mal-activity diagrams are two techniques to model functional security requirements address security concerns early in the development life cycle. This allows system designers to equip their systems with security mechanisms built within system design rather than relying on external defensive mechanisms. In a model-driven engineering process, misuse cases are expected to drive the construction of mal-activity diagrams. However, a systematic approach to transform misuse cases into mal-activity diagrams is missing. Therefore, this process remains dependent on human skill and judgment, which raises the risk of developing mal-activity diagrams that are inconsistent with the security requirements described in misuse cases, leading to the development of an insecure system. This paper presents an authoring structure for misuse cases and a transformation technique to systematically perform this desired model transformation. A study was conducted to evaluate the proposed technique using 46 attack stories outlined in a book by a former well-known hacker (Mitnick and Simon in The art of deception: controlling the human element of security, Wiley, Indianapolis, 2002). The results indicate that applying the proposed technique produces correct mal-activity diagrams from misuse cases.
C1 King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP El-Attar, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, POB 5066, Dhahran 31261, Saudi Arabia.
EM melattar@kfupm.edu.sa
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
FU Deanship of Scientific Research (DSR) at King Fahd University of
   Petroleum & Minerals (KFUPM) [IN100016]
FX The author would like to acknowledge the support provided by the
   Deanship of Scientific Research (DSR) at King Fahd University of
   Petroleum & Minerals (KFUPM) for funding this work through project No.
   IN100016. The author would like to express his gratitude to Dr. Guttorm
   Sindre for providing the complete set of mal-activity diagrams for the
   purpose of this research. The author would also like thank Dr. Guttorm
   Sindre for permission to reuse the diagram shown in Fig. 11. The author
   would also like to thank Springer LNCS for granting the permission to
   use the diagram shown in Fig. 11. Finally, the author would like to
   thank the case study reviewers as well as the business analysts who
   helped validate this research work.
CR [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   [Anonymous], 2002, Use Case Modeling
   [Anonymous], 2005, 270012005 ISOIEC
   [Anonymous], 2003, The Art of Deception: Controlling the Human Element of Security
   [Anonymous], P 6 INT WORKSH SCEN
   Armour F., 2000, ADV USE CASE MODELIN
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bodden E., 2008, TRANSFORMING TIMELIN
   Brucker AD, 2006, LECT NOTES COMPUT SC, V4199, P306
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Constantine L., 1995, Interactions, V2, P34, DOI 10.1145/205350.205356
   den Braber F., 2002, P 13 IRMA INT C ISS
   Eclipse Foundation, ATL A MOD TRANSF TEC
   Fox J., 2004, 12 IEEE INT C WORKSH
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2813, P263
   Giorgini P., 2005, P 13 IEEE INT C REQ
   Houmb S.-H., 2002, P UML 2002 SAT WORKS
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Koch M., 2001, CRITICAL SYSTEMS DEV, P63
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Lin LC, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P354
   Massacci F, 2007, AUTOMAT SOFTW ENG, V14, P341, DOI 10.1007/s10515-007-0013-5
   OMG, UN MOD LANG VERS 1 5
   Patzina S., 2011, P 4 INT S APPL GRAPH
   POPP G, 2003, 10 AS PAC SOFTW ENG
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Schneider G., 1998, APPL USE CASES A PRA
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G., 2002, P 2 S REQ ENG INF SE
   Sindre G., 2001, P 7 INT WORKSH REQ E
   Sindre G., 2000, ELICITING SECURITY R
   Sindre G., 2007, P 13 INT WORK C REQ
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   [No title captured]
NR 35
TC 5
Z9 8
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 173
EP 190
DI 10.1007/s10270-012-0240-5
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000010
DA 2024-07-18
ER

PT J
AU Nkwocha, A
   Hall, JG
   Rapanotti, L
AF Nkwocha, A.
   Hall, J. G.
   Rapanotti, L.
TI Design rationale capture for process improvement in the globalised
   enterprise: an industrial study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Design rationale; Process improvement; Problem oriented engineering;
   Assurance-driven design
ID SYSTEMS
AB Design rationale fills in the gaps between the original requirements of a system and the finished product encompassing decisions, constraints and other information that influenced the outcome. Existing research in Software Engineering corroborates the importance of design rationale to capture knowledge assets, particularly in the context of the global enterprise, with its increased reliance on IT systems, and risk of knowledge loss through staff movement and attrition. Despite this, the practice of design rationale capture is not as extensive as could be expected due to reasons which include time and budget constraints, the lack of standards and tools, and some uncertainty as to its actual added value. In this paper, we address the viability and benefits of capturing design rationale as a by-product of design in the context of a real-world global organisational setting. This was achieved through a study in which an emerging design approach-Problem Oriented Engineering-was applied in the context of a global financial institution to address a critical IT problem as part of its software supplier's client resolution process. The study provides some positive evidence that the approach-guided knowledge capture of key design rationale elements and that it combined well with existing practices within the organisation and even led to improvement to one of their key processes.
C1 [Nkwocha, A.] Bank Amer, CW Tech Solut Ltd, Dartford, England.
   [Hall, J. G.; Rapanotti, L.] Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Bank of America Corporation; Open University - UK
RP Rapanotti, L (corresponding author), Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
EM ann.nkwocha@bankofamerica.com; J.G.Hall@open.ac.uk;
   L.Rapanotti@open.ac.uk
OI Hall, Jon/0000-0002-5619-820X
FU IBM; SE Validation Ltd.; CWTech Ltd; Bank of America
FX We are pleased to acknowledge the support of IBM, under the Eclipse
   Innovation Grants, of SE Validation Ltd., of CWTech Ltd and Bank of
   America. We thank our colleagues in the Department of Computing at The
   Open University, particularly Michael Jackson, for their continuing
   support, and Guy Nkwocha for his patience, support and understanding.
CR [Anonymous], P 4 INT C INT WEB AP
   [Anonymous], BUS PROC MOD NOT BPM
   Beck J., 2002, IT SERVICES SOURCING
   Bloomfield R., 1998, Technical report
   Burge J, 2000, ARTIFICIAL INTELLIGENCE IN DESIGN '00, P611
   Burge J.E., 2002, P WORKSH DES PROC MO
   Canas A. J., 1999, P AAAI 99 WORKSH EXP
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Checkland P., 2006, Learning in Action
   Clements P.C., 2005, Technical report
   Colwell B., IEEE COMPUT, V38, P10
   CONKLIN J, 1988, ACM T INFORM SYST, V6, P303, DOI 10.1145/58566.59297
   Cross N, 2004, DESIGN STUD, V25, P427, DOI 10.1016/j.destud.2004.06.002
   Dick J., 2005, IEEE SOFTWARE
   Douglas I, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P172
   Flyvbjerg B., 2011, The Sage Handbook of Qualitative Research, V4th, P301, DOI [DOI 10.1016/B978-1-85617-726-9.00005-4, 10.1016/B978-1-85617-726-9.00005-4]
   Gruber T., 1991, TECHNICAL REPORT
   Hall J.G., 2009, INT J ADV SYST MEAS, V2
   Hall J.G., 2008, P INT WORKSH REQ AN
   Hall J.G., 2008, IEEE T SOFTW ENG, V34
   Hall J.G., 2007, P IEEE SOFTW ENG FOR
   Hall J.G., 2007, P 10 IEEE INT S HIGH
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jarczyk A., 1992, P 25 ANN HAW INT C S
   Kruchten P, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P291
   Kunz W, 1970, 131 U CAL I URB REG
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   MacLean A., 1989, SIGCHI Bulletin, P247, DOI 10.1145/67450.67497
   Mannering D, 2007, LECT NOTES COMPUT SC, V4680, P252
   McCall R.J., 1998, DESIGN STUD, V12, P30
   Nkwocha A., 2009, THESIS OPEN U
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Oates B. J., 2006, Researching information systems and computing
   POTTS C, 1999, P IEEE 4 INT S REQ E
   POTTS C, 1988, P 10 INT C SOFTW ENG
   Regli WC, 2000, ENG COMPUT-GERMANY, V16, P209, DOI 10.1007/PL00013715
   Rogers G.F. C., 1983, NATURE ENG
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Toulmin S., 1958, The uses of argument
   Yin R.K., 2014, Applications of case study research, V2nd
NR 40
TC 4
Z9 5
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 825
EP 845
DI 10.1007/s10270-011-0223-y
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU de Lara, J
   Guerra, E
AF de Lara, Juan
   Guerra, Esther
TI From types to type requirements: genericity for model-driven engineering
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Language engineering; Meta-modelling;
   Genericity; Reutilization
AB Model-driven engineering (MDE) is a software engineering paradigm that proposes an active use of models during the development process. This paradigm is inherently type-centric, in the sense that models and their manipulation are defined over the types of specific meta-models. This fact hinders the reuse of existing MDE artefacts with other meta-models in new contexts, even if all these meta-models share common characteristics. To increase the reuse opportunities of MDE artefacts, we propose a paradigm shift from type-centric to requirement-centric specifications by bringing genericity into models, meta-models and model management operations. For this purpose, we introduce so-called concepts gathering structural and behavioural requirements for models and meta-models. In this way, model management operations are defined over concepts, enabling the application of the operations to any meta-model satisfying the requirements imposed by the concept. Model templates rely on concepts to define suitable interfaces, hence enabling the definition of reusable model components. Finally, similar to mixin layers, templates can be defined at the meta-model level as well, to define languages in a modular way, as well as layers of functionality to be plugged-in into other meta-models. These ideas have been implemented in MetaDepth, a multi-level meta-modelling tool that integrates action languages from the Epsilon family for model management and code generation.
C1 [de Lara, Juan; Guerra, Esther] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI de Lara, Juan/0000-0001-9425-6362; Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Science and Innovation [TIN2008-02081,
   TIN2011-24139]; Community of Madrid [S2009/TIC-1650]
FX We thank the referees for their useful comments. This work has been
   sponsored by the Spanish Ministry of Science and Innovation with
   projects METEORIC (TIN2008-02081) and Go Lite (TIN2011-24139), and by
   the R&D program of the Community of Madrid with project "e-Madrid"
   (S2009/TIC-1650).
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   Bagge AH, 2009, ELECTRON NOTES THEOR, V238, P17, DOI 10.1016/j.entcs.2009.09.038
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bonet P., 2007, CLEI 07
   Bottoni P, 2008, J VISUAL LANG COMPUT, V19, P429, DOI 10.1016/j.jvlc.2008.04.004
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Clark T, 2003, COMPUT J, V46, P566, DOI 10.1093/comjnl/46.5.566
   Clark Tony., 2008, APPL METAMODELLING F, VSecond
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   de Lara J., 2007, GT VMT 07 EL COMM EA, V6
   de Lara J, 2010, LECT NOTES COMPUT SC, V6394, P16
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   de Lara J, 2010, FORM ASP COMPUT, V22, P297, DOI 10.1007/s00165-009-0114-y
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 1990, MONOGRAPHS THEOR COM
   Gamma Erich., 1994, DESIGN PATTERNS
   Garcia R, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/949343.949317
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5560, P39, DOI 10.1007/978-3-642-03764-1_2
   Hillah L.M., 2009, Petri Net Newsletter, V76, P9
   Järvi J, 2010, SCI COMPUT PROGRAM, V75, P596, DOI 10.1016/j.scico.2009.01.001
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Kühne T, 2010, LECT NOTES COMPUT SC, V6394, P31
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Musser D. R., 1998, LNCS, V1766, P12
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Rose L., 2011, SOSYM IN PRESS
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stepanov A., 1994, TECHNICAL REPORT
   Stepanov Alexander, 2009, ELEMENTS PROGRAMMING
   Stroustrup B, 2009, C 0X REMOVE CONCEPTS
   Weisemöller I, 2008, LECT NOTES COMPUT SC, V5301, P386, DOI 10.1007/978-3-540-87875-9_28
NR 43
TC 33
Z9 34
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2013
VL 12
IS 3
BP 453
EP 474
DI 10.1007/s10270-011-0221-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 175XY
UT WOS:000321268300005
DA 2024-07-18
ER

PT J
AU van der Aalst, WMP
AF van der Aalst, W. M. P.
TI What makes a good process model?
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process mining; Process modeling; Process model quality
ID CONFORMANCE CHECKING; COMPLEXITY
AB There seems to be a never ending stream of new process modeling notations. Some of these notations are foundational and have been around for decades (e.g., Petri nets). Other notations are vendor specific, incremental, or are only popular for a short while. Discussions on the various competing notations concealed the more important question "What makes a good process model?". Fortunately, large scale experiences with process mining allow us to address this question. Process mining techniques can be used to extract knowledge from event data, discover models, align logs and models, measure conformance, diagnose bottlenecks, and predict future events. Today's processes leave many trails in data bases, audit trails, message logs, transaction logs, etc. Therefore, it makes sense to relate these event data to process models independent of their particular notation. Process models discovered based on the actual behavior tend to be very different from the process models made by humans. Moreover, conformance checking techniques often reveal important deviations between models and reality. The lessons that can be learned from process mining shed a new light on process model quality. This paper discusses the role of process models and lists seven problems related to process modeling. Based on our experiences in over 100 process mining projects, we discuss these problems. Moreover, we show that these problems can be addressed by exposing process models and modelers to event data.
C1 [van der Aalst, W. M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP van der Aalst, WMP (corresponding author), Queensland Univ Technol, BPM Grp, Brisbane, Qld 4001, Australia.
EM w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940
CR Alves A., 2007, WEB SERVICE BUSINESS
   Bose R. P. Jagadeesh Chandra, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P391, DOI 10.1007/978-3-642-21640-4_30
   Clarke EM, 1999, MODEL CHECKING, P1
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Herrmann T., 2000, DESIGNING COOPERATIV, P174
   IEEE task force on process mining, 2011, LECT NOT BUS INF PRO, V99
   La Rosa M, 2011, IEEE T IND INFORM, V7, P614, DOI 10.1109/TII.2011.2166795
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   Van Der Aalst W. M. P., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P549, DOI 10.1007/s10606-005-9005-9
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2010, INT HANDB INFORM SYS, P313, DOI 10.1007/978-3-642-00416-2_15
   van der Aalst WMP, 2010, LECT NOTES BUS INF P, V63, P1
   van der Aalst WMP, 2009, LECT NOTES COMPUT SC, V5565, P2, DOI 10.1007/978-3-642-02144-2_2
   Van der Aalst WMP, 2001, INT J COOP INF SYST, V10, P443, DOI 10.1142/S0218843001000412
   Witten I. H., 2005, DATA MINING PRACTICA
   Yerkes RM, 1908, J COMP NEUROL PSYCHO, V18, P459, DOI 10.1002/cne.920180503
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
NR 23
TC 11
Z9 11
U1 1
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 557
EP 569
DI 10.1007/s10270-012-0265-9
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500009
DA 2024-07-18
ER

PT J
AU Biermann, E
   Ermel, C
   Taentzer, G
AF Biermann, Enrico
   Ermel, Claudia
   Taentzer, Gabriele
TI Formal foundation of consistent EMF model transformations by algebraic
   graph transformation
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Consistent EMF models; Model transformation; Graph transformation; Rule
   amalgamation
ID LANGUAGE
AB Model transformation is one of the key activities in model-driven software development. An increasingly popular technology to define modeling languages is provided by the Eclipse Modeling Framework (EMF). Several EMF model transformation approaches have been developed, focusing on different transformation aspects. To validate model transformations with respect to functional behavior and correctness, a formal foundation is needed. In this paper, we define consistent EMF model transformations as a restricted class of typed graph transformations using node type inheritance. Containment constraints of EMF model transformations are translated to a special kind of graph transformation rules such that their application leads to consistent transformation results only. Thus, consistent EMF model transformations behave like algebraic graph transformations and the rich theory of algebraic graph transformation can be applied to these EMF model transformations to show functional behavior and correctness. Furthermore, we propose parallel graph transformation as a suitable framework for modeling EMF model transformations with multi-object structures. Rules extended by multi-object structures can specify a flexible number of recurring structures. The actual number of recurring structures is dependent on the application context of such a rule. We illustrate our approach by selected refactorings of simplified statechart models. Finally, we discuss the implementation of our concepts in a tool environment for EMF model transformations.
C1 [Biermann, Enrico; Ermel, Claudia] Tech Univ Berlin, Inst Softwaretech & Theoret Informat, Berlin, Germany.
   [Taentzer, Gabriele] Univ Marburg, Marburg, Germany.
C3 Technical University of Berlin; Philipps University Marburg
RP Ermel, C (corresponding author), Tech Univ Berlin, Inst Softwaretech & Theoret Informat, Berlin, Germany.
EM enrico@cs.tu-berlin.de; claudia.ermel@tu-berlin.de;
   taentzer@mathematik.uni-marburg.de
OI Ermel, Claudia/0000-0001-5448-7289
CR [Anonymous], LNCS
   [Anonymous], 2007, THESIS U POLITECNICA
   [Anonymous], MOF 2 0 XMI MAPP SPE
   [Anonymous], 2007, LNCS
   Arendt T., 2010, P ACM IEEE 13 INT C
   Balasubramanian D., 2007, ECEASST, V6
   Berlin TU, 2009, AGG
   BIERMANN E, 2010, LNCS, V5765
   Biermann E., 2010, P 4 INT WOR IN PRESS
   Biermann E., 2010, ECEASST, V26
   Biermann E, 2006, LECT NOTES COMPUT SC, V4199, P425
   de Lara J., 2004, Electron. Notes Theor. Comput. Sci, V109, P17, DOI [10.1016/j.entcs.2004.02.053, DOI 10.1016/J.ENTCS.2004.02.053]
   Eclipse Consortium, 2008, ECL MOD FRAM EMF VER
   Eclipse Consortium, 2007, ECL MOD DEV TOOLS
   Eclipse Consortium, 2009, ECL MOD FRAM TECHN
   Ehrig H., 2006, EATCS MONOGR THEOR C
   Fischer T, 2000, LECT NOTES COMPUT SC, V1764, P296
   Gronmo R, 2009, LECT NOTES COMPUT SC, V5563, P67, DOI 10.1007/978-3-642-02408-5_6
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hoffmann B, 2006, ELECTRON NOTES THEOR, V152, P53, DOI 10.1016/j.entcs.2006.01.014
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Kuske S, 2000, THESIS U BREMEN
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   *OBJ MAN GROUP, 2008, MET OBJ FAC MOF 2 0
   Object Management Group, 2008, MET OBJ FAC MOF COR
   Rensink A, 2009, ECEASST, V18
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schurr Andy., 1999, HDB GRAPH GRAMMARS C, P487
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   TAENTZER G, 1996, THESIS TU BERLIN SHA
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
NR 34
TC 50
Z9 51
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2012
VL 11
IS 2
BP 227
EP 250
DI 10.1007/s10270-011-0199-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934PS
UT WOS:000303457300007
DA 2024-07-18
ER

PT J
AU Cabot, J
   Clarisó, R
   Guerra, E
   de Lara, J
AF Cabot, Jordi
   Clariso, Robert
   Guerra, Esther
   de Lara, Juan
TI A UML/OCL framework for the analysis of graph transformation rules
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Graph transformation; OCL; Meta-modelling; Domain Specific Visual
   Languages; Verification and validation
ID UML; OCL; ALLOY; TOOL
AB In this paper we present an approach for the analysis of graph transformation rules based on an intermediate OCL representation. We translate different rule semantics into OCL, together with the properties of interest (like rule applicability, conflicts or independence). The intermediate representation serves three purposes: (1) it allows the seamless integration of graph transformation rules with the MOF and OCL standards, and enables taking the meta-model and its OCL constraints (i.e. well-formedness rules) into account when verifying the correctness of the rules; (2) it permits the interoperability of graph transformation concepts with a number of standards-based model-driven development tools; and (3) it makes available a plethora of OCL tools to actually perform the rule analysis. This approach is especially useful to analyse the operational semantics of Domain Specific Visual Languages. We have automated these ideas by providing designers with tools for the graphical specification and analysis of graph transformation rules, including a back-annotation mechanism that presents the analysis results in terms of the original language notation.
C1 [Cabot, Jordi; Clariso, Robert] Univ Oberta Catalunya, Barcelona, Spain.
   [Guerra, Esther] Univ Carlos III Madrid, Madrid, Spain.
   [de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
C3 UOC Universitat Oberta de Catalunya; Universidad Carlos III de Madrid;
   Autonomous University of Madrid
RP Cabot, J (corresponding author), Estudis Informat Multimedia & Telecomunicac, Rbla Poblenou 156, Barcelona 08018, Spain.
EM jcabot@uoc.edu; rclariso@uoc.edu; eguerra@inf.uc3m.es;
   Juan.deLara@uam.es
RI Guerra, Esther/B-4977-2014; Cabot, Jordi/P-7723-2015; Clariso,
   Robert/B-5450-2009; de Lara, Juan/B-5422-2014
OI Guerra, Esther/0000-0002-2818-2278; Cabot, Jordi/0000-0003-2418-2489;
   Clariso, Robert/0000-0001-9639-0186; de Lara, Juan/0000-0001-9425-6362
CR *AGG, AGG GRAPH TRANSF AN
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Andoni A., 2003, MITLCSTR921 CSAIL
   [Anonymous], XML METADATA INTERCH
   [Anonymous], LNCS
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], ECLIPSE CONSTR PROGR
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Brucker AD, 2009, ACTA INFORM, V46, P255, DOI 10.1007/s00236-009-0093-8
   BRUCKER AD, 2006, 525 ETH ZUR
   Büttner F, 2006, LECT NOTES COMPUT SC, V4178, P398
   CABOT J, 2008, MODEVVA 2008, P73
   Cabot J, 2008, LECT NOTES COMPUT SC, V5063, P229, DOI 10.1007/978-3-540-69927-9_16
   Cabot J, 2008, LECT NOTES COMPUT SC, V5301, P37, DOI 10.1007/978-3-540-87875-9_3
   Cabot Jordi., 2007, Proc. of the 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE'07), P547
   Clavel M, 2006, LECT NOTES COMPUT SC, V4019, P368
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   *DRESD OCL, DRESD OCL TOOLK
   EBERT J, 2008, GI LECT NOTES INFORM, P67
   Rivera JE, 2009, LECT NOTES COMPUT SC, V5452, P54, DOI 10.1007/978-3-642-00434-6_5
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 1996, Handbook of Graph Grammars and Computing by Graph Transformation, V1, P247
   Ermel C, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P125, DOI 10.1109/VLHCC.2005.18
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kalnins A, 2005, LECT NOTES COMPUT SC, V3599, P62
   KATZ S, 2005, M81 AOSD TECHN ISR
   Kniesel G, 2006, WORK CONF REVERSE EN, P324
   Kniesel G, 2009, LECT NOTES COMPUT SC, V5490, P135, DOI 10.1007/978-3-642-02059-9_5
   LAMBERS L, 2008, P GT VMT 08 EL COMM, V10
   Markovic S, 2008, SOFTW SYST MODEL, V7, P25, DOI 10.1007/s10270-007-0056-x
   Mehner K, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P69
   Mellor S.J., 2004, ADDISON WESLEY OBJEC
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MENS T, 2006, LMO 06, V12, P167
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Velasco PPP, 2008, ELECTRON NOTES THEOR, V206, P133, DOI 10.1016/j.entcs.2008.03.079
   QUERALT A, 2008, CAISE FOR 2008 CEUR, P101
   QUERALT A, 2008, CAISE 2008, P281
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   *QVT, QVT STAND SPEC
   Rensink A, 2008, LECT NOTES COMPUT SC, V5065, P114, DOI 10.1007/978-3-540-68679-8_8
   SCHURR A, 1995, LNCS, V903, P151
   Sendall S, 2002, LECT NOTES COMPUT SC, V2263, P250
   Taentzer G, 2005, LECT NOTES COMPUT SC, V3442, P64, DOI 10.1007/978-3-540-31984-9_6
   Varro Daniel, 2004, Journal of Software and Systems Modeling, V3, P85, DOI [10.1007/s10270-003-0050-x, DOI 10.1007/S10270-003-0050-X, 10.1007/ s10270-003-0050-x]
   Volter Markus., 2006, Model-Driven Software Development: Technology, Engineering, Management
   MOF 2 0 STANDARD SPE
   OCL 2 0 STANDARD SPE
   FUJABA TOOL SUITE HO
NR 59
TC 11
Z9 12
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 335
EP 357
DI 10.1007/s10270-009-0129-0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Freeman, G
   Batory, D
   Lavender, G
   Sarvela, JN
AF Freeman, Greg
   Batory, Don
   Lavender, Greg
   Sarvela, Jacob Neal
TI Lifting transformational models of product lines: a case study
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT Inaugural International Conference on Model Transformation
CY JUL, 2008
CL Zurich, SWITZERLAND
DE Transformation reuse; Code generation; Model composition; High-level
   transformations; Features; Product-lines; Model driven engineering
AB Model driven engineering (MDE) of software product lines (SPLs) merges two increasing important paradigms that synthesize programs by transformation. MDE creates programs by transforming models, and SPLs elaborate programs by applying transformations called features. In this paper, we present the design and implementation of a transformational model of a product line of scalar vector graphics and JavaScript applications. We explain how we simplified our implementation by lifting selected features and their compositions from our original product line (whose implementations were complex) to features and their compositions of another product line (whose specifications were simple). We used operators to map higher-level features and their compositions to their lower-level counterparts. Doing so exposed commuting relationships among feature compositions in both product lines that helped validate our model and implementation.
C1 [Freeman, Greg; Batory, Don; Lavender, Greg; Sarvela, Jacob Neal] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Batory, D (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM gfreeman@ece.utexas.edu; batory@cs.utexas.edu; lavender@cs.utexas.edu;
   sarvela@cs.utexas.edu
CR ANASTASPOULOS M, 2005, NET OBJECTDAYS, P425
   Ancona D., 2002, PPDP '02, P189, DOI [10.1145/571157.571177, DOI 10.1145/571157.571177]
   ANFURRUTIA FI, 2007, INT C WEB ENG COM, P473
   [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Avila-García O, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1006, DOI 10.1145/1244002.1244221
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P143, DOI 10.1109/ICSR.1998.685739
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2000, IEEE T SOFTWARE ENG, V26, P441, DOI 10.1109/32.846301
   BATORY D, 2003, AHEAD TOOL SUITE ATS
   BAXTER ID, 1992, COMMUN ACM, V35, P73, DOI 10.1145/129852.129859
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   BOOCH G, 2004, MDA J, P2
   COLYER A, COMP0012004 LANC U C
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   DEELSTRA S, 2003, MOD DRIV ARCH FDN AP
   DROSSOPOULOU S, 1999, S LOG COMP SCI
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   GONZLEZBAIXAULI B, 2005, ENV WORKSH MOD TRANS
   GRAY J, 2004, INT C GEN PROGR COMP, P361
   GRONMO R, 2008, INT C MOD TRANSF ICM, P122
   Hemel Z, 2008, LECT NOTES COMPUT SC, V5063, P183, DOI 10.1007/978-3-540-69927-9_13
   JOUAULT F, 2005, MOD TRANSF PRACT WOR
   Kang Kyo C, 1990, Technical Report
   KHURSHID S, 2008, INT S SOFTW REL ENG, P249
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kolbly Donovan., 2002, EXTENSIBLE LANGUAGE
   KURTEV I, 2005, INT WORLD WID WEB WW
   LAGORIO G, 2004, THESIS U GENOVA
   Lopez-Herrejon Roberto., 2006, Proceedings of the 2006 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation (New York, NY, USA), PEPM '06, P68
   LOPEZHERREJON R, 2002, USING HYPER J IMPLEM
   Memon A. M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P257, DOI 10.1109/ICSE.1999.841016
   MENS T, 2005, INT WORKSH GRAPH MOD, DOI DOI 10.1016/J.ENTCS.2005.10.021
   NEUMAN A, US POPULATION 2000 E
   OSSHER H, 2002, MULTIDIMENSIONAL SEP
   RIVERA J, 2008, INT C OBJ MOD COMP P, DOI DOI 10.1007/978-3-540-69824-1_9
   Sanchez J. Cuadrado, 2008, INT C THEOR PRACT MO, P168
   SCHMIDT D, 2005, WORKSH 8 MODELS
   SMARAGDAKIS Y, 1999, GENERATIVE COMPONENT
   Takeda Taizo, 2008, INT C MOD TRANSF ICM, P171, DOI [DOI 10.1007/978-3-540-69927-9_8, 10.1007/978-3-540-79885-9_8]
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Tomita Masaru., 1985, EFFICIENT PARSING NA
   TRUJILLO S, 2007, GENERATIVE PROGRAMMI, P105
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   TRUJULLO S, 2007, THESIS U BASQUE COUN
   WAGELAAR D, 2008, INT C MOD TRANSF ICM
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
   [No title captured]
NR 52
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2010
VL 9
IS 3
BP 359
EP 373
DI 10.1007/s10270-009-0131-6
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 607BG
UT WOS:000278472700005
DA 2024-07-18
ER

PT J
AU Evermann, J
AF Evermann, Joerg
TI A UML and OWL description of Bunge's upper-level ontology model
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
ID HERMENEUTICS; INFORMATION; CYC
AB A prominent high-level ontology is that proposed by Mario Bunge. While it has been extensively used for research in IS analysis and conceptual modelling, it has not been employed in the more formal settings of semantic web research. We claim that its specification in natural language is the key inhibitor to its wider use. Consequently, this paper offers a description of this ontology in open, standardized knowledge representation formats. The ontology is described both in UML and OWL in order to address needs of both semantic web and conceptual modelling communities.
C1 Mem Univ Newfoundland, St John, NF, Canada.
C3 Memorial University Newfoundland
RP Evermann, J (corresponding author), Mem Univ Newfoundland, St John, NF, Canada.
EM jevermann@mun.ca
CR [Anonymous], P WORKSH INT INF INT
   [Anonymous], 2004, J. of Web Semantics
   [Anonymous], 1981, Dictionary of Philosophy
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P43
   Bechhofer Sean, 2004, OWL Web Ontology Language Reference
   BERA P, 2004, P 2004 C FORM ONT IN
   BERA P, 2005, IMPROVING REAL WORLD
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Boland RJ., 1985, RES METHODS INFORM S
   Bunge M., 1979, TREATISE BASIC PHILO, V4, DOI DOI 10.1007/978-94-009-9392-1
   BUNGE MA, 1977, ONTOLOGY 1, V3
   Chalmers M, 2004, EUR J INFORM SYST, V13, P210, DOI 10.1057/palgrave.ejis.3000504
   COCKROFT S, 2003, P 7 PAC AS C INF SYS, P611
   DAVIES I, 2003, P EMMSAD WORKSH VELD
   DEMUTH B, 2004, 13 INT C INF SYST DE
   DURIC D, 2004, INT J COMPUT SCI INF, V1, P91
   Dussart A, 2004, J DATABASE MANAGE, V15, P74, DOI 10.4018/jdm.2004040104
   Evermann J, 2005, IEEE T SOFTWARE ENG, V31, P21, DOI 10.1109/TSE.2005.15
   Evermann J, 2005, LECT NOTES COMPUT SC, V3520, P33
   Evermann J, 2005, REQUIR ENG, V10, P146, DOI 10.1007/s00766-004-0208-2
   EVERMANN J, 2006, J COMPUT INF SYST, V46
   EVERMANN J, 2001, P 20 INT C CONC MOD, P354
   EVERMANN J, 2001, P WORKSH INF TECHN S, P91
   Fensel D., 2003, Spinning the Semantic Web: Bringing the World Wide Web to Its Full Potential
   FETTKE P, 2003, P 2003 AM C INF SYST
   FLYNN D, 1995, INFORM SYSTEM CONCEP
   FOX M, 1994, P 2 INT C COOP INF S, P82
   Gadamer Hans-Georg., 2008, PHILOS HERMENEUTICS
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   GEMINO A, 1999, THESIS U BRIT COLUMB
   Genova G., 2002, SOFTW SYST MODEL, V1, P86
   Gomez-Perez A., 2004, ONTOLOGICAL ENG
   Green P., 2001, Australian Journal of Information Systems, V9, P30
   Green P, 2004, J DATABASE MANAGE, V15, P105, DOI 10.4018/jdm.2004040105
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   GREEN P, 1997, P 2 CAISE IFIP8 1 IN, P1
   Green PF, 2005, IEEE T KNOWL DATA EN, V17, P713, DOI 10.1109/TKDE.2005.79
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gruninger M, 2002, COMMUN ACM, V45, P39, DOI 10.1145/503124.503146
   Guarino N, 1998, FR ART INT, V46, P3
   GUHA RV, 1994, COMMUN ACM, V37, P127
   GUIZZARDI G, 2004, P 16 INT C ADV INF S
   GUIZZARDI G, 2004, P WORKSH PHIL INF WS
   GUIZZARDI G, 2002, P 21 INT C CONC MOD
   HELLER B, 2003, FORMAL ONTOLOGY PRIN
   Heller B., 2004, AXIOMATHES, V14, P57, DOI DOI 10.1023/B:AXIO.0000006788.44025.49
   HENDERSONSELLER.B, 1999, P 2 INT C UN MOD LAN, P550
   Herre H, 2006, GEN FORMAL ONTOLOG 1
   HERRERA SI, 2005, P PHISE WORKSH PORT, P571
   Holsapple CW, 2002, COMMUN ACM, V45, P42, DOI 10.1145/503124.503147
   Horrocks I, 2007, J AUTOM REASONING, V39, P249, DOI 10.1007/s10817-007-9079-9
   Horrocks Ian., 2003, Journal of Web Semantics, V1, P7, DOI [DOI 10.1016/J.WEBSEM.2003.07.001, https://doi.org/10.1016/j.websem.2003.07.001]
   Jones SE, 2000, HUM BRAIN MAPP, V11, P12, DOI 10.1002/1097-0193(200009)11:1<12::AID-HBM20>3.0.CO;2-K
   Kim H, 2002, COMMUN ACM, V45, P48, DOI 10.1145/503124.503148
   LENAT DB, 1995, COMMUN ACM, V38, P33, DOI 10.1145/219717.219745
   LENAT DB, 1990, COMMUN ACM, V33, P30, DOI 10.1145/79173.79176
   Masolo C., 2003, Ontology Library: Wonderweb Deliverable D18
   MYERS MD, 1995, INFORM SYST J, V5, P51, DOI 10.1111/j.1365-2575.1995.tb00089.x
   NILES I, 2001, P 2 INT C FORM ONT I, P2
   Noy NF, 1997, AI MAG, V18, P53
   *OBJ MAN GROUP, 2006, PTC061011 OBJ MAN GR
   *OBJ MAN GROUP, 2005, FORMAL050704 OBJ MAN
   OPDAHL A, 1999, INFORM SYSTEM CONCEP
   OPDAHL A, 1999, P INF SYST FDN WORKS
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   Opdahl AL, 2004, J DATABASE MANAGE, V15, P39, DOI 10.4018/jdm.2004040103
   Opdahl AL, 2001, J SYST SOFTWARE, V57, P119, DOI 10.1016/S0164-1212(00)00123-0
   Pinto HS, 2004, KNOWL INF SYST, V6, P441, DOI 10.1007/s10115-003-0138-1
   Prasad A, 2002, ORGAN RES METHODS, V5, P12, DOI 10.1177/1094428102051003
   Recker J.C., 2006, Proceedings of the 18th International Conference on Advanced Information Systems Engineering, Workshops and Doctoral Consortium, P521
   Ricoeur Paul., 1976, INTERPRETATION THEOR
   Rosemann M, 2002, INFORM SYST, V27, P75, DOI 10.1016/S0306-4379(01)00048-5
   SMITH B, 2001, P 2 INT C FORM ONT I
   Soffer P, 2004, BIOMED SCI INSTRUM, V3084, P521
   SOFFER P, 2001, REQUIR ENG, V6, P663
   Staab S., 2004, HDB ONTOLOGIES
   SU X, 2004, INFORM MODELING METH
   SU X, 2002, P 10 INT C ADV INF S
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   USCHOLD M, 1997, ENTERPRISE ONTOLOGY
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   WAND Y, 1995, DECIS SUPPORT SYST, V15, P285, DOI 10.1016/0167-9236(94)00043-6
   Wand Y, 1996, COMMUN ACM, V39, P86, DOI 10.1145/240455.240479
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   WAND Y, 1989, INFORM SYSTEM CONCEP
   WAND Y, 1990, STUDIES M BUNGES TRE
   Warmer J., 1999, AW OBJ TECHNOL S
   Weber R, 1996, INFORM SYST J, V6, P147, DOI 10.1111/j.1365-2575.1996.tb00010.x
   Weber R., 1997, Ontological foundations of information systems: Coopers Lybrand and the Accounting Association of Australia and New
NR 90
TC 17
Z9 22
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2009
VL 8
IS 2
BP 235
EP 249
DI 10.1007/s10270-008-0082-3
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 428LK
UT WOS:000264849300006
DA 2024-07-18
ER

PT J
AU Lano, K
AF Lano, K.
TI A compositional semantics of UML-RSDS
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE UML semantics; UML-RSDS; Model transformations
AB This paper provides a semantics for the UML-RSDS (Reactive System Development Support) subset of UML, using the real-time action logic (RAL) formalism. We show how this semantics can be used to resolve some ambiguities and omissions in UML semantics, and to support reasoning about specifications using the B formal method and tools. We use 'semantic profiles' to provide precise semantics for different semantic variation points of UML. We also show how RAL can be used to give a semantics to notations for real-time specification in UML. Unlike other approaches to UML semantics, which concentrate on the class diagram notation, our semantic representation has behaviour as a central element, and can be used to define semantics for use cases, state machines and interactions, in addition to class diagrams.
C1 Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
C3 University of London; King's College London
RP Lano, K (corresponding author), Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
EM kevin.lano@kcl.ac.uk
OI Lano, Kevin Charles/0000-0002-9706-1410
CR ABRIAL JR, 1996, BOOK ASSIGNING PROGR
   ANDROUTSOPOULOS K, 2004, THESIS KINGS COLL LO
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1976, MATH LOGIC, DOI DOI 10.1007/978-1-4684-9452-5
   [Anonymous], PATTERNS JAVA
   [Anonymous], 2005, UML PROF SCHED PERF
   ARUCHAMY G, 2006, UHCS0607
   *B COR UK LTD, 2005, BTOOLKIT
   BICARREGUI JC, 1997, ECOOP 97 LNCS
   BICARREGUI JC, 1199, P IFIP TC2 WORK C AL
   BOWEN J, 2006, SEEFM05, P1
   BROY M, 2006, SYSTEM MODEL UML UML
   CHIARADIA JM, 2006, OCL META MODELS MULT
   CLARK T, 2001, WORKSH LANG DESCR TO
   Damm W, 2005, SCI COMPUT PROGRAM, V55, P81, DOI 10.1016/j.scico.2004.05.012
   DIERKS H, 1998, ESSLLI 98, P13
   Evans A, 1999, LECT NOTES COMPUT SC, V1723, P140
   Fecher H, 2005, LECT NOTES COMPUT SC, V3785, P52
   FIADEIRO J, 1991, LNCS, V489
   Fiadeiro J. L., 1994, Temporal Logic. First International Conference, ICTL '94 Proceedings, P48, DOI 10.1007/BFb0013980
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glinz M, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P11, DOI 10.1109/IWSSD.2000.891122
   GOGOLLA M, 1999, UML SEMANTICS FAW VI
   GOLDSACK S, 1996, IEE C8 C DIG HYBR CO
   GRAF S, 2003, SVERTS 03
   JAHANIAN F, 1986, IEEE T SOFTWARE ENG, V12, P890, DOI 10.1109/TSE.1986.6313045
   KNAPP A, 2006, 5 INT WORKSH CSDUML
   KYAS M, 2004, SFEDL 04
   LAMPORT L, 1991, 79 DIG EQ CORP SYST
   Lano K, 1998, J LOGIC COMPUT, V8, P679, DOI 10.1093/logcom/8.5.679
   Lano K, 1999, LECT NOTES COMPUT SC, V1577, P129
   LANO K, 2006, 5 INT WORKSH CSDUML
   LANO K, 2005, IFM 02
   LANO K, 2003, OBJET, V9, P53
   LANO K, 2006, MARTES 06 MODELS C
   LANO K, 2000, FTRTFT
   LANO K, 2004, IFM 04
   LISKOV B, 1995, LNCS, V967
   NAUMENKO A, 2003, TRIUNE CONTINUUM PAR
   *OMG, 2006, UML SUP VERS 2 0 OMG
   *OMG, 2006, UML OCL 2 0 SPEC FIN
   Ostroff J.S., 1989, TEMPORAL LOGIC REAL
   PNUELI A, 1986, LNCS, V224
   RICHTERS M, 2005, OCL SEMANTIES ANNEX
   RYAN M, 1991, P INT C THEOR ASP CO
   SIMONS AJH, 2003, J OBJECT TECHNOLOGY, V2, P55
   Smith J, 2000, P ECOOP WORKSH DEF P
   Sunyé G, 2000, LECT NOTES COMPUT SC, V1850, P44
   VERHOEF M, 2006, MODELLING VALIDATING
NR 50
TC 6
Z9 6
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2009
VL 8
IS 1
BP 85
EP 116
DI 10.1007/s10270-007-0064-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 377YT
UT WOS:000261289000006
DA 2024-07-18
ER

PT J
AU von der Beeck, M
AF von der Beeck, Michael
TI Development of logical and technical architectures for automotive
   systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 7th Satellite Activities Conference on UML Modeling Languages and
   Applications
CY OCT 11-15, 2004
CL Lisbon, PORTUGAL
SP SINFIC, Springer, Mentor Graph, IBM, ACM SIGSOFT, IEEE Comp Soc, New Univ Lisbon, Turismo Lisboa, Object Management Grp
AB This paper presents a modeling approach for the development of software for electronic control units in the automotive domain. The approach supports the development of two related architecture models in the overall development process: the logical architecture provides a graphical, quite abstract representation of a typically large set of automotive functions. On this abstraction level no design decisions are taken. The technical architecture provides a software and a hardware representation in separated views: the software architecture describes the software realization of functions as software components, whereas the hardware architecture models hardware entities, on which the software components are deployed. Logical as well as technical architectures only model structural information, but no behavioural information. A tight integration of both architecture levels - on the conceptual and on the tool level - with related development phases such as requirements engineering, behaviour modeling, code generation as well as version and configuration management resulting in a seamless overall development process is presented. This architecture modeling approach has been developed within a safety-relevant project at BMW Group. Positive as well as negative experiences with the application of this approach are described.
C1 BMW Grp, D-80788 Munich, Germany.
C3 BMW AG
RP von der Beeck, M (corresponding author), BMW Grp, D-80788 Munich, Germany.
EM Michael.Beeck@bmw.de
CR BELSCHNER R, 2005, ELECT SYSTEMS VEHICL, P511
   BROWN AW, 2004, INT J SOFTW SYST MOD, V3, P314
   FRANCE R, 2005, INT J SOFTW SYST MOD, V4, P1
   Frischkorn H-G, 2004, AUT SOFTW WORKSH SAN
   HEINECKE H, 2003, ELECT SYSTEMS VEHICL
   HENDERSONSELLER.B, 2005, SOFTWARE SYSTEM MODE, V4, P4, DOI DOI 10.1007/S10270-004-0076-8
   Hoare C.A.R., 1985, Communication Sequential Processes
   JECKLE M, 2004, UMI 2 0 GLASKLAR
   KOBRYN C, 2004, INT J SOFTW SYST MOD, V3, P4
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Milner R., 1989, Communication and concurrency
   *OMG, UML 2 0 SUP SPEC
   SAUL T, 2005, VDI C BAD BAD, P535
   SCHARNHORST T, 2005, ELECT SYSTEMS VEHICL, P395
   Selic B., 1994, REAL TIME OBJECT ORI
   von der Beeck M., 2000, Formal Methods for Distributed System Development. FORTE/PSTV 2000. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE XIII) and Protocol Specification, Testing and Verification (PSTV XX), P335
   von der Beeck M, 2005, LECT NOTES COMPUT SC, V3297, P94
   von der Beeck M., 2002, Softw. Syst. Model., V1, DOI [10.1007/s10270-002-0012-8, DOI 10.1007/S10270-002-0012-8]
NR 19
TC 4
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2007
VL 6
IS 2
BP 205
EP 219
DI 10.1007/s10270-006-0022-z
PG 15
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 283WR
UT WOS:000254667700006
DA 2024-07-18
ER

PT J
AU Zimmermann, L
   Zerbato, F
   Weber, B
AF Zimmermann, Lisa
   Zerbato, Francesca
   Weber, Barbara
TI What makes life for process mining analysts difficult? A reflection of
   challenges
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Early Access
DE Process mining; Challenges; Mitigation strategies; Process analysis;
   Work practices
ID AUTOMATED DISCOVERY; PROCESS MODELS
AB Over the past few years, several software companies have emerged that offer process mining tools to assist enterprises in gaining insights into their process executions. However, the effective application of process mining technologies depends on analysts who need to be proficient in managing process mining projects and providing process insights and improvement opportunities. To contribute to a better understanding of the difficulties encountered by analysts and to pave the way for the development of enhanced and tailored support for them, this work reveals the challenges they perceive in practice. In particular, we identify 23 challenges based on interviews with 41 analysts, which we validate using a questionnaire survey. We provide insights into the relevancy of the process mining challenges and present mitigation strategies applied in practice to overcome them. While mitigation strategies exist, our findings imply the need for further research to provide support for analysts along all phases of process mining projects on the individual level, but also the technical, group, and organizational levels.
C1 [Zimmermann, Lisa; Zerbato, Francesca; Weber, Barbara] Univ St Gallen, Inst Comp Sci, St Gallen 9000, Switzerland.
C3 University of St Gallen
RP Zimmermann, L (corresponding author), Univ St Gallen, Inst Comp Sci, St Gallen 9000, Switzerland.
EM lisa.zimmermann@unisg.ch
RI Zerbato, Francesca/AAK-1670-2020
OI Zerbato, Francesca/0000-0001-7797-4602; Zimmermann,
   Lisa/0000-0002-6149-7060
FU We thank all our interview participants and survey respondents for
   taking the time for sharing their process mining experience with us.
FX We thank all our interview participants and survey respondents for
   taking the time for sharing their process mining experience with us.
CR Alman A, 2020, 2020 2ND INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2020), P121, DOI 10.1109/ICPM49681.2020.00027
   Augusto Adriano, 2022, Process Mining Handbook. Lecture Notes in Business Information Processing (448), P76, DOI 10.1007/978-3-031-08848-3_3
   Augusto A, 2019, KNOWL INF SYST, V59, P251, DOI 10.1007/s10115-018-1214-x
   Beerepoot I, 2023, COMPUT IND, V146, DOI 10.1016/j.compind.2022.103837
   Berti A., 2023, Softw. Impacts
   Corbin J., 2015, BASICS QUALITATIVE R
   Dakic D., 2019, 2019 IEEE 17th international symposium on intelligent systems and informatics (sisy), P161
   De Leoni M., 2015, Road Traffic Fine Management Process
   Di Ciccio Claudio, 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629447
   Di Ciccio C., 2022, Process Mining Handbook, V448, P108
   Eggert M, 2022, LECT NOTES COMPUT SC, V13420, P125, DOI 10.1007/978-3-031-16103-2_11
   Emamjome F, 2019, LECT NOTES COMPUT SC, V11877, P127, DOI 10.1007/978-3-030-33246-4_8
   Gnther CW., 2012, BPM, V940, P40
   Grisold T, 2021, BUS PROCESS MANAG J, V27, P369, DOI 10.1108/BPMJ-03-2020-0112
   Janssenswillen G, 2019, KNOWL-BASED SYST, V163, P927, DOI 10.1016/j.knosys.2018.10.018
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Kerremans M., 2020, Gartner report
   Kerremans Marc., 2021, Market Guide for Process Mining
   Kipping G, 2022, LECT NOTES COMPUT SC, V13420, P40, DOI 10.1007/978-3-031-16103-2_5
   Klinkmüller C, 2019, LECT NOTES COMPUT SC, V11675, P322, DOI 10.1007/978-3-030-26619-6_21
   Koorn JJ, 2021, 2021 3RD INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2021), P120, DOI 10.1109/ICPM53251.2021.9576877
   Koorn JJ, 2020, LECT NOTES COMPUT SC, V12168, P167, DOI 10.1007/978-3-030-58666-9_10
   Leemans S.J., 2014, BPM DEMOS, V1295, DOI DOI 10.1007/978-3-319-15895-2_26
   Leiner D.J., 2022, SoSci survey
   Maggi FM, 2018, INFORM SYST, V74, P136, DOI 10.1016/j.is.2017.12.002
   Maleki S., 2022, On current job market demands for process mining: a descriptive analysis of linkedin vacancies
   Mamudu A, 2022, LECT NOTES COMPUT SC, V13420, P143, DOI 10.1007/978-3-031-16103-2_12
   Marin-Castro HM, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app112210556
   Martin N, 2021, BUS INFORM SYST ENG+, V63, P511, DOI 10.1007/s12599-021-00720-0
   Munoz-Gama J, 2022, J BIOMED INFORM, V127, DOI 10.1016/j.jbi.2022.103994
   Object Management Group, 2013, Technical Report
   Qafari Mahnaz Sadat, 2020, Business Process Management Workshops. BPM 2020 International Workshops. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 397), P155, DOI 10.1007/978-3-030-66498-5_12
   R'bigui H., 2017, International Journal of Business Process Integration and Management, V8, P285, DOI [DOI 10.1504/IJBPIM.2017.10009731, 10.1504/IJBPIM.2017.10009731]
   Ralph P., 2020, EMPIRICAL STANDARDS
   Reinkemeyer L., 2020, Process mining in action, V1
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Smit K., 2019, BLED 2019 P, V25
   Stertz Florian, 2021, Business Process Management Forum: BPM Forum 2021, Proceedings. Lecture Notes in Business Information Processing (427), P195, DOI 10.1007/978-3-030-85440-9_12
   Syed Rehan, 2020, Business Process Management Forum. BPM Forum 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 392), P229, DOI 10.1007/978-3-030-58638-6_14
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   Van der Aalst Wil M. P., 2022, Process Mining Handbook. Lecture Notes in Business Information Processing (448), P37, DOI 10.1007/978-3-031-08848-3_2
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2019, PROCEDIA COMPUT SCI, V164, P321, DOI 10.1016/j.procs.2019.12.189
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   van Eck ML, 2015, LECT NOTES COMPUT SC, V9097, P297, DOI 10.1007/978-3-319-19069-3_19
   Van Houdt G, 2022, LECT NOTES BUS INF P, V433, P73, DOI 10.1007/978-3-030-98581-3_6
   vander Aalst W.M., 2022, Process Mining Handbook
   Vidgen R, 2017, EUR J OPER RES, V261, P626, DOI 10.1016/j.ejor.2017.02.023
   Volzer H., 2023, IN PRESS
   vom Brocke J, 2021, BUS INFORM SYST ENG+, V63, P483, DOI 10.1007/s12599-021-00718-8
   Wongsuphasawat K, 2019, Arxiv, DOI arXiv:1911.00568
   Zerbato Francesca, 2023, Advanced Information Systems Engineering: 35th International Conference, CAiSE 2023, Proceedings. Lecture Notes in Computer Science (13901), P454, DOI 10.1007/978-3-031-34560-9_27
   Zerbato F, 2022, LECT NOTES COMPUT SC, V13585, P165, DOI 10.1007/978-3-031-17604-3_10
   Zerbato F, 2022, LECT NOTES COMPUT SC, V13420, P268, DOI 10.1007/978-3-031-16103-2_19
   Zerbato F, 2021, LECT NOTES BUS INF P, V427, P145, DOI 10.1007/978-3-030-85440-9_9
   Zimmermann L., 2023, Zenodo, DOI [10.5281/zenodo.8275857, DOI 10.5281/ZENODO.8275857]
   Zimmermann L, 2022, LECT NOTES BUS INF P, V450, P3, DOI 10.1007/978-3-031-07475-2_1
NR 57
TC 0
Z9 0
U1 6
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD 2023 NOV 17
PY 2023
DI 10.1007/s10270-023-01134-0
EA NOV 2023
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y6OW7
UT WOS:001106444200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Babaei, M
   Dingel, J
AF Babaei, Majid
   Dingel, Juergen
TI Efficient regression testing of distributed real-time reactive systems
   in the context of model-driven development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDD; Distributed systems; Regression testing
ID SELECTION; CONTROLLABILITY; OBSERVABILITY
AB Regression testing is indispensable, especially for real-time distributed systems to ensure that existing functionalities are not affected by changes. Despite recent advances, regression testing for distributed systems remains challenging and extremely costly. Existing techniques often require running a failing system several times before detecting a regression. As a result, conventional approaches that use re-execution without considering the inherent non-determinism of distributed systems, and providing no (or low) control over execution are inadequate in many ways. In this paper, we present MRegTest, a replay-based regression testing framework in the context of model-driven development to facilitate deterministic replay of traces for detecting regressions while offering sufficient control for the purpose of testing over the execution of the changed system. The experimental results show that compared to the traditional approaches that annotate traces with timestamps and variable values MRegTest detects almost all regressions while reducing the size of the trace significantly and incurring similar runtime overhead.
C1 [Babaei, Majid] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Dingel, Juergen] Queens Univ, Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Babaei, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM babaei@cs.queensu.ca; dingel@cs.queensu.ca
RI Babaei, Majid/G-1669-2013
OI Babaei, Majid/0000-0002-1394-4030
FU Zeligsoft Ltd.; Malina Software Corp.; Cmind Inc.; Natural Sciences and
   Engineering Research Council of Canada (NSERC)
FX This work has been supported by Zeligsoft Ltd., Malina Software Corp.,
   Cmind Inc., and the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR Ahmadi R., 2019, TESTING MODELS REAC
   Almasri N, 2018, IEEE INT CONF AUTOM, P952, DOI 10.1145/3238147.3241984
   [Anonymous], 2021, QF TEST WEBS
   [Anonymous], 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491447, DOI 10.1145/2491411.2491447]
   [Anonymous], 2021, ATM UML RT MODE
   Aumayr D., 2018, SER MANLANG 18
   Babaei M., 2021, MREGTEST REPOSITORY
   Babaei M., 2020, MODELS 20, P285
   Babaei M., 2020, MODELS 20
   Babaei M., 2021, THESIS KINGSTON ONTA
   Bagherzadeh M., 2019, MODEL LEVEL DEBUGGI
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   Balasubramanian J, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P118, DOI 10.1109/RTAS.2009.36
   Bianchi FA, 2018, IEEE T SOFTWARE ENG, V44, P747, DOI 10.1109/TSE.2017.2707089
   Biswas S., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1
   Biswas S, 2013, ACM T EMBED COMPUT S, V13, DOI 10.1145/2539036.2539043
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Boer F.D., 2017, PROC IEEE ACM INT C, V50
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Bykov S., 2011, SER SOCC
   Cacciari L, 1999, INFORM SOFTWARE TECH, V41, P767, DOI 10.1016/S0950-5849(99)00036-1
   Chen Yanping., 2007, Fourth international workshop on Software quality assurance: in conjunction with the 6th ESEC/FSE joint meeting, P62, DOI DOI 10.1145/1295074.1295086
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   Chen YJ, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2790077
   Dunfield J., 2018, LECT NOTES CISC
   Eclipse Foundation, 2020, ECL ETRICE REAL TIM
   Ekelund ED, 2015, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSM.2015.7332496
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Esmaeilsabzali S, 2010, REQUIR ENG, V15, P235, DOI 10.1007/s00766-010-0102-z
   Foundation E., 2016, ECL PAP REAL TIM PAP
   Gabrielova E., 2017, P 18 DOCT S 18 INT M, P9, DOI [DOI 10.1145/3152688.3152692, 10.1145/3152688.3152692onSoftwareTesting,VerificationandValidationWorkshops(ICSTW).IEEE,2020, DOI 10.1145/3152688.3152692ONSOFTWARETESTING,VERIFICATIONANDVALIDATIONWORKSHOPS(ICSTW).IEEE,2020]
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1079, DOI 10.1145/2950290.2983942
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   HCL, 2020, REALTIME SOFTW TOOL
   Hierons RM, 2016, LECT NOTES COMPUT SC, V9976, P89, DOI 10.1007/978-3-319-47443-4_6
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Honfi D, 2017, LECT NOTES COMPUT SC, V10567, P119, DOI 10.1007/978-3-319-68015-6_8
   IBM, 2016, IBM RSARTE
   Iqbal MuhammadZohaib Z., 2007, Proceedings of the 3rd international workshop on Advances in model-based testing, P44
   Jahed Karim, 2019, PAPYRUS RT DISTRIBUT
   Joshi P., 2013, SER TRIOS
   Kahani N, 2017, IEEE ACM INT WORKS M, P12, DOI 10.1109/MiSE.2017.4
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Kresse A., 2016, A TEST, P52, DOI DOI 10.1145/2994291.2994299
   Lanese I, 2019, LECT NOTES COMPUT SC, V11535, P167, DOI 10.1007/978-3-030-21759-4_10
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Legunsen O, 2017, IEEE INT CONF AUTOM, P949, DOI 10.1109/ASE.2017.8115710
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Leshed G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1719
   Lima B, 2019, IEEE INT CONF SOFTW, P486, DOI 10.1109/ICST.2019.00060
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Magee J., 1999, STATE MODELS JAVA PR
   McCaffrey C., 2015, QCON LONDON
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Milka G., 2018, CORR
   Milner R, 1982, CALCULUS COMMUNICATI
   Orso A., 2004, Software Engineering Notes, V29, P241, DOI 10.1145/1041685.1029928
   Pal D., 2018, DATABASES INFORM SYS, P142
   Pal D, 2019, IFAC PAPERSONLINE, V52, P1091, DOI 10.1016/j.ifacol.2019.11.341
   Panigrahi CR, 2010, COMM COM INF SC, V54, P380
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Parr T., 2017, ANTLR: ANother Tool for Language Recogntion
   Posse E, 2016, SOFTW SYST MODEL, V15, P179, DOI 10.1007/s10270-014-0399-z
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 1994, REAL TIME OBJECT ORI, P2
   Shibanai K, 2018, AGERE'18: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON PROGRAMMING BASED ON ACTORS, AGENTS, AND DECENTRALIZED CONTROL, P13, DOI 10.1145/3281366.3281370
   Sigelman Benjamin H., 2010, Dapper, a large-scale distributed systems tracing infrastructure
   Smartbear, 2021, TESTCOMPLETE
   Stivan G., 2015, P OF THE 5 INT WORKS, P57, DOI DOI 10.1145/2824815.2824821
   SWARTOUT W, 1982, COMMUN ACM, V25, P438, DOI 10.1145/358557.358572
   Terragni V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P246, DOI 10.1109/ICSE.2015.45
   The Object Management Group, 2017, UML SUP SPEC
   Tools G.E., 2021, BUILD CLOUD BUILD SY
   Torens Christoph, 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P441, DOI 10.1109/ICSEA.2010.75
   Tveito L, 2020, LECT NOTES COMPUT SC, V12076, P140, DOI 10.1007/978-3-030-45234-6_7
   Ural H, 2003, INFORM PROCESS LETT, V88, P133, DOI 10.1016/S0020-0190(03)00364-8
   von der Beeck M, 2006, LECT NOTES COMPUT SC, V4199, P768
   Ye W, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133, DOI 10.1109/CSMR.2003.1192420
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu TT, 2020, IEEE T SOFTWARE ENG, V46, P405, DOI 10.1109/TSE.2018.2861392
   Yu TT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P48, DOI 10.1145/2568225.2568294
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
   Zech P, 2017, INT J SOFTW TOOLS TE, V19, P115, DOI 10.1007/s10009-015-0408-8
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
NR 91
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2023
VL 22
IS 5
BP 1565
EP 1587
DI 10.1007/s10270-023-01086-5
EA MAR 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S7GT4
UT WOS:000943867500001
DA 2024-07-18
ER

PT J
AU Silva, E
   Fidalgo, R
   Ferro, M
   Franco, N
AF Silva, Edson
   Fidalgo, Robson
   Ferro, Marcio
   Franco, Natalia
TI Visual query languages to design complex queries: a systematic
   literature review
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE Visual query language; Complex query; Conceptual modeling; SQL
ID 2-DIMENSIONAL SPECIFICATION
AB Structured query language (SQL) is a widely used language for accessing both relational and non-relational databases. SQL is the standard form of access in relational databases, while in non-relational databases, SQL is becoming increasingly available and consolidating itself as an access interface for querying data in cluster environments. Despite its declarative syntax, the specification of SQL queries is not a trivial task, even for experts, because some queries demand complex constructs (i.e., subqueries, joins, set operations, conditional expressions, grouping restrictions, and recursion). Visual query languages (VQLs) are an alternative to reduce this complexity. However, although several VQLs have been proposed, they are not widely used in practice. By identifying and analyzing the support provided by VQLs that make it possible to design complex SQL queries, this study collected evidence that helps discover the strengths and weaknesses of each VQL, providing useful feedback for other research initiatives that seek to propose improved VQLs. For this purpose, a systematic literature review was carried out. After analyzing 22 relevant studies and performing 462 inspections, this review points to the need for more expressive VQLs, computer-aided software engineering (CASE) tools available to end users, and more rigorous evaluations to investigate the VQL syntax and semantics.
C1 [Silva, Edson; Fidalgo, Robson; Franco, Natalia] Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
   [Ferro, Marcio] Inst Fed Alagoas, Maceio, AL, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Alagoas (IFAL)
RP Silva, E (corresponding author), Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
EM eas4@cin.ufpe.br; rdnf@cin.ufpe.br; marcio.roberio@ifal.edu.br;
   nmf@cin.ufpe.br
RI Silva, Edson/JKV-5620-2023
OI Silva, Edson/0000-0002-1097-9801
FU FACEPE; Federal Institute of Alagoas (IFAL);  [IBPG-1225-1.03/14]
FX AcknowledgementsThe authors thank to FACEPE (Ref. IBPG-1225-1.03/14),
   and Federal Institute of Alagoas (IFAL) for supporting this work.
CR Abouzied A, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P207
   ACM/IEEE, 2017, INFORM TECHNOLOGY CU
   Amazon, 2021, AM DYN DOC
   Amazon, 2021, MAR SERV DOC
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], iDS
   [Anonymous], 2021, VOLTDB VOLTDB DOC
   Apache, 2021, AP DRILL
   Association for Computing Machinery (ACM) Joint Task Force on Computing Curricula and IEEE Computer Society, 2013, COMP SCI CURR 2013 C
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Bakke E, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1377, DOI 10.1145/2882903.2915210
   Bloesch A. C., 1997, Conceptual Modeling - ER '97. 16th International Conference on Conceptual Modeling. Proceedings, P113
   Borges CR, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P187
   Catarci T, 1997, J VISUAL LANG COMPUT, V8, P215, DOI 10.1006/jvlc.1997.0037
   Catarci T., 1995, DIAGRAMMATIC VS TEXT, P69, DOI [10.1007/978-0-387-34905-3_5, DOI 10.1007/978-0-387-34905-3_5]
   Cerullo C, 2007, DEXA 2007: 18TH INTERNATIONAL CONFERENCE ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P109, DOI 10.1109/DEXA.2007.91
   Chamberlin D., 2009, SQL ENCYCLOPEDIA DAT, P2753, DOI 10.1007/978-0-387-39940-9_1091
   Czejdo B. D., 1993, Proceedings ICCI '93. Fifth International Conference on Computing and Information (Cat. No.93TH0563-7), P433, DOI 10.1109/ICCI.1993.315334
   Darmawikarta, 2016, ORACLE SQL BEGINNERS
   DeMarco, 1979, STRUCTURE ANAL SYSTE
   El-Mahgary S, 2015, J VISUAL LANG COMPUT, V29, P15, DOI 10.1016/j.jvlc.2015.03.001
   Epstein R. G., 1991, Journal of Visual Languages and Computing, V2, P115, DOI 10.1016/S1045-926X(05)80026-6
   Gryz J., 2008, SQL QUERIES CASE EXP, DOI [10.1007/978-3-540-68123-6_38, DOI 10.1007/978-3-540-68123-6_38]
   Halpin T., 1999, Journal of Database Management, V10, P4, DOI 10.4018/jdm.1999100101
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Hvorecky J, 2010, PROCD SOC BEHV, V2, P717, DOI 10.1016/j.sbspro.2010.03.090
   Ioannidis, 1996, ACM COMPUT SURV, V28, P4, DOI [10.1145/242224.242399, DOI 10.1145/242224.242399]
   Jaakkola, 2003, VISUAL SQL HIGH QUAL, DOI [10.1007/978-3-540-39597-3_13, DOI 10.1007/978-3-540-39597-3_13]
   Kawash J., 2004, J COMPUTERS MATH SCI, V23, P169
   Keim D. A., 1992, Proceedings. Visualization '92 (Cat. No.92CH3201-1), P194, DOI 10.1109/VISUAL.1992.235208
   Keramopoulos E, 1997, PROCEEDINGS OF THE THIRD BASQUE INTERNATIONAL WORKSHOP ON INFORMATION TECHNOLOGY - DATA MANAGEMENT SYSTEMS (BIWIT'97), P35, DOI 10.1109/BIWIT.1997.614049
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klug AnthonyC., 1981, Proceedings of the LBL Workshop on Statistical Database Management (SSDBM), P190
   KWAK JC, 1995, MICROPROC MICROPROG, V41, P227, DOI 10.1016/0165-6074(95)00005-9
   Leong Mun-Kew, 1990, Journal of Visual Languages and Computing, V1, P275, DOI 10.1016/S1045-926X(05)80010-2
   Leventidis A, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2303, DOI 10.1145/3318464.3389767
   Lloret-Gazo J, 2016, LECT NOTES COMPUT SC, V9828, P343, DOI 10.1007/978-3-319-44406-2_28
   Maxwell J.A., 2012, QUALITATIVE RES DESI
   Microsoft, 2021, AZ COSM DB
   MOHAN L, 1993, IEEE T KNOWL DATA EN, V5, P843, DOI 10.1109/69.243513
   MongoDB, 2021, MONG CONN SPARK
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Murray NS, 2000, J VISUAL LANG COMPUT, V11, P151, DOI 10.1006/jvlc.1999.0150
   Ramos HB., 1993, INTERFACES DATABASE
   SANTUCCI G, 1993, SOFTWARE PRACT EXPER, V23, P317, DOI 10.1002/spe.4380230307
   Silva E., 2019, BRAZILIAN S COMPUTER, V30, P239
   Sockut G. H., 1993, Data & Knowledge Engineering, V11, P171, DOI 10.1016/0169-023X(93)90004-9
   Song EJ, 2007, COMPUT STAND INTER, V29, P343, DOI 10.1016/j.csi.2006.05.006
   Spark, 2021, SPARK SQL
   StackOverflow, 2019, STACK OV DEV SURV RE
   TAN KP, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P453, DOI 10.1109/CMPSAC.1990.139408
   TANSEL AU, 1989, IEEE T SOFTWARE ENG, V15, P464, DOI 10.1109/32.16597
   Ware C., 2020, INFORM VISUALIZATION
   WHANG KY, 1992, IEEE T SOFTWARE ENG, V18, P216, DOI 10.1109/32.126770
   Zhang G., 1999, Proceedings User Interfaces to Data Intensive Systems, P64, DOI 10.1109/UIDIS.1999.791463
   Zloof MosheM., 1975, Proceedings of the AFIPS National Computer Conference, Anaheim, CA, P431, DOI DOI 10.1147/SJ.164.0324
NR 56
TC 1
Z9 1
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1217
EP 1249
DI 10.1007/s10270-022-01071-4
EA DEC 2022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000902280000001
DA 2024-07-18
ER

PT J
AU Revoredo, K
AF Revoredo, Kate
TI On the use of domain knowledge for process model repair
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process model repair; Process mining; Concept drift; Theory revision
ID THEORY REVISION; CHOICE
AB Process models are important for supporting organizations in documenting, understanding and monitoring their business. When these process models become outdated, they need to be revised to accurately describe the new status quo of the processes in the organization. Process model repair techniques help at automatically revising the existing model from behavior traced in event logs. So far, such techniques have focused on identifying which parts of the model to change and how to change them, but they do not use knowledge from practitioners to inform the revision. As a consequence, fragments of the model may change in a way that defies existing regulations or represents outdated information that was wrongly considered from the event log. This paper uses concepts from theory revision to provide formal foundations for process model repair that exploits domain knowledge. Specifically, it conceptualizes (1) what are unchangeable fragments in the model and (2) the role that various traces in the event log should play when it comes to model repair. A scenario of use is presented that demonstrates the benefits of this conceptualization. The current state of existing process model repair techniques is compared against the proposed concepts. The results show that only two existing techniques partially consider the concepts presented in this paper for model repair.
C1 [Revoredo, Kate] Humboldt Univ, Berlin, Germany.
   [Revoredo, Kate] Vienna Univ Econ & Business WU, Vienna, Austria.
C3 Humboldt University of Berlin; Vienna University of Economics & Business
RP Revoredo, K (corresponding author), Humboldt Univ, Berlin, Germany.; Revoredo, K (corresponding author), Vienna Univ Econ & Business WU, Vienna, Austria.
EM kate.revoredo@hu-berlin.de
RI Revoredo, Kate/S-2881-2018
OI Revoredo, Kate/0000-0001-8914-9132
FU Projekt DEAL;  [27001663];  [95740]
FX Open Access funding enabled and organized by ProjektDEAL.
CR Ackermann L, 2017, LECT NOTES BUS INF P, V281, P61, DOI 10.1007/978-3-319-58457-7_5
   [Anonymous], 2017, INT J PARALLEL PROG, V45, P50
   Armas Cervantes Abel, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P53, DOI 10.1007/978-3-319-69462-7_5
   Armas-Cervantes, 2019, ENCY OFBIG DATA TECH, P5
   Armas-Cervantes A., 2017, BPM DEMOS, V1920, P18
   Bai EJ, 2021, COMPUT INFORM, V40, P446, DOI 10.31577/cai_2021_2_446
   Barriga A., 2020, ACM IEEE INT C MOD D, P24
   Buijs J.C., 2012, OTM CONFEDERATED INT, P305, DOI [DOI 10.1007/978-3-642-33606-5_19, 10.1007/978-3-642-33606-519]
   Carmona J., 2018, CODEX J LOUISIANA AC, P6
   Cattafi M, 2010, STUD COMPUT INTELL, V260, P103, DOI 10.1007/978-3-642-04584-4_5
   Chesani F, 2009, LECT NOTES COMPUT SC, V5460, P278
   Cudre-Mauroux P., 2013, DATA DRIVEN PROCESS, P44
   de Murillas EGL, 2019, SOFTW SYST MODEL, V18, P1209, DOI 10.1007/s10270-018-0664-7
   De Raedt L, 2008, MACH LEARN, V70, P151, DOI 10.1007/s10994-007-5030-x
   Dees Marcus, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P232, DOI 10.1007/978-3-319-69462-7_15
   Dumas M., 2018, FUNDAMENTALS BUSINES, P2
   Fahland D, 2015, INFORM SYST, V47, P220, DOI 10.1016/j.is.2013.12.007
   Fahland D, 2013, INFORM SYST, V38, P585, DOI 10.1016/j.is.2012.07.004
   Fahland D, 2012, LECT NOTES COMPUT SC, V7481, P229, DOI 10.1007/978-3-642-32885-5_19
   Ferilli S., 2020, P IEEE C EV AD INT S, P1, DOI DOI 10.1109/EAIS48028.2020HTTP://DX.DOI.ORG/10.1109/EAIS48028.2020.9122700.9122700
   Francescomarino C.D., 2014, ICSOC, V8831, P53
   Guimaraes V, 2019, MACH LEARN, V108, P1165, DOI 10.1007/s10994-019-05798-y
   He Z., 2019, IEEE ACCESS, V7, P45
   Kalenkova A, 2020, LECT NOTES COMPUT SC, V12152, P280, DOI 10.1007/978-3-030-51831-8_14
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Lars Ackermannund Stefan Sch nig., 2016, Online Proceedings of the BPM Demo Track. CEUR-WS.org, P12
   Martin N, 2022, EXPERT SYST APPL, V191, DOI 10.1016/j.eswa.2021.116274
   Mitsyuk AA, 2017, AUTOM CONTROL COMPUT, V51, P709, DOI 10.3103/S0146411617070306
   Mitsyuk A.A., 2017, AIST, V1975, P47
   Mitsyuk AA, 2017, 2017 IVANNIKOV ISPRAS OPEN CONFERENCE (ISPRAS), P6, DOI 10.1109/ISPRAS.2017.00008
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Muggleton S, 2010, LECT NOTES ARTIF INT, V5989, P123, DOI 10.1007/978-3-642-13840-9_12
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Polyvyanyy A., 2017, ACM T SOFTW ENGMETHO, V25, P33
   Qi H., 2018, ENTERP INF SYST-UK, V12, P46
   Revoredo K, 2021, LECT NOTES BUS INF P, V432, P184, DOI 10.1007/978-3-030-91279-6_13
   Rogge-Solti A, 2016, LECT NOTES COMPUT SC, V9850, P179, DOI 10.1007/978-3-319-45348-4_11
   Ropero M., 2013, BMMDSEMMSAD, V147, P52
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schuster D, 2021, LECT NOTES COMPUT SC, V13011, P14, DOI 10.1007/978-3-030-89022-3_2
   Sun Y., REPAIR WORKFLOW MODE
   Taylor C, 1997, LECT NOTES ARTIF INT, V1224, P353
   Teng YX, 2020, COMPUT INFORM, V39, P264, DOI 10.31577/cai_2020_1-2_264
   Teng YX, 2019, IEEE ACCESS, V7, P76628, DOI 10.1109/ACCESS.2019.2921884
   Teng YX, 2019, IEEE ACCESS, V7, P8266, DOI 10.1109/ACCESS.2018.2890070
   van der Aalst W.M.P., 2016, PROCESS MINING DATA, P4
   van der Aalst WMP, 2013, DISTRIB PARALLEL DAT, V31, P471, DOI 10.1007/s10619-013-7127-5
   Sato DMV, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3472752
   Wrobel S., 1996, ADV INDUCTIVE LOGIC, P8
   Xu YH, 2019, IEEE ACCESS, V7, P172387, DOI 10.1109/ACCESS.2019.2956588
   Xu YH, 2019, IEEE ACCESS, V7, P18531, DOI 10.1109/ACCESS.2019.2896079
   Xu YH, 2018, IEEE ACCESS, V6, P56340, DOI 10.1109/ACCESS.2018.2872640
   Zhang XZ, 2018, IEEE ACCESS, V6, P53796, DOI 10.1109/ACCESS.2018.2870727
   Zhang XZ, 2018, IEEE ACCESS, V6, P29926, DOI 10.1109/ACCESS.2018.2843137
   Zheng WT, 2019, IEEE ACCESS, V7, P105132, DOI 10.1109/ACCESS.2019.2932260
   Zheng WT, 2019, IEEE ACCESS, V7, P13106, DOI 10.1109/ACCESS.2019.2893327
NR 56
TC 1
Z9 1
U1 9
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1099
EP 1111
DI 10.1007/s10270-022-01067-0
EA DEC 2022
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000895891600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Compagnucci, I
   Corradini, F
   Fornari, F
   Polini, A
   Re, B
   Tiezzi, F
AF Compagnucci, Ivan
   Corradini, Flavio
   Fornari, Fabrizio
   Polini, Andrea
   Re, Barbara
   Tiezzi, Francesco
TI A systematic literature review on IoT-aware business process modeling
   views, requirements and notations
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE IoT-aware business process; IoT; Business process management; Modeling
   notation
ID THINGS; BPMN; INTERNET; SENSOR; ARCHITECTURE; EXECUTION; BEHAVIOR; UBPMN
AB The Internet of things has been adopted in several sectors both influencing how people work and enhancing organizations' business processes. This resulted in the rise of relevant research topics such as IoT-aware business processes. The modeling of these processes makes it possible to better understand working scenarios and to support the adoption of model-driven development approaches for IoT-aware and process-oriented software systems. Since much research has been performed on this topic, a better awareness of the current status is needed. This paper reports a systematic literature review to develop a map on modeling notations for IoT-aware business processes. The survey mainly adopts an academic point of view, resulting in the detailed analysis of 84 research works from the leading computer science digital libraries. The output of the review is in the form of schemes and reflections. In particular, our research aims to shed light on (1) the relevant modeling views referring to different types of IoT-aware business processes; (2) the IoT requirements supported by the modeling notations; and (3) the modeling notations proposed and/or adopted to model IoT-aware business processes. Finally, our research work highlights possible future research lines needing further investigations.
C1 [Compagnucci, Ivan; Corradini, Flavio; Fornari, Fabrizio; Polini, Andrea; Re, Barbara] Univ Camerino, Sch Sci & Technol, Comp Sci Dept, Via Madonna Carceri 7, I-62032 Camerino, Italy.
   [Tiezzi, Francesco] Univ Firenze, Applicaz, Informat, Dipartimento Stat, Viale Morgagni 65, I-50134 Florence, Italy.
C3 University of Camerino; University of Florence
RP Fornari, F (corresponding author), Univ Camerino, Sch Sci & Technol, Comp Sci Dept, Via Madonna Carceri 7, I-62032 Camerino, Italy.
EM ivan.compagnucci@unicam.it; flavio.corradini@unicam.it;
   fabrizio.fornari@unicam.it; andrea.polini@unicam.it;
   barbara.re@unicam.it; francesco.tiezzi@unifi.it
RI ; Fornari, Fabrizio/D-5656-2019
OI TIEZZI, Francesco/0000-0003-4740-7521; Fornari,
   Fabrizio/0000-0002-3620-1723; Compagnucci, Ivan/0000-0002-1991-0579; Re,
   Barbara/0000-0001-5374-2364
CR Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2020, Cisco Annual Internet Report (2018-2023) White Paper
   [Anonymous], 2011, WEB THINGS
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Appel S, 2014, INFORM SYST, V46, P140, DOI 10.1016/j.is.2014.04.002
   Ardito Carmelo, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P118, DOI 10.1007/978-3-030-64266-2_7
   Asghari P, 2019, COMPUT NETW, V148, P241, DOI 10.1016/j.comnet.2018.12.008
   Ashton K., 2009, RFID J, V22, P97
   Baresi L, 2016, LECT NOTES BUS INF P, V256, P389, DOI 10.1007/978-3-319-42887-1_32
   Beverungen D, 2021, BUS INFORM SYST ENG+, V63, P145, DOI 10.1007/s12599-020-00646-z
   Bocciarelli P, 2017, IEEE INT C NETW SENS, P599, DOI 10.1109/ICNSC.2017.8000159
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brouns N., 2018, ARXIV
   Burattin A., 2016, BPM (Demos), P1
   Burns M., 2019, Cyber-Physical Systems and Internet of Things, DOI [10.6028/NIST.SP.1900-202, DOI 10.6028/NIST.SP.1900-202]
   Camarinha-Matos LM, 2013, IFIP ADV INF COMM TE, V408, P3
   Caracas A., 2012, 2012 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P320, DOI 10.1109/PerComW.2012.6197503
   Caracas A., 2011, 2011 INT C DISTRIBUT, DOI [10.1109/DCOSS.2011.5982159, DOI 10.1109/DCOSS.2011.5982159]
   Caracas A, 2011, LECT NOTES BUS INF P, V95, P16
   Casati F, 2012, PROC INT CONF SOFTW, P1357, DOI 10.1109/ICSE.2012.6227080
   Chang C, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3012000
   Cheng YY, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19010111
   Cheng YY, 2018, MOB INF SYST, V2018, DOI 10.1155/2018/9174568
   Cheng YY, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P323, DOI 10.1109/ICWS.2018.00052
   Cherrier S, 2018, LECT NOTES BUS INF P, V308, P310, DOI 10.1007/978-3-319-74030-0_23
   Chiu HH, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P783, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.115
   Cimino MGCA, 2017, INFORM TECHNOL MANAG, V18, P223, DOI 10.1007/s10799-016-0266-4
   Cognini R, 2018, INFORM SYST FRONT, V20, P343, DOI 10.1007/s10796-016-9678-2
   Compagnucci Ivan, 2020, Business Process Management Workshops. BPM 2020 International Workshops. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 397), P108, DOI 10.1007/978-3-030-66498-5_9
   Compagnucci I, 2021, LECT NOTES BUS INF P, V430, P84, DOI 10.1007/978-3-030-87205-2_6
   Corallo A, 2020, KNOWL PROCESS MANAG, V27, P150, DOI 10.1002/kpm.1634
   Corradini F, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111007
   Corradini F, 2017, IEEE INT CONF AUTOM, P217, DOI 10.1109/ASE.2017.8115635
   D?rndorfer J., 2020, INFORM SYST FRONT, V24, P1
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   Domingos D, 2019, PROCEDIA COMPUT SCI, V164, P313, DOI 10.1016/j.procs.2019.12.188
   Domingos D, 2017, IJISPM-INT J INF SYS, V5, P39, DOI 10.12821/ijispm050403
   Domingos D, 2015, L N INST COMP SCI SO, V143, P110, DOI 10.1007/978-3-319-17136-4_12
   Domingos D, 2014, J UNIVERS COMPUT SCI, V20, P1109
   Elhami E., 2020, INT C OMNILAYER INTE, P1
   Fahmideh M, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.06.005
   Fattouch Najla, 2020, 2020 IEEE 29th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE), P100, DOI 10.1109/WETICE49692.2020.00027
   Fernandez D. R., 2017, EMPOWERMENT PATIENTS, V17, P22
   Ferreira P, 2014, PROC TECH, V16, P824, DOI 10.1016/j.protcy.2014.10.032
   Fleischmann A., 2012, Subject-Oriented Business Process Management
   Forbrig P., 2017, P 9 C SUBJ OR BPM, P8
   Fracca C., 2021, CEUR WORKSHOP PROC, V2973, P97
   Friedow C, 2018, LECT NOTES BUS INF P, V316, P265, DOI 10.1007/978-3-319-92898-2_22
   Gao F, 2011, IEEE ENABL TECHNOL, P297, DOI 10.1109/WETICE.2011.50
   Glombitza N, 2011, LECT NOTES COMPUT SC, V6811, P294, DOI 10.1007/978-3-642-22450-8_23
   Gonçalves R, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12070114
   Graja I, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.4850
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Grefen P, 2019, LECT NOTES BUS INF P, V350, P120, DOI 10.1007/978-3-030-21297-1_11
   Hanchuan Xu, 2012, 2012 International Joint Conference on Service Sciences (IJCSS 2012), P12, DOI 10.1109/IJCSS.2012.15
   Hasic Faruk, 2020, SAC '20: Proceedings of the 35th Annual ACM Symposium on Applied Computing, P53, DOI 10.1145/3341105.3373881
   Hasic F, 2019, INT CONF RES CHAL, P159, DOI 10.1109/rcis.2019.8876998
   Hollingsworth D., 1995, The Workflow Management Coalition Specification, P1
   Hou SL, 2016, P IEEE I C SERV COMP, P657, DOI 10.1109/SCC.2016.91
   Houhou S, 2022, INFORM SYST, V104, DOI 10.1016/j.is.2021.101765
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Janiesch C, 2020, IEEE SYST MAN CYBERN, V6, P34, DOI 10.1109/MSMC.2020.3003135
   Kim M, 2017, INT CONF ADV COMMUN, P163, DOI 10.23919/ICACT.2017.7890077
   Kim SD, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P289, DOI 10.1109/DASC.2014.58
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kozel T, 2010, EUR CONF SYST, P307
   Kozma D, 2019, IEEE INT C EMERG, P385, DOI [10.1109/etfa.2019.8869501, 10.1109/ETFA.2019.8869501]
   Lee WT, 2016, INT J DISTRIB SENS N, V12, DOI 10.1177/1550147716676556
   Leotta F, 2019, LECT NOTES COMPUT SC, V11675, P16, DOI 10.1007/978-3-030-26619-6_3
   Maamar Z., 2020, P 12 INT C MAN DIG E, P1, DOI [10.1145/3415958.3433085, DOI 10.1145/3415958.3433085]
   Mandal Sankalita, 2017, On the Move to Meaningful Internet Systems: OTM 2017 Conferences. Confederated International Conferences CoopIS, C&TC and ODBASE 2017. Proceedings: LNCS 10573, P194, DOI 10.1007/978-3-319-69462-7_13
   Manrique JA, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P252, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.66
   Marjani M, 2017, IEEE ACCESS, V5, P5247, DOI 10.1109/ACCESS.2017.2689040
   Martinho R, 2014, PROC TECH, V16, P737, DOI 10.1016/j.protcy.2014.10.023
   Martins F, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS 2019), VOL 2, P516, DOI 10.5220/0007766405160524
   Martins F, 2020, LECT NOTES BUS INF P, V378, P498, DOI 10.1007/978-3-030-40783-4_24
   Martins F, 2017, PROCEDIA COMPUT SCI, V121, P1014, DOI 10.1016/j.procs.2017.11.131
   Mass J., 2017, INTERNET THINGS, P269
   Mass J, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110587
   Meroni G, 2018, INFORM SYST, V73, P61, DOI 10.1016/j.is.2017.12.009
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Meyer S., 2012, FP7IOTA EC VDI VDE I
   Meyer S, 2015, LECT NOTES BUS INF P, V215, P285, DOI 10.1007/978-3-319-19243-7_27
   Mottola L, 2019, IEEE T SOFTWARE ENG, V45, P576, DOI 10.1109/TSE.2017.2787585
   Neumann J, 2019, INT J COMPUT ASS RAD, V14, P1403, DOI 10.1007/s11548-019-01982-6
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Panfilenko Dmitri., 2016, 2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA), P1
   Park M, 2018, INT CONF ADV COMMUN, P728, DOI 10.23919/ICACT.2018.8323900
   Petrasch R., 2015, P 2 MAN INN TECHN IN, P168
   Petrasch R, 2016, INT JOINT CONF COMP, P275
   Pufahl L, 2018, LECT NOTES BUS INF P, V308, P782, DOI 10.1007/978-3-319-74030-0_62
   Ramos-Merino M, 2019, SOFTW SYST MODEL, V18, P2399, DOI 10.1007/s10270-018-0669-2
   Ruppen A, 2013, LECT NOTES BUS INF P, V153, P42
   Sang KS, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P2344, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.346
   Schönig S, 2018, LECT NOTES BUS INF P, V318, P19, DOI 10.1007/978-3-319-91704-7_2
   Schönig S, 2020, SOFTW SYST MODEL, V19, P1443, DOI 10.1007/s10270-020-00785-7
   Schonig S., 2018, SIMULTECH, P307
   Seiger R, 2019, SOFTW SYST MODEL, V18, P1117, DOI 10.1007/s10270-017-0639-0
   Seiger R, 2016, LECT NOTES BUS INF P, V248, P3, DOI 10.1007/978-3-319-39429-9_1
   Seiger R, 2015, J COMPUT SCI-NETH, V10, P137, DOI 10.1016/j.jocs.2014.07.001
   Serral E, 2015, EXPERT SYST APPL, V42, P9307, DOI 10.1016/j.eswa.2015.08.004
   Song RJ, 2019, CONF BUS INFORM, P541, DOI 10.1109/CBI.2019.00069
   Song RJ, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2018), P223, DOI 10.1145/3180374.3181341
   Sperner K, 2011, LECT NOTES BUS INF P, V95, P166
   Sungur C.T., 2013, IEEE 15 C BUS INF, P109
   Suri K., 2017, ENABLING TECHNOLOGIE, P214
   Suri K, 2018, LECT NOTES COMPUT SC, V10969, P119, DOI 10.1007/978-3-319-94376-3_8
   Teixeira S, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110494
   Teixeira S, 2017, J SYST SOFTWARE, V132, P50, DOI 10.1016/j.jss.2017.06.024
   Tim d'Hondt., 2019, Proceedings of the 9th International Conference on the Internet of Things, P1
   Torres V, 2020, CONF BUS INFORM, P221, DOI 10.1109/CBI49978.2020.00031
   Tranquillini S, 2012, LECT NOTES COMPUT SC, V7481, P134, DOI 10.1007/978-3-642-32885-5_10
   Venkatakumar H., 2019, SUBJECT ORIENTED BUS, P1
   Webster J, 2002, MIS QUART, V26, pXIII
   Yousfi A, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3298986
   Yousfi A, 2018, IEEE T IND INFORM, V14, P3358, DOI 10.1109/TII.2017.2777847
   Yousfi A, 2016, IEEE T SERV COMPUT, V9, P621, DOI 10.1109/TSC.2015.2406694
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
   Yu-Ting Chen, 2017, 2017 International Conference on Applied System Innovation (ICASI). Proceedings, P1797, DOI 10.1109/ICASI.2017.7988292
   Zareen S, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10144981
   Zhang X, 2012, IEEE SYM PARA DISTR, P2336, DOI 10.1109/IPDPSW.2012.287
NR 121
TC 9
Z9 9
U1 3
U2 20
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2023
VL 22
IS 3
BP 969
EP 1004
DI 10.1007/s10270-022-01049-2
EA OCT 2022
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8XN3
UT WOS:000875585700001
DA 2024-07-18
ER

PT J
AU Kautz, O
AF Kautz, Oliver
TI The complexities of the satisfiability checking problems of feature
   diagram sublanguages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Feature diagram; Feature model; Satisfiability; Analysis; Semantics;
   Complexity; NP-complete
AB It is well-known that the satisfiability problem of feature diagrams (FDs) is computationally hard. This paper examines the complexities of the satisfiability problems of sixteen FD sublanguages, i.e., languages that only permit a subset of the syntactic modeling elements of general FDs. Previous work neglected a detailed examination of the complexities of the satisfiability problems of FD sublanguages, although results in this area could lead to the development of efficient satisfiability checking procedures for the FDs of specific sublanguages. This paper contributes to fill this gap by analyzing the complexities of the satisfiability problems of sixteen FD sublanguages that differ in whether they allow or-groups, xor-groups, excludes constraints, and requires constraints. The results of this paper show that the satisfiability problem is NP-complete for eight of these sublanguages, is solvable in linear time for two of these sublanguages, and is trivial for the remaining six sublanguages in the sense that every FD of these sublanguages is satisfiable. The results are extended to feature model sublanguages with complex cross-tree constraints by extending FD sublanguages that have satisfiability problems, which are solvable in polynomial time. The feature model sublanguages also have satisfiability problems that are solvable in polynomial time.
C1 [Kautz, Oliver] RTL Deutschland, CBC Cologne Broadcasting Ctr GmbH, Cologne, Germany.
RP Kautz, O (corresponding author), RTL Deutschland, CBC Cologne Broadcasting Ctr GmbH, Cologne, Germany.
EM oliver.kautz@rtl.de
CR Acher Mathieu, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P629, DOI 10.1007/978-3-642-31095-9_41
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Artale A, 2010, LECT NOTES COMPUT SC, V6412, P317, DOI 10.1007/978-3-642-16373-9_23
   ASPVALL B, 1979, INFORM PROCESS LETT, V8, P121, DOI 10.1016/0020-0190(79)90002-4
   Balaban M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491518
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bontemps Y, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P58
   Butting A, 2019, J SYST SOFTWARE, V149, P437, DOI 10.1016/j.jss.2018.12.016
   Butting A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P145, DOI 10.1109/ICSA.2017.34
   Calvanese D., 1994, Proceedings. The 10th International Conference Data Engineering (Cat. No.94CH3383-7), P204, DOI 10.1109/ICDE.1994.283032
   Calvanese D, 1999, J ARTIF INTELL RES, V11, P199, DOI 10.1613/jair.548
   Clements P., 2007, Software Product Lines: Practices and Patterns
   Cook S. A., 1971, P 3 ANN ACM S THEOR, P151, DOI [10.1145/800157.805047, DOI 10.1145/800157.805047]
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Drave I., 2019, P 23 INT SYST SOFTW, P245
   Drave I, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P272, DOI 10.5220/0007351902720280
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Galindo Jose A, 2016, P INT SYST SOFTW PRO, P74
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Kang K. C., 1990, Technical Report
   Karp Richard M, 1972, COMPLEXITY COMPUTER, P85, DOI DOI 10.1007/978-1-4684-2001-2_9
   Kautz O., 2018, P MODELS 2018 WORKSH
   Kautz O, 2017, AIB201706 RWTH AACH
   Kautz O., 2021, AACHENER INFORMATIK, V46
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Maoz S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P24, DOI 10.1109/MODELS.2015.7338232
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P230, DOI 10.1007/978-3-642-22655-7_12
   Mendonca M., 2009, THESIS U WATERLOO
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rumpe Bernhard, 2016, Modeling with UML: Language, Concepts, Methods
   Schaefer Thomas J, 1978, P 10 ANN ACM S THEOR, P216, DOI DOI 10.1145/800133.804350
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Tzoref-Brill R, 2017, PROC INT CONF SOFTW, P621, DOI 10.1109/ICSE.2017.63
NR 42
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2023
VL 22
IS 4
BP 1113
EP 1129
DI 10.1007/s10270-022-01048-3
EA OCT 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O2ZF2
UT WOS:000865936900001
DA 2024-07-18
ER

PT J
AU Kühne, T
AF Kuehne, Thomas
TI Multi-dimensional multi-level modeling
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Multi-level modeling; Level; well-formedness; Sanity-checking;
   Ontological classification; Multi-dimensional
AB The growth of multi-level modeling has resulted in an increase of level-organization alternatives which significantly differ from each other with respect to their underlying foundations and the well-formedness rules they enforce. Alternatives substantially diverge with respect to how level boundaries should govern instance-of relationships, what modeling mechanisms they employ, and what modeling principles they establish. In this article, I analyze how a number of multi-level modeling approaches deal with certain advanced modeling scenarios. In particular, I identify linear domain metamodeling, i.e., the requirement that all domain-induced instance-of relationships align with a single global level-hierarchy, as a source of accidental complexity. I propose a novel multi-dimensional multi-level modeling approach based on the notion of orthogonal ontological classification that supports modeling of domain scenarios with minimal complexity while supporting separation of concerns and sanity-checking to avoid inconsistent modeling choices.
C1 [Kuehne, Thomas] Victoria Univ Wellington, Wellington, New Zealand.
C3 Victoria University Wellington
RP Kühne, T (corresponding author), Victoria Univ Wellington, Wellington, New Zealand.
EM thomas.kuehne@ecs.vuw.ac.nz
RI Kühne, Thomas/E-8867-2016
OI Kühne, Thomas/0000-0002-7674-2209
CR Almeida J.P.A., 2017, LNCS, V650
   Almeida J.P.A., 2018, DAGSTUHL REPORTS, V7, DOI 10.4230/DagRep.7.12.18
   Alvarez J., 2001, WORKSH TRANSF UML WT
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   Atkinson C., 2012, P MOD WIZ 12
   Atkinson C., 2014, CEUR WORKSH P MULTI, V1286, P53
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2016, LECT NOTES COMPUT SC, V9764, P83, DOI 10.1007/978-3-319-42061-5_6
   Brasileiro F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P975, DOI 10.1145/2872518.2891117
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Clark T., 2014, CEUR WORKSHOP P, P1286
   de Lara J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P147, DOI 10.1145/3276604.3276610
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   Fleurey F, 2008, LECT NOTES COMPUT SC, V5002, P7
   Fonseca CM, 2018, LECT NOTES COMPUT SC, V11157, P409, DOI 10.1007/978-3-030-00847-5_29
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Gitzel R, 2004, 8TH WORLD MULTI-CONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL IV, PROCEEDINGS, P62
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Guarino N., 1992, Data & Knowledge Engineering, V8, P249, DOI 10.1016/0169-023X(92)90025-7
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Henderson-Sellers Brian, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P240, DOI 10.1007/978-3-642-38709-8_16
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Kuhne, 2017, SHAR DOC DAGST SEM
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kuhne T., 2018, P MULTI2018 COLOCATE, V2245, P673
   Lange A., 2018, MODELS WORKSHOPS, P653
   Macias F., 2019, MULTILEVEL MODELLING
   Macías F, 2019, J LOG ALGEBR METHODS, V106, P167, DOI 10.1016/j.jlamp.2018.12.005
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr Bernd., 2009, Proceedings of the Sixth Asia-Pacific Conference on Conceptual Modeling, V96, P107
   OMG, 2011, OMG UN MOD LANG INFR
   Rodríguez A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P88, DOI 10.1109/MODELS-C.2019.00018
   Rossini A, 2014, FORM ASP COMPUT, V26, P1115, DOI 10.1007/s00165-014-0307-x
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
NR 40
TC 5
Z9 5
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2022
VL 21
IS 2
BP 543
EP 559
DI 10.1007/s10270-021-00951-5
EA JAN 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I4GL
UT WOS:000744418900001
DA 2024-07-18
ER

PT J
AU Gilsing, R
   Wilbik, A
   Grefen, P
   Turetken, O
   Ozkan, B
   Adali, OE
   Berkers, F
AF Gilsing, Rick
   Wilbik, Anna
   Grefen, Paul
   Turetken, Oktay
   Ozkan, Baris
   Adali, Onat Ege
   Berkers, Frank
TI Defining business model key performance indicators using intentional
   linguistic summaries
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business model evaluation; Key performance indicators; Linguistic
   summarization; Intentional linguistic summaries; Business model
   innovation
ID INFORMATION-TECHNOLOGY; USER ACCEPTANCE; INNOVATION; FRAMEWORK;
   MANAGEMENT; DESIGN
AB To sustain competitiveness in contemporary, fast-paced markets, organizations increasingly focus on innovating their business models to enhance current value propositions or to explore novel sources of value creation. However, business model innovation is a complex task, characterized by shifting characteristics in terms of uncertainty, data availability and its impact on decision making. To cope with such challenges, business model evaluation is advocated to make sense of novel business models and to support decision making. Key performance indicators (KPIs) are frequently used in business model evaluation to structure the performance assessment of these models and to evaluate their strategic implications, in turn aiding business model decision making. However, given the shifting characteristics of the innovation process, the application and effectiveness of KPIs depend significantly on how such KPIs are defined. The techniques proposed in the existing literature typically generate or use quantitatively oriented KPIs, which are not well-suited for the early phases of the business model innovation process. Therefore, following a design science research methodology, we have developed a novel method for defining business model KPIs, taking into account the characteristics of the innovation process, offering holistic support toward decision making. Building on theory on linguistic summarization, we use a set of structured templates to define qualitative KPIs that are suitable to support early-phase decision making. In addition, we show how these KPIs can be gradually quantified to support later phases of the innovation process. We have evaluated our method by applying it in two real-life business cases, interviewing 13 industry experts to assess its utility.
C1 [Gilsing, Rick; Grefen, Paul; Turetken, Oktay; Ozkan, Baris; Adali, Onat Ege; Berkers, Frank] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Wilbik, Anna] Maastricht Univ, DKE, Maastricht, Netherlands.
   [Grefen, Paul] Atos Digital Transformat Consulting, Eindhoven, Netherlands.
   [Berkers, Frank] TNO, Den Hague, Netherlands.
C3 Eindhoven University of Technology; Maastricht University; Netherlands
   Organization Applied Science Research
RP Gilsing, R (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM r.a.m.gilsing@tue.nl; a.wilbik@maastrichtuniversity.nl;
   p.w.p.j.grefen@tue.nl; o.turetken@tue.nl; b.ozkan@tue.nl;
   o.e.adali@tue.nl; frank.berkers@tno.nl
RI Ozkan, Baris/HOH-5593-2023; Ozkan, Baris/AGQ-5334-2022; Turetken,
   Oktay/AAA-3441-2020; Kacprzyk, Janusz A./M-9574-2014; Turetken,
   Oktay/H-1667-2015
OI Ozkan, Baris/0000-0002-5489-6274; Ozkan, Baris/0000-0002-5489-6274;
   ADALI, Onat Ege/0000-0001-7644-6605; Turetken,
   Oktay/0000-0003-3798-0439; Gilsing, Rick/0000-0002-9012-6007; Wilbik,
   Anna/0000-0002-1989-0301
CR Adali O. Ege, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P227, DOI 10.1007/978-3-030-49418-6_15
   Al-Debei MM, 2010, EUR J INFORM SYST, V19, P359, DOI 10.1057/ejis.2010.21
   Amit R, 2012, MIT SLOAN MANAGE REV, V53, P41
   Anderson D, 2009, COMPUT VIS IMAGE UND, V113, P80, DOI 10.1016/j.cviu.2008.07.006
   Berends H, 2016, STRATEG ORGAN, V14, P181, DOI 10.1177/1476127016632758
   Berkers F., 2020, WORK C VIRT ENT PRO, P47
   Brea-Solís H, 2015, STRATEG ENTREP J, V9, P12, DOI 10.1002/sej.1190
   Bucherer E, 2012, CREAT INNOV MANAG, V21, P183, DOI 10.1111/j.1467-8691.2012.00637.x
   Burkhart T., 2011, 32 INT C INF SYST IC
   Camarinha-Matos L, 2005, J INTELL MANUF, V16, P439, DOI 10.1007/s10845-005-1656-3
   Castillo-Ortega RM, 2011, J MULT-VALUED LOG S, V17, P157
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Díaz-Díaz R, 2017, ENERGIES, V10, DOI 10.3390/en10030262
   Dijkman R, 2017, INFORM SYST, V67, P114, DOI 10.1016/j.is.2017.03.009
   Foss NJ, 2017, J MANAGE, V43, P200, DOI 10.1177/0149206316675927
   Frishammar J, 2011, IEEE T ENG MANAGE, V58, P551, DOI 10.1109/TEM.2010.2095017
   Gebauer H., 2005, European Management Journal, V23, P14, DOI 10.1016/j.emj.2004.12.006
   Gilsing Rick, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P428, DOI 10.1007/978-3-030-49418-6_29
   Gilsing R., 2020, EUR C INF SYST ECIS
   Gilsing R., 2018, INT C INF SYST ICIS
   Gilsing R., 2020, WORK C VIRT ENT PRO
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Grefen P., 2015, SERVICE DOMINANT BUS
   Grefen P, 2015, IFIP ADV INF COMM TE, V463, P100, DOI 10.1007/978-3-319-24141-8_9
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Heikkilä M, 2016, INF SYST E-BUS MANAG, V14, P337, DOI 10.1007/s10257-015-0286-3
   Jain AK, 2015, PHILOS T R SOC B, V370, DOI 10.1098/rstb.2014.0254
   Kacprzyk J, 2008, FUZZY SET SYST, V159, P1485, DOI 10.1016/j.fss.2008.01.025
   Kacprzyk J, 2005, INFORM SCIENCES, V173, P281, DOI 10.1016/j.ins.2005.03.002
   Kacprzyk J., 2000, International Journal of Applied Mathematics and Computer Science, V10, P813
   Kacprzyk J, 2000, STUD CLASS DATA ANAL, P153
   Kacprzyk J, 2010, INT J INTELL SYST, V25, P411, DOI 10.1002/int.20405
   Kaplan RS, 1996, HARVARD BUS REV, V74, P75
   Klir G. J., 1995, Fuzzy Sets and Fuzzy Logic: Theory and Applications
   Kowalkowski C, 2017, IND MARKET MANAG, V60, P82, DOI 10.1016/j.indmarman.2016.10.015
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lindgardt Z., 2009, BUSINESS MODEL INNOV
   Luftenegger E., 2013, PRO VE 2013 P
   Lusch RF, 2011, J SUPPLY CHAIN MANAG, V47, P14, DOI 10.1111/j.1745-493X.2010.03211.x
   Markides C, 2006, J PROD INNOVAT MANAG, V23, P19, DOI 10.1111/j.1540-5885.2005.00177.x
   Massa L., 2014, OXFORD HDB INNOVATIO, P420, DOI DOI 10.1093/OXFORDHB/9780199694945.013.002
   Mate Alejandro, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P282, DOI 10.1007/978-3-642-34002-4_22
   Mateu J., 2019, J BUS MODELS, V7, P25, DOI DOI 10.5278/OJS.JBM.V7I5.3101
   McGrath RG, 2010, LONG RANGE PLANN, V43, P247, DOI 10.1016/j.lrp.2009.07.005
   Moellers T, 2019, ELECTRON MARK, V29, P387, DOI 10.1007/s12525-019-00329-y
   Morris M, 2005, J BUS RES, V58, P726, DOI 10.1016/j.jbusres.2003.11.001
   Moyse G, 2013, 2013 IEEE SYMPOSIUM ON FOUNDATIONS OF COMPUTATIONAL INTELLIGENCE (FOCI), P106, DOI 10.1109/FOCI.2013.6602462
   Negnevitsky M., 2005, Artificial intelligence: a guide to intelligent systems
   Osterle S., 2016, 37 INT C INF SYST DU
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Richardson J, 2008, STRATEG CHANG, V17, P133, DOI 10.1002/jsc.821
   Ros M, 2011, IEEE INT CONF FUZZY, P2080
   Rowley J, 2012, MANAG RES REV, V35, P260, DOI 10.1108/01409171211210154
   Schneckenberg D, 2017, R&D MANAGE, V47, P404, DOI 10.1111/radm.12205
   Schneider S, 2013, INT J INNOV MANAG, V17, DOI 10.1142/S136391961340001X
   Schrauder S, 2018, J PROD INNOVAT MANAG, V35, P410, DOI 10.1111/jpim.12411
   Sharma S, 2010, ELECTRON MARK, V20, P33, DOI 10.1007/s12525-010-0028-9
   Smits G, 2018, IEEE INT CONF FUZZY
   Sosna M, 2010, LONG RANGE PLANN, V43, P383, DOI 10.1016/j.lrp.2010.02.003
   Spieth P, 2014, R&D MANAGE, V44, P237, DOI 10.1111/radm.12071
   Suratno B., 2018, INT S BUS MOD SOFTW
   Szczepaniak PS, 2006, STUD COMPUT INTELL, V23, P221
   Tesch J., 2017, P 25 EUR C INF SYST, P2250, DOI DOI 10.1007/978-3-319-98723-1_4
   Turetken Oktay, 2019, Cooperative Intelligent Transport Systems: Towards high-level automated driving, P63, DOI 10.1049/PBTR025E_ch4
   Turetken O., 2017, EUR C INF SYST ECIS
   Turetken O, 2019, BUS INFORM SYST ENG+, V61, P9, DOI 10.1007/s12599-018-0565-x
   Veit D, 2014, BUS INFORM SYST ENG+, V6, P45, DOI 10.1007/s12599-013-0308-y
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wilbik A., 2020, IEEE INT C FUZZY SYS, P1
   Wilbik A, 2015, IEEE INT FUZZY SYST
   Wilbik A, 2011, IEEE SYS MAN CYBERN, P2595, DOI 10.1109/ICSMC.2011.6084067
   Wirtz B.W., 2018, Journal of Business Models, V6, P40, DOI DOI 10.5278/OJS.JBM.V6I1.2397
   YAGER RR, 1982, INFORM SCIENCES, V28, P69, DOI 10.1016/0020-0255(82)90033-0
   Zadeh L. A., 1978, Fuzzy Sets and Systems, V1, P3, DOI 10.1016/0165-0114(78)90029-5
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zolnowski A, 2014, P ANN HICSS, P718, DOI 10.1109/HICSS.2014.96
   Zott C, 2010, LONG RANGE PLANN, V43, P216, DOI 10.1016/j.lrp.2009.07.004
NR 79
TC 6
Z9 6
U1 3
U2 21
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2021
VL 20
IS 4
BP 965
EP 996
DI 10.1007/s10270-021-00894-x
EA JUN 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UL2LY
UT WOS:000661785400002
PM 34149341
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lano, K
   Kolahdouz-Rahimi, S
AF Lano, K.
   Kolahdouz-Rahimi, S.
TI Implementing QVT-R via semantic interpretation in UML-RSDS
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformations; QVT-Relations; UML-RSDS; Model transformation
   semantics; Model transformation tools
ID MODEL; TRANSFORMATIONS; SPECIFICATION
AB The QVT-Relations (QVT-R) model transformation language is an OMG standard notation for model transformation specification. It is highly declarative and supports (in principle) bidirectional (bx) transformation specification. However, there are many unclear or unsatisfactory aspects to its semantics, which is not precisely defined in the standard. UML-RSDS is an executable subset of UML and OCL. It has a precise mathematical semantics and criteria for ensuring correctness of applications (including model transformations) by construction. There is extensive tool support for verification and for production of 3GL code in multiple languages (Java, C#, C++, C, Swift and Python). In this paper, we define a translation from QVT-R into UML-RSDS, which provides a logically oriented semantics for QVT-R, aligned with the RelToCore mapping semantics in the QVT standard. The translation includes variation points to enable specialised semantics to be selected in particular transformation cases. The translation provides a basis for verification and static analysis of QVT-R specifications and also enables the production of efficient code implementations of QVT-R specifications. We evaluate the approach by applying it to solve benchmark examples of bx.
C1 [Lano, K.; Kolahdouz-Rahimi, S.] Kings Coll London, London, England.
   [Lano, K.] Univ Isfahan, Esfahan, Iran.
   [Kolahdouz-Rahimi, S.] Univ Isfahan, Software Engn Dept, Esfahan, Iran.
C3 University of London; King's College London; University of Isfahan;
   University of Isfahan
RP Lano, K (corresponding author), Kings Coll London, London, England.; Lano, K (corresponding author), Univ Isfahan, Esfahan, Iran.
EM kevin.lano@kcl.ac.uk
CR Anjorin A., 2017, BENCHMARX RELOADED P
   Bradfield J., 2013, LNCS
   Chen Z., 2015, ICMT
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Goldschmidt T., 2011, ENCS
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra E, 2014, SOFTW SYST MODEL, V13, P1447, DOI 10.1007/s10270-012-0292-6
   Hearnden D., 2006, INCREMENTAL MODEL TR
   Hermann F, 2015, SOSYM, V14, P1
   Kolahdouz-Rahimi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110684
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kolovos D., 2008, ICMT
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Kusel A., 2009, ICECCS
   Lano K, 2013, J SYST SOFTWARE, V86, P412, DOI 10.1016/j.jss.2012.09.006
   Lano K., 2020, QVT2UMLRSDS DATASET, DOI [10.5281/zenodo.3951061, DOI 10.5281/ZENODO.3951061]
   LANO K, 1996, B LANGUAGE METHOD
   Lano K., 2016, Agile Model-driven Development with UML-RSDS
   Lano K., 2018, ICMT
   Lano K., 2020, UML RSDS MANUAL
   Lano K., 2020, USING QVT R ANAL COD
   Lano K., 2014, FACS
   Lano K., 2017, OCL 2017 STAF 2017, P317
   Lano K, 2019, IEEE ACCESS, V7, P5222, DOI 10.1109/ACCESS.2018.2889399
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   OMG, 2019, MOF QUER VIEW TRANSF
   OMG, 2014, OBJ CONSTR LANG 2 4
   OMG, 2016, MOF2 Query/View/Transformation (QVT) Specification, V1.3
   Romeikat R., 2008, ICMT
   Samimi-Dehkordi L, 2018, INFORM SOFTWARE TECH, V100, P47, DOI 10.1016/j.infsof.2018.03.011
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Westfechtel B., 2019, CCIS, V1023, P98, DOI DOI 10.1007/978-3
   Westfechtel B, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P39, DOI 10.5220/0006679700390053
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Willink E., 2019, QVTD PLACE COPY TRAN
   Willink E., 2019, MMT QVT DECLARATIVE
   Willink E., 2017, ICMT
NR 39
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2021
VL 20
IS 3
BP 725
EP 766
DI 10.1007/s10270-020-00824-3
EA SEP 2020
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ST2QJ
UT WOS:000572623600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Safdar, SA
   Lu, H
   Yue, T
   Ali, S
   Nie, KM
AF Safdar, Safdar Aqeel
   Lu, Hong
   Yue, Tao
   Ali, Shaukat
   Nie, Kunming
TI A framework for automated multi-stage and multi-step product
   configuration of cyber-physical systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Cyber-physical systems; Product line engineering; Automated
   configuration; Multi-stage and multi-step configuration process;
   Constraint classification; Variability modeling; Real-world case studies
ID VARIABILITY
AB Product line engineering (PLE) has been employed to large-scale cyber-physical systems (CPSs) to provide customization based on users' needs. A PLE methodology can be characterized by its support for capturing and managing the abstractions as commonalities and variabilities and the automation of the configuration process for effective selection and customization of reusable artifacts. The automation of a configuration process heavily relies on the captured abstractions and formally specified constraints using a well-defined modeling methodology. Based on the results of our previous work and a thorough literature review, in this paper, we propose a conceptual framework to support multi-stage and multi-step automated product configuration of CPSs, including a comprehensive classification of constraints and a list of automated functionalities of a CPS configuration solution. Such a framework can serve as a guide for researchers and practitioners to evaluate an existing CPS PLE solution or devise a novel CPS PLE solution. To validate the framework, we conducted three real-world case studies. Results show that the framework fulfills all the requirements of the case studies in terms of capturing and managing variabilities and constraints. Results of the literature review indicate that the framework covers all the functionalities concerned by the literature, suggesting that the framework is complete for enabling the maximum automation of configuration in CPS PLE.
C1 [Safdar, Safdar Aqeel; Lu, Hong; Yue, Tao; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
   [Safdar, Safdar Aqeel] Univ Oslo, Oslo, Norway.
   [Nie, Kunming] Beijing Aerocim Technol Co Ltd, Beijing, Peoples R China.
C3 University of Oslo
RP Safdar, SA (corresponding author), Simula Res Lab, Oslo, Norway.; Safdar, SA (corresponding author), Univ Oslo, Oslo, Norway.
EM safdar@simula.no; honglu@simula.no; tao@simula.no; shaukat@simula.no;
   kunming401@126.com
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577
FU Zen-Configurator project - Research Council of Norway under the category
   of Young Research Talents of the FRIPO funding scheme [240024/F20];
   Research Council of Norway under the FRIPRO program [286898/F20]
FX Safdar Aqeel Safdar and Hong Lu are supported by the Zen-Configurator
   project funded by the Research Council of Norway (Grant No. 240024/F20)
   under the category of Young Research Talents of the FRIPO funding
   scheme. Tao Yue and Shaukat Ali are supported by the Co-evolver project
   (No. 286898/F20) funded by the Research Council of Norway under the
   FRIPRO program.
CR Abbasi E.K., 2011, 2011 15 INT SOFTW PR
   Abele Andreas., 2010, Proceedings of the 4th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'10), V37, P101
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Alferez Mauricio, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P20, DOI 10.1007/978-3-642-21347-2_3
   Ali S, 2014, INT C SYST AN MOD
   Ali S, 2017, P INT C MOD DRIV ENG
   [Anonymous], 2015, CYBER PHYS SYSTEMS T
   [Anonymous], 2015, OMG Systems Modeling Language
   [Anonymous], 2012, CISCO C SERIES VIDEO
   [Anonymous], 2013, PROC
   [Anonymous], 2005, INT WORKSH SOFTW FAC
   Antkiewicz M, 2004, P OOPSLA WORKSH EC T
   Arrieta A., 2014, JCE
   Arrieta A, 2019, J SYST SOFTWARE, V149, P1, DOI 10.1016/j.jss.2018.09.055
   Bagheri E, 2010, P INT SYST SOFTW PRO
   Batory D, 2005, SPLC
   Becan G, 2015, P INT SYST SOFTW PRO
   Behjati R, 2013, INF SOFTW TECHNOL
   Behjati R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581376
   Bergin T, 2013, SOLV SOC PROB, P7
   Beuche D., 2009, EUR C MOD DRIV ARCH
   Boucher Q, 2010, P 4 INT WORKSH VAR M
   BUHNE S, 2004, P WORKSH AUT REQ ENG
   Chakravarthy V., 2008, P 7 INT C ASP OR SOF
   Chavarriaga J, 2014, INT C MOD DRIV ENG L
   Chavarriaga J, 2013, SECONDARY SUPPORTING
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Classen Andreas., 2009, Proceedings of the 3th International Workshop on Variability Modelling of Software-intensive Systems (VAMOS'09), P51
   Clauss M., 2001, WORKSH DOM SPEC VIS
   Clauss Matthias, 2001, GCSE 2001 YOUNG RES
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2008, P INT SYST SOFTW PRO
   Czarnecki K, 2005, OOPSLA 05
   Czarnecki K., 2006, GPCE, P211
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   De Mendonca M.F, 2007, COLLABORATIVE FEATUR
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Dhungana D, 2007, VAMOS, V2007, P1
   Dhungana D, 2007, INT FED INFO PROC, V244, P238
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Djebbi O., 2006, 4 INT WORKSH COMP EV
   Eichelberger H., 2013, P 17 INT SOFTW PROD
   El-Sharkawy S., 2012, P 16 INT SOFTW PROD
   Gomaa H., 2004, INT C SOFTW REUS
   Hartmann H., 2008, P INT SYST SOFTW PRO
   Haugen O, 2012, COMMON VARIABILITY L
   Haugen O, 2014, LECT NOTES COMPUT SC, V8769, P1, DOI 10.1007/978-3-319-11743-0_1
   Heidenreich F, 2009, P 1 INT WORKSH FEAT
   HEIDER W, 2012, STTT SPECIAL SECTION, V14, P613, DOI DOI 10.1007/S10009
   Heider W, 2012, P 16 INT SOFTW PROD, V1
   Hong L., 2017, ZEN CONFIGURATOR INT
   Hotz L, 2015, P 19 INT C SOFTW PRO
   Hubaux A, 2012, FEATURE BASED CONFIG
   Hubaux A, 2013, SOFTW SYST MODEL, V12, P641, DOI 10.1007/s10270-011-0220-1
   Hwan C., 2005, MODEL DRIVEN ARCHITE
   Iglesias A, 2017, P 21 INT SYST SOFTW
   ISO, 2013, ISO SOFTW SYST ENG R
   Janota M., 2007, SOFTW PROD LIN C 200
   Jaring M., 2004, P 28 ANN INT COMP SO
   Kang K., 1990, SECONDARY FEATURE OR
   Krueger C.W, 2007, COMP 22 ACM SIGPLAN
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Lettner D, 2012, P 16 INT SOFTW PROD, V1
   Lu H, 2016, IEEE INT CONF SOFTW, P57, DOI 10.1109/ICST.2016.17
   Lu H, 2016, INFORM SOFTWARE TECH, V72, P68, DOI 10.1016/j.infsof.2015.12.004
   Lu H, 2014, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2014.13
   Ma T, 2019, SOFTW SYST MODEL, V18, P2843, DOI 10.1007/s10270-018-00703-y
   Man Zhang, 2019, Software & Systems Modeling, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Mazo R, 2011, P 5 WORKSH VAR MOD S
   Mendonca M., 2009, P 24 ACM SIGPLAN C C
   MENDONCA M, 2008, J SOFTWARE, V0003, P00069, DOI DOI 10.4304/jsw.3.2.69-82
   Mendonca M., 2008, P 2008 ACM S APPL CO
   Myllarniemi V, 2005, 19 INT JOINT C ART I
   Myllarniemi V, 2005, THESIS
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Nie K, 2013, P INT C MOD DRIV ENG
   Nie K., 2013, DEMOS POSTERS STUDEN
   Nöhrer A, 2013, AUTOMAT SOFTW ENG, V20, P265, DOI 10.1007/s10515-012-0117-4
   OCL, 2011, OCL OBJ CONSTR LANG
   Pure-Systems, 2017, PUR VAR
   Rabiser R., 2010, IMPROVING AWARENESS
   Rabiser R, DOPLER DECISION ORIE
   Rabiser R., 2012, 2012 P 27 IEEE ACM I
   Safdar S.A, 2016, P INT C SYST AN MOD
   Safdar S.A, 2017, P GEN EV COMP C GECC
   Safdar SA, 2020, AUTOMAT SOFTW ENG, V27, P1, DOI 10.1007/s10515-019-00266-2
   Safdar SA, 2015, LECT NOTES COMPUT SC, V9153, P33, DOI 10.1007/978-3-319-21151-0_3
   Schroeter J, 2012, P 16 INT SOFTW PROD, V2
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sinnema M, 2004, INT SYST SOFTW PROD
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Sinnema M, 2006, LECT NOTES COMPUT SC, V4039, P101
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Urli S., 2014, P 18 INT SOFTW PROD, V1
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Vierhauser M., 2010, P IEEEACM INT C AUTO, P63
   WHITE J., 2009, P 13 INT SOFTW PROD
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   Yue T., 2015, P INT SYST SOFTW PRO
   Yue T, 2016, 2016 4 INT C MOD DRI
   Yue T., 2015, P 19 INT C SOFTW PRO
   Zhang Man, 2016, 12 EUR C MOD FDN APP
   Zhou CJ, 2008, INT J ADV MANUF TECH, V38, P185, DOI 10.1007/s00170-007-1089-6
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
NR 106
TC 4
Z9 4
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 211
EP 265
DI 10.1007/s10270-020-00803-8
EA JUN 2020
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM0VS
UT WOS:000539929700001
DA 2024-07-18
ER

PT J
AU Tenbergen, B
   Weyer, T
AF Tenbergen, Bastian
   Weyer, Thorsten
TI Generation of hazard relation diagrams: formalization and tool support
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Safety requirements; Hazards; Hazard-mitigating requirements; Safety
   assessment; Validation; Reviews; Inspections; Mitigation; Adequacy;
   Modeling; Safety-critical embedded systems; Model-based engineering;
   Hazard relation diagrams
ID SAFETY ANALYSIS; REQUIREMENTS; INSPECTIONS; DESIGN; TRACEABILITY;
   CHECKING
AB Developing safety-critical, software-intensive embedded systems are characterized by the need to identify hazards and to define hazard-mitigating requirements at the earliest possible stage of development, i.e., during requirements engineering. These hazard-mitigating requirements must be adequate in the sense that they must specify the functionality required by the stakeholders in addition to rendering the system sufficiently safe during operation. The adequacy of hazard-mitigating requirements is determined during requirements validation. Yet, the validation of the adequacy of hazard-mitigating requirements is burdened by the fact that hazards and contextual information about hazards are a work product of safety assessment, and hazard-mitigating requirements are a work product of requirements engineering. These work products are poorly integrated such that during validation, the information needed to determine the adequacy of hazard-mitigating requirements is not available to stakeholders. In consequence, there is the risk that inadequate hazard-mitigating requirements remain covert and the system is falsely considered safe. To alleviate this issue, we have previously proposed (Tenbergen et al., in: Proceedings of the 21st international working conference on requirements engineering: foundation for software quality, pp 17-32, 2015), improved, and evaluated (Tenbergen et al. in Requir Eng J 23(2):291-329, 2018. 10.1007/s00766-017-0267-9) a novel diagram type called "Hazard Relation Diagrams." In this paper, we present a semiautomated formal approach and tool support for their generation. We make use of a running example to illustrate the concepts.
C1 [Tenbergen, Bastian] SUNY Coll Oswego, Dept Comp Sci, Oswego, NY 13126 USA.
   [Weyer, Thorsten] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) - Oswego; University of Duisburg Essen
RP Tenbergen, B (corresponding author), SUNY Coll Oswego, Dept Comp Sci, Oswego, NY 13126 USA.
EM bastian.tenbergen@oswego.edu
RI Tenbergen, Bastian/AAW-8920-2020
OI Tenbergen, Bastian/0000-0002-0145-4800
FU German Federal Ministry of Education and Research [01IS12005C]
FX This research was partly funded by the German Federal Ministry of
   Education and Research under Grant Number 01IS12005C. We would like to
   thank our colleagues Andre Heuer, Marian Daun, Kevin Keller, and
   Jonathan Baker for their assistance with implementation and rationale
   categorization.
CR Allenby K, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P228
   [Anonymous], 2014, ENT ARCH US GUID
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Awodey S, 2011, W ONT SER PHILOS SCI, V76, P113, DOI 10.1007/978-94-007-0431-2_5
   Basir N, 2010, LECT NOTES COMPUT SC, V6351, P68, DOI 10.1007/978-3-642-15651-9_6
   Belli F., 2007, P 26 INT C COMP SAF, P276
   Ben Ammar L, 2015, REQUIR ENG, V20, P465, DOI 10.1007/s00766-014-0213-z
   Berry DM, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P147, DOI 10.1109/IWSSD.1998.667930
   Bharadwaj R., 1999, Automated Software Engineering, V6, P37, DOI 10.1023/A:1008697817793
   BISHOP P, 2004, P WORKSH ASS CAS, P390
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2008, IEEE T SOFTWARE ENG, V34, P800, DOI 10.1109/TSE.2008.49
   Cheung SC, 1999, ACM T SOFTW ENG METH, V8, P49, DOI 10.1145/295558.295570
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang Jane, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P179, DOI 10.1007/978-3-642-28714-5_16
   Cooper K., 2010, JOINT SOFTW SYST SAF
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Despotou G., 2012, 2012 4th International Workshop on Software Engineering in Health Care (SEHC 2012), P44, DOI 10.1109/SEHC.2012.6227010
   Dezfuli H., 2011, NASA System Safety Handbook, V1
   Dittel T, 2010, LECT NOTES COMPUT SC, V6351, P97, DOI 10.1007/978-3-642-15651-9_8
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P1, DOI 10.1002/0471739421
   Eshuis R., 2001, TECHNICAL REPORT
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Firesmith D, 2005, J OBJECT TECHNOL, V4, P27, DOI 10.5381/jot.2005.4.1.c3
   Flynn DJ, 1994, INFORM SYST J, V4, P185, DOI 10.1111/j.1365-2575.1994.tb00051.x
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Glinz M., 2000, P 2 WORLD C SOFTW QU, P55
   Glinz M, 2015, COMPUT SCI-RES DEV, V30, P363, DOI 10.1007/s00450-014-0256-x
   Goodhue DL, 1998, DECISION SCI, V29, P105, DOI 10.1111/j.1540-5915.1998.tb01346.x
   Guillerm R., 2011, P ANN EUR SAF REL C, P1287
   Hansen KM, 1998, IEEE T SOFTWARE ENG, V24, P573, DOI 10.1109/32.708570
   Hart C, 2000, J RES SCI TEACH, V37, P655, DOI 10.1002/1098-2736(200009)37:7<655::AID-TEA3>3.0.CO;2-E
   Hawkins R, 2011, ADVANCES IN SYSTEMS SAFETY, P3, DOI 10.1007/978-0-85729-133-2_1
   Heitmeyer C, 1998, IEEE T SOFTWARE ENG, V24, P927, DOI 10.1109/32.730543
   High K., 1997, SAFETY CASE CONSTRUC, P55
   International Organization for Standardization, 2011, ISO26262
   International Requirements Engineering Board, IREB GLOSS VERS 1 6
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jones, 2014, P FUT SOFTW ENG, P182, DOI DOI 10.1145/2593882.2593895
   Kelly S., 2008, Domain-Specific Modeling
   Kelly T., 2004, P WORKSH ASS CAS DEP
   Kelly T., 2007, P WORKSH ASS CAS SEC
   Kotonya G, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P259, DOI 10.1109/APSEC.1997.640183
   Lagarde F, 2008, LECT NOTES COMPUT SC, V4961, P116, DOI 10.1007/978-3-540-78743-3_10
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   Lee JS, 2010, J SYST SOFTWARE, V83, P1612, DOI 10.1016/j.jss.2009.08.022
   Lehmann E., 2017, MATH COMPUTER SCI
   Leveson N., 2011, J SYST SAF, V47
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson NG, 2011, ENG SYST, P1
   Maurer M, 2009, DRIVER ASSISTANCE SY
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Object Management Group: Meta Object Facility (MOF), FORMAL20160603 OMG
   Object Management Group: OMG Meta Object Facility (MOF), FORMAL20150605 OMG
   Object Management Group: OMG Unified Modeling Language (OMG UML) Version 2.5, FORMAL20150301 OMG
   Palin R, 2010, LECT NOTES COMPUT SC, V6351, P82, DOI 10.1007/978-3-642-15651-9_7
   Panach J.I., 2008, P CONC MOD, P498
   Saeed A., 1993, P 12 INT C COMP SAF
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Stamm B., 1993, P 12 INT C COMP SAF
   Sthapit BR, 1997, CIRAD COLLOQUES, P135
   Strüber D, 2017, LECT NOTES COMPUT SC, V10373, P196, DOI 10.1007/978-3-319-61470-0_12
   Sun L, 2012, THESIS
   Tenbergen B, 2018, REQUIR ENG, V23, P291, DOI 10.1007/s00766-017-0267-9
   Tenbergen B, 2015, LECT NOTES COMPUT SC, V9013, P17, DOI 10.1007/978-3-319-16101-3_2
   Troubitsyna Elena, 2008, 2008 3rd International Conference on Systems (ICONS '08), P202, DOI 10.1109/ICONS.2008.56
   Tsuchiya T, 1997, P INT COMP SOFTW APP, P252, DOI 10.1109/CMPSAC.1997.624809
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Wang J., 2001, INT J RELIABILITY QU, V8, P35, DOI DOI 10.1142/S0218539301000335
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiaojie Xu, 2011, Proceedings of 2011 9th International Conference on Reliability, Maintainability and Safety (ICRMS 2011), P710, DOI 10.1109/ICRMS.2011.5979357
NR 75
TC 2
Z9 2
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2021
VL 20
IS 1
BP 175
EP 210
DI 10.1007/s10270-020-00799-1
EA JUN 2020
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QM0VS
UT WOS:000537416900001
DA 2024-07-18
ER

PT J
AU Kampars, J
   Zdravkovic, J
   Stirna, J
   Grabis, J
AF Kampars, Janis
   Zdravkovic, Jelena
   Stirna, Janis
   Grabis, Janis
TI Extending organizational capabilities with Open Data to support
   sustainable and dynamic business ecosystems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Open Data; Capability; Context; Requirements; CDD
ID FRAMEWORK
AB Open Data (OD) is data available in a machine-readable format and without restrictions on the permissions for using or distributing it. OD may include textual artifacts, images, maps, video content, and other. The data can be published and maintained by different entities, both public and private. Despite its power to distribute knowledge freely and availability of a large number of datasets, OD initiatives face important challenges related to its widespread take up. More specifically, OD provisioning is based on a unidirectional linking from OD providers to OD users without considering requirements and preferences of the users. The OD users also lack metadata, and they need to develop specific technical solutions for providing a continuous OD flow and processing, which is particularly difficult when real-time OD are to be used. In this paper, we propose solving these challenges by envisioning a business ecosystem for OD. It is network-based, federated, and supports interplay between OD provisioning and knowledge management. As a methodological solution, we have applied the capability-driven development approach, which allows modeling of OD processing ecosystems, facilitates knowledge exchange about OD usage among members of the ecosystem, and supports configuring information systems for OD processing. The proposal is explicated with a theoretical study of its usability for the service of road maintenance in varying conditions.
C1 [Kampars, Janis; Grabis, Janis] Riga Tech Univ, Inst Informat Technol, Kalku Iela 1, Riga, Latvia.
   [Zdravkovic, Jelena; Stirna, Janis] Stockholm Univ, Dept Comp & Syst Sci, Postbox 7003, S-16407 Kista, Sweden.
C3 Riga Technical University; Stockholm University
RP Kampars, J (corresponding author), Riga Tech Univ, Inst Informat Technol, Kalku Iela 1, Riga, Latvia.
EM janis.kampars@rtu.lv; jelenaz@dsv.su.se; js@dsv.su.se; grabis@rtu.lv
RI Kampars, Jānis/AAG-9600-2019
OI Kampars, Jānis/0000-0003-0045-5593; Zdravkovic,
   Jelena/0000-0002-0870-0330; Grabis, Janis/0000-0003-2196-0214
CR Berends J, ANAL REPORT 9 EC BEN
   Berrone P, 2016, CALIF MANAGE REV, V59, P39, DOI 10.1177/0008125616683703
   Bertot J. C., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P2491, DOI 10.1109/HICSS.2012.658
   Berzisa S, 2015, BUS INFORM SYST ENG+, V57, P15, DOI 10.1007/s12599-014-0362-0
   Carrara W., 2015, Creating value through open data: study on the impact of re-use of public data resources
   Clemente PJ, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18124125
   Donker FW, 2017, INT J DIGIT EARTH, V10, P284, DOI 10.1080/17538947.2016.1224938
   Fiera C, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0189638
   Foulonneau M, 2014, LECT NOTES BUS INF P, V169, P31
   Gong YW, 2017, DG.O 2017: THE PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON DIGITAL GOVERNMENT RESEARCH: INNOVATIONS AND TRANSFORMATIONS IN GOVERNMENT, P505, DOI 10.1145/3085228.3085275
   Grabis J., 2016, 611351 FP7 STOCKH U, P266
   Grabis J, 2018, LECT NOTES BUS INF P, V316, P40, DOI 10.1007/978-3-319-92898-2_4
   Jurisch MC, 2015, P ANN HICSS, P2188, DOI 10.1109/HICSS.2015.262
   Kampars J., 2017, CEUR WORKSHOP P, P1
   Kaur Jaideep, 2017, International Journal of Computer Network and Information Security, V9, P57, DOI 10.5815/ijcnis.2017.04.07
   Liu XJ, 2015, CITIES, V47, P53, DOI 10.1016/j.cities.2015.03.006
   Lnenicka M, 2019, INT J INFORM MANAGE, V46, P124, DOI 10.1016/j.ijinfomgt.2018.12.003
   Manyika J., 2013, Open data: Unlocking innovation and performance with liquid information
   Martin S, 2013, COMM COM INF SC, V390, P234
   Open Data Institute, OP DAT MEANS BUS UK
   Persson A, 2008, J CASES INF TECHNOL, V10, P41, DOI 10.4018/jcit.2008100103
   Sandkuhl K., 2018, Capability management in digital enterprises
   SANDKUHL K., 2014, ENTERPRISE MODELING
   Smith G, 2016, P ANN HICSS, P1277, DOI 10.1109/HICSS.2016.162
   Stirna J., 2006, BT P 14 EUR C INF SY
   Susha I, 2015, TRANSFORM GOV-PEOPLE, V9, P181, DOI 10.1108/TG-05-2014-0016
   TANTITHARANUKUL N, 2016, 2016 INT COMP SCI EN, P00001
   ZDRAVKOVIC J., 2017, COMPLEX SYST INFORM, V10, P1, DOI DOI 10.7250/CSIMQ.2017-10.01
   Zdravkovic J, 2018, LECT NOTES BUS INF P, V316, P28, DOI 10.1007/978-3-319-92898-2_3
   Zeleti FA, 2017, DG.O 2017: THE PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON DIGITAL GOVERNMENT RESEARCH: INNOVATIONS AND TRANSFORMATIONS IN GOVERNMENT, P250, DOI 10.1145/3085228.3085280
   Zeleti FA, 2014, IFIP ADV INF COMM TE, V434, P498
   Zuiderwijk Anneke, 2016, Information Polity, V21, P223, DOI 10.3233/IP-160391
   Zuiderwijk A., 2015, P 16 ANN INT C DIGIT, P79, DOI DOI 10.1145/2757401.2757411
NR 33
TC 14
Z9 14
U1 3
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 371
EP 398
DI 10.1007/s10270-019-00756-7
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200008
DA 2024-07-18
ER

PT J
AU Mouratidis, H
   Shei, S
   Delaney, A
AF Mouratidis, Haralambos
   Shei, Shaun
   Delaney, Aidan
TI A security requirements modelling language for cloud computing
   environments
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Security modelling language; Secure Tropos; Cloud computing security;
   Cloud threat analysis
ID ISSUES
AB This paper presents a novel security modelling language and a set of original analysis techniques, for capturing and analysing security requirements for cloud computing environments. The novelty of the language lies in the integration of concepts from cloud computing, with concepts from security and goal-oriented requirements engineering to elicit, model and analyse security requirements for cloud infrastructures. We then propose three analysis techniques, which support an automated process where given a model of a cloud computing system, developed with the proposed language, will enhance the model with new security knowledge, for example threats and vulnerabilities, mitigation strategies and assets and actor responsibilities. This is, to the best of our knowledge, the first attempt in the literature to develop a language for cloud computing security modelling and analysis, based on such integration, and support it with a set of automated techniques that enhanced the stakeholder-created models with security knowledge. The proposed modelling language and techniques are illustrated through walking examples and a case study based on our work in the VisiOn European project.
C1 [Mouratidis, Haralambos; Shei, Shaun; Delaney, Aidan] Univ Brighton, Sch Comp Engn & Math, Ctr Secure Intelligent & Usable Syst, Brighton, E Sussex, England.
C3 University of Brighton
RP Mouratidis, H (corresponding author), Univ Brighton, Sch Comp Engn & Math, Ctr Secure Intelligent & Usable Syst, Brighton, E Sussex, England.
EM h.mouratidis@brighton.ac.uk; s.shei@brighton.ac.uk
CR Almorsy Mohamed, 2010, P APSEC 2010 CLOUD W
   [Anonymous], 2008, GRID COMPUT ENV WORK, DOI DOI 10.HTTPS://D0I.0RG/10.1109/GCE.2008.4738445
   [Anonymous], 2011, NIST DEFINITION CLOU
   Argyropoulos N., 2017, P 50 HAW INT C SYST
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   BANDARA A, 2010, SOFTWARE ENG SECURE, P75
   Beckers K, 2013, REQUIR ENG, V18, P343, DOI 10.1007/s00766-013-0174-7
   Dubois E, 2010, REQUIR ENG, V15, P1, DOI 10.1007/s00766-009-0094-8
   Fabian B, 2010, REQUIR ENG, V15, P7, DOI 10.1007/s00766-009-0092-x
   Iankoulova I., 2012, 6 INT C RES CHALLENG, P1
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Kalloniatis C, 2013, REQUIR ENG, V18, P299, DOI 10.1007/s00766-013-0166-7
   Kissel R., 2008, 80064 NIST
   Li T., 2015, P 8 INT I WORKSH
   Lombardi F, 2011, J NETW COMPUT APPL, V34, P1113, DOI 10.1016/j.jnca.2010.06.008
   Luo S, 2011, 2011 INT C CLOUD SER
   Mavropoulos O, 2019, AD HOC NETW, V92, DOI 10.1016/j.adhoc.2018.08.013
   Modi C, 2013, J SUPERCOMPUT, V63, P561, DOI 10.1007/s11227-012-0831-5
   Moreno-Vozmediano R, 2013, IEEE INTERNET COMPUT, V17, P18, DOI 10.1109/MIC.2012.69
   Mouratidis H., 2009, INT J COMPUT SCI SEC, V3, P241
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2013, J SYST SOFTWARE, V86, P2276, DOI 10.1016/j.jss.2013.03.011
   Qian L, 2009, LECT NOTES COMPUT SC, V5931, P626, DOI 10.1007/978-3-642-10665-1_63
   Ristenpart T, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P199
   Sengupta S., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P524, DOI 10.1109/SERVICES.2011.20
   Shei S, 2018, THESIS
   Shei S, 2017, LECT NOTES BUS INF P, V287, P337, DOI 10.1007/978-3-319-59466-8_21
   Subashini S, 2011, J NETW COMPUT APPL, V34, P1, DOI 10.1016/j.jnca.2010.07.006
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Yu ES, 2009, LECT NOTES COMPUT SC, V5600, P99, DOI 10.1007/978-3-642-02463-4_7
   Zardari S., 2011, P 2 INT WORKSHOP SOF, P29
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 32
TC 8
Z9 8
U1 2
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 271
EP 295
DI 10.1007/s10270-019-00747-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000519162200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ramadan, Q
   Strüber, D
   Salnitri, M
   Jürjens, J
   Riediger, V
   Staab, S
AF Ramadan, Qusai
   Strueber, Daniel
   Salnitri, Mattia
   Juerjens, Jan
   Riediger, Volker
   Staab, Steffen
TI A semi-automated BPMN-based framework for detecting conflicts between
   security, data-minimization, and fairness requirements
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Conflicts; Requirements engineering; Security; Data minimization;
   Fairness; BPMN
ID PRIVACY; SYSTEM; IDENTIFICATION; KNOWLEDGE; DESIGN; GOAL
AB Requirements are inherently prone to conflicts. Security, data-minimization, and fairness requirements are no exception. Importantly, undetected conflicts between such requirements can lead to severe effects, including privacy infringement and legal sanctions. Detecting conflicts between security, data-minimization, and fairness requirements is a challenging task, as such conflicts are context-specific and their detection requires a thorough understanding of the underlying business processes. For example, a process may require anonymous execution of a task that writes data into a secure data storage, where the identity of the writer is needed for the purpose of accountability. Moreover, conflicts not arise from trade-offs between requirements elicited from the stakeholders, but also from misinterpretation of elicited requirements while implementing them in business processes, leading to a non-alignment between the data subjects' requirements and their specifications. Both types of conflicts are substantial challenges for conflict detection. To address these challenges, we propose a BPMN-based framework that supports: (i) the design of business processes considering security, data-minimization and fairness requirements, (ii) the encoding of such requirements as reusable, domain-specific patterns, (iii) the checking of alignment between the encoded requirements and annotated BPMN models based on these patterns, and (iv) the detection of conflicts between the specified requirements in the BPMN models based on a catalog of domain-independent anti-patterns. The security requirements were reused from SecBPMN2, a security-oriented BPMN 2.0 extension, while the fairness and data-minimization parts are new. For formulating our patterns and anti-patterns, we extended a graphical query language called SecBPMN2-Q. We report on the feasibility and the usability of our approach based on a case study featuring a healthcare management system, and an experimental user study.
C1 [Ramadan, Qusai; Juerjens, Jan; Riediger, Volker] Univ Koblenz Landau, Koblenz, Germany.
   [Strueber, Daniel] Univ Gothenburg, Chalmers Univ, Gothenburg, Sweden.
   [Salnitri, Mattia] Politecn Milan, Milan, Italy.
   [Juerjens, Jan] Fraunhofer Inst Software & Syst Engn ISST, Dortmund, Germany.
   [Staab, Steffen] Univ Stuttgart, Stuttgart, Germany.
   [Staab, Steffen] Univ Southampton, Southampton, Hants, England.
C3 University of Koblenz & Landau; Chalmers University of Technology;
   University of Gothenburg; Polytechnic University of Milan; Fraunhofer
   Gesellschaft; University of Stuttgart; University of Southampton
RP Strüber, D (corresponding author), Univ Gothenburg, Chalmers Univ, Gothenburg, Sweden.
EM qramadan@uni-koblenz.de; danstru@chalmers.se; mattia.salnitri@polimi.it;
   juerjens@uni-koblenz.de; riediger@uni-koblenz.de; s.r.staab@soton.ac.uk
RI Ramadan, Qusai/AAV-8241-2021; Salnitri, Mattia/AAG-6353-2021
OI Staab, Steffen/0000-0002-0780-4154; Ramadan, Dr.
   Qusai/0000-0001-8159-918X; Struber, Daniel/0000-0002-5969-3521
FU Deutscher Akademischer Austauschdienst (DAAD); University of
   Koblenz-Landau
FX This research was partially supported by: (i) The Deutscher Akademischer
   Austauschdienst (DAAD), (ii) the project "Engineering Responsible
   Information Systems" financed by the University of Koblenz-Landau.
CR Ahmadian AS, 2017, LECT NOTES COMPUT SC, V10376, P215, DOI 10.1007/978-3-319-61482-3_13
   AHMADIAN AS, 2018, ACM S APPL COMP
   Albarghouthi A., 2016, ARXIV161006067
   Aldekhail M, 2016, INT J ADV COMPUT SC, V7, P326
   Alkubaisy D, 2017, INT CONF RES CHAL, P427, DOI 10.1109/RCIS.2017.7956571
   [Anonymous], 2007, SURVEY ZERO KNOWLEDG
   [Anonymous], 2017, ARXIV170708120
   [Anonymous], TERMINOLOGY TALKING
   Arsac W, 2011, LECT NOTES COMPUT SC, V6542, P29, DOI 10.1007/978-3-642-19125-1_3
   Barocas S, 2016, CALIF LAW REV, V104, P671, DOI 10.15779/Z38BG31
   Brucker A.D., 2012, Proceedings of the 17th ACM symposium on access control models and technologies (SACMAT '12), P123, DOI [DOI 10.1145/2295136.2295160, 10.1145/2295136.2295160]
   Brucker A.D., 2012, THESIS, P123
   Bürger J, 2018, J SYST SOFTWARE, V139, P142, DOI 10.1016/j.jss.2018.02.003
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   CHAUM D, 1985, COMMUN ACM, V28, P1030, DOI 10.1145/4372.4373
   Datta A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1193, DOI 10.1145/3133956.3134097
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Diamantopoulou V, 2017, INT CONF RES CHAL, P187, DOI 10.1109/RCIS.2017.7956536
   Egyed A, 2004, IEEE SOFTWARE, V21, P50, DOI 10.1109/MS.2004.40
   Eiter T, 2000, LECT NOTES ARTIF INT, V1861, P807
   Elahi G, 2007, LECT NOTES COMPUT SC, V4801, P375
   Fantinato Marcelo, 2012, International Journal of Business Process Integration and Management, V6, P52, DOI 10.1504/IJBPIM.2012.047913
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Ferraiolo D. E., 1995, Proceedings. 11th Annual Computer Security Applications Conference, P241
   Ganji D, 2015, COMM COM INF SC, V534, P323, DOI 10.1007/978-3-319-23276-8_29
   Gupta Maya, 2018, ARXIV180611212
   Gurses S., 2011, COMPUTERS PRIVACY DA
   Hansen M, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P159, DOI 10.1109/SPW.2015.13
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Ingold D., 2016, Amazon Doesn't Consider the Race of Its Customers. Should It?
   *ISO, 2012, 15408 ISOIEC
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Kim M, 2007, DATA KNOWL ENG, V61, P417, DOI 10.1016/j.datak.2006.06.009
   Labda W, 2014, P 29 ANN ACM S APPL, P1399, DOI [10.1145/2554850.2555014, DOI 10.1145/2554850.2555014]
   Lambers L, 2019, J LOG ALGEBR METHODS, V103, P105, DOI 10.1016/j.jlamp.2018.11.004
   Lambers L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/3180155.3180258
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Maines Curtis L., 2015, 2015 IEEE International Conferences on Computer and Information Technology; Ubiquitous Computing and Communications; Dependable, Autonomic and Secure Computing; and Pervasive Intelligence and Computing (CIT/IUCC/DASC/PICOM). Proceedings, P1756, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.265
   Mairiza Dewi, 2010, 2010 Third International Workshop on Managing Requirements Knowledge (MARK 2010), P1, DOI 10.1109/MARK.2010.5623814
   Mairiza D., 2010, INT C EV NOV APPR SO
   Meis R., 2015, P 10 INT JOINT C SOF, V2, P1
   Meis R., 2012, SPRINGER ANN PRIVACY, P1
   Mendes R, 2017, IEEE ACCESS, V5, P10562, DOI 10.1109/ACCESS.2017.2706947
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Morton A, 2012, PROCEEDINGS OF THE 2012 NEW SECURITY PARADIGMS WORKSHOP (NSPW'12), P87
   Mouratidis H, 2012, J UNIVERS COMPUT SCI, V18, P1608
   Mulle J., 2011, A Security Language for BPMN Process Models
   Paja E, 2013, LECT NOTES COMPUT SC, V8217, P270, DOI 10.1007/978-3-642-41924-9_23
   Pasquale L, 2016, REQUIR ENG, V21, P481, DOI 10.1007/s00766-015-0229-z
   Poort E.R., 2004, SE SWM 2019, P145
   Poort ER, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P145, DOI 10.1109/WICSA.2004.1310698
   Pullonen P, 2017, LECT NOTES COMPUT SC, V10445, P40, DOI 10.1007/978-3-319-65000-5_3
   RAMADAN Q, 2018, P INT WORKSH FAIRWAR
   Ramadan Q, 2018, LECT NOTES COMPUT SC, V10890, P179, DOI 10.1007/978-3-319-92997-2_12
   Ramadan Q, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P123, DOI 10.1109/MODELS.2017.10
   Raymond J.F., 2001, LECT NOTES COMPUTER, P10
   Rodríguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Saadatmand M, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P112, DOI 10.1109/ITNG.2015.24
   Saleem M., 2012, INT J ADV INFORM SCI, V4, P353, DOI DOI 10.4156/aiss.vol4.issue1.45
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Salnitri M., 2015, SOCIOTECHNICAL REQUI
   SALNITRI M, 2014, ISTAR
   Salnitri M, 2015, ARXIV15100237 CORR
   Salnitri M., 2014, Enterprise, Business-Process and Information and Information Systems Modeling, V175, P200, DOI [DOI 10.1007/978-3-662-43745-2_14, 10.1007/978-3-662]
   Salnitri M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P155, DOI [10.1109/REW.2016.038, 10.1109/REW.2016.11]
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   Van Blarkom GW., 2003, The handbook of privacy and privacy enhancing technologies: the case of intelligent software agents
   Vivas JL, 2003, LECT NOTES COMPUT SC, V2851, P381
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   ZLIOBAITE I, 2015, ARXIV15110014 CORR
NR 73
TC 20
Z9 20
U1 1
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD SEP
PY 2020
VL 19
IS 5
BP 1191
EP 1227
DI 10.1007/s10270-020-00781-x
EA FEB 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NN9PL
UT WOS:000516010200001
OA Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Bruel, JM
   Combemale, B
   Guerra, E
   Jézéquel, JM
   Kienzle, J
   de Lara, J
   Mussbacher, G
   Syriani, E
   Vangheluwe, H
AF Bruel, Jean-Michel
   Combemale, Benoit
   Guerra, Esther
   Jezequel, Jean-Marc
   Kienzle, Joerg
   de Lara, Juan
   Mussbacher, Gunter
   Syriani, Eugene
   Vangheluwe, Hans
TI Comparing and classifying model transformation reuse approaches across
   metamodels
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformation; Reuse; Survey; Classification; Feature model
ID COMPONENT MODEL; DRIVEN; DOMAIN; LANGUAGES; STATE
AB Model transformations are essential elements of model-driven engineering (MDE) solutions, as they enable the automatic manipulation of models. MDE promotes the creation of domain-specific metamodels, but without proper reuse mechanisms, model transformations need to be developed from scratch for each new metamodel. In this paper, our goal is to understand whether transformation reuse across metamodels is needed by the community, evaluate its current state, identify practical needs and propose promising lines for further research. For this purpose, we first report on a survey to understand the reuse approaches used currently in practice and the needs of the community. Then, we propose a classification of reuse techniques based on a feature model and compare a sample of specific approaches-model types, concepts, a-posteriori typing, multilevel modeling, typing requirement models, facet-oriented modeling, mapping operators, constraint-based model types, and design patterns for model transformations-based on this feature model and a common example. We discuss strengths and weaknesses of each approach, provide a reading grid used to compare their features, compare with community needs, identify gaps in current transformation reuse approaches in relation to these needs and propose future research directions.
C1 [Bruel, Jean-Michel] Univ Toulouse, IRIT, Toulouse, France.
   [Combemale, Benoit] Univ Toulouse, INRIA, Toulouse, France.
   [Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Madrid, Spain.
   [Jezequel, Jean-Marc] Univ Rennes, CNRS, INRIA, IRISA, Rennes, France.
   [Kienzle, Joerg; Mussbacher, Gunter; Vangheluwe, Hans] McGill Univ, Montreal, PQ, Canada.
   [Syriani, Eugene] Univ Montreal, Montreal, PQ, Canada.
   [Vangheluwe, Hans] Univ Antwerp, Antwerp, Belgium.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier;
   Universite Federale Toulouse Midi-Pyrenees (ComUE); Institut National
   Polytechnique de Toulouse; Inria; Universite de Toulouse; Autonomous
   University of Madrid; Centre National de la Recherche Scientifique
   (CNRS); Inria; Universite de Rennes; McGill University; Universite de
   Montreal; University of Antwerp
RP Combemale, B (corresponding author), Univ Toulouse, INRIA, Toulouse, France.
EM bruel@irit.fr; benoit.combemale@irit.fr; Esther.Guerra@uam.es;
   jean-marc.jezequel@irisa.fr; Joerg.Kienzle@mcgill.ca;
   Juan.deLara@uam.es; gunter.mussbacher@mcgill.ca;
   syriani@iro.umontreal.ca; Hans.Vangheluwe@uantwerpen.be
RI Syriani, Eugene/AAI-5036-2020; Jezequel, Jean-Marc/AAF-3854-2019; Bruel,
   Jean-Michel/ABD-5184-2020; de Lara, Juan/B-5422-2014; Vangheluwe,
   Hans/H-9884-2016; Guerra, Esther/B-4977-2014
OI Syriani, Eugene/0000-0001-6527-1651; Jezequel,
   Jean-Marc/0000-0002-0582-9745; Bruel, Jean-Michel/0000-0002-3653-0148;
   Vangheluwe, Hans/0000-0003-2079-6643; Guerra, Esther/0000-0002-2818-2278
FU SpanishMinistry of Science [RTI2018-095255-B-I00]; Madrid Region
   [S2018/TCS-4314]
FX We are grateful to all participants in the survey for their support, and
   to all participants in the 1st workshop on Unifying Software Reuse at
   Bellairs for their feedback on the feature model. This work has been
   partially funded by the SpanishMinistry of Science
   (RTI2018-095255-B-I00) and the Madrid Region (S2018/TCS-4314).
CR Alvarez C., 2013, ACAD TOOL ECL WORKSH
   [Anonymous], 2014, P 2 WORKSH VIEW BAS
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2015, SOFTW SYST MODEL, V14, P645, DOI 10.1007/s10270-013-0384-y
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Bendraou R, 2008, SOFTW SYST MODEL, V7, P329, DOI 10.1007/s10270-007-0058-8
   Boronat A, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P194, DOI 10.1145/3136014.3136026
   Bruel JM, 2018, LECT NOTES COMPUT SC, V10888, P92, DOI 10.1007/978-3-319-93317-7_4
   Cleophas, 2017, FED INT C SOFTW TECH, P129
   Criado J., 2015, LNCS, V9152, P15
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P67, DOI 10.1145/3239372.3239377
   De Lara J, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340108
   de Lara J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P147, DOI 10.1145/3276604.3276610
   De Lara J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280985
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   de Lara J, 2017, LECT NOTES COMPUT SC, V10202, P264, DOI 10.1007/978-3-662-54494-5_15
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, J LOG ALGEBR METHODS, V83, P427, DOI 10.1016/j.jlamp.2014.08.005
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   DEGUEULE T, 2016, COMPUT LANG SYST STR, V49, P30, DOI DOI 10.1016/j.cl.2016.09.001
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Diskin Z, 2012, LECT NOTES COMPUT SC, V7212, P163, DOI 10.1007/978-3-642-28872-2_12
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Group O.M, 2016, QUER VIEW TRANSF SPE
   Guerra E., 2018, SOFTWARE LANGUAGE EN, P159
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kalliamvakou E, 2015, 2015 IEEE/ACM 7th International Workshop on Modeling in Software Engineering, P25, DOI 10.1109/MiSE.2015.12
   Kang K.C., 1990, CMUSEI90TR021
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Lano K, 2014, SOFTW SYST MODEL, V13, P873, DOI 10.1007/s10270-012-0291-7
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Legros E, 2009, J VISUAL LANG COMPUT, V20, P252, DOI 10.1016/j.jvlc.2009.04.005
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Lucio L., 2014, SOFTW SYST MODEL, V15, P685
   Macías F, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.10
   Mengerink J, 2018, THESIS
   Mengerink JGM., 2017, IWSM MENSURA, P116, DOI [10.1145/3143434.3143442, DOI 10.1145/3143434.3143442]
   Morin B, 2010, LECT NOTES COMPUT SC, V6395, P63
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Perrouin G, 2016, 2016 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P1, DOI [10.1109/MiSE.2016.009, 10.1145/2896982.2896987]
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Saks K, 2009, JSR 318 ENTERPRISE J
   Salay R, 2016, LECT NOTES COMPUT SC, V9765, P107, DOI 10.1007/978-3-319-42064-6_8
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Cuadrado JS, 2014, LECT NOTES COMPUT SC, V8568, P186
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Sutîi AM, 2018, COMPUT LANG SYST STR, V51, P48, DOI 10.1016/j.cl.2017.07.004
   Van Gorp P, 2011, WORKSH COMP EV MOD T
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a3
   Wimmer M, 2010, LECT NOTES COMPUT SC, V6142, P260, DOI 10.1007/978-3-642-13688-7_18
   Wuliang Sun, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P118, DOI 10.1007/978-3-642-39013-5_9
NR 76
TC 9
Z9 10
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAR
PY 2020
VL 19
IS 2
BP 441
EP 465
DI 10.1007/s10270-019-00762-9
EA NOV 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT6YX
UT WOS:000495933300001
DA 2024-07-18
ER

PT J
AU Malavolta, I
   Mostarda, L
   Muccini, H
   Ever, E
   Doddapaneni, K
   Gemikonakli, O
AF Malavolta, Ivano
   Mostarda, Leonardo
   Muccini, Henry
   Ever, Enver
   Doddapaneni, Krishna
   Gemikonakli, Orhan
TI A4WSN: an architecture-driven modelling platform for analysing and
   developing WSNs
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE MDE; Software engineering; Software architecture; WSNs; Energy
ID WIRELESS SENSOR NETWORKS; CHALLENGES; MDE
AB This paper proposes A4WSN, an architecture-driven modelling platform for the development and the analysis of wireless sensor networks (WSNs). A WSN consists of spatially distributed sensor nodes that cooperate in order to accomplish a specific task. Sensor nodes are cheap, small, and battery-powered devices with limited processing capabilities and memory. WSNs are mostly developed directly on the top of the operating system. They are tied to the hardware configuration of the sensor nodes, and their design and implementation can require cooperation with a myriad of system stakeholders with different backgrounds. The peculiarities of WSNs and current development practices bring a number of challenges, ranging from hardware and software coupling, limited reuse, and the late assessment of WSN quality properties. As a way to overcome a number of existing limitations, this study presents a multi-view modelling approach that supports the development and analysis of WSNs. The framework uses different models to describe the software architecture, hardware configuration, and physical deployment of a WSN. A4WSN allows engineers to perform analysis and code generation in earlier stages of the WSN development life cycle. The A4WSN platform can be extended with third-party plug-ins providing additional analysis or code generation engines. We provide evidence of the applicability of the proposed platform by developing PlaceLife, an A4WSN plug-in for estimating the WSN lifetime by taking various physical obstacles in the deployment environment into account. In turn, PlaceLife has been applied to a real-world case study in the health care domain as a running example.
C1 [Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Mostarda, Leonardo] Univ Camerino, Dept Comp Sci, Camerino, Italy.
   [Muccini, Henry] Univ Aquila, Dept Informat Engn Comp Sci & Math DISIM, Laquila, Italy.
   [Ever, Enver] Middle East Tech Univ, Comp Engn, Northern Cyprus Campus,Mersin 10, Guzelyurt, Turkey.
   [Doddapaneni, Krishna] Altiux Innovat Inc, Wireless Innovat Networking Grp, San Jose, CA USA.
   [Gemikonakli, Orhan] Middlesex Univ, Comp Design Engn, London, England.
C3 Vrije Universiteit Amsterdam; University of Camerino; University of
   L'Aquila; Middle East Technical University; Middlesex University
RP Mostarda, L (corresponding author), Univ Camerino, Dept Comp Sci, Camerino, Italy.
EM i.malavolta@vu.nl; leonardo.mostarda@unicam.it; henry.muccini@univaq.it;
   eever@metu.edu.tr; Krishna.c@altiux.com; o.gemikonakli@mdx.ac.uk
RI mostarda, leonardo/AAG-9295-2020; Gemikonakli, Orhan/ABB-6233-2020;
   Malavolta, Ivano/E-9018-2017; Ever, Enver/K-9500-2013
OI mostarda, leonardo/0000-0001-8852-8317; Gemikonakli,
   Orhan/0000-0002-0513-1128; Muccini, Henry/0000-0001-6365-6515;
   Malavolta, Ivano/0000-0001-5773-8346; Ever, Enver/0000-0001-6516-2770
FU RIDITT (Italian government)
FX Funding was provided by RIDITT (Grant No. Italian government).
CR Al-Karaki JN, 2004, IEEE WIREL COMMUN, V11, P6, DOI 10.1109/MWC.2004.1368893
   Alemdar H, 2010, COMPUT NETW, V54, P2688, DOI 10.1016/j.comnet.2010.05.003
   [Anonymous], P C EM TECHN FACT AU
   [Anonymous], LECT NOTES I COMPUTE
   Beckmann K, 2010, LECT NOTES COMPUT SC, V6399, P95, DOI 10.1007/978-3-642-16256-5_11
   Bertran B, 2014, SCI COMPUT PROGRAM, V79, P39, DOI 10.1016/j.scico.2012.04.001
   Björnemo E, 2007, INT CONF ACOUST SPEE, P181
   Bryant BR, 2011, COMPUT SCI INF SYST, V8, P225, DOI 10.2298/CSIS110114012B
   Chandra TB, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1702
   Chang X., 1999, P 3T C WINT SIM SIM, V1
   Cheng C, 2017, IEEE COMMUN MAG, V55, P116, DOI 10.1109/MCOM.2017.1600522CM
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Dam T., 2003, the 1st International Conference on Embedded Networked Sensor Systems, P171, DOI DOI 10.1145/958491.958512
   Dantas P, 2013, INT WORK SOFTW ENG, P7, DOI 10.1109/SESENA.2013.6612258
   Demirkol I, 2006, IEEE COMMUN MAG, V44, P115, DOI 10.1109/MCOM.2006.1632658
   Di Ruscio D, 2012, IEEE SOFTWARE, V29, P78, DOI 10.1109/MS.2012.153
   Di Ruscio D, 2012, LECT NOTES COMPUT SC, V7212, P26, DOI 10.1007/978-3-642-28872-2_2
   Di Ruscio Davide, 2010, P 32 ACM IEEE INT C, V1, P85, DOI DOI 10.1145/1806799.1806816
   Doddapaneni K., 2012, 2012 Proceedings of Third International Workshop on Software Engineering for Sensor Network Applications (SESENA 2012), P1, DOI 10.1109/SESENA.2012.6225729
   Fuchs G, 2010, RNA INTERFERENCE AND VIRUSES, P89
   Goldsmith A., 2005, WIRELESS COMMUNICATI
   Gotzhein R, 2009, LECT NOTES COMPUT SC, V5719, P19, DOI 10.1007/978-3-642-04554-7_2
   Heinzelman WR, 2000, P 33 ANN HAW INT C S, V2, P10
   Hill JE, 2003, THESIS
   Huang C., 2003, PROC ACM WSNA, P115, DOI [10.1145/941350.941367, DOI 10.1145/941350.941367]
   International Organization for Standardization, 2011, ISO/IEC/IEEE 42010:2011 Systems and Software Engineering-Architecture Description
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Jacoub JK, 2011, PROCEEDINGS OF SENSORCOMM 2011, THE FIFTH INTERNATIONAL CONFERENCE ON SENSOR TECHNOLOGIES AND APPLICATIONS, P103
   Lorincz K, 2004, IEEE PERVAS COMPUT, V3, P16, DOI 10.1109/MPRV.2004.18
   Losilla F, 2007, LECT NOTES COMPUT SC, V4758, P179
   Maissa Y.B., 2012, PNSE'12 International Workshop on Petri Nets and Software Engineering, V851, P60
   Malavolta I., 2018, A4WSN MODELLING LANG
   Malavolta I., 2018, A4WSN PROGRAMMING FR
   Malavolta I., 2014, P 40 EUR C SER SOFTW
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Motta L. G., 2007, Intexto, V2, P1
   Mottola L, 2012, J INTERNET SERV APPL, V3, P31, DOI 10.1007/s13174-011-0046-7
   Mottola L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922656
   Mozumdar Mohammad Mostafizur Rahman, 2008, 2008 5th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks, P515, DOI 10.1109/SAHCN.2008.68
   Newport C, 2007, SIMUL-T SOC MOD SIM, V83, P643, DOI 10.1177/0037549707085632
   Olveczky P. C., 2006, Proceedings. 20th International Parallel and Distributed Processing Symposium (IEEE Cat. No.06TH8860)
   Pahlavan K., 2009, NETWORKING FUNDAMENT
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Pediaditakis D., 2010, P 3 INT ICST C SIM T, V53, P6
   Picco G. P., 2010, P FSE SDP WORKSH FUT
   RAPPAPORT TS, 1996, PRENTICE HALL COMMUN
   Rodrigues T, 2013, INT WORK SOFTW ENG, P43, DOI 10.1109/SESENA.2013.6612265
   Römer K, 2004, IEEE WIREL COMMUN, V11, P54, DOI 10.1109/MWC.2004.1368897
   Rose L., 2010, INT WORKSH MOD EV
   Samper L., 2006, P 1 INT C INT INT AD
   Seybold JS, 2005, INTRODUCTION TO RF PROPAGATION, P1, DOI 10.1002/0471743690
   Shimizu T, 2011, MOLECULAR- AND NANO-TUBES, P31, DOI 10.1007/978-1-4419-9443-1_3
   Stankovic J.A., 2004, ACM SIGBED REV, V1, P9, DOI DOI 10.1145/1121776.1121780
   Stanley-Marbell P., 2008, ESR200806 EINDH U TE
   Szyperski C., 1998, OBJECT ORIENTED PROG
   Varga A., 2008, An Overview of the Omnet++ Simulation Environment, P1
   Vicente-Chicote C, 2007, INT J COOP INF SYST, V16, P393, DOI 10.1142/S021884300700172X
   Ye W, 2004, IEEE ACM T NETWORK, V12, P493, DOI 10.1109/TNET.2004.828953
NR 60
TC 1
Z9 2
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD AUG
PY 2019
VL 18
IS 4
BP 2633
EP 2653
DI 10.1007/s10270-018-0687-0
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IJ0OR
UT WOS:000475599900011
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ciccozzi, F
   Malavolta, I
   Selic, B
AF Ciccozzi, Federico
   Malavolta, Ivano
   Selic, Bran
TI Execution of UML models: a systematic review of research and practice
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Review
DE UML; Model execution; Code generation; Model compilation; Model
   interpretation; Systematic review
AB Several research efforts from different areas have focused on the execution of UML models, resulting in a diverse and complex scientific body of knowledge. With this work, we aim at identifying, classifying, and evaluating existing solutions for the execution of UML models. We conducted a systematic review in which we selected 63 research studies and 19 tools among over 5400 entries by applying a systematic search and selection process. We defined a classification framework for characterizing solutions for UML model execution, and we applied it to the 82 selected entries. Finally, we analyzed and discussed the obtained data. From the analyzed data, we drew the following conclusions: (i) There is a growing scientific interest on UML model execution; (ii) solutions providing translational execution clearly outnumber interpretive solutions; (iii) model-level debugging is supported in very few cases; (iv) only a few research studies provide evidence of industrial use, with very limited empirical evaluations; (v) the most common limitation deals with coverage of the UML language. Based on these observations, we discuss potential research challenges and implications for the future of UML model execution. Our results provide a concise overview of states of the art and practice for UML model execution intended for use by both researchers and practitioners.
C1 [Ciccozzi, Federico] Malardalen Univ, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Selic, Bran] Malina Software Corp, Ottawa, ON, Canada.
C3 Malardalen University; Vrije Universiteit Amsterdam
RP Ciccozzi, F (corresponding author), Malardalen Univ, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
EM federico.ciccozzi@mdh.se; i.malavolta@vu.nl; selic@acm.org
RI Malavolta, Ivano/E-9018-2017; Selic, Bran/AAV-7565-2021
OI Selic, Bran/0000-0002-3703-8593; ciccozzi, federico/0000-0002-0401-1036
FU Knowledge Foundation through the SMARTCore project; Knowledge Foundation
   through the MOMENTUM project
FX This research was supported by the Knowledge Foundation through the
   SMARTCore (http://www.es.mdh.se/projects/377-SMARTCore) and MOMENTUM
   projects (http://www.es.mdh.se/projects/458-MOMENTUM).
CR Abouzahra A., 2005, P BEST PRACT MOD DRI, V5
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Ali NB, 2014, INT S EMP SOFTW ENG, P14
   Aljer A, 2003, THIRD INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P241, DOI 10.1109/CSD.2003.1207723
   [Anonymous], 2011, CATEGORICAL DATA ANA
   [Anonymous], 2014, BASICS QUALITATIVE R
   [Anonymous], 2011, Introduction to Embedded Systems-A Cyber-Physical Systems Approach
   [Anonymous], 2012, EXPT SOFTWARE ENG CO
   [Anonymous], P SFM
   Charfi A, 2010, DES AUT TEST EUROPE, P1313
   Ciccozzi F, 2018, INT C SOFTW ENG ICSE
   Ciccozzi F, 2013, INFORM SOFTWARE TECH, V55, P1085, DOI 10.1016/j.infsof.2012.07.014
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Franzosi Roberto., 2010, QUANTITATIVE NARRATI
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gotti S., 2016, 2016 INT C INFORM TE, DOI [DOI 10.1109/IT4OD.2016.7479251, 10.1109/ IT4OD.2016.7479251]
   Grandy H, 2008, LECT NOTES COMPUT SC, V5014, P165, DOI 10.1007/978-3-540-68237-0_13
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Hrischuk C., 1995, MASCOTS '95. Proceedings of the Third International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (Cat. No.95TH8028), P399, DOI 10.1109/MASCOT.1995.378659
   Hutchinson J., 2011, P ICSE
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laurent Y., 2013, SAC 13 THE28TH ANN A, P1095, DOI DOI 10.1145/2480362.2480569
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mayerhofer T., 2013, P SLE
   Mellor SJ, 1999, LECT NOTES COMPUT SC, V1618, P307
   Meyes S., 2006, MOST IMPORTANT C PLU
   Montesi F, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P13, DOI 10.1109/ECOWS.2007.19
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Potter Ben., 1996, INTRO FORMAL SPECIFI, V2nd
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steele Jr Guy L., 1990, COMMON LISP LANGUAGE
   Tatibouët J, 2014, LECT NOTES COMPUT SC, V8767, P133, DOI 10.1007/978-3-319-11653-2_9
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zurowska Karolina, 2015, Behavior Modeling - Foundations and Applications. International Workshops, BM-FA 2009-2014. Revised Selected Papers: LNCS 6368, P82, DOI 10.1007/978-3-319-21912-7_4
NR 50
TC 41
Z9 44
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2313
EP 2360
DI 10.1007/s10270-018-0675-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100033
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Daniel, G
   Sunyé, G
   Cabot, J
AF Daniel, Gwendal
   Sunye, Gerson
   Cabot, Jordi
TI Advanced prefetching and caching of models with PrefetchML
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Prefetching; MDE; DSL; Scalability; Persistence framework; NoSQL
AB Caching and prefetching techniques have been used for decades in database engines and file systems to improve the performance of I/O-intensive application. A prefetching algorithm typically benefits from the system's latencies by loading into main memory elements that will be needed in the future, speeding up data access. While these solutions can bring a significant improvement in terms of execution time, prefetching rules are often defined at the data level, making them hard to understand, maintain, and optimize. In addition, low-level prefetching and caching components are difficult to align with scalable model persistence frameworks because they are unaware of potential optimizations relying on the analysis of metamodel-level information and are less present in NoSQL databases, a common solution to store large models. To overcome this situation, we propose PrefetchML, a framework that executes prefetching and caching strategies over models. Our solution embeds a DSL to configure precisely the prefetching rules to follow and a monitoring component providing insights on how the prefetching execution is working to help designers optimize his performance plans. Our experiments show that PrefetchML is a suitable solution to improve query execution time on top of scalable model persistence frameworks. Tool support is fully available online as an open-source Eclipse plug-in.
C1 [Daniel, Gwendal; Sunye, Gerson] INRIA, AtlanMod Team, IMT Atlantique, 4 Rue Alfred Kastler, Nantes, France.
   [Daniel, Gwendal; Sunye, Gerson] LS2N, 4 Rue Alfred Kastler, Nantes, France.
   [Cabot, Jordi] UOC, ICREA, Ave Carl Friedrich Gauss 5, Castelldefels, Spain.
C3 Inria; IMT - Institut Mines-Telecom; IMT Atlantique; ICREA
RP Daniel, G (corresponding author), INRIA, AtlanMod Team, IMT Atlantique, 4 Rue Alfred Kastler, Nantes, France.; Daniel, G (corresponding author), LS2N, 4 Rue Alfred Kastler, Nantes, France.
EM gwendal.daniel@inria.fr; gerson.sunye@inria.fr; jordi.cabot@icrea.cat
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489; Daniel, Gwendal/0000-0003-0692-0628
FU Electronic Component Systems for European Leadership Joint Undertaking
   [737494]; Spanish government [TIN2016-75944-R]
FX This work has been partially funded by the Electronic Component Systems
   for European Leadership Joint Undertaking under Grant Agreement No.
   737494 (MegaM@Rt2 project) and the Spanish government (TIN2016-75944-R
   project).
CR [Anonymous], BLUEPR API
   [Anonymous], 2006, PROC 6 INT WORKSHOP
   [Anonymous], P 18 FASE C
   [Anonymous], MODISCO MODEL DRIVEN
   [Anonymous], GREML LANG
   [Anonymous], INFORMED PREFETCHING
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], 2008, REPORTS REVISED SELE, DOI DOI 10.1007/978-3-642-01648-6_6
   Azhar S., 2011, LEADERSHIP MANAGEMEN, V11, P241, DOI [10.1061/(ASCE)LM.1943-5630.0000127, DOI 10.1061/(ASCE)LM.1943-5630.0000127]
   Barmpis Konstantinos., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering, page, P6, DOI [10.1145/2487766.2487771, DOI 10.1145/2487766.2487771]
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Cao P., 1995, Performance Evaluation Review, V23, P188, DOI 10.1145/223586.223608
   Chou HT, 1986, ALGORITHMICA, V1, P311, DOI 10.1007/BF01840450
   Curewitz K. M., 1993, SIGMOD Record, V22, P257, DOI 10.1145/170036.170077
   Daniel Gwendal, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549343
   Daniel G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P318, DOI 10.1145/2976767.2976775
   Dimitrov Martin, 2013, 2013 IEEE International Conference on Big Data, P15, DOI 10.1109/BigData.2013.6691693
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Hartmann T, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P80, DOI 10.1109/MODELS.2015.7338238
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   KLAIBER AC, 1991, ACM COMP AR, V19, P43, DOI 10.1145/115953.115958
   Koegel M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P307, DOI 10.1145/1810295.1810364
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Pohjonen Risto., 2002, Proc. of PLEES, V2, P49
   Ruiz DS, 2015, LECT NOTES COMPUT SC, V9381, P467, DOI 10.1007/978-3-319-25264-3_35
   Smith A. J., 1978, ACM Transactions on Database Systems, V3, P223, DOI 10.1145/320263.320276
   Szarnyas G., 2017, Software & Systems Modeling, P1
   Zhang K, 2015, PROC VLDB ENDOW, V8, P1226, DOI 10.14778/2809974.2809984
   Zhu PF, 2015, LECT NOTES COMPUT SC, V9231, P1, DOI 10.1007/978-3-319-23216-4_1
NR 33
TC 9
Z9 9
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 1773
EP 1794
DI 10.1007/s10270-018-0671-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100012
DA 2024-07-18
ER

PT J
AU Obrenovic, N
   Lukovic, I
   Ristic, S
AF Obrenovic, Nikola
   Lukovic, Ivan
   Ristic, Sonja
TI Consolidation of database check constraints
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Database subschema consolidation; Check constraint collision;
   Implication problem; SMT solver
ID SATISFIABILITY
AB Independent modeling of various modules of an information system (IS), and consequently database subschemas, may result in formal or semantic conflicts between the modules being modeled. Such conflicts may cause collisions between the integrated database schema of a whole IS and the modeled subschemas. In our previous work, we have proposed criteria and algorithms for identifying and resolving such conflicts so as to provide a consolidation of database subschemas with the integrated database schema with respect to various database concepts, such as domains, relation schemes, primary key constraints and referential integrity constraints. In this paper, we propose a new approach and algorithms for identifying conflicts and testing consolidation of subschemas with the integrated database schema against check constraints. The proposed approach is based on satisfiability modulo theory (SMT) solvers. Hereby, we propose the integration of SMT solvers into our MDSD tool, aimed at supporting a database schema integration process.
C1 [Obrenovic, Nikola; Lukovic, Ivan; Ristic, Sonja] Univ Novi Sad, Fac Tech Sci, Trg Dositeja Obradovica 6, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Obrenovic, N (corresponding author), Univ Novi Sad, Fac Tech Sci, Trg Dositeja Obradovica 6, Novi Sad 21000, Serbia.
EM nikola.obrenovic@uns.ac.rs; ivan@uns.ac.rs; sdristic@uns.ac.rs
RI Ristić, Sonja/AAE-9824-2022; Ristić, Sonja/AFF-2147-2022; Lukovic,
   Ivan/ABF-3880-2021
OI Ristić, Sonja/0000-0003-0059-6062; Ristić, Sonja/0000-0003-0059-6062;
   Lukovic, Ivan/0000-0003-1319-488X; Obrenovic, Nikola/0000-0001-9554-3590
FU Ministry of Education, Science and Technological Development of the
   Republic of Serbia [III-44010]
FX Research presented in this paper was supported by the Ministry of
   Education, Science and Technological Development of the Republic of
   Serbia as a part of the Grant III-44010: "Intelligent Systems for
   Software Product Development and Business Support Based on Models."
CR [Anonymous], 2000, Log. J. IGPL
   Barrett C., 2012, SMT LIB STANDARD VER
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   BATINI C, 1986, COMPUT SURV, V18, P323, DOI 10.1145/27633.27634
   Beeri C., 1979, ACM Transactions on Database Systems, V4, P30, DOI 10.1145/320064.320066
   Bidoit N, 2007, ELECTRON NOTES THEOR, V174, P45, DOI 10.1016/j.entcs.2006.11.025
   Blanchette JC, 2013, J AUTOM REASONING, V51, P109, DOI 10.1007/s10817-013-9278-5
   BRY F, 1988, LECT NOTES COMPUT SC, V303, P488
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Celikovic M, 2012, COMPUT SCI INF SYST, V9, P1075, DOI 10.2298/CSIS120203034C
   Clavel M., 2010, EUR ASS SOFTW SCI TE, V24, DOI [10.14279/tuj.eceasst.24.334, DOI 10.14279/TUJ.ECEASST.24.334]
   Cok D. R., 2013, SMT LIB V2 LANGUAGE
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Date C. J., 2006, TYPES RELATIONAL MOD
   de Moura L, 2009, LECT NOTES COMPUT SC, V5902, P23, DOI 10.1007/978-3-642-10452-7_3
   Elmasri R., 2011, Database systems, V9
   Formica A, 2003, INFORM SYST, V28, P213, DOI 10.1016/S0306-4379(02)00010-8
   Fruhwirth Thom, 2008, Constraint Handling Rules. Current Research Topics, P1, DOI 10.1007/978-3-540-92243-8_1
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Garcia-Molina Hector, 2008, DATABASE SYSTEMS COM
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Li WS, 2000, DATA KNOWL ENG, V33, P49, DOI 10.1016/S0169-023X(99)00044-0
   Lukovi I, 1993, THESIS
   Lukovi I., 1996, REV RES, V26, P49
   Lukovic I, 2007, SOFTWARE PRACT EXPER, V37, P1621, DOI 10.1002/spe.820
   Lukovic I, 2010, COMPUT SCI INF SYST, V7, P359, DOI 10.2298/CSIS1002359L
   Lukovic Ivan., 2006, Novi Sad Journal of Mathematics, V36, P115
   Maric F, 2009, J AUTOM REASONING, V43, P81, DOI 10.1007/s10817-009-9127-8
   Mendelson E., 2015, Introduction to Mathematical Logic, V6, DOI [10.1201/b18519, DOI 10.1201/B18519]
   Mogin P., 2004, DATABASE DESIGN PRIN
   Mong Li Lee, 1997, Conceptual Modeling - ER '97. 16th International Conference on Conceptual Modeling. Proceedings, P394
   Obrenovi N., 2014, P 4 INT C INF SOC TE, P210, DOI [10.13140/2.1.4111.0082, DOI 10.13140/2.1.4111.0082]
   Obrenovic N, 2012, COMPUT INFORM, V31, P1045
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Risti S, 2003, THESIS
   Ristic S., 2013, P 6 BALK C INF BCI 1, P114, DOI DOI 10.1145/2490257.2490265
   Ristic S, 2014, COMPUT SCI INF SYST, V11, P679, DOI 10.2298/CSIS140216037R
NR 39
TC 1
Z9 1
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUN
PY 2019
VL 18
IS 3
BP 2111
EP 2135
DI 10.1007/s10270-017-0637-2
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ6XP
UT WOS:000468996100026
DA 2024-07-18
ER

PT J
AU Awadid, A
   Nurcan, S
AF Awadid, Afef
   Nurcan, Selmin
TI Consistency requirements in business process modeling: a thorough
   overview
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Business Process Modeling, Development,
   and Support / 21st International Conference on Exploring Modeling
   Methods for Systems Analysis and Design Held at Conference on Advanced
   Information Systems Engineering
CY JUN 13-14, 2016
CL Ljubljana, SLOVENIA
DE Business process modeling; Consistency requirements; Inter-model
   consistency; Systematic literature review; Context-awareness; Map
   formalism
ID FRAMEWORK; VARIABILITY; METHODOLOGY; MANAGEMENT; REVIEWS
AB The field of business process modeling has been beset by inter-model consistency problems which are mainly due to the existence of multiple variants of the same business process, for instance when models have been produced by different actors, or through the time by a same (or different) actor(s), as well as the possibility of its modeling from discrete and complementary perspectives (using different lenses). Accordingly, our overall aim in this paper is to provide a thorough overview of consistency requirements in business process modeling, which is strongly needed not only for the sake of a comprehensive investigation of this challenging subject, but also for the sake of empowering significant contributions to it. In order to do so, we opted for a systematic literature review of consistency among business process models as starting point and basis to attain the intended overview and to guide our contributions in this field.
C1 [Awadid, Afef; Nurcan, Selmin] Univ Paris 1 Pantheon Sorbonne, CRI, Paris, France.
RP Awadid, A (corresponding author), Univ Paris 1 Pantheon Sorbonne, CRI, Paris, France.
EM afef.awadid@malix.univ-paris1.fr; nurcan@univ-paris1.fr
RI Awadid, Afef/KEE-8935-2024
CR Akobeng AK, 2005, ARCH DIS CHILD, V90, P845, DOI 10.1136/adc.2004.058230
   [Anonymous], 2011, 42010 IEEE
   [Anonymous], P INT C RES CHALL IN
   Awadid Afef, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549306
   Awadid A, 2016, LECT NOTES BUS INF P, V248, P175, DOI 10.1007/978-3-319-39429-9_12
   Barrios J, 2004, BIOMED SCI INSTRUM, V3084, P3
   Bhave A, 2011, ACM IEEE INT CONF CY, P151, DOI 10.1109/ICCPS.2011.17
   Bork D., 2014, ICSOFT PT 2014, pIS
   Bork D, 2015, LECT NOTES ARTIF INT, V9403, P177, DOI 10.1007/978-3-319-25159-2_16
   BRANCO ALMEIDA CASTELO, 2014, MANAGING CONSISTENCY
   Branco MC, 2014, SOFTW SYST MODEL, V13, P913, DOI 10.1007/s10270-013-0318-8
   Brandenburg Brandenburg M M, CONTENT ANAL LIT VAL, P65
   Brooks C., 2008, UCBEECS200839
   Broy M, 2010, P IEEE, V98, P526, DOI 10.1109/JPROC.2009.2037771
   Chapurlat V., 2007, THESIS
   Chen Li, 2008, 2008 IEEE International Conference on Web Services (ICWS), P45, DOI 10.1109/ICWS.2008.13
   Chen-Burger Y.H., 2001, INT JOINT C ART INT
   Cheng-Leong A, 1999, INT J PROD RES, V37, P3839, DOI 10.1080/002075499189790
   Cicchetti A., 2012, ELECT COMMUNICATIONS, V50
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Daoudi F., 2007, Software Process Improvement and Practice, V12, P51, DOI 10.1002/spip.304
   de Medeiros AKA, 2008, DATA KNOWL ENG, V64, P55, DOI 10.1016/j.datak.2007.06.010
   Decker G, 2007, LECT NOTES COMPUT SC, V4495, P81
   Delen D, 2003, COMPUT IND, V51, P257, DOI 10.1016/S0166-3615(03)00063-0
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dijkman R, 2011, INFORM SOFTWARE TECH, V53, P937, DOI 10.1016/j.infsof.2011.04.001
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Engels G., 2001, Software Engineering Notes, V26, P186, DOI 10.1145/503271.503235
   Fang X., 2015, INT J U E SERV SCI T, V8, P25
   Feiler P. H., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P28, DOI 10.1109/SPCON.1993.236824
   Gerth Christian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P57, DOI 10.1109/SCC.2010.38
   Governatori G., 2008, HDB RES BPM, P426
   Gulden J., 2010, 22 INT C ADV INF SYS
   Hallerbach A, 2010, INT HANDB INFORM SYS, P237, DOI 10.1007/978-3-642-00416-2_11
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Hammer M., 1993, LE REENGINEERING, V93
   Johannsen F., 2014, TESTING IMPACT WAND
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Koehler J, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P96, DOI 10.1109/EDOC.2002.1137700
   Koliadis G., 2006, COMBINED APPROACH SU
   Koliadis G, 2007, P IEEE I C SERV COMP, P731
   Koubarakis M, 2002, INFORM SYST, V27, P299, DOI 10.1016/S0306-4379(01)00055-2
   Küster J, 2016, SOFTW SYST MODEL, V15, P1207, DOI 10.1007/s10270-015-0453-5
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Leist S., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1546, DOI 10.1145/1141277.1141635
   Letsholo K.J., 2014, International Journal of Services Computing, V2, P11
   Lu R, 2007, LECT NOTES COMPUT SC, V4801, P165
   Lu RP, 2009, LECT NOTES BUS INF P, V21, P145
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Martens A, 2005, 2005 IEEE International Conference on e-Technology, e-Commerce and e-Service, Proceedings, P60, DOI 10.1109/EEE.2005.53
   Mendling J., 2005, WORKFLOW HDB FUTURE, P185
   Milani F., 2013, ARXIV13111322
   Muskens J, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P169
   Niemann M, 2012, COMPUT IND, V63, P168, DOI 10.1016/j.compind.2011.11.002
   Nurcan S., 2012, THESIS
   Pascalau E., 2010, BUS PROC MAN WORKSH, P289
   Pascalau E, 2010, LECT NOTES BUS INF P, V67, P91
   Persson Magnus, 2013, 2013 Proceedings of the International Conference on Embedded Software (EMSOFT), DOI 10.1109/EMSOFT.2013.6658588
   Peterson RS, 2003, J APPL PSYCHOL, V88, P795, DOI 10.1037/0021-9010.88.5.795
   Qureshi T.N., 2012, ENHANCING MODEL BASE
   Rastrepkina M, 2010, LECT NOTES BUS INF, V67, P106
   Rolland C, 1998, LECT NOTES COMPUT SC, V1413, P1, DOI 10.1007/BFb0054216
   Rolland C., 1997, P INFORMATIQUE ORGAN
   Rosemann M., 2006, P INT C BUS PROC MOD, P149
   Rosemann M., 2006, UNDERSTANDING CONTEX
   Russell N., 2006, APCCM 06, P95
   Saidani O, 2006, WORKSH BUS PROC MOD, P111
   Saidani O., 2007, 8 WORKSH BUS PROC MO, V7, P1
   Sandkuhl K., 2014, ENTERPRISE MODELING, V309
   Shunk DL, 2003, COMPUT IND ENG, V45, P167, DOI 10.1016/S0360-8352(03)00024-X
   Smirnov S, 2010, LECT NOTES COMPUT SC, V6470, P1, DOI 10.1007/978-3-642-17358-5_1
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Van der Aalst W.M., 2006, P BUS PROC MAN BPM, P129
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   Wei Song, 2013, 2013 IEEE International Conference on Services Computing (SCC), P9, DOI 10.1109/SCC.2013.47
   Weidlich M., 2010, 22 INT C ADV INF SYS
   Weidlich M, 2012, INFORM SYST, V37, P80, DOI 10.1016/j.is.2010.12.004
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Wörzberger R, 2008, 17TH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURES FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P251, DOI 10.1109/WETICE.2008.9
   Xianwen Fang, 2013, Przeglad Elektrotechniczny, V89, P171
   Xing JC, 2013, LECT NOTES BUS INF P, V159, P39
   Yan ZQ, 2012, INFORM SOFTWARE TECH, V54, P380, DOI 10.1016/j.infsof.2011.11.005
   Yousfi A, 2015, COMPUT IND, V70, P13, DOI 10.1016/j.compind.2015.02.003
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zemni MA, 2014, IEEE INT C ENG COMP, P194, DOI 10.1109/ICECCS.2014.35
   Zimmermann A, 2007, LECT NOTES ARTIF INT, V4635, P558
   [No title captured]
NR 91
TC 9
Z9 11
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD APR
PY 2019
VL 18
IS 2
BP 1097
EP 1115
DI 10.1007/s10270-017-0629-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA HS7AM
UT WOS:000464022400017
DA 2024-07-18
ER

PT J
AU Khan, AM
   Mallet, F
   Rashid, M
AF Khan, Aamir M.
   Mallet, Frederic
   Rashid, Muhammad
TI A framework to specify system requirements using natural interpretation
   of UML/MARTE diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE FSL; Graphical properties; UML; MARTE; CCSL; Modeling; Embedded systems
ID CLOCK CONSTRAINTS; SPECIFICATION; GENERATION
AB The ever-increasing design complexity of embedded systems is constantly pressing the demand for more abstract design levels and possible methods for automatic verification and synthesis. Transforming a text-based user requirements document into semantically sound models is always difficult and error-prone as mostly these requirements are vague and improperly documented. This paper presents a framework to specify textual requirements graphically in standard modeling formalisms like UML and MARTE in the form of temporal and logical patterns. The underlying formal semantics of these graphical models allow to eliminate ambiguity in specifications and automatic design verification at different abstraction levels using these patterns. The semantics of these operators/patterns are presented formally as state automatons and a comparison is made to the existing CCSL relational operators. To reap the benefits of MDE, a software plugin TemLoPAC is presented as part of the framework to transform the graphical patterns into CCSL and Verilog-based observers.
C1 [Khan, Aamir M.] Univ Buraimi, Coll Engn, Buraimi, Oman.
   [Mallet, Frederic] Univ Cote Azur, CNRS, INRIA, I3S, Sophia Antipolis, France.
   [Rashid, Muhammad] Umm Al Qura Univ, Coll Comp & Informat Syst, Mecca, Saudi Arabia.
C3 Universite Cote d'Azur; Centre National de la Recherche Scientifique
   (CNRS); Inria; Umm Al Qura University
RP Khan, AM (corresponding author), Univ Buraimi, Coll Engn, Buraimi, Oman.
EM Aamir.m@uob.edu.om; Frederic.Mallet@unice.fr; mfelahi@uqu.edu.sa
RI Mallet, Frédéric/H-3942-2011; Mallet, Frederic/HKW-6782-2023; Rashid,
   Muhammad/JHS-8861-2023; Rashid, Muhammad/H-3480-2018
OI Mallet, Frédéric/0000-0002-9088-9821; Rashid,
   Muhammad/0009-0005-9454-3819; Rashid, Muhammad/0000-0001-5852-1296
FU NSTIP (National Science Technology and Innovative Plan), Saudi Arabia,
   under the Track 'Software Engineering and Innovated Systems
   [13-INF761-10]
FX This project is partially funded by NSTIP (National Science Technology
   and Innovative Plan), Saudi Arabia, under the Track 'Software
   Engineering and Innovated Systems' bearing the project code
   '13-INF761-10.'
CR Abrial J.-R., 1996, Formal Methods for Industrial Applications. Specifying and Programming the Steam Boiler Control, P1, DOI 10.1007/BFb0027228
   Aceto L, 1998, LECT NOTES COMPUT SC, V1384, P263, DOI 10.1007/BFb0054177
   Al-Lail M, 2014, INT CONF QUAL SOFTW, P196, DOI 10.1109/QSIC.2014.56
   Alfonso A, 2004, PROC INT CONF SOFTW, P168, DOI 10.1109/ICSE.2004.1317439
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Andre Charles, 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P98, DOI 10.1109/SIES.2010.5551372
   André C, 2007, LECT NOTES COMPUT SC, V4735, P559
   André C, 2010, SYNTHESIS OF EMBEDDED SOFTWARE: FRAMEWORKS AND METHODOLOGIES FOR CORRECTNESS BY CONSTRUCTION, P201, DOI 10.1007/978-1-4419-6400-7_7
   [Anonymous], QUEST ADV SIM
   [Anonymous], 2009, Res. Rep. RR-6925
   [Anonymous], RUNT VER COMM RUNT V
   [Anonymous], 2019, OMG UML PROF MARTE
   [Anonymous], ECL MOD FRAM EMF
   [Anonymous], 2010, 18502010 IEEE
   [Anonymous], UN MOD LANG UML SUP
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Autili M, 2008, ELECTRON NOTES THEOR, V211, P147, DOI 10.1016/j.entcs.2008.04.037
   Baresi L, 2005, MODELING VALIDATION, P273, DOI [10.1007/3-540-27071-X_13, DOI 10.1007/3-540-27071-X_13]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bellini P, 2009, J SYST SOFTWARE, V82, P183, DOI 10.1016/j.jss.2008.06.041
   Bensalem S, 2005, ELECTRON NOTES THEOR, V113, P23, DOI 10.1016/j.entcs.2004.01.036
   Chai M, 2014, LECT NOTES COMPUT SC, V8734, P48, DOI 10.1007/978-3-319-11164-3_5
   Clarke EM, 1999, MODEL CHECKING, P1
   Cohen B, 2010, SYSTEM VERILOG ASSER
   Deantoni J., TIMESQUARE LOGICAL T
   Di Guglielmo L, 2010, PR IEEE COMP DESIGN, P468, DOI 10.1109/ICCD.2010.5647654
   Drechsler R., 2012, 2012 Forum on Specification & Design Languages (FDL), P53
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Gascon R., 2011, Proceedings of the 2011 Eighteenth International Symposium on Temporal Representation and Reasoning (TIME 2011), P141, DOI 10.1109/TIME.2011.10
   Halbwachs Nicolas., 1994, Algebraic Methodology and Software Technology (AMAST'93), P83, DOI DOI 10.1007/978-1-4471-3227-1_8
   Harris IG, 2012, DES AUT CON, P1252
   Haxthausen AE, 2014, INT J SOFTW TOOLS TE, V16, P713, DOI 10.1007/s10009-013-0295-9
   Huafeng Yu, 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P21, DOI 10.1109/MEMCOD.2011.5970507
   Kaufmann M., 2008, SYSMOD THE SYSTEMS M, P83
   Khan A. M., TEMLOPAC TEMPORAL LO
   Khan A. M., SEMANTICS GRAPHICAL
   Khan AM, 2016, INT SYM IND EMBED
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kugler H, 2005, LECT NOTES COMPUT SC, V3440, P445
   Le Guernic P, 2015, PROCEEDINGS 2015 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, P95, DOI 10.1109/TASE.2015.21
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Mallet F, 2008, RR6545 INRIA
   Mallet F., 2015, 1 INT SUMM SCH METH, P26, DOI [10.1007/978-3-658-09994-7_2, DOI 10.1007/978-3-658-09994-7_2]
   Mallet F, 2015, SCI COMPUT PROGRAM, V106, P78, DOI 10.1016/j.scico.2015.03.001
   Mallet F, 2008, INNOV SYST SOFTW ENG, V4, P309, DOI 10.1007/s11334-008-0055-2
   Panda PR, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P75, DOI 10.1109/ISSS.2001.957916
   Peraldi-Frati Marie-Agnes, 2011, 2011 Proceedings of IEEE 14th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC 2011), P50, DOI 10.1109/ISORC.2011.16
   Peters J, 2014, IEEE INT C ENG COMP, P116, DOI 10.1109/ICECCS.2014.24
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ribeiro F, 2016, 2016 IEEE 19 INT S R, P36, DOI [10.1109/ISORW.2016.15, DOI 10.1109/ISORW.2016.15]
   Ribeiro FGC, 2018, SOFTW SYST MODEL, V17, P343, DOI 10.1007/s10270-016-0525-1
   Rigo S, 2011, ELECTRONIC SYSTEM LEVEL DESIGN: AN OPEN-SOURCE APPROACH, P1, DOI 10.1007/978-1-4020-9940-3
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Smith RL, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1109/ICSE.2002.1007952
   Soeken Mathias, 2015, FORMAL SPECIFICATION, DOI [10.1007/978-3-319-08699-6, DOI 10.1007/978-3-319-08699-6]
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Suryadevara J, 2014, WIND TURBINE SYSTEM, P229, DOI [10.1007/978-3-319-05416-2_15, DOI 10.1007/978-3-319-05416-2_15]
   Suryadevara J., 2013, THESIS
   Suryadevara J, 2013, LECT NOTES COMPUT SC, V8137, P1, DOI 10.1007/978-3-642-40561-7_1
   Walter S, 2016, 2016 IEEE 19 INT S R, P28, DOI [10.1109/ISORW.2016.14, DOI 10.1109/ISORW.2016.14]
   Watterson C, 2007, IET SOFTW, V1, P172, DOI 10.1049/iet-sen:20060076
   Wile B., 2005, Comprehensive Functional Verification: The Complete Industry Cycle
   Xiaoshan Li, 2006, 11th IEEE International Conference on Engineering of Complex Computer Systems, DOI 10.1109/ICECCS.2006.1690356
   Zhang PC, 2009, IEEE INT CONF AUTOM, P500, DOI 10.1109/ASE.2009.56
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
NR 66
TC 2
Z9 3
U1 5
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 11
EP 37
DI 10.1007/s10270-017-0588-7
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ross, JA
   Murashkin, A
   Liang, JH
   Antkiewicz, M
   Czarnecki, K
AF Ross, Jordan A.
   Murashkin, Alexandr
   Liang, Jia Hui
   Antkiewicz, Michal
   Czarnecki, Krzysztof
TI Synthesis and exploration of multi-level, multi-perspective
   architectures of automotive embedded systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Architecture synthesis; Multi-level architectures; Multi-perspective
   architectures; E/E architecture; Architecture optimization; Candidate
   architectures; Early design
ID REDUNDANCY ALLOCATION
AB In industry, evaluating candidate architectures for automotive embedded systems is routinely done during the design process. Today's engineers, however, are limited in the number of candidates that they are able to evaluate in order to find the optimal architectures. This limitation results from the difficulty in defining the candidates as it is a mostly manual process. In this work, we propose a way to synthesize multi-level, multi-perspective candidate architectures and to explore them across the different layers and perspectives. Using a reference model similar to the EAST-ADL domain model but with a focus on early design, we explore the candidate architectures for two case studies: an automotive power window system and the central door locking system. Further, we provide a comprehensive set of question templates, based on the different layers and perspectives, that engineers can ask to synthesize only the candidates relevant to their task at hand. Finally, using the modeling language Clafer, which is supported by automated backend reasoners, we show that it is possible to synthesize and explore optimal candidate architectures for two highly configurable automotive sub-systems.
C1 [Ross, Jordan A.; Liang, Jia Hui; Antkiewicz, Michal] Univ Waterloo, Elect & Comp Engn Dept, Waterloo, ON, Canada.
   [Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Murashkin, Alexandr] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 University of Waterloo; University of Waterloo; University of Waterloo
RP Ross, JA (corresponding author), Univ Waterloo, Elect & Comp Engn Dept, Waterloo, ON, Canada.
EM j25ross@gsd.uwaterloo.ca; amurashk@gsd.uwaterloo.ca;
   jliang@gsd.uwaterloo.ca; mantkiew@gsd.uwaterloo.ca;
   kczarnec@gsd.uwaterloo.ca
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   [Anonymous], 2014, 6241 LINA CNRS UMR
   Antkiewicz M, 2013, SOFTW PROD LIN C
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Brandt L, 2012, DS 70
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Coit DW, 1998, IEEE T RELIAB, V47, P79, DOI 10.1109/24.690912
   Coit DW, 1996, COMPUT OPER RES, V23, P515, DOI 10.1016/0305-0548(95)00056-9
   Cuenot P, 2007, IEEE INT C ENG COMP, P353, DOI 10.1109/ICECCS.2007.28
   Dave BP, 1998, IEEE T COMPUT AID D, V17, P900, DOI 10.1109/43.728913
   Davis RI, 2007, REAL-TIME SYST, V35, P239, DOI 10.1007/s11241-007-9012-7
   Eunsuk Kang, 2010, Foundations of Computer Software. Modeling, Development, and Verification of Adaptive Systems. 16th Monterey Workshop 2010. Revised Selected Papers, P33, DOI 10.1007/978-3-642-21292-5_3
   Feiler P, 2007, CMUSEI2007TN010 CARN
   Florentz B, 2006, LECT NOTES COMPUT SC, V4214, P145
   Glass M, 2008, 2008 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION, PROCEEDINGS, P74, DOI 10.1109/ICSAMOS.2008.4664849
   GRAF S, 2014, P DATE, V7, P1
   ISO, 2015, 1798762 ISODIS
   Jackson D, 2009, GUIDED IMPROVEMENT A
   Kabsu Han, 2012, 2012 International Conference on Information Networking (ICOIN 2012), P188, DOI 10.1109/ICOIN.2012.6164375
   Kang K.C., 1990, CMUSEI90TR021
   Kugele S., 2014, P 6 INT WORKSH CONST, P18, DOI [10.1145/2593735.2593739, DOI 10.1145/2593735.2593739]
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Lin CW, 2015, IEEE T COMPUT AID D, V34, P1730, DOI 10.1109/TCAD.2015.2448680
   Meedeniya I., 2011, QOSAISARCS, P85
   Meedeniya I, 2011, J SYST SOFTWARE, V84, P835, DOI 10.1016/j.jss.2011.01.004
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Meedeniya Indika, 2012, THESIS
   Montgomery J., 2010, E-Science 2010. Proceedings Sixth IEEE International Conference on E-Science Workshops, P104, DOI 10.1109/eScienceW.2010.26
   Murashkin A, 2014, THESIS
   Murashkin A, 2013, SOFTW PROD LIN C
   Nicholson M, 1997, EMERGENCE ARCHITECTU
   Ross J, 2016, CASE STUDIES E E ARC
   Schauffele J., 2016, SAE 2016 WORLD C EXH
   Voss S, 2016, 2016010012 SAE, DOI [10.4271/2016-01-0012, DOI 10.4271/2016-01-0012]
   Voss S, 2013, 2013 20TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2013), P100, DOI 10.1109/ECBS.2013.23
   Zeller M, 2013, J SYST ARCHITECT, V59, P1067, DOI 10.1016/j.sysarc.2012.11.003
NR 37
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2019
VL 18
IS 1
BP 739
EP 767
DI 10.1007/s10270-017-0592-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HN1GA
UT WOS:000459934300029
DA 2024-07-18
ER

PT J
AU Jacobs, J
   Simpson, A
AF Jacobs, Jaco
   Simpson, Andrew
TI On the formal interpretation and behavioural consistency checking of
   SysML blocks
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE SysML; CSP; State machines; Activities; Blocks
AB The Systems Modeling Language (SysML) is a semi-formal, graphical modelling language used in the specification and design of systems. We describe how Communicating Sequential Processes (CSP) and its associated refinement checker, FDR3, may be used to underpin an approach that facilitates the refinement checking of the behavioural consistency of SysML diagrams. We achieve this by utilising CSP as a semantic domain for reasoning about SysML behavioural aspects: activities and state machines are given a formal, process-algebraic semantics. These behaviours execute within the context of the structural diagrams to which they relate, and this is reflected in the CSP descriptions that depict their characteristic patterns of interaction. We describe how CSP and FDR3 can be used in conjunction with SysML in a formal, top-down approach to systems engineering. Moreover, the compositionality afforded by CSP alleviates the state space explosion problem frequently encountered with complex formal models and complements the top-down approach of SysML. Typically, a system is composed from constituent systems using the concept of blocks. SysML permits two alternative interpretations with regard to the behaviour of the resulting composition. We argue that the use of a process-algebraic formalism enables us to explore the relationships between these interpretations in a more rigorous fashion than would otherwise be the case.
C1 [Jacobs, Jaco; Simpson, Andrew] Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
C3 University of Oxford
RP Simpson, A (corresponding author), Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM Jaco.Jaobs@cs.ox.ac.uk; Andrew.Simpson@cs.ox.ac.uk
OI Simpson, Andrew/0000-0003-3597-2232
CR Abdelhalim I., 2012, INT J SOFTW TOOLS TE, V15, P375
   Abdelhalim I, 2011, LECT NOTES COMPUT SC, V6991, P33, DOI 10.1007/978-3-642-24559-6_5
   Andre E., 2015, ADV INTELLIGENT SYST, V326, P473
   [Anonymous], 2008, A Practical Guide To SysML: The Systems Modeling Language
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], LECT NOTES COMPUTER
   Bolton C, 2000, INT FED INFO PROC, V49, P163
   Choppy Christine, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI [10.1145/1921532.1921561, DOI 10.1145/1921532.1921561]
   Davies J.W.M., 2002, ELECT NOTES THEORET, V70, P217
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Hoare CAR., 1985, Communicating Sequential Processes
   Jacobs J., 2015, P 8 BRAZ S SOFTW COM
   Jacobs J., 2015, P 3 INT WORKSH FORM, V476, P1
   Jacobs J, 2015, LECT NOTES COMPUT SC, V8938, P71, DOI 10.1007/978-3-319-15201-1_5
   Jacobs J, 2013, LECT NOTES COMPUT SC, V8144, P265, DOI 10.1007/978-3-642-41202-8_18
   Ng MY, 2003, I C SOFTW ENG FORM M, P138
   Nianhua Yang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P369, DOI 10.1109/QSIC.2010.26
   Object Management Group, 2012, SYST MOD LANG SPEC V
   Object Management Group, 2011, UN MOD LANG SPEC VER
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Sun J, 2008, COMM COM INF SC, V17, P307
   Wood J., 2012, PHASE ONE PRELIMINAR, P1, DOI DOI 10.1109/SYSOSE.2012.6384144
   Xu D, 2009, PROCEEDINGS OF THE 8TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, P1035, DOI 10.1109/ICIS.2009.107
   Xu D, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 2, PROCEEDINGS, P450, DOI 10.1109/ISCSCT.2008.379
   Yeung WL, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P176, DOI 10.1109/APSEC.2005.70
   Zhang SH, 2010, BMC SYST BIOL, V4, DOI 10.1186/1752-0509-4-S2-S10
NR 26
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2017
VL 16
IS 4
BP 1145
EP 1178
DI 10.1007/s10270-015-0511-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT3DS
UT WOS:000423027800010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bonifácio, R
   Borba, P
   Ferraz, C
   Accioly, P
AF Bonifacio, Rodrigo
   Borba, Paulo
   Ferraz, Cristiano
   Accioly, Paola
TI Empirical assessment of two approaches for specifying software product
   line use case scenarios
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Usage scenarios; Requirements engineering; Software modularity; Software
   product lines; Experimentation in software engineering
ID PERSISTENCE
AB Modularity benefits, including the independent maintenance and comprehension of individual modules, have been widely advocated. However, empirical assessments to investigate those benefits have mostly focused on source code, and thus, the relevance of modularity to earlier artifacts is still not so clear (such as requirements and design models). In this paper, we use a multimethod technique, including designed experiments, to empirically evaluate the benefits of modularity in the context of two approaches for specifying product line use case scenarios: PLUSS and MSVCM. The first uses an annotative approach for specifying variability, whereas the second relies on aspect-oriented constructs for separating common and variant scenario specifications. After evaluating these approaches through the specifications of several systems, we find out that MSVCM reduces feature scattering and improves scenario cohesion. These results suggest that evolving a product line specification using MSVCM requires only localized changes. On the other hand, the results of six experiments reveal that MSVCM requires more time to derive the product line specifications and, contrasting with the modularity results, reduces the time to evolve a product line specification only when the subjects have been well trained and are used to the task of evolving product line specifications.
C1 [Bonifacio, Rodrigo] Univ Brasilia, Dept Comp Sci, Brasilia, DF, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, Informat Ctr, Software Dev, Recife, PE, Brazil.
   [Ferraz, Cristiano] Univ Fed Pernambuco, Dept Stat, Recife, PE, Brazil.
C3 Universidade de Brasilia; Universidade Federal de Pernambuco;
   Universidade Federal de Pernambuco
RP Bonifácio, R (corresponding author), Univ Brasilia, Dept Comp Sci, Brasilia, DF, Brazil.
EM rbonifacio@cic.unb.br; phmb@cin.ufpe.br; cferraz@de.ufpe.br;
   prga@cin.ufpe.br
RI Borba, Paulo/C-5617-2013; Ferraz, Cristiano/AGY-2930-2022; Bonifacio,
   Rodrigo/B-3450-2014
OI Borba, Paulo/0000-0002-0381-2843; Ferraz, Cristiano/0000-0002-6838-6734;
   Bonifacio, Rodrigo/0000-0002-2380-2829
FU National Institute of Science and Technology for Software Engineering
   [INES] - CNPq; FACEPE [573964/2008-4, APQ-1037-1.03/08];  [CNPq CT-INFO
   17/2007]
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering [INES (http://www.ines.org.br],
   funded by CNPq and FACEPE, Grants 573964/2008-4 and APQ-1037-1.03/08.
   The first author is supported by the Grants CNPq CT-INFO 17/2007.
CR Alferez Mauricio, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P779
   Alferez M., 2009, 2 INT C SOFTW LANG E
   Alférez M, 2014, REQUIR ENG, V19, P355, DOI 10.1007/s00766-013-0184-5
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bertolino A., 2003, Software Engineering Notes, V28, P355, DOI 10.1145/949952.940120
   Bonifacio R, 2008, EARL ASP WORKSH AOSD
   Bonifácio R, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P125
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Borenstein M., 2009, INTRO META ANAL
   Box G. E. P., 2004, STAT EXPT DESIGN INN
   Chaudhuri S., 2009, MICR C MAN SYST
   Chitchyan R, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P149
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Eaddy M., 2008, THESIS
   Eaddy M., 2007, 1 WORKSH ASS CONT MO
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Eriksson M, 2009, J SYST SOFTWARE, V82, P435, DOI 10.1016/j.jss.2008.07.046
   Eriksson M, 2006, COMMUN ACM, V49, P49, DOI 10.1145/1183236.1183265
   Everitt B.S., 2006, HDB STAT ANAL USING
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   Garcia A., 2005, AOSD 05, P3
   Gheyi Rohit., 2006, 1st Alloy workshop, P71
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Greenwood P, 2007, 21 EUR C OBJ OR PROG
   Group Z, 2009, OP C MAN SYST
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kienzle J., 2009, Crisis management systems
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Konstantopoulos S., 2009, HDB RES SYNTHESIS ME, V2nd, P279
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Lagaisse B., 2006, CW438 KATH U LEUV DE
   Lemos OAL, 2012, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2012.6227163
   Lima Lucas, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P279, DOI 10.1109/ESEM.2009.5315980
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2743, P2
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K., ESHOP PRODUCT LINE
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Ramsey F.L., 1997, STAT SLEUTH COURSE M
   Sampaio Americo, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P166
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Whittle J, 2004, IEE P-SOFTW, V151, P157, DOI 10.1049/ip-sen:20040921
   Whittle J, 2007, LECT NOTES COMPUT SC, V4735, P514
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   [No title captured]
NR 67
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 97
EP 123
DI 10.1007/s10270-015-0471-3
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500009
DA 2024-07-18
ER

PT J
AU Heinrich, R
   Merkle, P
   Henss, J
   Paech, B
AF Heinrich, Robert
   Merkle, Philipp
   Henss, Jorg
   Paech, Barbara
TI Integrating business process simulation and information system
   simulation for performance prediction
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Business process; Information system; Alignment; Performance
ID PALLADIO COMPONENT MODEL
AB Business process (BP) designs and enterprise information system (IS) designs are often not well aligned. Missing alignment may result in performance problems at run-time, such as large process execution time or overloaded IS resources. The complex interrelations between BPs and ISs are not adequately understood and considered in development so far. Simulation is a promising approach to predict performance of both BP and IS designs. Based on prediction results, design alternatives can be compared and verified against requirements. Thus, BP and IS designs can be aligned to improve performance. In current simulation approaches, BP simulation and IS simulation are not adequately integrated. This results in limited prediction accuracy due to neglected interrelations between the BP and the IS in simulation. In this paper, we present the novel approach Integrated Business IT Impact Simulation (IntBIIS) to adequately reflect the mutual impact between BPs and ISs in simulation. Three types of mutual impact between BPs and ISs in terms of performance are specified. We discuss several solution alternatives to predict the impact of a BP on the performance of ISs and vice versa. It is argued that an integrated simulation of BPs and ISs is best suited to reflect their interrelations. We propose novel concepts for continuous modeling and integrated simulation. IntBIIS is implemented by extending the Palladio tool chain with BP simulation concepts. In a real-life case study with a BP and IS from practice, we validate the feasibility of IntBIIS and discuss the practicability of the corresponding tool support.
C1 [Heinrich, Robert] Karlsruhe Inst Technol, Continuous Qual Engn Res Grp, Software Design & Qual SDQ Chair, Karlsruhe, Germany.
   [Merkle, Philipp; Henss, Jorg] Karlsruhe Inst Technol, SDQ Grp, Karlsruhe, Germany.
   [Paech, Barbara] Heidelberg Univ, Software Engn, Heidelberg, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Helmholtz
   Association; Karlsruhe Institute of Technology; Ruprecht Karls
   University Heidelberg
RP Heinrich, R (corresponding author), Karlsruhe Inst Technol, Continuous Qual Engn Res Grp, Software Design & Qual SDQ Chair, Karlsruhe, Germany.
EM heinrich@kit.edu; merkle@kit.edu; henss@kit.edu;
   paech@informatik.uni-heidelberg.de
RI Paech, Barbara/AAI-5997-2020
FU DFG (German Research Foundation) in the Priority Program SPP 1593:
   Design For Future-Managed Software Evolution
FX The authors thank Thor GmbH for giving us the opportunity to apply
   IntBIIS in a real-life case study. We also give thanks to the anonymous
   reviewers and to Ralf Reussner for review and valuable comments. This
   work is partially supported by the DFG (German Research Foundation) in
   the Priority Program SPP 1593: Design For Future-Managed Software
   Evolution.
CR Aerts ATM, 2004, INFORM MANAGE-AMSTER, V41, P781, DOI 10.1016/j.im.2003.06.002
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2000, MCGRAW HILL SERIES I
   [Anonymous], 2010, MODELLIERUNG
   Barjis J, 2008, SCI COMPUT PROGRAM, V71, P73, DOI 10.1016/j.scico.2008.01.002
   Bause F., 1993, Proceedings. 5th International Workshop on Petri Nets and Performance Models (Cat. No.93TH0558-7), P14, DOI 10.1109/PNPM.1993.393439
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Betz S., 2012, ALIGNING ENTERPRISE
   Bohme R., 2008, DEPENDABILITY METRIC
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Davenport T.H., 1993, PROCESS INNOVATION R
   Ehlers J, 2011, LECT NOTES COMPUT SC, V6903, P278, DOI 10.1007/978-3-642-23798-0_30
   Eichelberger H, 2014, J SYST SOFTWARE, V93, P163, DOI 10.1016/j.jss.2014.02.022
   Franks G, 2011, SIMUL SERIES, V43, P8
   Giaglis G. M., 1999, Logistics Information Management, V12, P108, DOI 10.1108/09576059910256367
   GLADWIN B, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P114
   Graupner S, 2008, I W ADV ISS E COMMER, P317, DOI [10.1109/CEC/EEE.2008.31, 10.1109/CECandEEE.2008.110]
   Guceglioglu A., 2006, THESIS
   Hasselbring W., 2013, RES REPORT
   Heinrich R., 2013, LNI P, VP-239, P157
   Heinrich R., 2014, WORKSHOP P, P41
   Heinrich R., 2012, PALL DAYS 2012 P, P19
   Heinrich R., 2013, THESIS THESIS
   Heinrich R., 2011, Proceedings of the Enterprise Modelling and Information Systems Architectures (EMISA 2011), P213
   Heinrich R., 2011, Proceedings of the 4th SQMB Workshop, TUM-I1104, P4
   Herbst J, 1997, SIMULATION IN INDUSTRY: 9TH EUROPEAN SIMULATION SYMPOSIUM 1997, P491
   Kounev Samuel, 2009, Performance Evaluation Review, V36, P46, DOI 10.1145/1530873.1530883
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Martens A., 2007, THESIS
   Meier Philipp, 2011, 19 IEEE ACM INT S MO
   Merkle  P., 2011, PALL DAYS 2011 P, P15
   Mi NF, 2008, LECT NOTES COMPUT SC, V5346, P265
   Nakatumba J, 2010, LECT NOTES BUS INF P, V43, P69
   OMG, 2011, TECHNICAL REPORT
   Painter MK, 1996, 1996 WINTER SIMULATION CONFERENCE PROCEEDINGS, P1305, DOI 10.1145/256562.256953
   Petty M. D., 2014, MODEL SIMUL ENG, V2014, P18
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Rozinat A., 2008, BPM0804
   Rubner Y, 2001, COMPUT VIS IMAGE UND, V84, P25, DOI 10.1006/cviu.2001.0934
   Rubner Y, 1998, SIXTH INTERNATIONAL CONFERENCE ON COMPUTER VISION, P59, DOI 10.1109/ICCV.1998.710701
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Serrano A, 2005, J ENTERP INF MANAG, V18, P740, DOI 10.1108/17410390510628427
   Simulation Interoperability Standards Committee, 2000, IEEE STAND MOD SIM H
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Song JL, 2008, IEEE INT C NETW SENS, P1800
   van der Aalst WMP, 2007, LECT NOTES COMPUT SC, V4546, P484
   van der Aalst W.M.P., 2008, BPM0807
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Vangheluwe H., 2002, AI, P9
   WfMC, 2013, TECHNICAL REPORT
   Wieringa RJ, 2003, LECT NOTES COMPUT SC, V2681, P209
   Winter Green Research, 2012, BUS PROC MAN BPM MAR
   Wombacher A., 2013, SAC, P1403
   Workflow Management Coalition Specification, 1999, WFMCTC1011
   Yifei Tan, 2007, 2007 Winter Simulation Conference, P2203, DOI 10.1109/WSC.2007.4419855
NR 57
TC 19
Z9 20
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2017
VL 16
IS 1
BP 257
EP 277
DI 10.1007/s10270-015-0457-1
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EL1JV
UT WOS:000394377500015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Boström, P
   Wiik, J
AF Bostrom, Pontus
   Wiik, Jonatan
TI Contract-based verification of discrete-time multi-rate Simulink models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Automated verification; Refinement; Control systems; SMT solving;
   Synchronous data flow
AB This paper presents an approach to modular contract-based verification of discrete-time multi-rate Simulink models. The verification approach uses a translation of Simulink models to sequential programs that can then be verified using traditional software verification techniques. Automatic generation of the proof obligations needed for verification of correctness with respect to contracts, and automatic proofs are also discussed. Furthermore, the paper provides detailed discussions about the correctness of each step in the verification process. The verification approach is demonstrated on a case study involving control software for prevention of pressure peaks in hydraulics systems.
C1 [Bostrom, Pontus; Wiik, Jonatan] Abo Akad Univ, Dept Informat Technol, Turku, Finland.
C3 Abo Akademi University
RP Wiik, J (corresponding author), Abo Akad Univ, Dept Informat Technol, Turku, Finland.
EM pontus.bostrom@abo.fi; jonatan.wiik@abo.fi
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Back R.-J., 1998, Refinement Calculus
   Back R.-J.R., 1989, LNCS, V430
   BARNETT M, 2006, LNCS, V4111
   Barnett M, 2011, COMMUN ACM, V54, P81, DOI 10.1145/1953122.1953145
   Benveniste A., 2007, 6214 INRIA
   Biernacki D., 2008, LCTES 08
   Bostrom P., 2014, LNCS, V8785
   Bostrom P., 2010, 985 TUCS
   Bostrom P, 2011, LNCS, V6991
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Canovas-Dumas C., 2000, LNAI, V1955
   Caspi P., 1987, POPL 87
   Cavalcanti A., 2005, LNCS, V3582
   de Moura L., 2008, LNCS, V4963
   Donaldson A.F., 2011, LNCS, V6887
   Garoche P.-L., 2013, LNCS, V7871
   Hagen G., 2008, THESIS
   Hagen G., 2008, FMCAD'08
   Halbwachs N., 1994, AMAST 93
   Halbwachs N., 1999, LNCS, V1742
   Kahn G., 1974, INFORM PROCESSING 74
   Lee E. A., 1997, M973 UCBERL
   LEE EA, 1987, IEEE T COMPUT, V36, P24, DOI 10.1109/TC.1987.5009446
   LEE EA, 1987, P IEEE, V75, P1235, DOI 10.1109/PROC.1987.13876
   LEE EA, 1995, P IEEE, V83, P773, DOI 10.1109/5.381846
   Leino K.R.M., 2006, LNCS, V5502
   Linjama Matti, 2003, Int. J. Fluid Power, V4, P7, DOI DOI 10.1080/14399776.2003.10781151
   Lublinerman R., 2008, RTAS 08
   Maraninchi F., 2004, EUROMICRO 04
   Mosterman PJ, 2012, CONTROL ENG PRACT, V20, P2, DOI 10.1016/j.conengprac.2011.04.013
   Murugesan A., 2013, HILT 13
   Nuzzo P., 2014, UCBEECS201421
   Reicherdt R., 2014, LNCS, V8702
   Roy P, 2011, INNOV SYST SOFTW ENG, V7, P73, DOI 10.1007/s11334-011-0145-4
   SHEERAN M, 2000, LNCS, V1954
   Tafat A., 2011, LNCS, V6528
   Tripakis S., 2005, ACM T EMBED COMPUT S, V4, P779, DOI DOI 10.1145/1113830.1113834
   Tripakis S, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2442116.2442133
   Tripakis S, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1985342.1985345
   Wiik J., 2012, THESIS
   Wiik J., 2014, LNCS, V8829
NR 42
TC 13
Z9 13
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1141
EP 1161
DI 10.1007/s10270-015-0477-x
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800011
DA 2024-07-18
ER

PT J
AU Muschevici, R
   Proença, J
   Clarke, D
AF Muschevici, Radu
   Proenca, Jose
   Clarke, Dave
TI Feature Nets: behavioural modelling of software product lines
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Behavioural modelling; Software product lines; Petri nets; Variability
ID SEMANTICS; SYSTEMS
AB Software product lines (SPLs) are diverse systems that are developed using a dual engineering process: (a) family engineering defines the commonality and variability among all members of the SPL, and (b) application engineering derives specific products based on the common foundation combined with a variable selection of features. The number of derivable products in an SPL can thus be exponential in the number of features. This inherent complexity poses two main challenges when it comes to modelling: firstly, the formalism used for modelling SPLs needs to be modular and scalable. Secondly, it should ensure that all products behave correctly by providing the ability to analyse and verify complex models efficiently. In this paper, we propose to integrate an established modelling formalism (Petri nets) with the domain of software product line engineering. To this end, we extend Petri nets to Feature Nets. While Petri nets provide a framework for formally modelling and verifying single software systems, Feature Nets offer the same sort of benefits for software product lines. We show how SPLs can be modelled in an incremental, modular fashion using Feature Nets, provide a Feature Nets variant that supports modelling dynamic SPLs, and propose an analysis method for SPL modelled as Feature Nets. By facilitating the construction of a single model that includes the various behaviours exhibited by the products in an SPL, we make a significant step towards efficient and practical quality assurance methods for software product lines.
C1 [Muschevici, Radu] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
   [Proenca, Jose; Clarke, Dave] Katholieke Univ Leuven, iMinds Distrinet, Leuven, Belgium.
   [Proenca, Jose] Univ Minho, HASLab INESC TEC, Braga, Portugal.
   [Clarke, Dave] Uppsala Univ, Dept Informat Technol, Uppsala, Sweden.
C3 Technical University of Darmstadt; IMEC; KU Leuven; Universidade do
   Minho; INESC TEC; Uppsala University
RP Muschevici, R (corresponding author), Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
EM radu.muschevici@cs.tu-darmstadt.de; jose.proenca@cs.kuleuven.be;
   dave.clarke@it.uu.se
RI Proenca, Jose/K-4256-2016
OI Proenca, Jose/0000-0003-0971-8919
CR Agerwala Tilak, 1973, P 1 ANN S COMP ARCH, P81, DOI [DOI 10.1145/800123.803973, 10.1145]
   [Anonymous], 1976, 62 YAL U
   Asirelli Patrizia, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P146, DOI 10.1007/978-3-642-34026-0_12
   Asirelli P, 2010, LECT NOTES COMPUT SC, V6396, P43, DOI 10.1007/978-3-642-16265-7_5
   Baldan P, 2005, MATH STRUCT COMP SCI, V15, P1, DOI 10.1017/S0960129504004311
   BERTHELOT G, 1987, LECT NOTES COMPUT SC, V254, P359
   Clarke D., 2011, QUALITY ASSURANCE DI, P27
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A, 2014, SCI COMPUT PROGRAM, V80, P416, DOI 10.1016/j.scico.2013.09.019
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Cordy M., 2013, Lecture Notes in Computer Science, V7740, P1, DOI [DOI 10.1007/978-3-642-36249, 10.1007/978-3-642-36249-1_1, DOI 10.1007/978-3-642-36249-1_1]
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Desel J., 1995, Free Choice Petri Nets
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   Farooq U., 2007, ADV COMPUTER SCI TEC, P128
   Fischbein D., 2006, ROSATEA 06, P39
   Ghabri M.-K., 1994, Proceedings of the Fourth International Conference on Computer Integrated Manufacturing and Automation Technology, P93, DOI 10.1109/CIMAT.1994.389088
   Girault C., 2001, Petri Nets for System Engineering: A Guide to Modeling, Verification, and Applications
   Gruler A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203, DOI 10.1109/SPLC.2008.22
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Llorens M, 2004, IEEE T COMPUT, V53, P1147, DOI 10.1109/TC.2004.66
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Muschevici R., 2010, 2 P 14 INT C SOFTW P, P99
   Muschevici R, 2011, LECT NOTES COMPUT SC, V7041, P318, DOI 10.1007/978-3-642-24690-6_22
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schaefer I., 2010, VaMoS, P85
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schnoebelen P, 2000, LECT NOTES COMPUT SC, V1825, P409
   SOUISSI Y, 1991, LECT NOTES COMPUT SC, V483, P457
   ter Beek MH, 2014, LECT NOTES COMPUT SC, V8802, P368, DOI 10.1007/978-3-662-45234-9_26
   Tiplea F.L., 1994, CONDITIONAL GRAMMARS, P431
   Valk R., 1978, Automata, languages and programming, P464
NR 38
TC 13
Z9 14
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 1181
EP 1206
DI 10.1007/s10270-015-0475-z
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800013
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Ovatman, T
   Aral, A
   Polat, D
   Ünver, AO
AF Ovatman, Tolga
   Aral, Atakan
   Polat, Davut
   Unver, Ali Osman
TI An overview of model checking practices on verification of PLC software
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th International Conference on Integrated Formal Methods (IFM)
CY JUN 10-14, 2013
CL Turku, FINLAND
DE Model checking; Programmable logic controllers; Program verification
ID FORMAL VERIFICATION; LOGIC CONTROLLERS; PROGRAM; DESIGN; SYSTEM; PETRI;
   VALIDATION
AB Programmable logic controllers (PLCs) are heavily used in industrial control systems, because of their high capacity of simultaneous input/output processing capabilities. Characteristically, PLC systems are used in mission critical systems, and PLC software needs to conform real-time constraints in order to work properly. Since PLC programming requires mastering low-level instructions or assembly like languages, an important step in PLC software production is modelling using a formal approach like Petri nets or automata. Afterward, PLC software is produced semiautomatically from the model and refined iteratively. Model checking, on the other hand, is a well-known software verification approach, where typically a set of timed properties are verified by exploring the transition system produced from the software model at hand. Naturally, model checking is applied in a variety of ways to verify the correctness of PLC-based software. In this paper, we provide a broad view about the difficulties that are encountered during the model checking process applied at the verification phase of PLC software production. We classify the approaches from two different perspectives: first, the model checking approach/tool used in the verification process, and second, the software model/source code and its transformation to model checker's specification language. In a nutshell, we have mainly examined SPIN, SMV, and UPPAAL-based model checking activities and model construction using Instruction Lists (and alike), Function Block Diagrams, and Petri nets/automata-based model construction activities. As a result of our studies, we provide a comparison among the studies in the literature regarding various aspects like their application areas, performance considerations, and model checking processes. Our survey can be used to provide guidance for the scholars and practitioners planning to integrate model checking to PLC-based software verification activities.
C1 [Ovatman, Tolga; Aral, Atakan; Polat, Davut; Unver, Ali Osman] Istanbul Tech Univ, Dept Comp Engn, Istanbul, Turkey.
C3 Istanbul Technical University
RP Ovatman, T (corresponding author), Istanbul Tech Univ, Dept Comp Engn, Istanbul, Turkey.
EM ovatman@itu.edu.tr; aralat@itu.edu.tr; dpolat@itu.edu.tr;
   unverao@itu.edu.tr
RI Aral, Atakan/D-8734-2014; Ovatman, Tolga/N-9296-2013
OI Aral, Atakan/0000-0002-2281-8183; Ovatman, Tolga/0000-0001-5918-3145
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], CSIR9925 U NIJM NETH
   [Anonymous], THESIS
   [Anonymous], P 12 IFAC S INF CONT
   [Anonymous], PETRI NETS MANUFACTU
   [Anonymous], COLOURED PETRI NETS
   [Anonymous], 1131350 IEC IET
   [Anonymous], 22 INT S INF COMM AU
   [Anonymous], ERCIM NEWS
   [Anonymous], TKKICSR3 MICH STAT U
   [Anonymous], P IMACS IEEE CESA 03
   [Anonymous], WCRR 99
   [Anonymous], 1998, PROC IEE WORKSHOP DI
   [Anonymous], 11 WSEAS INT C AUT I
   [Anonymous], P 6 S FORM METH AUT
   [Anonymous], 2009, IFAC P
   [Anonymous], P 5 NASA LANGL FORM
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], P 6 IEEE INT C SOFTW
   [Anonymous], IMACS MULT COMP ENG
   [Anonymous], 2010, P 15 IEEE INT C EMER
   [Anonymous], THE SMV LANGUAGE
   [Anonymous], INT C COMP INT MOD C
   [Anonymous], IND CONTROL SYSTEMS
   [Anonymous], 2007, P 2007 SUMM COMP SIM
   [Anonymous], 1995, LNCS, DOI DOI 10.1007/3-540-60630
   [Anonymous], DISCRETE EVENT SYSTE
   [Anonymous], IEEE C EM TECHN FACT
   [Anonymous], 4 INT VER WORKSH BRE
   [Anonymous], P 18 IEEE INT C EM T
   [Anonymous], P CESA
   [Anonymous], 2000, P 4 INT C AUTOMATION
   Armando A, 2005, LECT NOTES COMPUT SC, V3576, P281
   Barbosa Haniel, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P353, DOI 10.1007/978-3-642-30885-7_30
   Barbosa LPDA, 2007, IEEE INT C EMERG, P406
   Bauer N, 2004, LECT NOTES COMPUT SC, V3147, P517
   Bauer N, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P375, DOI 10.1109/APAQS.2001.990043
   Bender DF, 2008, LECT NOTES COMPUT SC, V5095, P121, DOI 10.1007/978-3-540-69100-6_9
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   Biallas S, 2012, IEEE INT CONF AUTOM, P338, DOI 10.1145/2351676.2351741
   Bochot T, 2009, PROC INT CONF SOFTW, P18, DOI 10.1109/ICSE-COMPANION.2009.5070960
   Bornot S, 2000, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, P2987
   Brayton R. K., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P428
   Brinksma E, 2000, LECT NOTES COMPUT SC, V1885, P73
   Budha M, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P1194, DOI 10.1109/CIMCA.2008.125
   Canet G, 2000, IEEE SYS MAN CYBERN, P2449, DOI 10.1109/ICSMC.2000.884359
   Cheng Pang, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1133, DOI 10.1109/INDIN.2008.4618273
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   da Silva Leandro Dias, 2008, IECON 2008 - 34th Annual Conference of IEEE Industrial Electronics Society, P291, DOI 10.1109/IECON.2008.4757968
   De Smet O, 2002, P AMER CONTR CONF, V1-6, P4147, DOI 10.1109/ACC.2002.1024580
   Dierks H, 1997, LECT NOTES COMPUT SC, V1231, P111
   Dierks H, 2004, FORM ASP COMPUT, V16, P104, DOI 10.1007/s00165-004-0034-9
   Dierks H, 2001, THEOR COMPUT SCI, V253, P61, DOI 10.1016/S0304-3975(00)00089-X
   Dierks H, 1998, EUROMICRO, P222, DOI 10.1109/EMWRTS.1998.685088
   Dill D. L., 1996, LNCS, P390, DOI DOI 10.1007/3-540-61474-586
   Enoiu EP, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P55, DOI 10.1109/CMSBSE.2013.6605711
   Fantechi Alessandro, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P383, DOI 10.1007/978-3-642-24270-0_28
   Farines JM, 2011, IEEE INT C EMERG
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Frey G, 2000, IEEE SYS MAN CYBERN, P2431, DOI 10.1109/ICSMC.2000.884356
   Frey G, 1998, IEEE SYS MAN CYBERN, P7, DOI 10.1109/ICSMC.1998.725375
   Frey G, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P473
   Fujino K, 2000, COMPUT CHEM ENG, V24, P303, DOI 10.1016/S0098-1354(00)00484-1
   Gourcuff V, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P182
   Grobelna Iwona, 2011, 2011 MIXDES - 18th International Conference "Mixed Design of Integrated Circuits & Systems", P621
   Grobelna I, 2011, PRZ ELEKTROTECHNICZN, V87, P47
   HALBWACHS N, 1992, IEEE T SOFTWARE ENG, V18, P785, DOI 10.1109/32.159839
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hanisch HM, 1997, ETFA '97 - 1997 IEEE 6TH INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION PROCEEDINGS, P391, DOI 10.1109/ETFA.1997.616302
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heimdahl MPE, 2004, LECT NOTES COMPUT SC, V2931, P42
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   James P, 2014, LECT NOTES COMPUT SC, V8368, P253, DOI 10.1007/978-3-319-05032-4_19
   Jee E, 2010, J RES PRACT INF TECH, V42, P171
   Jeon S., 2007, Doctoral dissertation
   Jiménez-Fraustro F, 2001, EUROMICRO, P135, DOI 10.1109/EMRTS.2001.934016
   John Karl-Heinz, 2010, 611313 IEC
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Klein S, 2002, P AMER CONTR CONF, V1-6, P4141, DOI 10.1109/ACC.2002.1024579
   Kornecki A.J., 2010, P 6 ANN WORKSH CYB S, DOI DOI 10.1145/1852666.1852754
   Kowalewski S, 1999, AUTOMATICA, V35, P505, DOI 10.1016/S0005-1098(98)00179-4
   L'Her D., 1999, Automata Implementation. Third International Workshop on Implementing Automata, WIA'98. Revised Papers (Lecture Notes in Computer Science Vol.1660), P149
   Lahtinen J, 2012, RELIAB ENG SYST SAFE, V105, P104, DOI 10.1016/j.ress.2012.03.021
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LEGUERNIC P, 1991, P IEEE, V79, P1321, DOI 10.1109/5.97301
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel M, 2011, FORM ASP COMPUT, V23, P683, DOI 10.1007/s00165-010-0172-1
   Mader A, 1999, PROCEEDINGS OF THE 11TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P106, DOI 10.1109/EMRTS.1999.777456
   Mader A, 2001, EUR J CONTROL, V7, P416, DOI 10.3166/ejc.7.416-439
   McMillan K. L., 1993, Symbolic model checking
   Mertke T., 2001, 2001 IEEE International Conference on Systems, Man and Cybernetics. e-Systems and e-Man for Cybernetics in Cyberspace (Cat.No.01CH37236), P2700, DOI 10.1109/ICSMC.2001.972974
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   Mokadem HB, 2010, IEEE T AUTOM SCI ENG, V7, P921, DOI 10.1109/TASE.2010.2050199
   MOON I, 1994, IEEE CONTR SYST MAG, V14, P53, DOI 10.1109/37.272781
   Németh E, 2009, LECT NOTES COMPUT SC, V5596, P199, DOI 10.1007/978-3-642-03240-0_17
   Olderog ER, 1999, LECT NOTES COMPUT SC, V1710, P342
   Oliveira KD, 2010, PROC IEEE INT SYMP, P90, DOI 10.1109/ISIE.2010.5637890
   Pavlovic Olivera, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P439, DOI 10.1109/ICST.2010.10
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Probst ST, 1997, COMPUT CHEM ENG, V21, P417, DOI 10.1016/0098-1354(95)00265-0
   Rausch M, 1998, P AMER CONTR CONF, P234, DOI 10.1109/ACC.1998.694666
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sacha K, 2008, DEPCOS - RELCOMEX 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P143, DOI 10.1109/DepCoS-RELCOMEX.2008.30
   Sarmento Cleber A., 2008, Proceedings of the 17th IFAC World Congress, IFAC Proceedings Volumes, V41, P10546, DOI DOI 10.3182/20080706-5-KR-1001.01786
   Anjos JMS, 2013, ADV ENG SOFTW, V55, P32, DOI 10.1016/j.advengsoft.2012.09.004
   Smet O.De., 2000, PROC 4 INT PLCOPEN C, P73
   Soliman D, 2011, CONTROL ENG PRACT, V19, P929, DOI 10.1016/j.conengprac.2011.01.001
   Sreenivas R., 1991, Discrete Event Dynamic Systems: Theory and Applications, V1, P209
   Turk AL, 1997, LECT NOTES COMPUT SC, V1201, P259, DOI 10.1007/BFb0014731
   Vyatkin V, 2003, INDIN 2003: IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS, PROCEEDINGS, P224, DOI 10.1109/INDIN.2003.1300273
   Wang R, 2007, IET SOFTW, V1, P127, DOI 10.1049/iet-sen:20070009
   Wardana ANI, 2009, IEEE IND ELEC, P2286, DOI 10.1109/IECON.2009.5415231
   Weissmann Markus, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P161, DOI 10.1007/978-3-642-22306-8_11
   Xiying Weng, 2001, 2001 IEEE International Conference on Systems, Man and Cybernetics. e-Systems and e-Man for Cybernetics in Cyberspace (Cat.No.01CH37236), P2748, DOI 10.1109/ICSMC.2001.972982
   Yoo J, 2008, ASIA PAC SOFWR ENG, P385, DOI 10.1109/APSEC.2008.26
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
   Zhou M, 2009, P INT COMP SOFTW APP, P553, DOI 10.1109/COMPSAC.2009.80
NR 118
TC 43
Z9 51
U1 2
U2 44
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2016
VL 15
IS 4
BP 937
EP 960
DI 10.1007/s10270-014-0448-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DX6ZS
UT WOS:000384535800003
DA 2024-07-18
ER

PT J
AU Varró, D
   Bergmann, G
   Hegedüs, A
   Horváth, A
   Ráth, I
   Ujhelyi, Z
AF Varro, Daniel
   Bergmann, Gabor
   Hegedus, Abel
   Horvath, Akos
   Rath, Istvan
   Ujhelyi, Zoltan
TI Road to a reactive and incremental model transformation platform: three
   generations of the VIATRA framework
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model transformations; Incremental evaluation; Reactive transformations;
   Graph queries
ID TOOL; PATTERN; ALGORITHM; CHECKING; LANGUAGE; INCQUERY
AB The current release of VIATRA provides open-source tool support for an event-driven, reactive model transformation engine built on top of highly scalable incremental graph queries for models with millions of elements and advanced features such as rule-based design space exploration complex event processing or model obfuscation. However, the history of the VIATRA model transformation framework dates back to over 16 years. Starting as an early academic research prototype as part of the M.Sc project of the the first author it first evolved into a Prolog-based engine followed by a family of open-source projects which by now matured into a component integrated into various industrial and open-source tools and deployed over multiple technologies. This invited paper briefly overviews the evolution of the VIATRA/IncQuery family by highlighting key features and illustrating main transformation concepts along an open case study influenced by an industrial project.
C1 [Varro, Daniel; Bergmann, Gabor; Horvath, Akos; Rath, Istvan] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
   [Varro, Daniel; Bergmann, Gabor] MTA BME Lendulet Res Grp Cyber Phys Syst, Nador Utca 5, H-1051 Budapest, Hungary.
   [Varro, Daniel; Bergmann, Gabor; Hegedus, Abel; Horvath, Akos; Rath, Istvan; Ujhelyi, Zoltan] IncQuery Labs Ltd, Bocskai Ut 77-79, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics; Budapest University of
   Technology & Economics
RP Varró, D (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.; Varró, D (corresponding author), MTA BME Lendulet Res Grp Cyber Phys Syst, Nador Utca 5, H-1051 Budapest, Hungary.; Varró, D (corresponding author), IncQuery Labs Ltd, Bocskai Ut 77-79, H-1117 Budapest, Hungary.
EM varro@mit.bme.hu
RI Rath, Istvan/E-4846-2013; Varro, Daniel/G-8963-2012; Hegedüs,
   Ábel/A-8494-2012; Ujhelyi, Zoltán/G-8627-2012; Varro, Daniel/C-5447-2015
OI Ujhelyi, Zoltán/0000-0002-2091-6441; Perez del Campo,
   Lorenzo/0000-0002-4647-5453; Varro, Daniel/0000-0002-8790-252X
FU MONDO Project (EU) [ICT-611125]; FP7 ARTEMIS CONCERTO [ART-2012-333053];
   MTA-BME Lendulet Research Group on Cyber-Physical Systems; HIDE; DECOS;
   DIANA; SecureChange; MOGENTES; INDEXYS; CERTIMOT ERC-HU; CEA; Embraer;
   Ericsson; IBM; Thales; ThyssenKruppPresta; TeqBall
FX The preparation of this paper was partially supported by the MONDO
   Project (EU ICT-611125), the FP7 ARTEMIS CONCERTO (ART-2012-333053)
   project and the MTA-BME Lendulet Research Group on Cyber-Physical
   Systems. Furthermore, several other projects supported the whole line of
   underlying research in the past 16 years, most notably: European
   projects (HIDE, DECOS, DIANA, SecureChange, MOGENTES, INDEXYS), national
   projects (CERTIMOT ERC-HU), and numerous industrial contracts and grants
   (with CEA, Embraer, Ericsson, IBM, Thales, ThyssenKruppPresta, TeqBall).
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Acretoaie V, 2015, LECT NOTES COMPUT SC, V9152, P121, DOI 10.1007/978-3-319-21155-8_10
   Almendros-Jiménez JM, 2013, LECT NOTES COMPUT SC, V7741, P382
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   Amelunxen C, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P211, DOI 10.1109/VLHCC.2008.4639088
   [Anonymous], 2015, PAP
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], HASE 99 4 IEEE INT S
   [Anonymous], COMP SAF REL SEC 20
   [Anonymous], INTERCONNECTING EVER
   [Anonymous], 22 INT C SOFTW ENG I
   [Anonymous], TECHNICAL REPORT
   [Anonymous], XTEND
   [Anonymous], DESIGNING AUTOMATIC
   [Anonymous], 2011, ECEASST
   [Anonymous], 29 IEEE AIAA DIG AV
   [Anonymous], 2013, ECEASST
   [Anonymous], J DEF SOFTW ENG
   [Anonymous], AGG APPROACH LANGUAG
   [Anonymous], ECLIPSECON EUROPE
   [Anonymous], 5 INT WORKSH GRAPH T
   [Anonymous], ECLIPSECON FRANCE
   [Anonymous], 2006, ECEASST
   [Anonymous], QVT MOF 2 0 QUER VIE
   [Anonymous], TECHNICAL REPORT
   [Anonymous], IEEE S VIS LANG HUM
   [Anonymous], LNCS
   [Anonymous], ECEASST
   [Anonymous], LNCS
   [Anonymous], GRAPH MOD FRAM GMF
   [Anonymous], LNCS
   [Anonymous], HASE 99 4 IEEE INT S
   [Anonymous], CPS DEM MOD TRANSF B
   [Anonymous], MARRYING SEARCH BASE
   [Anonymous], SIR
   [Anonymous], SURVEY REACTIVE PROG
   [Anonymous], EMF MOD QUER 2
   [Anonymous], 2011, ISO 262622011
   [Anonymous], LNCS
   [Anonymous], GEN ECL MOD SYST GEM
   [Anonymous], 2015, THE EPSILON BOOK
   [Anonymous], 7 YORK DOCT S COMP S
   [Anonymous], P AGT 2002 WORKSH AP
   [Anonymous], EFTS 07 P 2007 WORKS
   [Anonymous], 2014, TECHNICAL REPORT
   [Anonymous], 1 WORKSH MON TEST CY
   [Anonymous], DIG AV SYST C DASC
   [Anonymous], APPL LANGUAGES TOOLS
   [Anonymous], PRO GRES APPROACH LA
   [Anonymous], GRATRA 2000 JOINT AP
   [Anonymous], RTCA SOFTWARE TOOL Q
   [Anonymous], ECLIPSECON NA
   [Anonymous], SOFTW CONS AIRB SYST
   [Anonymous], CEUR WORKSHOP P
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   ASSmann U., 1999, OPTIMIX - a tool for rewriting and optimizing programs, P307
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1288, DOI 10.1145/1141277.1141576
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   Bergmann Gabor, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P386, DOI 10.1007/978-3-642-33654-6_26
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Bergmann G, 2009, LECT NOTES COMPUT SC, V5563, P20, DOI 10.1007/978-3-642-02408-5_3
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Broy M., 2012, Emerging Technologies for the Evolution and Maintenance of Software Models, P343
   Búr M, 2015, LECT NOTES COMPUT SC, V9151, P275, DOI 10.1007/978-3-319-21145-9_18
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   Chen K, 2005, LECT NOTES COMPUT SC, V3748, P115
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dávid I, 2014, LECT NOTES COMPUT SC, V8767, P68, DOI 10.1007/978-3-319-11653-2_5
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Debreceni Csaba., 2014, Proceedings of the 2nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling, P31, DOI [DOI 10.1145/2631675.2631677, 10.1145/2631675.2631677]
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Galvao Lourenco da Silva I., 2011, Fourth International Symposium on Applications of Graph Transformation with Industrial Relevance, AGTIVE 2011, Budapest, P105
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gilmore S., 1994, Computer Performance Evaluation. Modelling Techniques and Tools. 7th International Conference Proceedings, P353
   Gilmore S, 2011, SOFTW SYST MODEL, V10, P287, DOI 10.1007/s10270-010-0155-y
   Gönczy L, 2009, LECT NOTES COMPUT SC, V5421, P153, DOI 10.1007/978-3-642-01648-6_17
   Groher I, 2010, LECT NOTES COMPUT SC, V6013, P203, DOI 10.1007/978-3-642-12029-9_15
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Hegedus Abel, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P173, DOI 10.1109/ASE.2011.6100051
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   Hegedüs A, 2016, SOFTW SYST MODEL, V15, P733, DOI 10.1007/s10270-014-0436-y
   Herzner W, 2006, ERCIM NEWS, P22
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Horváth A, 2012, SOFTW SYST MODEL, V11, P385, DOI 10.1007/s10270-010-0185-5
   Horváth A, 2009, LECT NOTES COMPUT SC, V5795, P107, DOI 10.1007/978-3-642-04425-0_9
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kalnins A, 2005, LECT NOTES COMPUT SC, V3599, P62
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   Kovacs M, 2008, COMPUT SYST SCI ENG, V23, P349
   Kövi A, 2007, LECT NOTES COMPUT SC, V4526, P110
   Krikava F, 2014, LECT NOTES COMPUT SC, V8767, P569, DOI 10.1007/978-3-319-11653-2_35
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Lawley M., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P139
   Lee EA, 2014, IEEE DES TEST, V31, P8, DOI 10.1109/MDAT.2014.2314600
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Levendovszky T, 2005, ELECTRON NOTES THEOR, V127, P65, DOI 10.1016/j.entcs.2004.12.040
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Luckham David C., 2001, POWER EVENTS INTRO C
   Paton NW, 1999, ACM COMPUT SURV, V31, P63, DOI 10.1145/311531.311623
   Rath Istvan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P102, DOI 10.1007/978-3-642-31491-9_10
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Ráth I, 2009, LECT NOTES COMPUT SC, V5795, P342, DOI 10.1007/978-3-642-04425-0_26
   Rensink A, 2004, LECT NOTES COMPUT SC, V2986, P401
   Rensink A, 2005, ELECTRON NOTES THEOR, V127, P127, DOI 10.1016/j.entcs.2004.12.036
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Schatz Bernhard., 2008, International Conference on Software Language Engineering, P227, DOI DOI 10.1007/978-3-642-00434-6_15
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Semeráth O, 2013, LECT NOTES COMPUT SC, V8107, P538, DOI 10.1007/978-3-642-41533-3_33
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Syriani E, 2015, SOFTW SYST MODEL, V14, P1215, DOI 10.1007/s10270-013-0370-4
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Sztipanovits J, 2012, P IEEE, V100, P29, DOI 10.1109/JPROC.2011.2161529
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Tiwari A, 2003, P IEEE, V91, P29, DOI 10.1109/JPROC.2002.805818
   Torrini P, 2010, LECT NOTES COMPUT SC, V6013, P154
   Ujhelyi Z, 2015, INFORM SOFTWARE TECH, V65, P147, DOI 10.1016/j.infsof.2015.01.003
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Varro Daniel, 2016, SOFSEM 2016 : Theory and Practice of Computer Science. 42nd International Conference on Current Trends in Theory and Practice of Computer Science. Proceedings: LNCS 9587, P51, DOI 10.1007/978-3-662-49192-8_5
   Varró D, 2002, SCI COMPUT PROGRAM, V44, P205, DOI 10.1016/S0167-6423(02)00039-4
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró G, 2015, SOFTW SYST MODEL, V14, P597, DOI 10.1007/s10270-013-0372-2
   Varró G, 2008, ELECTRON NOTES THEOR, V211, P121, DOI 10.1016/j.entcs.2008.04.035
   Varró G, 2006, ELECTRON NOTES THEOR, V152, P191, DOI 10.1016/j.entcs.2005.10.025
   Varro Gergely., 2006, Software and System Modeling, V5, P313, DOI [10.1007/s10270-006-0015-y, DOI 10.1007/S10270-006-0015-Y]
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 149
TC 64
Z9 69
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2016
VL 15
IS 3
BP 609
EP 629
DI 10.1007/s10270-016-0530-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR2RM
UT WOS:000379751600002
DA 2024-07-18
ER

PT J
AU Haisjackl, C
   Barba, I
   Zugal, S
   Soffer, P
   Hadar, I
   Reichert, M
   Pinggera, J
   Weber, B
AF Haisjackl, Cornelia
   Barba, Irene
   Zugal, Stefan
   Soffer, Pnina
   Hadar, Irit
   Reichert, Manfred
   Pinggera, Jakob
   Weber, Barbara
TI Understanding Declare models: strategies, pitfalls, empirical results
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 14th International Conference on Business Process Modeling, Development,
   and Support (BPMDS) / 18th International Conference on Exploring
   Modeling Methods for Systems Analysis and Design (EMMSAD)
CY JUN 17-18, 2013
CL CAiSE, Valencia, SPAIN
HO CAiSE
DE Declarative process models; Empirical research; Understandability
ID WORKING-MEMORY CAPACITY; COGNITIVE LOAD; DIAGRAMS; SYSTEMS; NUMBER
AB Declarative approaches to business process modeling are regarded as well suited for highly volatile environments, as they enable a high degree of flexibility. However, problems in understanding and maintaining declarative process models often impede their adoption. Likewise, little research has been conducted into the understanding of declarative process models. This paper takes a first step toward addressing this fundamental question and reports on an empirical investigation consisting of an exploratory study and a follow-up study focusing on the system analysts' sense-making of declarative process models that are specified in Declare. For this purpose, we distributed real-world Declare models to the participating subjects and asked them to describe the illustrated process and to perform a series of sense-making tasks. The results of our studies indicate that two main strategies for reading Declare models exist: either considering the execution order of the activities in the process model, or orienting by the layout of the process model. In addition, the results indicate that single constraints can be handled well by most subjects, while combinations of constraints pose significant challenges. Moreover, the study revealed that aspects that are similar in both imperative and declarative process modeling languages at a graphical level, while having different semantics, cause considerable troubles. This research not only helps guiding the future development of tools for supporting system analysts, but also gives advice on the design of declarative process modeling notations and points out typical pitfalls to teachers and educators of future systems analysts.
C1 [Haisjackl, Cornelia; Zugal, Stefan; Pinggera, Jakob; Weber, Barbara] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Barba, Irene] Univ Seville, Seville, Spain.
   [Soffer, Pnina; Hadar, Irit] Univ Haifa, IL-31999 Haifa, Israel.
   [Reichert, Manfred] Univ Ulm, D-89069 Ulm, Germany.
C3 University of Innsbruck; University of Sevilla; University of Haifa; Ulm
   University
RP Haisjackl, C (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM cornelia.haisjackl@uibk.ac.at; irenebr@us.es; stefan.zugal@uibk.ac.at;
   spnina@is.haifa.ac.il; hadari@is.haifa.ac.il;
   manfred.reichert@uni-ulm.de; jakob.pinggera@uibk.ac.at;
   barbara.weber@uibk.ac.at
RI Reichert, Manfred U/ABB-4469-2020; Barba, Irene/K-5453-2014; soffer,
   pnina/P-8893-2019
OI Weber, Barbara/0000-0002-6004-4860
CR [Anonymous], 2002, The Sveriges Riksbank Prize in economic sciences in memory of Alfred Nobel, DOI DOI 10.1037/0003-066X.58.9.697
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Armstrong DJ, 2007, MIS QUART, V31, P453
   Baddeley A, 2012, ANNU REV PSYCHOL, V63, P1, DOI 10.1146/annurev-psych-120710-100422
   Barba I, 2013, DATA KNOWL ENG, V86, P61, DOI 10.1016/j.datak.2013.01.004
   Bassey M., 1999, CASE STUDY RES ED SE
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Bera P, 2011, MIS QUART, V35, P883
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Burton-Jones A, 2006, INFORM SYST RES, V17, P38, DOI 10.1287/isre.1050.0079
   Claes J, 2013, LECT NOTES BUS INF P, V132, P744
   Claes J, 2012, LECT NOTES COMPUT SC, V7481, P33, DOI 10.1007/978-3-642-32885-5_3
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Costain G.F., 2007, THESIS U AUCKLAND
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   Ferreira HM, 2006, INT J COOP INF SYST, V15, P485, DOI 10.1142/S0218843006001463
   Goldberg J. H., 2002, Proceedings ETRA 2002. Eye Tracking Research and Applications Symposium, P51, DOI 10.1145/507072.507082
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Haisjackl C, 2012, THESIS U INNSBRUCK
   Haisjackl C, 2013, LECT NOTES BUS INF P, V147, P2
   Heitz RP, 2008, PSYCHOPHYSIOLOGY, V45, P119, DOI 10.1111/j.1469-8986.2007.00605.x
   Hildebrandt Thomas, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P343, DOI 10.1007/978-3-642-29320-7_23
   Hildebrandt T, 2011, IEEE INT ENTERP DIST, P161, DOI 10.1109/EDOC.2011.35
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Jimenez-Ramirez Andres, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P99, DOI 10.1007/978-3-642-38709-8_7
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Lamma E, 2007, LECT NOTES COMPUT SC, V4714, P344
   Mayer RE, 2001, J EDUC PSYCHOL, V93, P390, DOI 10.1037//0022-0663.93.2.390
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Montali M., 2009, THESIS U BOLOGNA
   Montali M, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658376
   Moody DL, 2004, LECT NOTES COMPUT SC, V3255, P129
   Mukkamala R.R., 2012, A formal model for declarative workflows: dynamic condition response graphs
   Mylopoulos J, 1998, INFORM SYST, V23, P127, DOI 10.1016/S0306-4379(98)00005-2
   NIELSEN J, 1994, INT J HUM-COMPUT ST, V41, P385, DOI 10.1006/ijhc.1994.1065
   Paas F, 2003, EDUC PSYCHOL, V38, P1, DOI 10.1207/S15326985EP3801_1
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pesic M., 2008, THESIS TU EINDHOVEN
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Pinggera J, 2013, LECT NOTES BUS INF P, V132, P438
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Recker J.C., 2007, P 18 AUSTR C INF SYS, P356
   Reijers Hajo A., 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P307, DOI 10.1007/978-3-642-40176-3_26
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   Schonenberg H, 2008, LECT NOTES COMPUT SC, V5240, P51, DOI 10.1007/978-3-540-85758-7_7
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Unsworth N, 2007, PSYCHOL REV, V114, P104, DOI 10.1037/0033-295X.114.1.104
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   Weber B., 2012, ENABLING FLEXIBILITY
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zugal Stefan, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P123, DOI 10.1007/978-3-642-29645-1_14
   Zugal S., 2011, P EMISA 2011, V2011, P177
   Zugal S., 2012, P 2 EDITION INT WORK, DOI DOI 10.1145/2424563.2424571
   Zugal S., 2013, SOFTW SYST MODEL, DOI [10.1007/10270-013-0356-2, DOI 10.1007/10270-013-0356-2]
   Zugal S, 2013, INT J INF SYST MODEL, V4, P23, DOI 10.4018/jismd.2013040102
   Zugal S, 2012, J SOFTW-EVOL PROC, V24, P285, DOI 10.1002/smr.554
NR 68
TC 37
Z9 39
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2016
VL 15
IS 2
BP 325
EP 352
DI 10.1007/s10270-014-0435-z
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ9XY
UT WOS:000374567800004
OA hybrid
DA 2024-07-18
ER

PT J
AU López-Fernández, JJ
   Cuadrado, JS
   Guerra, E
   de Lara, J
AF Lopez-Fernandez, Jesus J.
   Sanchez Cuadrado, Jesus
   Guerra, Esther
   de Lara, Juan
TI Example-driven meta-model development
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Meta-modelling; Domain-specific modelling languages; Interactive
   meta-modelling; Meta-model induction; Example-driven modelling;
   Meta-model design exploration; Meta-model validation
AB The intensive use of models in model-driven engineering (MDE) raises the need to develop meta-models with different aims, such as the construction of textual and visual modelling languages and the specification of source and target ends of model-to-model transformations. While domain experts have the knowledge about the concepts of the domain, they usually lack the skills to build meta-models. Moreover, meta-models typically need to be tailored according to their future usage and specific implementation platform, which demands knowledge available only to engineers with great expertise in specific MDE platforms. These issues hinder a wider adoption of MDE both by domain experts and software engineers. In order to alleviate this situation, we propose an interactive, iterative approach to meta-model construction, enabling the specification of example model fragments by domain experts, with the possibility of using informal drawing tools like Dia or yED. These fragments can be annotated with hints about the intention or needs for certain elements. A meta-model is then automatically induced, which can be refactored in an interactive way, and then compiled into an implementation meta-model using profiles and patterns for different platforms and purposes. Our approach includes the use of a virtual assistant, which provides suggestions for improving the meta-model based on well-known refactorings, and a validation mode, enabling the validation of the meta-model by means of examples.
C1 [Lopez-Fernandez, Jesus J.; Sanchez Cuadrado, Jesus; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Jesusj.Lopez@uam.es; Jesus.Sanchez.Cuadrado@uam.es;
   Esther.Guerra@uam.es; Juan.deLara@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity [TIN2011-24139]; R&D
   programme of Madrid Region with project "eMadrid" [S2009/TIC-1650]
FX We thank the referees for their detailed and useful comments. This work
   has been funded by the Spanish Ministry of Economy and Competitivity
   with project "Go Lite" (TIN2011-24139), and by the R&D programme of
   Madrid Region with project "eMadrid" (S2009/TIC-1650).
CR Aguilera David, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P501, DOI 10.1007/978-3-642-34002-4_39
   Aguilera D, 2011, LECT NOTES COMPUT SC, V6999, P323, DOI 10.1007/978-3-642-24574-9_41
   [Anonymous], 2009, Growing Object-Oriented Software, Guided by Tests
   [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 2009, Techreport B-108
   [Anonymous], 2010, DESIGNING USER INTER
   [Anonymous], 2011, P COMP COL WORKSH DS
   [Anonymous], 2000, DESIGN RULES POWER M
   Antkiewicz M., 2013, MDEBE 2013
   Bak Kacper, 2013, 2013 35th International Conference on Software Engineering (ICSE), P1273, DOI 10.1109/ICSE.2013.6606696
   Barker R., 1990, CASE METHOD ENTITY R
   Beck K, 1994, SMALL TALK REPORTS, V4
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Cabot J, 2010, INFORM SYST, V35, P417, DOI 10.1016/j.is.2008.12.002
   Canovas Izquierdo Javier Luis, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P101, DOI 10.1007/978-3-642-40840-3_16
   Cho H., 2011, ICSE 11 WORKSH FLEX
   Cho H., 2012, MISE 12
   Cho Hyun., 2011, P 11 WORKSHOP DOMAIN, P25
   Cicchetti A., 2012, EMERGING TECHNOLOGIE, P319
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti A, 2008, LECT NOTES COMPUT SC, V5301, P311, DOI 10.1007/978-3-540-87875-9_23
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Davis R, 2007, COMPUTER, V40, P34, DOI 10.1109/MC.2007.324
   Dawson L., 2012, ISD
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Deeptimahanti DK, 2009, IEEE INT CONF AUTOM, P680, DOI 10.1109/ASE.2009.48
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Diskin Z, 2000, LECT NOTES ARTIF INT, V1889, P345
   Dyck A., 2013, MDEBE 2013
   Edwards J, 2004, ACM SIGPLAN NOTICES, V39, P84, DOI 10.1145/1052883.1052894
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Elaasar M, 2011, LECT NOTES COMPUT SC, V6698, P282, DOI 10.1007/978-3-642-21470-7_20
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Izquierdo Javier Luis Canovas, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P272, DOI 10.1007/978-3-642-38709-8_18
   Javed F, 2008, INFORM SOFTWARE TECH, V50, P948, DOI 10.1016/j.infsof.2007.08.003
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Liquiere M., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P305
   Liu WY, 2007, INT J DOC ANAL RECOG, V9, P13, DOI 10.1007/s10032-006-0025-x
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P281, DOI 10.1007/978-3-642-22655-7_14
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nierstrasz O, 2010, J OBJECT TECHNOL, V9
   OMG, UML 2 4 1 SPEC
   Paige R.F., 2004, WISME 04
   Perera R, 2010, LECT NOTES COMPUT SC, V5937, P186, DOI 10.1007/978-3-642-11503-5_17
   Sadilek D. A., 2008, CEUR WORKSHOP P, P21
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wüst D, 2011, LECT NOTES COMPUT SC, V6606, P100, DOI 10.1007/978-3-642-19858-8_12
   [No title captured]
NR 55
TC 40
Z9 44
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2015
VL 14
IS 4
BP 1323
EP 1347
DI 10.1007/s10270-013-0392-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX1AF
UT WOS:000365427900003
DA 2024-07-18
ER

PT J
AU Kunze, M
   Weidlich, M
   Weske, M
AF Kunze, Matthias
   Weidlich, Matthias
   Weske, Mathias
TI Querying process models by behavior inclusion
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Process model search; Behavioral querying; Trace inclusion; Process
   model repositories
ID BUSINESS PROCESS MODELS; PETRI NETS; DISCOVERY
AB Business processes are vital to managing organizations as they sustain a company's competitiveness. Consequently, these organizations maintain collections of hundreds or thousands of process models for streamlining working procedures and facilitating process implementation. Yet, the management of large process model collections requires effective searching capabilities. Recent research focused on similarity search of process models, but querying process models is still a largely open topic. This article presents an approach to querying process models that takes a process example as input and discovers all models that allow replaying the behavior of the query. To this end, we provide a notion of behavioral inclusion that is based on trace semantics and abstraction. Additional to deciding a match, a closeness score is provided that describes how well the behavior of the query is represented in the model and can be used for ranking. The article introduces the formal foundations of the approach and shows how they are applied to querying large process model collections. An experimental evaluation has been conducted that confirms the suitability of the solution as well as its applicability and scalability in practice.
C1 [Kunze, Matthias; Weske, Mathias] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Weidlich, Matthias] Technion Israel Inst Technol, Haifa, Israel.
C3 University of Potsdam; Technion Israel Institute of Technology
RP Weidlich, M (corresponding author), Technion Israel Inst Technol, Haifa, Israel.
EM matthias.kunze@hpi.uni-potsdam.de; weidlich@tx.technion.ac.il;
   mathias.weske@hpi.uni-potsdam.de
OI Weidlich, Matthias/0000-0003-3325-7227
CR Akkiraju R, 2010, LECT NOTES COMPUT SC, V6470, P515, DOI 10.1007/978-3-642-17358-5_35
   [Anonymous], 1985, COMPUTATIONAL GEOMET, DOI DOI 10.1007/978-1-4612-1098-6
   Awad A., P 30 INT C CONC MOD
   Awad A, 2008, IEEE INT ENTERP DIST, P85, DOI 10.1109/EDOC.2008.11
   Awad A, 2010, LECT NOTES BUS INF P, V43, P5
   Basten T, 2001, J LOGIC ALGEBR PROGR, V47, P47, DOI 10.1016/S1567-8326(00)00004-7
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   Beeri C, 2008, INFORM SYST, V33, P477, DOI 10.1016/j.is.2008.02.005
   Belhajjame K, 2009, LECT NOTES BUS INF P, V29, P85
   Beyer K, 1999, LECT NOTES COMPUT SC, V1540, P217
   Bose RPJC, 2010, LECT NOTES COMPUT SC, V6336, P227
   Branco Moises Castelo, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P626, DOI 10.1007/978-3-642-33666-9_40
   Bunke H, 1998, PATTERN RECOGN LETT, V19, P255, DOI 10.1016/S0167-8655(97)00179-7
   Bunke H, 1983, PATTERN RECOGN LETT, V1, P245, DOI 10.1016/0167-8655(83)90033-8
   Choi I, 2007, KNOWL PROCESS MANAG, V14, P303, DOI 10.1002/kpm.290
   Cohen W.W., 2003, IJCAI WORKSH INF INT, P73, DOI DOI 10.5555/3104278.3104293
   Decker G, 2009, DATA KNOWL ENG, V68, P777, DOI 10.1016/j.datak.2009.02.013
   Deutch D, 2007, LECT NOTES COMPUT SC, V4797, P169
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas M., 2009, Bulletin of the Technical Committee on Data Engineering, V32, P23, DOI DOI 10.1016/J.COMPIND.2011.12.003
   EHRIG M, 2007, P 4 AS PAC C CONC MO, V67, P71
   Ehrig M., 2007, Proceedings of the Fourth Asia-Pacific Conference on Conceptual Modelling, Darlinghurst: Australian Computer Society, P71
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Fahland D, 2009, LECT NOTES COMPUT SC, V5701, P278, DOI 10.1007/978-3-642-03848-8_19
   Gerke K, 2009, LECT NOTES COMPUT SC, V5870, P76, DOI 10.1007/978-3-642-05148-7_8
   Grigori D., 2006, P IEEE INT C WEB SER, P145, DOI 10.1109/ICWS.2006.37
   Hack M., 1976, THESIS MIT
   Jin T., 2011, LECT NOTES COMPUTER, V7044, P56
   Jin T, 2011, LECT NOTES COMPUT SC, V7044, P56
   Jung JY, 2008, P IEEE I C SERV COMP, P613, DOI 10.1109/SCC.2008.69
   Kiepuszewski B, 2003, ACTA INFORM, V39, P143, DOI 10.1007/s00236-002-0105-4
   KOSCHMIDER A, 2007, THESIS U KARLSRUHE T
   Kunze Matthias, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P166, DOI 10.1007/978-3-642-23059-2_15
   Kunze M., 2010, PROCESS
   Kunze M, 2012, LECT NOTES BUS INF P, V113, P107
   Leopold H, 2012, LECT NOTES COMPUT SC, V7481, P319, DOI 10.1007/978-3-642-32885-5_25
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Lipkus AH, 1999, J MATH CHEM, V26, P263, DOI 10.1023/A:1019154432472
   Lohmann N, 2009, LECT NOTES COMPUT SC, V5460, P46
   Lu R, 2007, LECT NOTES COMPUT SC, V4801, P165
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Markovic I., 2007, QUERYING BUSINESS PR, P234
   Markovic I, 2008, LECT NOTES COMPUT SC, V4928, P484
   Meersman R., 2010, LECT NOTES COMPUTER, V6426
   Mendling J., 2008, LECT NOTES BUSINESS, V6
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Reisig W., 1985, MONOGRAPHS THEORETIC, V4
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P377, DOI 10.1108/14637150610668024
   Sakr S., 2012, P 3 INT WOR IN PRESS
   Sakr S, 2010, INT J WEB INF SYST, V6, P101, DOI 10.1108/17440081011053104
   Sokolsky O, 2006, LECT NOTES COMPUT SC, V3920, P426
   Tao Jin, 2012, Web Technologies and Applications. Proceedings of the 14th Asia-Pacific Web Conference, APWeb 2012, P677, DOI 10.1007/978-3-642-29253-8_64
   Uba Reina, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P248, DOI 10.1007/978-3-642-23059-2_20
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4102, P129
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Wang JM, 2010, LECT NOTES COMPUT SC, V6426, P394
   Weidlich M., 2010, LECT NOTES COMPUTER, P483
   Weidlich M., 2012, Appl. Theor. Petri Nets, P148
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Zezula P., 2005, Similarity Search: The Metric Space Approach
   Zha HP, 2010, COMPUT IND, V61, P463, DOI 10.1016/j.compind.2010.01.001
   [No title captured]
NR 69
TC 17
Z9 24
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2015
VL 14
IS 3
BP 1105
EP 1125
DI 10.1007/s10270-013-0389-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ7DX
UT WOS:000360764200005
DA 2024-07-18
ER

PT J
AU Rull, G
   Farré, C
   Queralt, A
   Teniente, E
   Urp, T
AF Rull, Guillem
   Farre, Carles
   Queralt, Anna
   Teniente, Ernest
   Urp, Toni
TI AuRUS: explaining the validation of UML/OCL conceptual schemas
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Validation; Conceptual modeling; UML; OCL; Automated reasoning;
   Explanation
ID MINIMAL UNSATISFIABLE SUBSETS; OCL
AB The validation and the verification of conceptual schemas have attracted a lot of interest during the last years, and several tools have been developed to automate this process as much as possible. This is achieved, in general, by assessing whether the schema satisfies different kinds of desirable properties which ensure that the schema is correct. In this paper we describe AuRUS, a tool we have developed to analyze UML/OCL conceptual schemas and to explain their (in)correctness. When a property is satisfied, AuRUS provides a sample instantiation of the schema showing a particular situation where the property holds. When it is not, AuRUS provides an explanation for such unsatisfiability, i.e., a set of integrity constraints which is in contradiction with the property.
C1 [Rull, Guillem; Farre, Carles; Urp, Toni] Univ Politecn Cataluna, BarcelonaTech, Dept Serv & Informat Syst Engn ESSI, Barcelona, Spain.
   [Teniente, Ernest] Univ Politecn Cataluna, BarcelonaTech, Dept Serv & Informat Syst Engn, Barcelona, Spain.
   [Queralt, Anna] Barcelona Supercomp Ctr, Storage Syst Grp, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Universitat Politecnica de Catalunya; Barcelona Supercomputer
   Center (BSC-CNS)
RP Teniente, E (corresponding author), Univ Politecn Cataluna, BarcelonaTech, Dept Serv & Informat Syst Engn ESSI, Barcelona, Spain.
EM grull@essi.upc.edu; farre@essi.upc.edu; anna.queralt@bsc.es;
   teniente@essi.upc.edu; urpi@essi.upc.edu
RI Queralt, Anna/X-2265-2019; Farré, Carles/A-4062-2008; Farré,
   Carles/ABG-2966-2020; Teniente, Ernest/L-4313-2014
OI Queralt, Anna/0000-0003-2782-2955; Farré, Carles/0000-0001-5814-3782;
   Farré, Carles/0000-0001-5814-3782; 
FU Ministerio de Ciencia and Tecnologia [TIN2011-24747, TIN2008-00444];
   FEDER funds
FX Our thanks to Lluis Munguia and Xavier Oriol, for their valuable help in
   the development of this tool. This work has been partly supported by
   Ministerio de Ciencia and Tecnologia under TIN2011-24747, TIN2008-00444,
   Grupo Consolidado, and the FEDER funds.
CR Abiteboul S., 1995, FDN DATABASES, V8
   [Anonymous], 2003, P IJCAI 2003
   [Anonymous], 1993, IJCAI93 VOLS 1 2
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Bailey J, 2005, LECT NOTES COMPUT SC, V3350, P174
   Borgida A, 2008, LECT NOTES COMPUT SC, V5332, P1440
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   Bruning Jens, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P156, DOI 10.1007/978-3-642-30473-6_13
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Chiorean D., 2004, ELECTRON NOTES THEOR, V102, P99, DOI DOI 10.1016/J.ENTCS.2003.09.005
   Clavel M, 2006, LECT NOTES COMPUT SC, V4019, P368
   de Siqueira N. J. L., 1988, ECAI 88. Proceedings of the 8th European Conference on Artificial Intelligence, P339
   Decker H., 1996, Advances in Database Technology - EDBT '96. 5th International Conference on Extending Database Technology. Proceedings, P535
   Farré C, 2005, DATA KNOWL ENG, V53, P163, DOI 10.1016/j.datak.2004.08.002
   Gogolla M, 2002, LECT NOTES COMPUT SC, V2263, P85
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Grégoire E, 2008, PROC INT C TOOLS ART, P74, DOI 10.1109/ICTAI.2008.39
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Liffiton MH, 2005, LECT NOTES COMPUT SC, V3569, P173
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   Meyer Thomas., 2006, P 21 NATL C ARTIFICI, P269
   NEBEL B, 1990, ARTIF INTELL, V43, P235, DOI 10.1016/0004-3702(90)90087-G
   Queralt A., 2010, CONCEPTUAL MODELING
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Rull G, 2011, THESIS U POLITECNICA
   Rull G., 2007, P 16 ACM C C INF KNO, P955
   Rull G, 2008, LECT NOTES COMPUT SC, V5181, P660, DOI 10.1007/978-3-540-85654-2_56
   Schlobach S, 2007, J AUTOM REASONING, V39, P317, DOI 10.1007/s10817-007-9076-z
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Wahler M, 2010, SOFTW SYST MODEL, V9, P225, DOI 10.1007/s10270-009-0123-6
   Wille R, 2012, DES AUT TEST EUROPE, P1078
   Zhang LT, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P880
NR 33
TC 16
Z9 16
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2015
VL 14
IS 2
BP 953
EP 980
DI 10.1007/s10270-013-0350-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH5SA
UT WOS:000354094400025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Blouin, A
   Combemale, B
   Baudry, B
   Beaudoux, O
AF Blouin, Arnaud
   Combemale, Benoit
   Baudry, Benoit
   Beaudoux, Olivier
TI Kompren: modeling and generating model slicers
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model slicing; Domain specific language
ID SUPPORT
AB Among model comprehension tools, model slicers are tools that extract a subset of model elements, for a specific purpose. Model slicers provide a mechanism to isolate and focus on parts of the model, thereby improving the overall analysis process. However, existing slicers are dedicated to a specific modeling language. This is an issue when we observe that new domain specific modeling languages, for which we want slicing abilities, are created almost on a daily basis. This paper proposes the Kompren language to model and generate model slicers for any DSL (e.g. modeling for software development or for civil engineering) and for different purposes (e.g. monitoring and model comprehension). We detail the semantics of the Kompren language and of the model slicer generator. This provides a set of expected properties about the slices that are extracted by the different forms of the slicer. Then we illustrate these different forms of slicers on case studies from various domains.
C1 [Blouin, Arnaud] IRISA INRIA, INSA Rennes, Triskell Team, Rennes, France.
   [Combemale, Benoit] Univ Rennes 1, IRISA INRIA, Triskell Team, Rennes, France.
   [Baudry, Benoit] IRISA INRIA, INRIA Rennes, Triskell Team, Rennes, France.
   [Beaudoux, Olivier] TRAME ESEO, Angers, France.
C3 Universite Paris Saclay; Universite de Rennes; Institut National des
   Sciences Appliquees de Rennes; Universite Paris Saclay; Universite de
   Rennes; Universite Paris Saclay; Universite de Rennes
RP Blouin, A (corresponding author), IRISA INRIA, INSA Rennes, Triskell Team, Rennes, France.
EM arnaud.blouin@irisa.fr; bcombemale@irisa.fr; bbaudry@inria.fr;
   olivier.beaudoux@eseo.fr
OI Blouin, Arnaud/0000-0002-5974-9601
FU EU [256980]
FX This work is partially supported by the EU FP7-ICT-2009.1.4 Project No
   256980, NESSoS: Network of excellence on engineering secure future
   internet software services and systems.
CR Acher M., 2011, 26 IEEE ACM INT C AU
   Acher M., 2012, ASP OR SOFTW DEV AOS
   Androutsopoulos K., 2011, INT C SOFTW ENG ICSE
   [Anonymous], 2001, software focus
   Arnaud H., 2012, SOFTW SYST MODEL
   BAE JH, 2008, 8 IEEE INT C COMP IN, P772
   Beaudoux O, 2010, LECT NOTES COMPUT SC, V6394, P91
   Binkley D, 2000, PROG COMPREHEN, P161, DOI 10.1109/WPC.2000.852490
   Blouin A, 2011, LECT NOTES COMPUT SC, V6981, P62, DOI 10.1007/978-3-642-24485-8_6
   Clark Tony, 2011, P WORKSH COMP EV MOD
   Falessi D., 2011, SIGSOFT FSE 11 19 AC
   Gallagher K., 2008, P FRONT SOFTW MAINT
   Hall R. J., 1995, Automated Software Engineering, V2, P33, DOI 10.1007/BF00873408
   Heimdahl MPE, 1998, EUROMICRO CONF PROC, P435, DOI 10.1109/EURMIC.1998.711837
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   Jeanneret C., 2011, INT C SOFTW ENG ICSE
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   KELSEN P, 2011, P INT C FUND APPR SO, V6603, P171
   Kim T., 2000, J. Computer and Information Science, V1, P91
   Korel B., 2003, P IEEE INT C SOFTW M
   Labbé S, 2008, FORM ASP COMPUT, V20, P563, DOI 10.1007/s00165-008-0086-3
   Lallchandani J.T., 2011, IEEE T SOFTWARE ENG, V2, P21
   Lano K, 2010, LECT NOTES COMPUT SC, V6395, P228
   Luangsodsai A., 2010, P COMP SCI EL ENG C, P1
   Miao Chunyu, 2011, 2011 International Conference on Intelligent Computation Technology and Automation (ICICTA), P110, DOI 10.1109/ICICTA.2011.34
   Muller P.-A., 2010, SOFTWARE SYSTEMS MOD, P1
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   NING JQ, 1994, COMMUN ACM, V37, P50, DOI 10.1145/175290.175295
   Philip S., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1640162.1666579
   Rilling J, 2003, PROG COMPREHEN, P115
   Sen S., 2009, 12 INT C MOD DRIV EN
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Shaikh A., 2011, ADV SOFTW ENG, V70, P18
   Shaikh A, 2010, SPRINGER SER RELIAB, P173, DOI 10.1007/978-1-84882-213-9_8
   Silva J, 2011, ADV ENG SOFTW, V42, P976, DOI 10.1016/j.advengsoft.2011.05.024
   Steel J., 2010, SOFTW SYST MODEL, V11, P1
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Ujhelyi Z., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P404, DOI 10.1109/ASE.2011.6100084
   Van Langenhove S, 2007, LECT NOTES COMPUT SC, V4409, P142
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yatapanage N, 2010, IFIP ADV INF COMM TE, V323, P125
   Zhao JJ, 1998, IEEE INT C ENG COMP, P87, DOI 10.1109/ICECCS.1998.706659
NR 47
TC 15
Z9 17
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 321
EP 337
DI 10.1007/s10270-012-0300-x
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100019
DA 2024-07-18
ER

PT J
AU de Lara, J
   Guerra, E
   Cuadrado, JS
AF de lara, Juan
   Guerra, Esther
   Sanchez Cuadrado, Jesus
TI Model-driven engineering with domain-specific meta-modelling languages
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Multi-level meta-modelling; Domain-specific
   meta-modelling; Textual concrete syntax; METADEPTH
AB Domain-specific modelling languages are normally defined through general-purpose meta-modelling languages like the MOF. While this is satisfactory for many model-driven engineering (MDE) projects, several researchers have identified the need for domain-specific meta-modelling (DSMM) languages. These provide customised domain-specific meta-modelling primitives aimed at the definition of modelling languages for a specific domain, as well as the construction of meta-model families. Unfortunately, current approaches to DSMM rely on ad hoc methods which add unnecessary complexity to the realization of DSMM in practice. Hence, the goal of this paper is to simplify the definition and usage of DSMM languages. For this purpose, we apply multi-level meta-modelling for the systematic engineering of DSMM architectures. Our method integrates techniques to control the meta-modelling primitives offered to the users of the DSMM languages, provides a flexible approach to define textual concrete syntaxes for DSMM languages, and extends existing model management languages (for model-to-model transformation, in-place transformation and code generation) to work in a multi-level setting, thus enabling the practical use of DSMM in MDE. As a proof of concept, we report on a working implementation of these ideas in the MetaDepth tool.
C1 [de lara, Juan; Guerra, Esther; Sanchez Cuadrado, Jesus] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es; Jesus.Sanchez.Cuadrado@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity [TIN2011-24139]; R&D
   programme of Madrid Region with project "eMadrid" [S2009/TIC-1650]
FX We thank the referees for their detailed and useful comments. This work
   has been funded by the Spanish Ministry of Economy and Competitivity
   with project "Go Lite" (TIN2011-24139), and the R&D programme of Madrid
   Region with project "eMadrid" (S2009/TIC-1650).
CR Abadi M., 1996, MONOGRAPHS COMPUTER
   Aschauer T, 2009, LECT NOTES COMPUT SC, V5795, P17, DOI 10.1007/978-3-642-04425-0_3
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C, 1997, FIRST INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING WORKSHOP, PROCEEDINGS, P90
   Atkinson Colin, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P208, DOI 10.1007/978-3-642-30476-7_14
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2012, PROC INT CONF SOFTW, P1269, DOI 10.1109/ICSE.2012.6227102
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   de Lara Juan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P259, DOI 10.1007/978-3-642-31491-9_20
   de Lara J., 2012, COMPUT J IN PRESS
   de Lara J., 2011, SOFTW SYST IN PRESS
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Demuth Andreas, 2011, P 19 ACM SIGSOFT S 1, P452, DOI [10.1145/2025113.2025189, DOI 10.1145/2025113.2025189]
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   Espinazo-Pagán J, 2008, LECT NOTES COMPUT SC, V5095, P185, DOI 10.1007/978-3-540-69100-6_13
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gonzalez-Perez C, 2007, J SYST SOFTWARE, V80, P1778, DOI 10.1016/j.jss.2007.02.048
   Gunther C.W., 2009, TECHNICAL REPORT
   Herrmannsdorfer M, 2010, ELECTRON NOTES THEOR, V253, P121, DOI 10.1016/j.entcs.2010.08.036
   HOLT J., 2009, Pragmatic Guide to Business Process Modelling
   Jablonski Stefan, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1011, DOI 10.1109/COMPSAC.2008.58
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kühne T, 2007, ACM SIGPLAN NOTICES, V42, P229
   Langer P, 2011, LECT NOTES COMPUT SC, V6705, P52, DOI 10.1007/978-3-642-21952-8_6
   Liu L., 2012, CEUR WORKSHOP PROC, V855, P131
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   Odell J, 1994, POWER TYPES JOOP, V7, P8
   OMG, OCL 2 3 1
   OMG, MOF 2 4 1
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Sanchez Cuadrado Jesus, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P176, DOI 10.1007/978-3-642-30476-7_12
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Cuadrado JS, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a4
   Sanchez-Cuadrado Jesus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P3, DOI 10.1007/978-3-642-33666-9_2
   Sen S, 2012, SOFTW SYST MODEL, V11, P111, DOI 10.1007/s10270-010-0181-9
   Steel Jim, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P93, DOI 10.1007/978-3-642-21732-6_7
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Volz B., 2010, 10 WORKSH DOM SPEC M
   Wimmer M., 2012, J OBJECT TECHNOLOGY, V11
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P334
NR 48
TC 36
Z9 36
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2015
VL 14
IS 1
BP 429
EP 459
DI 10.1007/s10270-013-0367-z
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA6LT
UT WOS:000349026100025
DA 2024-07-18
ER

PT J
AU Ciancone, A
   Drago, ML
   Filieri, A
   Grassi, V
   Koziolek, H
   Mirandola, R
AF Ciancone, Andrea
   Drago, Mauro Luigi
   Filieri, Antonio
   Grassi, Vincenzo
   Koziolek, Heiko
   Mirandola, Raffaela
TI The KlaperSuite framework for model-driven reliability analysis of
   component-based systems
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Model-driven engineering; Reliability analysis and Component-based
   systems
ID SOFTWARE; PERFORMANCE; TRANSFORMATION; PREDICTION; SCENARIOS
AB Automatic prediction tools play a key role in enabling the application of non-functional requirements analysis, to simplify the selection and the assembly of components for component-based software systems, and in reducing the need for strong mathematical skills for software designers. By exploiting the paradigm of Model-Driven Engineering (MDE), it is possible to automatically transform design models into analytical models, thus enabling formal property verification. MDE is the core paradigm of the KlaperSuite framework presented in this paper, which exploits the KLAPER pivot language to fill the gap between design and analysis of component-based systems for reliability properties. KlaperSuite is a family of tools empowering designers with the ability to capture and analyze quality of service views of their systems, by building a one-click bridge towards a number of established verification instruments. In this article, we concentrate on the reliability-prediction capabilities of KlaperSuite and we evaluate them with respect to several case studies from literature and industry.
C1 [Ciancone, Andrea; Drago, Mauro Luigi; Filieri, Antonio; Mirandola, Raffaela] Politecn Milan, I-20133 Milan, Italy.
   [Filieri, Antonio] Univ Stuttgart, Reliable Software Syst Grp, D-70174 Stuttgart, Germany.
   [Grassi, Vincenzo] Univ Roma Tor Vergata, Rome, Italy.
   [Koziolek, Heiko] ABB Corp Res, Ind Software Syst, Ladenburg, Germany.
C3 Polytechnic University of Milan; University of Stuttgart; University of
   Rome Tor Vergata; ABB
RP Filieri, A (corresponding author), Politecn Milan, I-20133 Milan, Italy.
EM drago@elet.polimi.it; filieri@elet.polimi.it; vgrassi@info.uniroma2.it;
   heiko.koziolek@de.abb.com; mirandola@elet.polimi.it
RI Koziolek, Heiko/AAF-5917-2020
OI Filieri, Antonio/0000-0001-9646-646X; MIRANDOLA,
   RAFFAELA/0000-0003-3154-2438
CR Aleti A., 2009, MOMPES
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], OPENARCHITECTUREWARE
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bézivin J, 2009, SOFTW SYST MODEL, V8, P303, DOI 10.1007/s10270-008-0097-9
   Bures T, 2008, MHDMRTC23020081SE MA
   Canfora G., 2005, GECCO
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Ciancone A, 2011, LECT NOTES COMPUT SC, V6705, P99, DOI 10.1007/978-3-642-21952-8_9
   Cortellessa V, 2010, FASE
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Drago ML, 2011, LECT NOTES COMPUT SC, V6981, P2, DOI 10.1007/978-3-642-24485-8_2
   Etessami K, 2005, LECT NOTES COMPUT SC, V3404, P340
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gokhale SS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P64, DOI 10.1109/ISSRE.2002.1173214
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Grassi V, 2008, LECT NOTES COMPUT SC, V5153, P327
   Grassi V, 2007, J SYST SOFTWARE, V80, P528, DOI 10.1016/j.jss.2006.07.023
   Grassi V, 2009, LECT NOTES COMPUT SC, V5525, P201, DOI 10.1007/978-3-642-02161-9_11
   Gu, 2005, P 5 INT WORKSHOP SOF, P99
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Horgan J.R., 1996, HDB SOFTWARE RELIABI
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Jackson E. K., 2010, EMSOFT
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Koziolek Heiko, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P279, DOI 10.1109/ISSRE.2010.15
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   McGregor J.D., 2007, SEI2007TN001 CMU
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   Mirandola R., 2011, ICECCS, P2
   Neema S., 2003, EMSOFT
   Object Management Group, 2008, QVT 1 0 SPEC
   Object Management Group (OMG), 2010, SYST MOD LANG 1 2
   Object Management Group (OMG), 2010, UN MOD LANG UML 2 3
   Palladio, SOFTW ARCH SIM
   Parsons T, 2005, DSM
   Perez-Palacin Diego, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P299, DOI 10.1109/ICSTW.2010.20
   Petri C. A., 1962, dissertation
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Popic P, 2005, 16th IEEE International Symposium on Software Reliability Engineering, Proceedings, P53, DOI 10.1109/ISSRE.2005.18
   Q-ImPrESS Consortium, 2010, Q IMPRESS PROJ
   Randazzo E., 2010, THESIS U DEGLI STUDI
   Rausch A, 2008, LECT NOTES COMPUT SC, V5153, P1
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Rodrigues GN, 2007, PROC INT CONF SOFTW, P63, DOI 10.1109/ICSECOMPANION.2007.59
   Sato N, 2007, P IEEE I C SERV COMP, P114
   Saxena T., 2010, MODELS
   Sharma VS, 2007, J SYST SOFTWARE, V80, P493, DOI 10.1016/j.jss.2006.07.021
   Smith C. U., 2002, PERFORMANCE SCALABIL
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   WOSP, 1998, P INT WORKSH SOFTW P
   Xiuping Wu, 2004, Software Engineering Notes, V29, P290, DOI 10.1145/974043.974089
   Xu J., 2008, WOSP
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
NR 71
TC 8
Z9 10
U1 1
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2014
VL 13
IS 4
BP 1269
EP 1290
DI 10.1007/s10270-013-0334-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ0SP
UT WOS:000342493300005
DA 2024-07-18
ER

PT J
AU Närman, P
   Buschle, M
   Ekstedt, M
AF Narman, Per
   Buschle, Markus
   Ekstedt, Mathias
TI An enterprise architecture framework for multi-attribute information
   systems analysis
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Enterprise architecture; Enterprise architecture analysis; Enterprise
   architecture tool; Data accuracy; Technology usage; Service
   availability; Service response time
ID TASK-TECHNOLOGY FIT; ACCEPTANCE MODEL; USER ACCEPTANCE; BUSINESS VALUE;
   DESIGN; RELIABILITY; NETWORKS; QUALITY; SCENARIOS; ADOPTION
AB Enterprise architecture is a model-based IT and business management discipline. Enterprise architecture analysis concerns using enterprise architecture models for analysis of selected properties to provide decision support. This paper presents a framework based on the ArchiMate metamodel for the assessment of four properties, viz., application usage, system availability, service response time and data accuracy. The framework integrates four existing metamodels into one and implements these in a tool for enterprise architecture analysis. The paper presents the overall metamodel and four viewpoints, one for each property. The underlying theory and formalization of the four viewpoints is presented. In addition to the tool implementation, a running example as well as guidelines for usage makes the viewpoints easily applicable.
C1 [Narman, Per; Buschle, Markus; Ekstedt, Mathias] Royal Inst Technol, S-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Närman, P (corresponding author), Royal Inst Technol, Osquldas Vag 10, S-10044 Stockholm, Sweden.
EM pern@ics.kth.se
RI Ekstedt, Mathias/U-7557-2019
CR Aier S, 2011, INF SYST E-BUS MANAG, V9, P133, DOI 10.1007/s10257-010-0130-8
   [Anonymous], 2015, Introduction to Operations Research
   [Anonymous], COB 4 1
   [Anonymous], 2009, THESIS MIT
   [Anonymous], 2005, MODAF HDB
   [Anonymous], OBJ CONSTR LANG VERS
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   BALLOU DP, 1985, MANAGE SCI, V31, P150, DOI 10.1287/mnsc.31.2.150
   Barber KS, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P172, DOI 10.1109/ASE.2002.1115011
   Bengtsson P., 1998, SOFTW REUS 1998 P 5, P308
   Bernus P., 2003, Annual Reviews in Control, V27, P211, DOI 10.1016/j.arcontrol.2003.09.004
   Bharadwaj A, 2009, J STRATEGIC INF SYST, V18, P66, DOI 10.1016/j.jsis.2009.04.001
   Bocciarelli P, 2011, SOFTW SYST MODEL, V10, P265, DOI 10.1007/s10270-010-0150-3
   Bradley RV, 2011, MIS Q EXEC, V10, P73
   Brynjolfsson E, 1996, MANAGE SCI, V42, P541, DOI 10.1287/mnsc.42.4.541
   Buchholz P., 1994, Queueing Systems Theory and Applications, V15, P59, DOI 10.1007/BF01189232
   Buckl S., 2009, 15 AM C INF SYST AMC
   Buckl S, 2009, LECT NOTES COMPUT SC, V5472, P363, DOI 10.1007/978-3-642-01247-1_37
   Burton B., 2010, HYPE CYCLE ENTERPRIS
   Buschle M, 2011, LECT NOTES BUS INF P, V72, P108
   BUZEN JP, 1973, COMMUN ACM, V16, P527, DOI 10.1145/362342.362345
   BUZEN JP, 1976, ACTA INFORM, V7, P167, DOI 10.1007/BF00265769
   Chang HH, 2008, TECHNOVATION, V28, P564, DOI 10.1016/j.technovation.2008.03.006
   Cobb BR, 2006, INT J APPROX REASON, V41, P257, DOI 10.1016/j.ijar.2005.06.002
   CUSHING BE, 1974, ACCOUNT REV, V49, P24
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Boer FrankS., 2005, P 38 ANN HAWAII INT, p222b, DOI DOI 10.1109/HICSS.2005
   De Miguel M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P83, DOI 10.1145/350391.350411
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Demathieu S, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P50
   Dishaw MT, 1998, J SYST SOFTWARE, V44, P107, DOI 10.1016/S0164-1212(98)10048-1
   Dishaw MT, 1999, INFORM MANAGE-AMSTER, V36, P9, DOI 10.1016/S0378-7206(98)00101-3
   Dunsire K, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P62, DOI 10.1109/ECBS.2005.66
   Ernst A., 2008, P 15 C PATT LANG PRO, P7
   Framework E., 2011, EMF OCL PLUGIN ECLIP
   Frank U., 2008, DESIGNING UTILISING, P89
   Franke U., 2009, P CAISE FOR 2009, P61
   Franke U., 2009, 42 ANN SIM S ANSS
   Friedman N, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1300
   Gammelgård M, 2010, INT J SERV TECHNOL M, V13, P105, DOI 10.1504/IJSTM.2010.029673
   Gilmore S, 2011, SOFTW SYST MODEL, V10, P287, DOI 10.1007/s10270-010-0155-y
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Harrison P.G., 1992, Performance Modelling of Communication Networks and Computer Architectures
   Henderson JC, 1990, INFORM SYST RES, V1, P227, DOI 10.1287/isre.1.3.227
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holschke O, 2009, LECT NOTES COMPUT SC, V5472, P339, DOI 10.1007/978-3-642-01247-1_35
   Hoyland A., 1994, System reliability theory
   Iacob ME, 2007, INT J ENTERP INF SYS, V3, P42, DOI 10.4018/jeis.2007010103
   Iacob ME, 2006, INTEROPERABILITY OF ENTERPRISE SOFTWARE AND APPLICATIONS, P239, DOI 10.1007/1-84628-152-0_22
   IBM Global Services, 1998, IMPR SYST AV
   IEC technical committee 57, 2003, 619681 IEC
   International Organization for Standardization and International Electrotechnical Commission, 2007, 420102007 ISO IEC
   ISO, 2003, 912622003 ISO IEC
   Jaeger MC, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P181, DOI 10.1109/EEE.2005.110
   Johansson E., 2006, P 39 ANN HAW INT C S, p219a
   Johansson K., 1997, DRIFTSAKERHET UNDERH
   Johnson P., 2007, Enterprise Architecture: Models and Analyses for Information Systems Decision Making
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Jonkers H., 2004, ANAL ENTERPRISE ARCH
   Kans M., ENG ASSET LIFECYCLE
   Kasunic M., 2001, MEASURING SYSTEMS IN
   Kazman R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Klein MH, 1999, INT FED INFO PROC, V12, P225
   Klopping I. M., 2004, Information Technology, Learning, and Performance Journal, V22, P35
   Kurpjuweit S., 2007, P INT WORKSHOP ENTER, P143
   Lagerström R, 2010, J SYST SOFTWARE, V83, P1387, DOI 10.1016/j.jss.2010.02.019
   LAM SS, 1983, COMMUN ACM, V26, P203, DOI 10.1145/358061.358075
   Lankhorst M., 2009, ENTERPRISE ARCHITECT, V2nd
   Lankhorst MM, 2009, LECT NOTES BUS INF P, V29, P367
   Lankhorst MM, 2004, ADV ENG INFORM, V18, P205, DOI 10.1016/j.aei.2005.01.005
   Laprie J., 2002, SOFTWARE ENG IEEE T, V18, P130
   Leangsuksun C., 2003, CLUST COMP 2003 P 20, P380
   Ledoux J, 1999, IEEE T RELIAB, V48, P159, DOI 10.1109/24.784274
   Lee Y., 2006, JOURNEY DATA QUALITY
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Melville N, 2004, MIS QUART, V28, P283
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   MUKHOPADHYAY T, 1995, MIS QUART, V19, P137, DOI 10.2307/249685
   Narman P., 2011, J STRATEG INF UNPUB
   Narman P., 2010, ENT DISTR O IN PRESS
   Närman P, 2014, ENTERP INF SYST-UK, V8, P1, DOI 10.1080/17517575.2011.647092
   Närman P, 2012, J SYST SOFTWARE, V85, P1953, DOI 10.1016/j.jss.2012.02.035
   Närman P, 2011, ENTERP INF SYST-UK, V5, P37, DOI 10.1080/17517575.2010.507878
   Närman P, 2009, ELECTRON NOTES THEOR, V233, P29, DOI 10.1016/j.entcs.2009.02.059
   NATO Consultation Command and Control Board: Command and control board (nc3b), 2007, AC322WP0125 NATO CON
   Nunamaker J. F.  Jr., 1990, Journal of Management Information Systems, V7, P89
   Pagani M, 2006, INFORM MANAGE-AMSTER, V43, P847, DOI 10.1016/j.im.2006.08.003
   Palmer JW, 2002, INFORM SYST RES, V13, P151, DOI 10.1287/isre.13.2.151.88
   Patton J.D., 1983, PREVENTINE MAINTENAN
   Petriu D., 2000, APPL GRAPH TRANSFORM, V1779/2000, P217, DOI [10.1007/3-540-45104-8_4, DOI 10.1007/3-540-45104-8_4]
   Raderius J., 2009, P 3 WORKSH TRENDS EN
   Redman TC, 1998, COMMUN ACM, V41, P79, DOI 10.1145/269012.269025
   Redman TC, 1996, Data Quality for the Information Age
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Riempp Gerold, 2007, Information Systems and e-Business Management, V5, P359, DOI 10.1007/s10257-007-0052-2
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Ross J., 2006, MIS Q EXEC, V5, P8
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Sasa A, 2011, J SYST SOFTWARE, V84, P1480, DOI 10.1016/j.jss.2011.02.043
   Scott D., 2009, ASSESS YOUR IT SERVI
   Simon D, 2010, COMMUN ASSOC INF SYS, V26, P35
   Smit K., 1922, INFORM MODEL MAINTEN
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Sommestad T., 2010, PROBABILISTIC RELATI
   Stamatelatos M., 2002, FAULT TREE HDB AEROS
   The Open Group, 2009, AECH 1 0 SPEC
   The Open Group, 2009, TOG VERS 9 ENT ED
   Ullberg J., 2010, P INT C INT ENT SOFT
   Van Bon J., 2007, Foundations of IT Service Management Based on ITIL V3: an introduction, V3rd
   vanderAalst WMP, 1996, COMPUT IND, V29, P15, DOI 10.1016/0166-3615(95)00051-8
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V., 2007, MIS Quarterly Executive, V6, P79
   VENKATRAMAN N, 1989, ACAD MANAGE REV, V14, P423, DOI 10.2307/258177
   VESSEY I, 1986, IEEE T SYST MAN CYB, V16, P621, DOI 10.1109/TSMC.1986.289308
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   Wang R., 2001, DATA QUALITY
   Wang R. Y., 2005, INFORM QUALITY
   Wang W., 2002, DEP COMP 1999 P 1999, P143
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Weill P, 1999, MIS QUART, V23, P601, DOI 10.2307/249491
   Woodhouse J., 2006, INT MAINT C
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
   Zachman JA, 1999, IBM SYST J, V38, P454, DOI 10.1147/sj.382.0454
   [No title captured]
   [No title captured]
NR 130
TC 16
Z9 17
U1 1
U2 27
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2014
VL 13
IS 3
BP 1085
EP 1116
DI 10.1007/s10270-012-0288-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AK5YG
UT WOS:000338502600010
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Di Marco, A
   Trubiani, C
AF Cortellessa, Vittorio
   Di Marco, Antinisca
   Trubiani, Catia
TI An approach for modeling and detecting software performance antipatterns
   based on first-order logics
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Software performance antipatterns; Performance analysis; Software
   architectures
ID PREDICTION; PATTERNS; UML
AB The problem of interpreting the results of performance analysis is quite critical in the software performance domain. Mean values, variances and probability distributions are hard to interpret for providing feedback to software architects. Instead, what architects expect are solutions to performance problems, possibly in the form of architectural alternatives (e.g. split a software component in two components and re-deploy one of them). In a software performance engineering process, the path from analysis results to software design or implementation alternatives is still based on the skills and experience of analysts. In this paper, we propose an approach for the generation of feedback based on performance antipatterns. In particular, we focus on the representation and detection of antipatterns. To this goal, we model performance antipatterns as logical predicates and we build an engine, based on such predicates, aimed at detecting performance antipatterns in an XML representation of the software system. Finally, we show the approach at work on a case study.
C1 [Cortellessa, Vittorio; Di Marco, Antinisca; Trubiani, Catia] Univ Aquila, Dipartimento Informat, I-67010 Laquila, Italy.
C3 University of L'Aquila
RP Trubiani, C (corresponding author), Univ Aquila, Dipartimento Informat, Via Vetoio Coppito AQ, I-67010 Laquila, Italy.
EM catia.trubiani@univaq.it
RI Trubiani, Catia/AAU-4040-2021
OI Trubiani, Catia/0000-0002-7675-6942; Di Marco,
   Antinisca/0000-0001-7214-9945
CR [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 2005, FORMAL050704 OMG
   [Anonymous], 2009, FORMAL091102 OMG
   [Anonymous], 2007, JESS RULE ENGINE JAV
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Banks J., 1999, DISCRETE EVENT SYSTE
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   BORODAY S, 2005, WORKSH DYN AN WODA, P1
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Casale Giuliano, 2011, P INT C PERF ENG, P449
   Cortellessa V, 2002, SCI COMPUT PROGRAM, V44, P101, DOI 10.1016/S0167-6423(02)00033-3
   Cortellessa V., 2010, P ICSE, P9
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Cortellessa V, 2010, IEEE INT C ENG COMP, P146, DOI [10.1109/ICECCS.2010.44, 10.1109/ICECCS.2010.24]
   Cortellessa V, 2010, LECT NOTES COMPUT SC, V6013, P368, DOI 10.1007/978-3-642-12029-9_26
   Document Object Model (DOM), 2000, JAVA API XML PROCESS
   Dudney B., 2003, J2EE_AntiPatterns
   Elaasar M, 2006, LECT NOTES COMPUT SC, V4199, P484
   Florescu O, 2009, SIMUL-T SOC MOD SIM, V85, P709, DOI 10.1177/0037549709102850
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Jain R., 1991, EVALUATION REV, V19, P5
   Kant K., 1992, Introduction to computer system performance evaluation
   Kleinrock L., 1975, Queueing Systems-Volume 1: Theory, V1
   KNIESEL G, 2007, WORKSH LINK ASP TECH
   Lazowska E. D., 1984, COMPUTER SYSTEM ANAL
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Milner R., 1989, Communication and concurrency
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Sabetta A., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P217
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith C.U., 2003, 29 INT COMP MEAS GRO, P717
   Smith Connie U., 2002, International Computer Measurement Group Conference
   SMITH CU, 2002, PERFORMANCE SOLUTION
   So SS, 2002, FUZZY SET SYST, V127, P199, DOI 10.1016/S0165-0114(01)00128-2
   Taibi T., 2003, Journal of Object Technology, V2, P127
   Tate B., 2003, MANNING
   Trcka N, 2009, LECT NOTES COMPUT SC, V5565, P425, DOI 10.1007/978-3-642-02144-2_34
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Trubiani C., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance engineering, P19
   *W3C, EXT MARK LANG XML
   WOODSIDE CM, 1995, IEEE T SOFTWARE ENG, V21, P754, DOI 10.1109/32.464545
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Xu J., 2008, P 7 INT WORKSHOP SOF, P1
   Zheng T, 2003, LECT NOTES COMPUT SC, V2794, P169
NR 49
TC 38
Z9 43
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD FEB
PY 2014
VL 13
IS 1
BP 391
EP 432
DI 10.1007/s10270-012-0246-z
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3NS
UT WOS:000331000000018
DA 2024-07-18
ER

PT J
AU Gronmo, R
   Runde, RK
   Moller-Pedersen, B
AF Gronmo, Roy
   Runde, Ragnhild Kobro
   Moller-Pedersen, Birger
TI Confluence of aspects for sequence diagrams
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Aspect; Weave; Confluence; Aspect interaction; Aspect interference;
   Graph transformation; Critical pair; UML; Sequence diagram
ID GRAPH TRANSFORMATION; RESOLUTION; MODELS
AB The last decade has seen several aspect language proposals for UML 2 sequence diagrams. Aspects allow the modeler to define crosscutting concerns of sequence diagrams and to have these woven with the sequence diagrams of a so-called base model, in order to create a woven model. In a real-world scenario, there may be multiple aspects applicable to the same base model. This raises the need to analyse the set of aspects to identify possible aspect interactions (dependencies and conflicts) between applications of aspects. We call a set of aspects terminating if they may not be applied infinitely many times for any given base model. Furthermore, we call a set of terminating aspects confluent, if they, for any given base model, always yield the same final result regardless of the order in which they are applied. Since confluence must hold for any base model, this is a much stronger result than many of the current approaches that have addressed detection of aspect interactions limited to a specific base model. Our aspects are specified using standard sequence diagrams with some extensions. In this paper, we present a confluence theory specialized for our highly expressive aspect language. For the most expressive aspects, we prove that confluence is undecidable. For another class of aspects with considerable expressiveness, we prescribe an algorithm to check confluence. This algorithm is based on what we call an extended critical pair analysis. These results are useful both for modelers and researchers working with sequence diagram aspects and for researchers wanting to establish a confluence theory for other aspect-oriented modelling or model transformation approaches.
C1 [Gronmo, Roy; Runde, Ragnhild Kobro; Moller-Pedersen, Birger] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Gronmo, Roy] SINTEF ICT, Oslo, Norway.
C3 University of Oslo; SINTEF
RP Gronmo, R (corresponding author), Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
EM roy.gronmo@sintef.no
FU Research Council of Norway [167172/V30]; DiVA project [215412]
FX The work reported in this report has been partly funded by The Research
   Council of Norway, grant no. 167172/V30 (the SWAT project), and by the
   DiVA project grant no. 215412 (EU FP7 STREP). We thank Stein Krogdahl
   for his valuable feedback.
CR Aksit M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P39
   Andrews J.H., 2001, Reflection, P187
   [Anonymous], FORMAL20090202 OMG
   Assmann U, 2000, LECT NOTES COMPUT SC, V1799, P24
   Bezem M., 2003, Cambridge Tracts in Theoretical Computer Science
   Carton A, 2009, LECT NOTES COMPUT SC, V5560, P238, DOI 10.1007/978-3-642-03764-1_7
   Clarke S, 2001, PROC INT CONF SOFTW, P5, DOI 10.1109/ICSE.2001.919076
   De Man J., 1993, SDL '93. Using Objects. Proceedings of the Sixth SDL Forum, P157
   Deubler M, 2005, LECT NOTES COMPUT SC, V3713, P522, DOI 10.1007/11557432_40
   Douence R, 2002, LECT NOTES COMPUT SC, V2487, P173
   Douence R., 2004, C SPED ORIENTED SOFT, P141
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fradet P., 1999, LECT NOTES COMPUTER, V1743, P291
   Gronmo R., 2008, LECT NOTES COMPUTER, V5088
   Gronmo R., 2009, CONFLUENCE ASPECTS S
   Gronmo R, 2008, LECT NOTES COMPUT SC, V5063, P122, DOI 10.1007/978-3-540-69927-9_9
   Gronmo R, 2008, LECT NOTES COMPUT SC, V5095, P262, DOI 10.1007/978-3-540-69100-6_18
   Havinga W., 2007, AOSD'07, P85
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   HUET G, 1980, J ACM, V27, P797, DOI 10.1145/322217.322230
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Katz E., 2008, INT WORKSHOP FDN ASP, P29, DOI DOI 10.1145/1394496.1394500
   Katz E., 2009, P 2009 WORKSH FDN AS, P7
   Kiczales Gregor, 2001, ECOOP 01
   Kienzle J, 2009, LECT NOTES COMPUT SC, V5490, P187, DOI 10.1007/978-3-642-02059-9_6
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Klein J, 2007, LECT NOTES COMPUT SC, V4620, P167
   Klein Jacques., 2006, AOSD, P27
   Klint P, 2005, LECT NOTES COMPUT SC, V3838, P88
   Kniesel G., CONDOR TOOL
   Kniesel G, 2009, LECT NOTES COMPUT SC, V5490, P135, DOI 10.1007/978-3-642-02059-9_5
   KNUTH DE, 1970, SIMPLE WORD PROBLEMS
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Krishnamurthi S., 2004, Software Engineering Notes, V29, P137, DOI 10.1145/1041685.1029916
   Küster JM, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P145
   Lambers L, 2006, LECT NOTES COMPUT SC, V4178, P61
   Liang HZ, 2008, LECT NOTES COMPUT SC, V5301, P204, DOI 10.1007/978-3-540-87875-9_15
   Mehner K, 2009, LECT NOTES COMPUT SC, V5490, P235, DOI 10.1007/978-3-642-02059-9_7
   Mens T., 2006, LMO, P167
   Newman MHA, 1942, ANN MATH, V43, P223, DOI 10.2307/1968867
   Oldevik J., 2009, LECT NOTES COMPUTER, V5503
   Oldevik J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P99
   OMG, 2008, FORMAL20080403 OMG
   Plump D, 2005, LECT NOTES COMPUT SC, V3838, P280
   Post E.L., 1946, B AM MATH SOC, V52
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rinard M., 2004, Software Engineering Notes, V29, P147, DOI 10.1145/1041685.1029917
   Sánchez P, 2008, LECT NOTES COMPUT SC, V5301, P766, DOI 10.1007/978-3-540-87875-9_53
   Solberg A, 2005, P INT COMP SOFTW APP, P121
   Sorensen F., SEDI WEAVER TOOL
   Stein D, 2006, INT J SOFTW ENG KNOW, V16, P317, DOI 10.1142/S0218194006002811
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Zhang G., 2009, P 14 WORKSH ASP OR M
NR 54
TC 4
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2013
VL 12
IS 4
BP 789
EP 824
DI 10.1007/s10270-011-0212-1
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240KU
UT WOS:000326095600009
DA 2024-07-18
ER

PT J
AU Thyssen, J
   Hummel, B
AF Thyssen, Judith
   Hummel, Benjamin
TI Behavioral specification of reactive systems using stream-based I/O
   tables
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Tabular specification; Consistency; Streams
AB A core problem in formal methods is the transition from informal requirements to formal specifications. Especially when specifying the behavior of reactive systems, many formalisms require the user to either understand a complex mathematical theory and notation or to derive details not given in the requirements, such as the state space of the problem. For many approaches also a consistent set of requirements is needed, which enforces to resolve requirements conflicts prior to formalization. This paper describes a specification technique, where not states but signal patterns are the main elements. The notation is based on tables of regular expressions and supports a piece-wise formalization of potentially inconsistent requirements. Many properties, such as input completeness and consistency, can be checked automatically for these specifications. The detection and resolution of conflicts can be performed within our framework after formalization. Besides the formal foundation of our approach, this paper presents prototypical tool support and results from an industrial case study.
C1 [Thyssen, Judith; Hummel, Benjamin] Tech Univ Munich, Inst Informat, D-80290 Munich, Germany.
   [Thyssen, Judith; Hummel, Benjamin] Tech Univ Munich, Software & Syst Engn Grp Prof M Broy, D-80290 Munich, Germany.
C3 Technical University of Munich; Technical University of Munich
RP Hummel, B (corresponding author), Tech Univ Munich, Inst Informat, D-80290 Munich, Germany.
EM thyssen@in.tum.de; hummelb@in.tum.de
CR Abreu J., 2007, P FORTE 07
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], 1990, HDB THEORETICAL COMP
   BARROCA L, 2002, P INT DES PROC TECHN
   Bauer A., 2006, P ICFEM 06
   Berard B., 2001, Systems and Software Verification
   Botaschanjan J., 2009, 7 IEEE INT C SOFTW E
   Brill M., 2004, LIVE SEQUENCE CHARTS
   Courtois P.J., 1993, P ICSE 93
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Denger C., 2003, P SWSTE 03
   DWYER M, 1999, P ICSE 99
   Gössler G, 2005, SCI COMPUT PROGRAM, V55, P161, DOI 10.1016/j.scico.2004.05.014
   GRUBER H, 2008, P 35 INT C AUT LANG
   Gurumurthy S., 2003, P 12 IFIP WG 10 5 AD
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heitmeyer C, 2005, COMPUT SYST SCI ENG, V20, P19
   Heitmeyer C.L., 2001, MMM ACNS
   Heitmeyer C.L., 1998, P CAV 98
   Henriksen J.G., 1995, P TACAS 95
   Herrmannsdorfer M., 2008, CROSSTALK, V21, P18
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Hummel B., 2006, THESIS TU MUNCHEN
   IEEE, 2001, 100312001 IEEE
   *ITU T, 2000, Z120 ITUT
   Janicki R, 2001, SCI COMPUT PROGRAM, V39, P189, DOI 10.1016/S0167-6423(00)00004-6
   Object Management Group, 2004, UML 2 SUP SPEC
   PARNAS DL, 1992, 260 CRL TEL RES I ON
   Peters D.K., 2007, P CASCON 07
   Podelski A., 2004, SAF INT WORKSH SCHLO
   Prowell SJ, 2003, IEEE T SOFTWARE ENG, V29, P417, DOI 10.1109/TSE.2003.1199071
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Schewe S., 2009, P S THEOR ASP COMP S
   Sengupta B, 2006, IEEE T SOFTWARE ENG, V32, P587, DOI 10.1109/TSE.2006.82
   Thyssen J., 2009, P 7 IEEE INT C SOFTW
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   Vardi M.Y., 2007, P S THEOR ASP COMP S
   von der Beeck M., 1994, P FTRTFT
NR 39
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD MAY
PY 2013
VL 12
IS 2
BP 265
EP 283
DI 10.1007/s10270-011-0204-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 164XS
UT WOS:000320446300005
DA 2024-07-18
ER

PT J
AU Harel, D
   Marron, A
AF Harel, David
   Marron, Assaf
TI The quest for runware: on compositional, executable and intuitive models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Executable specifications; Model-driven engineering; Behavioral
   programming; Computational methods
AB We believe that future models of complex software and systems will combine the crucial traits of intuitiveness, compositionality, and executability. The importance of each of these to modeling is already well recognized, but our vision suggests a far more powerful synergy between them. First, models will be aligned with cognitive processes used by humans to think about system behavior and will be understood, and perhaps creatable, by almost anyone. Second, one will be able to build models incrementally, adding to, refining or sculpting away already-specified behaviors without changing most existing parts of the model. Third, there will be powerful ways to execute such intuitive and compositional models, in whole or in part, at any stage of the development. The presence of these three traits in a single artifact will blur the boundaries between natural-language requirements, formal models, and actual software, bringing in its wake a major advance in the way systems are built, and in their cost and quality. We propose the term runware to refer to this kind of higher level artifact.
C1 [Harel, David; Marron, Assaf] Weizmann Inst Sci, Dept Comp Sci & Appl Math, IL-76100 Rehovot, Israel.
C3 Weizmann Institute of Science
RP Marron, A (corresponding author), Weizmann Inst Sci, Dept Comp Sci & Appl Math, IL-76100 Rehovot, Israel.
EM assaf.marron@weizmann.ac.il
RI MARRON, ASSAF/GWQ-4567-2022
FU John von Neumann Minerva Center for the Development of Reactive Systems
   at the Weizmann Institute of Science; European Research Council (ERC)
   under the European Community
FX We thank the anonymous reviewers for their constructive and valuable
   comments. This research was supported by The John von Neumann Minerva
   Center for the Development of Reactive Systems at the Weizmann Institute
   of Science and was partly funded by an Advanced Research Grant from the
   European Research Council (ERC) under the European Community's 7th
   Framework Programme (FP7/2007-2013).
CR [Anonymous], Pattern Recognition and MachineLearning
   [Anonymous], EUR C OBJ OR PROGR E
   [Anonymous], 2000, PRINCIPLES NEURAL SC, DOI DOI 10.1007/SPRINGERREFERENCE_183113
   BACKUS JW, 1957, P WESTERN JOINT COMP, P188, DOI DOI 10.1145/1455567.1455599
   Batory D., 1998, SMALLT JAV C
   Begel A, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P116
   Bliudze S., 2008, CONCUR
   Bloem R., 2011, J COMPUT SYST SCI, V78
   Bordini R.H., 2009, Multi-Agent Programming: Languages, Tools and Applications
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Brooks R., 1986, IEEE J ROBOT AUTOMAT, V2
   Clarke EM, 1999, MODEL CHECKING, P1
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Date C.J, 2000, WHAT NOT BUSINESS RU
   DAVIS J, 1999, M9937 UCBERL DEP EEC
   Eclipse Foundation, ECL IN DEV ENV DOC
   European Organisation for the Safety of Air Navigation, 2007, EUROCONTROL SPEC US
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Harel D, 2010, LECT NOTES COMPUT SC, V6183, P250, DOI 10.1007/978-3-642-14107-2_12
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   Kortum P, 2008, MORG KAUF SER INTER, P1, DOI 10.1016/B978-0-12-374017-5.00001-8
   Koza J.R., 2005, Search Methodologies, P127, DOI DOI 10.1007/0-387-28356-0_5
   LaValle S. M., 2006, Planning algorithms
   Louden K C., 2011, Programming languages: principles and practices, V3rd
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Meyer B., 2000, OBJECT ORIENTED SOFT, V2nd
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Object Management Group, OMG MOD DRIV ARCH
   Object Management Group, 2012, OMG UN MOD LANG SUP
   OSCI. Open SystemC Initiative, IEEE 1666 LANG REF M
   Ponce J, 2002, COMPUTER VISION MODE, DOI 10.5555/580035
   Prehofer C., 1997, ECOOP
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Robinson A.J., 2001, HDB AUTOMATED REASON, V2
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SIMONYI C, 1995, NATO SCI COMM C
   Sterling L., 1986, ART PROLOG, V94
   US General Services Administration, ACQ SYST RE IN PRESS
   USDA-Agricultural Research Service, 2006, CEAP STEWARDS SYST R
   Wadler P., 1995, Advanced Functional Programming. First International Spring School on Advanced Functional Programming Techniques. Tutorial Text, P24
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 46
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD OCT
PY 2012
VL 11
IS 4
BP 599
EP 608
DI 10.1007/s10270-012-0258-8
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 024DG
UT WOS:000310087500012
DA 2024-07-18
ER

PT J
AU Horváth, A
   Varró, D
AF Horvath, Akos
   Varro, Daniel
TI Dynamic constraint satisfaction problems over models
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article
DE Constraint satisfaction programming; Graph transformation; Dynamic
   constraint satisfaction programming; Flexible constraint satisfaction
   problem
ID LANGUAGE
AB In early phases of designing complex systems, models are not sufficiently detailed to serve as an input for automated synthesis tools. Instead, a design space is constituted by multiple models representing different valid design candidates. Design space exploration aims at searching through these candidates defined in the design space to find solutions that satisfy the structural and numeric design constraints and provide a balanced choice with respect to various quality metrics. Design space exploration in an model-driven engineering (MDE) context is frequently tackled as specific sort of constraint satisfaction problem (CSP). In CSP, declarative constraints capture restrictions over variables with finite domains where both the number of variables and their domains are required to be a priori finite. However, the existing formulation of constraint satisfaction problems can be too restrictive to capture design space exploration in many MDE applications with complex structural constraints expressed over the underlying models. In this paper, we interpret flexible and dynamic constraint satisfaction problems directly in the context of models. These extensions allow the relaxation of constraints during a solving process and address problems that are subject to change and require incremental re-evaluation. Furthermore, we present our prototype constraint solver for the domain of graph models built upon the Viatra2 model transformation framework and provide an evaluation of its performance with comparison to related tools.
C1 [Horvath, Akos; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Horváth, A (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM ahorvath@mit.bme.hu; varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Varro, Daniel/G-8963-2012; Horvath,
   Akos/G-8619-2012
OI Varro, Daniel/0000-0002-8790-252X; Horvath, Akos/0000-0003-3545-3694
FU EC [AERO1-030985]; SecureChange [ICT-FET-231101]; Hungarian CERTIMOT
   [ERC_HU_09]; Janos Bolyai Scholarship
FX This work was partially supported by the EC FP6 DIANA (AERO1-030985),
   the SecureChange (ICT-FET-231101) European Projects, the Hungarian
   CERTIMOT (ERC_HU_09) project and the Janos Bolyai Scholarship.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   ATLAS Group, ATLAS TRANSF LANG
   AUTOSAR Consortium, AUTOSAR STAND
   Baar T, 2006, LECT NOTES COMPUT SC, V3844, P20
   Baptista L., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P489
   Bergmann G., 2008, GRAMOT 08 3 INT WORK
   Bistarelli S, 1995, INT JOINT CONF ARTIF, P624, DOI 10.1007/978-3-540-68679-8_11
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   BORNING A, 1981, ACM T PROGR LANG SYS, V3, P353, DOI 10.1145/357146.357147
   BOYAPATI C, 2002, ISSTA, P123, DOI DOI 10.1145/566172.566191
   CABOT J, 2007, ASE, P547
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Dechter R., 1988, AAAI 88. Seventh National Conference on Artificial Intelligence, P37
   DESCOTTE Y, 1985, ARTIF INTELL, V27, P183, DOI 10.1016/0004-3702(85)90053-0
   Ehrig H, 2006, FUND INFORM, V74, P135
   El-Boussaidi G, 2008, LECT NOTES COMPUT SC, V5301, P189, DOI 10.1007/978-3-540-87875-9_14
   Faxen K.F., 2009, WOOL USERS GUIDE
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Heydon A, 1994, 131A DIG SYST RES
   Horváth A, 2009, LECT NOTES COMPUT SC, V5795, P107, DOI 10.1007/978-3-642-04425-0_9
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson EK, 2007, LECT NOTES COMPUT SC, V4735, P405
   Janota M, 2008, LECT NOTES COMPUT SC, V5301, P431, DOI 10.1007/978-3-540-87875-9_31
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   König B, 2006, LECT NOTES COMPUT SC, V3920, P197
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Miguel I, 2000, APPL INTELL, V13, P231, DOI 10.1023/A:1026563910104
   Milicevic A., KORAT STRUCT CONSTRA
   Neema S, 2001, ANAL MATLAB SIMULINK
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   Orejas F, 2008, LECT NOTES COMPUT SC, V5214, P274, DOI 10.1007/978-3-540-87405-8_19
   Petter A., 2009, ICMT 09
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rensink A., 2007, ELECT COMMUNICATIONS, V1
   Rudolf M, 2000, LECT NOTES COMPUT SC, V1764, P238
   SANNELLA M, 1993, SOFTWARE PRACT EXPER, V23, P529, DOI 10.1002/spe.4380230507
   Schurr A., 1990, Graph-Theoretic Concepts in Computer Science, V411 of, P151
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen S., 2007, INAP 07
   *SWED I COMP SCI, SICSTUS PROL
   Varro D., 2003, Journal of Software and Systems Modeling, V2, P187, DOI [DOI 10.1007/S10270-003-0028-8, 10.1007/s10270-003-0028-8]
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varro-Gyapay S., 2006, ELECT COMMUN EASST, V2, P1
   VERFAILLIE G, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P307
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   WELD DS, 1994, AI MAG, V15, P27
   White J., 2007, ECLIPSE MAG, V6, P1
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
NR 51
TC 11
Z9 12
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
EI 1619-1374
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JUL
PY 2012
VL 11
IS 3
BP 385
EP 408
DI 10.1007/s10270-010-0185-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 965EV
UT WOS:000305750600008
DA 2024-07-18
ER

PT J
AU Greenyer, J
   Kindler, E
AF Greenyer, Joel
   Kindler, Ekkart
TI Comparing relational model transformation technologies: implementing
   Query/View/Transformation with Triple Graph Grammars
SO SOFTWARE AND SYSTEMS MODELING
LA English
DT Article; Proceedings Paper
CT 10th MODELS Conference 2007
CY SEP 30-OCT 05, 2007
CL Nashville, TN
DE MDA; Model-based software engineering; Model transformation;
   Query/View/Transformation (QVT); Triple Graph Grammar (TGG)
ID QVT
AB The Model Driven Architecture (MDA) is an approach to develop software based on different models. There are separate models for the business logic and for platform specific details. Moreover, code can be generated automatically from these models. This makes transforma- tions a core technology for MDA and for model-based software engineering approaches in general. Query/View/Transformation (QVT) is the transformation technology recently proposed for this purpose by the OMG. Triple Graph Grammars (TGGs) are another transformation technology proposed in the mid-nineties, used for example in the FUJABA CASE tool. In contrast to many other transformation technologies, both QVT and TGGs declaratively define the relation between two models. With this definition, a transformation engine can execute a transformation in either direction and, based on the same definition, can also propagate changes from one model to the other. In this paper, we compare the concepts of the declarative languages of QVT and TGGs. It turns out that TGGs and declarative QVT have many concepts in common. In fact, QVT-Core can be mapped to TGGs. We show that QVT-Core can be implemented by transforming QVT-Core mappings to TGG rules, which can then be executed by a TGG transformation engine that performs the actual QVT transformation. Furthermore, we discuss an approach for mapping QVT-Relations to TGGs. Based on the semantics of TGGs, we clarify semantic gaps that we identified in the declarative languages of QVT and, furthermore, we show how TGGs can benefit from the concepts of QVT.
C1 [Greenyer, Joel] Univ Paderborn, Software Engn Grp, D-33098 Paderborn, Germany.
   [Kindler, Ekkart] Tech Univ Denmark, DK-2800 Lyngby, Denmark.
C3 University of Paderborn; Technical University of Denmark
RP Greenyer, J (corresponding author), Univ Paderborn, Software Engn Grp, Warburger Str 100, D-33098 Paderborn, Germany.
EM jgreen@upb.de; eki@imm.dtu.dk
RI Kindler, Ekkart/IAQ-0243-2023; Greenyer, Joel/Q-8476-2017
OI Kindler, Ekkart/0000-0003-3895-6297; Greenyer, Joel/0000-0003-0347-0158
CR Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   [Anonymous], PTC031014 OMG
   [Anonymous], P 4 INT FUJ DAYS BAY
   [Anonymous], PTC070707 OMG
   CREMER K, 1999, HDB GRAPH GRAMMARS C, V2, P369
   Gepting A., 2004, P 11 WORKSH ALG TOOL, P37
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   GREENYER J, 2006, THESIS U PADERBORN P
   Greenyer J, 2007, LECT NOTES COMPUT SC, V4735, P16
   GUERRA E, 2006, LECT NOTES COMPUTER, V4178
   KINDLER E, 2007, TRRI07284 U PAD DEP
   Klar Felix., 2007, P THE 6 JOINT M EURO, P285
   KONIGS A, 2006, J SOFTW SYST MODEL, V5, P349
   LENGYEL L, 2006, INT WORKSH GRAPH MOD
   *OMG, 2006, FORMAL060101 OMG
   *OMG, 2001, ORMSC010701 OMG
   Rensink A, 2008, ELECTRON NOTES THEOR, V211, P51, DOI 10.1016/j.entcs.2008.04.029
   ROMEIKAT R, 2008, P 1 INT C THEOR PRAC, P137
   SCHURR A, 1995, LNCS, V903, P151
   SCHURR A, 1995, LNCS, V989, P219
   Stevens P, 2007, LECT NOTES COMPUT SC, V4735, P1
   *TCS, 2008, MODELMORF MOD TRANSF
   TRAVKIN O, 2008, THESIS U PADERBORN P
   *WWW, 2008, IKV TECHN AG MED QVT
NR 25
TC 37
Z9 40
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1619-1366
J9 SOFTW SYST MODEL
JI Softw. Syst. Model.
PD JAN
PY 2010
VL 9
IS 1
BP 21
EP 46
DI 10.1007/s10270-009-0121-8
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 526UZ
UT WOS:000272321500003
DA 2024-07-18
ER

EF