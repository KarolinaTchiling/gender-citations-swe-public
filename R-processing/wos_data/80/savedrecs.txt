FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Saleh, AH
   Schrijvers, T
AF Saleh, Amr Hany
   Schrijvers, Tom
TI Efficient algebraic effect handlers for Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE delimited control; algebraic effect handlers; program transformation
AB Recent work has provided delimited control for Prolog to dynamically manipulate the program control-flow, and to implement a wide range of control-flow and dataflow effects on top of. Unfortunately, delimited control is a rather primitive language feature that is not easy to use.
   As a remedy, this work introduces algebraic effect handlers for Prolog, as a high-level and structured way of defining new side-effects in a modular fashion. We illustrate the expressive power of the feature and provide an implementation by means of elaboration into the delimited control primitives.
   The latter add a non-negligible performance overhead when used extensively. To address this issue, we present an optimised compilation approach that combines partial evaluation with dedicated rewrite rules. The rewrite rules are driven by a lightweight effect inference that analyses what effect operations may be called by a goal. We illustrate the effectiveness of this approach on a range of benchmarks.
C1 [Saleh, Amr Hany; Schrijvers, Tom] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
C3 KU Leuven
RP Saleh, AH (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
EM ah.saleh@cs.kuleuven.be; tom.schrijvers@cs.kuleuven.be
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559
CR Bauer A, 2015, J LOG ALGEBR METHODS, V84, P108, DOI 10.1016/j.jlamp.2014.02.001
   DANVY O, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P151, DOI 10.1145/91556.91622
   Desouter B, 2015, THEOR PRACT LOG PROG, V15, P419, DOI 10.1017/S1471068415000137
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Dolan Stephen, 2015, OCAML US DEV WORKSH
   Felleisen M., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P180, DOI 10.1145/73560.73576
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260
   IVANOVIC D., 2009, CICLOPS 2009
   Kammar O, 2013, ACM SIGPLAN NOTICES, V48, P145, DOI [10.1145/2500365.2500590, 10.1145/2544174.2500590]
   Kiselyov O, 2013, ACM SIGPLAN NOTICES, V48, P59, DOI 10.1145/2503778.2503791
   Plotkin G, 2002, LECT NOTES COMPUT SC, V2303, P342
   Plotkin GD, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(4:23)2013
   SCHIMPF J, 2002, INT C LOG PROGR, P224
   Schrijvers T, 2014, PPDP'14: PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P259, DOI 10.1145/2643135.2643145
   Schrijvers T, 2014, SCI COMPUT PROGRAM, V84, P101, DOI 10.1016/j.scico.2013.05.008
   Schrijvers T, 2013, THEOR PRACT LOG PROG, V13, P533, DOI 10.1017/S1471068413000331
   VANROY P, 1989, SIGPLAN NOTICES, V24, P132, DOI 10.1145/71605.71617
   Wu N, 2015, LECT NOTES COMPUT SC, V9129, P302, DOI 10.1007/978-3-319-19797-5_15
NR 18
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 884
EP 898
DI 10.1017/S147106841600034X
PN 5-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800024
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Peñaloza, R
AF Alviano, Mario
   Penaloza, Rafael
TI Fuzzy answer set computation via satisfiability modulo theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE answer set programming; fuzzy logic; satisfiability modulo theories
ID STABLE MODELS; SOLVER
AB Fuzzy answer set programming (FASP) combines two declarative frameworks, answer set programming and fuzzy logic, in order to model reasoning by default over imprecise information. Several connectives are available to combine different expressions; in particular the Godel and Lukasiewicz fuzzy connectives are usually considered, due to their properties. Although the Godel conjunction can be easily eliminated from rule heads, we show through complexity arguments that such a simplification is infeasible in general for all other connectives. The paper analyzes a translation of FASP programs into satisfiability modulo theories (SMT), which in general produces quantified formulas because of the minimality of the semantics. Structural properties of many FASP programs allow to eliminate the quantification, or to sensibly reduce the number of quantified variables. Indeed, integrality constraints can replace recursive rules commonly used to force Boolean interpretations, and completion subformulas can guarantee minimality for acyclic programs with atomic heads. Moreover, head cycle free rules can be replaced by shifted subprograms, whose structure depends on the eliminated head connective, so that ordered completion may replace the minimality check if also Lukasiewicz disjunction in rule bodies is acyclic. The paper also presents and evaluates a prototype system implementing these translations.
C1 [Alviano, Mario] Univ Calabria, I-87030 Commenda Di Rende, Italy.
   [Penaloza, Rafael] Free Univ Bozen Bolzano, Bolzano, Italy.
C3 University of Calabria; Free University of Bozen-Bolzano
RP Alviano, M (corresponding author), Univ Calabria, I-87030 Commenda Di Rende, Italy.
RI Alviano, Mario/H-1355-2012
OI Penaloza, Rafael/0000-0002-2693-5790
FU MIUR; Regione Calabria, POR Calabria FESR; National Group for Scientific
   Computation (GNCS-INDAM); Finanziamento Giovani Ricercatori UNICAL; DFG
   within the Cluster of Excellence 'cfAED'
FX Mario Alviano was partially supported by MIUR within project "SI-LAB
   BA2-KNOW - Business Analitycs to Know", by Regione Calabria, POR
   Calabria FESR 2007-2013, within projects "ITravel PLUS" and "KnowRex",
   by the National Group for Scientific Computation (GNCS-INDAM), and by
   Finanziamento Giovani Ricercatori UNICAL. Rafael Penaloza was partially
   supported by the DFG within the Cluster of Excellence 'cfAED;' this work
   was developed while still being affiliated with TU Dresden and the
   Center for Advancing Electronics Dresden, Germany.
CR Akbarpour B, 2010, J AUTOM REASONING, V44, P175, DOI 10.1007/s10817-009-9149-2
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Alviano M, 2013, THEOR PRACT LOG PROG, V13, P753, DOI 10.1017/S1471068413000471
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Asuncion V, 2012, ARTIF INTELL, V177, P1, DOI 10.1016/j.artint.2011.11.001
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Blondeel M, 2014, INT J APPROX REASON, V55, P1971, DOI 10.1016/j.ijar.2013.10.011
   Calimeri F., 2014, CORR
   Clark K. L., 1978, Logic and data bases, P293
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janssen J., 2012, ATLANTIS COMPUTATION, V5
   Janssen J, 2012, THEOR PRACT LOG PROG, V12, P811, DOI 10.1017/S1471068411000093
   Lee J, 2014, LECT NOTES ARTIF INT, V8761, P326, DOI 10.1007/978-3-319-11558-0_23
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   Marek V. W., 2004, 10 INT WORKSH NONM R, P276
   Mushthofa M, 2014, FRONT ARTIF INTEL AP, V263, P645, DOI 10.3233/978-1-61499-419-0-645
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Niemelä I, 2008, ANN MATH ARTIF INTEL, V53, P313, DOI 10.1007/s10472-009-9118-9
   Ratschan S, 2006, ACM T COMPUT LOG, V7, P723, DOI 10.1145/1183278.1183282
   Van Nieuwenborgh D, 2007, ANN MATH ARTIF INTEL, V50, P363, DOI 10.1007/s10472-007-9080-3
NR 33
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 588
EP 603
DI 10.1017/S1471068415000241
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maratea, M
   Pulina, L
   Ricca, F
AF Maratea, Marco
   Pulina, Luca
   Ricca, Francesco
TI A multi-engine approach to answer-set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; automated algorithm selection; multi-engine
   solvers
ID KNOWLEDGE REPRESENTATION; ALGORITHM; SOLVER; SYSTEM; CONFIGURATION; SAT
AB Answer-set programming (ASP) is a truly declarative programming paradigm proposed in the area of non-monotonic reasoning and logic programming, which has been recently employed in many applications. The development of efficient ASP systems is, thus, crucial. Having in mind the task of improving the solving methods for ASP, there are two usual ways to reach this goal: (i) extending state-of-the-art techniques and ASP solvers or (ii) designing a new ASP solver from scratch. An alternative to these trends is to build on top of state-of-the-art solvers, and to apply machine learning techniques for choosing automatically the "best" available solver on a per-instance basis.
   In this paper, we pursue this latter direction. We first define a set of cheap-to-compute syntactic features that characterize several aspects of ASP programs. Then, we apply classification methods that, given the features of the instances in a training set and the solvers' performance on these instances, inductively learn algorithm selection strategies to be applied to a test set. We report the results of a number of experiments considering solvers and different training and test sets of instances taken from the ones submitted to the "System Track" of the Third ASP Competition. Our analysis shows that by applying machine learning techniques to ASP solving, it is possible to obtain very robust performance: our approach can solve more instances compared with any solver that entered the Third ASP Competition.
C1 [Maratea, Marco] Univ Genoa, DIBRIS, I-16145 Genoa, Italy.
   [Pulina, Luca] Univ Sassari, POLCOMING, I-07100 Sassari, Italy.
   [Ricca, Francesco] Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, Italy.
C3 University of Genoa; University of Sassari; University of Calabria
RP Maratea, M (corresponding author), Univ Genoa, DIBRIS, Viale F Causa 15, I-16145 Genoa, Italy.
EM marco@dist.unige.it; lpulina@uniss.it; ricca@mat.unical.it
RI Maratea, Marco/AAR-5779-2020
OI Pulina, Luca/0000-0003-0258-3222
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], P 19 INT C AUT PLANN
   [Anonymous], 2006, ACM SIGKDD INT C KNO, DOI DOI 10.1145/1150402.1150531
   [Anonymous], 2007, P 22 NAT C ART INT
   [Anonymous], 2012, 28 INT C LOG PROGR I
   [Anonymous], 2008, KR
   Balduccini Marcello, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P78, DOI 10.1007/978-3-642-27694-1_7
   Balduccini M, 2011, AI COMMUN, V24, P147, DOI 10.3233/AIC-2011-0493
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Calimeri F., 2011, 3 ANSWER SET PROGRAM
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Clark K. L., 1978, Logic and data bases, P293
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   FRIEDRICH G, 2008, DIAGNOSIS 1 PRINCIPL
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Halder A, 2009, FUND INFORM, V92, P345, DOI 10.3233/FI-2009-78
   Hoos HH, 2012, COMMUN ACM, V55, P70, DOI 10.1145/2076450.2076469
   Hühn J, 2009, DATA MIN KNOWL DISC, V19, P293, DOI 10.1007/s10618-009-0131-8
   Hutter F, 2010, LECT NOTES COMPUT SC, V6140, P186, DOI 10.1007/978-3-642-13520-0_23
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   LEYTONBROWN K, 2003, P 18 INT JOINT C ART
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   Lierler Y, 2008, LECT NOTES COMPUT SC, V5366, P377, DOI 10.1007/978-3-540-89982-2_35
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Maratea Marco, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P484, DOI 10.1007/978-3-642-33353-8_39
   Marczak W.R., 2010, SIGMOD, P723
   Marek V. W., 1998, LO9809032 CORR CS
   Marien M, 2008, LECT NOTES COMPUT SC, V4996, P211, DOI 10.1007/978-3-540-79719-7_20
   Masoni A, 2009, IEEE NUCL SCI CONF R, P481, DOI 10.1109/NSSMIC.2009.5401612
   NIEMELA I., 1998, P WORKSHOP COMPUTATI, P72
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Nudelman E, 2004, LECT NOTES COMPUT SC, V3258, P438
   Pulina L, 2007, LECT NOTES COMPUT SC, V4741, P574
   Pulina L, 2009, CONSTRAINTS, V14, P80, DOI 10.1007/s10601-008-9051-2
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Ricca F, 2010, FUND INFORM, V105, P35, DOI 10.3233/FI-2010-357
   Ricca F, 2009, J LOGIC COMPUT, V19, P643, DOI 10.1093/logcom/exn042
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Rullo P, 2009, IEEE T KNOWL DATA EN, V21, P1118, DOI 10.1109/TKDE.2008.206
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Vallati M., 2011, 21 INT C AUT PLANN S
   Wittocx Johan., 2008, LaSh, P153
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
NR 62
TC 38
Z9 38
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2014
VL 14
BP 841
EP 868
DI 10.1017/S1471068413000094
PN 6
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AX3OJ
UT WOS:000346848400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Barták, R
   Zhou, NF
AF Bartak, Roman
   Zhou, Neng-Fa
TI Using Tabled Logic Programming to Solve the Petrobras Planning Problem
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE tabling; resource-bounded search; symmetry breaking; planning; logistics
AB Tabling has been used for some time to improve efficiency of Prolog programs by memorizing answered queries. The same idea can be naturally used to memorize visited states during search for planning. In this paper we present a planner developed in the Picat language to solve the Petrobras planning problem. Picat is a novel Prolog-like language that provides pattern matching, deterministic and non-deterministic rules, and tabling as its core modelling and solving features. We demonstrate these capabilities using the Petrobras problem, where the goal is to plan transport of cargo items from ports to platforms using vessels with limited capacity. Monte Carlo Tree Search has been so far the best technique to tackle this problem and we will show that by using tabling we can achieve much better runtime efficiency and better plan quality.
C1 [Bartak, Roman] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
   [Zhou, Neng-Fa] CUNY Brooklyn Coll, New York, NY USA.
C3 Charles University Prague; City University of New York (CUNY) System
RP Barták, R (corresponding author), Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
EM bartak@ktiml.mff.cuni.cz; nzhou@acm.org
RI Barták, Roman/N-8554-2017
OI Barták, Roman/0000-0002-6717-8175
CR Bartak R., 2013, LECT NOTES ARTIF INT, V8266, P466
   Chihwei Hsu, 2008, SGPLAN PLANNING SYST
   Dvorak F., 2010, P ICTAI 2010 IEEE CO, V2, P71
   Faber W., 2013, SOKOBAN
   GEREVINI A, 2005, BNF DESCRIPTION PDDL
   Hewitt C., 1969, IJCAI, P295
   Kovacs Daniel L., 2011, BNF definition of PDDL 3.1
   Nakhost H., 2013, NOMYSTERY
   Toropila D, 2012, PROC INT C TOOLS ART, P191, DOI 10.1109/ICTAI.2012.34
   Vaquero Tiago Stegun, 2012, P SCHED PLANN APPL W, P8
   Warren D.H.D., 1974, 76 DCL U ED
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Zhou N.-F., 2011, P 26 IT C COMP LOG C, P215
NR 13
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 697
EP 710
DI 10.1017/S1471068414000295
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serrano, A
   Lopez-Garcia, P
   Hermenegildo, MV
AF Serrano, A.
   Lopez-Garcia, P.
   Hermenegildo, M. V.
TI Resource Usage Analysis of Logic Programs via Abstract Interpretation
   Using Sized Types
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
AB We present a novel general resource analysis for logic programs based on sized types. Sized types are representations that incorporate structural (shape) information and allow expressing both lower and upper bounds on the size of a set of terms and their subterms at any position and depth. They also allow relating the sizes of terms and subterms occurring at different argument positions in logic predicates. Using these sized types, the resource analysis can infer both lower and upper bounds on the resources used by all the procedures in a program as functions on input term (and subterm) sizes, overcoming limitations of existing resource analyses and enhancing their precision. Our new resource analysis has been developed within the abstract interpretation framework, as an extension of the sized types abstract domain, and has been integrated into the Ciao preprocessor, CiaoPP. The abstract domain operations are integrated with the setting up and solving of recurrence equations for inferring both size and resource usage functions. We show that the analysis is an improvement over the previous resource analysis present in CiaoPP and compares well in power to state of the art systems.
C1 [Serrano, A.] Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
   [Lopez-Garcia, P.] IMDEA Software Inst, Madrid, Spain.
   [Lopez-Garcia, P.; Hermenegildo, M. V.] CSIC, Spanish Council Sci Res, Madrid, Spain.
   [Hermenegildo, M. V.] Tech Univ Madrid UPM, Madrid, Spain.
C3 Utrecht University; IMDEA Software Institute; Consejo Superior de
   Investigaciones Cientificas (CSIC); Universidad Politecnica de Madrid
RP Serrano, A (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
EM A.SerranoMena@uu.nl; pedro.lopez@imdea.org;
   manuel.hermenegildo@imdea.org
RI Hermenegildo, w V/I-4418-2015; Lopez-Garcia, Pedro/AAH-4048-2021;
   Lopez-Garcia, Pedro/KIA-1704-2024
OI Hermenegildo, w V/0000-0002-7583-323X; Lopez-Garcia,
   Pedro/0000-0002-1092-2071
CR Albert E, 2011, LECT NOTES COMPUT SC, V6538, P38, DOI 10.1007/978-3-642-18275-4_5
   Bagnara R., 2005, PURRS COMPUTER ALGEB
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P100
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Dart Philip W., 1992, TYPES LOGIC PROGRAMM, P157
   Debray S, 1997, LOGIC PROGRAMM, P291
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   Giesl J., 2012, PPDP 2012, P1, DOI [DOI 10.1145/2370776.2370778, 10.1145/2370776.2370778]
   Grobauer B, 2001, ACM SIGPLAN NOTICES, V36, P253, DOI 10.1145/507669.507666
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hoffmann J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2362389.2362393
   Igarashi A, 2002, ACM SIGPLAN NOTICES, V37, P331, DOI 10.1145/565816.503303
   Lopez-Garcia P, 2010, LEIBNIZ INT PR INFOR, V7, P104, DOI 10.4230/LIPIcs.ICLP.2010.104
   Lopez-Garcia P, 2010, NEW GENERAT COMPUT, V28, P177, DOI 10.1007/s00354-008-0085-1
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Muthukumar K., 1989, 1989 N AM C LOG PROG, P166
   Navas J., 2007, LECT NOTES COMPUTER, V4670
   Nielson F, 2002, LECT NOTES COMPUT SC, V2305, P243
   Puebla, 1996, LNCS, V1145, P270
   Rosendahl M., 1989, 4 ACM C FUNCT PROGR
   Serrano A., 2013, THEOR PRACT LOG PROG, V13, P1
   Vasconcelos PB, 2004, LECT NOTES COMPUT SC, V3145, P86
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
NR 26
TC 26
Z9 26
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 739
EP 754
DI 10.1017/S147106841400057X
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200023
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Pichler, R
   Rümmele, S
   Szeider, S
   Woltran, S
AF Pichler, Reinhard
   Ruemmele, Stefan
   Szeider, Stefan
   Woltran, Stefan
TI Tractable answer-set programming with weight constraints: bounded
   treewidth is not enough
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; parameterized complexity analysis; treewidth
AB Cardinality constraints or, more generally, weight constraints are well recognized as an important extension of answer-set programming. Clearly, all common algorithmic tasks related to programs with cardinality or weight constraints - like checking the consistency of a program - are intractable. Many intractable problems in the area of knowledge representation and reasoning have been shown to become linear time tractable if the treewidth of the programs or formulas under consideration is bounded by some constant. The goal of this paper is to apply the notion of treewidth to programs with cardinality or weight constraints and to identify tractable fragments. It will turn out that the straightforward application of treewidth to such class of programs does not suffice to obtain tractability. However, by imposing further restrictions, tractability can be achieved.
C1 [Pichler, Reinhard; Ruemmele, Stefan; Szeider, Stefan; Woltran, Stefan] Vienna Univ Technol, Vienna, Austria.
C3 Technische Universitat Wien
RP Pichler, R (corresponding author), Vienna Univ Technol, Vienna, Austria.
EM pichler@dbai.tuwien.ac.at; ruemmele@dbai.tuwien.ac.at;
   stefan@szeider.net; woltran@dbai.tuwien.ac.at
OI Szeider, Stefan/0000-0001-8994-1656
FU Austrian Science Fund (FWF) [P20704-N18]; European Research Council
   (ERC) [239962]; Vienna University of Technology [9006.09/008]; Austrian
   Science Fund (FWF) [P20704] Funding Source: Austrian Science Fund (FWF)
FX Supported by the Austrian Science Fund (FWF): P20704-N18.; Supported by
   the European Research Council (ERC), project 239962; Supported by Vienna
   University of Technology special fund "Innovative Projekte 9006.09/008."
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Bodlaender HL, 2008, COMPUT J, V51, P255, DOI 10.1093/comjnl/bxm037
   Bodlaender HL, 2006, DISCRETE MATH, V306, P337, DOI 10.1016/j.disc.2005.12.017
   Bodlaender HL, 1996, SIAM J COMPUT, V25, P1305, DOI 10.1137/S0097539793251219
   Courcelle B., 1987, I8634 U BORD
   Dermaku A, 2008, LECT NOTES ARTIF INT, V5317, P1, DOI 10.1007/978-3-540-88636-5_1
   Downey R.G., 1999, MG COMP SCI
   Flum J., 2006, TEXT THEORET COMP S
   Gottlob G, 2010, ARTIF INTELL, V174, P105, DOI 10.1016/j.artint.2009.10.003
   Jakl M, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P816
   Kask K., 2011, P AAA1 11, P54
   Kloks T., 1994, Treewidth, Computations and Approximations
   Koster A. M. C. A., 2001, ELECT NOTES DISCRETE, V8, P54, DOI DOI 10.1016/S1571-0653(05)80078-2
   Liu GH, 2009, LECT NOTES COMPUT SC, V5753, P444, DOI 10.1007/978-3-642-04238-6_40
   Niedermeier R., 2006, Invitation to Fixed-Parameter Algorithms
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Szeider S, 2010, INDIA RMS LECT NOTES, V13, P179
   Szeider S, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1877714.1877718
   van den Eijkhof F, 2007, ALGORITHMICA, V47, P139, DOI [10.1007/s00453-006-1226-x, 10.1007/S00453-006-1226]
NR 19
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2014
VL 14
BP 141
EP 164
DI 10.1017/S1471068412000099
PN 2
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AG
UT WOS:000338293300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mazuran, M
   Serra, E
   Zaniolo, C
AF Mazuran, Mirjana
   Serra, Edoardo
   Zaniolo, Carlo
TI A declarative extension of horn clauses, and its significance for
   datalog and its applications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE horn clauses; datalog; monotonic aggregates; stable models
ID AGGREGATION; LOGIC
AB FS-rules provide a powerful monotonic extension for Horn clauses that supports monotonic aggregates in recursion by reasoning on the multiplicity of occurrences satisfying existential goals. The least fixpoint semantics, and its equivalent least model semantics, hold for logic programs with FS-rules; moreover, generalized notions of stratification and stable models are easily derived when negated goals are allowed. Finally, the generalization of techniques such as seminaive fixpoint and magic sets, make possible the efficient implementation of Datalog(FS), i.e., Datalog with rules with Frequency Support (FS-rules) and stratified negation. A large number of applications that could not be supported efficiently, or could not be expressed at all in stratified Datalog can now be easily expressed and efficiently supported in DatalogFS and a powerful Datalog(FS) system is now being developed at UCLA.
C1 [Mazuran, Mirjana] Politecn Milano DEIB, Milan, Italy.
   [Serra, Edoardo] Univ Maryland, College Pk, MD 20742 USA.
   [Zaniolo, Carlo] Univ Calif Los Angeles, Los Angeles, CA USA.
C3 Polytechnic University of Milan; University System of Maryland;
   University of Maryland College Park; University of California System;
   University of California Los Angeles
RP Mazuran, M (corresponding author), Politecn Milano DEIB, Milan, Italy.
RI Serra, Edoardo/E-4670-2018
OI Serra, Edoardo/0000-0003-0689-5063
FU National Science Foundation [IIS 1218471]; OpenKnowTeck Grant [DM2130];
   TETRIS Grant [PON01-00451]; Italian project Sensori (Industria - Bando
   Nuove Tecnologie per il Made in Italy) [00029MI01/2011]; Div Of
   Information & Intelligent Systems; Direct For Computer & Info Scie &
   Enginr [1218471] Funding Source: National Science Foundation
FX The authors wold like to thank Jack Minker, Alex Shakpski and the
   reviewers for their comments and suggested improvements. This material
   is based on work supported by the National Science Foundation under
   Grant No. IIS 1218471. Edoardo Serra's work was supported by the
   following projects: OpenKnowTeck Grant No. DM2130 and TETRIS Grant No.
   PON01-00451. Mirjana Mazuran's work was partially funded by the Italian
   project Sensori (Industria 2015 - Bando Nuove Tecnologie per il Made in
   Italy) - Grant n. 00029MI01/2011.
CR Abiteboul Serge, 2011, P 30 ACM SIGMOD SIGA, P293, DOI DOI 10.1145/1989284.1989320
   AFRATI FN, 2011, EDBT, P1
   Agrawal Rakesh., 1994, Proceedings of the International Joint Conference on Very Large Data Bases, P487
   [Anonymous], STABLE MODEL SEMANTI
   Barcelo P., 2012, LNCS, V7494
   Chomicki J., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P61, DOI 10.1145/308386.308416
   Gottlob G, 2011, PROC INT CONF DATA, P2, DOI 10.1109/ICDE.2011.5767965
   Greco S, 2001, THEOR PRACT LOG PROG, V1, P381, DOI 10.1017/S1471068401001090
   Hellerstein JM, 2010, PODS 2010: PROCEEDINGS OF THE TWENTY-NINTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P1, DOI 10.1145/1807085.1807087
   KOLAITIS PG, 1991, INFORM COMPUT, V90, P50, DOI 10.1016/0890-5401(91)90059-B
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mazuran M., 2012, VLDB J, P1
   Mazuran M., 2013, 130011 UCLA COMP SCI
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Mumick IS, 1995, ANN MATH ARTIF INTEL, V15, P407, DOI 10.1007/BF01536403
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   Shkapsky A., 2013, VLDB 2013 DEM TRACK, P100
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
   Zaniolo C., 2011, LOG DAT 2011 EDBT 20, P1
NR 20
TC 7
Z9 10
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 609
EP 623
DI 10.1017/S1471068413000380
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400011
DA 2024-07-18
ER

PT J
AU You, JH
   Zhang, H
   Zhang, Y
AF You, Jia-Huai
   Zhang, Heng
   Zhang, Yan
TI Disjunctive logic programs with existential quantification in rule heads
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE disjunctive logic programs; general stable models; existential
   quantification
ID STABLE MODEL SEMANTICS; GENERAL-THEORY; CIRCUMSCRIPTION; FORMULAS;
   DATALOG
AB We consider disjunctive logic programs without function symbols but with existential quantification in rule heads, under the semantics of general stable models. There are at least two interesting prospects in these programs. The first is that a program can be made more succinct by using existential variables, and the second is on the potential in representing defeasible ontological knowledge by these logic programs. This paper studies some of the properties of these programs. First, we show a simple yet intuitive definition of stable models for these programs that does not resort to second-order logic. Second, the stable models of these programs can be characterized by an extension of progression for disjunctive programs, which provides a native characterization of justification for stable models. We then study the decidability issue. While the stable model existence problem for safe disjunctive programs is decidable, with existential quantification allowed in rule heads the problem becomes undecidable. We identify an interesting decidable fragment by exploring a new notion of stratification over existential quantification.
C1 [You, Jia-Huai] Univ Alberta, Edmonton, AB T6G 2E8, Canada.
   [Zhang, Heng; Zhang, Yan] Univ Western Sydney, Penrith, NSW 2751, Australia.
C3 University of Alberta; Western Sydney University
RP You, JH (corresponding author), Univ Alberta, Edmonton, AB T6G 2E8, Canada.
OI Zhang, Heng/0000-0003-2159-9705
CR Alviano M, 2012, THEOR PRACT LOG PROG, V12, P701, DOI 10.1017/S1471068412000257
   Bartholomew M., 2010, P KR 2010
   BERGER R, 1966, MEM AM MATH SOC, P1
   Bonatti PA, 2011, J ARTIF INTELL RES, V42, P719
   Cabalar P, 2009, LECT NOTES COMPUT SC, V5753, P58, DOI 10.1007/978-3-642-04238-6_8
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   Cali A., 2008, P 11 INT C PRINC KNO, P70
   Calì A, 2012, ARTIF INTELL, V193, P87, DOI 10.1016/j.artint.2012.08.002
   Cali A, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P77, DOI 10.1145/1559795.1559809
   Casini G., 2011, P 22 INT JOINT C ART, P813, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-142
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gottlob G., 2012, P AAAI 12
   Gurevich Yuri, 1972, SIBERIAN MATH J, V13, P319, DOI DOI 10.1007/BF00971620
   Lee J, 2012, J ARTIF INTELL RES, V43, P571, DOI 10.1613/jair.3489
   Lee J, 2011, J ARTIF INTELL RES, V42, P125
   Lee J, 2008, LECT NOTES COMPUT SC, V5366, P672, DOI 10.1007/978-3-540-89982-2_55
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Leone Nicola, 2012, KR
   Lin FZ, 2011, ARTIF INTELL, V175, P264, DOI 10.1016/j.artint.2010.04.001
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   You J.H., 2012, LNCS, V7265, P576
   Zhang H., 2010, P AAAI 10
   Zhang Heng, 2011, P INT JOINT C ART IN, P1126
   Zhou Y., 2011, P AAAI 11, P286
NR 31
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 563
EP 578
DI 10.1017/S1471068413000355
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400008
DA 2024-07-18
ER

PT J
AU Riguzzi, F
   Swift, T
AF Riguzzi, Fabrizio
   Swift, Terrance
TI Well-definedness and efficient inference for probabilistic logic
   programming under the distribution semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Probabilistic logic programming; Tabling; Answer subsumption; Logic
   programs with annotated disjunction; Program transformation
AB Distribution semantics is one of the most prominent approaches for the combination of logic programming and probability theory. Many languages follow this semantics, such as Independent Choice Logic, PRISM, pD, Logic Programs with Annotated Disjunctions (LPADs), and ProbLog. When a program contains functions symbols, the distribution semantics is well-defined only if the set of explanations for a query is finite and so is each explanation. Well-definedness is usually either explicitly imposed or is achieved by severely limiting the class of allowed programs. In this paper, we identify a larger class of programs for which the semantics is well-defined together with an efficient procedure for computing the probability of queries. Since Logic Programs with Annotated Disjunctions offer the most general syntax, we present our results for them, but our results are applicable to all languages under the distribution semantics. We present the algorithm "Probabilistic Inference with Tabling and Answer subsumption" (PITA) that computes the probability of queries by transforming a probabilistic program into a normal program and then applying SLG resolution with answer subsumption. PITA has been implemented in XSB and tested on six domains: two with function symbols and four without. The execution times are compared with those of ProbLog, cplint, and CVE. PITA was almost always able to solve larger problems in a shorter time, on domains with and without function symbols.
C1 [Riguzzi, Fabrizio] Univ Ferrara, ENDIF, I-44122 Ferrara, Italy.
   [Swift, Terrance] Univ Nova Lisboa, CENTRIA, Caparica, Portugal.
C3 University of Ferrara; Universidade Nova de Lisboa
RP Riguzzi, F (corresponding author), Univ Ferrara, ENDIF, Via Saragat 1, I-44122 Ferrara, Italy.
EM fabrizio.riguzzi@unife.it; tswift@cs.suysb.edu
RI Fabrizio, Riguzzi/C-7679-2012
OI Fabrizio, Riguzzi/0000-0003-1654-9703
CR Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   De Raedt L., 2008, P NIPS2008 WORKSH PR
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Kameya Y, 2000, LECT NOTES ARTIF INT, V1861, P269
   Kimmig A., 2009, P INT WORKSH STAT RE
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Kolmogorov Andrey N, 1950, Foundations of the theory of probability
   Mantadelis T, 2010, LEIBNIZ INT PR INFOR, V7, P124, DOI 10.4230/LIPIcs.ICLP.2010.124
   Meert W., 2009, LNCS, P96
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   Sagonas K, 2001, THEOR COMPUT SCI, V254, P465, DOI 10.1016/S0304-3975(99)00341-2
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 1995, P INT C LOG PROGR, P715
   Swift T, 1999, ANN MATH ARTIF INTEL, V25, P201, DOI 10.1023/A:1018990308362
   Swift T., 1999, Progress in Artificial Intelligence. 9th Portuguese Conference on Artificial Intelligence, EPIA'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1695), P163
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Thayse A., 1978, Proceedings of the Eighth International Symposium on Multiple-Valued Logic, P171
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J., 2003, LOGIC PROGRAMS ANNOT
NR 30
TC 25
Z9 25
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 279
EP 302
DI 10.1017/S1471068411000664
PN 2
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Slota, M
   Leite, J
   Swift, T
AF Slota, Martin
   Leite, Joao
   Swift, Terrance
TI Splitting and updating hybrid knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE Hybrid knowledge base; Update; Splitting theorem; Ontology; Logic
   program
ID FRAMEWORK
AB Over the years, nonmonotonic rules have proven to be a very expressive and useful knowledge representation paradigm. They have recently been used to complement the expressive power of Description Logics (DLs), leading to the study of integrative formal frameworks, generally referred to as hybrid knowledge bases, where both DL axioms and rules can be used to represent knowledge. The need to use these hybrid knowledge bases in dynamic domains has called for the development of update operators, which, given the substantially different way DLs and rules are usually updated, has turned out to be an extremely difficult task. In Slota and Leite (2010b Towards Closed World Reasoning in Dynamic Open Worlds. Theory and Practice of Logic Programming, 26th Int'l. Conference on Logic Programming (ICLP'10) Special Issue 10(4-6) (July), 547-564.), a first step towards addressing this problem was taken, and an update operator for hybrid knowledge bases was proposed. Despite its significance-not only for being the first update operator for hybrid knowledge bases in the literature, but also because it has some applications-this operator was defined for a restricted class of problems where only the ABox was allowed to change, which considerably diminished its applicability. Many applications that use hybrid knowledge bases in dynamic scenarios require both DL axioms and rules to be updated. In this paper, motivated by real world applications, we introduce an update operator for a large class of hybrid knowledge bases where both the DL component as well as the rule component are allowed to dynamically change. We introduce splitting sequences and splitting theorem for hybrid knowledge bases, use them to define a modular update semantics, investigate its basic properties, and illustrate its use on a realistic example about cargo imports.
C1 [Slota, Martin] Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
   Univ Nova Lisboa, Dept Informat, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa; Universidade Nova de Lisboa
RP Slota, M (corresponding author), Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
EM mslota@fct.unl.pt; jleite@di.fct.unl.pt; tswift@cs.sunysb.edu
RI Leite, Joao/HGB-4757-2022; Leite, Joao/C-6162-2009
OI Leite, Joao/0000-0001-6786-7360
CR Alferes J. J., 2005, Studia Logica, V79, P7, DOI 10.1007/s11225-005-0492-y
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Baader F., 2003, DESCRIPTION LOGIC HD
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calvanese D, 2010, LECT NOTES COMPUT SC, V6496, P112, DOI 10.1007/978-3-642-17746-0_8
   DALAL M, 1988, P 7 NAT C ART INT AA, P475
   Delgrande JP, 2007, LECT NOTES COMPUT SC, V4483, P71, DOI 10.1007/978-3-540-72200-7_8
   DELGRANDE JP, 2008, P 11 INT C PRINC KNO, P411
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   GIACOMO GD, 2006, P 21 NAT C ART INT 1
   HITZLER P, 2009, INT HDB INFORM SYSTE, P111
   KATSUNO H, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P387
   Knorr M, 2011, ARTIF INTELL, V175, P1528, DOI 10.1016/j.artint.2011.01.007
   Leite, 2003, FRONTIERS ARTIFICIAL, V81
   Leite JA, 1998, LECT NOTES ARTIF INT, V1471, P224, DOI 10.1007/BFb0054796
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 1991, P 12 INT JOINT C ART, P381
   Liu H., 2006, P 10 INT C PRINC KNO, P46
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   Osorio M, 2007, THEOR PRACT LOG PROG, V7, P451, DOI 10.1017/S1471068406003000
   Qi G, 2006, ARTIF INTELL REV, V26, P115, DOI 10.1007/s10462-007-9044-3
   Qi GL, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P891
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Slota M, 2010, FRONT ARTIF INTEL AP, V215, P956, DOI 10.3233/978-1-60750-606-5-957
   Slota M, 2010, THEOR PRACT LOG PROG, V10, P547, DOI 10.1017/S147106841000027X
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wang Z, 2010, AAAI CONF ARTIF INTE, P369
   Winslett M., 1990, Updating Logical Databases
   WINSLETT M, 1988, P AAAI 88, P89
   Yang FK, 2009, LECT NOTES COMPUT SC, V5590, P434, DOI 10.1007/978-3-642-02906-6_38
   Zhang Y, 2006, ACM T COMPUT LOG, V7, P421, DOI 10.1145/1149114.1149115
NR 36
TC 9
Z9 11
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 801
EP 819
DI 10.1017/S1471068411000317
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Samuel, K
   Obrst, L
   Stoutenberg, S
   Fox, K
   Franklin, P
   Johnson, A
   Laskey, K
   Nichols, D
   Lopez, S
   Peterson, J
AF Samuel, Ken
   Obrst, Leo
   Stoutenberg, Suzette
   Fox, Karen
   Franklin, Paul
   Johnson, Adrian
   Laskey, Ken
   Nichols, Deborah
   Lopez, Steve
   Peterson, Jason
TI Translating OWL and semantic web rules into prolog: Moving toward
   description logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Semantic Web; logic programming; knowledge compilation; ontologies;
   rules
ID KNOWLEDGE COMPILATION
AB We are researching the interaction between the rule and the ontology layers of the Semantic Web, by comparing two options: 1) using OWL and its rule extension SWRL to develop an integrated ontology/rule language, and 2) layering rules on top of an ontology with RuleML and OWL. Toward this end, we are developing the SWORIER system, which enables efficient automated reasoning on ontologies and rules, by translating all of them into Prolog and adding a set of general rules that properly capture the semantics of OWL. We have also enabled the user to make dynamic changes on the fly, at run time. This work addresses several of the concerns expressed in previous work, such as negation, complementary classes, disjunctive heads, and cardinality, and it discusses alternative approaches for dealing with inconsistencies in the knowledge base. In addition, for efficiency, we implemented techniques called extensionalization, avoiding reanalysis, and code minimization.
C1 [Samuel, Ken; Obrst, Leo; Laskey, Ken; Nichols, Deborah] Mitre Corp, Mclean, VA 22102 USA.
   [Stoutenberg, Suzette; Fox, Karen; Franklin, Paul; Johnson, Adrian; Lopez, Steve; Peterson, Jason] Mitre Corp, Colorado Springs, CO 80910 USA.
C3 MITRE Corporation; MITRE Corporation
RP Samuel, K (corresponding author), Mitre Corp, 7525 Colshire Dr, Mclean, VA 22102 USA.
EM samuel@mitre.org; lobrst@mitre.org; suzette@mitre.org; kfox@mitre.org;
   pfranklin@mitre.org; abjohnson@mitre.org; klaskey@mitre.org;
   dlnichols@mitre.org; slopez@mitre.org; jasonp@mitre.org
CR AMZI, 2006, AMZI PROLOG PLUS LOG
   [Anonymous], 2004, W3C MEMB SUBMISS
   BARTAR R, 1998, CONSTRUCTIVE NEGATIO
   Bechhofer S., 2004, W3C recommendation
   Cadoli M, 1997, AI COMMUN, V10, P137
   Cadoli M, 1999, LECT NOTES COMPUT SC, V1551, P16
   CUMBO C, 2004, ICLP 2004, P371
   DACONTA M, 2003, SEMANTIC WEB FUTURE
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   de Bruijn J., 2004, WSML DELIVERABLE D20
   DU D, 1997, DIMACS SERIES DISCRE
   Eiter T, 2004, P 9 INT C PRINC KNOW
   GOGIC G, 1995, P 14 INT JOINT C ART, P862
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   Heymans S, 2003, LECT NOTES COMPUT SC, V2901, P146
   HIRTLEDD, 2004, SCHEMA SPECIFICATION
   HITZLER P, 2005, DESCRIPTION LOGIC PR
   KAUTZ H, 1991, LECT NOTES ARTIF INT, V567, P287
   KAUTZ H, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P155
   MAEDCHE A, 2003, 10 INT WORKSH KNOWL
   Minker J, 2002, LECT NOTES ARTIF INT, V2407, P472
   RECTOR A, 2004, 14 INT C KNOWL ENG K
   SAMUEL K, 2006, P INT WORKSH APPL LO, P112
   Schrag R, 1996, ARTIF INTELL, V81, P199, DOI 10.1016/0004-3702(95)00053-4
   Selman B, 1996, J ACM, V43, P193, DOI 10.1145/226643.226644
   SELMAN B, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P904
   Sippu S, 1996, J ACM, V43, P1046, DOI 10.1145/235809.235814
   STOUTENBURG S, 2006, 06B0000014 MITRE
   STOUTENBURG S, 2005, W3C WORKSH RUL LANG, P27
   VANROY P, 1994, J LOGIC PROGRAM, V20, P385, DOI 10.1016/0743-1066(94)90031-0
   VANROY P, 1992, IEEE COMPUT, V25, P54
   VANROY P, 1990, THESIS U CALIFORNIA
   VOLZ R, 2004, THESIS U KARLSRUHE
   VOLZ R, 2003, BUBO AMPLEMENTING OW
NR 34
TC 19
Z9 20
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 301
EP 322
DI 10.1017/S1471068407003249
PN 3
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drabent, W
   Milkowska, M
AF Drabent, W
   Milkowska, M
TI Proving correctness and completeness of normal programs - a declarative
   approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative programming; negation in logic programming; specifications;
   program correctness and completeness; termination; teaching logic
   programming
ID LOGIC PROGRAMS; SLDNF-RESOLUTION; TERMINATION; SEMANTICS; NEGATION
AB We advocate a declarative approach to proving properties of logic programs. Total correctness can be separated into correctness, completeness and clean termination; the latter includes nonfloundering. Only clean termination depends on the operational semantics, in particular on the selection rule. We show how to deal with correctness and completeness in a declarative way, treating programs only from the logical point of view. Specifications used in this approach are interpretations (or theories). We point out that specifications for correctness may differ from those for completeness, as usually there are answers which are neither considered erroneous nor required to be computed. We present proof methods for correctness and completeness for definite programs and generalize them to normal programs. For normal programs we use the 3-valued completion semantics; this is a standard semantics corresponding to negation as finite failure. The proof methods employ solely the classical 2-valued logic. We use a 2-valued characterization of the 3-valued completion semantics, which may be of separate interest. The method of proving correctness of definite programs is not new and can be traced back to the work of Clark in 1979. However a more complicated approach using operational semantics was proposed by some authors. We show that it is not stronger than the declarative one, as far as properties of program answers are concerned. For a corresponding operational approach to normal programs, we show that it is (strictly) weaker than our method. We also employ the ideas of this work to generalize a known method of proving termination of normal programs.
C1 Polish Acad Sci, Inst Comp Sci, PL-01237 Warsaw, Poland.
   Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
   Warsaw Univ, Inst Informat, PL-02097 Warsaw, Poland.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences; Linkoping University; University of Warsaw
RP Polish Acad Sci, Inst Comp Sci, Ul Ordona 21, PL-01237 Warsaw, Poland.
EM drabent@ipipan.waw.pl; M.Milkowska@mimuw.edu.pl
RI Drabent, Włodzimierz/JGM-7411-2023
OI Drabent, Włodzimierz/0000-0002-4700-7272
CR Apt K. R., 1997, From Logic Programming to Prolog
   APT KR, 1994, J LOGIC PROGRAM, V18, P177, DOI 10.1016/0743-1066(94)90051-5
   Apt KR, 1996, J LOGIC PROGRAM, V28, P147, DOI 10.1016/0743-1066(95)00150-6
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   APT KR, 1994, ADV LOGIC PROGRAMMIN
   Borger E., 1995, SPECIFICATION VALIDA, P55
   BOSSI A, 1994, THEOR COMPUT SCI, V124, P297, DOI 10.1016/0304-3975(92)00019-N
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   Bossi A., 1989, LECT NOTES COMPUT SC, V352, P96
   Boye J, 1997, J LOGIC PROGRAM, V33, P179, DOI 10.1016/S0743-1066(96)00144-6
   Clark K. L., 1979, 7959 IMP COLL
   COURCELLE B, 1988, INFORM COMPUT, V78, P1, DOI 10.1016/0890-5401(88)90002-8
   DeBoer FS, 1997, ACM T PROGR LANG SYS, V19, P685, DOI 10.1145/265943.265954
   DERANSART P, 1993, THEOR COMPUT SCI, V118, P99, DOI 10.1016/0304-3975(93)90107-5
   DERANSART P, 1993, GRAMMATICLA VIEW LOG
   DEVILLE Y, 1990, LOGIC PROGRAMMING SY
   Doets Kees., 1994, LOGIC LOGIC PROGRAMM
   Drabent W., 1991, New Generation Computing, V9, P69, DOI 10.1007/BF03037151
   Drabent W, 1996, J LOGIC PROGRAM, V27, P89, DOI 10.1016/0743-1066(95)00118-2
   DRABENT W, 1995, ACTA INFORM, V32, P27, DOI 10.1007/BF01185404
   DRABENT W, 1988, J THEORETICAL COMPUT, V59, P133
   DRABNET W, 2001, LNCS, V2237, P284
   FERRAND G, 1993, J LOGIC PROGRAM, V17, P265, DOI 10.1016/0743-1066(93)90033-D
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   HOGGER CJ, 1981, J ACM, V28, P372, DOI 10.1145/322248.322258
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Lloyd J. W., 2012, Foundations of Logic Programming
   MALFON B, 1994, P INT S LOG PROGR, P91
   MANCARELLA P, 1990, P 1990 N AM C, P923
   NAISH L, 2000, AUSTR COMPUTER SCI C, V22, P174
   Naish L., 1996, P 1996 JOINT INT C S, P185
   Naish Lee., 1992, Types in Logic Programming, P189
   Pedreschi D, 1999, J LOGIC PROGRAM, V39, P125, DOI 10.1016/S0743-1066(98)10035-3
   Ross K. A., 2003, Discrete Mathematics, V5
   SCHREYE DD, 1992, P FGCS 92 INT C 5 GE, P481
   STARK RF, 1997, LECT NOTES COMPUTER, V1234, P354
   STARK RF, 1996, LOGIC FDN APPL EUROP, P453
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 38
TC 11
Z9 11
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2005
VL 5
BP 669
EP 711
DI 10.1017/S147106840500253X
PN 6
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 987BP
UT WOS:000233493700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wolf, A
AF Wolf, A
TI Intelligent search strategies based on adaptive constraint handling
   rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE dynamic backtracking; conflict-directed backjumping; rule-based
   constraint handling; intelligent search; SAT problems
AB The most advanced implementation of adaptive constraint processing with Constraint Handling Rules (CHR) allows the application of intelligent search strategies to solve Constraint Satisfaction Problems (CSP). This presentation compares an improved version of conflict-directed backjumping and two variants of dynamic backtracking with respect to chronological backtracking on some of the AIM instances which are a benchmark set of random 3-SAT problems. A CHR implementation of a Boolean constraint solver combined with these different search strategies in Java is thus being compared with a CHR implementation of the same Boolean constraint solver combined with chronological backtracking in SICStus Prolog. This comparison shows that the addition of "intelligence" to the search process may reduce the number of search steps dramatically. Furthermore, the runtime of their Java implementations is in most cases faster than the implementations of chronological backtracking. More specifically, conflict-directed backjumping is even faster than the SICStus Prolog implementation of chronological backtracking, although our Java implementation of CHR lacks the optimisations made in the SICStus Prolog system.
C1 Fraunhofer Inst Rechnerarchitektur & Softwaretech, D-12489 Berlin, Germany.
C3 Fraunhofer Gesellschaft
RP Wolf, A (corresponding author), Fraunhofer Inst Rechnerarchitektur & Softwaretech, Kekulestr 7, D-12489 Berlin, Germany.
EM Armin.Wolf@first.fraunhofer.de
OI Wolf, Armin/0000-0003-3940-0792
CR BAKER AB, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P288
   Bliek C, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P319
   Bruynooghe M, 2004, THEOR PRACT LOG PROG, V4, P371, DOI 10.1017/S1471068403001893
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth Thom, 1995, ECRCTR9520
   Fruhwirth TW, 1994, LECT NOTES COMPUTER, V910, P90
   Ginsberg ML, 1993, J ARTIF INTELL RES, V1, P25, DOI 10.1613/jair.1
   GINSBERG ML, 1996, P 4 INT C PRINC KNOW, P226
   GIUNCHIGLIA E, 2001, P 17 INT JOINT C ART, V1, P275
   Holzbaur C, 2000, APPL ARTIF INTELL, V14, P369, DOI 10.1080/088395100117043
   Holzbaur C., 1990, THESIS U VIENNA
   IWAMA K, 1996, DIMACS SERIES DISCRE, V26, P377
   Jussien N., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P249
   JUSSIEN N, 2001, P CP 2001 WORKSH US
   Lynce I, 2002, FRONT ARTIF INTEL AP, V77, P166
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MULLER H, 2004, THESIS TU BERLIN
   PROSSER P., 1993, COMPUT INTELL, V9, P268, DOI DOI 10.1111/J.1467-8640.1993.TB00310.X
   Prosser P, 1995, MAC CBJ MAINTAINING
   SCHMAUSS M, 1999, THESIS L MAXIMILIANS
   VERFAILLIE G, 1994, ECAI 94 WORKSH CONST, P1
   Wolf A., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P256
   WOLF A, 1999, THESIS DISKI, V219
   WOLF A, 2001, P 14 INT C APPL PROL, P211
NR 25
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 567
EP 594
DI 10.1017/S1471068405002383
PN 4-5
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Lucas, S
   Vidal, G
   Hanus, M
AF Alpuente, M
   Lucas, S
   Vidal, G
   Hanus, M
TI Specialization of functional logic programs based on needed narrowing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE partial evaluation; functional logic programming; needed narrowing
ID UNIVERSAL RESOLVING ALGORITHM; TERM-REWRITING-SYSTEMS; INVERSE
   COMPUTATION; PARTIAL DEDUCTION; LANGUAGE; TRANSFORMATION; STRATEGIES;
   RULES
AB Many functional logic languages are based on narrowing, a unification-based goal-solving mechanism which subsumes the reduction mechanism of functional languages and the resolution principle of logic languages. Needed narrowing is an optimal evaluation strategy which constitutes the basis of modern (narrowing-based) lazy functional logic languages. In this work, we present the fundamentals of partial evaluation in such languages. We provide correctness results for partial evaluation based on needed narrowing and show that the nice properties of this strategy are essential for the specialization process. In particular, the structure of the original program is preserved by partial evaluation and, thus, the same evaluation strategy can be applied for the execution of specialized programs. This is in contrast to other partial evaluation schemes for lazy functional logic programs which may change the program structure in a negative way. Recent proposals for the partial evaluation of declarative multi-paradigm programs use (some form of) needed narrowing to perform computations at partial evaluation time. Therefore, our results constitute the basis for the correctness of such partial evaluators.
C1 Univ Politecn Valencia, E-46020 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Univ Politecn Valencia, Camino Vera S-N, E-46020 Valencia, Spain.
EM alpuente@dsic.upv.es; slucas@dsic.upv.es; gvidal@dsic.upv.es;
   mh@informatik.uni-kiel.de
RI Vidal, German/P-5548-2019; Vidal, German/B-2217-2014; Lucas,
   Salvador/F-6725-2010; ALPUENTE, MARÍA/E-1899-2012
OI Vidal, German/0000-0002-1857-6951; Lucas, Salvador/0000-0001-9923-2108;
   ALPUENTE, MARÍA/0000-0002-9268-1178; Hanus, Michael/0000-0002-4953-8202
CR Abramov S, 2002, SCI COMPUT PROGRAM, V43, P193, DOI 10.1016/S0167-6423(02)00023-0
   Abramov S, 2000, LECT NOTES COMPUT SC, V1837, P187
   Albert E, 2003, INFORM PROCESS LETT, V85, P19, DOI 10.1016/S0020-0190(02)00336-8
   Albert E, 2002, NEW GENERAT COMPUT, V20, P3, DOI 10.1007/BF03037257
   ALBERT E, 2001, PARTIAL EVALUATATION
   ALBERT E, 2002, J FUNCTIONAL LOGIC P, V1, P1
   ALBERT E, 1999, SPRINGER LNAI, V1705, P376
   ALBERT E, 1998, LECT NOTES COMPUT SC, V1503, P262
   Alpuente M, 2004, THEOR COMPUT SCI, V311, P479, DOI 10.1016/j.tcs.2003.10.033
   Alpuente M, 2003, J LOGIC COMPUT, V13, P287, DOI 10.1093/logcom/13.2.287
   Alpuente M, 2000, LECT NOTES COMPUT SC, V1963, P289
   Alpuente M, 1999, LECT NOTES COMPUT SC, V1722, P147
   Alpuente M, 1998, ACM T PROGR LANG SYS, V20, P768, DOI 10.1145/291891.291896
   ALPUENTE M, 2004, COMPUTING RES REPOSI
   ALPUENTE M, 1997, SIGPLAN NOTICES, V32, P151
   ALPUENTE M, 1998, ACM COMPUTING SURVEY, V30
   [Anonymous], CURRY INTEGRATED FUN
   [Anonymous], P 14 INT C LOG PROGR
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Antoy S, 2000, LECT NOTES ARTIF INT, V1794, P171
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Antoy S., 1997, Springer LNCS, V1298, P16
   ANTOY S, 1998, LECT NOTES COMPUT SC, V632, P143
   ANTOY S, 2001, P 3 INT ACM SIGPLAN, P207
   BELLEGARDE F, 1995, LECT NOTES COMPUT SC, V914, P403
   BONDORF A, 1989, LECT NOTES COMPUT SC, V352, P81
   BONDORF A, 1988, PARTIAL EVALUATION M, P27
   CONSEL C, 1993, P 20 ANN ACM S PRINC, P493
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   DERSHOWITZ N, 1993, J SYMB COMPUT, V15, P467, DOI 10.1016/S0747-7171(06)80002-7
   Dershowitz Nachum, 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, P243, DOI 10.1016/b978-0-444-88074-1.50011-1
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   GIOVANNETTI E, 1991, J COMPUTER SYSTEM SC, V42, P363
   GLUCK R, 1994, LECT NOTES COMPUTER, V844, P165
   Gluck R., 1993, LECT NOTES COMPUTER, V724, P112
   GLUCK R, 1996, LECT NOTES COMPUTER, V1110, P137
   Hanus M., 1999, Journal of Functional Programming, V9, P33, DOI 10.1017/S0956796899003330
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Hanus M, 1998, INFORM PROCESS LETT, V67, P1, DOI 10.1016/S0020-0190(98)00016-7
   HANUS M, 1997, P 24 ACM S PRINC PRO, P80, DOI DOI 10.1145/263699.263710
   HANUS M, 1995, LECT NOTES COMPUT SC, V1048, P252
   HANUS M, 2003, PAKCS 1 5 0 PORTLAND
   HUET G, 1992, COMPUTATIONAL LOGIC, P395
   KUCHEN H, 1990, LECT NOTES COMPUT SC, V463, P298
   LAFAVE L, 1997, LECT NOTES COMPUT SC, V1463, P168
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   LOOGEN R, 1993, LECT NOTES COMPUT SC, V714, P184
   LOPEZFRAGUAS F, 1999, LNCS, V1631, P244
   Lucas S, 1998, INFORM PROCESS LETT, V67, P245, DOI 10.1016/S0020-0190(98)00118-5
   MIDDELDORP A, 1997, P 24 ANN ACM SIGPLAN, P94, DOI DOI 10.1145/263699.263711
   MORENONAVARRO JJ, 1992, J LOGIC PROGRAM, V12, P191, DOI 10.1016/0743-1066(92)90024-W
   NEMYTYKH A, 1996, LECT NOTES COMPUT SC, V1110, P322
   OYAMAGUCHI M, 1993, SIAM J COMPUT, V22, P114, DOI 10.1137/0222010
   Pettorossi A, 1996, ACM COMPUT SURV, V28, P360, DOI 10.1145/234528.234529
   PETTOROSSI A, 1996, LECT NOTES COMPUTER, V1110, P355
   Sorensen M. H., 1996, Journal of Functional Programming, V6, P811, DOI 10.1017/S0956796800002008
   TURCHIN VF, 1986, LECT NOTES COMPUT SC, V217, P257
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
   ZARTMANN F, 1997, LECT NOTES COMPUT SC, V1302, P141
NR 60
TC 12
Z9 12
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2005
VL 5
BP 273
EP 303
DI 10.1017/S1471068404002303
PN 3
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 938SI
UT WOS:000230022800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandecasteele, H
   Janssens, G
AF Vandecasteele, H
   Janssens, G
TI An open ended tree
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract data entry; binary tree; ISO-compatible Prolog; logarithmic
   time complexity
AB An open ended list is a well known data structure in Prolog programs. It is frequently used to represent a value changing over time, while this value is referred to from several places in the data structure of the application. A weak point in this technique is that the time complexity is linear in the number of updates to the value represented by the open ended list. In this programming pearl we present a variant of the open ended list, namely an open ended tree, with an update and access time complexity logarithmic in the number of updates to the value.
C1 PharmaDM, B-3001 Louvain, Belgium.
   Katholieke Univ Leuven, Dept Comp Sci, B-3001 Louvain, Belgium.
C3 KU Leuven
RP Vandecasteele, H (corresponding author), PharmaDM, Ambachtenlaan 54D, B-3001 Louvain, Belgium.
RI Janssens, Gerda/N-2662-2013
CR [Anonymous], ENERGY2020
   BLOCKEEL H, 2000, LECT NOTES ARTIF INT, V1866, P60
   *EUR, 1998, ECL 3 7 US MAN
   FREDMAN ML, 1987, J ACM, V34, P596, DOI 10.1145/28869.28874
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   Le Houitouze S., 1990, LECT NOTES COMPUTER, V456, P136
   *SWE, 2000, SICSTUS PROL 3 8 5 U
   VANDECASTEELE H, 2000, CW295
NR 8
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4221 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2003
VL 3
BP 377
EP 385
DI 10.1017/S1471068402001618
PN 3
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 689AQ
UT WOS:000183469800005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, YA
   Stoller, SD
   Tong, Y
   Lin, B
AF Liu, Yanhong A.
   Stoller, Scott D.
   Tong, Yi
   Lin, Bo
TI Integrating Logic Rules with Everything Else, Seamlessly
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 39th International Conference on Logic Programming
CY JUL 09-15, 2023
CL London, ENGLAND
DE language design and implementation; logic rules; sets; comprehension;
   aggregation; quantification; functions; updates; objects; concurrent and
   distributed
ID SEMANTICS
AB This paper presents a language, Alda, that supports all of logic rules, sets, functions, updates, and objects as seamlessly integrated built-ins. The key idea is to support predicates in rules as set-valued variables that can be used and updated in any scope, and support queries using rules as either explicit or implicit automatic calls to an inference function. We have defined a formal semantics of the language, implemented a prototype compiler that builds on an object-oriented language that supports concurrent and distributed programming and on an efficient logic rule system, and successfully used the language and implementation on benchmarks and problems from a wide variety of application domains. We describe the compilation method and results of experimental evaluation.
C1 [Liu, Yanhong A.; Stoller, Scott D.; Tong, Yi; Lin, Bo] SUNY Stony Brook, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Liu, YA (corresponding author), SUNY Stony Brook, Stony Brook, NY 11794 USA.
EM liu@cs.stonybrook.edu; stoller@cs.stonybrook.edu;
   yittong@cs.stonybrook.edu; bolin@cs.stonybrook.edu
RI Liu, Annie/KVB-5867-2024
OI Liu, Yanhong/0000-0002-5742-6489
FU NSF [CCF-1954837, CCF-1414078, IIS-1447549]; ONR [N00014-21-1-2719,
   N00014-20-1-2751, N00014-15-1-2208]
FX We thank David S. Warren for an initial 28-line XSB program for
   interface to XSB, and Tuncay Tekle for help implementing some benchmarks
   and running some preliminary experiments. We also thank Thang Bui for
   additional applications in program analysis and optimization, and
   students in undergraduate and graduate courses for using Alda and its
   earlier versions, called DA-rules.This work was supported in part by NSF
   under grants CCF-1954837, CCF-1414078, and IIS-1447549 and ONR under
   grants N00014-21-1-2719, N00014-20-1-2751, and N00014-15-1-2208.
CR Abiteboul S, 1995, FDN DATABASES
   ANDERSON J., 2016, Professional Clojure, P169
   [Anonymous], 2023, Language Integrated Query (LINQ)
   [Anonymous], 2006, SIGMOD C
   ANSI INCITS, 2004, ANSI INCITS 359-2004
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Borraz-Sanchez Conrado, 2018, ACM Books, V20, P331, DOI [10.1145/3191315.3191322, DOI 10.1145/3191315.3191322]
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Byrd W.E., 2009, Ph.D. thesis
   CACACE F, 1990, SIGMOD REC, V19, P225, DOI 10.1145/93605.98732
   Calejo M, 2004, LECT NOTES COMPUT SC, V3229, P714, DOI 10.1007/978-3-540-30227-8_64
   Caseau Y, 2002, THEOR PRACT LOG PROG, V2, P769, DOI 10.1017/S1471068401001363
   De Roover Coen, 2011, P 9 INT C PRINCIPLES, P71, DOI [10.1145/2093157.2093168, DOI 10.1145/2093157.2093168]
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Geiger K., 1995, INSIDE ODBC
   Hanus Michael, 2013, Programming Logics. Essays in Memory of Harald Ganzinger: LNCS 7797, P123, DOI 10.1007/978-3-642-37651-1_6
   HARKES D. C., 2016, LIPIcs, V56
   JAEGER T., 2000, P 5 ACM WORKSH ROL B, P66
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   KIFER M., 2020, Ergo Lite (a.k.a. Flora-2): User's Manual Version 2.1
   Kifer M, 2018, ACM Books
   Körner P, 2022, THEOR PRACT LOG PROG, V22, P776, DOI 10.1017/S1471068422000102
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Li NH, 2007, IEEE SECUR PRIV, V5, P41, DOI 10.1109/MSP.2007.158
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   Lin Bo, 2014, DistAlgo: A Language for Distributed Algorithms
   Liu Y. A., 2023, P 39 INT C LOG PROGR
   Liu Y. A., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P519
   Liu YA, 2023, Arxiv, DOI arXiv:2305.19202
   Liu YHA, 2022, J LOGIC COMPUT, V32, P1659, DOI [10.1093/logcom/exac072, 10.1007/978-3-030-93100-1_11]
   Liu YHA, 2021, J LOGIC COMPUT, V31, P193, DOI 10.1093/logcom/exaa077
   Liu YHA, 2020, J LOGIC COMPUT, V30, P1609, DOI 10.1093/logcom/exaa056
   Liu YHA, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/2994595
   Liu YHA, 2012, ACM SIGPLAN NOTICES, V47, P395, DOI 10.1145/2398857.2384645
   Liu YA, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1552309.1552311
   Liu Yanhong A., 2022, arXiv
   Liu Yanhong A., 2007, Department of Defense Sponsored Information Security Research: New Methods for Protecting Against Cyber Threats, P425
   Madsen M, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428193
   Madsen M, 2016, ACM SIGPLAN NOTICES, V51, P194, DOI [10.1145/2908080.2908096, 10.1145/2980983.2908096]
   Maier David., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P3, DOI DOI 10.1145/3191315.3191317
   Miller D., 2012, PROGRAMMING HIGHER O
   Redl C, 2016, THEOR PRACT LOG PROG, V16, P866, DOI 10.1017/S1471068416000211
   Reese G., 2000, Database Programming with JDBC and Java, Vsecond
   Rothamel Tom., 2007, PROC 2007 ACM SIGPLA, P81, DOI DOI 10.1145/1244381.1244394
   ROY P.V., 2004, CONCEPTS TECHNIQUES
   Ryzhyk Leonid, 2019, Datalog
   Warren DS, 2017, Arxiv, DOI arXiv:1704.02375
   Sagonas K., 1994, SIGMOD Record, V23, P442, DOI 10.1145/191843.191927
   Sandhu R., 2000, Symposium on Access Control Models and Technologies: Proceedings of the fifth ACM workshop on Role-based access control, V26, P47, DOI 10.1145/344287.344301
   Somogyi Z., 1995, Australian Computer Science Communications, V17, P499
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Swift Theresa, 2022, The XSB System Version 5.0,x
   TONG Y., 2023, ALDA
   Tuncay Tekle K., 2010, P 12 INT ACM SIGPLAN, P35, DOI DOI 10.1145/1836089.1836094
   Tuncay Tekle K., 2011, P 2011 ACM SIGMOD IN, P661, DOI DOI 10.1145/1989323.1989393
   Vennekens J, 2017, LECT NOTES COMPUT SC, V10137, P86, DOI 10.1007/978-3-319-51676-9_6
   Yang GZ, 2000, LECT NOTES ARTIF INT, V1861, P1078
   Zhou NF, 2016, LECT NOTES COMPUT SC, V9718, P3, DOI 10.1007/978-3-319-42019-6_1
NR 61
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 678
EP 695
DI 10.1017/S1471068423000108
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001164466100016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandenbroucke, A
   Schrijvers, T
AF Vandenbroucke, Alexander
   Schrijvers, Tom
TI <i>Disjunctive Delimited Control</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE delimited control; disjunctions; Prolog; meta-interpreter;
   branch-and-bound
ID LOGIC PROGRAMS; PROLOG; CONTINUATIONS; HANDLERS
AB Delimited control is a powerful mechanism for programming language extension which has been recently proposed for Prolog (and implemented in SWI-Prolog). By manipulating the control flow of a program from inside the language, it enables the implementation of powerful features, such as tabling, without modifying the internals of the Prolog engine. However, its current formulation is inadequate: it does not capture Prolog's unique non-deterministic nature which allows multiple ways to satisfy a goal.This paper fully embraces Prolog's non-determinism with a novel interface for disjunctive delimited control, which gives the programmer not only control over the sequential (conjunctive) control flow, but also over the non-deterministic control flow. We provide a meta-interpreter that conservatively extends Prolog with delimited control and show that it enables a range of typical Prolog features and extensions, now at the library level: findall, cut, branch-and-bound optimisation, probabilistic programming, ...
C1 [Vandenbroucke, Alexander] Stand Chartered, London, England.
   [Schrijvers, Tom] Katholieke Univ Leuven, Leuven, Belgium.
C3 KU Leuven
RP Vandenbroucke, A (corresponding author), Stand Chartered, London, England.
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559
FU FWO [G0D1419N]; KU Leuven grant [C14/20/079]
FX We are grateful to Paul Tarau and the anonymous LOPSTR 2021 reviewers
   for their helpful feedback. Part of this work was funded by FWO grant
   G0D1419N and by KU Leuven grant C14/20/079.
CR ABDALLAH S., 2017, ABS170807081 CORR
   BRAssEL B., 2004, J FUNCT LOG PROGRAM, V2004
   BRISSET P, 1993, LOGIC PROGRAMM, P27
   CARLSSON M, 1984, NEW GENERAT COMPUT, V2, P347, DOI 10.1007/BF03037326
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   DANVY O, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P151, DOI 10.1145/91556.91622
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Desouter B, 2015, THEOR PRACT LOG PROG, V15, P419, DOI 10.1017/S1471068415000137
   DYVBIG R. K., 2005, 615 COMP SCI DEP IND
   Felleisen M., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P180, DOI 10.1145/73560.73576
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   FILINSKI A., 1996, CMUCS96119
   GUDEMAN DA, 1992, ACM T PROGR LANG SYS, V14, P107, DOI 10.1145/111186.104659
   Hinze Ralf, 2012, Mathematics of Program Construction. Proceedings 11th International Conference, MPC 2012, P324, DOI 10.1007/978-3-642-31113-0_16
   IVANOVIC D., 2009, CICLOPS 2009
   Kammar O, 2013, ACM SIGPLAN NOTICES, V48, P145, DOI [10.1145/2500365.2500590, 10.1145/2544174.2500590]
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Plotkin GD, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(4:23)2013
   Saleh AH, 2016, THEOR PRACT LOG PROG, V16, P884, DOI 10.1017/S147106841600034X
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T, 2009, LECT NOTES COMPUT SC, V5649, P24, DOI 10.1007/978-3-642-02846-5_4
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   Schrijvers T, 2014, PPDP'14: PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P259, DOI 10.1145/2643135.2643145
   Schrijvers T, 2014, SCI COMPUT PROGRAM, V84, P101, DOI 10.1016/j.scico.2013.05.008
   Schrijvers T, 2013, THEOR PRACT LOG PROG, V13, P533, DOI 10.1017/S1471068413000331
   Schrijvers T, 2009, J FUNCT PROGRAM, V19, P663, DOI 10.1017/S0956796809990086
   SPIVEY M, 1990, SCI COMPUT PROGRAM, V14, P25, DOI 10.1016/0167-6423(90)90056-J
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tarau P, 2009, LECT NOTES COMPUT SC, V5418, P137, DOI 10.1007/978-3-540-92995-6_10
   VANDENBROUCKE A., 2021, ABS210802972 CORR
   VANROY P, 1989, SIGPLAN NOTICES, V24, P132, DOI 10.1145/71605.71617
   WADLER P, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P61, DOI 10.1145/91556.91592
   WADLER P, 1985, LECT NOTES COMPUT SC, V201, P113
   Wood F, 2014, JMLR WORKSH CONF PRO, V33, P1024
NR 34
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 110
EP 131
AR PII S1471068423000029
DI 10.1017/S1471068423000029
EA APR 2023
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:000969098900001
OA Green Accepted, Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Lanzinger, M
   Sferrazza, S
   Gottlob, G
AF Lanzinger, Matthias
   Sferrazza, Stefano
   Gottlob, Georg
TI <i>MV-Datalog plus -: Effective Rule-based Reasoning with Uncertain
   Observations</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Datalog; fuzzy logic programming; logic programming; Lukasiewicz; logic;
   uncertainty in AI; Datalog(+/-)
AB Modern applications combine information from a great variety of sources. Oftentimes, some of these sources, like machine-learning systems, are not strictly binary but associated with some degree of (lack of) confidence in the observation. We propose MV-Datalog and MV-Datalog(+/-) as extensions of Datalog and Datalog(+/-), respectively, to the fuzzy semantics of infinite-valued Lukasiewicz logic L as languages for effectively reasoning in scenarios where such uncertain observations occur. We show that the semantics of MV-Datalog exhibits similar model theoretic properties as Datalog. In particular, we show that (fuzzy) entailment can be decided via minimal fuzzy models. We show that when they exist, such minimal fuzzy models are unique and can be characterised in terms of a linear optimisation problem over the output of a fixed-point procedure. On the basis of this characterisation, we propose similar many-valued semantics for rules with existential quantification in the head, extending Datalog(+/-).
C1 [Lanzinger, Matthias; Sferrazza, Stefano; Gottlob, Georg] Univ Oxford, Oxford OX1 2JD, England.
   [Sferrazza, Stefano] Tech Univ Wien, Vienna, Austria.
C3 University of Oxford; Technische Universitat Wien
RP Lanzinger, M (corresponding author), Univ Oxford, Oxford OX1 2JD, England.
EM matthias.lanzinger@cs.ox.ac.uk; stefauo.sferrazza@cs.ox.ac.uk;
   georg.gottlob@cs.ox.ac.uk
OI Sferrazza, Stefano/0000-0001-9569-4428
FU Austrian Science Fund (FWF) [P30930]; Royal Society [RP\R1\ 201074];
   Royal Society "RAISON DATA" project [RP\R1\ 201074]; Austrian Science
   Fund (FWF) [P30930] Funding Source: Austrian Science Fund (FWF)
FX Stefano Sferrazza was supported by the Austrian Science Fund
   (FWF):P30930. Georg Gottlob is a Royal Society Research Professor and
   acknowledges support by the Royal Society in this role through the
   "RAISON DATA" project (Reference No. RP\R1\ 201074). Matthias Lanzinger
   acknowledges support by the Royal Society "RAISON DATA" project
   (Reference No. RP\R1\ 201074).
CR Achs A., 1995, Acta Cybernetica, V12, P153
   Bach SH, 2017, J MACH LEARN RES, V18
   Bellomarini L, 2020, LECT NOTES COMPUT SC, V12173, P131, DOI 10.1007/978-3-030-57977-7_9
   Bellomarini L, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2
   Bobillo F, 2016, KNOWL-BASED SYST, V95, P12, DOI 10.1016/j.knosys.2015.11.017
   Borgwardt S., 2017, P DL CEUR WORKSH P, V1879
   Borgwardt S, 2017, LECT NOTES ARTIF INT, V10564, P31, DOI 10.1007/978-3-319-67582-4_3
   Calì A, 2013, J ARTIF INTELL RES, V48, P115, DOI 10.1613/jair.3873
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Cavallo R., 1987, Proceedings of the Thirteenth International Conference on Very Large Data Bases: 1987 13th VLDB, P71
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Ebrahim R, 2001, FUZZY SET SYST, V117, P215, DOI 10.1016/S0165-0114(98)00300-5
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Fjellstad A., 2021, NOTRE DAME J FORM L, V2, P247
   Hajek P., 1998, Metamathematics of Fuzzy Logic
   Julián-Iranzo P, 2018, IEEE T FUZZY SYST, V26, P2634, DOI 10.1109/TFUZZ.2018.2806923
   KHACHIIAN LG, 1979, DOKL AKAD NAUK SSSR+, V244, P1093
   Kim Junmo, 2017, ABS170903806 CORR
   Lanzinger M., 2022, ABS220201718 CORR
   Lukasiewicz T, 2008, J WEB SEMANT, V6, P291, DOI 10.1016/j.websem.2008.04.001
   Maier David., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P3, DOI DOI 10.1145/3191315.3191317
   Mishkin D, 2017, COMPUT VIS IMAGE UND, V161, P11, DOI 10.1016/j.cviu.2017.05.007
   Preining N, 2010, LECT NOTES COMPUT SC, V6397, P30, DOI 10.1007/978-3-642-16242-8_4
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Stoilos G, 2007, J ARTIF INTELL RES, V30, P273, DOI 10.1613/jair.2279
   Suciu D., 2011, Probabilistic databases, synthesis lectures on data management
   Vojtás P, 2001, FUZZY SET SYST, V124, P361, DOI 10.1016/S0165-0114(01)00106-3
NR 28
TC 0
Z9 0
U1 2
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 678
EP 692
AR PII S1471068422000199
DI 10.1017/S1471068422000199
EA JUL 2022
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000830208900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Law, M
AF Law, Mark
TI Conflict-Driven Inductive Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE non-monotonic inductive logic programming; answer set programming
   conflict driven solving
AB The goal of inductive logic programming (ILP) is to learn a program that explains a set of examples. Until recently, most research on ILP targeted learning Prolog programs. The ILASP system instead learns answer set programs (ASP). Learning such expressive programs widens the applicability of ILP considerably; for example, enabling preference learning, learning common-sense knowledge, including defaults and exceptions, and learning non-deterministic theories. Early versions of ILASP can be considered meta-level ILP approaches, which encode a learning task as a logic program and delegate the search to an ASP solver. More recently, ILASP has shifted towards a new method, inspired by conflict-driven SAT and ASP solvers. The fundamental idea of the approach, called Conflict-driven ILP (CDILP), is to iteratively interleave the search for a hypothesis with the generation of constraints which explain why the current hypothesis does not cover a particular example. These coverage constraints allow ILASP to rule out not just the current hypothesis, but an entire class of hypotheses that do not satisfy the coverage constraint. This article formalises the CDILP approach and presents the ILASP3 and ILASP4 systems for CDILP, which are demonstrated to be more scalable than previous ILASP systems, particularly in the presence of noise.
C1 [Law, Mark] ILASP Ltd, Grantham, England.
RP Law, M (corresponding author), ILASP Ltd, Grantham, England.
EM mark@ilasp.com
CR Alviano M., 2013, LECT NOTES COMPUTER, V54, P66
   [Anonymous], 1996, Adv. Induct. Logic Program.
   Athakravi D., 2015, THESIS IMPERIAL COLL
   Athakravi D, 2014, LECT NOTES ARTIF INT, V8812, P31, DOI 10.1007/978-3-662-44923-3_3
   Bragaglia S., 2014, LECT NOTES COMPUTER, V9046, P33
   Chabierski P., 2017, CEUR WORKSHOP PROC, V2052
   Corapi D., 2011, LECT NOTES COMPUTER, V7207
   Corapi D, 2010, LEIBNIZ INT PR INFOR, V7, P54, DOI 10.4230/LIPIcs.ICLP.2010.54
   Cropper A., 2016, Metagol System
   Cropper A, 2021, MACH LEARN, V110, P801, DOI 10.1007/s10994-020-05934-z
   Cropper A, 2020, MACH LEARN, V109, P1393, DOI 10.1007/s10994-019-05843-w
   Furelos-Blanco D., 2020, 34 AAAI C ART INT AA, V3890, P3897
   Furelos-Blanco D, 2021, J ARTIF INTELL RES, V70, P1031
   Gebser M., 2016, OASICS SCHLOSS DAGST, V2, P15
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Inoue K., 1997, P 15 INT JOINT C ART, V176, P181
   Kaminski T., 2019, P 28 INT JOINT C ART, p6186 6190
   Katzouris N, 2015, MACH LEARN, V100, P555, DOI 10.1007/s10994-015-5512-1
   Kazmi M, 2017, EXPERT SYST APPL, V87, P291, DOI 10.1016/j.eswa.2017.06.013
   Law M., 2018, Advances in Cognitive Systems, V7, P57
   Law M., 2018, Ph.D. thesis
   Law M., 2021, P 30 INT JOINT C ART, P1936, DOI [DOI 10.24963/IJCAI.2021/267, 10.24963/ijcai.2021/267]
   Law M., 2020, ILASP SYSTEM INDUCTI
   Law M., 2019, 33 AAAI C ARTIFICIAL, V2919, P2928
   Law M, 2020, AAAI CONF ARTIF INTE, V34, P2877
   Law M, 2018, ARTIF INTELL, V259, P110, DOI 10.1016/j.artint.2018.03.005
   Law M, 2016, THEOR PRACT LOG PROG, V16, P834, DOI 10.1017/S1471068416000351
   Law M, 2015, THEOR PRACT LOG PROG, V15, P511, DOI 10.1017/S1471068415000198
   Law M, 2014, LECT NOTES ARTIF INT, V8761, P311, DOI 10.1007/978-3-319-11558-0_22
   Lynce I, 2003, LECT NOTES ARTIF INT, V2627, P144
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   Muggleton SH., 1991, New Generation Comput, V8, P295318
   Oblak A., 2010, P INT C IND LOG PROG, P190
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   Ray O, 2003, LECT NOTES ARTIF INT, V2835, P311
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Sakama C., 2000, Inductive Logic Programming. 10th International Conference, ILP 2000. Proceedings (Lecture Notes in Artificial Intelligence Vol.1866), P209
   Sakama C, 2009, MACH LEARN, V76, P3, DOI 10.1007/s10994-009-5113-y
   Seitzer J, 2000, IEEE INTELL SYST APP, V15, P38, DOI 10.1109/5254.889105
   Srinivasan A., 2001, The Aleph Manual
NR 41
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2023
VL 23
IS 2
BP 387
EP 414
AR PII S1471068422000011
DI 10.1017/S1471068422000011
EA FEB 2022
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA KB0F2
UT WOS:000792186500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandevelde, S
   Aerts, B
   Vennekens, J
AF Vandevelde, Simon
   Aerts, Bram
   Vennekens, Joost
TI Tackling the DM Challenges with cDMN: A Tight Integration of DMN and
   Constraint Reasoning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE decision model and notation; constraint reasoning; expressiveness;
   readability; IDP system
ID MODELS
AB Knowledge-based AI typically depends on a knowledge engineer to construct a formal model of domain knowledge - but what if domain experts could do this themselves? This paper describes an extension to the Decision Model and Notation (DMN) standard, called Constraint Decision Model and Notation (cDMN). DMN is a user-friendly, table-based notation for decision logic, which allows domain experts to model simple decision procedures without the help of IT staff. cDMN aims to enlarge the expressiveness of DMN in order to model more complex domain knowledge, while retaining DMNs goal of being understandable by domain experts. We test cDMN by solving the most complex challenges posted on the DM Community website. We compare our own cDMN solutions to the solutions that have been submitted to the website and find that our approach is competitive. Moreover, cDMN is able to solve more challenges than any other approach.
C1 [Vandevelde, Simon] Katholieke Univ Leuven, Dept Comp Sci, De Nayer Campus,JP De Nayerlaan 5, B-2860 St Katelijne Waver, Belgium.
   Katholieke Univ Leuven, Inst AI, AI, B-3000 Leuven, Belgium.
C3 KU Leuven; KU Leuven
RP Vandevelde, S (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, De Nayer Campus,JP De Nayerlaan 5, B-2860 St Katelijne Waver, Belgium.
EM s.vandevelde@kuleuven.be; b.aerts@kuleuven.be;
   joost.vennekens@kuleuven.be
RI Vennekens, Joost/ABE-6600-2020
OI Vennekens, Joost/0000-0002-0791-0176; Vandevelde,
   Simon/0000-0001-7312-3675
CR Aerts B, 2020, LECT NOTES COMPUT SC, V12173, P23, DOI 10.1007/978-3-030-57977-7_2
   Bazhenova E, 2019, INFORM SYST, V83, P69, DOI 10.1016/j.is.2019.02.001
   Biard T, 2015, IFIP ADV INF COMM TE, V463, P489, DOI 10.1007/978-3-319-24141-8_45
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calvanese D, 2019, THEOR PRACT LOG PROG, V19, P536, DOI 10.1017/S1471068418000479
   Calvanese D, 2018, INFORM SYST, V78, P112, DOI 10.1016/j.is.2018.01.010
   Car NJ, 2018, COMPUT ELECTRON AGR, V152, P290, DOI 10.1016/j.compag.2018.07.024
   Carbonnelle P., 2019, CEUR WORKSHOP PROC, V2491
   Cat B. D., 2018, DECLARATIVE LOGIC PR, P279, DOI [10.1145/3191315.3191321, DOI 10.1145/3191315.3191321, DOI 10.1145/3191315]
   Deryck M, 2019, LECT NOTES COMPUT SC, V11784, P171, DOI 10.1007/978-3-030-31095-0_12
   Hasic F., 2017, CEUR WORKSHOP PROC, V1859, P64
   Hasic F, 2020, KNOWL INF SYST, V62, P2011, DOI 10.1007/s10115-019-01416-4
   Hasic F, 2018, DECIS SUPPORT SYST, V107, P1, DOI 10.1016/j.dss.2017.12.008
   Object Management Group, 2020, DEC MOD NOT
   OpenRules Inc., 2017, OPENR
   Progress, 2019, CORT
   Silver B., 2018, DMN METHOD STYLE BUS, V2nd
   Sooter LJ, 2019, APPL CLIN INFORM, V10, P935, DOI 10.1055/s-0039-3400749
   Vandevelde S., 2020, MULTIFUNCTIONAL INTE
   Wittocx Johan., 2008, LaSh, P153
NR 20
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2021 NOV 12
PY 2021
BP 1
EP 24
AR PII S1471068421000491
DI 10.1017/S1471068421000491
EA NOV 2021
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 1B1XI
UT WOS:000792235400001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Galatà, G
   Grioni, A
   Maratea, M
   Mochi, M
   Porro, I
AF Dodaro, Carmine
   Galata, Giuseppe
   Grioni, Andrea
   Maratea, Marco
   Mochi, Marco
   Porro, Ivan
TI An ASP-based Solution to the Chemotherapy Treatment Scheduling problem
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE healthcare; chemotherapy treatment scheduling; answer set programming
AB The problem of scheduling chemotherapy treatments in oncology clinics is a complex problem, given that the solution has to satisfy (as much as possible) several requirements such as the cyclic nature of chemotherapy treatment plans, maintaining a constant number of patients, and the availability of resources, for example, treatment time, nurses, and drugs. At the same time, realizing a satisfying schedule is of upmost importance for obtaining the best health outcomes. In this paper we first consider a specific instance of the problem which is employed in the San Martino Hospital in Genova, Italy, and present a solution to the problem based on Answer Set Programming (ASP). Then, we enrich the problem and the related ASP encoding considering further features often employed in other hospitals, desirable also in S. Martino, and/or considered in related papers. Results of an experimental analysis, conducted on the real data provided by the San Martino Hospital, show that ASP is an effective solving methodology also for this important scheduling problem.
C1 [Dodaro, Carmine] Univ Calabria, Calabria, Italy.
   [Galata, Giuseppe; Porro, Ivan] SurgiQ Srl, Genoa, Italy.
   [Grioni, Andrea] San Martino Hosp, Genoa, Italy.
   [Maratea, Marco; Mochi, Marco] Univ Genoa, Genoa, Italy.
C3 University of Calabria; University of Genoa; IRCCS AOU San Martino IST;
   University of Genoa
RP Dodaro, C (corresponding author), Univ Calabria, Calabria, Italy.
EM dodaro@mat.unical.it; giuseppe.galata@surgiq.com;
   andrea.grioni@hsanmartino.it; marco.mochi@unige.it;
   ivan.porro@surgiq.com
RI Maratea, Marco/AAR-5779-2020
OI MARATEA, MARCO/0000-0002-9034-2527; Dodaro, Carmine/0000-0002-5617-5286;
   Mochi, Marco/0000-0002-5849-3667
FU Janssen-Cilag SpA
FX The work is carried out in the framework of a partnership with
   Janssen-Cilag SpA which partially sponsored the research. Authors are
   also grateful to the staff working at the San Martino Hospital for their
   support and for the data used in the paper.
CR Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano M., 2020, IPS RCRA 2020 CEUR W, V2745
   [Anonymous], 2013, PhD thesis
   Anstegui C., 2019, PYPBLIB
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Dodaro C, 2018, LECT NOTES ARTIF INT, V11298, P445, DOI 10.1007/978-3-030-03840-3_33
   Dodaro Carmine, 2020, CILC 2020 CEUR WORKS, P342
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   Gebser M., 2016, ICLP TECHNICAL COMMU
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Hahn-Goldberg S, 2014, HEALTH CARE MANAG SC, V17, P379, DOI 10.1007/s10729-014-9268-0
   Heshmat M, 2021, ANN OPER RES, V298, P289, DOI 10.1007/s10479-019-03500-y
   Huang YL, 2018, J ONCOL PRACT, V14, pE82, DOI 10.1200/JOP.2017.025510
   Huggins A., 2014, IIE ANN C EXPO 2014
   Ignatiev A., 2019, Journal on Satisfiability, Boolean Modeling and Computation, V11, P53, DOI DOI 10.3233/SAT190116
   Kumar D, 2020, J GLOB HEALTH, V10, DOI 10.7189/jogh.10.010367
   Lame G, 2016, IIE Trans Healthc Syst Eng, V6, P127, DOI DOI 10.1080/19488300.2016.1189469
   Martins R, 2014, LECT NOTES COMPUT SC, V8561, P438, DOI 10.1007/978-3-319-09284-3_33
   Morgado A, 2014, LECT NOTES COMPUT SC, V8656, P564, DOI 10.1007/978-3-319-10428-7_41
   Roussel Olivier., 2012, INPUT OUTPUT FORMAT
   Schüller P, 2018, KUNSTL INTELL, V32, P151, DOI 10.1007/s13218-018-0542-z
   Sevinc S, 2013, COMPUT BIOL MED, V43, P2103, DOI 10.1016/j.compbiomed.2013.10.012
   Sud A, 2020, ANN ONCOL, V31, P1065, DOI 10.1016/j.annonc.2020.05.009
   Turkcan Ayten, 2012, IIE Transactions on Healthcare Systems Engineering, V2, P31, DOI 10.1080/19488300.2012.665155
NR 27
TC 18
Z9 19
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 835
EP 851
DI 10.1017/S1471068421000363
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800009
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Delivorias, S
   Leclère, M
   Mugnier, ML
   Ulliana, F
AF Delivorias, Stathis
   Leclere, Michel
   Mugnier, Marie-Laure
   Ulliana, Federico
TI Characterizing Boundedness in Chase Variants
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Joint Conference on Rules and Reasoning (RuleML+RR)
CY SEP 18-21, 2018
CL Univ Luxembourg, Belval Campus, Esch sur Alzette, LUXEMBOURG
SP Fonds Natl Rech Luxembourg, SnT, ILIAS, Univ Calabria, Dipartimento Matematica Informatica, Logical Contracts, Oxygen, Binarypark, Univ Luxembourg, Comp Sci Commun Res Unit, Springer
HO Univ Luxembourg, Belval Campus
DE knowledge representation and nonmonotonic reasoning; logic programming
   methodology and applications; databases and semantic web reasoning;
   theory
ID QUERY; RULES
AB Existential rules are a positive fragment of first-order logic that generalizes function-free Horn rules by allowing existentially quantified variables in rule heads. This family of languages has recently attracted significant interest in the context of ontology-mediated query answering. Forward chaining, also known as the chase, is a fundamental tool for computing universal models of knowledge bases, which consist of existential rules and facts. Several chase variants have been defined, which differ on the way they handle redundancies. A set of existential rules is bounded if it ensures the existence of a bound on the depth of the chase, independently from any set of facts. Deciding if a set of rules is bounded is an undecidable problem for all chase variants. Nevertheless, when computing universal models, knowing that a set of rules is bounded for some chase variant does not help much in practice if the bound remains unknown or even very large. Hence, we investigate the decidability of the k-boundedness problem, which asks whether the depth of the chase for a given set of rules is bounded by an integer k. We identify a general property which, when satisfied by a chase variant, leads to the decidability of k-boundedness. We then show that the main chase variants satisfy this property, namely the oblivious, semi-oblivious (aka Skolem), and restricted chase, as well as their breadth-first versions.
C1 [Delivorias, Stathis; Leclere, Michel; Mugnier, Marie-Laure; Ulliana, Federico] Univ Montpellier, LIRMM, CNRS, INRIA, Montpellier, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Paul-Valery; Universite Perpignan Via Domitia; Universite de
   Montpellier; Inria
RP Delivorias, S (corresponding author), Univ Montpellier, LIRMM, CNRS, INRIA, Montpellier, France.
EM jazzcrazysta@yahoo.com; leclere@lirmm.fr; mugnier@lirmm.fr;
   federico.ulliana@lirmm.fr
OI Mugnier, Marie-laure/0000-0002-0574-3693
CR ABITEBOUL S, 1989, INFORM PROCESS LETT, V32, P281, DOI 10.1016/0020-0190(89)90019-7
   Abiteboul Serge, 1995, FDN DATABASES LOGICA
   [Anonymous], 2005, P AAAI2005
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Baget J., 2010, P 12 INT C PRINCIPLE
   Baget J.F., 2011, 22 INT JOINT C ART I
   Baget JF, 2014, FRONT ARTIF INTEL AP, V263, P39, DOI 10.3233/978-1-61499-419-0-39
   Baget JF, 2011, ARTIF INTELL, V175, P1620, DOI 10.1016/j.artint.2011.03.002
   Baget JF, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P677
   BEERI C, 1984, J ACM, V31, P718, DOI 10.1145/1634.1636
   Beeri C., 1981, Automata, Languages and Programming. Eighth Colloquium, P73
   Bourhis P, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1581
   Cali A., 2008, P 11 INT C PRINC KNO, P70
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Carral D, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P922
   Chandra A.K., 1977, P 9 ANN ACM S THEOR, P77, DOI [DOI 10.1145/800105.803397, 10.1145/800105.803397]
   Cosmadakis S. S., 1988, Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing, P477, DOI 10.1145/62212.62259
   Deutsch A., 2008, PODS, P149
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   GAIFMAN H, 1993, J ACM, V40, P683, DOI 10.1145/174130.174142
   Gogacz T, 2014, LECT NOTES COMPUT SC, V8573, P293
   Gottlob Georg, 2012, Reasoning Web. Semantic Technologies for Advanced Query Answering. Proceedings of the 8th International Summer School 2012, P54, DOI 10.1007/978-3-642-33158-9_2
   Grahne G, 2018, FUND INFORM, V157, P221, DOI 10.3233/FI-2018-1627
   Grau BC, 2013, J ARTIF INTELL RES, V47, P741
   Guessarian I., 1994, Journal of Logic and Computation, V4, P375, DOI 10.1093/logcom/4.4.375
   Hernich A., 2007, PODS, P113
   HILLEBRAND GG, 1995, J LOGIC PROGRAM, V25, P163, DOI 10.1016/0743-1066(95)00051-K
   Kr?tzsch M., 2011, P 22 INT JOINT C ART, P963, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-166
   Krotzsch M., 2007, AAAI, P452
   Leclere M., 2016, P 29 INT WORKSH DESC
   Leone N., 2012, P KR, P13
   Marcinkowski J, 1999, SIAM J COMPUT, V29, P231, DOI 10.1137/S0097539797322140
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Mugnier ML, 2014, LECT NOTES COMPUT SC, V8714, P245, DOI 10.1007/978-3-319-10587-1_6
   Rocher, 2016, THESIS U MONTPELLIER
   Rudolph M, 2012, PRINCIPLES KNOWLEDGE
   Ulliana S, 2018, COMPUTING RES REPOSI
NR 37
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2021
VL 21
IS 1
SI SI
BP 51
EP 79
AR PII S1471068420000083
DI 10.1017/S1471068420000083
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA TG2JW
UT WOS:000671236400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Erdem, E
   Fidan, M
   Manlove, D
   Prosser, P
AF ERDEM, E. S. R. A.
   FIDAN, M. U. G. E.
   MANLOVE, D. A. V. I. D.
   PROSSER, P. A. T. R. I. C. K.
TI A General Framework for Stable Roommates Problems using Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE stable roommates problem; answer set programming; declarative problem
   solving
ID MATCHINGS
AB The Stable Roommates problem (SR) is characterized by the preferences of agents over other agents as roommates: each agent ranks all others in strict order of preference. A solution to SR is then a partition of the agents into pairs so that each pair shares a room, and there is no pair of agents that would block this matching (i.e., who prefers the other to their roommate in the matching). There are interesting variations of SR that are motivated by applications (e.g., the preference lists may be incomplete (SRI) and involve ties (SRTI)), and that try to find a more fair solution (e.g., Egalitarian SR). Unlike the Stable Marriage problem, every SR instance is not guaranteed to have a solution. For that reason, there are also variations of SR that try to find a good-enough solution (e.g., Almost SR). Most of these variations are NP-hard. We introduce a formal framework, called SRTI-ASP, utilizing the logic programming paradigm Answer Set Programming, that is provable and general enough to solve many of such variations of SR. Our empirical analysis shows that SRTI-ASP is also promising for applications.
C1 [ERDEM, E. S. R. A.; FIDAN, M. U. G. E.] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
   [MANLOVE, D. A. V. I. D.; PROSSER, P. A. T. R. I. C. K.] Univ Glasgow, Sch Comp Sci, Glasgow, Lanark, Scotland.
C3 Sabanci University; University of Glasgow
RP Erdem, E (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
EM esraerdem@sabanciuniv.edu; mugefidan@sabanciuniv.edu;
   david.manlove@glasgow.ac.uk; patrick.prosser@glasgow.ac.uk
RI Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810; Fidan, Muge/0000-0002-7646-6531
FU Sabanci University IRP Grant; Scottish Informatics and Computer Science
   Alliance DVF Programme; Engineering and Physical Sciences Research
   Council [EP/P028306/1, EP/P026842/1]; EPSRC [EP/P026842/1, EP/P028306/1]
   Funding Source: UKRI
FX This work has been partially supported by Sabanci University IRP Grant,
   and the Scottish Informatics and Computer Science Alliance DVF
   Programme. The third and fourth authors were supported by grants
   EP/P028306/1 and EP/P026842/1 from the Engineering and Physical Sciences
   Research Council, respectively.
CR Abraham D. J., 2005, Approximation and Online Algorithms. Third International Workshop, WAOA 2005. Revised Papers (Lecture Notes in Computer Science Vol. 3879), P1
   AMENDOLA G., 2018, P RICERCA
   Arkin EM, 2009, INFORM PROCESS LETT, V109, P219, DOI 10.1016/j.ipl.2008.10.003
   Biró P, 2012, THEOR COMPUT SCI, V432, P10, DOI 10.1016/j.tcs.2012.01.022
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   COOPER F., 2020, THESIS
   Cseh A, 2019, THEOR COMPUT SYST, V63, P128, DOI 10.1007/s00224-017-9810-9
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Erdogan ST, 2004, LECT NOTES ARTIF INT, V2923, P114
   ERDOS P, 1960, B INT STATIST INST, V38, P343
   FEDER T, 1992, J COMPUT SYST SCI, V45, P233, DOI 10.1016/0022-0000(92)90048-N
   GAI AT, 2007, P 27 IEEE INT C DIST, P30
   GALE D, 1962, AM MATH MON, V69, P9, DOI 10.2307/2312726
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gusfield D., 1989, STABLE MARRIAGE PROB
   Irving RW, 2009, J DISCRET ALGORITHMS, V7, P213, DOI 10.1016/j.jda.2008.09.003
   IRVING RW, 1985, J ALGORITHM, V6, P577, DOI 10.1016/0196-6774(85)90033-1
   Irving RW, 2002, J ALGORITHM, V43, P85, DOI 10.1006/jagm.2002.1219
   IRVING RW, 1994, DISCRETE APPL MATH, V48, P261, DOI 10.1016/0166-218X(92)00179-P
   KNUTH D., 1997, CRM P, V10
   Kujansuu E, 1999, Divulgaciones Matematicas, V7, P19
   KUNYSZ A., 2016, P ESA, V57
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Manlove DavidF., 1999, Stable marriage with ties and unacceptable partners
   MCCARTHY J., 1998, P COMMONSENSE
   Mertens S, 2005, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2005/10/P10008
   Prosser Patrick, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P15, DOI 10.1007/978-3-319-07046-9_2
   RONN E, 1990, J ALGORITHM, V11, P285, DOI 10.1016/0196-6774(90)90007-2
   Roth AE, 2005, J ECON THEORY, V125, P151, DOI 10.1016/j.jet.2005.04.004
   Scott S., 2005, THESIS
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Wu Y., 2009, STUDIA LOGICA, V93, P383, DOI DOI 10.1007/S11225-009-9210-5
NR 37
TC 2
Z9 2
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 911
EP 925
AR PII S1471068420000277
DI 10.1017/S1471068420000277
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU García, AJ
   Prakken, H
   Simari, GR
AF Garcia, Alejandro J.
   Prakken, Henry
   Simari, Guillermo R.
TI A Comparative Study of Some Central Notions
   of<i>ASPIC</i><SUP>+</SUP>and<i>DeLP</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE rule-based argumentation; defeasible logic programming; ASPIC(+)
ID STRUCTURED ARGUMENTATION; FRAMEWORK
AB This paper formally compares some central notions from two well-known formalisms for rule-based argumentation,DeLPandASPIC(+). The comparisons especially focus on intuitive adequacy and inter-translatability, consistency, and closure properties. As for differences in the definitions of arguments and attack, it turns out thatDeLP's definitions are intuitively appealing but that they may not fully comply with Caminada and Amgoud's rationality postulates of strict closure and indirect consistency. For some special cases, theDeLPdefinitions are shown to fare better thanASPIC(+). Next, it is argued that there are reasons to consider a variant ofDeLPwith grounded semantics, since in some examples its current notion of warrant arguably has counterintuitive consequences and may lead to sets of warranted arguments that are not admissible. Finally, under some minimality and consistency assumptions onASPIC(+)arguments, a one-to-many correspondence betweenASPIC(+)arguments andDeLParguments is identified in such a way that if theDeLPwarranting procedure is changed to grounded semantics, then 'sDeLPnotion of warrant andASPIC(+)'s notion of justification are equivalent. This result is proven for three alternative definitions of attack.
C1 [Garcia, Alejandro J.; Simari, Guillermo R.] Univ Nacl Sur, Dept Comp Sci & Engn, Inst Comp Sci & Engn, CONICET,UNS, Bahia Blanca, Buenos Aires, Argentina.
   [Prakken, Henry] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Prakken, Henry] Univ Groningen, Fac Law, Groningen, Netherlands.
C3 National University of the South; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Utrecht University; University of
   Groningen
RP García, AJ (corresponding author), Univ Nacl Sur, Dept Comp Sci & Engn, Inst Comp Sci & Engn, CONICET,UNS, Bahia Blanca, Buenos Aires, Argentina.
EM ajg@cs.uns.edu.ar; h.prakken@uu.nl; grs@cs.uns.edu.ar
RI Simari, Guillermo Ricardo/P-8739-2019
OI Simari, Guillermo Ricardo/0000-0001-6247-0428; Prakken,
   Henry/0000-0002-3431-7757
CR Amgoud Leila, 2013, Journal of Applied Non-Classical Logics, V23, P229, DOI 10.1080/11663081.2013.830381
   Amgoud L, 2006, ISTFP6002307 ASPIC
   [Anonymous], 1996, Principles of Knowledge Representation
   Baroni P., 2018, HDB FORMAL ARGUMENT, V1, P157
   Baroni P, 2011, KNOWL ENG REV, V26, P365, DOI 10.1017/S0269888911000166
   Besnard P, 2001, ARTIF INTELL, V128, P203, DOI 10.1016/S0004-3702(01)00071-6
   Besnard P., 2008, ELEMENTS ARGUMENTATI
   Caminada M., 2011, P 23 BEN C ART INT B
   Caminada M, 2007, ARTIF INTELL, V171, P286, DOI 10.1016/j.artint.2007.02.003
   Caminada M, 2014, FRONT ARTIF INTEL AP, V266, P209, DOI 10.3233/978-1-61499-436-7-209
   Cayrol C., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1443
   Cohen A, 2016, ENG APPL ARTIF INTEL, V49, P149, DOI 10.1016/j.engappai.2015.10.001
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Garcia A. J., 2018, HDB FORMAL ARGUMENTA, V1, P408
   Garcia A. J., 1993, P 13 INT C CHIL COMP
   Garcia A. J., 1998, P ECAI 98 WORKSH PRA
   Garcia A. J., 2000, THESIS
   García AJ, 2004, THEOR PRACT LOG PROG, V4, P95, DOI 10.1017/S1471068403001674
   García AJ, 2007, LECT NOTES ARTIF INT, V4798, P128
   García AJ, 2014, ARGUM COMPUT, V5, P63, DOI 10.1080/19462166.2013.869767
   García AJ, 2013, EXPERT SYST APPL, V40, P3233, DOI 10.1016/j.eswa.2012.12.036
   Gorogiannis N, 2011, ARTIF INTELL, V175, P1479, DOI 10.1016/j.artint.2010.12.003
   Martinez MV, 2012, FRONT ARTIF INTEL AP, V245, P185, DOI 10.3233/978-1-61499-111-3-185
   Modgil S, 2018, HDB FORMAL ARGUMENTA, V1, P73
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Modgil S, 2013, ARTIF INTELL, V195, P361, DOI 10.1016/j.artint.2012.10.008
   Modgil S, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P105, DOI 10.1007/978-0-387-98197-0_6
   Nelkin DK, 2000, PHILOS REV, V109, P375
   Parsons S., 2018, ARGUMENTATION BASED, P293
   POLLOCK JL, 1987, COGNITIVE SCI, V11, P481, DOI 10.1207/s15516709cog1104_4
   Pollock John, 1995, Cognitive carpentry
   Prakken H, 1999, LECT NOTES ARTIF INT, V1760, P202
   Prakken H, 2016, FRONT ARTIF INTEL AP, V287, P419, DOI 10.3233/978-1-61499-686-6-419
   Prakken H, 2010, ARGUM COMPUT, V1, P93, DOI 10.1080/19462160903564592
   Simari G., 1994, 14 INT C CHIL COMP S, P111
   Simari G. R., 1994, 4 IB C ART INT IBERA
   SIMARI GR, 1992, ARTIF INTELL, V53, P125, DOI 10.1016/0004-3702(92)90069-A
   Teze JCL, 2015, EXPERT SYST APPL, V42, P8243, DOI 10.1016/j.eswa.2015.06.048
   Tucat M., 2009, AAAI FALL S SERIES
   Vreeswijk GAW, 1997, ARTIF INTELL, V90, P225, DOI 10.1016/S0004-3702(96)00041-0
   Wu YN, 2015, J LOGIC COMPUT, V25, P303, DOI 10.1093/logcom/exu017
NR 41
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2020
VL 20
IS 3
BP 358
EP 390
AR PII S1471068419000437
DI 10.1017/S1471068419000437
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA2BG
UT WOS:000577597100002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Amendola, G
   Ricca, F
AF Amendola, Giovanni
   Ricca, Francesco
TI Paracoherent Answer Set Semantics meets Argumentation Frameworks
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Abstract Argumentation; Paracoherent reasoning
ID LOGIC; MODELS
AB In the last years, abstract argumentation has met with great success in AI, since it has served to capture several non-monotonic logics for AI. Relations between argumentation framework (AF) semantics and logic programming ones are investigating more and more. In particular, great attention has been given to the well-known stable extensions of an AF, that are closely related to the answer sets of a logic program. However, if a framework admits a small incoherent part, no stable extension can be provided. To overcome this shortcoming, two semantics generalizing stable extensions have been studied, namely semi-stable and stage. In this paper, we show that another perspective is possible on incoherent AFs, called paracoherent extensions, as they have a counterpart in paracoherent answer set semantics. We compare this perspective with semi-stable and stage semantics, by showing that computational costs remain unchanged, and moreover an interesting symmetric behaviour is maintained.
C1 [Amendola, Giovanni; Ricca, Francesco] Univ Calabria, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Amendola, G (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM amendola@mat.unical.it; ricca@mat.unical.it
RI Amendola, Giovanni/Q-1859-2018
OI Amendola, Giovanni/0000-0002-2111-9671
FU MIUR under PRIN [2017M9C25L_001]
FX This work has been partially supported by MIUR under PRIN 2017 project
   n. 2017M9C25L_001.
CR Alcantara J.F.L., 2005, J APPL LOGIC, V3, P67, DOI 10.1016/j.jal.2004.07.012
   AMENDOLA G, 2019, TPLP
   Amendola G., 2018, CEUR WORKSHOP P, V2272
   Amendola G, 2018, AAAI CONF ARTIF INTE, P1720
   Amendola G, 2019, LECT NOTES ARTIF INT, V11468, P479, DOI 10.1007/978-3-030-19570-0_31
   Amendola G, 2017, AAAI CONF ARTIF INTE, P1034
   Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   Amgoud L, 2000, FRONT ARTIF INTEL AP, V54, P338
   [Anonymous], 2016, CEUR WORKSHOP P
   [Anonymous], 2007, ARTIFICIAL INTELLIGE, DOI DOI 10.1016/J.ARTINT.2007.05.001
   Arieli O, 2016, J LOGIC COMPUT, V26, P1203, DOI 10.1093/logcom/exu009
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Baroni P, 2005, ARTIF INTELL, V168, P162, DOI 10.1016/j.artint.2005.05.006
   Baroni P, 2011, ARTIF INTELL, V175, P791, DOI 10.1016/j.artint.2010.11.005
   Baroni P, 2016, J LOGIC COMPUT, V26, P1051, DOI 10.1093/logcom/exu012
   Baroni Pietro, 2007, ARTIF INTELL, V171, p[10, 675]
   Baumann R, 2016, FRONT ARTIF INTEL AP, V287, P83, DOI 10.3233/978-1-61499-686-6-83
   Bench-Capon TJM, 2016, J LOGIC COMPUT, V26, P1055, DOI 10.1093/logcom/exu011
   Bodanza GA, 2016, J LOGIC COMPUT, V26, P1235, DOI 10.1093/logcom/exu004
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   CAMINADA M., 2007, BNAIC 07
   Caminada M, 2006, FR ART INT, V144, P121
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Caminada MWA, 2012, J LOGIC COMPUT, V22, P1207, DOI 10.1093/logcom/exr033
   Costantini S, 2005, THEOR PRACT LOG PROG, V5, P747, DOI 10.1017/S1471068404002339
   Cramer M, 2019, LECT NOTES ARTIF INT, V11468, P102, DOI 10.1007/978-3-030-19570-0_7
   Dung Phan Minh, 2007, ARTIF INTELL, V171, p[10, 642]
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dunne PE, 2008, LECT NOTES ARTIF INT, V5293, P153, DOI 10.1007/978-3-540-87803-2_14
   Dunne PE, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P85, DOI 10.1007/978-0-387-98197-0_5
   Dvorák W, 2016, J LOGIC COMPUT, V26, P1149, DOI 10.1093/logcom/exu006
   Dvorák W, 2010, INFORM PROCESS LETT, V110, P425, DOI 10.1016/j.ipl.2010.04.005
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   EITER T, 2010, KR
   Gabbay D, 2016, J LOGIC COMPUT, V26, P1065, DOI 10.1093/logcom/exu007
   Gaggl Sarah Alice, 2015, Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation. LNCS 9060, P309
   GAGGL S. A, 2018, 2 INT COMP COMP MOD, V39, P77
   Gaggl SA, 2013, J LOGIC COMPUT, V23, P925, DOI 10.1093/logcom/exs011
   GALE D, 1962, AM MATH MON, V69, P9, DOI 10.2307/2312726
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P953, DOI 10.1017/S1471068411000019
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Jakobovits H, 1999, J LOGIC COMPUT, V9, P215, DOI 10.1093/logcom/9.2.215
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P80
   Galindo M, 2008, J LOGIC COMPUT, V18, P913, DOI 10.1093/logcom/exn015
   Pereira LM, 2005, LECT NOTES ARTIF INT, V3808, P29, DOI 10.1007/11595014_4
   Pereira LM, 2007, LECT NOTES ARTIF INT, V4790, P454, DOI 10.1007/978-3-540-75560-9_33
   Pollock JL, 1998, ARTIF INTELL, V106, P267, DOI 10.1016/S0004-3702(98)00100-3
   Prakken H., 1996, Artificial Intelligence and Law, V4, P331, DOI 10.1007/BF00118496
   PRZYMUSINSKI T, 1991, ARTIF INTELL, V49, P309, DOI 10.1016/0004-3702(91)90013-A
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
   SACCA D, 1991, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P87
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   Schulz C, 2018, ARTIF INTELL, V262, P301, DOI 10.1016/j.artint.2018.07.001
   SEIPEL D, 1997, LECT NOTES COMPUT SC, V1471, P66
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Verheij B, 2003, ARTIF INTELL, V150, P291, DOI 10.1016/S0004-3702(03)00107-3
   Verheij B., 1996, P 8 DUTCH C ART INT, P357
   Wu Y., 2009, STUDIA LOGICA, V93, P2
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
NR 65
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 688
EP 704
DI 10.1017/S1471068419000139
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cuteri, B
   Dodaro, C
   Ricca, F
   Schüller, P
AF Cuteri, Bernardo
   Dodaro, Carmine
   Ricca, Francesco
   Schueller, Peter
TI Partial Compilation of ASP Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer set programming; Grounding bottleneck; Compilation
ID ANSWER; DLV
AB Answer Set Programming (ASP) is a well-known declarative formalism in logic programming. Efficient implementations made it possible to apply ASP in many scenarios, ranging from deductive databases applications to the solution of hard combinatorial problems. State-of-the-art ASP systems are based on the traditional ground&solve approach and are general-purpose implementations, i.e., they are essentially built once for any kind of input program. In this paper, we propose an extended architecture for ASP systems, in which parts of the input program are compiled into an ad-hoc evaluation algorithm (i.e., we obtain a specific binary for a given program), and might not be subject to the grounding step. To this end, we identify a condition that allows the compilation of a sub-program, and present the related partial compilation technique. Importantly, we have implemented the new approach on top of a well-known ASP solver and conducted an experimental analysis on publicly-available benchmarks. Results show that our compilation-based approach improves on the state of the art in various scenarios, including cases in which the input program is stratified or the grounding blow-up makes the evaluation unpractical with traditional ASP systems.
C1 [Cuteri, Bernardo; Dodaro, Carmine; Ricca, Francesco] Univ Calabria, DeMaCS, Commenda Di Rende, Italy.
   [Schueller, Peter] TU Wien, Knowledge Based Syst Grp, Vienna, Austria.
C3 University of Calabria; Technische Universitat Wien
RP Cuteri, B (corresponding author), Univ Calabria, DeMaCS, Commenda Di Rende, Italy.
EM cuteri@mat.unical.it; dodaro@mat.unical.it; ricca@mat.unical.it;
   peter.schueller@tuwien.ac.at
RI Dodaro, Carmine/AAE-5732-2020; Schüller, Peter/C-3531-2016
OI Dodaro, Carmine/0000-0002-5617-5286; Schüller,
   Peter/0000-0002-1837-126X; Cuteri, Bernardo/0000-0001-5164-9123
FU MIUR under PRIN 2017 project [2017M9C25L 001 (CUP H24I17000080001)];
   EU's Horizon 2020 research and innovation program [825619]; H2020 -
   Industrial Leadership [825619] Funding Source: H2020 - Industrial
   Leadership
FX This work has been partially supported by MIUR under PRIN 2017 project
   n. 2017M9C25L 001 (CUP H24I17000080001), and from the EU's Horizon 2020
   research and innovation program under grant agreement No 825619 (AI4EU).
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Amendola G., 2016, IJCAI, P38
   [Anonymous], 2009, Database Systems: The Complete Book
   [Anonymous], 1988, PRINCIPLES COMPUTER
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Bogaerts B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1737
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Ceri S., 1990, SURVEYS COMPUTER SCI
   Cuteri B, 2019, LECT NOTES ARTIF INT, V11468, P526, DOI 10.1007/978-3-030-19570-0_35
   Cuteri Bernardo, 2017, THEOR PRACT LOG PROG, V17, P780
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Derler Y, 2016, AI MAG, V37, P45
   DODARO C., 2018, ABS181101692 CORR
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P384, DOI 10.1007/978-3-319-23264-5_32
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Ianni G, 2009, J LOGIC COMPUT, V19, P671, DOI 10.1093/logcom/exn043
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Kojo T, 2003, LECT NOTES COMPUT SC, V2649, P86
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Muchnick S., 1997, ADV COMPILER DESIGN
   Nogueira Monica, 2001, ANSWER SET PROGRAMMI
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
NR 43
TC 3
Z9 3
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 857
EP 873
DI 10.1017/S1471068419000231
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gao, TT
   Fodor, P
   Kifer, M
AF Gao, Tiantian
   Fodor, Paul
   Kifer, Michael
TI Querying Knowledge via Multi-Hop English Questions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Controlled Natural Language; Knowledge Representation; Reasoning;
   Question Answering
AB The inherent difficulty of knowledge specification and the lack of trained specialists are some of the key obstacles on the way to making intelligent systems based on the knowledge representation and reasoning (KRR) paradigm commonplace. Knowledge and query authoring using natural language, especially controlled natural language (CNL), is one of the promising approaches that could enable domain experts, who are not trained logicians, to both create formal knowledge and query it. In previous work, we introduced the KALM system (Knowledge Authoring Logic Machine) that supports knowledge authoring (and simple querying) with very high accuracy that at present is unachievable via machine learning approaches. The present paper expands on the question answering aspect of KALM and introduces KALM-QA (KALM for Question Answering) that is capable of answering much more complex English questions. We show that KALM-QA achieves 100% accuracy on an extensive suite of movie-related questions, called MetaQA, which contains almost 29,000 test questions and over 260,000 training questions. We contrast this with a published machine learning approach, which falls far short of this high mark.
C1 [Gao, Tiantian; Fodor, Paul; Kifer, Michael] SUNY Stony Brook, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Gao, TT (corresponding author), SUNY Stony Brook, Stony Brook, NY 11794 USA.
EM tiagao@cs.stonybrook.edu; pfodor@cs.stonybrook.edu;
   kifer@cs.stonybrook.edu
FU NSF [1814457]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1814457] Funding Source:
   National Science Foundation
FX This work was partially supported by NSF grant 1814457. We are grateful
   to Norbert Fuchs and Rolf Schwitter for enlightening discussions on
   Attempto. Many thanks to Katherine Choi for validating the bulk of
   MetaQA queries.
CR Angeli G, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P344
   [Anonymous], 2014, STANFORD CORENLP NAT
   [Anonymous], 2012, P 2012 JOINT C EMP M
   Bordes Antoine, 2014, P C EMP METH NAT LAN, P615
   Das D, 2014, COMPUT LINGUIST, V40, P9, DOI 10.1162/COLI_a_00163
   Fillmore Charles J., 2001, P WORDNET OTH LEX RE
   Fuchs NE, 2008, LECT NOTES COMPUT SC, V5224, P104
   GAO T., 2019, DEV KALM QA
   Gao TT, 2018, 2018 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2018), P17, DOI 10.1109/WI.2018.0-112
   Gao TT, 2018, LECT NOTES COMPUT SC, V11230, P461, DOI 10.1007/978-3-030-02671-4_28
   Gomez F, 2008, LECT NOTES COMPUT SC, V5039, P40
   Gomez Fernando., 1994, 4th Applied Natural Language Processing Conference, ANLP 1994, Stuttgart, Germany, October 13-15, 1994, P84
   Johnson Chrstopher R., 2002, FRAMENET THEORY PRAC
   Kuhn T, 2014, COMPUT LINGUIST, V40, P121, DOI 10.1162/COLI_a_00168
   Li F, 2014, PROC VLDB ENDOW, V8, P73, DOI 10.14778/2735461.2735468
   Lopez V, 2012, SEMANT WEB, V3, P249, DOI 10.3233/SW-2011-0030
   Miller A., 2016, P 2016 C EMP METH NA, P1400, DOI DOI 10.18653/V1/D16-1147
   Navigli R, 2012, ARTIF INTELL, V193, P217, DOI 10.1016/j.artint.2012.07.001
   Object Management Group, 2017, SEM BUS VOC BUS RUL
   RINGGAARD M, 2017, 171007032 CORR, P1
   Saha D, 2016, PROC VLDB ENDOW, V9, P1209, DOI 10.14778/2994509.2994536
   Schwitter R., 2010, Coling 2010: Posters, P1113
   Sun YJ, 2019, BIOSCI BIOTECH BIOCH, V83, P1248, DOI 10.1080/09168451.2019.1594677
   Zhang YY, 2018, AAAI CONF ARTIF INTE, P6069
   Zhang Yuyu., 2018, The MetaQA dataset
NR 25
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 636
EP 653
DI 10.1017/S1471068419000103
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Frank, M
   Codish, M
AF Frank, Michael
   Codish, Michael
TI Logic Programming with Graph Automorphism: Integrating nauty with Prolog
   (Tool Description)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
ID SYMMETRY; SAT
AB This paper presents the pl-nauty library, a Prolog interface to the nauty graph-automorphism tool. Adding the capabilities of nauty to Prolog combines the strength of the "generate and prune" approach that is commonly used in logic programming and constraint solving, with the ability to reduce symmetries while reasoning over graph objects. Moreover, it enables the integration of nauty in existing tool-chains, such as SAT-solvers or finite domain constraints compilers which exist for Prolog. The implementation consists of two components: pl-nauty, an interface connecting nauty's C library with Prolog, and pl-gtools, a Prolog framework integrating the software component of nauty, called gtools, with Prolog. The complete tool is available as a SWI-Prolog module. We provide a series of usage examples including two that apply to generate Ramsey graphs.
C1 [Frank, Michael; Codish, Michael] Ben Gurion Univ Negev, Dept Comp Sci, Beer Sheva, Israel.
C3 Ben Gurion University
RP Frank, M (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, Beer Sheva, Israel.
EM frankm@cs.bgu.ac.il; mcodish@cs.bgu.ac.il
RI Codish, Michael/AAH-2961-2020
OI Codish, Michael/0000-0003-0394-5854
CR Abelson D., 2002, Graph Drawing. 10th International Symposium, GD 2002. Revised Papers (Lecture Notes in Computer Science Vol.2528), P86
   Aloul FA, 2003, IEEE T COMPUT AID D, V22, P1117, DOI 10.1109/TCAD.2003.816218
   [Anonymous], 2015, ABS151203547 CORR
   [Anonymous], 1990, Report TR-CS-90-02
   [Anonymous], NAUTY TRACES USERS G
   Codish M., 2013, P 23 INT JOINT C ART
   Codish M., 2016, CONSTRAINTS, P1
   Codish M, 2016, J COMPUT SYST SCI, V82, P551, DOI 10.1016/j.jcss.2015.11.014
   Crawford J, 1996, MOR KAUF R, P148
   Darga P. T., 2004, P 41 DES AUT C
   Hartke SG, 2009, CONTEMP MATH, V479, P99
   Junttila T, 2007, SIAM PROC S, P135
   Kouri TM, 2015, INT J FOUND COMPUT S, V26, P269, DOI 10.1142/S0129054115500161
   McKay B., 1981, CONGR NUMERANTIUM, V30, P45
   McKay B., THE GRAPH6 FORMAT
   McKay BD, 2014, J SYMB COMPUT, V60, P94, DOI 10.1016/j.jsc.2013.09.003
   Metodi A, 2013, J ARTIF INTELL RES, V46, P303, DOI 10.1613/jair.3809
   Metodi A, 2012, THEOR PRACT LOG PROG, V12, P465, DOI 10.1017/S1471068412000130
   Radziszowski Stanislaw P, 1994, ELECT J COMBINATORIC
   Royle G., 2015, SPECTACULAR GRAPH AU
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 21
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 688
EP 702
DI 10.1017/S1471068416000223
PN 5-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800012
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lifschitz, V
AF Harrison, Amelia
   Lifschitz, Vladimir
TI Stable models for infinitary formulas with extensional atoms
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
AB The definition of stable models for propositional formulas with infinite conjunctions and disjunctions can be used to describe the semantics of answer set programming languages. In this note, we enhance that definition by introducing a distinction between intensional and extensional atoms. The symmetric splitting theorem for first-order formulas is then extended to infinitary formulas and used to reason about infinitary definitions.
C1 [Harrison, Amelia; Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Harrison, A (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM ameliaj@cs.utexas.edu; vl@cs.utexas.edu
FU Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [1422455] Funding Source: National Science Foundation
CR Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P366
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M, 1996, INT J SOFTW ENG KNOW, V6, P89, DOI 10.1142/S0218194096000053
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Harrison Amelia, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P398, DOI 10.1007/978-3-319-23264-5_33
   Lierler Y., 2011, THEOR PRACT LOG PROG
   Lifschitz V., 2012, 5 WORKSH ANSW SET PR
   Oikarinen E, 2008, THEOR PRACT LOG PROG, V8, P717, DOI 10.1017/S147106840800358X
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 13
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 771
EP 786
DI 10.1017/S1471068416000314
PN 5-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dundua, B
   Florido, M
   Kutsia, T
AF Dundua, Besik
   Florido, Mario
   Kutsia, Temur
TI CLP(H): <i>Constraint logic programming for hedges</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; constraint solving; hedges
ID SEQUENCE VARIABLES; SOLVING EQUATIONS
AB CLP(H) is an instantiation of the general constraint logic programming scheme with the constraint domain of hedges. Hedges are finite sequences of unranked terms, built over variadic function symbols and three kinds of variables: for terms, for hedges, and for function symbols. Constraints involve equations between unranked terms and atoms for regular hedge language membership. We study algebraic semantics of CLP(H) programs, define a sound, terminating, and incomplete constraint solver, investigate two fragments of constraints for which the solver returns a complete set of solutions, and describe classes of programs that generate such constraints.
C1 [Dundua, Besik] Tbilisi State Univ, VIAM, GE-380086 Tbilisi, Georgia.
   [Dundua, Besik; Florido, Mario] Univ Porto, LIACC, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
   [Florido, Mario] Univ Porto, DCC FC, Oporto, Portugal.
   [Kutsia, Temur] Johannes Kepler Univ Linz, RISC, A-4040 Linz, Austria.
C3 Ivane Javakhishvili Tbilisi State University; Universidade do Porto;
   Universidade do Porto; Johannes Kepler University Linz
RP Dundua, B (corresponding author), Tbilisi State Univ, VIAM, GE-380086 Tbilisi, Georgia.; Dundua, B; Florido, M (corresponding author), Univ Porto, LIACC, Rua Campo Alegre 823, P-4100 Oporto, Portugal.; Florido, M (corresponding author), Univ Porto, DCC FC, Oporto, Portugal.; Kutsia, T (corresponding author), Johannes Kepler Univ Linz, RISC, A-4040 Linz, Austria.
EM bdundua@gmail.com; amf@dcc.fc.up.pt; kutsia@risc.jku.at
RI Marin, Mircea/D-6909-2011; Florido, Mario/A-5818-2013; Kutsia,
   Temur/B-3777-2011
OI Marin, Mircea/0000-0002-9324-9838; Florido, Mario/0000-0002-0574-7555;
   Kutsia, Temur/0000-0003-4084-7380
FU LIACC through Programa de Financiamento Plurianual of the Fundacao para
   a Ciencia e Tecnologia (FCT); FCT [SFRH/BD/62058/2009]; Austrian Science
   Fund (FWF) [P 24087-N18]; Rustaveli Science Foundation [DI/16/4-120/11,
   FR/611/4-102/12]; Austrian Science Fund (FWF) [P24087] Funding Source:
   Austrian Science Fund (FWF); Fundação para a Ciência e a Tecnologia
   [SFRH/BD/62058/2009] Funding Source: FCT
FX This research has been partially supported by LIACC through Programa de
   Financiamento Plurianual of the Fundacao para a Ciencia e Tecnologia
   (FCT), by the FCT fellowship (ref. SFRH/BD/62058/2009), by the Austrian
   Science Fund (FWF) under the project SToUT (P 24087-N18), and the by
   Rustaveli Science Foundation under the grants DI/16/4-120/11 and
   FR/611/4-102/12.
CR [Anonymous], 2007, LECT NOTES COMPUTER
   [Anonymous], 2000, The mathematica book
   Antimirov V, 1996, THEOR COMPUT SCI, V155, P291, DOI 10.1016/0304-3975(95)00182-4
   Balland E, 2007, LECT NOTES COMPUT SC, V4533, P36
   Coelho J, 2006, LECT NOTES COMPUT SC, V3842, P148
   Coelho J, 2004, LECT NOTES COMPUT SC, V3291, P1098
   Coelho Jorge., 2007, 9th ACM International Workshop on Web Information and Data Management (WIDM 2007), Lisbon, Portugal, November 9, 2007, P1
   COLMERAUER A, 1990, COMMUN ACM, V33, P69, DOI 10.1145/79204.79210
   Comon H, 1998, J SYMB COMPUT, V25, P421, DOI 10.1006/jsco.1997.0186
   Dembinski P., 1985, 1985 Symposium on Logic Programming (Cat. No.85CH2205-3), P29
   DERSHOWITZ N, 1982, THEOR COMPUT SCI, V17, P279, DOI 10.1016/0304-3975(82)90026-3
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   Dovier A, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1352582.1352583
   Dundua B, 2014, LECT NOTES COMPUT SC, V8475, P285, DOI 10.1007/978-3-319-07151-0_18
   Ganzinger H., 1992, LECT NOTES COMPUTER, V656, P430
   Genesereth Michael R, 1992, Knowledge Interchange Format-Version 3.0: Reference Manual
   Hosoya H, 2003, J FUNCT PROGRAM, V13, P961, DOI 10.1017/S0956796802004410
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Kutsia T, 2005, LECT NOTES ARTIF INT, V3835, P215, DOI 10.1007/11591191_16
   Kutsia T, 2004, LECT NOTES COMPUT SC, V3249, P157
   Kutsia T, 2003, LECT NOTES COMPUT SC, V2706, P367
   Kutsia T., 2005, P 19 INT WORKSH UN U, P77
   Kutsia T, 2007, J SYMB COMPUT, V42, P352, DOI 10.1016/j.jsc.2006.12.002
   MARIN M, 2006, J APPL NON CLASSICAL, V16, P151
   Marin Mircea., 2003, Proceedings of the 4th International Workshop on the Implementation of Logics, P55
   Miller D., 1991, Journal of Logic and Computation, V1, P497, DOI 10.1093/logcom/1.4.497
   Rajasekar A., 1994, Logic Programming. Proceedings of the 1994 International Symposium
   van den Brand M. G. J., 2001, Electronic Notes in Theoretical Computer Science, V44, DOI 10.1016/S1571-0661(04)80917-4
   WALINSKY C., 1989, Logic Programming, P181
NR 29
TC 2
Z9 2
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2016
VL 16
BP 141
EP 162
DI 10.1017/S1471068415000071
PN 2
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DG3KX
UT WOS:000371969300001
DA 2024-07-18
ER

PT J
AU Schulz, C
   Toni, F
AF Schulz, Claudia
   Toni, Francesca
TI Justifying answer sets using argumentation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; assumption-based argumentation; stable
   extension; explanation
ID EXPLANATION
AB An answer set is a plain set of literals which has no further structure that would explain why certain literals are part of it and why others are not. We show how argumentation theory can help to explain why a literal is or is not contained in a given answer set by defining two justification methods, both of which make use of the correspondence between answer sets of a logic program and stable extensions of the assumption-based argumentation (ABA) framework constructed from the same logic program. Attack Trees justify a literal in argumentation-theoretic terms, i.e. using arguments and attacks between them, whereas ABA-Based Answer Set Justifications express the same justification structure in logic programming terms, that is using literals and their relationships. Interestingly, an ABA-Based Answer Set Justification corresponds to an admissible fragment of the answer set in question, and an Attack Tree corresponds to an admissible fragment of the stable extension corresponding to this answer set.
C1 [Schulz, Claudia; Toni, Francesca] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London
RP Schulz, C (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM claudia.schulz@imperial.ac.uk; f.toni@imperial.ac.uk
RI Toni, Francesca/JGD-7893-2023
OI Toni, Francesca/0000-0001-8194-1459; Schulz, Claudia/0000-0002-2569-7065
CR Arora T., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P101
   Baral C, 2004, BIOINFORMATICS, V20, P15, DOI 10.1093/bioinformatics/bth918
   BENCHCAPON TJM, 1991, KNOWL-BASED SYST, V4, P177, DOI 10.1016/0950-7051(91)90007-O
   Boenn G, 2011, THEOR PRACT LOG PROG, V11, P397, DOI 10.1017/S1471068410000530
   BONDARENKO A., 1997, ARTIF INTELL, V93, P1
   BRAIN M., 2008, P 3 INT WORKSH EXPL, V391, P37
   Brain M., 2005, P ASP 05, P141
   Dung PM, 2007, ARTIF INTELL, V171, P642, DOI 10.1016/j.artint.2007.05.003
   Dung PM, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P199, DOI 10.1007/978-0-387-98197-0_10
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dung PM, 2006, ARTIF INTELL, V170, P114, DOI 10.1016/j.artint.2005.07.002
   DUNG PM, 1995, J LOGIC PROGRAM, V22, P151, DOI 10.1016/0743-1066(95)94697-X
   DUNG PM, 1991, P 1 INT WORKSH LOG P, P120
   EITER T., 1997, LPNMR, P364
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Eshghi K., 1989, ICLP, P234
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   FERRAND G., 2012, COMPUT INFORM, V25, P105
   García AJ, 2004, THEOR PRACT LOG PROG, V4, P95, DOI 10.1017/S1471068403001674
   García AJ, 2013, EXPERT SYST APPL, V40, P3233, DOI 10.1016/j.eswa.2012.12.036
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   Lacave C, 2004, KNOWL ENG REV, V19, P133, DOI 10.1017/S0269888904000190
   Moulin B, 2002, ARTIF INTELL REV, V17, P169, DOI 10.1023/A:1015023512975
   NIEMELA I, 2000, P 8 INT WORKSH NONM
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Prakken H, 2010, ARGUM COMPUT, V1, P93, DOI 10.1080/19462160903564592
   Satoh K., 2010, JSAI ISAI WORKSHOPS, P153
   SCHULZ C., 2013, 11 INT S LOG FORM CO
   Son TC, 2009, LECT NOTES COMPUT SC, V5649, P99, DOI 10.1007/978-3-642-02846-5_13
   Thimm M, 2008, FRONT ARTIF INTEL AP, V172, P393
   Toni Francesca, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P164, DOI 10.1007/978-3-642-20832-4_11
NR 34
TC 34
Z9 34
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2016
VL 16
BP 59
EP 110
DI 10.1017/S1471068414000702
PN 1
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JS
UT WOS:000367693600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bogaerts, B
   Jansen, J
   Bruynooghe, M
   De Cat, B
   Vennekens, J
   Denecker, M
AF Bogaerts, Bart
   Jansen, Joachim
   Bruynooghe, Maurice
   De Cat, Broes
   Vennekens, Joost
   Denecker, Marc
TI Simulating Dynamic Systems Using Linear Time Calculus Theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Dynamic systems; progression; simulation; knowledge base system;
   inferences
ID LOGIC
AB Dynamic systems play a central role in fields such as planning, verification, and databases. Fragmented throughout these fields, we find a multitude of languages to formally specify dynamic systems and a multitude of systems to reason on such specifications. Often, such systems are bound to one specific language and one specific inference task. It is troublesome that performing several inference tasks on the same knowledge requires translations of your specification to other languages. In this paper we study whether it is possible to perform a broad set of well-studied inference tasks on one specification. More concretely, we extend IDP3 with several inferences from fields concerned with dynamic specifications.
C1 [Bogaerts, Bart; Jansen, Joachim; Bruynooghe, Maurice; De Cat, Broes; Vennekens, Joost; Denecker, Marc] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Bogaerts, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM bart.bogaerts@cs.kuleuven.be; joachim.jansen@cs.kuleuven.be;
   maurice.bruynooghe@cs.kuleuven.be; broes.decat@cs.kuleuven.be;
   joost.vennekens@cs.kuleuven.be; marc.denecker@cs.kuleuven.be
RI Vennekens, Joost/A-3571-2015; Vennekens, Joost/ABE-6600-2020;
   Bruynooghe, Maurice/A-6196-2014; Denecker, Marc/O-1056-2013
OI Vennekens, Joost/0000-0002-0791-0176; Vennekens,
   Joost/0000-0002-0791-0176; Bruynooghe, Maurice/0000-0002-6881-1462;
   Denecker, Marc/0000-0002-0422-7339; Bogaerts, Bart/0000-0003-3460-4251
CR Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   Amadini R., 2013, ARXIV13080227CSAI
   [Anonymous], 2002, LNCS
   [Anonymous], 2000, Computer-Aided Reasoning: An Approach
   [Anonymous], 2003, Principles of Constraint Programming
   [Anonymous], 1999, The Coq Proof Assistant
   Bogaerts B., 2014, PACMANID IMPLEMENTAT
   Bonner A.J., 1993, DBPL, P309
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Cat B., 2012, LIPICS, V17, P201
   Coles Amanda., 2012, AI Magazine, V33, P1
   De Cat B., 2014, CORR
   De Pooter S., 2011, CORR
   Denecker M, 2012, ASPOCP
   Denecker M., 2014, KR IN PRESS
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker M, 2008, LECT NOTES COMPUT SC, V5366, P71, DOI 10.1007/978-3-540-89982-2_12
   Fitting M, 1996, 1 ORDER LOGIC AUTOMA, V2nd, DOI DOI 10.1007/978-1-4612-2360-3
   Gebser M., 2012, Proceedings of the Thirteenth International Conference on Principles of Knowledge Representation and Reasoning (KR'12), P613
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   Ghallab M., 1998, TR98003 CVC
   Green Todd J., 2012, Datalog in Academia and Industry. Proceedings of the Second International Workshop, Datalog 2.0, P1, DOI 10.1007/978-3-642-32925-8_1
   Haufe S, 2012, ARTIF INTELL, V187, P1, DOI 10.1016/j.artint.2012.04.003
   IDP, 2013, IDP SYST
   Ierusalimschy R, 1996, SOFTWARE PRACT EXPER, V26, P635, DOI 10.1002/(SICI)1097-024X(199606)26:6<635::AID-SPE26>3.0.CO;2-P
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R. A., 2013, CORR
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   Mariën M, 2004, LECT NOTES COMPUT SC, V3229, P108, DOI 10.1007/978-3-540-30227-8_12
   Markov A. A., 1906, Izvestiya Fiziko-Matematicheskogo Obschestva Pri Kazanskom Universitete, V15, P135
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   Nemhauser G., 1988, INTEGER COMBINATORIA, DOI DOI 10.1002/9781118627372
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Riazanov A, 2002, AI COMMUN, V15, P91
   Shlyakhter I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P94, DOI 10.1109/ASE.2003.1240298
   Sutcliffe G, 2013, AI COMMUN, V26, P211, DOI 10.3233/AIC-130550
   Sutcliffe G, 2012, LECT NOTES COMPUT SC, V7180, P406, DOI 10.1007/978-3-642-28717-6_32
   Sutcliffe G, 2009, J AUTOM REASONING, V43, P337, DOI 10.1007/s10817-009-9143-8
   Thielscher M, 2011, ARTIF INTELL, V175, P120, DOI 10.1016/j.artint.2010.04.010
   van Ginkel N, 2013, PDDL2IDP PDDL PARSER
   VARDI MY, 1986, J COMPUT SYST SCI, V33, P142, DOI 10.1016/0022-0000(86)90016-4
   Weidenbach C, 2009, LECT NOTES ARTIF INT, V5663, P140, DOI 10.1007/978-3-642-02959-2_10
   Wittocx Johan., 2008, LaSh, P153
NR 44
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 477
EP 492
DI 10.1017/S1471068414000155
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Manna, M
   Ricca, F
   Terracina, G
AF Manna, Marco
   Ricca, Francesco
   Terracina, Giorgio
TI Consistent query answering via ASP from different perspectives: Theory
   and practice
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer-Set Programming; data integration; consistent query answering
ID INCONSISTENT; INTEGRATION; DATABASE; SYSTEM; SETS
AB A data integration system provides transparent access to different data sources by suitably combining their data, and providing the user with a unified view of them, called global schema. However, source data are generally not under the control of the data integration process; thus, integrated data may violate global integrity constraints even in the presence of locally consistent data sources. In this scenario, it may be anyway interesting to retrieve as much consistent information as possible. The process of answering user queries under global constraint violations is called consistent query answering (CQA). Several notions of CQA have been proposed, e.g., depending on whether integrated information is assumed to be sound, complete, exact, or a variant of them. This paper provides a contribution in this setting: it uniforms solutions coming from different perspectives under a common Answer-Set Programming (ASP)-based core, and provides query-driven optimizations designed for isolating and eliminating inefficiencies of the general approach for computing consistent answers. Moreover, the paper introduces some new theoretical results enriching existing knowledge on the decidability and complexity of the considered problems. The effectiveness of the approach is evidenced by experimental results.
C1 [Manna, Marco; Ricca, Francesco; Terracina, Giorgio] Univ Calabria, Dept Math, I-87036 Cosenza, Italy.
C3 University of Calabria
RP Manna, M (corresponding author), Univ Calabria, Dept Math, I-87036 Cosenza, Italy.
EM manna@mat.unical.it; ricca@mat.unical.it; terracina@mat.unical.it
RI , giorgio/ABG-7441-2020; Manna, Marco/G-8966-2012
OI , giorgio/0000-0002-3090-7223; Manna, Marco/0000-0003-3323-9328
FU Calabrian Region under PIA (Pacchetti Integrati di Agevolazione
   industria, artigianato e servizi) [20, 7373]
FX This work has been partially supported by the Calabrian Region under PIA
   (Pacchetti Integrati di Agevolazione industria, artigianato e servizi)
   project DLVSYSTEM approved in BURC n. 20 parte III del 15/05/2009 - DR
   n. 7373 del 06/05/2009.
CR Abiteboul Serge, 1995, FDN DATABASES LOGICA
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M, 2001, LECT NOTES COMPUT SC, V1973, P39
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Bertossi Leopoldo E., 2005, LECT NOTES COMPUTER, V3300
   Bry F., 1997, Integrity and Internal Control in Information Systems. Vol.1: Increasing the Confidence in Information Systems. IFIP TC-11 WG11.5 First Working Conference on Integrity and Internal Control in Information Systems, P113
   Cal A., 2003, International Joint Conference on Artificial Intelligence, P16
   Calì A, 2004, INFORM SYST, V29, P147, DOI 10.1016/S0306-4379(03)00050-4
   Cali A., 2003, P 22 ACM SIGACT SIGM, P260, DOI DOI 10.1145/773153.773179
   Cali A., 2005, Journal of Applied Logic, V3, P308
   Cali A., 2002, IEEE DATA ENG B, V25, P39
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Chomicki J, 2005, INFORM COMPUT, V197, P90, DOI 10.1016/j.ic.2004.04.007
   Chomicki J., 2004, PROC INT C INFORM KN, P417, DOI [10.1145/1031171.1031254, DOI 10.1145/1031171.1031254]
   Chomicki J., 2002, CSDB0204010 CORR, P1
   Chomicki J., 2004, LECT NOTES COMPUTER, V2992, P661
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1366102.1366107
   Faber W., 2010, ARTIFICIAL IN PRESS, P1
   Faber W, 2007, J COMPUT SYST SCI, V73, P584, DOI 10.1016/j.jcss.2006.10.012
   Fuxman A., 2005, SIGMOD, P155, DOI DOI 10.1145/1066157.1066176
   Fuxman A, 2007, J COMPUT SYST SCI, V73, P610, DOI 10.1016/j.jcss.2006.10.013
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Goh CH, 1999, ACM T INFORM SYST, V17, P270, DOI 10.1145/314516.314520
   Greco G., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P348
   Greco S, 2000, LECT NOTES ARTIF INT, V1955, P308, DOI 10.1007/3-540-44404-1_20
   Grieco Luca., 2005, PROC 14 ACM INT C IN, P792
   Lembo D., 2004, THESIS U ROMA LA SAP
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Levene M, 2000, IEEE T KNOWL DATA EN, V12, P281, DOI 10.1109/69.842267
   Mannis MJ., 2011, Cornea, V3rd, P1
   Minker Jack., 1982, INT C AUTOMATED DEDU, P292
   Terracina G, 2008, THEOR PRACT LOG PROG, V8, P129, DOI 10.1017/S1471068407003158
   Terracina G, 2008, LECT NOTES COMPUT SC, V5341, P119, DOI 10.1007/978-3-540-88737-9_10
   Tomasic A, 1998, IEEE T KNOWL DATA EN, V10, P808, DOI 10.1109/69.729736
NR 39
TC 15
Z9 15
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 227
EP 252
DI 10.1017/S1471068411000640
PN 2
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, NF
   Have, CT
AF Zhou, Neng-Fa
   Have, Christian Theil
TI Efficient tabling of structured data with enhanced hash-consing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID PROLOG
AB Current tabling systems suffer from an increase in space complexity, time complexity or both when dealing with sequences due to the use of data structures for tabled subgoals and answers and the need to copy terms into and from the table area. This symptom can be seen in not only B-Prolog, which uses hash tables, but also systems that use tries such as XSB and YAP. In this paper, we apply hash-consing to tabling structured data in B-Prolog. While hash-consing can reduce the space consumption when sharing is effective, it does not change the time complexity. We enhance hash-consing with two techniques, called input sharing and hash code memoization, for reducing the time complexity by avoiding computing hash codes for certain terms. The improved system is able to eliminate the extra linear factor in the old system for processing sequences, thus significantly enhancing the scalability of applications such as language parsing and bio-sequence analysis applications. We confirm this improvement with experimental results.
C1 [Zhou, Neng-Fa] CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
   [Have, Christian Theil] Roskilde Univ, Roskilde, Denmark.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY);
   Roskilde University
RP Zhou, NF (corresponding author), CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
EM zhou@sci.brooklyn.cuny.edu; cth@ruc.dk
OI Have, Christian Theil/0000-0002-8634-4781
FU NSF [1018006]; project Logic-statistic modelling and analysis of
   biological sequence data; NABIIT program under the Danish Strategic
   Research Council; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1018006] Funding Source:
   National Science Foundation
FX The PRISM system has been the motivation for this project and we thank
   Taisuke Sato and Yoshitaka Kameya for their discussion. We also thank
   the anonymous referees for their detailed comments on the presentation.
   Neng-Fa Zhou was supported in part by NSF (No. 1018006) and Christian
   Theil Have was supported by the project Logic-statistic modelling and
   analysis of biological sequence data funded by the NABIIT program under
   the Danish Strategic Research Council.
CR Appel A. W., 2003, 7403 TR PRINC U
   BOYER RS, 1972, MACHINE INTELLEGENCE, V7, P101
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Ershov A., 1959, COMMUN ACM, V1, P3
   Goto Eiichi, 1974, Technical Report
   Have Christian Theil, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P93, DOI 10.1007/978-3-642-27694-1_8
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Neumerkel U., 1989, THESIS TU VIENNA
   Nguyen P.-L., 2012, TPLP
   O'Keefe RA, 2001, THEOR PRACT LOG PROG, V1, P617, DOI 10.1017/S1471068401001065
   Raimundo J., 2011, CICLOPS
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Sato Taisuke, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P118, DOI 10.1007/978-3-540-78652-8_5
   Sato T., 2010, PRISM USERS MANUAL
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   Swift T., 2009, XSB PROGRAMMERS MANU, V1 and 2
   Swift T., 2009, XSB PROGRAMMERS MANU, V1 and 2
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Warren D. H. D., 1983, 309 SRI INT
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
NR 22
TC 10
Z9 12
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 547
EP 563
DI 10.1017/S1471068412000178
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Swift, T
   Warren, DS
AF Swift, Terrance
   Warren, David S.
TI XSB: Extending Prolog with Tabled Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; tabling; implementation; non-monotonic reasoning
ID SEMANTICS; CONCURRENT; ENGINE
AB The paradigm of Tabled Logic Programming (TLP) is now supported by a number of Prolog systems, including XSB, YAP Prolog, B-Prolog, Mercury, ALS, and Ciao. The reasons for this are partly theoretical: tabling ensures termination and optimal known complexity for queries to a large class of programs. However, the overriding reasons are practical. TLP allows sophisticated programs to be written concisely and efficiently, especially when mechanisms such as tabled negation and call and answer subsumption are supported. As a result, TLP has now been used in a variety of applications from program analysis to querying over the semantic web. This paper provides a survey of TLP and its applications as implemented in the XSB Prolog, along with discussion of how XSB supports tabling with dynamically changing code, and in a multi-threaded environment.
C1 [Swift, Terrance] Univ Nova Lisboa, CENTRIA, Fac Ciencias & Tecnol, P-2825516 Caparica, Portugal.
   [Warren, David S.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 Universidade Nova de Lisboa; State University of New York (SUNY) System;
   State University of New York (SUNY) Stony Brook
RP Swift, T (corresponding author), Univ Nova Lisboa, CENTRIA, Fac Ciencias & Tecnol, P-2825516 Caparica, Portugal.
EM tswift@cs.sunysb.edu; warren@cs.sunysb.edu
FU Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [0964196] Funding Source: National Science
   Foundation
CR Alferes JJ, 2000, P AISB 00 S AI PLANN, P1
   BARBEE C., 2002, PERFORMANCE SEMANTIC
   Bhansali S, 2005, LECT NOTES COMPUT SC, V3791, P113, DOI 10.1007/11580072_10
   BOULANGER D., 1997, INT WORKSH VER MOD C
   CALEJO M, 2004, P JELIA 2004, P714
   CAMPBELL R., 2006, P 20 LARG INST SYST, P101
   Castro J. F., 2004, LECT NOTES ARTIF INT, V3029, P838
   Castro L. F., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P11
   Castro L. F., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P332
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Chimenti D., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P76, DOI 10.1109/69.50907
   Codish M., 1998, International Journal on Software Tools for Technology Transfer, V2, P29, DOI 10.1007/s100090050016
   CODOGNET P, 1992, PROCEEDINGS OF THE 1992 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P155, DOI 10.1109/ICCL.1992.185478
   Cui BQ, 2002, ARTIF INTELL, V138, P117, DOI 10.1016/S0004-3702(02)00185-6
   Damasio C. V., 2001, Symbolic and Quantitative Approaches to Reasoning with Uncertainty. 6th European Conference, ECSQARU 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2143), P748
   Davulcu H, 2000, LECT NOTES ARTIF INT, V1861, P1094
   Dawson S, 1996, ACM SIGPLAN NOTICES, V31, P117, DOI 10.1145/249069.231399
   Demoen B, 1999, LECT NOTES COMPUT SC, V1551, P106
   Drabent W, 2007, LECT NOTES COMPUT SC, V4524, P348
   Du XQ, 2000, REAL TIM SYST SYMP P, P175
   ENGEL J., 1998, P KRDB 98 SEATTL US
   Finin T., 2004, LNCS LNAI, V3228, P238
   Freire J, 1995, LECT NOTES COMPUT SC, V982, P115, DOI 10.1007/BFb0026817
   Gartner J, 2000, LECT NOTES ARTIF INT, V1861, P1362
   Gomes AS, 2010, LECT NOTES COMPUT SC, V5937, P25, DOI 10.1007/978-3-642-11503-5_4
   GROSOF B, 2009, SILK SEMANTIC RULES
   JANSSENS G., 1998, P 1 WORKSH TABL PARS, P118
   Johnson E, 1999, LECT NOTES COMPUT SC, V1722, P284
   Kagal L., 2004, Agent Communication. International Workshop on Agent Communication, AC 2004. Revised Selected and Invited Papers (Lecture Notes in Artificial Intelligence Vol. 3396), P120
   Kalantari L, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P953
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Lamma E, 2000, MACH LEARN, V38, P63, DOI 10.1023/A:1007681906490
   LARSON R, 1995, SYNTACTICA SYMANTICA
   Lattner AD, 2005, 2005 IEEE INTELLIGENT VEHICLES SYMPOSIUM PROCEEDINGS, P466
   Lattner AD, 2005, 2005 INTERNATIONAL CONFERENCE ON INTEGRATION OF KNOWLEDGE INTENSIVE MULTI-AGENT SYSTEMS, P191
   Letia I. A., 2001, Engineering of Intelligent Systems. 14th International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems, IEA/AIE 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2070), P728
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   LOPES J., 1998, TABLING PARSING DEDU
   MARQUES R, 2007, THESIS U NOVA LISBOA
   Marques R, 2010, LECT NOTES COMPUT SC, V5937, P264, DOI 10.1007/978-3-642-11503-5_22
   Marques R, 2008, LECT NOTES COMPUT SC, V5366, P206, DOI 10.1007/978-3-540-89982-2_24
   Motik B., 2006, THESIS U KARLSRUHE T
   Müller R, 2004, DATA KNOWL ENG, V51, P223, DOI 10.1016/j.datak.2004.03.010
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   ONORI M., 2007, P ISIE 2007 IEEE INT
   OQUENDO F, 2004, WORLD SCI ENG T SYST, V3, P673
   Papaterpos CM, 2001, IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, PROCEEDINGS, P41, DOI 10.1109/ICALT.2001.943849
   Pemmasani G, 2002, LECT NOTES COMPUT SC, V2401, P100, DOI 10.1007/3-540-45619-8_8
   Pereira LM, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P363
   Pereira LM, 2009, LECT NOTES COMPUT SC, V5418, P254, DOI 10.1007/978-3-540-92995-6_18
   Pokorny L. R., 2004, Declarative Agent Languages and Technologies II. Second International Workshop, DALT 2004. Revised Selected Papers (Lecture Notes in Artificial Intelligence Vol. 3476), P148
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Ramakrishnan CR, 2007, KNOWL ENG REV, V22, P269, DOI 10.1017/S026988890700118X
   Ramakrishnan C. R., 2000, CAV 2000, P576
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Ramakrishnan R., 1992, Very Large Data Bases. VLDB '92. Proceedings of the 18th International Conference on Very Large Data Bases, P238
   ROCHA R, 2001, THESIS U PORTO PORTU
   Roychoudhury A., 1997, Proceedings of the Fifth International Conference on the Practical Application of Prolog, P255
   Rozenberg G., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P12
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Sagonas K, 2001, THEOR COMPUT SCI, V254, P465, DOI 10.1016/S0304-3975(99)00341-2
   SAGONAS K., 2001, J FUNCTIONAL LOGIC P, V2001, P1
   Saha Diptikalyan, 2005, P 7 ACM SIGPLAN INT, P117, DOI DOI 10.1145/1069774.1069785
   Santana P, 2006, LECT NOTES COMPUT SC, V4031, P81
   SARNA-STAROSTA B., 2005, THESIS SUNY STONY BR
   Shieber Stuart M., 1992, Constraint-Based Grammar Formalisms
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Swift T, 1999, ANN MATH ARTIF INTEL, V25, P201, DOI 10.1023/A:1018990308362
   Swift T., 1999, Progress in Artificial Intelligence. 9th Portuguese Conference on Artificial Intelligence, EPIA'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1695), P163
   SWIFT T, 2004, P LPNMR 2004, P275
   SWIFT T., 2004, P 18 ART INT APPL IN, P155
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   Swift T, 2009, LECT NOTES COMPUT SC, V5649, P519, DOI 10.1007/978-3-642-02846-5_46
   Swift T, 2009, LECT NOTES COMPUT SC, V5649, P514, DOI 10.1007/978-3-642-02846-5_45
   Tangmunarunkit H, 2003, LECT NOTES COMPUT SC, V2870, P706
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VERMA R., 2000, P TABL PARS DED C TA, P166
   Wan H, 2009, LECT NOTES COMPUT SC, V5649, P432, DOI 10.1007/978-3-642-02846-5_35
   WARREN D., 2002, 7 INT C INF QUAL ICI, P155
   WARREN D. S., 2003, COHERENT DESCRIPTION
   WARREN D. S., 1998, J FUNCTIONAL LOGIC P, V1998, P243
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
   Yang GZ, 2003, LECT NOTES COMPUT SC, V2888, P671
   Zhou Neng-Fa., 2003, PPDP'03: Proceedings of the 5th ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, P275
NR 86
TC 92
Z9 104
U1 0
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 157
EP 187
DI 10.1017/S1471068411000500
PN 1-2
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Areias, M
   Rocha, R
AF Areias, Miguel
   Rocha, Ricardo
TI On combining linear-based strategies for tabled evaluation of logic
   programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE linear tabling; integration; implementation
ID EXECUTION
AB Tabled evaluation is a recognized and powerful technique that overcomes some limitations of traditional Prolog systems in dealing with recursion and redundant subcomputations. We can distinguish two main categories of tabling mechanisms: suspension-based tabling and linear tabling. While suspension-based mechanisms are considered to obtain better results in general, they have more memory space requirements and are more complex and harder to implement than linear tabling mechanisms. Arguably, the SLDT and Dynamic Reordering of Alternatives (DRA) strategies are the two most successful extensions to standard linear tabled evaluation. In this work, we propose a new strategy, named dynamic reordering of solutions, and we present a framework, on top of the Yap system, that supports the combination of all these three strategies. Our implementation shares the underlying execution environment and most of the data structures used to implement tabling in Yap. We thus argue that all these common features allows us to make a first and fair comparison between these different linear tabling strategies and, therefore, better understand the advantages and weaknesses of each, when used solely or combined with the others.
C1 [Areias, Miguel] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, INESC Porto LA, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; INESC TEC; Universidade do Porto
RP Areias, M (corresponding author), Univ Porto, Fac Sci, CRACS, Rua Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM miguel-areias@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI INESC-TEC, CRACS/F-7527-2012; Areias, Miguel/F-1918-2015; Areias,
   Miguel/O-6499-2019; Rocha, Ricardo/B-2862-2012
OI Areias, Miguel/0000-0003-1589-3174; Rocha, Ricardo/0000-0003-4502-8835
CR Areias M, 2010, LECT NOTES COMPUT SC, V5937, P279, DOI 10.1007/978-3-642-11503-5_23
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   de Guzman PC, 2009, LECT NOTES COMPUT SC, V5418, P224, DOI 10.1007/978-3-540-92995-6_16
   FREIRE J., 1996, LNCS, V1140, P243
   GUO HF, 2001, LECT NOTES COMPUTER, V2237, P181
   Lloyd J. W., 2012, Foundations of Logic Programming
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   ROCHA R, 2000, P 2 C TAB PARS DED V, P77
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2000, LECT NOTES COMPUT SC, V1753, P109
NR 13
TC 3
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 681
EP 696
DI 10.1017/S147106841100024X
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cruz, F
   Rocha, R
AF Cruz, Flavio
   Rocha, Ricardo
TI Efficient instance retrieval of subgoals for subsumptive tabled
   evaluation of logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE tabled evaluation; call subsumption; implementation
ID ENGINE
AB Tabled evaluation is an implementation technique that solves some problems of traditional Prolog systems in dealing with recursion and redundant computations. Most tabling engines determine if a tabled subgoal will produce or consume answers by using variant checks. A more refined method, named call subsumption, considers that a subgoal A will consume from a subgoal B if A is subsumed by (an instance of) B, thus allowing greater answer reuse. We recently developed an extension, called Retroactive Call Subsumption, that improves upon call subsumption by supporting bidirectional sharing of answers between subsumed/subsuming subgoals. In this paper, we present both an algorithm and an extension to the table space data structures to efficiently implement instance retrieval of subgoals for subsumptive tabled evaluation of logic programs. Experiments results using the YapTab tabling system show that our implementation performs quite well on some complex benchmarks and is robust enough to handle a large number of subgoals without performance degradation.
C1 [Cruz, Flavio] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, INESC Porto LA, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; INESC TEC; Universidade do Porto
RP Cruz, F (corresponding author), Univ Porto, Fac Sci, CRACS, Rua Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM flavioc@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI INESC-TEC, CRACS/F-7527-2012; Cruz, Flávio Fontes da/ISS-5415-2023;
   Rocha, Ricardo/B-2862-2012
OI Rocha, Ricardo/0000-0003-4502-8835
CR Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Cruz F, 2010, LECT NOTES ARTIF INT, V6341, P130, DOI 10.1007/978-3-642-15675-5_13
   Johnson E, 1999, LECT NOTES COMPUT SC, V1722, P284
   JOHNSON E, 2000, P C TAB PARS DED, P155
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Rao P., 1997, LECT NOTES COMPUTER, V1265, P431
   Rao Prasad., 1996, PROC 1996 JOINT INT, P112
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   ROCHA R, 2000, P 2 C TAB PARS DED V, P77
   Yang GZ, 2000, LECT NOTES ARTIF INT, V1861, P1078
NR 10
TC 0
Z9 0
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 697
EP 712
DI 10.1017/S1471068411000251
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Christiansen, H
   Have, CT
   Lassen, OT
   Petit, M
AF Christiansen, Henning
   Have, Christian Theil
   Lassen, Ole Torp
   Petit, Matthieu
TI Inference with constrained hidden Markov models in PRISM
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE hidden Markov model with side-constraints; inference; programming in
   statistical modeling
AB A Hidden Markov Model (HMM) is a common statistical model which is widely used for analysis of biological sequence data and other sequential phenomena. In the present paper we show how HMMs can be extended with side-constraints and present constraint solving techniques for efficient inference. Defining HMMs with side-constraints in Constraint Logic Programming has advantages in terms of more compact expression and pruning opportunities during inference. We present a PRISM-based framework for extending HMMs with side-constraints and show how well-known constraints such as cardinality and all different are integrated. We experimentally validate our approach on the biologically motivated problem of global pairwise alignment.
C1 [Christiansen, Henning; Have, Christian Theil; Lassen, Ole Torp; Petit, Matthieu] Roskilde Univ, Dept Commun Business & Informat Technol, Res Grp PLIS, DK-4000 Roskilde, Denmark.
C3 Roskilde University
RP Christiansen, H (corresponding author), Roskilde Univ, Dept Commun Business & Informat Technol, Res Grp PLIS, POB 260, DK-4000 Roskilde, Denmark.
EM henning@ruc.dk; cth@ruc.dk; otl@ruc.dk; petit@ruc.dk
RI Petit, Matthieu/E-5462-2010
OI Petit, Matthieu/0000-0003-3267-9938; Have, Christian
   Theil/0000-0002-8634-4781; Christiansen, Henning/0000-0003-4731-9927
CR [Anonymous], 1998, BIOL SEQUENCE ANAL P
   Chang M.-W., 2008, Proceedings of the 23rd national conference on Artificial intelligence, P1513
   CHRISTIANSEN H, 2009, P INT WORKSH CONSTR, P19
   Christiansen H, 2009, LECT NOTES COMPUT SC, V5649, P55, DOI 10.1007/978-3-642-02846-5_10
   Costa Vitor Santos, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P156, DOI 10.1007/978-3-540-78652-8_6
   Landwehr N, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-S2-S9
   Larrosa J, 2004, ARTIF INTELL, V159, P1, DOI 10.1016/j.artint.2004.05.004
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   ROTH D, 2005, P INT C MACH LEARN, P737
   Roweis S.T., 1999, Proc. of the International Conference of Advances in Neural Information Processing System, P782
   Saraswat V., 1995, LECTURE NOTES COMPUT, V910, P293
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 2000, P WORKSH FUS DOM KNO
   SATO T, 2008, LNCS, P118
   Sato T., 1995, P INT C LOG PROGR, P715
   Sato T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P847
   VITERBI AJ, 1967, IEEE T INFORM THEORY, V13, P260, DOI 10.1109/TIT.1967.1054010
   [No title captured]
NR 18
TC 2
Z9 4
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 449
EP 464
DI 10.1017/S1471068410000219
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marek, VW
   Niemelä, I
   Truszczynski, M
AF Marek, Victor W.
   Niemela, Ilkka
   Truszczynski, Miroslaw
TI Logic programs with monotone abstract constraint atoms
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programs; stable models; constraints
ID STABLE MODEL; KNOWLEDGE REPRESENTATION; SEMANTICS
AB We introduce and study logic programs whose clauses are built out of monotone constraint atoms. We show that the operational concept of the one-step provability operator generalizes to programs with monotone constraint atoms, but the generalization involves nondeterminism. Our main results demonstrate that our formalism is a common generalization of (1) normal logic programming with its semantics of models, supported models and stable models, (2) logic programming with weight atoms (Iparse programs) with the semantics of stable models, as defined by Niemela, Simons and Soininen, and (3) of disjunctive logic programming with the possible-model semantics of Sakama and Inoue.
C1 [Marek, Victor W.; Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Niemela, Ilkka] Aalto Univ, Dept Comp Sci & Engn, FI-02015 Helsinki, Finland.
C3 University of Kentucky; Aalto University
RP Marek, VW (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM marek@cs.uky.edu; Ilkka.Niemela@tkk.fi; mirek@cs.uky.edu
RI Niemelä, Ilkka/G-2366-2013
CR [Anonymous], 1996, Principles of Knowledge Representation
   [Anonymous], S THEOR APPL SATIS F
   Apt K.R., 1990, HDB THEORETICAL COMP, VB, P493
   BABOVICH Y, 2002, CMODELS PACKAGE
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BARTH P, 1995, MPI1952003 MAX PLANK
   CALIMEW F, P 16 INT JOINT C ART, P406
   Clark K. L., 1978, Logic and data bases, P293
   DELCARMI T, 2003, P 18 INT JOINT C ART, P847
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   DENECKER M, 2001, LNCS, V2237, P212
   East D, 2006, ACM T COMPUT LOG, V7, P38, DOI 10.1145/1119439.1119441
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   FITTING MC, 2002, THEORETICAL COMPUTER, V78, P25
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   He CL, 2005, Proceedings of 2005 International Conference on Advanced Fibers and Polymer Materials (ICAFPM 2005), Vol 1 and 2, P708
   LEONE N, 2006, IN PRESS ACM T COMPU
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Liu LN, 2003, LECT NOTES COMPUT SC, V2833, P495
   Liu LN, 2005, LECT NOTES ARTIF INT, V3662, P410, DOI 10.1007/11546207_37
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P154
   MAREK VW, 2005, MATH SATISFIABILITYH
   Minker Jack., 1982, INT C AUTOMATED DEDU, P292
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   PELOV N, 2004, THESIS DEP COMPUTER
   Pelov Nikolay, 2004, P NMR 04, P327
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SON C, 2006, P 21 NAT C ART INT A, P129
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Walser J. P., 1997, P 14 NAT C ART INT, P269
NR 41
TC 18
Z9 18
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2008
VL 8
BP 167
EP 199
DI 10.1017/S147106840700302X
PN 2
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 280MF
UT WOS:000254430200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Woltran, S
AF Woltran, Stefan
TI A common view on strong, uniform, and other notions of equivalence in
   answer-set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; strong equivalence; relativized equivalence
ID LOGIC PROGRAMS
AB Logic programming under the answer-set semantics nowadays deals with numerous different notions of program equivalence. This is due to the fact that equivalence for substitution (known as strong equivalence) and ordinary equivalence are different concepts. The former holds, given programs P and Q, iff P can be faithfully replaced by Q within any context R, while the latter holds iff P and Q provide the same output, that is, they have the same answer sets. Notions in between strong and ordinary equivalence have been introduced as theoretical tools to compare incomplete programs and are defined by either restricting the syntactic structure of the considered context programs R or by bounding the set A of atoms allowed to occur in R (relativized equivalence). For the latter approach, different v yield properly different equivalence notions, in general. For the former approach, however, it turned out that any "reasonable" syntactic restriction to R coincides with either ordinary, strong, or uniform equivalence (for uniform equivalence, the context ranges over arbitrary sets of facts, rather than program rules). In this paper, we propose a parameterization for equivalence notions which takes care of both such kinds of restrictions simultaneously by bounding, on the one hand, the atoms which are allowed to occur in the rule heads of the context and, on the other hand, the atoms which are allowed to occur in the rule bodies of the context. We introduce a general semantical characterization which includes known ones as SE-models (for strong equivalence) or UE-models (for uniform equivalence) as special cases. Moreover, we provide complexity bounds for the problem in question and sketch a possible implementation method making use of dedicated systems for checking ordinary equivalence.
C1 Vienna Univ Technol, Inst Informat Syst 184 2, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Woltran, S (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 2, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM woltran@dbai.tuwien.ac.at
CR Bonatti P.A., 2001, LECT NOTES COMPUTER, V2173, P147
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Oetsch Johannes, 2007, P 22 NAT C ART INT A, P458
   Oikarinen E, 2004, LECT NOTES ARTIF INT, V2923, P180
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Pearce D, 2004, LECT NOTES ARTIF INT, V2923, P194
   PEARCE D, 2007, CEUR WORKSH P, V265, P37
   SAGIV Y, 1988, FDN DEDUCTIVE DATABA, P659
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
NR 16
TC 26
Z9 26
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2008
VL 8
BP 217
EP 234
DI 10.1017/S1471068407003250
PN 2
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 280MF
UT WOS:000254430200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gardey, G
   Roux, OH
   Roux, OF
AF Gardey, Guillaume
   Roux, Olivier H.
   Roux, Olivier F.
TI State space computation and analysis of Time Petri Nets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Time Petri Nets; timed automata; bisimulation; reachability analysis;
   zones
AB The theory of Petri Nets provides a general framework to specify the behaviors of real-time reactive systems and Time Petri Nets were introduced to take also temporal specifications into account. We present in this paper a forward zone-based algorithm to compute the state space of a bounded Time Petri Net: the method is different and more efficient than the classical State Class Graph. We prove the algorithm to be exact with respect to the reachability problem. Furthermore, we propose a translation of the computed state space into a Timed Automaton, proved to be timed bisimilar to the original Time Petri Net. As the method produce a single Timed Automaton, syntactical clocks reduction methods (DAWS and YOVINE for instance) may be applied to produce an automaton with fewer clocks. Then, our method allows to model-check T-TPN by the use of efficient Timed Automata tools.
C1 Univ Nantes, Ecole Cent Nantes, Ecole Mines Nantes, IRCCyN,CNRS,UMR 6597, F-44321 Nantes 3, France.
C3 Nantes Universite; Ecole Centrale de Nantes; Centre National de la
   Recherche Scientifique (CNRS); IMT - Institut Mines-Telecom; IMT
   Atlantique
RP Gardey, G (corresponding author), Univ Nantes, Ecole Cent Nantes, Ecole Mines Nantes, IRCCyN,CNRS,UMR 6597, 1 Rue Noe,BP 92101, F-44321 Nantes 3, France.
EM guillaume.gardey@irccyn.ec-nantes.fr;
   olivier-h.roux@irccyn.ec-nantes.fr; olivier.roux@irccyn.ec-nantes.fr
OI Roux, Olivier H./0000-0003-1665-0481
CR ABDULLA PA, 1998, THEORETICAL COMPUTER, V256, P145
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1974, MACTR120
   [Anonymous], THESIS STANFORD U
   Berthomieu B, 2003, LECT NOTES COMPUT SC, V2619, P442
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Bouyer P, 2003, LECT NOTES COMPUT SC, V2607, P620
   BOUYER P, 2002, TIMED AUTOMATA MAY C
   CASSEZ F, 2004, 4 INT WORKSH AUT VER
   Cortés LA, 2000, PROC INT SYMP SYST, P149, DOI 10.1109/ISSS.2000.874042
   DAWS C, 1996, 17 IEEE REAL TIM SYS
   DIAZ M, 1994, LECT NOTES COMPUTER, V815, P219
   Escrig DD, 2000, LECT NOTES COMPUT SC, V1825, P187
   Finkel A, 1998, LECT NOTES COMPUT SC, V1380, P102, DOI 10.1007/BFb0054314
   Gardey G, 2003, LECT NOTES COMPUT SC, V2791, P246
   Khansa W., 1996, INT WORKSH DISCR EV, V96, P94
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LILIUS J, 1999, ENTCS, V18
   Lime D, 2003, INT WORKSH PETRI NET, P124, DOI 10.1109/PNPM.2003.1231549
   MENASCHE M, 1982, THESIS U P SABATIER
   Merlin P. M., 1974, A study of the recoverability of computing systems
   Okawa Y, 1997, ELECTRON COMM JPN 3, V80, P11, DOI 10.1002/(SICI)1520-6440(199704)80:4<11::AID-ECJC2>3.0.CO;2-7
   Popova D., 1991, Elektronische Informationsverarbeitung und Kybernetik, V27, P227
   ROKICKI T, 1994, LNCS, V818, P468
   *ROM, 2003, TOOL TIM PETR NETS A
   SAVA AT, 2001, MODELISATION SYSTEME, P71
   Toussaint J, 1997, PROCEEDINGS OF THE SIXTH IEEE COMPUTER SOCIETY WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, P262, DOI 10.1109/FTDCS.1997.644736
   Yoneda T, 1998, IEICE T INF SYST, VE81D, P297
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
NR 30
TC 23
Z9 23
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2006
VL 6
BP 301
EP 320
DI 10.1017/S147106840600264X
PN 3
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 051EI
UT WOS:000238143400004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Alberti, M
   Gavanelli, M
   Lamma, E
   Mello, P
   Milano, M
AF Alberti, M
   Gavanelli, M
   Lamma, E
   Mello, P
   Milano, M
TI A CHR-based implementation of known arc-consistency
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraints; known arc-consistency; constraint handling rules
ID LOGIC
AB In classical CLP(FD) systems, domains of variables are completely known at the beginning of the constraint propagation process. However, in systems interacting with an external 14 environment, acquiring the whole domains of variables before the beginning of constraint propagation may cause waste of computation time, or even obsolescence of the acquired data at the time of use. For such cases, the Interactive Constraint Satisfaction Problem (ICSP) model has been proposed (Cucchiara et al. 1999a) as an extension of the CSP model, to make it possible to start constraint propagation even when domains are not fully known, performing acquisition of domain elements only when necessary, and without the need for restarting the propagation after every acquisition. In this paper, we show how a solver for the two sorted CLP language, defined in previous work (Gavanelli et al. 2005) to express ICSPs, has been implemented in the Constraint Handling Rules (CHR) language, a declarative language particularly suitable for high level implementation of constraint solvers.
C1 Univ Ferrara, Dipartimento Ingn, Ferrara, Italy.
   Univ Bologna, Dipartimento Elettr Informat & Sistemist, Bologna, Italy.
C3 University of Ferrara; University of Bologna
RP Univ Ferrara, Dipartimento Ingn, Ferrara, Italy.
EM malberti@ing.unife.it
RI Alberti, Marco/H-8797-2017; GAVANELLI, Marco/ISA-6918-2023
OI Alberti, Marco/0000-0003-4712-3721; GAVANELLI, Marco/0000-0001-7433-5899
CR [Anonymous], ENERGY2020
   Barruffi R, 2000, LECT NOTES ARTIF INT, V1809, P159, DOI 10.2307/40184255
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   Dechter R., 1988, P 7 NAT C ART INT AA, P37
   DENT MJ, 1994, PROC INT C TOOLS ART, P432, DOI 10.1109/TAI.1994.346460
   Dovier A, 2001, NEW GENERAT COMPUT, V19, P209, DOI 10.1007/BF03037598
   Dovier A, 1996, J LOGIC PROGRAM, V28, P1, DOI 10.1016/0743-1066(95)00147-6
   DOVIER A, 1993, MIT PS LOG, P540
   Faltings B, 2003, LECT NOTES COMPUT SC, V2833, P303
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Gavanelli M., 1999, PACLP99. Proceedings of the First International Conference on the Practical Application of Constraint Technologies and Logic Programming, P137
   GAVANELLI M, 2005, ACM T PROGRAMMING LA, V27
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   *IC PARC, 2001, ECL PS US MAN REL 5
   *ILOG, 1999, ILOG CONF US MAN
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Lamma E, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P468
   LEGEARD B, 1991, LECT NOTES COMPUT SC, V528, P431
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   Mailharro D, 1998, AI EDAM, V12, P383, DOI 10.1017/S0890060498124101
   Mello P, 2001, NEW GENERAT COMPUT, V19, P339, DOI 10.1007/BF03037573
   MITTAL S, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P25
   PUGET J, 1994, 9401 ILOG HEADQ
   Puget J.-F., 1992, Proceedings of the First Singapore International Conference on Intelligent Systems (SPICIS '92). Intelligent Systems 2000, P137
   SCHIEX T, 1993, FIFTH INTERNATIONAL CONFERENCE ON TOOLS WITH ARTIFICIAL INTELLIGENCE, TAI '93, PROCEEDINGS, P48, DOI 10.1109/TAI.1993.633935
   Schiex T, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P216
   Sergot M., 1983, Integrated Interactive Computing Systems. Proceedings of the European Conference, ECICS 82, P27
   SHAPIRO E, 1989, COMPUT SURV, V21, P412, DOI 10.1145/72551.72555
   SHAPIRO E, 1987, CONCURRENT PROLOG, V1
   *SICSTUS, 2003, SICTUS PROL US MAN R
   Smolka G, 1995, LECT NOTES COMPUT SC, V1000, P324
   Zweben M., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P875
NR 32
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 419
EP 440
DI 10.1017/S147106840500236X
PN 4-5
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Perri, S
   Scarcello, F
   Leone, N
AF Perri, S
   Scarcello, F
   Leone, N
TI Abductive logic programs with penalization: semantics, complexity and
   implementation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation; nonmonotonic reasoning; abduction; logic
   programs; computational complexity; stable models; optimization
   problems; penalization
ID STABLE MODEL
AB Abduction, first proposed in the setting of classical logics, has been studied with growing interest in the logic programming area during the last years. In this paper we study abduction with penalization in the logic programming framework. This form of abductive reasoning, which has not been previously analyzed in logic programming, turns out to represent several relevant problems, including optimization problems, very naturally. We define a formal model for abduction with penalization over logic programs, which extends the abductive framework proposed by Kakas and Mancarella. We address knowledge representation issues, encoding a number of problems in our abductive framework. In particular, we consider some relevant problems, taken from different domains, ranging from optimization theory to diagnosis and planning; their encodings turn out to be simple and elegant in our formalism. We thoroughly analyze the computational complexity of the main problems arising in the context of abduction with penalization from logic programs. Finally, we implement a system supporting the proposed abductive framework on top of the DLV engine. To this end, we design a translation from abduction problems with penalties into logic programs with weak constraints. We prove that this approach is sound and complete.
C1 Univ Calabria, Dept Math, I-87030 Commenda Di Rende, Italy.
   Univ Calabria, DEIS, I-87030 Arcavacata Di Rende, CS, Italy.
   Univ Calabria, Dept Math, I-87030 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria; University of Calabria; University of Calabria
RP Univ Calabria, Dept Math, I-87030 Commenda Di Rende, Italy.
EM perri@mat.unical.it; scarcello@deis.unical.it; leone@mat.unical.it
RI Perri, Simona/IQV-7425-2023; Leone, Nicola/B-1890-2012; Scarcello,
   Francesco/AAQ-9365-2021
OI Scarcello, Francesco/0000-0001-7765-1563; Perri,
   Simona/0000-0002-8036-5709; Leone, Nicola/0000-0002-9742-1252
CR ALFERES J, 2004, IN PRESS THEORY PRAC
   [Anonymous], 2002, The Traveling Salesman Problem and its Variations
   [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   [Anonymous], 1991, Artificial and Mathematical Theory of Computation, DOI DOI 10.1016/B978-0-12-450010-5.50026-8
   [Anonymous], P 17 INT JOINT C ART, DOI DOI 10.1007/3-540-45402-0_29
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Brena R, 1998, EXPERT SYST APPL, V14, P83, DOI 10.1016/S0957-4174(97)00066-3
   Buccafurri F, 1999, ARTIF INTELL, V112, P57, DOI 10.1016/S0004-3702(99)00039-9
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   BUCCAFURRI F, 1999, ARTIF INTELL, V112, P1
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   Charniak E., 1985, INTRO ARTIFICIAL INT
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   Denecker M, 1998, J LOGIC PROGRAM, V34, P111, DOI 10.1016/S0743-1066(97)00074-5
   Denecker M, 1995, J LOGIC COMPUT, V5, P553, DOI 10.1093/logcom/5.5.553
   DUNG PM, 1991, LOGIC PROGRAMM, P3
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   EITER T, 2003, IN PRESS ACM T COMPU
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   HOBBS JR, 1993, ARTIF INTELL, V63, P69, DOI 10.1016/0004-3702(93)90015-4
   Inoue K, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P44
   Josephson J.R., 1994, ABDUCTIVE INFERENCE
   Kakas A, 2000, J LOGIC PROGRAM, V44, P129, DOI 10.1016/S0743-1066(99)00075-8
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kakas A. C., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P385
   KAKAS AC, 1990, VERY LARGE DATA BASES, P650
   KONOLIGE K, 1992, ARTIF INTELL, V53, P255, DOI 10.1016/0004-3702(92)90073-7
   LEONE N, RR18430214 INFSYS I
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Papadimitriou C. H., 1994, Computational Complexity
   PAPADIMITRIOU CH, 1984, J COMPUT SYST SCI, V28, P244, DOI 10.1016/0022-0000(84)90068-0
   PAPADIMITRIOU CH, 1984, J ACM, V31, P392, DOI 10.1145/62.322435
   PEIRCE CS, 1955, PHILOS WRITINGS PEIR, pCH11
   POOLE D, 1989, P 11 INT JOINT C ART, P1304
   Sakama C, 2000, J LOGIC PROGRAM, V44, P75, DOI 10.1016/S0743-1066(99)00073-4
   Shanahan M, 2000, J LOGIC PROGRAM, V44, P207, DOI 10.1016/S0743-1066(99)00077-1
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   STOCKMEYER L, 1987, J SYMBOLIC LOGIC, V52, P1, DOI 10.2307/2273858
   TONI F, 2003, ABDUCTION APPL SYSTE
   Turner H, 1999, ARTIF INTELL, V113, P87, DOI 10.1016/S0004-3702(99)00058-2
   VANNUFFELEN B, 2001, LECT NOTES ARTIF INT, V2173, P393
NR 52
TC 10
Z9 10
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 123
EP 159
DI 10.1017/S1471068404002224
PN 1-2
PG 37
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sakama, C
   Inoue, K
AF Sakama, C
   Inoue, K
TI An abductive framework for computing knowledge base updates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE extended disjunctive program; extended abduction; view update; theory
   update; consistency restoration
ID LOGIC PROGRAMS; MODEL; SEMANTICS
AB This paper introduces an abductive framework for updating knowledge bases represented by extended disjunctive programs. We first provide a simple transformation from abductive programs to update programs which are logic programs specifying changes on abductive hypotheses. Then, extended abduction, which was introduced by the same authors as a generalization of traditional abduction, is computed by the answer sets of update programs. Next, different types of updates, view updates and theory updates are characterized by abductive programs and computed by update programs. The task of consistency restoration is also realized as special cases of these updates. Each update problem is comparatively assessed from the computational complexity viewpoint. The result of this paper provides a uniform framework for different types of knowledge base updates, and each update is computed using existing procedures of logic programming.
C1 Wakayama Univ, Dept Comp & Commun Sci, Wakayama 6408510, Japan.
   Kobe Univ, Dept Elect & Elect Engn, Kobe, Hyogo 6578501, Japan.
C3 Wakayama University; Kobe University
RP Wakayama Univ, Dept Comp & Commun Sci, Wakayama 6408510, Japan.
EM sakama@sys.wakayama-u.ac.jp; inoue@eedept.kobe-u.ac.jp
RI Sakama, Chiaki/HZM-3077-2023
OI Inoue, Katsumi/0000-0002-2717-9122
CR Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 2002, ARTIF INTELL, V138, P87, DOI 10.1016/S0004-3702(02)00183-2
   Alferes JJ, 1999, LOGIC PROGRAMM, P426
   [Anonymous], 1983, P 2 ACM SIGACT SIGMO
   BOUTILIER C, 1995, ARTIF INTELL, V77, P43, DOI 10.1016/0004-3702(94)00025-V
   Boutilier C, 1996, ARTIF INTELL, V83, P143, DOI 10.1016/0004-3702(94)00097-2
   Brogi A, 1995, LECT NOTES ARTIF INT, V928, P330
   BRY F, 1990, LOGIC PROGRAMM, P561
   Buccafurri F, 1999, LOGIC PROGRAMM, P79
   BUCCAFURRI F, 1997, ARTIF INTELL, V112, P57
   Console L., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P261, DOI 10.1007/BF00961655
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Damasio CV, 1995, LECT NOTES ARTIF INT, V928, P29
   DECKER H, 1990, LECT NOTES COMPUT SC, V470, P437
   DECKER H, 1998, LNCS, V1472, P249
   DECKER H, 1997, PMSFB199716 U MUNC I
   del Val Alvaro, 1994, J LOGIC COMPUT, V4, P797
   Denecker M, 1998, J LOGIC PROGRAM, V34, P111, DOI 10.1016/S0743-1066(97)00074-5
   DUNG PM, 1991, LOGIC PROGRAMM, P3
   EITER M, THEORY PRACTICE LOGI, V2, P711
   EITER M, 2000, LECT NOTES ARTIF INT, P2
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Eiter T, 1999, AI COMMUN, V12, P99
   ESHGHI K, 1989, P 6 INT C LOG PROGR, P234
   FAGIN R, 1986, ADV COMPUTING RES, V3, P1
   Fernandez JA, 1996, J AUTOM REASONING, V17, P171, DOI 10.1007/BF00244495
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   GRANT J, 1993, J AUTOM REASONING, V11, P249, DOI 10.1007/BF00881907
   Guessoum A., 1991, New Generation Computing, V10, P73, DOI 10.1007/BF03037523
   GUESSOUM A, 1990, NEW GENERAT COMPUT, V8, P71, DOI 10.1007/BF03037514
   Inoue K, 1996, J LOGIC PROGRAM, V27, P107, DOI 10.1016/0743-1066(95)00119-0
   Inoue K, 1995, INT JOINT CONF ARTIF, P204
   Inoue K, 2002, LECT NOTES COMPUT SC, V2401, P317, DOI 10.1007/3-540-45619-8_22
   Inoue K, 1999, ANN MATH ARTIF INTEL, V25, P339, DOI 10.1023/A:1018926021566
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   INOUE K, 1994, J LOGIC PROGRAM, V18, P191, DOI 10.1016/0743-1066(94)90043-4
   Inoue K, 2000, LECT NOTES ARTIF INT, V1861, P718
   KAKAS AC, 1991, LECT NOTES ARTIF INT, V515, P54
   KAKAS AC, 1990, VERY LARGE DATA BASES, P650
   Kakas AC., 1998, HDB LOGIC ARTIFICIAL, P235, DOI DOI 10.1093/OSO/9780198537922.003.0007
   KATSUNO H, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P387
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lobo J., 1996, Fundamenta Informaticae, V27, P385
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Mayol E., 1999, Advances in Conceptual Modeling. ER'99 Workshop on Evolution and Change in Data Management, Reverse Engineering in Information Systems, and the World Wide Web and Conceptual Modeling. Proceedings (Lecture Notes in Computer Science Vol.1727), P62
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NUSEIBEH B, 1999, AUSTR J INFORMATION, V7
   PEREIRA LM, 1991, P 1 INT WORKSH LOG P, P105
   POOLE D, 1988, ARTIF INTELL, V36, P27, DOI 10.1016/0004-3702(88)90077-X
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Sadri F., 1988, FDN DEDUCTIVE DATABA, P313
   Sakama C, 1999, LECT NOTES ARTIF INT, V1730, P147, DOI 10.1007/3-540-46767-X_11
   SATOH K, 1991, LOGIC PROGRAMM, P505
   Teniente E., 1995, VLDB J, V4, P193
   TONI F, 1995, P 12 INT C LOG PROGR, P367
   Winslett M., 1990, Updating Logical Databases
   Witteveen C, 1997, LECT NOTES ARTIF INT, V1265, P258
   Yuan LY, 1998, IEEE T KNOWL DATA EN, V10, P108, DOI 10.1109/69.667094
   Zhang Y, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P403
   [No title captured]
NR 63
TC 47
Z9 50
U1 2
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2003
VL 3
BP 671
EP 715
DI 10.1017/S1471068403001716
PN 6
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 754EG
UT WOS:000187289300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU D'asaro, FA
   Raggioli, L
   Malek, S
   Grazioso, M
   Rossi, S
AF D'asaro, Fabio Aurelio
   Raggioli, Luca
   Malek, Salim
   Grazioso, Marco
   Rossi, Silvia
TI An Application of a Runtime Epistemic Probabilistic Event Calculus to
   Decision-making in e-Health Systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE e-health; logic programming; answer set programming; sensor fusion;
   motor rehabilitation
ID NOISY SENSORS
AB We present and discuss a runtime architecture that integrates sensorial data and classifiers with a logic-based decision-making system in the context of an e-Health system for the rehabilitation of children with neuromotor disorders. In this application, children perform a rehabilitation task in the form of games. The main aim of the system is to derive a set of parameters the child's current level of cognitive and behavioral performance (e.g., engagement, attention, task accuracy) from the available sensors and classifiers (e.g., eye trackers, motion sensors, emotion recognition techniques) and take decisions accordingly. These decisions are typically aimed at improving the child's performance by triggering appropriate re-engagement stimuli when their attention is low, by changing the game or making it more difficult when the child is losing interest in the task as it is too easy. Alongside state-of-the-art techniques for emotion recognition and head pose estimation, we use a runtime variant of a probabilistic and epistemic logic programming dialect of the Event Calculus, known as the Epistemic Probabilistic Event Calculus. In particular, the probabilistic component of this symbolic framework allows for a natural interface with the machine learning techniques. We overview the architecture and its components, and show some of its characteristics through a discussion of a running example and experiments.
C1 [D'asaro, Fabio Aurelio] Univ Verona, Dept Human Sci, Ethos Grp, Verona, Italy.
   [Raggioli, Luca; Malek, Salim; Grazioso, Marco; Rossi, Silvia] Univ Naples Federico II, Dept Elect Engn & Informat Technol, Naples, Italy.
C3 University of Verona; University of Naples Federico II
RP D'asaro, FA (corresponding author), Univ Verona, Dept Human Sci, Ethos Grp, Verona, Italy.
EM fabioaurelio.dasaro@univr.it; luca.raggioli@manchester.ac.uk;
   smalek@fbk.eu; marco.grazioso@unina.it; silrossi@unina.it
RI MALEK, SALIM/K-8962-2012; Rossi, Silvia/C-2615-2008; Grazioso,
   Marco/JYP-9101-2024
OI Rossi, Silvia/0000-0002-3379-1756; D'Asaro, Fabio
   Aurelio/0000-0002-2958-3874; malek, salim/0000-0002-7168-8952
FU MIUR within the POR Campania FESR 2014-2020 AVATEA "Advanced Virtual
   Adaptive Technologies e-hEAlth" research project
FX The authors declare they were partially supported by MIUR within the POR
   Campania FESR 2014-2020 AVATEA "Advanced Virtual Adaptive Technologies
   e-hEAlth" research project.
CR Acciaro G D., 2021, Predicting humans: a sensor-based architecture for real time Intent Recognition using Problog, P72
   Bacchus F, 1999, ARTIF INTELL, V111, P171, DOI 10.1016/S0004-3702(99)00031-4
   Belle V, 2018, ARTIF INTELL, V262, P189, DOI 10.1016/j.artint.2018.06.003
   Belpaeme T, 2012, J HUM-ROBOT INTERACT, V1, P33, DOI 10.5898/JHRI.1.2.Belpaeme
   D'Asaro FA, 2020, ARTIF INTELL, V287, DOI 10.1016/j.artint.2020.103352
   D'Asaro FA, 2017, LECT NOTES ARTIF INT, V10377, P57, DOI 10.1007/978-3-319-61660-5_7
   DAsaro F. A., 2019, P 20 WORKSHOP FROM O
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Gebser M., 2014, Theory Pract. Log. Program.
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Huang CY, 2018, ARCH PHYS MED REHAB, V99, P512, DOI 10.1016/j.apmr.2017.07.017
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lee J, 2018, THEOR PRACT LOG PROG, V18, P607, DOI 10.1017/S1471068418000303
   Lee J, 2017, THEOR PRACT LOG PROG, V17, P942, DOI 10.1017/S1471068417000400
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   Malek S, 2021, PATTERN RECOGN LETT, V152, P406, DOI 10.1016/j.patrec.2021.11.002
   Miller R, 2002, LECT NOTES ARTIF INT, V2408, P452
   Mollahosseini A, 2019, IEEE T AFFECT COMPUT, V10, P18, DOI 10.1109/TAFFC.2017.2740923
   Mulcahey MJ, 2008, J PEDIATR ORTHOPED, V28, P330, DOI 10.1097/BPO.0b013e318168c792
   Nadkarni PM, 2011, J AM MED INFORM ASSN, V18, P544, DOI 10.1136/amiajnl-2011-000464
   Origlia A., 2017, GHITALY CHITALY
   Papandreou G, 2018, LECT NOTES COMPUT SC, V11218, P282, DOI 10.1007/978-3-030-01264-9_17
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Rescigno M, 2020, MULTIMED TOOLS APPL, V79, P35811, DOI 10.1007/s11042-020-09405-4
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F., 2018, FDN PROBABILISTIC LO
   Sato T., 1995, ICLP
   Skarlatidis A, 2015, ACM T COMPUT LOG, V16, DOI 10.1145/2699916
   Skarlatidis A, 2015, THEOR PRACT LOG PROG, V15, P213, DOI 10.1017/S1471068413000690
   Van Lambalgen M., 2008, PROPER TREATMENT EVE, V6
   Vernadakis N, 2015, COMPUT EDUC, V83, P90, DOI 10.1016/j.compedu.2015.01.001
   Wu YF, 2019, J PAC RIM PSYCHOL, V13, DOI 10.1017/prp.2019.6
NR 33
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 1070
EP 1093
AR PII S1471068422000382
DI 10.1017/S1471068422000382
EA OCT 2022
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000870522600001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Marynissen, S
   Heyninck, J
   Bogaerts, B
   Denecker, M
AF Marynissen, Simon
   Heyninck, Jesse
   Bogaerts, Bart
   Denecker, Marc
TI On Nested Justification Systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE justification; modular; knowledge representation
ID SEMANTICS; LOGIC
AB Justification theory is a general framework for the definition of semantics of rule-based languages that has a high explanatory potential. Nested justification systems, first introduced by Denecker et al., allow for the composition of justification systems. This notion of nesting thus enables the modular definition of semantics of rule-based languages, and increases the representational capacities of justification theory. As we show in this paper, the original characterization of semantics for nested justification systems leads to the loss of information relevant for explanations. In view of this problem, we provide an alternative characterization of their semantics and show that it is equivalent to the original one. Furthermore, we show how nested justification systems allow representing fixpoint definitions.
C1 [Marynissen, Simon; Denecker, Marc] Katholieke Univ Leuven, Leuven, Belgium.
   [Marynissen, Simon; Heyninck, Jesse; Bogaerts, Bart] Vrije Univ Brussel, Brussels, Belgium.
   [Heyninck, Jesse] Univ Cape Town, Cape Town, South Africa.
   [Heyninck, Jesse] CAIR, Cape Town, South Africa.
   [Heyninck, Jesse] Open Univ Heerlen, Heerlen, Netherlands.
C3 KU Leuven; Vrije Universiteit Brussel; University of Cape Town; Open
   University Netherlands
RP Marynissen, S (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.; Marynissen, S (corresponding author), Vrije Univ Brussel, Brussels, Belgium.
EM simon.marynissen@kuleuven.be; jesse.heyninck@ou.nl;
   Bart.Bogaerts@vub.be; Marc.Denecker@cs.kuleuven.be
RI ; Denecker, Marc/O-1056-2013
OI Bogaerts, Bart/0000-0003-3460-4251; Denecker, Marc/0000-0002-0422-7339;
   Heyninck, Jesse/0000-0002-3825-4052; Marynissen,
   Simon/0000-0002-2894-1377
FU Flemish Government; FWO Flanders project [G0B2221N]
FX This research was supported by the Flemish Government in the
   "Onderzoeksprogramma Artificiele Intelligentie (AI) Vlaanderen"
   programme and by the FWO Flanders project G0B2221N.
CR Alviano M., 2021, ABS210908662 CORR
   Brewka G, 2018, ARTIF INTELL, V256, P68, DOI 10.1016/j.artint.2017.11.007
   Denecker Marc, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P250, DOI 10.1007/978-3-319-23264-5_22
   Denecker M., 1993, THESIS KU LEUVEN LEV
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   Hou P, 2010, THEOR PRACT LOG PROG, V10, P581, DOI 10.1017/S1471068410000293
   Marynissen S., 2021, P IJCAI
   Marynissen S., 2018, Proceedings of 17th International Workshop on Non-Monotonic Reasoning, NMR 2018, P41
   Marynissen S., 2022, THESIS KU LEUVEN DEP
   Marynissen S., 2022, ARXIV PREPRINT ARXIV
   Marynissen S., TECHNICAL COMMUNICAT
   Marynissen S, 2020, THEOR PRACT LOG PROG, V20, P880, DOI 10.1017/S1471068420000186
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Vanbesien L., 2021, ARXIV PREPRINT ARXIV
NR 15
TC 2
Z9 2
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 641
EP 657
AR PII S1471068422000266
DI 10.1017/S1471068422000266
EA JUL 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000823122600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Forti, S
   Paganelli, F
   Brogi, A
AF Forti, Stefano
   Paganelli, Federica
   Brogi, Antonio
TI Probabilistic QoS-aware Placement of VNF Chains at the Edge
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Edge computing; IoT; VNF chain placement; NFV; SDN; probabilistic logic
   programming
ID NETWORK FUNCTION VIRTUALIZATION; FOG; CLOUD; NFV
AB Deploying Internet of Things (IoT)-enabled virtual network function (VNF) chains to Cloud-Edge infrastructures requires determining a placement for each VNF that satisfies all set deployment requirements as well as a software-defined routing of traffic flows between consecutive functions that meets all set communication requirements. In this article, we present a declarative solution, EdgeUsher, to the problem of how to best place VNF chains to Cloud-Edge infrastructures. EdgeUsher can determine all eligible placements for a set of VNF chains to a Cloud-Edge infrastructure so to satisfy all of their hardware, IoT, security, bandwidth, and latency requirements. It exploits probability distributions to model the dynamic variations in the available Cloud-Edge infrastructure and to assess output eligible placements against those variations.
C1 [Forti, Stefano; Paganelli, Federica; Brogi, Antonio] Univ Pisa, Dept Comp Sci, Pisa, Italy.
C3 University of Pisa
RP Forti, S (corresponding author), Univ Pisa, Dept Comp Sci, Pisa, Italy.
EM stefano.forti@di.unipi.it; federica.paganelli@unipi.it;
   antonio.brogi@unipi.it
RI Forti, Stefano/I-3083-2018; Paganelli, Federica/G-3394-2012
OI Forti, Stefano/0000-0002-4159-8761; Brogi, Antonio/0000-0003-2048-2468
FU project "DECLWARE: Declarative methodologies of application design and
   deployment" [PRA201866]; University of Pisa, Italy; project "GIO: a Fog
   computing testbed for research education"; Department of Computer
   Science of the University of Pisa, Italy
FX This work has been partly supported by the project "DECLWARE:
   Declarative method-ologies of application design and
   deployment"(PRA201866), funded by University of Pisa, Italy, and by the
   project "GIO: a Fog computing testbed for research & education",funded
   by the Department of Computer Science of the University of Pisa, Italy
CR Abbas N, 2018, IEEE INTERNET THINGS, V5, P450, DOI 10.1109/JIOT.2017.2750180
   Addis B, 2015, IEEE INT CONF CL NET, P171, DOI 10.1109/CloudNet.2015.7335301
   Alhussein O, 2018, IEEE GLOB COMM CONF
   Baktir AC, 2017, IEEE COMMUN SURV TUT, V19, P2359, DOI 10.1109/COMST.2017.2717482
   Bouten N, 2016, 2016 IEEE NETSOFT CONFERENCE AND WORKSHOPS (NETSOFT), P202, DOI 10.1109/NETSOFT.2016.7502414
   Brogi A, 2020, SOFTWARE PRACT EXPER, V50, P719, DOI 10.1002/spe.2766
   Cheng XL, 2018, IEEE J SEL AREA COMM, V36, P2218, DOI 10.1109/JSAC.2018.2869958
   Cziva R, 2018, IEEE INFOCOM SER, P693, DOI 10.1109/INFOCOM.2018.8486021
   de Meer H, 2017, P 10 EAI INT C PERFO, P149
   De Raedt L, 2015, MACH LEARN, V100, P5, DOI 10.1007/s10994-015-5494-z
   Dwiardhika D, 2019, SECUR COMMUN NETW, DOI 10.1155/2019/5640134
   Eramo V, 2017, IEEE ACM T NETWORK, V25, P2008, DOI 10.1109/TNET.2017.2668470
   ETSI, 2019, Multi-access Edge Computing (MEC)
   Farris I, 2019, IEEE COMMUN SURV TUT, V21, P812, DOI 10.1109/COMST.2018.2862350
   Forti S, 2020, ELECTRON P THEOR COM, P164, DOI 10.4204/EPTCS.325.22
   Forti S, 2021, FUTURE GENER COMP SY, V114, P605, DOI 10.1016/j.future.2020.08.011
   Forti S, 2020, FUTURE GENER COMP SY, V102, P775, DOI 10.1016/j.future.2019.08.020
   Forti S, 2019, SICS SOFTWARE, V34, P151, DOI 10.1007/s00450-019-00403-y
   Herrera JG, 2016, IEEE T NETW SERV MAN, V13, P518, DOI 10.1109/TNSM.2016.2598420
   Jia YZ, 2018, IEEE ACM T NETWORK, V26, P699, DOI 10.1109/TNET.2018.2800400
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Laghrissi A, 2019, IEEE COMMUN SURV TUT, V21, P1409, DOI 10.1109/COMST.2018.2884835
   Leivadeas A, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11030069
   Lopes NP, 2010, THEOR PRACT LOG PROG, V10, P691, DOI 10.1017/S1471068410000360
   Luizelli MC, 2017, COMPUT COMMUN, V102, P67, DOI 10.1016/j.comcom.2016.11.002
   Ma JF, 2013, THEOR PRACT LOG PROG, V13, P815, DOI 10.1017/S1471068413000513
   Mijumbi R, 2016, IEEE COMMUN SURV TUT, V18, P236, DOI 10.1109/COMST.2015.2477041
   Morabito R, 2017, PROCEEDINGS OF THE 2017 WORKSHOP ON HOT TOPICS IN CONTAINER NETWORKING AND NETWORKED SYSTEMS (HOTCONNET 17), P42, DOI 10.1145/3094405.3094413
   Mouradian C, 2018, 2018 IEEE INTERNATIONAL SYMPOSIUM ON LOCAL AND METROPOLITAN AREA NETWORKS (LANMAN), P25, DOI 10.1109/LANMAN.2018.8475055
   Ni JB, 2018, IEEE COMMUN SURV TUT, V20, P601, DOI 10.1109/COMST.2017.2762345
   Ning ZL, 2019, IEEE COMMUN MAG, V57, P72, DOI 10.1109/MCOM.2018.1700895
   Oechsner S, 2015, 2015 1ST IEEE CONFERENCE ON NETWORK SOFTWARIZATION (NETSOFT)
   Ojo M, 2016, IEEE GLOBE WORK
   Pham C, 2020, IEEE T SERV COMPUT, V13, P172, DOI 10.1109/TSC.2017.2671867
   Puliafito C, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3301443
   Rametta C, 2017, FUTURE INTERNET, V9, DOI 10.3390/fi9010008
   Riguzzi F., 2018, FDN PROBABILISTIC LO
   Shameli-Sendi A, 2019, IEEE T SERV COMPUT, V12, P534, DOI 10.1109/TSC.2016.2616867
   Sun QY, 2016, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2016.7841846
   Taleb T, 2017, IEEE COMMUN SURV TUT, V19, P1657, DOI 10.1109/COMST.2017.2705720
   van Lingen F, 2017, IEEE COMMUN MAG, V55, P28, DOI 10.1109/MCOM.2017.1600907
   Nguyen VG, 2017, IEEE COMMUN SURV TUT, V19, P1567, DOI 10.1109/COMST.2017.2690823
   Wang JX, 2018, IEEE INTERNET THINGS, V5, P1400, DOI 10.1109/JIOT.2018.2800003
   Yala L, 2018, IEEE GLOB COMM CONF
   Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009
   Zhu H, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3504
NR 46
TC 8
Z9 8
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 1
EP 36
DI 10.1017/S1471068421000016
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Lifschitz, V
AF Lifschitz, Vladimir
TI Here and There with Arithmetic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 37th International Conference on Logic Programming (ICLP)
CY SEP 20-27, 2021
CL ELECTR NETWORK
DE answer set programming; stable models; strong equivalence
ID ANSWER; INFERENCE; ALGORITHM
AB In the theory of answer set programming, two groups of rules are called strongly equivalent if, informally speaking, they have the same meaning in any context. The relationship between strong equivalence and the propositional logic of here-and-there allows us to establish strong equivalence by deriving rules of each group from rules of the other. In the process, rules are rewritten as propositional formulas. We extend this method of proving strong equivalence to an answer set programming language that includes operations on integers. The formula representing a rule in this language is a first-order formula that may contain comparison symbols among its predicate constants, and symbols for arithmetic operations among its function constants. The paper is under consideration for acceptance in TPLP.
C1 [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Lifschitz, V (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
OI Lifschitz, Vladimir/0000-0001-6051-7907
FU Academy of Finland [327352, 335718]; Academy of Finland (AKA) [335718,
   327352] Funding Source: Academy of Finland (AKA)
FX The second author has been partially supported by the Academy of Finland
   projects ETAIROS (327352) and AI-ROT (335718).
CR Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   [Anonymous], 2013, INT C MACH LEARN
   Bacchus F., 2020, MaxSAT Evaluation
   Beaver H., 1999, ARPAKANNUS 199
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2003, IJCAI, P867
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Chavira M, 2008, ARTIF INTELL, V172, P772, DOI 10.1016/j.artint.2007.11.002
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Gebser M., 2008, USERS GUIDE GRINGO C, P11086
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gebser M, 2009, LECT NOTES COMPUT SC, V5547, P71, DOI 10.1007/978-3-642-01929-6_7
   Geiger D., 1989, P 5 C UNCERTAINTY AR, P139
   Gonzales C, 2017, LECT NOTES ARTIF INT, V10351, P171, DOI 10.1007/978-3-319-60045-1_20
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Korte B, 2008, ALGORITHMS COMB, V21, P1
   LAWLER EL, 1972, MANAGE SCI, V18, P401, DOI 10.1287/mnsc.18.7.401
   Madsen AL, 1999, ARTIF INTELL, V113, P203, DOI 10.1016/S0004-3702(99)00062-4
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   MURTY KG, 1968, OPER RES, V16, P682, DOI 10.1287/opre.16.3.682
   Pajunen J., 2020, THESIS AALTO U
   Papadimitriou C. H., 1994, Computational Complexity
   Rossi F., 2006, HDB CONSTRAINT PROGR, V2
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 28
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 735
EP 767
DI 10.1017/S1471068421000338
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Karimi, A
   Zhang, H
   You, JH
AF Karimi, Arash
   Zhang, Heng
   You, Jia-Huai
TI Restricted Chase Termination for Existential Rules: A Hierarchical
   Approach and Experimentation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Joint Conference on Rules and Reasoning (RuleML+RR)
CY SEP 18-21, 2018
CL Univ Luxembourg, Belval Campus, Esch sur Alzette, LUXEMBOURG
SP Fonds Natl Rech Luxembourg, SnT, ILIAS, Univ Calabria, Dipartimento Matematica Informatica, Logical Contracts, Oxygen, Binarypark, Univ Luxembourg, Comp Sci Commun Res Unit, Springer
HO Univ Luxembourg, Belval Campus
DE existential rules; ontological reasoning; termination analysis;
   complexity of reasoning
ID UNDECIDABLE BOUNDEDNESS PROBLEMS; DATA EXCHANGE; QUERY; COMPLEXITY;
   SEMANTICS
AB The chase procedure for existential rules is an indispensable tool for several database applications, where its termination guarantees the decidability of these tasks. Most previous studies have focused on the skolem chase variant and its termination analysis. It is known that the restricted chase variant is a more powerful tool in termination analysis provided a database is given. But all-instance termination presents a challenge since the critical database and similar techniques do not work. In this paper, we develop a novel technique to characterize the activeness of all possible cycles of a certain length for the restricted chase, which leads to the formulation of a framework of parameterized classes of the finite restricted chase, called k-safe (Phi) rule sets. This approach applies to any class of finite skolem chase identified with a condition of acyclicity. More generally, we show that the approach can be applied to the hierarchy of bounded rule sets previously only defined for the skolem chase. Experiments on a collection of ontologies from the web show the applicability of the proposed methods on real-world ontologies.
C1 [Karimi, Arash; You, Jia-Huai] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Zhang, Heng] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
C3 University of Alberta; Tianjin University
RP Karimi, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM akarimi@ualberta.ca; h.zhang@hotmail.com; jyou@ualberta.ca
OI Karimi, Arash/0000-0001-7618-094X
CR Abiteboul S, 1995, FDN DATABASES
   Baget J.-F., 2004, P 9 INT C PRINC KNOW, P407
   Baget JF, 2015, LECT NOTES COMPUT SC, V9202, P328, DOI 10.1007/978-3-319-21542-6_21
   Baget JF, 2014, FRONT ARTIF INTEL AP, V263, P39, DOI 10.3233/978-1-61499-419-0-39
   Baget JF, 2011, ARTIF INTELL, V175, P1620, DOI 10.1016/j.artint.2011.03.002
   Baget JF, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P677
   BEERI C, 1984, J ACM, V31, P718, DOI 10.1145/1634.1636
   Beeri C., 1981, Automata, Languages and Programming. Eighth Colloquium, P73
   Benedikt M, 2017, PODS'17: PROCEEDINGS OF THE 36TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P37, DOI 10.1145/3034786.3034796
   Bourhis P, 2016, ACM T DATABASE SYST, V41, DOI 10.1145/2976736
   Calautti M, 2015, PODS'15: PROCEEDINGS OF THE 33RD ACM SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P91, DOI 10.1145/2745754.2745773
   Calì A, 2010, IEEE S LOG, P228, DOI 10.1109/LICS.2010.27
   Carral D, 2019, LECT NOTES COMPUT SC, V11779, P19, DOI 10.1007/978-3-030-30796-7_2
   Carral D, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P922
   Carral D, 2014, LECT NOTES ARTIF INT, V8562, P464, DOI 10.1007/978-3-319-08587-6_36
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Delivorias S, 2018, LECT NOTES COMPUT SC, V11092, P48, DOI 10.1007/978-3-319-99906-7_4
   Deutsch A., 2008, PODS, P149
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Fagin R, 2003, LECT NOTES COMPUT SC, V2572, P207
   Grahne G, 2018, FUND INFORM, V157, P221, DOI 10.3233/FI-2018-1627
   Grau BC, 2013, J ARTIF INTELL RES, V47, P741
   HELL P, 1992, DISCRETE MATH, V109, P117, DOI 10.1016/0012-365X(92)90282-K
   HILLEBRAND GG, 1995, J LOGIC PROGRAM, V25, P163, DOI 10.1016/0743-1066(95)00051-K
   Horridge M, 2011, SEMANT WEB, V2, P11, DOI 10.3233/SW-2011-0025
   IMMERMAN N, 1988, SIAM J COMPUT, V17, P935, DOI 10.1137/0217058
   Karimi A, 2018, LECT NOTES COMPUT SC, V11092, P98, DOI 10.1007/978-3-319-99906-7_7
   Kr?tzsch M., 2011, P 22 INT JOINT C ART, P963, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-166
   Marcinkowski J, 1999, SIAM J COMPUT, V29, P231, DOI 10.1137/S0097539797322140
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Onet, 2013, DATA EXCHANGE INTEGR, P1, DOI [DOI 10.4230/DFU.VOL5.10452.1, 10.4230/DFU.Vol5.10452, DOI 10.4230/DFU.VOL5.10452, 10.4230/DFU.Vol5.10452.1]
   Parsia B, 2014, MANCHESTER OWL CORPU
   Pieris, 2019, LIPICS, V127
   Pieris A., 2019, ARXIV PREPRINT ARXIV
   Rocher S, 2014, P 15 INT WORKSH NONM
   Rudolph S., 2019, LIPICS, V127, P1
   RUTENBURG V, 1986, LECT NOTES COMPUT SC, V233, P573, DOI 10.1007/BFb0016284
   Savitch W. J., 1970, Journal of computer and system sciences, V4, P177, DOI [DOI 10.1016/S0022-0000(70)80006-X, 10. 1016/S0022-0000(70)80006-X]
   Sipieter C, 2015, P RULEML 2015 CHALL, V1417
   Ulliana F., 2019, LIPICS, V127, P1
   Zhang H, 2015, AAAI CONF ARTIF INTE, P1678
NR 41
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2021
VL 21
IS 1
SI SI
BP 4
EP 50
DI 10.1017/S1471068420000101
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA TG2JW
UT WOS:000671236400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Charalambidis, A
   Nomikos, C
   Rondogiannis, P
AF Charalambidis, Angelos
   Nomikos, Christos
   Rondogiannis, Panos
TI The Expressive Power of Higher-Order Datalog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Datalog; Higher-Order Logic Programming; Descriptive Complexity Theory
ID LOGIC; COMPLEXITY
AB A classical result in descriptive complexity theory states that Datalog expresses exactly the class of polynomially computable queries on ordered databases (Papadimitriou 1985; Gradel 1992; Vardi 1982; Immerman 1986; Leivant 1989). In this paper we extend this result to the case of higher-order Datalog. In particular, we demonstrate that on ordered databases, for all k >= 2, k-order Datalog captures (k - 1)-EXPTIME. This result suggests that higher-order extensions of Datalog possess superior expressive power and they are worthwhile of further investigation both in theory and in practice.
C1 [Charalambidis, Angelos] NCSR Demokritos, Inst Informat & Telecommun, Aghia Paraskevi, Greece.
   [Nomikos, Christos] Univ Ioannina, Dept Comp Sci & Engn, Ioannina, Greece.
   [Rondogiannis, Panos] Univ Athens, Dept Informat & Telecommun, Athens, Greece.
C3 National Centre of Scientific Research "Demokritos"; University of
   Ioannina; National & Kapodistrian University of Athens
RP Charalambidis, A (corresponding author), NCSR Demokritos, Inst Informat & Telecommun, Aghia Paraskevi, Greece.
EM acharal@iit.demokritos.gr; cnomikos@cs.uoi.gr; prondo@di.uoa.gr
OI Charalambidis, Angelos/0000-0001-7437-410X
FU Software and Knowledge Engineering Laboratory (SKEL) of the Institute of
   Informatics and Telecommunications of NCSR "Demokritos"
FX The research of the first author was supported by the Software and
   Knowledge Engineering Laboratory (SKEL) of the Institute of Informatics
   and Telecommunications of NCSR "Demokritos".
CR Bezem M, 1999, LOGIC PROGRAMM, P395
   Charalambidis A, 2018, THEOR PRACT LOG PROG, V18, P421, DOI 10.1017/S1471068418000108
   Charalambidis A, 2018, SCI COMPUT PROGRAM, V155, P173, DOI 10.1016/j.scico.2017.09.002
   Charalambidis A, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499942
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   GRADEL E, 1992, THEOR COMPUT SCI, V101, P35, DOI 10.1016/0304-3975(92)90149-A
   IMMERMAN N, 1986, INFORM CONTROL, V68, P86, DOI 10.1016/S0019-9958(86)80029-8
   Jones ND, 2001, J FUNCT PROGRAM, V11, P55, DOI 10.1017/S0956796800003889
   Kountouriotis V, 2005, P 12 INT C LOG PROGR, P1
   LEIVANT D, 1989, J COMPUT SYST SCI, V39, P51, DOI 10.1016/0022-0000(89)90019-6
   Lloyd J. W., 2012, Foundations of Logic Programming
   LOVRENCIC A, 1999, 3 INT IEEE C INT ENG
   MILLER DA, 1986, LECT NOTES COMPUT SC, V225, P448
   Papadimitriou C. H., 1985, Bulletin of the European Association for Theoretical Computer Science, P21
   Vardi M.Y., 1982, P 14 ANN ACM S THEOR, P137, DOI DOI 10.1145/800070.802186
   WADGE WW, 1991, LOGIC PROGRAMM, P289
   Yang GZ, 2003, LECT NOTES COMPUT SC, V2888, P671
NR 18
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 925
EP 940
DI 10.1017/S1471068419000279
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Gasteiger, P
   Reale, K
   Ricca, F
   Schekotihin, K
AF Dodaro, Carmine
   Gasteiger, Philip
   Reale, Kristian
   Ricca, Francesco
   Schekotihin, Konstantin
TI Debugging Non-ground ASP Programs: Technique and Graphical Tools
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; debugging; graphical user interface
AB Answer set programming (ASP) is one of the major declarative programming paradigms in the area of logic programming and non-monotonic reasoning. Despite that ASP features a simple syntax and an intuitive semantics, errors are common during the development of ASP programs. In this paper we propose a novel debugging approach allowing for interactive localization of bugs in non-ground programs. The new approach points the user directly to a set of non-ground rules involved in the bug, which might be refined (up to the point in which the bug is easily identified) by asking the programmer a sequence of questions on an expected answer set. The approach has been implemented on top of the ASP solver WASP. The resulting debugger has been complemented by a user-friendly graphical interface, and integrated in ASPI DE, a rich integrated development environment (IDE) for answer set programs. In addition, an empirical analysis shows that the new debugger is not affected by the grounding blowup limiting the application of previous approaches based on meta-programming.
C1 [Dodaro, Carmine] Univ Genoa, DIBRIS, Genoa, Italy.
   [Gasteiger, Philip; Schekotihin, Konstantin] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
   [Reale, Kristian; Ricca, Francesco] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Genoa; University of Klagenfurt; University of Calabria
RP Dodaro, C (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM dodaro@dibris.unige.it; philip.gasteiger@gmail.com; reale@mat.unical.it;
   ricca@mat.unical.it; konstantin.schekotihin@aau.at
RI Dodaro, Carmine/AAE-5732-2020; Schekotihin, Konstantin/IZN-7815-2023
OI Dodaro, Carmine/0000-0002-5617-5286; Schekotihin,
   Konstantin/0000-0002-0286-0958
CR Abseher M, 2016, FUND INFORM, V147, P1, DOI 10.3233/FI-2016-1396
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   Alviano M, 2017, LECT NOTES ARTIF INT, V10640, P468, DOI 10.1007/978-3-319-70169-1_35
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini Marcello., 2001, LPNMR, P439
   Baral Chitta, 2010, Knowledge Representation, Reasoning and Declarative Problem Solving
   BRAIN M, 2005, CEUR WORKSHOP P, V142
   Brain Martin, 2007, P WORKSH SOFTW ENG A, P71
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Busoniu PA, 2013, THEOR PRACT LOG PROG, V13, P657, DOI 10.1017/S1471068413000410
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Dasseville I., 2015, ABS151100920 CORR
   Derler Y, 2016, AI MAG, V37, P45
   Dodaro Carmine, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P279, DOI 10.1007/978-3-319-23264-5_24
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Dodaro C, 2015, LECT NOTES COMPUT SC, V9209, P77, DOI 10.1007/978-3-319-22002-4_7
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Febbraro Onofrio, 2011, INAPWLP, P345, DOI [10.1007/978-3-642-41524-1_21, DOI 10.1007/978-3-642-41524-1_21]
   Fraser S., 2003, Proceedings of the 4th International Conference on Extreme Programming and Agile Processes in Software Engineering, XP'03, P459
   Gavanelli M, 2015, J LOGIC COMPUT, V25, P1351, DOI 10.1093/logcom/ext065
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P531, DOI 10.1007/978-3-319-23264-5_44
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Grasso Giovanni, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P432, DOI 10.1007/978-3-642-20832-4_27
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Li T., 2015, CEUR WORKSHOP P, V1433
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Mikitiuk Artur, 2007, 2007 International Conference on Artificial Intelligence (ICAI'07), P635
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P134
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Polleres A, 2013, LECT NOTES COMPUT SC, V8148, P452, DOI 10.1007/978-3-642-40564-8_45
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Schulz Claudia, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P467, DOI 10.1007/978-3-319-23264-5_39
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Shchekotykhin K, 2015, AAAI CONF ARTIF INTE, P1597
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
NR 50
TC 9
Z9 10
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 290
EP 316
DI 10.1017/S1471068418000492
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bonifati, A
   Dumbrava, S
   Arias, EJG
AF Bonifati, Angela
   Dumbrava, Stefania
   Arias, Emilio Jesus Gallego
TI Certified Graph View Maintenance with Regular Datalog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Regular Datalog; Graph Queries; Graph Views; Incremental Maintenance;
   Finite Semantics; Theorem Proving
AB We employ the Coq proof assistant to develop a mechanically-certified framework for evaluating graph queries and incrementally maintaining materialized graph instances, also called views. The language we use for defining queries and views is Regular Datalog (RD) a notable fragment of non-recursive Datalog that can express complex navigational queries, with transitive closure as native operator. We first design and encode the theory of RD and then mechanize a RD-specific evaluation algorithm capable of fine-grained, incremental graph view computation, which we prove sound with respect to the declarative RD semantics. By using the Coq extraction mechanism, we test an OCaml version of the verified engine on a set of preliminary benchmarks. Our development is particularly focused on leveraging existing verification and notational techniques to: a) define mechanized properties that can be easily understood by logicians and database researchers and b) attain formal verification with limited effort. Our work is the first step towards a unified, machine-verified, formal framework for dynamic graph query languages and their evaluation engines.
C1 [Bonifati, Angela; Dumbrava, Stefania] Univ Lyon 1, LIRIS, Villeurbanne, France.
   [Arias, Emilio Jesus Gallego] PSL Res Univ, MINES Paris Tech, Paris, France.
C3 Institut National des Sciences Appliquees de Lyon - INSA Lyon;
   Universite Claude Bernard Lyon 1; Universite PSL; MINES ParisTech
RP Bonifati, A (corresponding author), Univ Lyon 1, LIRIS, Villeurbanne, France.
OI Bonifati, Angela/0000-0002-9582-869X; Dumbrava,
   Stefania/0000-0002-6664-0620
FU Datacert project [ANR-15-CE39-0009];  [ANR-11-IDEX-0007]
FX We would like to thank the anonymous referees and Pierre Jouvelot for
   their very useful comments and feedback. S. Dumbrava was funded by the
   Datacert project, ANR-15-CE39-0009, and by ANR-11-IDEX-0007.
CR Abiteboul Serge, 1995, FDN DATABASES LOGICA
   Aluç G, 2014, LECT NOTES COMPUT SC, V8796, P197, DOI 10.1007/978-3-319-11964-9_13
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Anand A., 2017, COQPL 2017
   Angles R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3104031
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Auerbach JS, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1555, DOI 10.1145/3035918.3035961
   Bagan G, 2017, IEEE T KNOWL DATA EN, V29, P856, DOI 10.1109/TKDE.2016.2633993
   Benzaken V, 2017, LECT NOTES COMPUT SC, V10499, P171, DOI 10.1007/978-3-319-66107-0_12
   Benzaken V, 2014, LECT NOTES COMPUT SC, V8410, P189
   Beyhl T, 2016, ELECTRON P THEOR COM, P57, DOI 10.4204/EPTCS.231.5
   Cai Y., 2014, P 35 ACM SIGPLAN C P, P145
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Chu S, 2017, ACM SIGPLAN NOTICES, V52, P510, DOI [10.1145/3062341.3062348, 10.1145/3140587.3062348]
   Clark K. L., 1977, LOGIC DATA BASES, P293
   Cohen C., 2017, TECH REP
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   Fan WF, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P155, DOI 10.1145/3035918.3035944
   Gonthier G, 2013, LECT NOTES COMPUT SC, V7998, P163, DOI 10.1007/978-3-642-39634-2_14
   Greenlaw Raymond., 1995, Limits to Parallel Computation: P-Completeness Theory, DOI DOI 10.1093/OSO/9780195085914.001.0001
   Gupta A., 1993, SIGMOD Record, V22, P157, DOI 10.1145/170036.170066
   Jagadish H. V., 1987, SIGMOD Record, V16, P331, DOI 10.1145/38714.38750
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Letouzey P, 2008, LECT NOTES COMPUT SC, V5028, P359, DOI 10.1007/978-3-540-69407-6_39
   Mullen Eric., 2018, P 7 ACM SIGPLAN INT, P172, DOI 10.1145/3167089
   Ramalingam G, 1996, THEOR COMPUT SCI, V158, P233, DOI 10.1016/0304-3975(95)00079-8
   Reutter JL, 2017, THEOR COMPUT SYST, V61, P31, DOI 10.1007/s00224-016-9676-2
   The Coq Development Team, 2018, COQ PROOF ASS VERS 8
NR 28
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 372
EP 389
DI 10.1017/S1471068418000224
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400006
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Lee, J
   Wang, Y
AF Lee, Joohyung
   Wang, Yi
TI <i>A Probabilistic Extension of Action Language BC</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
AB We present a probabilistic extension of action language BC+. Just like BC+ is defined as a high-level notation of answer set programs for describing transition systems, the proposed language, which we call pBC+, is defined as a high-level notation of LPMLN programs-a probabilistic extension of answer set programs. We show how probabilistic reasoning about transition systems, such as prediction, postdiction, and planning problems, as well as probabilistic diagnosis for dynamic domains, can be modeled in pBC+ and computed using an implementation of LPMLN.
C1 [Lee, Joohyung; Wang, Yi] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Lee, J (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
EM joolee@asu.edu; ywang485@asu.edu
FU National Science Foundation [IIS-1526301]
FX We are grateful to Zhun Yang and the anonymous referees for their useful
   comments. This work was partially supported by the National Science
   Foundation under Grant IIS-1526301.
CR Babb J, 2020, J LOGIC COMPUT, V30, P899, DOI 10.1093/logcom/exv062
   Babb J, 2013, LECT NOTES COMPUT SC, V8148, P122, DOI 10.1007/978-3-642-40564-8_13
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Baral C, 2004, LECT NOTES ARTIF INT, V2923, P21
   Baral C, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P507
   Baral C., 2000, Formulating diagnostic problem solving using an action language with narratives and sensing
   DASARO F. A., 2017, ABS170306815 CORR
   Eiter Thomas., 2003, P 19 C UNCERTAINTY A, P192
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, ELECT T ARTIF INTEL, V3, P195
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Giunchiglia E, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P623
   Iwan G, 2002, AI COMMUN, V15, P31
   LEE J., 2018, ONLINE APPENDIX PAPE
   LEE J., 2013, P INT JOINT C ART IN
   LEE J, 2017, THEORY PRACTICE LOGI
   Lee JC, 2016, PROCEEDINGS OF KNOWLEDGE MANAGEMENT INTERNATIONAL CONFERENCE (KMICE) 2016, P145
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Skarlatidis Anastasios, 2011, Rule-Based Modeling and Computing on the Semantic Web. Proceedings 5th International Symposium, RuleML 2011 - America, P155, DOI 10.1007/978-3-642-24908-2_19
   Wang J, 2015, INT CONF WIRE COMMUN
   Younes HakanLS., 2004, PPDDL1 0 EXTENSION P
   Zhu W., 2012, THESIS
NR 22
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 607
EP 622
DI 10.1017/S1471068418000303
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400020
OA Bronze
DA 2024-07-18
ER

PT J
AU García-Contreras, I
   Morales, JF
   Hermenegildo, MV
AF Garcia-Contreras, Isabel
   Morales, Jose F.
   Hermenegildo, Manuel V.
TI Semantic code browsing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Semantic Code Search; Abstract Interpretation; Assertions
ID CONSTRAINT LOGIC PROGRAMS; ABSTRACT INTERPRETATION; SYSTEM; CIAO
AB Programmers currently enjoy access to a very high number of code repositories and libraries of ever increasing size. The ensuing potential for reuse is however hampered by the fact that searching within all this code becomes an increasingly difficult task. Most code search engines are based on syntactic techniques such as signature matching or keyword extraction. However, these techniques are inaccurate (because they basically rely on documentation) and at the same time do not offer very expressive code query languages. We propose a novel approach that focuses on querying for semantic characteristics of code obtained automatically from the code itself. Program units are pre-processed using static analysis techniques, based on abstract interpretation, obtaining safe semantic approximations. A novel, assertion-based code query language is used to express desired semantic characteristics of the code as partial specifications. Relevant code is found by comparing such partial specifications with the inferred semantics for program elements. Our approach is fully automatic and does not rely on user annotations or documentation. It is more powerful and flexible than signature matching because it is parametric on the abstract domain and properties, and does not require type definitions. Also, it reasons with relations between properties, such as implication and abstraction, rather than just equality. It is also more resilient to syntactic code differences. We describe the approach and report on a prototype implementation within the Ciao system.
C1 [Garcia-Contreras, Isabel; Morales, Jose F.; Hermenegildo, Manuel V.] IMDEA Software Inst, Madrid, Spain.
   [Hermenegildo, Manuel V.] Tech Univ Madrid UPM, Sch Comp Sci, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP García-Contreras, I (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM isabel.garcia@imdea.org; josef.morales@imdea.org;
   manuel.hermenegildo@imdea.org
RI Morales Caballero, Jose Francisco/JXY-5044-2024
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Garcia-Contreras,
   Isabel/0000-0001-6098-3895
CR BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Cabeza D, 2000, LECT NOTES ARTIF INT, V1861, P131
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   GALLAGHER JP, 1994, MIT PS LOG, P599
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mitchell N., 2008, MONAD READER, V12, P27
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Puebla G, 1999, J LOGIC PROGRAM, V41, P279, DOI 10.1016/S0743-1066(99)00031-X
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Puebla G., 2004, LNCS, V3049, P234
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   ROLLINS EJ, 1991, LOGIC PROGRAMM, P173
   Stulova N., 2014, 16 INT ACM SIGPLAN S
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
NR 19
TC 4
Z9 5
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 721
EP 737
DI 10.1017/S1471068416000417
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schwind, N
   Inoue, K
AF Schwind, Nicolas
   Inoue, Katsumi
TI Characterization of logic program revision as an extension of
   propositional revision
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE belief revision; logic programming; characterization theorems
ID FRAMEWORK; UPDATE
AB We address the problem of belief revision of logic programs (LPs), i.e., how to incorporate to a LP P a new LP Q. Based on the structure of SE interpretations, Delgrande et al. (2008. Proc. of the 11th International Conference on Principles of Knowledge Representation and Reasoning (KR'08), 411-421; 2013b. Proc. of the 12th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR'13), 264-276) adapted the well-known AGM framework (Alchourron et al. 1985. Journal of Symbolic Logic 50, 2, 510-530) to LP revision. They identified the rational behavior of LP revision and introduced some specific operators. In this paper, a constructive characterization of all rational LP revision operators is given in terms of orderings over propositional interpretations with some further conditions specific to SE interpretations. It provides an intuitive, complete procedure for the construction of all rational LP revision operators and makes easier the comprehension of their semantic and computational properties. We give a particular consideration to LPs of very general form, i.e., the generalized logic programs (GLPs). We show that every rational GLP revision operator is derived from a propositional revision operator satisfying the original AGM postulates. Interestingly, the further conditions specific to GLP revision are independent from the propositional revision operator on which a GLP revision operator is based. Taking advantage of our characterization result, we embed the GLP revision operators into structures of Boolean lattices, that allow us to bring to light some potential weaknesses in the adapted AGM postulates. To illustrate our claim, we introduce and characterize axiomatically two specific classes of (rational) GLP revision operators which arguably have a drastic behavior. We additionally consider two more restricted forms of LPs, i.e., the disjunctive logic programs (DLPs) and the normal logic programs (NLPs) and adapt our characterization result to disjunctive logic program and normal logic program revision operators.
C1 [Schwind, Nicolas] Transdisciplinary Res Integrat Ctr, Chiyoda Ku, Tokyo 1018430, Japan.
   [Inoue, Katsumi] Natl Inst Informat, Chiyoda Ku, Tokyo 1018430, Japan.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan
RP Schwind, N (corresponding author), Transdisciplinary Res Integrat Ctr, Chiyoda Ku, 2-1-2 Hitotsubashi, Tokyo 1018430, Japan.
EM schwind@nii.ac.jp; inoue@nii.ac.jp
RI Schwind, Nicolas/Q-3244-2016
OI Schwind, Nicolas/0000-0001-7972-5984; Inoue, Katsumi/0000-0002-2717-9122
FU Grants-in-Aid for Scientific Research [26280092] Funding Source: KAKEN
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   [Anonymous], P 2 INT C PRINC KNOW
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Dalal M., 1988, AAAI 88. Seventh National Conference on Artificial Intelligence, P475
   Delgrande J, 2013, LECT NOTES COMPUT SC, V8148, P264, DOI 10.1007/978-3-642-40564-8_27
   Delgrande J, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480766
   Delgrande J, 2009, LECT NOTES COMPUT SC, V5649, P160, DOI 10.1007/978-3-642-02846-5_17
   Delgrande JP, 2007, LECT NOTES COMPUT SC, V4483, P71, DOI 10.1007/978-3-540-72200-7_8
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Katsuno H., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1413
   KATSUNO H, 1991, ARTIF INTELL, V52, P263, DOI 10.1016/0004-3702(91)90069-V
   Konieczny S, 2002, J LOGIC COMPUT, V12, P773, DOI 10.1093/logcom/12.5.773
   Liberatore P, 2001, J COMPUT SYST SCI, V62, P43, DOI 10.1006/jcss.2000.1698
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Papadimitriou C. H., 1994, Computational Complexity
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Satoh K., 1988, P INT C 5 GENERATION, P455
   Schwind N, 2013, LECT NOTES COMPUT SC, V8148, P485, DOI 10.1007/978-3-642-40564-8_48
   Slota M., 2012, P 13 INT C PRINC KNO, P156
   Slota M, 2014, THEOR PRACT LOG PROG, V14, P869, DOI 10.1017/S1471068413000100
   Slota M, 2010, FRONT ARTIF INTEL AP, V215, P956, DOI 10.3233/978-1-60750-606-5-957
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   Zhang Y, 1997, INT JOINT CONF ARTIF, P82
   Zhang Y, 2006, ACM T COMPUT LOG, V7, P421, DOI 10.1145/1149114.1149115
NR 28
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2016
VL 16
BP 111
EP 138
DI 10.1017/S1471068415000101
PN 1
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JS
UT WOS:000367693600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koponen, L
   Oikarinen, E
   Janhunen, T
   Säilä, L
AF Koponen, Laura
   Oikarinen, Emilia
   Janhunen, Tomi
   Saila, Laura
TI Optimizing phylogenetic supertrees using answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE answer set programming; phylogenetic supertree; quartets; projections;
   Felidae
ID MOLECULAR PHYLOGENY; TREE; OPTIMIZATION; CARNIVORA; MAXCUT
AB The supertree construction problem is about combining several phylogenetic trees with possibly conflicting information into a single tree that has all the leaves of the source trees as its leaves and the relationships between the leaves are as consistent with the source trees as possible. This leads to an optimization problem that is computationally challenging and typically heuristic methods, such as matrix representation with parsimony (MRP), are used. In this paper we consider the use of answer set programming to solve the supertree construction problem in terms of two alternative encodings. The first is based on an existing encoding of trees using substructures known as quartets, while the other novel encoding captures the relationships present in trees through direct projections. We use these encodings to compute a genus-level supertree for the family of cats (Felidae). Furthermore, we compare our results to recent supertrees obtained by the MRP method.
C1 [Koponen, Laura; Oikarinen, Emilia; Janhunen, Tomi] Aalto Univ, HIIT, FI-00076 Aalto, Finland.
   [Koponen, Laura; Oikarinen, Emilia; Janhunen, Tomi] Aalto Univ, Dept Comp Sci, FI-00076 Aalto, Finland.
   [Saila, Laura] Univ Helsinki, Dept Geosci & Geog, FIN-00014 Helsinki, Finland.
C3 Aalto University; Aalto University; University of Helsinki
RP Koponen, L (corresponding author), Aalto Univ, HIIT, POB 15400, FI-00076 Aalto, Finland.
EM Laura.J.Koponen@aalto.fi; Emilia.Oikarinen@aalto.fi;
   Tomi.Janhunen@aalto.fi; Laura.Saila@helsinki.fi
RI Janhunen, Tomi/E-8362-2012
OI Oikarinen, Emilia/0000-0002-9623-6282
FU Academy of Finland [251170, 132995, 275551, 250518]; Academy of Finland
   (AKA) [275551, 132995, 250518] Funding Source: Academy of Finland (AKA)
FX This work has been funded by the Academy of Finland, grants 251170
   (Finnish Centre of Excellence in Computational Inference Research COIN),
   132995 (LS), 275551 (LS), and 250518 (EO). We thank Martin Gebser, Ian
   Corfe, and anonymous reviewers for discussion and comments that helped
   to improve the paper.
CR AHO AV, 1981, SIAM J COMPUT, V10, P405, DOI 10.1137/0210030
   Alviano M., 2015, LECT NOTES COMPUTER, V9345
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2004, Phylogenetic Supertrees: Combining Information to Reveal the Tree of Life
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BAUM BR, 1992, TAXON, V41, P3, DOI 10.2307/1222480
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Bryant David, 1997, PhD Thesis,
   Byrka J, 2010, DISCRETE APPL MATH, V158, P1136, DOI 10.1016/j.dam.2010.03.004
   Cavalcanti MJ, 2007, ZOOL STUD, V46, P6
   Chen D., 2003, Bioconsensus. DIMACS Working Group Meetings on Bioconsensus, P135
   Chimani M., 2010, P 1 ACM INT C BIOINF, P147, DOI [10.1145/1854776.1854800, DOI 10.1145/1854776.1854800]
   DAY WHE, 1986, MATH BIOSCI, V81, P33, DOI 10.1016/0025-5564(86)90161-6
   Erdos PL, 1999, RANDOM STRUCT ALGOR, V14, P153, DOI 10.1002/(SICI)1098-2418(199903)14:2<153::AID-RSA3>3.0.CO;2-R
   Flynn JJ, 2005, SYST BIOL, V54, P317, DOI 10.1080/10635150590923326
   Foulds L.R., 1982, Advances in Applied Mathematics, V3, P43, DOI [10.1016/S0196-8858(82)80004-3, DOI 10.1016/S0196-8858(82)80004-3]
   Fulton TL, 2006, MOL PHYLOGENET EVOL, V41, P165, DOI 10.1016/j.ympev.2006.05.025
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2014, FRONT ARTIF INTEL AP, V263, P351, DOI 10.3233/978-1-61499-419-0-351
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gent IP, 2003, LECT NOTES COMPUT SC, V2833, P837
   Goloboff PA, 2002, CLADISTICS, V18, P514, DOI 10.1111/j.1096-0031.2002.tb00289.x
   Kavanagh J, 2006, LECT NOTES ARTIF INT, V4246, P452, DOI 10.1007/11916277_31
   Le T., 2012, LIPICS, P359
   Martins R, 2014, LECT NOTES COMPUT SC, V8561, P438, DOI 10.1007/978-3-319-09284-3_33
   Morgado A, 2010, FUND INFORM, V102, P363, DOI 10.3233/FI-2010-311
   Nixon KC, 1999, CLADISTICS, V15, P407, DOI 10.1111/j.1096-0031.1999.tb00277.x
   Piaggio-Talice R., 2004, COMPU BIOL, P173
   PURVIS A, 1995, SYST BIOL, V44, P251, DOI 10.2307/2413710
   Ragan MA, 1992, MOL PHYLOGENET EVOL, V1, P53, DOI 10.1016/1055-7903(92)90035-F
   Saila L. K., 2012, P 60 ANN S VERT PAL
   Säilä L, 2011, J VERTEBR PALEONTOL, V31, P184
   Semple C, 2000, DISCRETE APPL MATH, V105, P147, DOI 10.1016/S0166-218X(00)00202-X
   Snir S, 2012, MOL PHYLOGENET EVOL, V62, P1, DOI 10.1016/j.ympev.2011.06.021
   Sridhar S, 2008, IEEE ACM T COMPUT BI, V5, P323, DOI 10.1109/TCBB.2008.26
   Steel M, 2000, SYST BIOL, V49, P363, DOI 10.1093/sysbio/49.2.363
   Swenson MS, 2011, ALGORITHM MOL BIOL, V6, DOI 10.1186/1748-7188-6-7
   Wilkinson M, 2005, SYST BIOL, V54, P823, DOI 10.1080/10635150590950362
   Wilkinson M, 2005, SYST BIOL, V54, P419, DOI 10.1080/10635150590949832
   Wu G, 2007, IEEE ACM T COMPUT BI, V4, P139, DOI 10.1109/TCBB.2007.1008
NR 42
TC 19
Z9 19
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 604
EP 619
DI 10.1017/S1471068415000265
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Law, M
   Russo, A
   Broda, K
AF Law, Mark
   Russo, Alessandra
   Broda, Krysia
TI Learning weak constraints in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Non-monotonic Inductive Logic Programming; Preference Learning; Answer
   Set Programming
ID INDUCTION
AB This paper contributes to the area of inductive logic programming by presenting a new learning framework that allows the learning of weak constraints in Answer Set Programming (ASP). The framework, called Learning from Ordered Answer Sets, generalises our previous work on learning ASP programs without weak constraints, by considering a new notion of examples as ordered pairs of partial answer sets that exemplify which answer sets of a learned hypothesis (together with a given background knowledge) are preferred to others. In this new learning task inductive solutions are searched within a hypothesis space of normal rules, choice rules, and hard and weak constraints. We propose a new algorithm, ILASP2, which is sound and complete with respect to our new learning framework. We investigate its applicability to learning preferences in an interview scheduling problem and also demonstrate that when restricted to the task of learning ASP programs without weak constraints, ILASP2 can be much more efficient than our previously proposed system.
C1 [Law, Mark; Russo, Alessandra; Broda, Krysia] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London
RP Law, M (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM mark.law09@imperial.ac.uk; a.russo@imperial.ac.uk;
   k.broda@imperial.ac.uk
OI Law, Mark/0000-0003-4554-3415; Russo, Alessandra/0000-0002-3318-8711
FU 7th Framework EU-FET project [600792]; EPSRC [EP/K033522/1]; EPSRC
   [EP/K033522/1, EP/K033425/1] Funding Source: UKRI
FX This research is partially funded by the 7th Framework EU-FET project
   600792 "ALLOW Ensembles", and the EPSRC project EP/K033522/1 "Privacy
   Dynamics".
CR Banbara M, 2013, THEOR PRACT LOG PROG, V13, P783, DOI 10.1017/S1471068413000495
   Blockeel H, 1998, ARTIF INTELL, V101, P285, DOI 10.1016/S0004-3702(98)00034-4
   Broda K., 2015, The ILASP System for Learning Answer Set Programs
   Calimeri F., 2013, ASP CORE 2 INPUT LAN
   Corapi Domenico, 2012, Inductive Logic Programming. 21st International Conference, ILP 2011. Revised Selected Papers, P91, DOI 10.1007/978-3-642-31951-8_12
   Corapi D, 2010, LEIBNIZ INT PR INFOR, V7, P54, DOI 10.4230/LIPIcs.ICLP.2010.54
   Dastani M., 2001, Agent mediated electronic commerce. European agentlink perspective (Lecture Notes in Artificial Intelligence Vol.1991), P163, DOI 10.1007/3-540-44682-6_10
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Fürnkranz J, 2003, LECT NOTES ARTIF INT, V2837, P145
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   GEISLER B, 2001, P INT C INT US INT, P87
   HORVATH T, 2012, COMPUT INFORM, V28, P453
   Kimber T, 2009, LECT NOTES COMPUT SC, V5753, P169, DOI 10.1007/978-3-642-04238-6_16
   Lallouet A., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P45, DOI 10.1109/ICTAI.2010.16
   Law M., 2015, DTR20152 IMP COLL SC
   Law M., 2015, PROOF SOUNDNESS COMP
   Law M., 2014, LOGICS ARTIFICIAL IN
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Muggleton S. H., 2013, P 23 INT JOINT C ART, P1551
   Muggleton S, 2012, MACH LEARN, V86, P3, DOI 10.1007/s10994-011-5259-2
   Otero R. P., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P193
   Ray O, 2004, LOG J IGPL, V12, P371, DOI 10.1093/jigpal/12.5.371
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Sakama C, 2009, MACH LEARN, V76, P3, DOI 10.1007/s10994-009-5113-y
   Srinivasan Ashwin., 2001, Machine Learning at the Computing Laboratory, Oxford University
NR 25
TC 21
Z9 22
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 511
EP 525
DI 10.1017/S1471068415000198
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fierens, D
   Van den Broeck, G
   Renkens, J
   Shterionov, D
   Gutmann, B
   Thon, I
   Janssens, G
   De Raedt, L
AF Fierens, Daan
   Van den Broeck, Guy
   Renkens, Joris
   Shterionov, Dimitar
   Gutmann, Bernd
   Thon, Ingo
   Janssens, Gerda
   De Raedt, Luc
TI Inference and learning in probabilistic logic programs using weighted
   Boolean formulas
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic logic programming; probabilistic inference; parameter
   learning
AB Probabilistic logic programs are logic programs in which some of the facts are annotated with probabilities. This paper investigates how classical inference and learning tasks known from the graphical model community can be tackled for probabilistic logic programs. Several such tasks, such as computing the marginals, given evidence and learning from (partial) interpretations, have not really been addressed for probabilistic logic programs before. The first contribution of this paper is a suite of efficient algorithms for various inference tasks. It is based on the conversion of the program and the queries and evidence to a weighted Boolean formula. This allows us to reduce inference tasks to well-studied tasks, such as weighted model counting, which can be solved using state-of-the-art methods known from the graphical model and knowledge compilation literature. The second contribution is an algorithm for parameter estimation in the learning from interpretations setting. The algorithm employs expectation-maximization, and is built on top of the developed inference algorithms. The proposed approach is experimentally evaluated. The results show that the inference algorithms improve upon the state of the art in probabilistic logic programming, and that it is indeed possible to learn the parameters of a probabilistic logic program from interpretations.
C1 [Fierens, Daan; Van den Broeck, Guy; Renkens, Joris; Shterionov, Dimitar; Gutmann, Bernd; Thon, Ingo; Janssens, Gerda; De Raedt, Luc] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Fierens, D (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Daan.Fierens@cs.kuleuven.be; Guy.VandenBroeck@cs.kuleuven.be;
   Joris.Renkens@cs.kuleuven.be; Dimitar.Shterionov@cs.kuleuven.be;
   Bernd.Gutmann@cs.kuleuven.be; Ingo.Thon@cs.kuleuven.be;
   Gerda.Janssens@cs.kuleuven.be; Luc.DeRaedt@cs.kuleuven.be
RI Janssens, Gerda/N-2662-2013; De Raedt, Luc/AAX-1544-2021
OI De Raedt, Luc/0000-0002-6860-6303; Van den Broeck,
   Guy/0000-0003-3434-2503; Shterionov, Dimitar/0000-0001-6300-797X
FU Research Foundation-Flanders (FWO-Vlaanderen); European Commission
   [FP7-248258-First-MM];  [PF-10/010 NATAR]
FX We thank the reviewers for their useful suggestions. We thank Maurice
   Bruynooghe, Jesse Davis, Kristian Kersting, Angelika Kimmig and
   Theofrastos Mantadelis for useful discussions. Daan Fierens, Guy Van den
   Broeck and Bernd Gutmann are supported by the Research
   Foundation-Flanders (FWO-Vlaanderen). Joris Renkens is supported by
   PF-10/010 NATAR. This research is supported by the European Commission
   under contract number FP7-248258-First-MM.
CR [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chavira M, 2006, INT J APPROX REASON, V42, P4, DOI 10.1016/j.ijar.2005.10.001
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   Darwiche A., 2001, Journal of Applied Non-Classical Logics, V11, P11, DOI DOI 10.3166/JANCL.11.11-34
   Darwiche A, 2009, MODELING AND REASONING WITH BAYESIAN NETWORKS, P126
   De Raedt L., 2008, COGN TECHNOL
   De Raedt L., 2008, LNCS, V4911
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Denecker Marc., 2001, ACM Transactions on Computational Logic, V2, P623
   Domingos P., 2008, LECT NOTES COMPUTER
   Fierens D., 2012, P NIPS 2012 WORKSH P
   Fierens D., 2011, P C UNCERTAINTY ARTI, P211
   Gomes CP, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2293
   GRADEL E, 1992, LECT NOTES COMPUT SC, V626, P149, DOI 10.1007/BFb0023764
   Gutmann B., 2010, 584 CW KU LEUV
   Gutmann B, 2008, LECT NOTES ARTIF INT, V5211, P473, DOI 10.1007/978-3-540-87479-9_49
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6911, P581, DOI 10.1007/978-3-642-23780-5_47
   Ishihata M., 2008, 18 INT C IND LOG PRO
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Kersting K., 2000, P AAAI 2000 WORKSH L, P29
   Kimmig A., 2010, THEOR PRACT LOG PROG, V11, P235
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mantadelis T, 2010, LEIBNIZ INT PR INFOR, V7, P124, DOI 10.4230/LIPIcs.ICLP.2010.124
   Meert W., 2009, LNCS, P96
   Muise C., 2012, CAN C ART INT
   Park JD, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P682
   Poole D., 2008, LECT NOTES COMPUTER
   Poon H., 2006, P 21 NAT C ART INT
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   ROBERTSON N, 1986, J ALGORITHM, V7, P309, DOI 10.1016/0196-6774(86)90023-4
   Sang Tian., 2005, P 20 NATL C ARTIFICI, V1, P475
   Sato T., 2008, LECT NOTES COMPUTER
   Sato T., 1995, P INT C LOG PROGR, P715
   Van den Broeck G, 2010, AAAI CONF ARTIF INTE, P1217
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
NR 39
TC 149
Z9 165
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2015
VL 15
BP 358
EP 401
DI 10.1017/S1471068414000076
PN 3
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CE3WZ
UT WOS:000351762100003
OA Green Submitted, Green Accepted, Bronze
DA 2024-07-18
ER

PT J
AU Pimentel, E
   Olarte, C
   Nigam, V
AF Pimentel, Elaine
   Olarte, Carlos
   Nigam, Vivek
TI A Proof Theoretic Study of Soft Concurrent Constraint Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Concurrent Constraint Programming; Linear Logic; Soft Constraints
ID SATISFACTION; LOGIC
AB Concurrent Constraint Programming (CCP) is a simple and powerful model for concurrency where agents interact by telling and asking constraints. Since their inception, CCP-languages have been designed for having a strong connection to logic. In fact, the underlying constraint system can be built from a suitable fragment of intuitionistic (linear) logic -ILL- and processes can be interpreted as formulas in ILL. Constraints as ILL formulas fail to represent accurately situations where "preferences" (called soft constraints) such as probabilities, uncertainty or fuzziness are present. In order to circumvent this problem, c-semirings have been proposed as algebraic structures for defining constraint systems where agents are allowed to tell and ask soft constraints. Nevertheless, in this case, the tight connection to logic and proof theory is lost. In this work, we give a proof theoretical meaning to soft constraints: they can be defined as formulas in a suitable fragment of ILL with subexponentials (SELL) where subexponentials, ordered in a c-semiring structure, are interpreted as preferences. We hence achieve two goals: (1) obtain a CCP language where agents can tell and ask soft constraints and (2) prove that the language in (1) has a strong connection with logic. Hence we keep a declarative reading of processes as formulas while providing a logical framework for soft-CCP based systems. An interesting side effect of (1) is that one is also able to handle probabilities (and other modalities) in SELL, by restricting the use of the promotion rule for non-idempotent c-semirings. This finer way of controlling subexponentials allows for considering more interesting spaces and restrictions, and it opens the possibility of specifying more challenging computational systems.
C1 [Pimentel, Elaine; Olarte, Carlos] Univ Fed Rio Grande do Norte, BR-59072970 Natal, RN, Brazil.
   [Olarte, Carlos] Pontificia Univ Javeriana Cali, Javeriana, Colombia.
   [Nigam, Vivek] Univ Fed Paraiba, BR-58059900 Joao Pessoa, Paraiba, Brazil.
C3 Universidade Federal do Rio Grande do Norte; Pontificia Universidad
   Javeriana; Universidade Federal da Paraiba
RP Pimentel, E (corresponding author), Univ Fed Rio Grande do Norte, BR-59072970 Natal, RN, Brazil.
EM elaine.pimentel@gmail.com; carlos.olarte@gmail.com;
   vivek.nigam@gmail.com
RI Olarte, Carlos/J-4341-2014
OI Nigam, Vivek/0000-0003-4089-1218; Pimentel, Elaine/0000-0002-7113-0801;
   Olarte, Carlos/0000-0002-7264-7773
CR Andreoli J. M., 1992, Journal of Logic and Computation, V2, P297, DOI 10.1093/logcom/2.3.297
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Bistarelli S., 1999, Constraints, V4, P199, DOI 10.1023/A:1026441215081
   Bistarelli S, 2008, LECT NOTES COMPUT SC, V5052, P50, DOI 10.1007/978-3-540-68265-3_4
   Bistarelli S, 2006, ACM T COMPUT LOG, V7, P563, DOI 10.1145/1149114.1149118
   Brunel A, 2014, LECT NOTES COMPUT SC, V8410, P351
   Chaudhuri K, 2010, LECT NOTES COMPUT SC, V6247, P185, DOI 10.1007/978-3-642-15205-4_17
   Danos V., 1993, Computational Logic and Proof Theory. Third Kurt Godel Colloquium, KGC '93 Proceedings, P159, DOI 10.1007/BFb0022564
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   DEBOER FS, 1995, THEOR COMPUT SCI, V151, P37, DOI 10.1016/0304-3975(95)00047-Z
   Fages F, 2001, INFORM COMPUT, V165, P14, DOI 10.1006/inco.2000.3002
   Ghica D. R., 2013, ABS13072473 CORR
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Haemmerlé R, 2007, LECT NOTES COMPUT SC, V4855, P544
   Knight S, 2012, LECT NOTES COMPUT SC, V7454, P317, DOI 10.1007/978-3-642-32940-1_23
   Nigam Vivek, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P410, DOI 10.1007/978-3-642-40184-8_29
   Nigam V, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P129, DOI 10.1145/1599410.1599427
   Olarte C., 2013, LSFA 13 UNPUB
   Olarte C, 2013, CONSTRAINTS, V18, P535, DOI 10.1007/s10601-013-9145-3
   Pimentel E., 2013, CORR
   Rossi F., 2006, HDB CONSTRAINT PROGR, V2
   Saraswat V, 1996, J SYMB COMPUT, V22, P475, DOI 10.1006/jsco.1996.0064
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   Schiex T, 1995, INT JOINT CONF ARTIF, P631
   Wilson N, 2006, J HEURISTICS, V12, P241, DOI 10.1007/s10732-006-6347-5
NR 25
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 649
EP 663
DI 10.1017/S147106841400026X
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Balduccini, M
AF Balduccini, Marcello
TI ASP with non-herbrand partial functions: a language and system for
   practical use
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE Answer Set Programming; non-herbrand functions; constraint answer set
   programming; practical applications
AB Dealing with domains involving substantial quantitative information in Answer Set Programming (ASP) often results in cumbersome and inefficient encodings. Hybrid "CASP" languages combining ASP and Constraint Programming aim to overcome this limitation, but also impose inconvenient constraints - first and foremost that quantitative information must be encoded by means of total functions. This goes against central knowledge representation principles that contribute to the power of ASP, and makes the formalization of certain domains difficult. ASP{f} is being developed with the ultimate goal of providing scientists and practitioners with an alternative to CASP languages that allows for the efficient representation of qualitative and quantitative information in ASP without restricting one's ability to deal with incompleteness or uncertainty. In this paper we present the latest outcome of such research: versions of the language and of the supporting system that allow for practical, industrial-size use and scalability. The applicability of ASP{f} is demonstrated by a case study on an actual industrial application.
C1 Eastman Kodak Co, Rochester, NY 14650 USA.
C3 Eastman Kodak
RP Balduccini, M (corresponding author), Eastman Kodak Co, Rochester, NY 14650 USA.
EM marcello.balduccini@gmail.com
CR Balduccini M, 2012, LECT NOTES ARTIF INT, P23
   BALDUCCINI M., 2012, P 14 INT WORKSHOP NO
   Balduccini Marcello, 2009, ICLP09 WORKSH ANSW S
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   Gebser M., 2009, 25 INT C LOG PROGR I, V5649
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Lierler Yuliya, 2012, P AAAI
   Lifschitz Vladimir, 1994, LOGIC PROGRAMMING, P23
   LIN F, 2008, P 11 INT C PRINC KNO, P454
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Syrjanen Tommi, 1998, 18 HELS U TECHN DIG
NR 13
TC 12
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 547
EP 561
DI 10.1017/S1471068413000343
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400007
DA 2024-07-18
ER

PT J
AU Fioravanti, F
   Pettorossi, A
   Proietti, M
   Senni, V
AF Fioravanti, Fabio
   Pettorossi, Alberto
   Proietti, Maurizio
   Senni, Valerio
TI Generalization strategies for the verification of infinite state systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE computational tree logic; constraint logic programs; generalization
   strategies; infinite state systems; program specialization; program
   verification
ID MODEL-CHECKING; PROGRAM SPECIALIZATION; PARTIAL DEDUCTION; LOGIC;
   COVERABILITY
AB We present a method for the automated verification of temporal properties of infinite state systems. Our verification method is based on the specialization of constraint logic programs (CLP) and works in two phases: (1) in the first phase, a CLP specification of an infinite state system is specialized with respect to the initial state of the system and the temporal property to be verified, and (2) in the second phase, the specialized program is evaluated by using a bottom-up strategy. The effectiveness of the method strongly depends on the generalization strategy which is applied during the program specialization phase. We consider several generalization strategies obtained by combining techniques already known in the field of program analysis and program transformation, and we also introduce some new strategies. Then, through many verification experiments, we evaluate the effectiveness of the generalization strategies we have considered. Finally, we compare the implementation of our specialization-based verification method to other constraint-based model checking tools. The experimental results show that our method is competitive with the methods used by those other tools.
C1 [Fioravanti, Fabio] Univ G DAnnunzio, Dipartimento Sci, I-65127 Pescara, Italy.
   [Pettorossi, Alberto; Senni, Valerio] Univ Roma Tor Vergata, Dipartimento Informat Sistemi & Prod, I-00133 Rome, Italy.
   [Proietti, Maurizio] CNR, Ist Anal Sistemi & Informat, I-00185 Rome, Italy.
   [Senni, Valerio] LORIA INRIA, F-54602 Villers Les Nancy, France.
C3 G d'Annunzio University of Chieti-Pescara; University of Rome Tor
   Vergata; Consiglio Nazionale delle Ricerche (CNR); Universite de
   Lorraine
RP Fioravanti, F (corresponding author), Univ G DAnnunzio, Dipartimento Sci, Viale Pindaro 42, I-65127 Pescara, Italy.
EM fioravanti@sci.unich.it; pettorossi@disp.uniroma2.it;
   maurizio.proietti@iasi.cnr.it; valerio.senni@loria.fr
RI Proietti, Maurizio/AAW-7487-2020; Pettorossi, Alberto/D-8503-2016
OI Pettorossi, Alberto/0000-0001-7858-4032; FIORAVANTI,
   Fabio/0000-0002-1268-7829; Proietti, Maurizio/0000-0003-3835-4931;
   Senni, Valerio/0000-0002-1131-0384
FU ERCIM; PRIN-MIUR; CNR (Italy); CNRS (France)
FX We thank the anonymous referees of CILC 2010 and LOPSTR 2010 for very
   valuable comments on earlier versions of this paper. We also thank
   Laurent Fribourg for stimulating discussions and John Gallagher for
   giving us the code of some of the systems considered in Section 5. This
   work has been partially supported by ERCIM, by PRIN-MIUR and by a joint
   project between CNR (Italy) and CNRS (France).
CR Abdulla PA, 2009, INT J FOUND COMPUT S, V20, P779, DOI 10.1142/S0129054109006887
   [Anonymous], 2001, TECHNICAL REPORT DSS
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Banda G, 2010, LECT NOTES ARTIF INT, V6355, P27, DOI 10.1007/978-3-642-17511-4_3
   Bardin Sebastien, 2008, International Journal on Software Tools for Technology Transfer, V10, P401, DOI 10.1007/s10009-008-0064-3
   Bultan T, 1999, ACM T PROGR LANG SYS, V21, P747, DOI 10.1145/325478.325480
   Bultan T, 2000, LECT NOTES COMPUT SC, V1785, P441
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke EM, 1999, MODEL CHECKING, P1
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   Dams D, 1997, ACM T PROGR LANG SYS, V19, P253, DOI 10.1145/244795.244800
   Delzanno G., 2001, International Journal on Software Tools for Technology Transfer, V3, P250, DOI 10.1007/s100090100049
   Delzanno G, 2003, FORM METHOD SYST DES, V23, P257, DOI 10.1023/A:1026276129010
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1683, P50
   Esparza J, 1997, ACTA INFORM, V34, P85, DOI 10.1007/s002360050074
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Fioravanti F., 2007, R657 IASICNR
   Fioravanti F, 2011, LECT NOTES COMPUT SC, V6564, P164, DOI 10.1007/978-3-642-20551-4_11
   Fribourg L, 2000, LECT NOTES COMPUT SC, V1817, P30, DOI 10.1007/10720327_3
   FRIBOURG L, 1997, LNCS, V1243, P96
   Geeraerts G, 2006, J COMPUT SYST SCI, V72, P180, DOI 10.1016/j.jcss.2005.09.001
   Godefroid P., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P426
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Lesens D., 1997, ELECT NOTES THEORETI, V9, P41
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Leuschel M, 2000, LECT NOTES COMPUT SC, V1817, P62, DOI 10.1007/10720327_5
   Leuschel M, 1998, ACM T PROGR LANG SYS, V20, P208, DOI 10.1145/271510.271525
   Leuschel M, 2000, LECT NOTES ARTIF INT, V1861, P101
   Lloyd J.W., 1995, P ILPS 95, P465
   MAP, 2011, MAP TRANSFORMATION S
   Nilsson U, 2000, LECT NOTES ARTIF INT, V1861, P384
   Peralta JC, 2003, LECT NOTES COMPUT SC, V2664, P90, DOI 10.1007/3-540-45013-0_8
   Pnueli A., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P184
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Roychoudhury A, 2000, LECT NOTES COMPUT SC, V1785, P172
   Sipma HB, 1999, FORM METHOD SYST DES, V15, P49, DOI 10.1023/A:1008791913551
   Yavuz-Kahveci T, 2009, FORM METHOD SYST DES, V35, P325, DOI 10.1007/s10703-009-0081-1
NR 41
TC 27
Z9 29
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 175
EP 199
DI 10.1017/S1471068411000627
PN 2
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Morales, JF
   Haemmerlé, R
   Carro, M
   Hermenegildo, MV
AF Morales, Jose F.
   Haemmerle, Remy
   Carro, Manuel
   Hermenegildo, Manuel V.
TI Lightweight compilation of (C)LP to JavaScript
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; Ciao; logic programming system; implementation of Prolog;
   modules; JavaScript; web
ID PROLOG
AB We present and evaluate a compiler from Prolog (and extensions) to JavaScript which makes it possible to use (constraint) logic programming to develop the client side of web applications while being compliant with current industry standards. Targeting JavaScript makes (C) LP programs executable in virtually every modern computing device with no additional software requirements from the point of view of the user. In turn, the use of a very high-level language facilitates the development of high-quality, complex software. The compiler is a back end of the Ciao system and supports most of its features, including its module system and its rich language extension mechanism based on packages. We present an overview of the compilation process and a detailed description of the run-time system, including the support for modular compilation into separate JavaScript code. We demonstrate the maturity of the compiler by testing it with complex code such as a CLP(FD) library written in Prolog with attributed variables. Finally, we validate our proposal by measuring the performance of some LP and CLP(FD) benchmarks running on top of major JavaScript engines.
C1 [Morales, Jose F.; Carro, Manuel; Hermenegildo, Manuel V.] IMDEA Software Inst, Madrid, Spain.
   [Haemmerle, Remy; Carro, Manuel; Hermenegildo, Manuel V.] Tech Univ Madrid UPM, Sch Comp Sci, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Morales, JF (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM josef.morales@imdea.org; remy@clip.dia.fi.upm.es;
   manuel.carro@imdea.org; manuel.hermenegildo@imdea.org
RI Morales Caballero, Jose Francisco/JXY-5044-2024; Hermenegildo, w
   V/I-4418-2015; Carro, Manuel/AAE-9653-2021
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Hermenegildo, w
   V/0000-0002-7583-323X; Carro, Manuel/0000-0001-5199-3135
FU Madrid Regional Government under CM [P2009/TIC/1465 (PROMETIDOS)];
   Spanish Ministry of Economy and Competitiveness [TIN-2008-05624 DOVES];
   PICD; Programme for Attracting Talent / young PHDs of the Montegancedo
   Campus of International Excellence
FX The research leading to these results has received funding from the
   Madrid Regional Government under CM project P2009/TIC/1465 (PROMETIDOS),
   and from the Spanish Ministry of Economy and Competitiveness under
   project TIN-2008-05624 DOVES. The research by Remy Haemmerle has also
   been supported by PICD, the Programme for Attracting Talent / young PHDs
   of the Montegancedo Campus of International Excellence.
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Bolz C. F., 2010, PPDP 10
   Borger E., 1990, SPRINGER LNCS
   Cabeza D, 2001, THEOR PRACT LOG PROG, V1, P251, DOI 10.1017/S147106840100117X
   CHAMBERS C, 1989, SIGPLAN NOTICES, V24, P49, DOI 10.1145/74878.74884
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   Cs C., 2007, INT C LOG PROGR
   Demoen B., 2002, 350 CW KU LEUV DEP C
   ECMA International, 2009, ECMA262
   Gal A, 2009, ACM SIGPLAN NOTICES, V44, P465, DOI 10.1145/1543135.1542528
   Google, V8 javascript engine
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   Holzbaur C, 1999, LECT NOTES COMPUT SC, V1702, P117
   Holzbaur C, 1992, 4 INT S PROGR LANG I, V631, P260
   Howe JM, 2010, LECT NOTES COMPUT SC, V6009, P165, DOI 10.1007/978-3-642-12251-4_13
   Le Huitouze S., 1990, Programming Language Implementation and Logic Programming. International Workshop PLILP '90 Proceedings, P136, DOI 10.1007/BFb0024181
   LINDHOLM T, 1996, JAVA VIRTUAL MACHINE
   Loitsch F., 2007, TFP 2007 IN PRESS
   Maffeis S, 2008, LECT NOTES COMPUT SC, V5356, P307
   Morahan-Martin J, 2008, PSYCHOLOGICAL ASPECTS OF CYBERSPACE: THEORY, RESEARCH, APPLICATIONS, P32, DOI 10.1145/1389449.1389455
   Morales J, 2004, LECT NOTES COMPUT SC, V3057, P86
   Pineda A., 2002, C IMPL CONSTR LOGIC
   Tarau P., 2011, ABS11021178 CORR
   Tarau P, 2011, ACM SIGPLAN NOTICES, V46, P129, DOI 10.1145/2076022.1993497
   Warren D., 1983, 309 ART INT CTR SRI
   Wielemaker J., 2002, P 12 INT WORKSH LOG, P97
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Zakai A., 2011, Proceedings of the ACM international conference companion on object oriented programming systems languages and applications companion, P301, DOI DOI 10.1145/2048147.2048224
NR 30
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 755
EP 773
DI 10.1017/S1471068412000336
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000019
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Riguzzi, F
   Swift, T
AF Riguzzi, Fabrizio
   Swift, Terrance
TI The PITA system: Tabling and answer subsumption for reasoning under
   uncertainty
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE Probabilistic Logic Programming; Possibilistic Logic Programming;
   Tabling; Answer Subsumption; Program Transformation
ID LOGIC PROGRAMS; INFERENCE
AB Many real world domains require the representation of a measure of uncertainty. The most common such representation is probability, and the combination of probability with logic programs has given rise to the field of Probabilistic Logic Programming (PLP), leading to languages such as the Independent Choice Logic, Logic Programs with Annotated Disjunctions (LPADs), Problog, PRISM, and others. These languages share a similar distribution semantics, and methods have been devised to translate programs between these languages. The complexity of computing the probability of queries to these general PLP programs is very high due to the need to combine the probabilities of explanations that may not be exclusive. As one alternative, the PRISM system reduces the complexity of query answering by restricting the form of programs it can evaluate. As an entirely different alternative, Possibilistic Logic Programs adopt a simpler metric of uncertainty than probability.
   Each of these approaches-general PLP, restricted PLP, and Possibilistic Logic Programming-can be useful in different domains depending on the form of uncertainty to be represented, on the form of programs needed to model problems, and on the scale of the problems to be solved. In this paper, we show how the PITA system, which originally supported the general PLP language of LPADs, can also efficiently support restricted PLP and Possibilistic Logic Programs. PITA relies on tabling with answer subsumption and consists of a transformation along with an API for library functions that interface with answer subsumption. We show that, by adapting its transformation and library functions, PITA can be parameterized to PITA(IND,EXC) which supports the restricted PLP of PRISM, including optimizations that reduce non-discriminating arguments and the computation of Viterbi paths. Furthermore, we show PITA to be competitive with PRISM for complex queries to Hidden Markov Model examples, and sometimes much faster. We further show how PITA can be parameterized to PITA(COUNT) which computes the number of different explanations for a subgoal, and to PITA(POSS) which scalably implements Possibilistic Logic Programming. PITA is a supported package in version 3.3 of XSB.
C1 [Riguzzi, Fabrizio] Univ Ferrara, ENDIF, I-44122 Ferrara, Italy.
   [Swift, Terrance] Univ Nova Lisboa, CENTRIA, P-1200 Lisbon, Portugal.
C3 University of Ferrara; Universidade Nova de Lisboa
RP Riguzzi, F (corresponding author), Univ Ferrara, ENDIF, Via Saragat 1, I-44122 Ferrara, Italy.
EM fabrizio.riguzzi@unife.it; tswift@cs.suysb.edu
RI Fabrizio, Riguzzi/C-7679-2012
OI Fabrizio, Riguzzi/0000-0003-1654-9703
CR Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   BAUTERS L, 2010, C UNC ART INT
   Bistarelli S, 2001, ACM T PROGR LANG SYS, V23, P1, DOI 10.1145/383721.383725
   Bistarelli S, 2007, ELECTRON NOTES THEOR, V190, P111, DOI 10.1016/j.entcs.2007.07.008
   Christiansen H, 2009, LECT NOTES COMPUT SC, V5649, P55, DOI 10.1007/978-3-642-02846-5_10
   COSTA VS, 2003, C UNC ART INT MORG K
   Dantsin E., 1991, LNCS, P152
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   DERAEDT L, 2008, NIPS2008 WORKSH PROB
   DUBOIS, 1994, HDB LOGIC ARTIFICIAL, V3, P439
   Dubois D, 2004, FUZZY SET SYST, V144, P3, DOI 10.1016/j.fss.2003.10.011
   DUBOIS D, 1991, LOGIC PROGRAMM, P581
   KERSTING K, 2000, IND LOG PROGR CEUR W
   Kimmig A, 2008, LECT NOTES COMPUT SC, V5366, P175, DOI 10.1007/978-3-540-89982-2_22
   Meert W., 2009, LNCS, P96
   Nicolas P, 2006, ANN MATH ARTIF INTEL, V47, P139, DOI 10.1007/s10472-006-9029-y
   Nieves JC, 2007, LECT NOTES COMPUT SC, V4483, P315, DOI 10.1007/978-3-540-72200-7_32
   Osorio M, 2009, LECT NOTES ARTIF INT, V5845, P15, DOI 10.1007/978-3-642-05258-3_2
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, NEW GENERAT COMPUT, V11, P377, DOI 10.1007/BF03037184
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   RIGUZZI F, 2010, CEUR WORKSHOP P, V598
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Riguzzi F, 2010, FUND INFORM, V102, P429, DOI 10.3233/FI-2010-313
   Riguzzi F, 2009, LOG J IGPL, V17, P589, DOI 10.1093/jigpal/jzp025
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   SATO T, 2010, PRISM USERS MANUAL V
   Sato T., 1995, P INT C LOG PROGR, P715
   Swift T, 1999, ANN MATH ARTIF INTEL, V25, P201, DOI 10.1023/A:1018990308362
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   VENNEKENS J, 2003, CW386 K U LEUV
   ZHOU NF, 2011, ABS11030812 CORR
NR 33
TC 49
Z9 54
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 433
EP 449
DI 10.1017/S147106841100010X
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sneyers, J
   Meert, W
   Vennekens, J
   Kameya, Y
   Sato, T
AF Sneyers, Jon
   Meert, Wannes
   Vennekens, Joost
   Kameya, Yoshitaka
   Sato, Taisuke
TI CHR(PRISM)-based probabilistic logic learning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE probabilistic logic learning; constraint handling rules
AB PRISM is an extension of Prolog with probabilistic predicates and built-in support for expectation-maximization learning. Constraint Handling Rules (CHR) is a high-level programming language based on multi-headed multiset rewrite rules.
   In this paper, we introduce a new probabilistic logic formalism, called CHRiSM, based on a combination of CHR and PRISM. It can be used for high-level rapid prototyping of complex statistical models by means of "chance rules". The underlying PRISM system can then be used for several probabilistic inference tasks, including probability computation and parameter learning. We define the CHRiSM language in terms of syntax and operational semantics, and illustrate it with examples. We define the notion of ambiguous programs and define a distribution semantics for unambiguous programs. Next, we describe an implementation of CHRiSM, based on CH R(PRISM). We discuss the relation between CHRiSM and other probabilistic logic programming languages, in particular PCHR. Finally, we identify potential application domains.
C1 [Sneyers, Jon; Meert, Wannes; Vennekens, Joost] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
   [Kameya, Yoshitaka; Sato, Taisuke] Tokyo Inst Technol, Tokyo, Japan.
C3 KU Leuven; Tokyo Institute of Technology
RP Sneyers, J (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM jon.sneyers@cs.kuleuven.be; wannes.merrt@cs.kuleuven.be;
   joost.vennekens@cs.kuleuven.be; kameya@mi.cs.titech.ac.jp;
   sato@mi.cs.titech.ac.jp
RI Vennekens, Joost/ABE-6600-2020; Vennekens, Joost/A-3571-2015; sato,
   taisuke/Q-3245-2016; Meert, Wannes/C-7019-2013
OI Vennekens, Joost/0000-0002-0791-0176; Vennekens,
   Joost/0000-0002-0791-0176; sato, taisuke/0000-0001-9062-0729; Meert,
   Wannes/0000-0001-9560-3872
CR Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 2007, LECT NOTES COMPUT SC, V4407, P17, DOI 10.1007/978-3-540-71410-1_3
   Boenn G, 2008, LECT NOTES COMPUT SC, V5366, P160, DOI 10.1007/978-3-540-89982-2_21
   Christiansen H, 2005, THEOR PRACT LOG PROG, V5, P467, DOI 10.1017/S1471068405002395
   Christiansen H, 2009, LECT NOTES COMPUT SC, V5649, P70, DOI 10.1007/978-3-642-02846-5_11
   De Koninck Leslie, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P25, DOI 10.1145/1273920.1273924
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   FRUHWIRTH T, 2002, ELECT NOTES THEORETI, V76
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Getoor L, 2007, Statistical Relational Learning
   Kameya Y, 2000, LECT NOTES ARTIF INT, V1861, P269
   Pearl J., 1988, PROBABILISTIC REASON
   Raiser F., 2009, CHR 2009, P34
   Sato T, 2002, LECT NOTES ARTIF INT, V2408, P567
   Sato T, 2008, J INTELL INF SYST, V31, P161, DOI 10.1007/s10844-008-0062-7
   SCHRIJVERS T, 2004, CHR 2004 SELECTED CO, P8
   Sneyers J, 2006, LECT NOTES COMPUT SC, V3819, P60
   SNEYERS J, 2008, CHR 2008, P143
   SNEYERS J, 2009, CHR 2009, P62
   SNEYERS J, 2010, CHR 2010 IN PRESS
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
NR 22
TC 9
Z9 11
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 433
EP 447
DI 10.1017/S1471068410000207
PN 4-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, YS
   You, JH
   Yuan, LY
   Shen, YD
AF Wang, Yisong
   You, Jia-Huai
   Yuan, Li Yan
   Shen, Yi-Dong
TI Loop formulas for description logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE semantic web; description logic programs; answer sets; loop formulas
ID SEMANTICS
AB Description Logic Programs (dl-programs) proposed by Eiter et al. constitute an elegant yet powerful formalism for the integration of answer set programming with description logics, for the Semantic Web. In this paper, we generalize the notions of completion and loop formulas of logic programs to description logic programs and show that the answer sets of a dl-program can be precisely captured by the models of its completion and loop formulas. Furthermore, we propose a new, alternative semantics for dl-programs, called the canonical answer set semantics, which is defined by the models of completion that satisfy what are called canonical loop formulas. A desirable property of canonical answer sets is that they are free of circular justifications. Some properties of canonical answer sets are also explored.
C1 [Wang, Yisong] Guizhou Univ, Dept Comp Sci, Guiyang 550003, Peoples R China.
   [Wang, Yisong; You, Jia-Huai; Yuan, Li Yan] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2M7, Canada.
   [Shen, Yi-Dong] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100864, Peoples R China.
C3 Guizhou University; University of Alberta; Chinese Academy of Sciences;
   Institute of Software, CAS
RP Wang, YS (corresponding author), Guizhou Univ, Dept Comp Sci, Guiyang 550003, Peoples R China.
RI Wang, Yisong/AAF-7393-2020; Liu, Kai/IST-6808-2023; Shen,
   Yi/GRS-3602-2022
CR [Anonymous], 2012, OWL 2 Web Ontology Language: Document overview
   Baader F., 2003, DESCRIPTION LOGIC HD
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calimeri F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P406
   Chen Y., 2006, P 10 INT C PRINC KNO, P298
   de Bruijn J, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P304
   DEBRUIJN J, 2007, LECT NOTES COMPUTER, V4524
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Horrocks I., 2004, Proceedings of the 13th Conference on World Wide Web, May 2004, P723, DOI DOI 10.1145/988672.988771
   Lee J., 2008, Proceedings of the International Conference on Knowledge Representation and Reasoning (KR), P444
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu GH, 2008, LECT NOTES COMPUT SC, V5366, P347, DOI 10.1007/978-3-540-89982-2_33
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MOTIK B, 2010, J ACM, V36, P165
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Rosati R, 2005, J WEB SEMANT, V3, P61, DOI 10.1016/j.websem.2005.05.002
   Rosati Riccardo., 2006, P 10 INT C PRINCIPLE, P68
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 19
TC 3
Z9 4
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 531
EP 545
DI 10.1017/S1471068410000268
PN 4-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Truszczynski, M
   Woltran, S
AF Truszczynski, Miroslaw
   Woltran, Stefan
TI Relativized hyperequivalence of logic programs for modular programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; strong equivalence; uniform equivalence;
   relativized equivalence; stable models; supported models; minimal
   models; complexity
ID STABLE SEMANTICS; EQUIVALENCE; UNIFORM; NOTIONS
AB A recent framework of relativized hyperequivalence of programs offers a unifying generalization of strong and uniform equivalence. It seems to be especially well suited for applications in program optimization and modular programming due to its flexibility that allows us to restrict, independently of each other, the head and body alphabets in context programs. We study relativized hyperequivalence for the three semantics of logic programs given by stable, supported, and supported minimal models. For each semantics, we identify four types of contexts, depending on whether the head and body alphabets are given directly or as the complement of a given set. Hyperequivalence relative to contexts where the head and body alphabets are specified directly has been studied before. In this paper, we establish the complexity of deciding relativized hyperequivalence with respect to the three other types of context programs.
C1 [Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Woltran, Stefan] Vienna Univ Technol, Inst Informat Syst 184 2, A-1040 Vienna, Austria.
C3 University of Kentucky; Technische Universitat Wien
RP Truszczynski, M (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM mirek@cs.uky.edu; woltran@dbai.tuwien.ac.at
CR [Anonymous], 1990, HDB THEOR COMPUT SCI
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brass S, 1997, J LOGIC PROGRAM, V32, P207, DOI 10.1016/S0743-1066(96)00115-X
   Cabalar P, 2006, LECT NOTES COMPUT SC, V4079, P346, DOI 10.1007/11799573_26
   Clark K. L., 1978, Logic and data bases, P293
   De Jongh DHJ, 2003, THEOR PRACT LOG PROG, V3, P259, DOI 10.1017/S147106840200159X
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Erdogan ST, 2003, LECT NOTES COMPUT SC, V2916, P483, DOI 10.1007/978-3-540-24599-5_34
   GAIFMAN H, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P134, DOI 10.1145/75277.75289
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M, 2002, ARTIF INTELL, V138, P1, DOI 10.1016/S0004-3702(02)00206-0
   Inoue K, 2004, LECT NOTES COMPUT SC, V3229, P174, DOI 10.1007/978-3-540-30227-8_17
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2007, LECT NOTES COMPUT SC, V4483, P175, DOI 10.1007/978-3-540-72200-7_16
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin F., 2002, KR-02, P170
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch Johannes, 2007, P 22 NAT C ART INT A, P458
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   SAGIV Y, 1988, FDN DEDUCTIVE DATABA, P659
   Truszczynski M, 2008, ANN MATH ARTIF INTEL, V53, P331, DOI 10.1007/s10472-009-9119-8
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 31
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2009
VL 9
BP 781
EP 819
DI 10.1017/S1471068409990159
PN 6
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 522GH
UT WOS:000271985400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Payet, E
   Mesnard, F
AF Payet, Etienne
   Mesnard, Fred
TI A non-termination criterion for binary constraint logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraints; constraint logic programming; non-termination
ID INFERENCE
AB On the one hand, termination analysis of logic programs is now a fairly established research topic within the logic programming community. On the other hand, non-termination analysis seems to remain a much less attractive Subject. If we divide this line of research into two kinds of approaches, dynamic versus static analysis, this paper belongs to the latter. It proposes a criterion for detecting non-terminating atomic queries with respect to binary constraint logic programming (CLP) rules, which strictly generalizes our previous works on this subject. We give a generic operational definition and an implemented logical form of this criterion. Then we show that the logical form is correct and complete with respect to the operational definition.
C1 [Payet, Etienne; Mesnard, Fred] Univ Reunion, IREMIA, LIM, St Denis, France.
C3 University of La Reunion
RP Payet, E (corresponding author), Univ Reunion, IREMIA, LIM, St Denis, France.
EM epayet@univ-reunion.fr; fred@univ-reunion.fr
OI Payet, Etienne/0000-0002-3519-025X
CR [Anonymous], 2003, OVERVIEW SWI PROLOG
   BOL RN, 1991, THEOR COMPUT SCI, V86, P35, DOI 10.1016/0304-3975(91)90004-L
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   DESCHREYE D, 1989, ARTIF INTELL, V41, P237, DOI 10.1016/0004-3702(89)90012-X
   Gabbrielli M., 1994, Proceedings of the 1994 ACM Symposium on Applied Computing (SAC'94), P394, DOI [10.1145/326619.326789, DOI 10.1145/326619.326789]
   Giesl J, 2005, LECT NOTES COMPUT SC, V3717, P216
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Gupta AK, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P147, DOI 10.1145/1328438.1328459
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Maher M. J., 1988, Proceedings of the Third Annual Symposium on Logic in Computer Science (Cat. No.88CH2608-8), P348, DOI 10.1109/LICS.1988.5132
   Mesnard F., 2003, ACM Transactions on Computational Logic, V4, P207, DOI 10.1145/635499.635503
   Payet E, 2006, ACM T PROGR LANG SYS, V28, P256, DOI 10.1145/1119479.1119481
   Payet E, 2004, LECT NOTES COMPUT SC, V3148, P377
   Payet E, 2008, THEOR COMPUT SCI, V403, P307, DOI 10.1016/j.tcs.2008.05.013
   Refalo P, 1996, P JOINT INT C S LOG, P22
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shen YD, 2001, THEOR COMPUT SCI, V266, P441, DOI 10.1016/S0304-3975(00)00197-3
   SPEIRS C, 1997, LECT NOTES COMPUTER, V1302, P160
   Waldmann J, 2004, LECT NOTES COMPUT SC, V3091, P85
   WALDMANN J, 2007, COMPRESSED IN PRESS
   ZANKL H, 2007, 9 INT WORKSH TERM WS
   Zantema H, 2005, J AUTOM REASONING, V34, P105, DOI 10.1007/s10817-005-6545-0
NR 23
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2009
VL 9
BP 145
EP 164
DI 10.1017/S1471068409003652
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 429DK
UT WOS:000264900800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Djelloul, K
AF Djelloul, Khalil
TI Decomposable theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logical first-order formula; complete theory; rewriting rules; theory of
   trees
AB We present in this paper a general algorithm for solving first-order formulas in particular theories called decomposable theories. First of all, using special quantifiers, we give a formal characterization of decomposable theories and show some of their properties. Then, we present a general algorithm for solving first-order formulas in any decomposable theory T. The algorithm is given in the form of five rewriting rules. It transforms a first-order formula phi, which can possibly contain free variables, into a conjunction phi of solved formulas easily transformable into a Boolean combination of existentially quantified conjunctions of atomic formulas. In particular, if phi has no free variables then phi is either the formula true or -true. The correctness of our algorithm proves the completeness of the decomposable theories. Finally, we show that the theory T of finite or infinite trees is a decomposable theory and give some benchmarks realized by an implementation of our algorithm, solving formulas on two-partner games in T with more than 160 nested alternated quantifiers.
C1 Lab Informat Fondamentale Marseille, Parc Sci & Technol Luminy, F-13288 Marseille 9, France.
C3 Aix-Marseille Universite
RP Djelloul, K (corresponding author), Lab Informat Fondamentale Marseille, Parc Sci & Technol Luminy, 163 Ave Luminy,Case 901, F-13288 Marseille 9, France.
EM khalil.djelloul@lif.univ-mrs.fr
CR [Anonymous], 1982, Logic Programming
   BENHAMOU F, 1996, MANUEL PROLOG, V4
   BURCKERT HJ, 1988, LECT NOTES COMPUT SC, V310, P517, DOI 10.1007/BFb0012853
   Clark Keith L., 1978, LOGIC DATA BASES, P293, DOI [10.1007/978-1-4684-3384-5_11, DOI 10.1007/978-1-4684-3384-5_11]
   Colmerauer A, 2003, CONSTRAINTS, V8, P283, DOI 10.1023/A:1025675127871
   COLMERAUER A, 1990, COMMUN ACM, V33, P69, DOI 10.1145/79204.79210
   COLMERAUER A, 1984, P INT C 5 GEN COMP S, P85
   COMON H, 1989, J SYMB COMPUT, V7, P371, DOI 10.1016/S0747-7171(89)80017-3
   COMON H, 1990, RAPPORT HABILITATION
   COMON H, 1988, THESIS I NATL POLYTE
   COURCELLE B, 1983, THEOR COMPUT SCI, V25, P95, DOI 10.1016/0304-3975(83)90059-2
   COURCELLE B, 1986, THEORETICAL COMPUTER, V42, P100
   DAO T, 2000, THESIS U MEDITERRANE
   Djelloul K, 2005, FCS '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON FOUNDATIONS OF COMPUTER SCIENCE, P87
   Djelloul K, 2005, LECT NOTES COMPUT SC, V3717, P106
   DJELLOUL K, 2006, 18430602 INFSYS RES, P111
   DJELLOUL K, 2006, P 21 ACM S APPL COMP
   FRUEHWRIGTH T, 2002, ESSENTIALS CONSTRAIN
   HUET G, 1976, THESIS DETAT U
   JAFFAR J, 1984, NEW GENERAT COMPUT, V2, P207, DOI 10.1007/BF03037057
   John E.Hopcroft Jeff D. Ullman., 1979, INTRO AUTOMATA THEOR
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   LYNDON R, 1964, NOTES LOGIC
   MAHER M, 1988, COMPLETE AXIOMATIZAT
   Mal'cev A. I., 1971, METAMATHEMATICS ALGE, V66, P262
   MATELLI A, 1982, ACM T LANG SYST, V4, P258
   PATERSON MS, 1978, J COMPUT SYST SCI, V16, P158, DOI 10.1016/0022-0000(78)90043-0
   RAMACHANDRAN V, 1993, LNCS, V761, P205
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Rybina Tatiana., 2001, ACM Transactions on Computational Logic, V2, P155, DOI [10.1145/371316.371494, DOI 10.1145/371316.371494]
   SMITH DA, 1991, LOGIC PROGRAMM, P760
   VOROBYOV S, 1996, SPRINGER LECT NOTES, V1104, P275
   [No title captured]
NR 33
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2007
VL 7
BP 583
EP 632
DI 10.1017/S1471068406002997
PN 5
PG 50
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 219CP
UT WOS:000250062600003
DA 2024-07-18
ER

PT J
AU Naish, L
AF Naish, Lee
TI A three-valued semantics for logic programmers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE models; immediate consequence operator; SLDNF resolution; negation;
   verification; declarative debugging; inadmissibility
ID DIAGNOSIS
AB This paper describes a simpler way for programmers to reason about the correctness of their code. The study of semantics of logic programs has shown strong links between the model theoretic semantics (truth and falsity of atoms in the programmer's interpretation of a program), procedural semantics (for example, SLD resolution) and fixpoint semantics (which is useful for program analysis and alternative execution mechanisms). Most of this work assumes that intended interpretations are two-valued: a ground atom is true (and should succeed according to the procedural semantics) or false (and should not succeed). In reality, intended interpretations are less precise. Programmers consider that some atoms "should not occur" or are "ill-typed" or "inadmissible". Programmers don't know and don't care whether such atoms succeed. In this paper we propose a three-valued semantics for (essentially) pure Prolog programs with (ground) negation as failure which reflects this. The semantics of Fitting is similar but only associates the third truth value with non-termination. We provide tools to reason about correctness of programs without the need for unnatural precision or undue restrictions on programming style. As well as theoretical results, we provide a programmer-oriented synopsis. This work has come out of work on declarative debugging, where it has been recognised that inadmissible calls are important.
C1 Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Naish, L (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM lee@cs.mu.oz.au
CR [Anonymous], 1952, INTRO METAMATHEMATIC
   [Anonymous], 1994, The Godel Programming Language
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Clark K. L., 1978, Logic and data bases, P293
   Drabent W, 2005, THEOR PRACT LOG PROG, V5, P669, DOI 10.1017/S147106840500253X
   DRABENT W, 1988, J THEORETICAL COMPUT, V59, P133
   DRABNET W, 2001, LNCS, V2237, P284
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   LLOYD JW, 1987, NEW GENERAT COMPUT, V5, P133, DOI 10.1007/BF03037396
   LLOYD JW, 1984, SPRINGER SERIES SYMB
   MARTELLI M, 1992, INFORM PROCESS LETT, V43, P57, DOI 10.1016/0020-0190(92)90012-K
   NAISH L, 1992, NEW GENERAT COMPUT, V10, P255, DOI 10.1007/BF03037939
   NAISH L, 2000, AUSTR COMPUTER SCI C, V22, P174
   NAISH L, 2000, AUSTR COMPUTER SCI C, V22, P166
   Naish L., 1996, P 1996 JOINT INT C S, P185
   NAISH L, 1997, J FUNCTIONAL LOGIC P
   NAISH L, 1993, CONSTRUCTING LOGIC P, P143
   Naish Lee., 1992, Types in Logic Programming, P189
   PEREIRA LM, 1986, LECT NOTES COMPUT SC, V225, P203
   PEREIRA LM, 1988, P 5 INT C S LOG PROG, P481
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Shapiro EY., 1983, Algorithmic Program Debugging
   Somogyi Z., 1995, PROCEEDINGS OF THE AUSTRALIAN COMPUTER SCIENCE CONFERENCE, P499
NR 25
TC 8
Z9 9
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2006
VL 6
BP 509
EP 538
DI 10.1017/S1471068406002742
PN 5
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 077SV
UT WOS:000240051400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rocha, R
   Silva, F
   Costa, VS
AF Rocha, R
   Silva, F
   Costa, VS
TI On applying or-parallelism and tabling to logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE or-parallelism; tabling; implementation; performance
ID TABLED EVALUATION; PROLOG; MUSE; RESOLUTION; EXECUTION; MACHINE
AB Logic programming languages, such as Prolog, provide a high-level, declarative approach to programming. Logic Programming offers great potential for implicit parallelism, thus allowing parallel systems to often reduce a program's execution time without programmer intervention. We believe that for complex applications that take several hours, if not days, to return an answer, even limited speedups from parallel execution can directly translate to very significant productivity gains. It has been argued that Prolog's evaluation strategy - SLD resolution often limits the potential of the logic programming paradigm. The past years have therefore seen widening efforts at increasing Prolog's declarativeness and expressiveness. Tabling has proved to be a viable technique to efficiently overcome SLD's susceptibility to infinite loops and redundant subcomputations. Our research demonstrates that implicit or-parallelism is a natural fit for logic programs with tabling. To substantiate this belief, we have designed and implemented an or-parallel tabling engine - OPTYap - and we used a shared-memory parallel machine to evaluate its performance. To the best of our knowledge, OPTYap is the first implementation of a parallel tabling engine for logic programming systems. OPTYap builds on Yap's efficient sequential Prolog engine. Its execution model is based on the SLG-WAM for tabling, and on the environment copying for or-parallelism. Preliminary results indicate that the mechanisms proposed to parallelize search in the context of SLD resolution can indeed be effectively and naturally generalized to parallelize tabled computations, and that the resulting systems can achieve good performance on shared-memory parallel machines. More importantly, it emphasizes our belief that through applying or-parallelism and tabling to logic programs the range of applications for Logic Programming can be increased.
C1 Univ Porto, P-4100 Oporto, Portugal.
   Univ Fed Rio de Janeiro, COPPE Syst & LIACC, Rio De Janeiro, Brazil.
C3 Universidade do Porto; Universidade Federal do Rio de Janeiro
RP Univ Porto, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
EM ricroc@ncc.up.pt; fds@ncc.up.pt; vitor@cos.ufrj.br
RI INESC-TEC, CRACS/F-7527-2012; Silva, Fernando/ABD-2062-2020; Silva,
   Fernando/C-5986-2009; Ih, Ahahah/K-2338-2015; Rocha,
   Ricardo/B-2862-2012; Santos Costa, Vitor/B-2859-2012
OI Silva, Fernando/0000-0001-8411-7094; Ih, Ahahah/0000-0003-2851-0400;
   Rocha, Ricardo/0000-0003-4502-8835; Santos Costa,
   Vitor/0000-0002-3344-8237
CR ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   ALI KAM, 1992, INT J PARALLEL PROG, V21, P449, DOI 10.1007/BF01379406
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P445, DOI 10.1007/BF01397627
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   BEAUMONT AJ, 1993, P INT C LOG PROGR, P135
   BONWICK J, 1994, PROCEEDINGS OF THE SUMMER 1994 USENIX CONFERENCE, P87
   Castro LF, 2003, LECT NOTES COMPUT SC, V2618, P69
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   CHEN WD, 1995, J LOGIC PROGRAM, V24, P161, DOI 10.1016/0743-1066(94)00028-5
   CIEPIELEWSKI A, 1991, INT J PARALLEL PROG, V20, P421, DOI 10.1007/BF01547894
   Costa V.S., 1991, PPOPP, P83
   Costa VS, 1999, LECT NOTES COMPUT SC, V1702, P261
   Damasio C. V., 2000, P 2 C TAB PARS DED, P65
   Demoen B, 2000, FUTURE GENER COMP SY, V16, P809, DOI 10.1016/S0167-739X(99)00092-8
   DEMOEN B, 1998, LNCS, V1490, P21
   Freire J, 1995, LECT NOTES COMPUT SC, V982, P115, DOI 10.1007/BFb0026817
   FREIRE J., 1996, LNCS, V1140, P243
   GUO HF, 2002, P C IMPL CONSTR LOG
   GUO HF, 2001, LECT NOTES COMPUTER, V2237, P181
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   HAUSMAN B, 1990, THESIS ROYAL I TECHN
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   HERMENEGILDO MV, 1986, THESIS U TEXAS AUSTI
   HU R, 1997, THESIS STATE U NEW Y
   Johnson E, 1999, LECT NOTES COMPUT SC, V1722, P284
   KOWALSKI R, 1979, ARTIFICIAL INTELLIGE
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   LUSK E, 1988, P INT C 5 GEN COMP S, P819
   MARQUES R, 2000, P 2 C TAB PARS DED V, P141
   MATTERN F, 1989, INFORM PROCESS LETT, V30, P195, DOI 10.1016/0020-0190(89)90212-3
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Milner R., 1989, Communication and concurrency
   PONTELLI E, 1997, P INT C FDN SOFTW TE, P123
   RAMAKRISHNAN CR, 2000, LNCS, V1855, P576
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Rao P., 1997, LECT NOTES COMPUTER, V1265, P431
   Rao Prasad., 1996, PROC 1996 JOINT INT, P112
   Rocha R, 1999, LECT NOTES COMPUT SC, V1551, P137
   ROCHA R, 1999, LECT NOTES ARTIF INT, V1695, P178
   ROCHA R, 2000, P 2 C TAB PARS DED V, P77
   ROCHA R, 2001, P 17 INT C LOG PROGR, V2237, P43
   ROCHA R, 2001, THESIS U PORTO COMPU
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   SAGONAS K., 1996, THESIS STATE U NEW Y
   SAGONAS K, 1996, P JOINT INT C S LOG, P274
   SAGONAS K, 1994, P 1994 ACM SIGMOD IN, P442
   Shen K., 1992, Joint International Conference and Symposium on Logic Programming, P717
   Shen YD, 2001, THEOR PRACT LOG PROG, V1, P71, DOI 10.1017/S1471068400001010
   SWIFT T, 1994, P S LOG PROGR, P633
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tick E., 1991, Parallel Logic Programming
   VIEILLE L, 1989, THEOR COMPUT SCI, V69, P1, DOI 10.1016/0304-3975(89)90088-1
   Warren D. H. D., 1983, 309 SRI INT
   *XSB GROUP, 2003, LMC LOG BAS MOD CHEC
   *XSB GROUP, 2003, XSB LOG PROGR SYST
   Zhou NF, 2000, LECT NOTES COMPUT SC, V1753, P109
NR 57
TC 26
Z9 29
U1 0
U2 14
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 161
EP 205
DI 10.1017/S1471068404002030
PN 1-2
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vanbesien, L
   Bruynooghe, M
   Denecker, M
AF Vanbesien, Linde
   Bruynooghe, Maurice
   Denecker, Marc
TI Analyzing Semantics of Aggregate Answer Set Programming Using
   Approximation Fixpoint Theory
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE aggregates; Approximation Fixpoint Theory; Answer set Programming
AB Aggregates provide a concise way to express complex knowledge. The problem of selecting an appropriate formalization of aggregates for answer set programming (ASP) remains unsettled. This paper revisits it from the viewpoint of Approximation Fixpoint Theory (AFT). We introduce an AFT formalization equivalent with the Gelfond-Lifschitz reduct for basic ASP programs and we extend it to handle aggregates. We analyze how existing approaches relate to our framework. We hope this work sheds some new light on the issue of a proper formalization of aggregates.
C1 [Vanbesien, Linde; Bruynooghe, Maurice; Denecker, Marc] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
C3 KU Leuven
RP Vanbesien, L (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
EM linde.vanbesien@cs.kuleuven.be; maurice.bruynooghe@cs.kuleuven.be;
   marc.denecker@cs.kuleuven.be
RI ; Denecker, Marc/O-1056-2013
OI Vanbesien, Linde/0000-0003-0700-7099; Denecker, Marc/0000-0002-0422-7339
FU Flemish Government; FWO (Research Foundation Flanders) [G0B2221N]
FX This research received funding from the Flemish Government under the
   "Onderzoeksprogramma Artificiele Intelligentie (AI) Vlaanderen"
   programme and from the FWO (Research Foundation Flanders) for project
   G0B2221N.
CR Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   Bogaerts B, 2019, AAAI CONF ARTIF INTE, P2686
   Cabalar Pedro, 2017, Journal of Applied Non-Classical Logics, V27, P238, DOI 10.1080/11663081.2018.1439358
   Charalambidis A, 2018, THEOR PRACT LOG PROG, V18, P421, DOI 10.1017/S1471068418000108
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M, 2003, ARTIF INTELL, V143, P79, DOI 10.1016/S0004-3702(02)00293-X
   Denecker M., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P212
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker Marc, 2012, Correct Reasoning, P178
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   FERRARIS P, 2007, IJCAI, P372
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   GOdel K., 1932, INTUITIONISTISCHEN A
   Heyninck J., 2021, P INT C PRINCIPLES K, V18, P334
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Kleene SC., 1952, Introduction to metamathematics
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Pelov N., 2004, THESIS KU LEUVEN
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Son TC, 2007, J ARTIF INTELL RES, V29, P353, DOI 10.1613/jair.2171
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
NR 28
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 523
EP 537
AR PII S1471068422000126
DI 10.1017/S1471068422000126
EA JUL 2022
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000828891700001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Körner, P
   Leuschel, M
   Barbosa, J
   Costa, VS
   Dahl, V
   Hermenegildo, MV
   Morales, JF
   Wielemaker, J
   Diaz, D
   Abreu, S
   Ciatto, G
AF Koerner, Philipp
   Leuschel, Michael
   Barbosa, Joao
   Costa, Vitor Santos
   Dahl, Veronica
   Hermenegildo, Manuel, V
   Morales, Jose F.
   Wielemaker, Jan
   Diaz, Daniel
   Abreu, Salvador
   Ciatto, Giovanni
TI Fifty Years of Prolog and Beyond
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming systems; portability; rationale; evolution;
   vision
ID LOGIC PROGRAMMING LANGUAGE; ABSTRACT MACHINE; IMPLEMENTATION;
   COMPILATION; DATALOG
AB Both logic programming in general and Prolog in particular have a long and fascinating history, intermingled with that of many disciplines they inherited from or catalyzed. A large body of research has been gathered over the last 50 years, supported by many Prolog implementations. Many implementations are still actively developed, while new ones keep appearing. Often, the features added by different systems were motivated by the interdisciplinary needs of programmers and implementors, yielding systems that, while sharing the "classic" core language, in particular, the main aspects of the ISO-Prolog standard, also depart from each other in other aspects. This obviously poses challenges for code portability. The field has also inspired many related, but quite different languages that have created their own communities. This article aims at integrating and applying the main lessons learned in the process of evolution of Prolog. It is structured into three major parts. First, we overview the evolution of Prolog systems and the community approximately up to the ISO standard, considering both the main historic developments and the motivations behind several Prolog implementations, as well as other logic programming languages influenced by Prolog. Then, we discuss the Prolog implementations that are most active after the appearance of the standard: their visions, goals, commonalities, and incompatibilities. Finally, we perform a SWOT analysis in order to better identify the potential of Prolog and propose future directions along with which Prolog might continue to add useful features, interfaces, libraries, and tools, while at the same time improving compatibility between implementations.
C1 [Koerner, Philipp; Leuschel, Michael] Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
   [Barbosa, Joao; Costa, Vitor Santos] Univ Porto, Dept Comp Sci, Fac Sci, Porto, Portugal.
   [Dahl, Veronica] Simon Fraser Univ, Comp Sci Dept, Burnaby, BC, Canada.
   [Hermenegildo, Manuel, V; Morales, Jose F.] IMDEA Software Inst, Madrid, Spain.
   [Hermenegildo, Manuel, V; Morales, Jose F.] Univ Politecn Madrid UPM, Madrid, Spain.
   [Wielemaker, Jan] Ctr Wiskunder Informat CWI, Amsterdam, Netherlands.
   [Diaz, Daniel] Univ Paris 01, Ctr Rech Informat, Paris, France.
   [Abreu, Salvador] Univ Evora, NOVA LINCS, Evora, Portugal.
   [Ciatto, Giovanni] Univ Bologna, Alma Mater Studiorum, Dept Comp Sci & Engn, Bologna, Italy.
C3 Heinrich Heine University Dusseldorf; Universidade do Porto; Simon
   Fraser University; IMDEA Software Institute; Universidad Politecnica de
   Madrid; heSam Universite; Universite Pantheon-Sorbonne; University of
   Evora; University of Bologna
RP Körner, P (corresponding author), Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
EM p.koerner@uni-duesseldorf.de; leuschel@uni-duesseldorf.de;
   joao.barbosa@fc.up.pt; vscosta@fc.up.pt; veronica_dahl@sfu.ca;
   manuel.hermenegildo@imdea.org; josef.morales@imdea.org;
   J.Wielemaker@cwi.nl; daniel.diaz@univ-paris1.fr; spa@uevora.pt;
   giovanni.ciatto@unibo.it
RI Sanchez, Daniel Diaz/M-1190-2014; Morales Caballero, Jose
   Francisco/JXY-5044-2024; Abreu, Salvador/B-4118-2013; Hermenegildo,
   Manuel/I-4418-2015; Diaz, Daniel/M-6259-2014; Santos Costa,
   Vitor/B-2859-2012
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Abreu,
   Salvador/0000-0002-1613-4631; Wielemaker, Jan/0000-0001-5574-5673;
   Hermenegildo, Manuel/0000-0002-7583-323X; Barbosa,
   Joao/0000-0003-1817-7595; Diaz, Daniel/0000-0002-2700-2271; Santos
   Costa, Vitor/0000-0002-3344-8237; Korner, Philipp/0000-0001-7256-9560
CR Abramson H., 1989, LOGIC GRAMMARS
   Abreu S., 2003, LECT NOTES COMPUTER, V2916
   Abreu S., 2005, LECT NOTES COMPUTER, V4369, P3847
   Adebara I., 2016, CEUR WORKSHOP PROC, V1648
   Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   Alpuente M., 2010, LECT NOTES COMPUTER, V6702, P120
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Angelopoulos N., 2013, LECT NOTES COMPUTER, V7752
   [Anonymous], 2021, ETHNOLOGUE LANGUAGES, V24th
   [Anonymous], 1988, P FGCS
   [Anonymous], 2021, ECLIPSE CONSTR PROGR
   [Anonymous], PROLOG UPDATES NOTE
   [Anonymous], 1995, 132111 ISOIEC
   [Anonymous], B PROLOG
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2021, TU PROLOG HOME TUPRO
   [Anonymous], 2021, PROLOG HOME PAGE
   [Anonymous], 2011, P 2011 ACM SIGMOD IN, DOI DOI 10.1145/1989323.1989456
   [Anonymous], 2000, 132112 ISOIEC
   [Anonymous], PROLOG COMMONS WORKI
   [Anonymous], Welcome to Python.org
   [Anonymous], 1982, Logic Programming
   [Anonymous], 2021, SWI PROL MAN
   [Anonymous], 2021, RACKLOG LANG
   [Anonymous], 1994, The Godel Programming Language
   [Anonymous], LECT NOTES ARTIF INT
   [Anonymous], 148822020 ISOIEC
   [Anonymous], 2021, SICSTUS PROL LEAD PR
   [Anonymous], 1969, ser. IJCAI'69
   [Anonymous], 1974, ROSENFELD
   [Anonymous], 2021, CIAO PROGR LANG
   [Anonymous], 2021, PROL HOM
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Apt K.R., 2007, CONSTRAINT LOGIC PRO
   Arias J., 2016, P 18 INT S PRINC, V10, P23
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Armstrong, 2007, P HOPL, V1, P26
   At-Kaci H., 1994, WILD LIFE HDB
   At-Kaci H., 1991, LNCS, V528
   At-Kaci H., 1993, P ILPS, P5268
   Bagnara R, 1999, ALP NEWSLETTER   FEB, P10
   Bagnara R., 2002, ASS LOGIC PROGRAMMIN, P2
   Basilio R., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P15
   Baumeister J, 2010, J WEB SEMANT, V8, P55, DOI 10.1016/j.websem.2009.12.003
   Bavarian M, 2006, J UNIVERS COMPUT SCI, V12, P1500
   BECKERT B, 1995, J AUTOM REASONING, V15, P339, DOI 10.1007/BF00881804
   Becket R., 2008, LECT NOTES COMPUTER, V4902
   BELDICEANU N, 1994, MATH COMPUT MODEL, V20, P97, DOI 10.1016/0895-7177(94)90127-9
   Bender E. M., 2020, P ACL, V5185, P5198
   BENICHOU M, 1992, IBM SYST J, V31, P755, DOI 10.1147/sj.314.0755
   Birhane A, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2021.100205
   Blackburn P., 2006, LEARN PROLOG NOW, V7
   Bogaard T., 2016, COMMUN COMPUT PHYS, V181, P187
   Bolz C. F., 2011, P PEPM, V43, P52
   Bonatti P. A., 2008, P AAAI, V418, P423
   Bonatti PA, 2001, J AUTOM REASONING, V27, P391, DOI 10.1023/A:1011960831261
   Bonatti PA, 2011, LECT NOTES COMPUT SC, V6702, P21
   Bone P., 2012, P DAMP, V11, P20
   Borger E., 1995, LOGIC PROGRAMMING FO, P20
   Bowen D., 1983, P LOGIC PROGRAMMING, V74, P83
   Boyer R. S., 1972, Machine intelligence 7, P101
   BOYER RS, 1995, COMPUT MATH APPL, V29, P27, DOI 10.1016/0898-1221(94)00215-7
   Bratko I., 2012, Prolog programming for Artificial Intelligence
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bruynooghe, 1976, 10 CW DEP COMP SCI
   Bruynooghe, 2021, PROLOG DOCUMENTS
   Bueno F, 1999, ACM T PROGR LANG SYS, V21, P189, DOI 10.1145/316686.316688
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   Byrd L., 1980, P LOGIC PROGRAMING W, V127, P138
   Cabeza D., 1996, PROCEDINGS APPIA GUL, V67, P78
   Cabeza D., 2000, LECT NOTES COMPUTER, V1861
   Calegari R., 2018, BIG DATA COGNITIVE C, P3
   Calegari R., 2019, CEUR WORKSHOP PROC, V2404
   Calegari R, 2021, AUTON AGENT MULTI-AG, V35, DOI 10.1007/s10458-020-09478-3
   Calegari R, 2020, INTELL ARTIF, V14, P7, DOI 10.3233/IA-190036
   Calegari R, 2020, INFORMATION, V11, DOI 10.3390/info11030167
   Carlson B., 1994, MIT PS LOG, V339, P353
   CARLSSON M, 1984, NEW GENERAT COMPUT, V2, P347, DOI 10.1007/BF03037326
   Carlsson M., 1986, SICSTUS PRELIMINARY
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Carro M., 2006, P CASES
   Carro M., 1999, LOGIC PROGRAMM, V320, P334
   Chen WD, 1996, IEEE T KNOWL DATA EN, V8, P742, DOI 10.1109/69.542027
   Chirico, 2021, JIPROLOGJAVA INTERNE
   Christiansen H, 2005, LECT NOTES COMPUT SC, V3668, P159, DOI 10.1007/11562931_14
   Christiansen H, 2002, LECT NOTES COMPUT SC, V2401, P481, DOI 10.1007/3-540-45619-8_43
   Christiansen H., 2018, DECLARATIVE LOGIC PR, P477
   Ciatto Giovanni, 2019, Advances in Practical Applications of Survivable Agents and Multi-Agent Systems. The PAAMS Collection. 17th International Conference, PAAMS 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11523), P29, DOI 10.1007/978-3-030-24209-1_3
   Ciatto G., 2018, CEUR WORKSHOP PROC, V2215, P6974
   Ciatto G., 2020, CEUR WORKSHOP PROC, V2706
   Ciatto G, 2021, SOFTWAREX, V16, DOI 10.1016/j.softx.2021.100817
   Ciatto G, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217460
   CLARK K, 1986, ACM T PROGR LANG SYS, V8, P1, DOI 10.1145/5001.5390
   Clark K. L., 1978, Logic and data bases, P293
   Clocksin, 1997, CLAUSE EFFECT
   CLOCKSIN WF, 1981, PROGRAMMING PROLOG
   Clojure, 2021, CLOJURE
   CMU Artificial Intelligence Repository, 1995, SB PROL STON BROOK P
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   COHEN J, 1988, COMMUN ACM, V31, P26, DOI 10.1145/35043.35045
   COHEN J, 1979, COMPUT SURV, V11, P79, DOI 10.1145/356770.356773
   Colmerauer, 1996, BASES PROLOG 4
   Colmerauer, 1984, P FGCS, V85, P99
   Colmerauer, 1982, PROLOG 2 MANUEL RFRE
   Colmerauer, 1979, RAIRO INFORMATIQUE T, V4, P309
   COLMERAUER A, 1970, J ACM, V17, P14, DOI 10.1145/321556.321559
   Colmerauer A., 1990, COMPUTATIONAL LOGIC, P37, DOI DOI 10.1007/978-3-642-76274-12
   Colmerauer A., 1978, NATURAL LANGUAGE COM, V63, P133
   Colmerauer A., 1970, 43 DPART DINFORMATIQ
   Colmerauer A., 1996, History of programming languages II, VII, P331, DOI [DOI 10.1145/234286.1057820L, 10.1145/234286.1057820, DOI 10.1145/234286.1057820]
   Colmerauer A., 1973, RAPPORT PRLIMINAIRE
   comp.lang, 2021, PROLOG FAQ
   Costa V.S., 1991, PPOPP, P83
   Costa VS, 2007, LECT NOTES COMPUT SC, V4670, P395
   Costa VS, 2007, LECT NOTES COMPUT SC, V4354, P185
   Costa VS, 2013, THEOR PRACT LOG PROG, V13, P799, DOI 10.1017/S1471068413000501
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Costa VS, 1999, LECT NOTES COMPUT SC, V1702, P261
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Covington MA, 2012, THEOR PRACT LOG PROG, V12, P889, DOI 10.1017/S1471068411000391
   Cropper A., 2020, P 29 INT JOINT C, p4833 4839
   Cyras K., 2021, INT JOINT C ARTIFICI, V4392, P4399
   da Silva AF, 2007, LECT NOTES COMPUT SC, V4670, P410
   Dahl, 1977, THESIS U DAIX MARSEI
   Dahl, 1986, REV ARGENTINA LING S, V2, P375
   Dahl, 2004, P ASAI
   DAHL V, 1982, ACM T DATABASE SYST, V7, P102, DOI 10.1145/319682.319700
   Dahl V., 1983, American Journal of Computational Linguistics, V9, P69
   Dahl V., 1998, Canadian Artificial Intelligence, P26
   Dahl V., 1990, International Journal of Expert Systems Research and Applications, V3, P131
   DAHL V, 1993, LINGUIST PHILOS, V16, P331, DOI 10.1007/BF00985271
   Dahl V., 2012, 9 INT WORKSH CONSTR, V624, P32
   Dahl V., 1995, COMPULOGNET ELSNET E, P1
   Dahl V., 1976, UN SYSTME BANQUE DON
   Dahl V., 1979, P 6 INT JOINT C ART, V1, P182
   Dahl V., LECT NOTES COMPUTER
   Dahl V., 1992, FORMAL LINGUISTICS T, P276
   De Angelis E, 2022, THEOR PRACT LOG PROG, V22, P974, DOI 10.1017/S1471068421000211
   de la Banda M. G., 1996, Programming Languages: Implementations, Logics, and Programs. 8th International Symposium, PLILP '96 Proceedings, P77
   De la Banda MG, 2000, ACM T PROGR LANG SYS, V22, P296, DOI 10.1145/349214.349224
   de Raedt L., 2007, 20 INT JOINT C ART, V2462, P2467
   DEKERGOMMEAUX JC, 1994, ACM COMPUT SURV, V26, P295, DOI 10.1145/185403.185453
   Denti E., 2013, TUPROLOG MAKING PROL
   Denti E., 2001, LECT NOTES COMPUTER, V1990
   Deransart P., 1996, PROLOG STANDARD
   Devlin J., 2018, BERT PRE TRAINING DE
   Diaz D, 2000, LECT NOTES COMPUT SC, V1753, P81
   Diaz D, 2012, THEOR PRACT LOG PROG, V12, P253, DOI 10.1017/S1471068411000470
   DIETRICH R, 1988, LECT NOTES COMPUT SC, V300, P79
   Dovier A, 2022, THEOR PRACT LOG PROG, V22, P905, DOI 10.1017/S1471068422000059
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   ELCOCK EW, 1990, J LOGIC PROGRAM, V9, P1, DOI 10.1016/0743-1066(90)90030-9
   Felleisen, 1985, 182 IND U DEP COMP S
   Flanagan C, 2006, ACM SIGPLAN NOTICES, V41, P245, DOI 10.1145/1111320.1111059
   Floridi L, 2020, MIND MACH, V30, P681, DOI 10.1007/s11023-020-09548-1
   FLOYD RW, 1967, J ACM, V14, P636, DOI 10.1145/321420.321422
   Forgy CharlesL., 1989, READINGS ARTIFICIAL, P547
   Franca MVM, 2014, MACH LEARN, V94, P81, DOI 10.1007/s10994-013-5392-1
   Frhwirth T., 1992, P JICSLP WORKSHOP CO
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Gackenheimer C., 2015, INTRO REACT, V52
   Gallagher JP, 2004, LECT NOTES COMPUT SC, V3132, P27, DOI 10.1007/978-3-540-27775-0_3
   GALLAIRE H, 1984, COMPUT SURV, V16, P153, DOI 10.1145/356924.356929
   Garcez ASA, 1999, APPL INTELL, V11, P59, DOI 10.1023/A:1008328630915
   García-Contreras I, 2016, THEOR PRACT LOG PROG, V16, P721, DOI 10.1017/S1471068416000417
   Gauch S, 2007, LECT NOTES COMPUT SC, P54, DOI 10.1007/978-3-540-72079-9_2
   Gebser M., 2008, USERS GUIDE GRINGO C, P11086
   Gebser M., 2014, ARXIV 14053694
   GNU, 2021, GNU PROL WEB SIT
   Green, 1969, OUTSTANDING DISSERTA
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Gunning D., 2016, Broad agency announcement explainable artificial intelligence (xai)
   Gupta Gopal, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P40, DOI 10.1007/978-3-642-22944-2_4
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Gupta G., 1999, J FUNCTIONAL LOGIC P
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Gurr C. A., 1994, WORKSHOPS COMPUTING, V124, P140
   Haemmerlé R, 2006, LECT NOTES COMPUT SC, V4079, P41, DOI 10.1007/11799573_6
   HANKLEY W, 1987, SIGPLAN NOTICES, V22, P111, DOI 10.1145/24697.24709
   Hanus M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings, P335, DOI 10.1007/BFb0033854
   Hanus M, 2017, ELECTRON P THEOR COM, P104, DOI 10.4204/EPTCS.234.8
   Hanus Michael., 1995, P ILP WORKSHOP VISIO, P95
   Henz M., 1993, IJCAI93 VOLS 1 2, V404, P409
   Hermenegildo M, 2000, PARALLEL COMPUT, V26, P1685, DOI 10.1016/S0167-8191(00)00051-X
   Hermenegildo M., 1993, P COMPULOG NET AREA
   Hermenegildo M., 1994, LNCS, V874, P123
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo M. V., 2012, PUBLICATION CULTURE, V12452, P2930
   Hermenegildo M. V., 1989, HIGH PERFORMANCE PRO
   Hermenegildo M. V., 1996, P AGP, P105
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P25
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hoarau S, 1999, LECT NOTES COMPUT SC, V1559, P240, DOI 10.1007/3-540-48958-4_13
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   Ireson-Paine, 2010, PUBLIC DOMAIN PROLOG
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Jaffar J., 1994, J LOGIC PROGRAM, V19, p503 581
   Janson S., 1991, R918SE SICS
   Janssens, 1984, IR1 BIM
   Johnson K., 1983, NOTE NO
   Johnson K, 2019, FORDHAM LAW REV, V88, P499
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   Julia, JULIA
   Kacsuk P., 1992, IMPLEMENTATIONS DIST
   Kay, 1967, P COLING, V1, P20
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   KOWALSKI R, 1971, ARTIF INTELL, V2, P227, DOI 10.1016/0004-3702(71)90012-9
   Kowalski R., 2020, P LPOP, P33
   KOWALSKI RA, 1988, COMMUN ACM, V31, P38, DOI 10.1145/35043.35046
   Kowalski R, 2015, NEW GENERAT COMPUT, V33, P33, DOI 10.1007/s00354-015-0103-z
   Kowalski R, 2013, LECT NOTES COMPUT SC, V8148, P11, DOI 10.1007/978-3-642-40564-8_2
   Lally A., 2012, J RES DEV, V56
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M., 2008, P ACM SIGPLAN PPDP 2, P1, DOI DOI 10.1145/1389449.1389450
   Leuschel M, 2020, LECT NOTES COMPUT SC, V12546, P63, DOI 10.1007/978-3-030-63461-2_4
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lindholm Tim, 2021, The Java Virtual Machine Specification: Java SE
   Lopes R, 2012, THEOR PRACT LOG PROG, V12, P319, DOI 10.1017/S1471068411000068
   Lopez-Garcia P, 2018, THEOR PRACT LOG PROG, V18, P167, DOI 10.1017/S1471068418000042
   LPA Ltd, 2021, LPA
   LUSK E, 1990, NEW GENERAT COMPUT, V7, P243, DOI 10.1007/BF03037208
   Maher M. J., 1987, Logic Programming. Proceedings of the Fourth International Conference, P858
   Maier David., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P3, DOI DOI 10.1145/3191315.3191317
   Marcus G., 2020, TECHNOL REV
   Marple K., 2017, ARXIV 170900501
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MCCARTHY J, 1962, LISP 15 PROGRAMMERS
   McCord M., 2006, SLOT GRAMMAR LEXICAL
   McJones, 2021, PROLOG LOGIC PROGRAM
   Mellish C. S., 1979, SHORT GUIDE UNIX PRO
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Miller D., 2012, PROGRAMMING HIGHER O
   Miller D., 2021, PHILOS TECHNOLOGY, V34
   Morales J, 2004, LECT NOTES COMPUT SC, V3057, P86
   Morales JF, 2005, LECT NOTES COMPUT SC, V3668, P21, DOI 10.1007/11562931_5
   Morales JF, 2016, THEOR PRACT LOG PROG, V16, P1, DOI 10.1017/S1471068414000672
   Moura, 2007, PROLOG MULTITHREADIN
   Moura Paulo, 2011, Applications of Declarative Programming and Knowledge Management. 18th International Conference, INAP 2009. Revised Selected Papers, P52, DOI 10.1007/978-3-642-20589-7_4
   Moura Paulo, 2009, Logic Programming. Proceedings 25th International Conference, ICLP 2009, DOI 10.1007/978-3-642-02846-5_3
   Moura P., 2005, ASS LOGIC PROGRAMMIN, V18, P3
   Moura P., 2009, ASS LOGIC PROGRAMMIN, V22, P1
   MOURA P, 2003, THESIS U BEIRA INTER
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   MUTHUKUMAR K, 1990, LOGIC PROGRAMM, P221
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   Muthukumar K., 1989, 1989 N AM C LOG PROG, P166
   MYCROFT A, 1984, ARTIF INTELL, V23, P295, DOI 10.1016/0004-3702(84)90017-1
   Nadathur G, 2001, LECT NOTES COMPUT SC, V2024, P1
   Nadathur G., 1988, 595 DEP COMP INF SCI
   NAISH L, 1982, 822 U MELB
   NAISH L, 1986, LECT NOTES COMPUTER, V238
   Nassen Henrik., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP'01, P49
   National Institute of Standards and Technology (NIST), 2011, Commun. ACM
   Neumerkel, 1990, P META
   Neumerkel, 1992, SPECIALIZATION PROLO
   Neumerkel, 2013, SWI7 ISO PROLOG
   Neumerkel U., 1994, Logic Program Synthesis and Transformation. Proceedings of LOPSTR 93, International Workshop on Logic Program Synthesis and Transformation, P162
   Neumerkel Ulrich, 2002, WLPE, P77
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Noble S.U., 2018, ALGORITHMS OPPRESSIO
   Nogatz F., 2019, EPTCS, V306, P21
   Nori K.V., 1974, BERICHTE INSTITUTS F
   O'Keefe R.A., 1990, The Craft of Prolog
   Older W., 1993, 1 WORKSH PRINC PRACT, P239
   Omicini, NOTES COMPUTER SCI, V12678, P407
   Omicini A, 2001, SCI COMPUT PROGRAM, V41, P277, DOI 10.1016/S0167-6423(01)00011-9
   Omicini A, 1998, INTERNET RES, V8, P400, DOI 10.1108/10662249810241266
   Panch T, 2019, J GLOB HEALTH, V9, DOI 10.7189/jogh.09.020318
   Pasero R., 1973, THESIS U AIX MARSEIL
   Paxton B., 2021, ERLANG CO
   Pereira F.C., 1983, C PROLOG USERS MANUA
   Pereira F.C.N., 1987, PROLOG NATURAL LANGU, P185
   PEREIRA FCN, 1980, ARTIF INTELL, V13, P231, DOI 10.1016/0004-3702(80)90003-X
   PEREIRA L, 1978, USERS GUIDE DECSYSTE
   Pereira L. M., 1979, 279 CIUNL U NOV LISB
   Piancastelli G, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P191
   Pineda A., 2002, REPORT CW, V344, P37
   Pisano G., 2020, CEUR WORKSHOP P, V2706, P101
   Pisano G., 2020, CILC 2020 ITALIAN C, V2719, P51
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P63
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Raedt LD., 2016, Synthesis lectures on artificial intelligence and machine learning, V10, P1, DOI [DOI 10.2200/S00692ED1V01Y201601AIM032, DOI 10.1007/978-3-031-01574-8, 10.1007/978-3-031-01574-8]
   RAMAKRISHNAN R, 1995, J LOGIC PROGRAM, V23, P125, DOI 10.1016/0743-1066(94)00039-9
   Ramakrishnan R., 1994, VLDB J, V3, P161
   Rastogi A, 2015, ACM SIGPLAN NOTICES, V50, P167, DOI [10.1145/2775051.2676971, 10.1145/2676726.2676971]
   Reiter R., 1978, Logic and data bases, P55
   Resnik P., 1995, INT JOINT CONF ARTIF
   Riguzzi F, 2018, Foundations of Probabilistic Logic Programming
   Roberts G. M., 1977, THESIS U WATERLOO
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Roussel, 1972, THESIS U AIX MARSEIL
   Rust, 2021, RUST PROGR LANG
   Sagonas K., 1994, SIGMOD Record, V23, P442, DOI 10.1145/191843.191927
   Sagonas KonstantinosF., 1993, Workshop on Programming with Logic Databases (Informal Proceedings), ILPS, P164
   SAMMUT CA, 1983, AUST COMPUT J, V15, P58
   Sanchez-Ordaz MA, 2021, THEOR PRACT LOG PROG, V21, P768, DOI 10.1017/S1471068421000430
   Sato T., 1995, ICLP
   Schellhorn, 1999, THESIS U ULM
   Schellhorn G, 1998, APPL LOG SER, V10, P165
   Schelog, SCHELOG LANGUAGE
   Schimpf J, 2012, THEOR PRACT LOG PROG, V12, P127, DOI 10.1017/S1471068411000469
   Schrijvers Tom, 2008, Logic Programming. Proceedings 24th International Conference, ICLP 2008, P7, DOI 10.1007/978-3-540-89982-2_2
   Schrijvers T, 2013, THEOR PRACT LOG PROG, V13, P533, DOI 10.1017/S1471068413000331
   Scryer, 2021, PROLOG SCRYER PROLOG
   Seo J, 2015, IEEE T KNOWL DATA EN, V27, P1824, DOI 10.1109/TKDE.2015.2405562
   Serafini Luciano., 2017, P S APPL COMPUTING S, P125, DOI [DOI 10.1145/3019612.3019642, 10.1145/3019612.3019642]
   Shapiro, 1983, 1428 ICOT MIT
   SHAPIRO E, 1993, COMMUN ACM, V36, P46, DOI 10.1145/153520.153534
   SHAPIRO E, 1987, CONCURRENT PROLOG CO
   Shen W., 2007, VLDB '07
   SICS, 2021, QUINT PROL HOM
   Siek, 2006, SCHEME FUNCTIONAL PR, V8192
   SIMPKINS NK, 1990, NEW GENERAT COMPUT, V8, P113, DOI 10.1007/BF03037470
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Sterling L. S., 1994, The Art of Prolog, V2nd
   STICKEL ME, 1992, THEOR COMPUT SCI, V104, P109, DOI 10.1016/0304-3975(92)90168-F
   Stratio Automotive , 2021, HOM STRAT
   Stulova N, 2018, LECT NOTES COMPUT SC, V10702, P99, DOI 10.1007/978-3-319-73305-0_7
   Sun H., 2020, P NEURIPS
   SWI, PROL HOM 2021 SWI PR
   Swift T., 2009, ASS LOGIC PROGRAMMIN, V22, P1
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   SYMONDS AJ, 1986, IBM SYST J, V25, P134, DOI 10.1147/sj.252.0134
   Syrjanen T., 2001, Lecture Notes in Computer Science, P434, DOI DOI 10.1007/3-540-45402-0_38
   Szabó P, 2006, LECT NOTES COMPUT SC, V4079, P257, DOI 10.1007/11799573_20
   Szeredi, 2004, ASS LOGIC PROGRAMMIN, P4
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   TARAU P, 1992, LECT NOTES COMPUT SC, V631, P479
   Tarau P., 2021, EPTCS, V345, P141
   Tarau P, 2012, THEOR PRACT LOG PROG, V12, P97, DOI 10.1017/S1471068411000433
   Thom, 1987, NU PROLOG REFERENCE
   Tolan S., 2019, P ICAIL, V83, P92
   Triska M., 2009, ABS09032168
   Triska M., 2021, POWER PROLOG
   UEDA K, 1986, LECT NOTES COMPUT SC, V221, P168
   UEDA K, 1990, COMPUT J, V33, P494, DOI 10.1093/comjnl/33.6.494
   van Emden, 2006, ASS LOGIC PROGRAMMIN, P3
   van Emden M. H., 1984, Journal of Logic Programming, V1, P143, DOI 10.1016/0743-1066(84)90001-3
   Van Hentenryck P., 1994, LECT NOTES COMPUTER, P293
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   Wallace M, 1999, LECT NOTES COMPUT SC, V1551, P365
   Wallace M., 1993, ADV SOFTWARE TECHNOL
   Wang Y., 2016, HIGHER ORDER ABSTRAC
   Warren, 1983, 309 ART INT CTR COMP
   Warren, 1974, 76 DEP COMP LOG U ED
   Warren, 1990, ICLP90 WORKSHOP PARA
   Warren, 1980, 141 DEP COMP LOG U E
   Warren D. H., 1975, PROLOG DEC 10 MACHIN
   Warren D. H., 1984, PRODUCT SPECIFICATIO
   Warren D. H. D., 1982, American Journal of Computational Linguistics, V8, P110
   Warren D. H. D., 1977, SIGPLAN Notices, V12, P109, DOI 10.1145/872734.806939
   Warren D. S., 1998, IFIP C P SHELT ISL N, V125, P5
   WARREN DHD, 1977, THESIS U EDINBURGH
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Wielemaker J, 2019, THEOR PRACT LOG PROG, V19, P229, DOI 10.1017/S1471068418000522
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wielemaker J, 2011, LECT NOTES COMPUT SC, V6539, P69, DOI 10.1007/978-3-642-18378-2_8
   XSB, 2021, PROLOG HOMEPAGE WELC
   Zhou N.-F., 2015, SPRINGERBRIEFS INTEL
   Zhou N.-F., 2021, USERS GUIDE PICAT
   Zhou N.-F., 2021, EPTCS, V345, P165
   Zhou NF, 2006, THEOR PRACT LOG PROG, V6, P483, DOI 10.1017/S1471068405002590
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   Zhou NF, 1996, ACM T PROGR LANG SYS, V18, P752, DOI 10.1145/236114.236120
NR 378
TC 6
Z9 7
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2022
VL 22
IS 6
BP 776
EP 858
AR PII S1471068422000102
DI 10.1017/S1471068422000102
EA MAY 2022
PG 83
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M4IE
UT WOS:000796763200001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kafle, B
   Gange, G
   Stuckey, PJ
   Schachte, P
   Sondergaard, H
AF Kafle, Bishoksan
   Gange, Graeme
   Stuckey, Peter J.
   Schachte, Peter
   Sondergaard, Harald
TI Transformation-Enabled Precondition Inference
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE precondition inference; program transformation; abstract interpretation;
   optimal precondition
ID ABSTRACT INTERPRETATION; INVARIANT GENERATION; VERIFICATION;
   SPECIALIZATION; PROGRAMS
AB Precondition inference is a non-trivial problem with important applications in program analysis and verification. We present a novel iterative method for automatically deriving preconditions for the safety and unsafety of programs. Each iteration maintains over-approximations of the set of safe and unsafe initial states, which are used to partition the program's initial states into those known to be safe, known to be unsafe and unknown. We then construct revised programs with those unknown initial states and iterate the procedure until the approximations are disjoint or some termination criteria are met. An experimental evaluation of the method on a set of software verification benchmarks shows that it can infer precise preconditions (sometimes optimal) that are not possible using previous methods.
C1 [Kafle, Bishoksan] IMDEA Software Inst, Madrid, Spain.
   [Gange, Graeme; Stuckey, Peter J.] Monash Univ, Fac IT, Clayton, Vic 3800, Australia.
   [Schachte, Peter; Sondergaard, Harald] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 IMDEA Software Institute; Monash University; University of Melbourne
RP Kafle, B (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM bishoksan.kafle@imdea.org; graeme.gange@monash.edu;
   peter.stuckey@monash.edu; schachte@unimelb.edu.au; harald@unimelb.edu.au
RI Schachte, Peter/H-4848-2016
OI Sondergaard, Harald/0000-0002-2352-1883
FU Spanish Ministry of Research, Science and Innovation [MICINN
   PID2019-108528RB-C21]
FX We thank John Gallagher and three anonymous reviewers whose suggestions
   helped improve the paper. We are also grateful for help with the use of
   VeriMap for C to CHC translation, provided to us by Emanuele De Angelis.
   Bishoksan Kafle has been partially funded by the Spanish Ministry of
   Research, Science and Innovation, grant MICINN PID2019-108528RB-C21
   ProCode and Madrid P2018/TCS-4339 BLOQUES-CM.
CR [Anonymous], 1993, Prentice Hall international series in computer science
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bakhirkin A, 2017, LECT NOTES COMPUT SC, V10422, P23, DOI 10.1007/978-3-319-66706-5_2
   Bakhirkin A, 2014, LECT NOTES COMPUT SC, V8723, P34, DOI 10.1007/978-3-319-10936-7_3
   Beyer Dirk, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P401, DOI 10.1007/978-3-030-72013-1_24
   Beyer D, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P300, DOI 10.1145/1250734.1250769
   Cassez F., 2017, LNCS, P42
   Codish M, 2002, LECT NOTES COMPUT SC, V2566, P109
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P, 2013, LECT NOTES COMPUT SC, V7737, P128
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E, 2014, SCI COMPUT PROGRAM, V95, P149, DOI 10.1016/j.scico.2014.05.017
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   Dillig I, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2509136.2509511, 10.1145/2544173.2509511]
   Doménech JJ, 2019, THEOR PRACT LOG PROG, V19, P990, DOI 10.1017/S1471068419000310
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Gallagher J., 1996, Partial Evaluation. International Seminar. Selected Papers, P115
   Gallagher J. P., 2019, VPT 2019 EPTCS, V299, P34
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Gulavani BS, 2008, LECT NOTES COMPUT SC, V4963, P443, DOI 10.1007/978-3-540-78800-3_33
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Howe JM, 2004, LECT NOTES COMPUT SC, V3049, P152
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Kafle B, 2018, THEOR PRACT LOG PROG, V18, P553, DOI 10.1017/S1471068418000091
   Kafle B, 2017, SCI COMPUT PROGRAM, V137, P125, DOI 10.1016/j.scico.2017.01.002
   Kafle B, 2017, COMPUT LANG SYST STR, V47, P2, DOI 10.1016/j.cl.2015.11.001
   KARR M, 1976, ACTA INFORM, V6, P133, DOI 10.1007/BF00268497
   Marriott K., 1993, ACM Letters on Programming Languages and Systems, V2, P181, DOI 10.1145/176454.176519
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Miné A, 2012, ELECTRON NOTES THEOR, V287, P89, DOI 10.1016/j.entcs.2012.09.009
   Moy Y, 2008, LECT NOTES COMPUT SC, V4905, P188, DOI 10.1007/978-3-540-78163-9_18
   Muthukumar K., 1990, Technical Report ACT-DC-153-90
   Padhi S, 2016, ACM SIGPLAN NOTICES, V51, P42, DOI [10.1145/2908080.2908099, 10.1145/2980983.2908099]
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Popeea C, 2013, SCI COMPUT PROGRAM, V78, P390, DOI 10.1016/j.scico.2012.07.004
   Puebla G, 1999, J LOGIC PROGRAM, V41, P279, DOI 10.1016/S0743-1066(99)00031-X
   Sankaranarayanan S, 2004, ACM SIGPLAN NOTICES, V39, P318, DOI 10.1145/982962.964028
   Seghir Mohamed Nassim, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P236, DOI 10.1007/978-3-319-12736-1_13
NR 42
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 700
EP 716
DI 10.1017/S1471068421000272
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Azzolini, D
   Riguzzi, F
AF Azzolini, Damiano
   Riguzzi, Fabrizio
TI Optimizing Probabilities in Probabilistic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic logic programming; optimization; constraints
AB Probabilistic logic programming is an effective formalism for encoding problems characterized by uncertainty. Some of these problems may require the optimization of probability values subject to constraints among probability distributions of random variables. Here, we introduce a new class of probabilistic logic programs, namely probabilistic optimizable logic programs, and we provide an effective algorithm to find the best assignment to probabilities of random variables, such that a set of constraints is satisfied and an objective function is optimized.
C1 [Azzolini, Damiano] Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
   [Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, Via Saragat 1, I-44122 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Azzolini, D (corresponding author), Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
EM damiano.azzolini@unife.it; fabrizio.riguzzi@unife.it
OI Azzolini, Damiano/0000-0002-7133-2673
CR Antuori V, 2019, IEEE C EVOL COMPUTAT, P458, DOI [10.1109/cec.2019.8789922, 10.1109/CEC.2019.8789922]
   Azzolini D, 2019, LECT NOTES COMPUT SC, V11946, P18, DOI 10.1007/978-3-030-35166-3_2
   Azzolini D, 2021, ARTIF INTELL, V294, DOI 10.1016/j.artint.2021.103452
   Babaki B, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P539
   Bellodi Elena, 2012, Inductive Logic Programming. 21st International Conference, ILP 2011. Revised Selected Papers, P61, DOI 10.1007/978-3-642-31951-8_10
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Raedt L., 2008, PROBABILISTIC INDUCT, V4911
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Gutmann B, 2008, LECT NOTES ARTIF INT, V5211, P473, DOI 10.1007/978-3-540-87479-9_49
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6911, P581, DOI 10.1007/978-3-642-23780-5_47
   Johnson Steven G., 2020, The NLopt nonlinear-optimization package
   Kimmig A., 2011, AAAI, P209
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   KRAFT D, 1994, ACM T MATH SOFTWARE, V20, P262, DOI 10.1145/192115.192124
   Latour Anna L. D., 2017, Principles and Practice of Constraint Programming. 23rd International Conference, CP 2017. Proceedings: LNCS 10416, P495, DOI 10.1007/978-3-319-66158-2_32
   Lombardi M, 2010, ARTIF INTELL, V174, P500, DOI 10.1016/j.artint.2010.02.004
   Meurer A, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.103
   Miner A.S., 2017, P 26 INT WORKSH LOG, P1
   Orsini F, 2017, MACH LEARN, V106, P1933, DOI 10.1007/s10994-017-5668-y
   Riguzzi F., 2018, FDN PROBABILISTIC LO
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Rossi RA, 2015, AAAI CONF ARTIF INTE, P4292
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T., 1995, P INT C LOG PROGR, P715
   Somenzi Fabio, 2015, CUDD: CU decision diagram package release 3.0.0
   Svanberg K, 2001, SIAM J OPTIMIZ, V12, P555
   Van den Broeck G, 2010, AAAI CONF ARTIF INTE, P1217
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Walsh T, 2002, FR ART INT, V77, P111
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 32
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 543
EP 556
AR PII S1471068421000260
DI 10.1017/S1471068421000260
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Komendantskaya, E
   Rozplokhas, D
   Basold, H
AF Komendantskaya, Ekaterina
   Rozplokhas, Dmitry
   Basold, Henning
TI The New Normal: We Cannot Eliminate Cuts in Coinductive Calculi, But We
   Can Explore Them
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Sequent Calculus; Horn Clauses; Coinduction; Cut Elimination; Theory
   Exploration
AB In sequent calculi, cut elimination is a property that guarantees that any provable formula can be proven analytically. For example, Gentzen's classical and intuitionistic calculiLKandLJenjoy cut elimination. The property is less studied in coinductive extensions of sequent calculi. In this paper, we use coinductive Horn clause theories to show that cut is not eliminable in a coinductive extension ofLJ, a system we callCLJ. We derive two further practical results from this study. We show that CoLP by Gupta et al. gives rise to cut-free proofs inCLJwith fixpoint terms, and we formulate and implement a novel method of coinductive theory exploration that provides several heuristics for discovery of cut formulae inCLJ.
C1 [Komendantskaya, Ekaterina] Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
   [Rozplokhas, Dmitry] Jet Brains Res, St Petersburg, Russia.
   [Basold, Henning] Leiden Univ, Leiden, Netherlands.
C3 Heriot Watt University; Leiden University; Leiden University - Excl LUMC
RP Komendantskaya, E (corresponding author), Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
EM ek19@hw.ac.uk; rozplokhas@gmail.com; henning@basold.eu
OI Rozplokhas, Dmitry/0000-0001-7882-4497
FU EPSRC [EP/N014758/1, EP/K031864/2, EP/K031864/1, EP/F044046/1,
   EP/F044046/2, EP/J014222/1] Funding Source: UKRI
CR Barendregt H, 2013, PERSPECT LOGIC, P1, DOI 10.1017/CBO9781139032636
   Basold H, 2019, LECT NOTES COMPUT SC, V11423, P783, DOI 10.1007/978-3-030-17184-1_28
   Blanchette JC, 2017, IEEE S LOG
   Boyer R.S., 1979, ACM MONOGRAPH SERIES
   Brotherston J, 2011, J LOGIC COMPUT, V21, P1177, DOI 10.1093/logcom/exq052
   COURCELLE B, 1983, THEOR COMPUT SCI, V25, P95, DOI 10.1016/0304-3975(83)90059-2
   Dagnino F., 2020, TPLP
   Endrullis Jorg, 2015, P C REWR TECHN APPL, P143
   Fu P., 2016, FORMAL ASPECTS COMPU
   Gentzen G., 1969, The collected papers of Gerhard Gentzen
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Kimura D., 2020, Computer Software, V37, P39
   Komendantskaya E, 2017, THEOR PRACT LOG PROG, V17, P906, DOI 10.1017/S147106841700028X
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   Miller D., 2012, PROGRAMMING HIGHER O
   Peng Fu, 2016, Functional and Logic Programming. 13th International Symposium, FLOPS 2016. Proceedings: LNCS 9613, P126, DOI 10.1007/978-3-319-29604-3_9
   Plotkin GD., 1970, Machine intelligence
   Saotome K., 2020, FLOPS 20
   Schubert A, 2018, THEOR PRACT LOG PROG, V18, P673, DOI 10.1017/S147106841800008X
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Sorensen M. H., 2006, STUDIES LOGIC
   Sulzmann M, 2007, J FUNCT PROGRAM, V17, P83, DOI 10.1017/S0956796806006137
   Troelstra Anne S., 2000, CAMBRIDGE TRACTS THE
NR 23
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 990
EP 1005
AR PII S1471068420000423
DI 10.1017/S1471068420000423
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Diéguez, M
   Schaub, T
   Schuhmann, A
AF Cabalar, Pedro
   Dieguez, Martin
   Schaub, Torsten
   Schuhmann, Anna
TI Towards Metric Temporal Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
ID LOGIC
AB We elaborate upon the theoretical foundations of a metric temporal extension of Answer Set Programming. In analogy to previous extensions of ASP with constructs from Linear Temporal and Dynamic Logic, we accomplish this in the setting of the logic of Here-and-There and its non-monotonic extension, called Equilibrium Logic. More precisely, we develop our logic on the same semantic underpinnings as its predecessors and thus use a simple time domain of bounded time steps. This allows us to compare all variants in a uniform framework and ultimately combine them in a common implementation.
C1 [Cabalar, Pedro] Univ A Coruna, La Coruna, Spain.
   [Dieguez, Martin] Univ Angers, LERIA, Angers, France.
   [Schaub, Torsten; Schuhmann, Anna] Univ Potsdam, Potsdam, Germany.
C3 Universidade da Coruna; Universite d'Angers; University of Potsdam
RP Cabalar, P (corresponding author), Univ A Coruna, La Coruna, Spain.
RI Cabalar, Pedro/AAE-5198-2020; Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
FU MINECO, Spain [TIC2017-84453-P]
FX Partially supported by MINECO, Spain, grant TIC2017-84453-P.
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   Beck H., 2016, P 26 INT JOINT C ART, P929
   Beck H, 2015, AAAI CONF ARTIF INTE, P1431
   Bosser AG, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P12
   Brandt S, 2018, J ARTIF INTELL RES, V62, P829, DOI 10.1613/jair.1.11229
   Brzoska C, 1995, LECT NOTES ARTIF INT, V897, P21
   Cabalar P., 2019, TELINGO ASP TIME, P256
   Cabalar P., 2020, P 24 EUR C ART INT E
   Cabalar P, 2018, THEOR PRACT LOG PROG, V18, P406, DOI 10.1017/S1471068418000297
   Cabalar P, 2010, LECT NOTES ARTIF INT, V6341, P64, DOI 10.1007/978-3-642-15675-5_8
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Godel K, 1932, Anzeiger Akademie der Wissenschaften Wien, Mathematisch-Naturwissenschaftliche Klasse, V69, P65
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Ouaknine J, 2005, IEEE S LOG, P188
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Son TC, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P92
   Walega PA, 2019, AAAI CONF ARTIF INTE, P3092
   Woltran S, 2019, P 15 INT C LOG PROGR
NR 25
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 783
EP 798
DI 10.1017/S1471068420000307
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bichler, M
   Morak, M
   Woltran, S
AF Bichler, Manuel
   Morak, Michael
   Woltran, Stefan
TI selp:<i>A Single-Shot Epistemic Logic Program Solver</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming methodology and applications; knowledge representation
   and nonmonotonic reasoning; technical notes and rapid communications
ID ANSWER; SEMANTICS; COMPLEXITY
AB Epistemic logic programs (ELPs) are an extension of answer set programming (ASP) with epistemic operators that allow for a form of meta-reasoning, that is, reasoning over multiple possible worlds. Existing ELP solving approaches generally rely on making multiple calls to an ASP solver in order to evaluate the ELP. However, in this paper, we show that there also exists a direct translation from ELPs into non-ground ASP with bounded arity. The resulting ASP program can thus be solved in a single shot. We then implement this encoding method, using recently proposed techniques to handle large, non-ground ASP rules, into the prototype ELP solving system "selp," which we present in this paper. This solver exhibits competitive performance on a set of ELP benchmark instances.
C1 [Bichler, Manuel; Morak, Michael; Woltran, Stefan] TU Wien, Vienna, Austria.
C3 Technische Universitat Wien
RP Bichler, M (corresponding author), TU Wien, Vienna, Austria.
EM bichler@dbai.tuwien.ac.at; michael.morak@aau.at;
   woltran@dbai.tuwien.ac.at
RI Morak, Michael/AAI-1392-2020
OI Morak, Michael/0000-0002-2077-7672
FU Austrian Science Fund (FWF) [Y698, P30930]; Austrian Science Fund (FWF)
   [P30930] Funding Source: Austrian Science Fund (FWF)
FX This work was funded by the Austrian Science Fund (FWF) under grant
   numbers Y698 and P30930.
CR Abseher M, 2017, LECT NOTES COMPUT SC, V10335, P376, DOI 10.1007/978-3-319-59776-8_30
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   BICHLER M., 2018, P ASPOCP
   Bichler M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1714
   Bichler M, 2016, THEOR PRACT LOG PROG, V16, P552, DOI 10.1017/S1471068416000338
   Bliem B, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P852
   Bodlaender H. L., 1993, Acta Cybernetica, V11, P1
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2007, ANN MATH ARTIF INTEL, V51, P123, DOI 10.1007/s10472-008-9086-5
   FABER W., 2019, P AAAI
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Flum J., 1995, SPRINGER MONOGRAPHS
   GEBSER M., 2014, ICLP TECHNICAL COMMU
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5547, P71, DOI 10.1007/978-3-642-01929-6_7
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Gelfond M., 1994, Annals of Mathematics and Artificial Intelligence, V12, P89, DOI 10.1007/BF01530762
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P386
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   KAHL P. T., 2015, J LOGIC COMPUT, pexv065
   Kahl P. T., 2014, THESIS
   KAHL P. T., 2016, P ASPOCP
   LECLERC A. P., 2018, CORR
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   MORAK M., 2016, LECT NOTES COMPUTER, V10184, P114
   Morak Michael, 2012, P ICLP, V17, P247
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Pulina L., 2016, CEUR WORKSHOP P, P1
   Shen YD, 2016, ARTIF INTELL, V237, P115, DOI 10.1016/j.artint.2016.04.004
   Shen YD, 2014, ARTIF INTELL, V213, P1, DOI 10.1016/j.artint.2014.05.001
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   ZHANG Z., 2015, P ASPOCP
NR 42
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2020
VL 20
IS 4
BP 435
EP 455
AR PII S1471068420000022
DI 10.1017/S1471068420000022
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA1TI
UT WOS:000577576500001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Alcântara, J
   Sá, S
   Acosta-Guadarrama, J
AF Alcantara, Joao
   Sa, Samy
   Acosta-Guadarrama, Juan
TI On the Equivalence Between Abstract Dialectical Frameworks and Logic
   Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Abstract Dialectical Frameworks; Normal Logic Programs; Argumentation;
   Instantiations of Argumentation Frameworks
ID SEMANTICS; ARGUMENTATION
AB A Abstract Dialectical Frameworks (ADFs) are argumentation frameworks where each node is associated with an acceptance condition. This allows us to model different types of dependencies as supports and attacks. Previous studies provided a translation from Normal Logic Programs (NLPs) to ADFs and proved the stable models semantics for a normal logic program has an equivalent semantics to that of the corresponding ADF. However, these studies failed in identifying a semantics for ADFs equivalent to a three-valued semantics (as partial stable models and well-founded models) for NLPs. In this work, we focus on a fragment of ADFs, called Attacking Dialectical Frameworks (ADF(+) s), and provide a translation from NLPs to ADF(+) s robust enough to guarantee the equivalence between partial stable models, well-founded models, regular models, stable models semantics for NLPs and respectively complete models, grounded models, preferred models, stable models for ADFs. In addition, we define a new semantics for ADF(+) s, called L-stable, and show it is equivalent to the L-stable semantics for NLPs.
C1 [Alcantara, Joao; Sa, Samy] Univ Fed Ceara, Fortaleza, Ceara, Brazil.
   [Acosta-Guadarrama, Juan] Autonomous Univ Juarez, Ciudad Juarez, Mexico.
C3 Universidade Federal do Ceara; Universidad Autonoma de Ciudad Juarez
RP Alcântara, J (corresponding author), Univ Fed Ceara, Fortaleza, Ceara, Brazil.
EM jnando@lia.ufc.br; samy@ufc.br; juan.acosta@uacj.mx
RI Alcântara, João/JHT-9378-2023; Alcantara, Joao/J-5029-2015
OI Alcantara, Joao/0000-0002-4297-2970
CR [Anonymous], 1997, Journal of Applied Non-Classical Logics, DOI DOI 10.1080/11663081.1997.10510900
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   Brass S, 1995, LECT NOTES ARTIF INT, V928, P85
   Brewka Gerhard., 2010, Proceedings of the International Conference on Principles of Knowledge Representation and Reasoning, P102
   Brewka Gerhard., 2013, 23rd International Joint Conference on Artificial Intelligence, P803
   Buss Samuel R., 1987, P 19 ANN ACM S THEOR, P123, DOI [10.1145/28395.28409, DOI 10.1145/28395.28409]
   Caminada M, 2006, FR ART INT, V144, P121
   Caminada M, 2017, J ARTIF INTELL RES, V60, P779, DOI 10.1613/jair.5581
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Caminada Martinus Wigbertus Antonius, 2015, IFCOLOG J LOGICS THE
   Dung PM, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P199, DOI 10.1007/978-0-387-98197-0_10
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   Ellmauthaler S., 2012, THESIS
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kleene Stephen Cole, 1952, Introduction to Metamathematics, V483
   Polberg S, 2016, LECT NOTES COMPUT SC, V10021, P430, DOI 10.1007/978-3-319-48758-8_28
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Sandvik PC, 2006, INT OFFSHORE POLAR E, P54
   SCHULZ C., 2015, 29 AAAI C ART INT
   SIMARI GR, 1992, ARTIF INTELL, V53, P125, DOI 10.1016/0004-3702(92)90069-A
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
   Toni F, 2014, ARGUM COMPUT, V5, P89, DOI 10.1080/19462166.2013.869878
   Wu Y., 2009, STUDIA LOGICA, V93, P383, DOI DOI 10.1007/S11225-009-9210-5
NR 24
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 941
EP 956
DI 10.1017/S1471068419000280
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Ianni, G
   Pacenza, F
   Perri, S
   Zangari, J
AF Calimeri, Francesco
   Ianni, Giovambattista
   Pacenza, Francesco
   Perri, Simona
   Zangari, Jessica
TI Incremental Answer Set Programming with Overgrounding
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Knowledge Representation; Answer Set Programming; Stream Reasoning;
   Grounding; Instantiation of Logic Programs; Overgrounding
ID SEMANTICS
AB Repeated executions of reasoning tasks for varying inputs are necessary in many applicative settings, such as stream reasoning. In this context, we propose an incremental grounding approach for the answer set semantics. We focus on the possibility of generating incrementally larger ground logic programs equivalent to a given non-ground one; so called overgrounded programs can be reused in combination with deliberately many different sets of inputs. Updating overgrounded programs requires a small effort, thus making the instantiation of logic programs considerably faster when grounding is repeated on a series of inputs similar to each other. Notably, the proposed approach works "under the hood", relieving designers of logic programs from controlling technical aspects of grounding engines and answer set systems. In this work we present the theoretical basis of the proposed incremental grounding technique, we illustrate the consequent repeated evaluation strategy and report about our experiments.
C1 [Calimeri, Francesco; Ianni, Giovambattista; Pacenza, Francesco; Perri, Simona; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
C3 University of Calabria
RP Calimeri, F (corresponding author), Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
EM calimeri@mat.unical.it; ianni@mat.unical.it; pacenza@mat.unical.it;
   perri@mat.unical.it; zangari@mat.unical.it
RI Ianni, Giovambattista/IQS-4399-2023; Zangari, Jessica/AAA-6522-2021;
   Perri, Simona/IQV-7425-2023; Pacenza, Francesco/HLH-1328-2023; Ianni,
   Giovambattista/I-7826-2012; Calimeri, Francesco/J-1935-2012
OI Ianni, Giovambattista/0000-0003-0534-6425; Zangari,
   Jessica/0000-0002-6418-7711; Pacenza, Francesco/0000-0001-6632-3492;
   Calimeri, Francesco/0000-0002-0866-0834; Perri,
   Simona/0000-0002-8036-5709
FU Italian MIUR Ministry; Presidency of the Council of Ministers under
   project "Declarative Reasoning over Streams" under the "PRIN" 2017 call
   [CUP H24I17000080001, 2017M9C25L_001]; Italian MISE Ministry under
   project "S2BDW" - "Horizon2020" PON IC2014-20 [F/050389/01-03/X32];
   Regione Calabria under project "DLV LargeScale" - POR 2014-20 [CUP
   J28C17000220006]
FX This work has been partially supported by the Italian MIUR Ministry and
   the Presidency of the Council of Ministers under project "Declarative
   Reasoning over Streams" under the "PRIN" 2017 call (CUP H24I17000080001,
   project 2017M9C25L_001), by the Italian MISE Ministry under project
   "S2BDW" (F/050389/01-03/X32) - "Horizon2020" PON I&C2014-20 and by
   Regione Calabria under project "DLV LargeScale" (CUP J28C17000220006) -
   POR 2014-20.
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   [Anonymous], 1988, PRINCIPLES COMPUTER
   [Anonymous], 1930, RECHERCHES THEORIE D
   [Anonymous], 20 RCRA INT WORKSH 2
   Beck H, 2017, THEOR PRACT LOG PROG, V17, P744, DOI 10.1017/S1471068417000370
   Bogaerts B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1737
   CALIMERI F., 2019, THEOR PRACT LOG PROG, P1
   Calimeri F, 2018, LECT NOTES COMPUT SC, V11092, P310, DOI 10.1007/978-3-319-99906-7_23
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Cat B., 2012, LIPICS, V17, P201
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Motik B, 2019, ARTIF INTELL, V269, P76, DOI 10.1016/j.artint.2018.12.004
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Perez-Liebana D, 2016, AAAI CONF ARTIF INTE, P4335
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
NR 32
TC 10
Z9 10
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 957
EP 973
DI 10.1017/S1471068419000292
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Areias, M
   Rocha, R
AF Areias, Miguel
   Rocha, Ricardo
TI Table space designs for implicit and explicit concurrent tabled
   evaluation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Tabling; Table Space; Concurrency; Implementation
ID SCALABLE MEMORY ALLOCATOR; LOGIC PROGRAMS; BATCHED EVALUATION;
   OR-PARALLELISM; EFFICIENT; PROLOG; TRIE; IMPLEMENTATION; EXECUTION;
   LIBRARY
AB One of the main advantages of Prolog is its potential for the implicit exploitation of parallelism and, as a high-level language, Prolog is also often used as a means to explicitly control concurrent tasks. Tabling is a powerful implementation technique that overcomes some limitations of traditional Prolog systems in dealing with recursion and redundant subcomputations. Given these advantages, the question that arises is if tabling has also the potential for the exploitation of concurrency/parallelism. On one hand, tabling still exploits a search space as traditional Prolog but, on the other hand, the concurrent model of tabling is necessarily far more complex, since it also introduces concurrency on the access to the tables. In this paper, we summarize Yap's main contributions to concurrent tabled evaluation and we describe the design and implementation challenges of several alternative table space designs for implicit and explicit concurrent tabled evaluation that represent different tradeoffs between concurrency and memory usage. We also motivate for the advantages of using fixed-size and lock freedata structures, elaborate on the key role that the engine's memory allocator plays on such environments, and discuss how Yap's mode-directed tabling support can be extended to concurrent evaluation. Finally, we present our future perspectives toward an efficient and novel concurrent framework which integrates both implicit and explicit concurrent tabled evaluation in a single Prolog engine.
C1 [Areias, Miguel] Univ Porto, CRACS & INESC TEC, Rua Campo Alegre 1021-1055, P-4169007 Porto, Portugal.
   Univ Porto, Fac Sci, Rua Campo Alegre 1021-1055, P-4169007 Porto, Portugal.
C3 Universidade do Porto; INESC TEC; Universidade do Porto
RP Areias, M (corresponding author), Univ Porto, CRACS & INESC TEC, Rua Campo Alegre 1021-1055, P-4169007 Porto, Portugal.
EM miguel-areias@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI Areias, Miguel/O-6499-2019; Areias, Miguel/F-1918-2015; Rocha,
   Ricardo/B-2862-2012
OI Areias, Miguel/0000-0003-1589-3174; Rocha, Ricardo/0000-0003-4502-8835
FU ERDF (European Regional Development Fund) [9471-RIDTI]; ERDF (European
   Regional Development Fund) through COMPETE 2020 Programme
   [POCI-01-0145-FEDER-006961]; FCT (Fundacao para a Ciencia e a
   Tecnologia) [UID/EEA/50014/2013]; FCT grant [SFRH/BPD/108018/2015];
   Fundação para a Ciência e a Tecnologia [SFRH/BPD/108018/2015] Funding
   Source: FCT
FX This work is partially funded by the ERDF (European Regional Development
   Fund) through Project 9471-RIDTI - Reforcar a Investigacao, o
   Desenvolvimento Tecnologico e a Inovacao - and through the COMPETE 2020
   Programme within project POCI-01-0145-FEDER-006961, and by National
   Funds through the FCT (Fundacao para a Ciencia e a Tecnologia) as part
   of project UID/EEA/50014/2013. Miguel Areias is funded by the FCT grant
   SFRH/BPD/108018/2015.
CR Alba E, 2002, LECT NOTES COMPUT SC, V2400, P927
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   [Anonymous], 1994, Introduction to parallel computing: design and analysis of algorithms
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2008, Using OpenMP: Portable Shared Memory Parallel Programming
   Areias Miguel, 2014, Practical Aspects of Declarative Languages. 16th International Symposium, PADL 2014. Proceedings: LNCS 8324, P168, DOI 10.1007/978-3-319-04132-2_12
   Areias M, 2017, J SYST SOFTWARE, V125, P417, DOI 10.1016/j.jss.2016.06.060
   Areias M, 2016, INT J PARALLEL PROG, V44, P386, DOI 10.1007/s10766-014-0346-1
   Areias M, 2015, COMM COM INF SC, V563, P113, DOI 10.1007/978-3-319-27653-3_11
   Areias M, 2013, COMPUT SCI INF SYST, V10, P1775, DOI 10.2298/CSIS121129066A
   Areias M, 2012, INT C PAR DISTRIB SY, P636, DOI 10.1109/ICPADS.2012.91
   Areias M, 2012, THEOR PRACT LOG PROG, V12, P427, DOI 10.1017/S1471068412000117
   Areias M, 2011, THEOR PRACT LOG PROG, V11, P681, DOI 10.1017/S147106841100024X
   Bagwell P., 2001, ES GRANDS CHAMPS, V1195
   Berger ED, 2000, ACM SIGPLAN NOTICES, V35, P117, DOI 10.1145/384264.379232
   BLUMOFE RD, 1995, SIGPLAN NOTICES, V30, P207
   Carro M, 1999, LOGIC PROGRAMM, P320
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa J, 2009, LECT NOTES COMPUT SC, V5649, P205, DOI 10.1007/978-3-642-02846-5_20
   COSTA VS, 1991, SIGPLAN NOTICES, V26, P83, DOI 10.1145/109626.109635
   Cruz F, 2010, LECT NOTES ARTIF INT, V6341, P130, DOI 10.1007/978-3-642-15675-5_13
   de Guzmán PC, 2008, LECT NOTES COMPUT SC, V4902, P197
   Desouter B, 2015, THEOR PRACT LOG PROG, V15, P419, DOI 10.1017/S1471068415000137
   Evans JA, 2006, P TECHN BSD C
   Fonseca NA, 2009, MACH LEARN, V74, P257, DOI 10.1007/s10994-008-5094-2
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Freire J., 1996, Programming Languages: Implementations, Logics, and Programs. 8th International Symposium, PLILP '96 Proceedings, P243
   Ghemawat S., TCMALLOC THREAD CACH
   Gidenstam A, 2010, ALGORITHMICA, V58, P304, DOI 10.1007/s00453-008-9268-x
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Gupta G, 1999, LOGIC PROGRAMM, P290
   Hai-Feng Guo, 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P181
   Herlihy M. P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P13, DOI 10.1145/41625.41627
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   Herrmann C. A., 2000, Parallel Processing Letters, V10, P239, DOI 10.1016/S0129-6264(00)00023-8
   Johnson E, 1999, LECT NOTES COMPUT SC, V1722, P284
   Kumar V., 2002, Introduction to parallel computing
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   Loogen R, 2005, J FUNCT PROGRAM, V15, P431, DOI 10.1017/S0956796805005526
   Lusk E., 1988, International Conference on Fifth Generation Computer Systems, P819
   Marques R, 2010, LECT NOTES COMPUT SC, V5937, P264, DOI 10.1007/978-3-642-11503-5_22
   Marques R, 2008, LECT NOTES COMPUT SC, V5366, P206, DOI 10.1007/978-3-540-89982-2_24
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Masmano Miguel., 2006, Proceedings of the 4th International Workshop on Java Technologies for Real-time and Embedded Systems, JTRES '06, P68
   Moura P., 2008, 1321152007 ISOIEC DT
   Pelaez I., 2007, International Conference on Parallel Processing and Applied Mathematics, number 4967 in LNCS, P1104, DOI DOI 10.1007/978-3-540-68111-3117
   Pontelli E, 1997, LOGIC PROGRAMM, P123
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Rao Prasad., 1996, PROC 1996 JOINT INT, P112
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Rocha R., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P43
   Rocha R, 1999, LECT NOTES COMPUT SC, V1551, P137
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Santos Joao, 2013, Practical Aspects of Declarative Languages. 15th International Symposium, PADL 2013. Proceedings: LNCS 7752, P141, DOI 10.1007/978-3-642-45284-0_10
   Shen K., 1992, Joint International Conference and Symposium on Logic Programming, P717
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   Stivala A, 2010, J PARALLEL DISTR COM, V70, P839, DOI 10.1016/j.jpdc.2010.01.004
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tenenbaum A.M., 1990, DATA STRUCTURES USIN
   Zhou N. F., 2015, CONSTRAINT SOLVING P
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   [No title captured]
   [No title captured]
NR 64
TC 0
Z9 0
U1 1
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 950
EP 992
DI 10.1017/S147106841800039X
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000008
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Charalambidis, A
   Rondogiannis, P
   Symeonidou, I
AF Charalambidis, Angelos
   Rondogiannis, Panos
   Symeonidou, Ioanna
TI Approximation Fixpoint Theory and the Well-Founded Semantics of
   Higher-Order Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Higher-Order Logic Programming; Negation in Logic Programming;
   Approximation Fixpoint Theory
ID EXTENSIONAL SEMANTICS; NEGATION
AB We define a novel, extensional, three-valued semantics for higher-order logic programs with negation. The new semantics is based on interpreting the types of the source language as three-valued Fitting-monotonic functions at all levels of the type hierarchy. We prove that there exists a bijection between such Fitting-monotonic functions and pairs of two-valued-result functions where the first member of the pair is monotone-antimonotone and the second member is antimonotone-monotone. By deriving an extension of consistent approximation fixpoint theory (Denecker et al. 2004) and utilizing the above bijection, we define an iterative procedure that produces for any given higher-order logic program a distinguished extensional model. We demonstrate that this model is actually a minimal one. Moreover, we prove that our construction generalizes the familiar well-founded semantics for classical logic programs, making in this way our proposal an appealing formulation for capturing the well-founded semantics for higher-order logic programs.
C1 [Charalambidis, Angelos; Rondogiannis, Panos; Symeonidou, Ioanna] Univ Athens, Dept Informat & Telecommun, Athens, Greece.
C3 National & Kapodistrian University of Athens
RP Charalambidis, A (corresponding author), Univ Athens, Dept Informat & Telecommun, Athens, Greece.
EM acharala@di.uoa.gr; prondo@di.uoa.gr; sioanna@di.uoa.gr
OI Charalambidis, Angelos/0000-0001-7437-410X
CR Bezem M, 1999, LOGIC PROGRAMM, P395
   Bloom S.L., 1993, EATCS MONOGRAPHS THE, DOI DOI 10.1007/978-3-642-78034-9
   Carayol A, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P533
   Charalambidis A, 2017, THEOR COMPUT SCI, V668, P27, DOI 10.1016/j.tcs.2017.01.005
   Charalambidis A, 2014, THEOR PRACT LOG PROG, V14, P725, DOI 10.1017/S1471068414000313
   Charalambidis A, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499942
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M., 2000, KLUWER INT SERIES EN, P127
   Denecker Marc, 2012, Correct Reasoning, P178
   Esik Z., 2015, LOGIC LANGUAGE INFOR
   Ésik Z, 2015, THEOR COMPUT SCI, V574, P18, DOI 10.1016/j.tcs.2015.01.032
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Rondogiannis P, 2017, THEOR PRACT LOG PROG, V17, P974, DOI 10.1017/S1471068417000357
   Rondogiannis P, 2016, LECT NOTES COMPUT SC, V10021, P447, DOI 10.1007/978-3-319-48758-8_29
   Tennent R.D, 1991, Prentice Hall International Series in Computer Science
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   WADGE WW, 1991, LOGIC PROGRAMM, P289
NR 20
TC 6
Z9 6
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 421
EP 437
DI 10.1017/S1471068418000108
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400009
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Sato, T
AF Sato, Taisuke
TI A linear algebraic approach to datalog evaluation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Datalog; least model; matrix; vector space
ID ALGORITHMS
AB We propose a fundamentally new approach to Datalog evaluation. Given a linear Datalog program DB written using N constants and binary predicates, we first translate if-and-only-if completions of clauses in DB into a set Eq(DB) of matrix equations with a non-linear operation, where relations in MDB, the least Herbrand model of DB, are encoded as adjacency matrices. We then translate Eq(DB) into another, but purely linear matrix equations Eq(DB). It is proved that the least solution of Eq(DB) in the sense of matrix ordering is converted to the least solution of Eq(DB) and the latter gives MDB as a set of adjacency matrices. Hence, computing the least solution of Eq(DB) is equivalent to computing MDB specified by DB. For a class of tail recursive programs and for some other types of programs, our approach achieves O(N-3) time complexity irrespective of the number of variables in a clause since only matrix operations costing O(N-3) or less are used. We conducted two experiments that compute the least Herbrand models of linear Datalog programs. The first experiment computes transitive closure of artificial data and real network data taken from the Koblenz Network Collection. The second one compared the proposed approach with the state-of-the-art symbolic systems including two Prolog systems and two ASP systems, in terms of computation time for a transitive closure program and the same generation program. In the experiment, it is observed that our linear algebraic approach runs 10(1) similar to 10(4) times faster than the symbolic systems when data is not sparse. Our approach is inspired by the emergence of big knowledge graphs and expected to contribute to the realization of rich and scalable logical inference for knowledge graphs.
C1 [Sato, Taisuke] Natl Inst Informat, AI Res Ctr AIST, Tokyo, Japan.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan
RP Sato, T (corresponding author), Natl Inst Informat, AI Res Ctr AIST, Tokyo, Japan.
EM satou.taisuke@aist.go.jp
RI sato, taisuke/Q-3245-2016
OI sato, taisuke/0000-0001-9062-0729
FU New Energy and Industrial Technology Development Organization (NEDO)
FX This research is supported in part by a project commissioned by the New
   Energy and Industrial Technology Development Organization (NEDO).
CR Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   [Anonymous], 2014, ACL 2014 WORKSH SEM
   Bartels R., 1972, COMMUN ACM, V15, P9
   Bollacker K., 2008, P 2008 ACM SIGMOD IN, P1247, DOI 10.1145/1376616.1376746
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Cichocki A., 2009, NONNEGATIVE MATRIX T, DOI 10.1002/9780470747278
   COPPERSMITH D, 1990, J SYMB COMPUT, V9, P251, DOI 10.1016/S0747-7171(08)80013-2
   Dong XL, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P601, DOI 10.1145/2623330.2623623
   Gebser M., 2014, TECHN COMM 30 INT C, V14, P1
   GOLUB GH, 1979, IEEE T AUTOMAT CONTR, V24, P909, DOI 10.1109/TAC.1979.1102170
   Granat R, 2009, SPRINGER SER OPTIM A, V27, P3, DOI 10.1007/978-0-387-09707-7_1
   Grefenstette E, 2013, Proceedings of the second joint conference on lexical and computational semantics (*SEM), volume 1: Proceedings of the main conference and the shared task: Semantic textual similarity, P1
   Jonsson I, 2002, ACM T MATH SOFTWARE, V28, P392, DOI 10.1145/592843.592845
   Kolda TG, 2009, SIAM REV, V51, P455, DOI 10.1137/07070111X
   Krompass D, 2014, LECT NOTES COMPUT SC, V8797, P114, DOI 10.1007/978-3-319-11915-1_8
   Kunegis J, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P1343
   Lin F., 2013, TECHNICAL REPORT
   Lloyd JohnWylie., 1993, FDN LOGIC PROGRAMMIN, Vsecond
   Nickel M, 2016, P IEEE, V104, P11, DOI 10.1109/JPROC.2015.2483592
   Nickel Maximilian., 2013, Tensor Factorization for Relational Learning
   Rocktaschel T., 2015, ANN C N AM CHAPT ASS, P1119
   Saberi A, 2007, SYST CONTROL-FOUND A, P1, DOI 10.1007/978-0-8176-4564-9
   Simoncini V, 2016, SIAM REV, V58, P377, DOI 10.1137/130912839
   SUCHANEK Fabian M., 2007, 16 INT WORLD WID WEB, V16, P697, DOI DOI 10.1145/1242572.1242667
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tuncay Tekle K., 2010, P 12 INT ACM SIGPLAN, P35, DOI DOI 10.1145/1836089.1836094
   Warren D. S., 1999, TECHNICAL REPORT
   Yang Bishan., 2015, ICLR
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
NR 30
TC 13
Z9 13
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2017
VL 17
IS 3
BP 244
EP 265
DI 10.1017/S1471068417000023
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EV5HR
UT WOS:000401795100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Katzouris, N
   Artikis, A
   Paliouras, G
AF Katzouris, Nikos
   Artikis, Alexander
   Paliouras, Georgios
TI Online learning of event definitions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Inductive Logic Programming; Event Calculus; Online Learning
ID LOGIC; ABDUCTION; INDUCTION
AB Systems for symbolic event recognition infer occurrences of events in time using a set of event definitions in the form of first-order rules. The Event Calculus is a temporal logic that has been used as a basis in event recognition applications, providing among others, direct connections to machine learning, via Inductive Logic Programming (ILP). We present an ILP system for online learning of Event Calculus theories. To allow for a single-pass learning strategy, we use the Hoeffding bound for evaluating clauses on a subset of the input stream. We employ a decoupling scheme of the Event Calculus axioms during the learning process, that allows to learn each clause in isolation. Moreover, we use abductive-inductive logic programming techniques to handle unobserved target predicates. We evaluate our approach on an activity recognition application and compare it to a number of batch learning techniques. We obtain results of comparable predicative accuracy with significant speed-ups in training time. We also outperform hand-crafted rules and match the performance of a sound incremental learner that can only operate on noise-free datasets.
C1 [Katzouris, Nikos] Univ Athens, Dept Informat & Telecommun, Athens, Greece.
   [Artikis, Alexander] Univ Piraeus, Dept Maritime Studies, Piraeus, Greece.
   [Katzouris, Nikos; Artikis, Alexander; Paliouras, Georgios] Natl Ctr Sci Res Demokritos, Inst Informat & Telecommun, Athens, Greece.
C3 National & Kapodistrian University of Athens; University of Piraeus;
   National Centre of Scientific Research "Demokritos"
RP Katzouris, N (corresponding author), Univ Athens, Dept Informat & Telecommun, Athens, Greece.; Katzouris, N (corresponding author), Natl Ctr Sci Res Demokritos, Inst Informat & Telecommun, Athens, Greece.
EM nkatz@iit.demokritos.gr; a.artikis@iit.demokritos.gr;
   paliourg@iit.demokritos.gr
RI Artikis, Alexander/AAC-2692-2020
OI Artikis, Alexander/0000-0001-6899-4599
CR [Anonymous], P IJCAI 2003 WORKSH
   [Anonymous], 2009, P 2009 ACM S APPL CO
   [Anonymous], 2013, LECT NOTES COMPUTER
   Artikis A, 2015, IEEE T KNOWL DATA EN, V27, P895, DOI 10.1109/TKDE.2014.2356476
   Artikis A, 2010, INT J ARTIF INTELL T, V19, P193, DOI 10.1142/S021821301000011X
   Blockeel H, 1998, ARTIF INTELL, V101, P285, DOI 10.1016/S0004-3702(98)00034-4
   Blockeel H, 1999, DATA MIN KNOWL DISC, V3, P59, DOI 10.1023/A:1009867806624
   De Raedt L, 2008, COGN TECHNOL, P1
   Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   Dhurandhar A, 2012, KNOWL INF SYST, V31, P55, DOI 10.1007/s10115-011-0406-4
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Domingos P., 2001, P 18 INT C MACH LEAR, P106
   Esposito F, 2000, MACH LEARN, V38, P133, DOI 10.1023/A:1007638124237
   Etzion O., 2010, Event Processing in Action, Vfirst
   Gama J, 2010, CH CRC DATA MIN KNOW, P1
   Gama J., 2007, Learning from data streams: processing techniques in sensor networks
   Gama Joao, 2011, 22 INT JOINT C ART I
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Hang Yang, 2011, Data Warehousing and Knowledge Discovery. Proceedings 13th International Conference, DaWaK 2011, P471, DOI 10.1007/978-3-642-23544-3_36
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Huynh TN, 2009, LECT NOTES ARTIF INT, V5781, P564, DOI 10.1007/978-3-642-04180-8_54
   Jensen D., 1999, AISTATS
   Jensen D., 2002, INDUCTIVE LOGIC PROG, P101
   Katzouris N, 2015, MACH LEARN, V100, P555, DOI 10.1007/s10994-015-5512-1
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   RICHARDS BL, 1995, MACH LEARN, V19, P95
   Skarlatidis A, 2015, ACM T COMPUT LOG, V16, DOI 10.1145/2699916
NR 29
TC 22
Z9 22
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 817
EP 833
DI 10.1017/S1471068416000260
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Faber, W
   Gebser, M
AF Alviano, Mario
   Faber, Wolfgang
   Gebser, Martin
TI Rewriting recursive aggregates in answer set programming: back to
   monotonicity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE answer set programming; polynomial faithful and modular translation;
   aggregation functions
ID LOGIC PROGRAMS; SEMANTICS; COMPLEXITY
AB Aggregation functions are widely used in answer set programming for representing and reasoning on knowledge involving sets of objects collectively. Current implementations simplify the structure of programs in order to optimize the overall performance. In particular, aggregates are rewritten into simpler forms known as monotone aggregates. Since the evaluation of normal programs with monotone aggregates is in general on a lower complexity level than the evaluation of normal programs with arbitrary aggregates, any faithful translation function must introduce disjunction in rule heads in some cases. However, no function of this kind is known. The paper closes this gap by introducing a polynomial, faithful, and modular translation for rewriting common aggregation functions into the simpler form accepted by current solvers. A prototype system allows for experimenting with arbitrary recursive aggregates, which are also supported in the recent version 4.5 of the grounder GRINGO, using the methods presented in this paper.
C1 [Alviano, Mario] Univ Calabria, I-87030 Commenda Di Rende, Italy.
   [Faber, Wolfgang] Univ Huddersfield, Huddersfield HD1 3DH, W Yorkshire, England.
   [Gebser, Martin] Aalto Univ, HIIT, Espoo, Finland.
C3 University of Calabria; University of Huddersfield; Aalto University
RP Alviano, M (corresponding author), Univ Calabria, I-87030 Commenda Di Rende, Italy.
RI Gebser, Martin/B-7169-2018; Alviano, Mario/H-1355-2012; Faber,
   Wolfgang/H-2316-2012
OI Faber, Wolfgang/0000-0002-0330-5868
FU MIUR; Regione Calabria, POR Calabria FESR; National Group for Scientific
   Computation (GNCS-INDAM); Finanziamento Giovani Ricercatori UNICAL; AoF
   within the Finnish Centre of Excellence in Computational Inference
   Research (COIN) [251170]
FX Mario Alviano was partially supported by MIUR within project "SI-LAB
   BA2KNOW - Business Analitycs to Know", by Regione Calabria, POR Calabria
   FESR 2007-2013 within project "ITravel PLUS" and project "KnowRex", by
   the National Group for Scientific Computation (GNCS-INDAM), and by
   Finanziamento Giovani Ricercatori UNICAL. Martin Gebser was supported by
   AoF (grant #251170) within the Finnish Centre of Excellence in
   Computational Inference Research (COIN).
CR Abseher M, 2014, 7 INT WORKSH ANSW SE
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Alviano M, 2011, J ARTIF INTELL RES, V42, P487
   Bartholomew M., 2011, AAAI 2011 SPRING S L, P16
   Berman P, 2002, J COMPUT SYST SCI, V65, P332, DOI 10.1006/jcss.2002.1852
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Bomanson J, 2013, LECT NOTES COMPUT SC, V8148, P187, DOI 10.1007/978-3-642-40564-8_19
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2014, J ARTIF INTELL RES, V49, P269, DOI 10.1613/jair.4175
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Janhunen T., 2012, LNCS, V7265, P363
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Liu GH, 2013, THEOR PRACT LOG PROG, V13, P1, DOI [10.1017/S147106841100038x, 10.1017/S147106841100038X]
   Liu LG, 2006, J ARTIF INTELL RES, V27, P299, DOI 10.1613/jair.2009
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Shen YD, 2014, ARTIF INTELL, V213, P1, DOI 10.1016/j.artint.2014.05.001
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
NR 36
TC 23
Z9 23
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 559
EP 573
DI 10.1017/S1471068415000228
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200011
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Falaschi, M
   Olarte, C
   Palamidessi, C
AF Falaschi, Moreno
   Olarte, Carlos
   Palamidessi, Catuscia
TI Abstract interpretation of temporal concurrent constraint programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE timed concurrent constraint programming; process calculi; abstract
   interpretation; denotational semantics; reactive systems
ID SEMANTICS; DIAGNOSIS; SECURITY; MODELS
AB Timed Concurrent Constraint Programming (tcc) is a declarative model for concurrency offering a logic for specifying reactive systems, i.e., systems that continuously interact with the environment. The universal tcc formalism (utcc) is an extension of tcc with the ability to express mobility. Here mobility is understood as communication of private names as typically done for mobile systems and security protocols. In this paper we consider the denotational semantics for tcc, and extend it to a "collecting" semantics for utcc based on closure operators over sequences of constraints. Relying on this semantics, we formalize a general framework for data flow analyses of tcc and utcc programs by abstract interpretation techniques. The concrete and abstract semantics that we propose are compositional, thus allowing us to reduce the complexity of data flow analyses. We show that our method is sound and parametric with respect to the abstract domain. Thus, different analyses can be performed by instantiating the framework. We illustrate how it is possible to reuse abstract domains previously defined for logic programming to perform, for instance, a groundness analysis for tcc programs. We show the applicability of this analysis in the context of reactive systems. Furthermore, we also make use of the abstract semantics to exhibit a secrecy flaw in a security protocol. We also show how it is possible to make an analysis which may show that tcc programs are suspension-free. This can be useful for several purposes, such as for optimizing compilation or for debugging.
C1 [Falaschi, Moreno] Univ Siena, Dipartimento Ingn Informaz & Sci Matemat, I-53100 Siena, Italy.
   [Olarte, Carlos] Pontificia Univ Javeriana, Dept Elect & Ciencias Computac, Cali, Colombia.
   [Palamidessi, Catuscia] Ecole Polytech, INRIA, Palaiseau, France.
   [Palamidessi, Catuscia] Ecole Polytech, LIX, Palaiseau, France.
C3 University of Siena; Pontificia Universidad Javeriana; Institut
   Polytechnique de Paris; Ecole Polytechnique; Inria; Institut
   Polytechnique de Paris; Ecole Polytechnique
RP Falaschi, M (corresponding author), Univ Siena, Dipartimento Ingn Informaz & Sci Matemat, Via Laterina 8, I-53100 Siena, Italy.
EM moreno.falaschi@unisi.it; carlosolarte@javerianacali.edu.co;
   catuscia@lix.polytechnique.fr
RI Palamidessi, Catuscia/ABA-2935-2020; Olarte, Carlos/J-4341-2014
OI Palamidessi, Catuscia/0000-0003-4597-7002; FALASCHI,
   Moreno/0000-0002-6659-3828; Olarte, Carlos/0000-0002-7264-7773
FU Colciencias [1251-521-28471]; Digiteo fund; DGAR fund
FX We thank Frank D. Valencia, Francois Fages, and Remy Haemmerle for
   insightful discussions on different subjects related to this work. We
   also thank anonymous reviewers for their detailed comments. Special
   thanks to Emanuele D'Osualdo for his careful remarks and suggestions for
   improving the paper. This work has been partially supported by grant
   1251-521-28471 from Colciencias, and by Digiteo and DGAR funds for
   visitors.
CR [Anonymous], P 2 INT WORKSH PLACE
   Armando A, 2008, INT J INF SECUR, V7, P3, DOI 10.1007/s10207-007-0041-y
   Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bodei C, 2010, J COMPUT SECUR, V18, P229, DOI 10.3233/JCS-2010-0361
   Boreale M, 2001, LECT NOTES COMPUT SC, V2076, P667
   Codish M., 1994, Static Analysis. First International Static Analysis Symposium, SAS '94 Proceedings, P281
   Codish M, 1997, J LOGIC PROGRAM, V30, P53, DOI 10.1016/S0743-1066(96)00013-1
   CODISH M, 1994, ACM T PROGR LANG SYS, V16, P649, DOI 10.1145/177492.177656
   Codish M, 1999, ACM T PROGR LANG SYS, V21, P948, DOI 10.1145/330249.330252
   Comini M, 2011, THEOR PRACT LOG PROG, V11, P487, DOI 10.1017/S1471068411000135
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   DEBOER FS, 1995, THEOR COMPUT SCI, V151, P37, DOI 10.1016/0304-3975(95)00047-Z
   DeBoer FS, 1997, ACM T PROGR LANG SYS, V19, P685, DOI 10.1145/265943.265954
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   Escobar S., 2011, CoRR
   Fages F, 2001, INFORM COMPUT, V165, P14, DOI 10.1006/inco.2000.3002
   Falaschi M, 2007, LECT NOTES COMPUT SC, V4670, P271, DOI 10.1007/978-3-540-74610-2_19
   Falaschi M, 1997, INFORM COMPUT, V137, P41, DOI 10.1006/inco.1997.2638
   Falaschi M, 1997, THEOR COMPUT SCI, V183, P281, DOI 10.1016/S0304-3975(97)00328-9
   Falaschi M., 1993, Proceedings of Eighth Annual IEEE Symposium on Logic in Computer Science (Cat. No.93CH3328-2), P210, DOI 10.1109/LICS.1993.287586
   Falaschi M, 2006, THEOR PRACT LOG PROG, V6, P265, DOI 10.1017/S1471068406002675
   Falaschi M, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P207, DOI 10.1145/1599410.1599436
   Fiore M, 2001, P IEEE CSFW, P160, DOI 10.1109/CSFW.2001.930144
   Giacobazzi R, 1995, J LOGIC PROGRAM, V25, P191, DOI 10.1016/0743-1066(95)00038-0
   Haemmerlé R, 2007, LECT NOTES COMPUT SC, V4855, P544
   Hildebrandt T, 2009, LECT NOTES COMPUT SC, V5649, P417, DOI 10.1007/978-3-642-02846-5_34
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jagadeesan R., 2005, P 7 ACM SIGPLAN INT, P164
   Lowe G, 1996, SOFTWARE-CONC TOOL, V17, P93
   Maher M. J., 1988, Proceedings of the Third Annual Symposium on Logic in Computer Science (Cat. No.88CH2608-8), P348, DOI 10.1109/LICS.1988.5132
   Mendler N. P., 1995, Nordic Journal of Computing, V2, P181
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Nielsen M., 2002, Nordic Journal of Computing, V9, P145
   NIELSEN M, 2002, P 4 INT ACM SIGPLAN, P156
   Olarte C, 2013, CONSTRAINTS, V18, P535, DOI 10.1007/s10601-013-9145-3
   Olarte C, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P145
   Olarte Carlos, 2008, P 10 ACM SIGPLAN INT, P8
   SARASWAT VA, 1994, IEEE S LOG, P71, DOI 10.1109/LICS.1994.316085
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   SATO T, 1984, THEOR COMPUT SCI, V34, P227, DOI 10.1016/0304-3975(84)90119-1
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   Smolka G., 1994, Constraints in Computational Logics. First International Conference, CCL'94. Proceedings, P50, DOI 10.1007/BFb0016844
   Song D. X., 2001, Journal of Computer Security, V9, P47
   TINI S., 1999, ELECT NOTES THEORETI, V27, P3
   Van Hentenryck P, 1998, J LOGIC PROGRAM, V37, P139, DOI 10.1016/S0743-1066(98)10006-7
   ZAFFANELLA E., 1997, J FUNCTIONAL LOGIC P, V1997, P6
NR 50
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2015
VL 15
BP 312
EP 357
DI 10.1017/S1471068413000641
PN 3
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CE3WZ
UT WOS:000351762100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ma, JF
   Le, F
   Wood, D
   Russo, A
   Lobo, J
AF Ma, Jiefei
   Le, Franck
   Wood, David
   Russo, Alessandra
   Lobo, Jorge
TI A declarative approach to distributed computing: Specification,
   execution and analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE action theory; answer set programming; network protocols; distributed
   computing
AB There is an increasing interest in using logic programming to specify and implement distributed algorithms, including a variety of network applications. These are applications where data and computation are distributed among several devices and where, in principle, all the devices can exchange data and share the computational results of the group. In this paper we propose a declarative approach to distributed computing whereby distributed algorithms and communication models can be (i) specified as action theories of fluents and actions; (ii) executed as collections of distributed state machines, where devices are abstracted as (input/output) automata that can exchange messages; and (iii) analysed using existing results on connecting causal theories and Answer Set Programming. Results on the application of our approach to different classes of network protocols are also presented.
C1 [Ma, Jiefei; Russo, Alessandra] Imperial Coll London, London, England.
   [Le, Franck; Wood, David] IBM Corp, Waston Lab, Armonk, NY 10504 USA.
   [Lobo, Jorge] ICREA Univ Pompeu Fabra, Barcelona, Spain.
C3 Imperial College London; International Business Machines (IBM); ICREA;
   Pompeu Fabra University
RP Ma, JF (corresponding author), Imperial Coll London, London, England.
EM j.ma@imperial.ac.uk; fle@us.ibm.com; dawood@us.ibm.com;
   a.russo@imperial.ac.uk; jorge.lobo@upf.edu
OI Lobo, Jorge/0000-0002-9438-0926; Russo, Alessandra/0000-0002-3318-8711
FU U.S. Army Research Laboratory; U.K. Ministry of Defence
   [W911NF-06-3-0001]; ICREA Funding Source: Custom
FX This research was sponsored by the U.S. Army Research Laboratory and the
   U.K. Ministry of Defence and was accomplished under Agreement Number
   W911NF-06-3-0001. The views and conclusions contained in this document
   are those of the author(s) and should not be interpreted as representing
   the official policies, either expressed or implied, of the U.S. Army
   Research Laboratory, the U.S. Government, the U.K. Ministry of Defence
   or the U.K. Government. The U.S. and U.K. Governments are authorized to
   reproduce and distribute reprints for Government purposes
   notwithstanding any copyright notation hereon.
CR Abiteboul S, 2011, LECT NOTES COMPUT SC, V6702, P252
   Alvaro P., 2011, UCBEECS2011120
   Baral C., 2010, Proceed- ings of the 9th International Conference on Autonomous Agents and Multiagent Systems, volume 1 of AAMAS '10, P259
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Chandy KM, 2011, FORM ASP COMPUT, V23, P649, DOI 10.1007/s00165-010-0150-7
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Grumbach S, 2010, LECT NOTES COMPUT SC, V5937, P88, DOI 10.1007/978-3-642-11503-5_9
   Krennwallner T., 2011, 27 INT C LOG PROGR I, V11, P274
   Lobo J., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P224
   Lobo J., 2012, LECT NOTES COMPUTER, P454
   Loo BT, 2009, COMMUN ACM, V52, P87, DOI 10.1145/1592761.1592785
   Lopes NP, 2010, THEOR PRACT LOG PROG, V10, P691, DOI 10.1017/S1471068410000360
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Marczak W.R., 2010, SIGMOD, P723
   McKeown N, 2008, ACM SIGCOMM COMP COM, V38, P69, DOI 10.1145/1355734.1355746
   Musuvathi M., 2004, NSDI, P440
   Navarro JA, 2009, LECT NOTES COMPUT SC, V5418, P76, DOI 10.1007/978-3-540-92995-6_6
   Pontelli E., 2012, Lecture Notes in Computer Science, V7265, P509
   Sobrinho J. L., 2010, Mathematical Theory of Networks and System
   Turner H, 1999, ARTIF INTELL, V113, P87, DOI 10.1016/S0004-3702(99)00058-2
   Wang AD, 2012, LECT NOTES COMPUT SC, V7214, P283, DOI 10.1007/978-3-642-28756-5_20
   Yun Mao, 2009, Operating Systems Review, V43, P19
   Zhang L, 2010, Relatorio Tecnico NDN-0001, Xerox Palo Alto Research Center-PARC, V157, P158, DOI [10.1145/2656877.2656887, DOI 10.1145/2656877.2656887]
   Zhou W., 2011, Proceedings of the 2011 ACM SIGMOD International Conference on Management of data, P1323
NR 25
TC 7
Z9 7
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 815
EP 830
DI 10.1017/S1471068413000513
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400024
DA 2024-07-18
ER

PT J
AU Schrijvers, T
   Demoen, B
   Desouter, B
   Wielemaker, J
AF Schrijvers, Tom
   Demoen, Bart
   Desouter, Benoit
   Wielemaker, Jan
TI Delimited continuations for prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE delimited continuations; Prolog
AB Delimited continuations are a famous control primitive that originates in the functional programming world. It allows the programmer to suspend and capture the remaining part of a computation in order to resume it later. We put a new Prolog-compatible face on this primitive and specify its semantics by means of a meta-interpreter. Moreover, we establish the power of delimited continuations in Prolog with several example definitions of high-level language features. Finally, we show how to easily and effectively add delimited continuations support to the WAM.
C1 [Schrijvers, Tom; Desouter, Benoit] Univ Ghent, B-9000 Ghent, Belgium.
   [Demoen, Bart] Katholieke Univ Leuven, Louvain, Belgium.
   [Wielemaker, Jan] Univ Amsterdam, NL-1012 WX Amsterdam, Netherlands.
C3 Ghent University; KU Leuven; University of Amsterdam
RP Schrijvers, T (corresponding author), Univ Ghent, B-9000 Ghent, Belgium.
EM tom.schrijvers@ugent.be; bart.demoen@cs.kuleuven.be;
   benoit.desouter@ugent.be; jan@swi-prolog.org
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559; Wielemaker, Jan/0000-0001-5574-5673
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Branquart P., 1970, ALGOL 68 IMPL N HOLL, P199
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   DANVY O, 1990, LISP FUNCTIONAL PROG, P151
   De Meuter W., 2011, LNCS, V6721
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   Demoen B., 2013, 631 CW KU LEUV DEP C
   Demoen B., 2002, 350 CW KU LEUV DEP C
   Demoen B, 2008, LECT NOTES COMPUT SC, V5366, P621, DOI 10.1007/978-3-540-89982-2_51
   FELLEISEN M, 1988, P 15 ANN ACM S PRINC, P180, DOI DOI 10.1145/73560.73576
   Holzbaur C., 1992, LNCS, V631, P260
   IVANOVIC D., 2009, CICLOPS 2009
   Kiselyov O., 2012, APLAS
   Kiselyov O, 2012, LECT NOTES COMPUT SC, V7294, P166
   Le Houitouze S., 1990, LECT NOTES COMPUTER, V456, P136
   Masuko M, 2009, ML'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN WORKSHOP ON ML, P49, DOI 10.1145/1596627.1596636
   MOGGI E, 1991, INFORM COMPUT, V93, P55, DOI 10.1016/0890-5401(91)90052-4
   NEUMERKEL U, 1990, MAY P META90 LEUV, P352
   Plotkin G., 2009, ESOP 09
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tarau P., 1994, LOPSTR 94, V883
   Tarau P, 2012, THEOR PRACT LOG PROG, V12, P97, DOI 10.1017/S1471068411000433
   Warren D.H.D., 1983, 309 SRI
   Wielemaker J., 2008, CICLOPS 08, P1
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 26
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 533
EP 546
DI 10.1017/S1471068413000331
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400006
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Baral, C
   Dzifcak, J
   Gonzalez, MA
   Gottesman, A
AF Baral, Chitta
   Dzifcak, Juraj
   Gonzalez, Marcos A.
   Gottesman, Aaron
TI Typed answer set programming lambda calculus theories and correctness of
   inverse lambda algorithms with respect to them
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE natural language understanding; answer set programming; lambda calculus;
   inverse lambda algorithms
AB Our broader goal is to automatically translate English sentences into formulas in appropriate knowledge representation languages as a step towards understanding and thus answering questions with respect to English text. Our focus in this paper is on the language of Answer Set Programming (ASP). Our approach to translate sentences to ASP rules is inspired by Montague's use of lambda calculus formulas as meaning of words and phrases. With ASP as the target language the meaning of words and phrases are ASP-lambda formulas. In an earlier work we illustrated our approach by manually developing a dictionary of words and their ASP-lambda formulas. However such an approach is not scalable. In this paper our focus is on two algorithms that allow one to construct ASP-lambda formulas in an inverse manner. In particular the two algorithms take as input two lambda-calculus expressions G and H and compute a lambda-calculus expression F such that F with input as G, denoted by F@G, is equal to H; and similarly G@F = H. We present correctness and complexity results about these algorithms. To do that we develop the notion of typed ASP-lambda calculus theories and their orders and use it in developing the completeness results.
C1 [Baral, Chitta; Dzifcak, Juraj; Gonzalez, Marcos A.; Gottesman, Aaron] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Baral, C (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
OI Baral, Chitta/0000-0002-7549-723X
FU NSF [0950440]; IARPA; ONR-MURI; Office of Advanced Cyberinfrastructure
   (OAC); Direct For Computer & Info Scie & Enginr [0950440] Funding
   Source: National Science Foundation
FX We acknowledge support by NSF (grant number 0950440), IARPA and ONR-MURI
   for this work.
CR [Anonymous], 1986, Introduction to Combinators and -Calculus
   [Anonymous], 2000, The Syntactic Process
   [Anonymous], 2005, P 21 C UNCERTAINTY A, DOI DOI 10.3115/1690219.1690283
   Baral C., 2012, KR IN PRESS
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C., 2012, LECT NOTES IN PRESS
   Baral Chitta., 2008, AAAI, P818
   Barendregt H., 1992, HDB LOGIC COMPUTER S, V2
   Blackburn P., 2005, REPRESENTATION INFER
   Church A., 1940, J. Symbolic Logic, V5, P56, DOI [10.2307/2266170, DOI 10.2307/2266170]
   Clark S., 2007, J COMPUTATIONAL LING, V33
   Costantini S., 2010, P INT WORKSH ANSW SE
   DOWEK G, 1994, ANN PURE APPL LOGIC, V69, P135, DOI 10.1016/0168-0072(94)90083-3
   Dzifcak J, 2009, IEEE INT CONF ROBOT, P3768
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gonzalez M. A., 2010, THESIS ARIZONA STATE
   Hindley J. R., 1997, BASIC SIMPLE TYPE TH
   Huet G. P., 1975, Theoretical Computer Science, V1, P27, DOI 10.1016/0304-3975(75)90011-0
   HUET GP, 1973, INFORM CONTROL, V22, P257, DOI 10.1016/S0019-9958(73)90301-X
   Kwiatkowski T., 2010, P 2010 C EMP METH NA, P1223
   Loader R, 2003, LOG J IGPL, V11, P51, DOI 10.1093/jigpal/11.1.51
   Montague R., 1974, Formal Philosophy
   Partee Barbara Hall, 1990, MATH METHODS LINGUIS
   Stirling C, 2009, LOG METH COMPUT SCI, V5, DOI 10.2168/LMCS-5(3:2)2009
NR 24
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 775
EP 791
DI 10.1017/S1471068412000282
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000020
DA 2024-07-18
ER

PT J
AU Duck, GJ
AF Duck, Gregory J.
TI SMCHR: Satisfiability modulo constraint handling rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE CHR; satisfiability modulo theories; lazy clause generation
AB Constraint Handling Rules (CHRs) are a high-level rule-based programming language for specification and implementation of constraint solvers. CHR manipulates a global store representing a flat conjunction of constraints. By default, CHR does not support goals with a more complex propositional structure including disjunction, negation, etc., or CHR relies on the host system to provide such features. In this paper we introduce Satisfiability Modulo Constraint Handling Rules (SMCHR): a tight integration of CHR with a modern Boolean Satisfiability (SAT) solver for quantifier-free formulae with an arbitrary propositional structure. SMCHR is essentially a Satisfiability Modulo Theories (SMT) solver where the theory T is implemented in CHR. The execution algorithm of SMCHR is based on lazy clause generation, where a new clause for the SAT solver is generated whenever a rule is applied. We shall also explore the practical aspects of building an SMCHR system, including extending a "built-in" constraint solver supporting equality with unification and justifications.
C1 Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 National University of Singapore
RP Duck, GJ (corresponding author), Natl Univ Singapore, Sch Comp, Singapore, Singapore.
EM gregory@comp.nus.edu.sg
OI Duck, Gregory/0000-0002-0837-9671
CR BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Demoen P, 1999, LOGIC PROGRAMM, P260
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   EEN N, 2003, P 6 INT C THEOR APPL
   Fruhwirth T., 1998, CONSTRAINT LOGIC PRO, V37
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   Holzbaur C, 1999, LECT NOTES COMPUT SC, V1702, P117
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Ohrimenko O, 2009, CONSTRAINTS, V14, P357, DOI 10.1007/s10601-008-9064-x
   Sarna-Starosta B., 2008, RISC REPORT SERIES, V08-10, P3
   Schrijvers Tom., 2004, First Workshop on Constraint Handling Rules: Selected Contributions, P1
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Taylor A, 1996, J LOGIC PROGRAM, V29, P5, DOI 10.1016/S0743-1066(96)00065-9
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wolf A., 2008, CONSTRAINT HANDLING, V5388, P48
NR 16
TC 8
Z9 8
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 601
EP 618
DI 10.1017/S1471068412000208
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gorlin, A
   Ramakrishnan, CR
   Smolka, SA
AF Gorlin, Andrey
   Ramakrishnan, C. R.
   Smolka, Scott A.
TI Model checking with probabilistic tabled logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID CALCULUS
AB We present a formulation of the problem of probabilistic model checking as one of query evaluation over probabilistic logic programs. To the best of our knowledge, our formulation is the first of its kind, and it covers a rich class of probabilistic models and probabilistic temporal logics. The inference algorithms of existing probabilistic logic-programming systems are well defined only for queries with a finite number of explanations. This restriction prohibits the encoding of probabilistic model checkers, where explanations correspond to executions of the system being model checked. To overcome this restriction, we propose a more general inference algorithm that uses finite generative structures (similar to automata) to represent families of explanations. The inference algorithm computes the probability of a possibly infinite set of explanations directly from the finite generative structure. We have implemented our inference algorithm in XSB Prolog, and use this implementation to encode probabilistic model checkers for a variety of temporal logics, including PCTL and GPL (which subsumes PCTL*). Our experiment results show that, despite the highly declarative nature of their encodings, the model checkers constructed in this manner are competitive with their native implementations.
C1 [Gorlin, Andrey; Ramakrishnan, C. R.; Smolka, Scott A.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Gorlin, A (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM agorlin@cs.stonybrook.edu; cram@cs.stonybrook.edu; sas@cs.stonybrook.edu
FU NSF [CCF-1018459, CCF-0926190, CCF-0831298]; AFOSR [FA9550-09-1-0481];
   ONR [N00014-07-1-0928]; Direct For Computer & Info Scie & Enginr;
   Division Of Computer and Network Systems [0831298] Funding Source:
   National Science Foundation
FX We thank the reviewers for valuable comments. This research was
   supported in part by NSF Grants CCF-1018459, CCF-0926190, CCF-0831298,
   AFOSR Grant FA9550-09-1-0481, and ONR Grant N00014-07-1-0928.
CR [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   [Anonymous], 1998, THESIS U MANNHEIM
   Christiansen H, 2009, LECT NOTES COMPUT SC, V5649, P55, DOI 10.1007/978-3-642-02846-5_10
   Cleaveland R, 2005, THEOR COMPUT SCI, V342, P316, DOI 10.1016/j.tcs.2005.03.048
   Costa V.S., 2003, Proceedings of the 19th Annual Conference on Uncertainty in Artificial Intelligence (UAI-03), P517
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   Du X., 2000, IEEE RTSS
   Esparza J, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(1:2)2006
   Etessami K, 2009, J ACM, V56, DOI 10.1145/1462153.1462154
   Farwer Berndt., 2004, the 6th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming, Verona, Italy, P20
   Friedman N, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1300
   Gorlin A., 2012, MODEL CHECKING UNPUB
   Gupta G., 1997, P REAL TIM SYST S
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Gutmann B., 2010, P ILP
   Gutmann B, 2011, THEOR PRACT LOG PROG, V11, P663, DOI 10.1017/S1471068411000238
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Islam M., 2011, ARXIV E PRINTS
   Itai A., 1981, 22nd Annual Symposium on Foundations of Computer Science, P150, DOI 10.1109/SFCS.1981.41
   Kersting K., 2000, ILP WORK IN PROGR RE
   Kersting K., 2001, P ILP
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Milner Robin., 1989, INT SERIES COMPUTER
   Muggleton S., 1996, ADV INDUCTIVE LOGIC
   Mukhopadhyay S., 1999, Foundations of Software Technology and Theoretical Computer Science. 19th Conference. Proceedings (Lecture Notes in Computer Science Vol.1738), P232
   Mukhopadhyay S, 2000, LECT NOTES ARTIF INT, V1861, P598
   Narman P., 2010, P EDOC
   Nilsson Ulf., 2000, LOGIC PROGRAMMING PR
   PEMMASANI G, 2002, LNCS
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Ramakrishnan C. R., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P1
   Ramakrishnan C. R., 2000, CAV 2000, P576
   Richardson M., 2006, MACHINE LEARNING
   RIGUZZI F, 2010, CEUR WORKSHOP P, V598
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Sarna-Starosta B, 2003, LECT NOTES COMPUT SC, V2885, P579
   Sato T., 1997, IJCAI
   Singh A, 2008, LECT NOTES COMPUT SC, V5052, P296, DOI 10.1007/978-3-540-68265-3_19
   Swift T., 2012, XSB LOGIC PROGRAMMIN
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vennekens J., 2009, TPLP
   Wang J., 2008, P AAAI
   Wojtczak D., 2007, TACAS
   Yang P., 2004, International Journal on Software Tools for Technology Transfer, V6, P38, DOI 10.1007/s10009-003-0136-3
NR 49
TC 8
Z9 8
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 681
EP 700
DI 10.1017/S1471068412000245
PN 4-5
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marek, VW
   Remmel, JB
AF Marek, V. W.
   Remmel, J. B.
TI Guarded resolution for Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE guarded resolution; proof-theory for Answer Set Programming
AB We investigate a proof system based on a guarded resolution rule and show its adequacy for the stable semantics of normal logic programs. As a consequence, we show that Gelfond-Lifschitz operator can be viewed as a proof-theoretic concept. As an application, we find a propositional theory E-p whose models are precisely stable models of programs. We also find a class of propositional theories C-P with the following properties. Propositional models of theories in C-P are precisely stable models of P, and the theories in C-T are of the size linear in the size of P.
C1 [Marek, V. W.] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Remmel, J. B.] Univ Calif San Diego, Dept Math, La Jolla, CA 92903 USA.
   [Remmel, J. B.] Univ Calif San Diego, Dept Comp Sci, La Jolla, CA 92903 USA.
C3 University of Kentucky; University of California System; University of
   California San Diego; University of California System; University of
   California San Diego
RP Marek, VW (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM marek@cs.uky.edu; jremme1@ucsd.edu
FU NSF [DMS 0654060]
FX Partially supported by NSF grant DMS 0654060.
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   Brass S, 1999, J LOGIC PROGRAM, V40, P1, DOI 10.1016/S0743-1066(98)10030-4
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   DUNG PM, 1989, LOGIC PROGRAMM, P604
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2006, ANN MATH ARTIF INTEL, V47, P79, DOI 10.1007/s10472-006-9025-2
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Karp C. R., 1964, LANGUAGES EXPRESSION
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2006, ACM T COMPUT LOG, V7, P261, DOI 10.1145/1131313.1131316
   Lifschitz V, 2008, LECT NOTES COMPUT SC, V5366, P37, DOI 10.1007/978-3-540-89982-2_8
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MAREK VW, 2010, ARXIV09054076
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Truszczynski M, 2006, ANN MATH ARTIF INTEL, V48, P245, DOI 10.1007/s10472-007-9049-2
NR 19
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2011
VL 11
BP 111
EP 123
DI 10.1017/S1471068410000062
PN 1
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 716TO
UT WOS:000286996600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Faber, W
   Leone, N
AF Alviano, Mario
   Faber, Wolfgang
   Leone, Nicola
TI Disjunctive ASP with functions: Decidable queries and effective
   computation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer set programming; decidability; magic sets; disjunctive logic
   programs
ID BOTTOM-UP EVALUATION; LOGIC PROGRAMS; OPTIMIZATION; SETS
AB Querying over disjunctive ASP with functions is a highly undecidable task in general. In this paper we focus on disjunctive logic programs with stratified negation and functions under the stable model semantics (ASP(fs)). We show that query answering in this setting is decidable, if the query is finitely recursive (ASP(fr)(fs)). Our proof yields also an effective method for query evaluation. It is done by extending the magic set technique to ASP(fr)(fs). We show that the magic-set rewritten program is query equivalent to the original one (under both brave and cautious reasoning). Moreover, we prove that the rewritten program is also finitely ground, implying that it is decidable. Importantly, finitely ground programs are evaluable using existing ASP solvers, making the class of ASP(fr)(fs) queries usable in practice.
C1 [Alviano, Mario; Faber, Wolfgang; Leone, Nicola] Univ Calabria, Dept Math, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math, I-87036 Arcavacata Di Rende, CS, Italy.
EM alviano@mat.unical.it; faber@mat.unical.it; leone@mat.unical.it
RI Alviano, Mario/H-1355-2012; Alviano, Mario/AAI-8135-2020; Leone,
   Nicola/B-1890-2012; Faber, Wolfgang/H-2316-2012
OI Alviano, Mario/0000-0002-2052-2063; Faber, Wolfgang/0000-0002-0330-5868;
   Leone, Nicola/0000-0002-9742-1252
CR Alviano M., 2009, 092009 U CAL DIP MAT
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Bonatti PA, 2002, LECT NOTES COMPUT SC, V2401, P333, DOI 10.1007/3-540-45619-8_23
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Cabalar P, 2008, LECT NOTES COMPUT SC, V5366, P392, DOI 10.1007/978-3-540-89982-2_36
   Calimeri F, 2009, LECT NOTES COMPUT SC, V5753, P71, DOI 10.1007/978-3-642-04238-6_9
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Eiter T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P765
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   KEMP DB, 1995, THEOR COMPUT SCI, V146, P145, DOI 10.1016/0304-3975(94)00153-A
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   LIN F, 2008, P 11 INT C PRINC KNO, P454
   Simkus M, 2007, LECT NOTES ARTIF INT, V4790, P514, DOI 10.1007/978-3-540-75560-9_37
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Tarnlund S.-A., 1977, BIT (Nordisk Tidskrift for Informationsbehandling), V17, P215, DOI 10.1007/BF01932293
NR 22
TC 15
Z9 15
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 497
EP 512
DI 10.1017/S1471068410000244
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Pettorossi, A
   Senni, V
   Proietti, M
AF Pettorossi, Alberto
   Senni, Valerio
   Proietti, Maurizio
TI Transformations of logic programs on infinite lists
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE program transformation; program verification; infinite lists
ID MODEL CHECKING
AB We consider an extension of logic programs, called omega-programs, that can be used to define predicates over infinite lists. omega-programs allow us to specify properties of the infinite behavior of reactive systems and, in general, properties of infinite sequences of events. The semantics of omega-programs is an extension of the perfect model semantics. We present variants of the familiar unfold/fold rules which can be used for transforming omega-programs. We show that these new rules are correct, that is, their application preserves the perfect model semantics. Then we outline a general methodology based on program transformation for verifying properties of omega-programs. We demonstrate the power of our transformation-based verification methodology by proving some properties of Buchi automata and omega-regular languages.
C1 [Pettorossi, Alberto; Senni, Valerio] Univ Roma Tor Vergata, DISP, I-00133 Rome, Italy.
   [Proietti, Maurizio] CNR, IASI, I-00185 Rome, Italy.
C3 University of Rome Tor Vergata; Consiglio Nazionale delle Ricerche (CNR)
RP Pettorossi, A (corresponding author), Univ Roma Tor Vergata, DISP, Via Politecn 1, I-00133 Rome, Italy.
EM pettorossi@disp.uniroma2.it; senni@disp.uniroma2.it;
   maurizio.proietti@iasi.cnr.it
RI Pettorossi, Alberto/D-8503-2016; Proietti, Maurizio/AAW-7487-2020
OI Pettorossi, Alberto/0000-0001-7858-4032; Senni,
   Valerio/0000-0002-1131-0384; Proietti, Maurizio/0000-0003-3835-4931
CR ABADI M, 1989, J SYMB COMPUT, V8, P277, DOI 10.1016/S0747-7171(89)80070-7
   [Anonymous], 1982, Logic Programming
   [Anonymous], HDB THEORETICAL COMP
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   Clarke EM, 1999, MODEL CHECKING, P1
   Delzanno G., 2001, International Journal on Software Tools for Technology Transfer, V3, P250, DOI 10.1007/s100090100049
   Etalle S, 2001, ACM T PROGR LANG SYS, V23, P304, DOI 10.1145/503502.503504
   Fioravanti F, 2004, LECT NOTES COMPUT SC, V3049, P291
   Fribourg L., 1997, Constraints, V2, P305, DOI 10.1023/A:1009747629591
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Jaffar J, 2004, REAL TIM SYST SYMP P, P175, DOI 10.1109/REAL.2004.5
   Leuschel M, 2000, LECT NOTES COMPUT SC, V1817, P62, DOI 10.1007/10720327_5
   Lloyd J. W., 2012, Foundations of Logic Programming
   Min R, 2010, LECT NOTES COMPUT SC, V6037, P97, DOI 10.1007/978-3-642-12592-8_8
   Nilsson U, 2000, LECT NOTES ARTIF INT, V1861, P384
   Pettorossi A, 2000, LECT NOTES ARTIF INT, V1861, P613
   PETTOROSSI A, 2010, R1004 IASICNR
   Pettorossi A, 2010, LECT NOTES COMPUT SC, V6037, P5, DOI 10.1007/978-3-642-12592-8_2
   PROIETTI M, 1995, THEOR COMPUT SCI, V142, P89, DOI 10.1016/0304-3975(94)00227-A
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Roychoudhury A., 2002, International Journal of Foundations of Computer Science, V13, P387, DOI 10.1142/S0129054102001175
   SEKI H, 1991, THEOR COMPUT SCI, V86, P107, DOI 10.1016/0304-3975(91)90007-O
   Seki H, 2010, LECT NOTES COMPUT SC, V6037, P82, DOI 10.1007/978-3-642-12592-8_7
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Staiger L., 1997, Handbook of formal languages, V3, P339, DOI DOI 10.1007/978-3-642-59126-6_6
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   UEDA K, 1988, P INT C 5 GEN COMP S, P582
NR 28
TC 2
Z9 2
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 383
EP 399
DI 10.1017/S1471068410000177
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faber, W
   Pfeifer, G
   Leone, N
   Dellarmi, T
   Ielpa, G
AF Faber, Wolfgang
   Pfeifer, Gerald
   Leone, Nicola
   Dellarmi, Tina
   Ielpa, Giuseppe
TI Design and implementation of aggregate functions in the DLV system
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE disjunctive logic programming; answer set programming; aggregates;
   knowledge representation; implementation
ID DISJUNCTIVE LOGIC PROGRAMS; UNFOUNDED SETS; STABLE MODELS; ANSWER SETS;
   SEMANTICS
AB Disjunctive logic programming (DLP) is a very expressive formalism. It allows for expressing every property of finite structures that is decidable in the complexity class Sigma(P)(2) (=NPNP). Despite this high expressiveness, there are some simple properties, often arising in real-world applications, which cannot be encoded in a simple and natural manner. Especially properties that require the use of arithmetic operators (like sum, times, or count) on a set or multiset of elements, which satisfy some conditions, cannot be naturally expressed in classic DLP. To overcome this deficiency, we extend DLP by aggregate functions in a conservative way. In particular, we avoid the introduction of constructs with disputed semantics, by requiring aggregates to be stratified. We formally define the semantics of the extended language (called DLPA), and illustrate how it can be profitably used for representing knowledge. Furthermore, we analyze the computational complexity of DLPA, showing that the addition of aggregates does not bring a higher cost in that respect. Finally, we provide an implementation of DLPA in DLV-a state-of-the-art DLP system-and report on experiments which confirm the usefulness of the proposed extension also for the efficiency of computation.
C1 [Faber, Wolfgang; Pfeifer, Gerald; Leone, Nicola; Dellarmi, Tina; Ielpa, Giuseppe] Univ Calabria, Dept Math, I-87036 Cosenza, Italy.
C3 University of Calabria
RP Faber, W (corresponding author), Univ Calabria, Dept Math, I-87036 Cosenza, Italy.
EM faber@mat.unical.it; gerald@mat.unical.it; leone@mat.unical.it;
   dellarmi@mat.unical.it; ielpa@mat.unical.it
RI Leone, Nicola/B-1890-2012; Faber, Wolfgang/H-2316-2012
OI Leone, Nicola/0000-0002-9742-1252; Faber, Wolfgang/0000-0002-0330-5868;
   Dell'Armi, Tina/0009-0007-7417-3819; Ielpa, Giuseppe/0000-0001-6473-161X
FU M.U.R.; M.I.U.R.; Austrian Academy of Sciences
FX This work has greatly benefited from interesting discussions with and
   comments by Paolo Ferraris, Michael Gelfond, Vladimir Lifschitz, Nikolay
   Pelov, and from the comments and suggestions by the anonymous referees.
   It was partially supported by M.U.R. under the PRIN project
   "Potenziamento a Applicazioni della Programmazione Logica Disgiuntiva"
   and by M.I.U.R. under the internationalization project "Sistemi basati
   sulla logica per la rappresentazione di conoscenza: estensioni e
   tecniche di ottimizzazione." Wolfgang Faber's work was funded by an
   APART grant of the Austrian Academy of Sciences.
CR [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calimeri F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P406
   Chimenti D., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P76, DOI 10.1109/69.50907
   DELLARMI T, 2003, P ASP03 ANSW SET PRO, P274
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   EITER T, 1997, LNCS, V1265, P290
   Elkabani I, 2005, LECT NOTES ARTIF INT, V3662, P427, DOI 10.1007/11546207_40
   Faber W, 2005, LECT NOTES ARTIF INT, V3662, P40, DOI 10.1007/11546207_4
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W, 1999, LECT NOTES ARTIF INT, V1730, P177, DOI 10.1007/3-540-46767-X_13
   Faber W., 1999, Using database optimization techniques for nonmonotonic reasoning, P135
   FABER W, 2002, THESIS TU WIEN
   FABER W, 2001, P 17 INT JOINT C ART, P635
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gottlob G, 1999, ANN PURE APPL LOGIC, V97, P231, DOI 10.1016/S0168-0072(98)00057-8
   He CL, 2005, Proceedings of 2005 International Conference on Advanced Fibers and Polymer Materials (ICAFPM 2005), Vol 1 and 2, P708
   Hella L, 2001, J ACM, V48, P880, DOI 10.1145/502090.502100
   Kemp DB, 1998, IEEE T KNOWL DATA EN, V10, P727, DOI 10.1109/69.729729
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Leone Nicola, 2001, LNCS, V2173, P280, DOI [10.1007/3-540-45402-0_21, DOI 10.1007/3-540-45402-0_21]
   LIERLER Y, 2005, W C LP 19 WORKSH CON, P163
   Marek V.W., 2002, P 9 INT WORKSH NONM, P219
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P154
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Minker Jack., 1982, INT C AUTOMATED DEDU, P292
   MINOUX M, 1988, INFORM PROCESS LETT, V29, P1, DOI 10.1016/0020-0190(88)90124-X
   NIEMELA I, 1999, LECT NOTES AI LNAI, V1730, P107
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   Pelov N., 2004, THESIS KATHOLIEKE U
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son T.C., 2005, NMSUCS2005006
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Syrjanen, 2002, LPARSE 1 0 USERS MAN
NR 48
TC 59
Z9 63
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 545
EP 580
DI 10.1017/S1471068408003323
PN 5-6
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Langevine, L
   Ducassé, M
AF Langevine, Ludovic
   Ducasse, Mireille
TI Design and implementation of a tracer driver: Easy and efficient dynamic
   analyses of constraint logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Software engineering; Debugging; Execution trace analysis; Execution
   monitoring; Execution tracing; Execution visualization; Programming
   environment; Constraint logic programming
AB Tracers provide users with useful information about program executions. In this article, we propose a "tracer driver". From a single tracer, it provides a powerful front-end enabling multiple dynamic analysis tools to be easily implemented, while limiting the overhead of the trace generation. The relevant execution events are specified by flexible event patterns and a large variety of trace data can be given either systematically or "on demand". The proposed tracer driver has been designed in the context of constraint logic programming (CLP); experiments have been made within GNU-Prolog. Execution views provided by existing tools have been easily emulated with a negligible overhead. Experimental measures show that the flexibility and power of the described architecture lead to good performance. The tracer driver overhead is inversely proportional to the average time between two traced events. Whereas the principles of the tracer driver are independent of the traced programming language, it is best suited for high-level languages, such as CLP, where each traced execution event encompasses numerous low-level execution steps. Furthermore, CLP is especially hard to debug. The current environments do not provide all the useful dynamic analysis tools. They can significantly benefit froth our tracer driver which enables dynamic analyses to be integrated at a very low cost.
C1 [Langevine, Ludovic] Mission Crit IT, B-1420 Braine Lalleud, Belgium.
   [Ducasse, Mireille] INSA Rennes, IRISA, F-35042 Rennes, France.
C3 Institut National des Sciences Appliquees de Rennes; Universite de
   Rennes
RP Langevine, L (corresponding author), Mission Crit IT, Blvd France 9,Bat A, B-1420 Braine Lalleud, Belgium.
EM llg@missioncriticalit.com; Mireille.Ducasse@irisa.fr
FU French RNTL OADymPPaC; ERCIM
FX This work has been partly supported by the French RNTL OADymPPaC project
   and the ERCIM fellowship programme.
CR AGREN M, 2002, P WORKSH LOG PROGR E
   [Anonymous], P 20 IEEE ACM INT C
   [Anonymous], 1999, Technical Report Technical report APES-09-1999
   Auguston M, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P217, DOI 10.1109/ASE.2002.1115015
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   BATES PC, 1995, ACM T COMPUT SYST, V13, P1, DOI 10.1145/200912.200913
   BRACCHI C, 2001, P P 11 WORKSH LOG PR, P27
   BRUEGGE B, 1983, J SYST SOFTWARE, V3, P265, DOI 10.1016/0164-1212(83)90012-2
   CARRO M, 2000, LECT NOTES COMPUTER, V1870, pCH10
   CONSENS M, 1994, LECT NOTES COMPUTER, V819, P123
   DERANSART P, 2000, LECT NOTES COMPUTER, V1870
   DIAZ D, 2003, GNU PROLOG FREE PROL
   Ducassé M, 1999, J LOGIC PROGRAM, V39, P177, DOI 10.1016/S0743-1066(98)10036-5
   Ducasse M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P504, DOI 10.1109/ICSE.1999.841040
   FAGES F, 2002, P WLPE 02
   GOUALARD F, 2000, LNCS, V1870, pCH11
   HANK D, 2004, LECT NOTES COMPUTER, V3132
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Jahier E, 2002, THEOR PRACT LOG PROG, V2, P611, DOI 10.1017/S1471068402001461
   JEFFERY CL, 1994, SOFTWARE PRACT EXPER, V24, P1025, DOI 10.1002/spe.4380241104
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   LANGEVINE L, 2003, LECT NOTES COMPUTER, V2916
   LANGEVINE L, 2004, LECT NOTES ARTIFICIA, V3010
   MacLarty I, 2006, LECT NOTES COMPUT SC, V3819, P31
   MACLARTY I, 2005, AADEBUG 05, P59
   MEIER M, 1995, LNCS, V976, P204
   OLSSON RA, 1990, P USENIX SUMM 90 C J, P221
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   RONSSE M, 2000, P INT WORKSH AUT DEB
   Schulte C, 1997, LOGIC PROGRAMM, P286
   Shapiro EY., 1983, Algorithmic Program Debugging
   SIMONIS H, 2000, LECT NOTES COMPUTER, V1870
   SOMOGYI Z, 1999, ELECT NOTES THEORETI, V30
   Sosic R, 1997, SOFTWARE PRACT EXPER, V27, P185, DOI 10.1002/(SICI)1097-024X(199702)27:2<185::AID-SPE79>3.0.CO;2-D
   Wilhelm R., 1995, Compiler Design
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 37
TC 0
Z9 0
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 581
EP 609
DI 10.1017/S147106840800344X
PN 5-6
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Palomino, M
AF Palomino, Miguel
TI A comparison between two logical formalisms for rewriting
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE rewriting logic; constructor-based rewriting logic; institutions
ID SPECIFICATION; FRAMEWORK; MODEL
AB Meseguer's rewriting logic and the rewriting logic CRWL are two well-known approaches to rewriting as logical deduction that, despite some clear similarities, were designed with different objectives. Here we study the relationships between them, both at a syntactic and at a semantic level. Even though it is not possible to establish an entailment system map between them, both can be naturally simulated in each other. Semantically, there is no embedding between the corresponding institutions. Along the way, the notions of entailment and satisfaction in Meseguer's rewriting logic are generalized.
C1 Univ Complutense Madrid, Dept sist Informat & Programac, Fac Informat, Madrid, Spain.
C3 Complutense University of Madrid
RP Palomino, M (corresponding author), Univ Complutense Madrid, Dept sist Informat & Programac, Fac Informat, Madrid, Spain.
EM miguelpt@sip.ucm.es
OI Palomino Tarjuelo, Miguel/0000-0002-6725-350X
CR [Anonymous], HDB PHILOS LOGIC, DOI [10.1007/978-94-017-0464-9_1, DOI 10.1007/978-94-017-0464-9_1]
   [Anonymous], 1999, Category Theory for Computing Science
   Arenas-Sánchez P, 2001, THEOR PRACT LOG PROG, V1, P185
   BOSCO PG, 1988, J THEORETICAL COMPUT, V59, P3
   CENGARLE MV, 1998, 9801 L MAXIMILIANS U
   Diaconescu R, 2002, THEOR COMPUT SCI, V285, P289, DOI 10.1016/S0304-3975(01)00361-9
   Goguen J., 2002, Formal Aspects of Computing, V13, P274, DOI 10.1007/s001650200013
   GOGUEN JA, 1992, J ACM, V39, P95, DOI 10.1145/147508.147524
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GONZALEZMORENO J, 2001, J FUNCTIONAL LOGIC P, P1
   LAMBEK J, 1970, CAN MATH BULLETIN, V13, P337, DOI 10.4153/CMB-1970-065-6
   Martí-Oliet N, 2002, THEOR COMPUT SCI, V285, P121, DOI 10.1016/S0304-3975(01)00357-7
   Meseguer J, 2000, LECT NOTES COMPUT SC, V1833, P1
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 1998, LECT NOTES COMPUT SC, V1376, P18
   Meseguer J., 1989, Logic Colloquium '87, P275, DOI 10.1016/S0049-237X(08)70132-0
   MESEGUER J, 1990, SRICSL9002 SRI INT
   Miyoshi Hiroyuki, 1996, ELECTRON NOTES THEOR, V4, P20
   MOLINABRAVO JM, 2000, THESIS U MALAGA SPAI
   PALOMINO M, 2001, THESIS U COMPLUTENSE
   THATI P, 2002, ELECT NOTES THEORETI, V71
   Verdejo A., 2003, THESIS U COMPLUTENSE
   VERDEJO A, 2002, P 4 INT WORKSH REWR, V71
NR 23
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 183
EP 213
DI 10.1017/S1471068406002845
PN 1-2
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bagnara, R
   Zaffanella, E
   Hill, PM
AF Bagnara, R
   Zaffanella, E
   Hill, PM
TI Enhanced sharing analysis techniques: a comprehensive evaluation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; logic programming; sharing analysis;
   experimental evaluation
ID LOGIC PROGRAMS; ABSTRACT INTERPRETATION
AB Sharing, an abstract domain developed by D. Jacobs and A. Langen for the analysis of logic programs, derives useful aliasing information. It is well-known that a commonly used core of techniques, such as the integration of Sharing with freeness and linearity information, can significantly improve the precision of the analysis. However, a number of other proposals for refined domain combinations have been circulating for years. One feature that is common to these proposals is that they do not seem to have undergone a thorough experimental evaluation even with respect to the expected precision gains. In this paper we experimentally evaluate: helping Sharing with the definitely ground variables found using Pos, the domain of positive Boolean formulas; the incorporation of explicit structural information; a full implementation of the reduced product of Sharing and Pos; the issue of reordering the bindings in the computation of the abstract mgu; an original proposal for the addition of a new mode recording the set of variables that are deemed to be ground or free; a refilled way of using linearity to improve the analysis; the recovery of hidden information in the combination of Sharing with freeness information. Finally, we discuss the issue Of whether tracking compoundness allows the computation of more sharing information.
C1 Univ Parma, Dept Math, Parma, Italy.
   Univ Leeds, Sch Comp, Leeds, W Yorkshire, England.
C3 University of Parma; University of Leeds
RP Univ Parma, Dept Math, Parma, Italy.
EM bagnara@cs.unipr.it; zaffanella@cs.unipr.it; hill@comp.leeds.ac.uk
RI Bagnara, Roberto/B-2420-2017; Bagnara, Roberto/AAB-3202-2022
OI Bagnara, Roberto/0000-0002-6163-6278; Bagnara,
   Roberto/0000-0002-6163-6278; Zaffanella, Enea/0000-0001-6388-2053
CR Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   Bagnara R, 1999, LECT NOTES COMPUT SC, V1548, P471
   Bagnara R, 2000, LECT NOTES ARTIF INT, V1955, P189, DOI 10.1007/3-540-44404-1_13
   Bagnara R, 2002, THEOR COMPUT SCI, V277, P3, DOI 10.1016/S0304-3975(00)00312-1
   Bagnara R., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P103, DOI 10.1145/351268.351280
   BAGNARA R, 1997, P 1997 JOINT C DECL, P81
   BAGNARA R, 1997, TD197 U PIS DIP INF
   BAGNARA R, 1997, STATIC ANAL, V1302, P53
   BLOCKEEL H, 2000, 10 INT C IND LOG PRO, P43
   BOURDONCLE F, 1993, LECT NOTES COMPUTER, V735, P128
   BOURDONCLE F, 1993, 22 PRL
   BRUYNOOGHE M, 1993, STATIC ANAL, V724, P153
   BRUYNOOGHE M, 1994, 196 KU LEUV DEP COMP
   Bruynooghe M., 1994, VERIFICATION ANAL LO, P213
   Bueno F, 1999, ACM T PROGR LANG SYS, V21, P189, DOI 10.1145/316686.316688
   BUENO F, 1994, MIT PS LOG, P320
   CABEZA D, 1994, LNCS, V864, P297
   CHANG JH, 1985, COMPCON SPRING 85, P218
   CODISH M, 1993, LOGIC PROGRAMM, P116
   Codish M, 1999, ACM T PROGR LANG SYS, V21, P948, DOI 10.1145/330249.330252
   CODISH M, 1991, DERIVATION SAFETY AB, P79
   CORTESI A, 1992, LECT NOTES COMPUT SC, V623, P521
   Cortesi A, 1999, J LOGIC PROGRAM, V38, P371, DOI 10.1016/S0743-1066(98)10026-2
   CORTESI A, 1994, P 21 ACM SIGPLAN SIG, P227
   COSTAS VS, 2000, LECT NOTES COMPUTER, V1866, P397
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   CRNOGORAC L, 1996, LECT NOTES COMPUTER, V1145, P159
   DERANSART P, 1991, LOGIC PROGRAMM, P533
   FILE G, 1994, 15 U PAD DIP MAT
   FURUKAWA K, 1991, MIT PRESS SERIES LOG
   HANS W, 1992, 9227 TECHN U AACH
   HERMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1, DOI 10.1016/0743-1066(93)00007-F
   HERMENEGILDO MV, 1990, LOGIC PROGRAMM, P253
   Hill E, 1998, J ARCHAEOL METHOD TH, V5, P99, DOI 10.1007/BF02428417
   *ISO IEC, 1995, 132111 ISO IEC
   JACOBS D, 1992, J LOGIC PROGRAM, V13, P291, DOI 10.1016/0743-1066(92)90034-Z
   JACOBS D, 1989, MIT PRESS SERIES LOG, P154
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   KING A, 1994, MIT PS LOG, P553
   KING A, 1993, 9313 CSTR SOUTH U DE
   KING A, 1994, LECT NOTES COMPUTER, V788, P363
   LANGEN A, 1990, 9105 TR U SO CAL COM
   MULKERS A, 1995, LOGIC PROGRAMM, P781
   MULKERS A, 1994, 198 K U LEUV DEP COM
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Scozzari F, 2000, LECT NOTES COMPUT SC, V1824, P397
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   Zaffanella E, 1999, LECT NOTES COMPUT SC, V1702, P414
   Zaffanella E, 1999, LECT NOTES COMPUT SC, V1694, P69
NR 49
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 1
EP 43
DI 10.1017/S1471068404001978
PN 1-2
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400001
OA Green Accepted, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Pettorossi, A
   Proietti, M
AF Pettorossi, A
   Proietti, M
TI Transformations of logic programs with goals as arguments
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program transformation; unfold/fold transformation rules; higher order
   logic programming; continuations
AB We consider a simple extension of logic programming where variables may range over goals and goals may be arguments of predicates. In this language we can write logic programs which use goals as data. We give practical evidence that, by exploiting this capability when transforming programs, we can improve program efficiency. We propose a set of program transformation rules which extend the familiar unfolding and folding rules and allow us to manipulate clauses with goals which occur as arguments of predicates. In order to prove the correctness of these transformation rules, we formally define the operational semantics of our extended logic programming language. This semantics is a simple variant of I-D-resolution. When suitable conditions are satisfied this semantics agrees with LD-resolution and, thus, the programs written in our extended language can be run by ordinary Prolog systems. Our transformation rules are shown to preserve the operational semantics and termination.
C1 Univ Roma Tor Vergata, Dipartimento Informat Sistemi & Prod, I-00133 Rome, Italy.
   CNR, Ist Anal Sistemi & Informat, I-00185 Rome, Italy.
C3 University of Rome Tor Vergata; Consiglio Nazionale delle Ricerche (CNR)
RP Univ Roma Tor Vergata, Dipartimento Informat Sistemi & Prod, Via Politecn 1, I-00133 Rome, Italy.
EM alberto.pettorossi@uniroma2.it; proietti@iasi.rm.cnr.it
RI Pettorossi, Alberto/D-8503-2016; Proietti, Maurizio/AAW-7487-2020
OI Proietti, Maurizio/0000-0003-3835-4931; Pettorossi,
   Alberto/0000-0001-7858-4032
CR Apt K. R., 1997, From Logic Programming to Prolog
   BOSSI A, 1992, LECT NOTES COMPUT SC, V649, P265
   BOSSI A, 1994, LECT NOTES COMPUTER, V850, P269
   BOSSI A, 1995, LECT NOTES COMPUTER, V1048, P33
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Hill P, 1998, Handbook of Logic in Artificial Intelligence and Logic Programming, V5, P421
   Jorgensen J, 1997, LECT NOTES COMPUT SC, V1207, P59
   Lloyd J. W., 1987, Foundations of logic programming
   NADATHUR G, 1998, HDB LOGIC ARTIFICIAL, V5, P499
   PETTOROSSI A, 1987, LECT NOTES COMPUT SC, V250, P182
   Pettorossi A, 2000, LECT NOTES COMPUT SC, V1817, P176, DOI 10.1007/10720327_11
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   PETTOROSSI A, 1997, P 2 ACM SIGPLAN WORK
   PETTOROSSI A, 2003, TRANSFORMATIONS LOGI
   Sanders SW, 1996, CLIN THER, V18, P2, DOI 10.1016/S0149-2918(96)80175-5
   STERLING LS, 1986, ART PROLOGY
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159
   TARAU P, 1996, BINPROLOG 5 2 5 USER
   Vasak T., 1986, Proceedings of the 1986 Symposium on Logic Programming (Cat. No.86CH2340-8), P140
   WAND M, 1980, J ACM, V27, P164, DOI 10.1145/322169.322183
   WARREN D. H. D., 1982, MACH INTELL, V10, P441
   Winskel G., 1993, The Formal Semantics of Programming Languages
NR 24
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2004
VL 4
BP 495
EP 537
DI 10.1017/S147106840400198X
PN 4
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 835AB
UT WOS:000222450900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hill, PM
   Zaffanella, E
   Bagnara, R
AF Hill, PM
   Zaffanella, E
   Bagnara, R
TI A correct, precise and efficient integration of set-sharing, fireeness
   and linearity for the analysis offinite and rational tree languages
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; logic progrannning; abstract Unification;
   rational trees; set-sharing; freeness; linearity
ID LOGIC PROGRAMS; ABSTRACT INTERPRETATION; FREENESS ANALYSIS;
   COMPLEMENTATION; DESIGN
AB It is well known that freeness and linearity information positively interact with aliasing information, allowing both the precision and the efficiency of the sharing analysis of logic programs to be improved. In this paper, we present a novel combination of set-sharing with freeness and linearity information, which is characterized by an improved abstract unification operator. We provide a new abstraction function and prove the correctness of the analysis for both the finite tree and the rational tree cases. Moreover, we show that the same notion of redundant information as identified in Bagnara et al. (2000) and Zaffanella et al. (2002) also applies to this abstract domain combination: this allows for the implementation of an abstract unification operator running in polynomial time and achieving the same precision on all the considered observable properties.
C1 Univ Leeds, Sch Comp, Leeds, W Yorkshire, England.
   Univ Parma, Dept Math, Parma, Italy.
C3 University of Leeds; University of Parma
RP Hill, PM (corresponding author), Univ Leeds, Sch Comp, Leeds, W Yorkshire, England.
EM hill@comp.leeds.ac.uk
RI Bagnara, Roberto/B-2420-2017; Bagnara, Roberto/AAB-3202-2022
OI Bagnara, Roberto/0000-0002-6163-6278; Bagnara,
   Roberto/0000-0002-6163-6278; Zaffanella, Enea/0000-0001-6388-2053
CR Bagnara R, 2000, LECT NOTES ARTIF INT, V1955, P189, DOI 10.1007/3-540-44404-1_13
   Bagnara R, 2001, LECT NOTES COMPUT SC, V2126, P165
   Bagnara R, 2002, THEOR COMPUT SCI, V277, P3, DOI 10.1016/S0304-3975(00)00312-1
   Bagnara R., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P103, DOI 10.1145/351268.351280
   BAGNARA R, 1997, TD197 U PISA DIP INF
   BAGNARA R, 2001, ENHANCED SHARING ANA
   BAGNARA R, 1997, LECT NOTES COMPUTER, V1302, P53
   BAGNARA R, 2001, LECT NOTES ARTIF INT, V2250, P579
   Bruynooghe M, 1995, LECT NOTES COMPUT SC, V1000, P406
   BRUYNOOGHE M, 1994, 196 CW DEP COMP SCI
   Bruynooghe M., 1994, VERIFICATION ANAL LO, P213
   BRUYNOOGHE M, 1993, LECT NOTES COMPUTER, V724, P153
   CLARK DT, 1978, CRC CRIT R SOLID ST, V1, P1
   CODISH M, 1995, ACM T PROGR LANG SYS, V17, P28, DOI 10.1145/200994.200998
   CODISH M, 1993, LOGIC PROGRAMM, P116
   Codish M., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P194, DOI 10.1145/154630.154650
   Codish M, 2000, J LOGIC PROGRAM, V42, P111, DOI 10.1016/S0743-1066(99)00007-2
   Codish M, 1996, J LOGIC PROGRAM, V28, P181, DOI 10.1016/0743-1066(95)00120-4
   CODISH M, 1991, ICLP, P79
   COLMERAUER A, 1990, COMMUN ACM, V33, P69, DOI 10.1145/79204.79210
   COLMERAUER A, 1984, P INT C 5 GEN COMP S, P85
   COLMERAUER A, 1982, LOGIC PROGRAMMING AP, V16, P231
   Cortesi A, 1998, THEOR COMPUT SCI, V202, P163, DOI 10.1016/S0304-3975(97)00137-0
   Cortesi A, 1999, J LOGIC PROGRAM, V38, P371, DOI 10.1016/S0743-1066(98)10026-2
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot Patrick, 1977, P 4 ACM S PRINC PROG, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   FILE G, 1994, 15 U PAD DIP MAT
   FURUKAWA K, 1991, LOGIC PROGRAMMING P
   Giacobazzi R, 1998, LECT NOTES COMPUT SC, V1450, P366, DOI 10.1007/BFb0055786
   HANS W, 1992, 9227 TECHN U AACHEN
   Hill PM, 2002, THEOR PRACT LOG PROG, V2, P155, DOI 10.1017/S1471068401001338
   Hill PM, 1998, LECT NOTES COMPUT SC, V1503, P99
   HILL PM, 2003, 200308 U LEEDS SCH C
   Howe JM, 2003, THEOR PRACT LOG PROG, V3, P243, DOI 10.1017/S1471068402001497
   INTRIGILA B, 1996, J SYMB COMPUT, V21, P2289
   JACOBS D, 1989, LOGIC PROGRAMM, P154
   JAFFAR J, 1987, THESIS ROYAL I TECHN, V3, P275
   KING A, 1994, MIT PS LOG, P553
   King A, 2000, J LOGIC PROGRAM, V46, P139, DOI 10.1016/S0743-1066(00)00009-1
   KING A, 1994, LECT NOTES COMPUTER, V788, P363
   Maher M. J., 1988, Proceedings of the Third Annual Symposium on Logic in Computer Science (Cat. No.88CH2608-8), P348, DOI 10.1109/LICS.1988.5132
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, INT C LOG PROGR, P49
   SMOLKA G, 1994, J LOGIC PROGRAM, V18, P229, DOI 10.1016/0743-1066(94)90044-2
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   *SWED I COMP SCI P, 1995, SICS PROL US MAN REL
   Zaffanella E, 2002, THEOR PRACT LOG PROG, V2, P233, DOI 10.1017/S1471068401001351
   Zaffanella E, 1999, LECT NOTES COMPUT SC, V1702, P414
   Zaffanella E, 1999, LECT NOTES COMPUT SC, V1694, P69
   ZAFFANELLA E, 2001, THESIS U LEEDS LEEDS
NR 50
TC 7
Z9 9
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2004
VL 4
BP 289
EP 323
DI 10.1017/S1471068403001868
PN 3
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 819GE
UT WOS:000221302000002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Borgwardt, S
   Forkel, W
   Kovtunova, A
AF Borgwardt, Stefan
   Forkel, Walter
   Kovtunova, Alisa
TI Temporal Minimal-World Query Answering over Sparse ABoxes
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning
ID TEXT
AB Ontology-mediated query answering is a popular paradigm for enriching answers to user queries with background knowledge. For querying the absence of information, however, there exist only few ontology-based approaches. Moreover, these proposals conflate the closed-domain and closed-world assumption and, therefore, are not suited to deal with the anonymous objects that are common in ontological reasoning. Many real-world applications, like processing electronic health records, also contain a temporal dimension and require efficient reasoning algorithms. Moreover, since medical data are not recorded on a regular basis, reasoners must deal with sparse data with potentially large temporal gaps. Our contribution consists of two main parts: In the first part, we introduce a new closed-world semantics for answering conjunctive queries (CQs) with negation over ontologies formulated in the description logic ELH1 , which is based on the minimal canonical model. We propose a rewriting strategy for dealing with negated query atoms, which shows that query answering is possible in polynomial time in data complexity. In the second part, we extend this minimal-world semantics for answering metric temporal CQs with negation over the lightweight temporal logic TELH1 lozenge,lhs,- and obtain similar rewritability and complexity results.
C1 [Borgwardt, Stefan; Forkel, Walter; Kovtunova, Alisa] Tech Univ Dresden, Dresden, Germany.
C3 Technische Universitat Dresden
RP Borgwardt, S (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM stefan.borgwardt@tu-dresden.de; walter.forkel@tu-dresden.de;
   alisa.kovtunova@tu-dresden.de
OI Kovtunova, Alisa/0000-0001-9936-0943
FU DFG [BA 1122/19-1, 389792660]
FX We thank the anonymous reviewers for their helpful comments on an
   earlier draft of the manuscript. This work was supported by the DFG
   grant BA 1122/19-1 (GOASQ) and grant 389792660 as part of TRR 248
CR Ahmetaj S., 2016, IJCAI, P878
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   [Anonymous], 2016, P INT JOINT C ARTIFI
   [Anonymous], 2017, An Introduction to Description Logic, DOI DOI 10.1017/9781139025355
   Arenas M, 2014, PODS'14: PROCEEDINGS OF THE 33RD ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P14, DOI 10.1145/2594538.2594555
   Aronson AR, 2001, J AM MED INFORM ASSN, P17
   Artale A, 2007, INT WORKSHOP TEMPORA, P11
   Artale A, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2706
   Artale A., 2013, P IJCAI, P711
   Artale A, 2014, ACM T COMPUT LOG, V15, DOI 10.1145/2629565
   Artale A, 2005, FOUND ARTIF INTELL, V1, P375
   Artale Alessandro., 2017, 24th International Symposium on Temporal Representation and Reasoning, TIME 2017, October 16-18, 2017, Mons, Belgium, V90, p1:1, DOI [10.4230/LIPIcs.TIME.2017.1, DOI 10.4230/LIPICS.TIME.2017.1]
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P219
   Baader Franz, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P330, DOI 10.1007/978-3-642-38574-2_23
   BAADER F, 2007, DESCRIPTION LOGIC HD
   Baader F, 2017, LECT NOTES ARTIF INT, V10483, P60, DOI 10.1007/978-3-319-66167-4_4
   Baader F, 2015, LECT NOTES ARTIF INT, V9457, P21, DOI 10.1007/978-3-319-26350-2_3
   Baader F, 2015, J WEB SEMANT, V33, P71, DOI 10.1016/j.websem.2014.11.008
   Baader F, 2012, ACM T COMPUT LOG, V13, DOI 10.1145/2287718.2287721
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Barany V, 2012, PROC VLDB ENDOW, V5, P1328, DOI 10.14778/2350229.2350250
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   BAUSLAUGH B, 1995, DISCRETE MATH, V138, P101, DOI 10.1016/0012-365X(94)00191-K
   Besana P, 2010, LECT NOTES COMPUT SC, V6497, P34, DOI 10.1007/978-3-642-17749-1_3
   Bienvenu M, 2015, LECT NOTES COMPUT SC, V9203, P218, DOI 10.1007/978-3-319-21768-0_9
   Bonomi L, 2018, J BIOMED INFORM, V78, P43, DOI 10.1016/j.jbi.2017.12.007
   Borgwardt S., 2015, EPIC SERIES COMPUTIN, P51
   Borgwardt S., 2019, P 3 INT JOINT C RULE
   Borgwardt S, 2020, Arxiv, DOI arXiv:2003.09508
   Borgwardt S, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2819
   Borgwardt S, 2015, J WEB SEMANT, V33, P50, DOI 10.1016/j.websem.2014.11.007
   Borgwardt S, 2013, LECT NOTES COMPUT SC, V8152, P165, DOI 10.1007/978-3-642-40885-4_11
   Brandt S, 2018, J ARTIF INTELL RES, V62, P829, DOI 10.1613/jair.1.11229
   Calvanese D, 2017, SEMANT WEB, V8, P471, DOI 10.3233/SW-160217
   Calvanese D, 2013, ARTIF INTELL, V195, P335, DOI 10.1016/j.artint.2012.10.003
   Cresswell KM, 2017, KEY ADVANCES IN CLINICAL INFORMATICS: TRANSFORMING HEALTH CARE THROUGH HEALTH INFORMATION TECHNOLOGY, P13, DOI 10.1016/B978-0-12-809523-2.00002-9
   Crowe Christopher L, 2015, AMIA Jt Summits Transl Sci Proc, V2015, P173
   Deutsch A., 2008, PODS, P149
   Eiter T., 2012, P AAAI 12, P726
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Forkel W., 2020, THESIS TU DRESDEN GE
   Furia CA, 2008, LECT NOTES COMPUT SC, V5160, P126, DOI 10.1007/978-3-540-85762-4_9
   Gutierrez-Basulto V., 2016, PROC IJCAI, P1102
   Gutiérrez-Basulto V, 2016, FRONT ARTIF INTEL AP, V285, P837, DOI 10.3233/978-1-61499-672-9-837
   Gutiérrez-Basulto V, 2015, J WEB SEMANT, V35, P184, DOI 10.1016/j.websem.2015.06.002
   Hernich Andre, 2013, PODS, P225, DOI DOI 10.1145/2463664.2465229
   Johnson AEW, 2016, SCI DATA, V3, DOI 10.1038/sdata.2016.35
   Kharlamov E, 2017, J WEB SEMANT, V44, P3, DOI 10.1016/j.websem.2017.05.005
   Köpcke F, 2014, J MED INTERNET RES, V16, P26, DOI 10.2196/jmir.3446
   Kontchakov R., 2011, IJCAI 2011 P 22 INT, P2656, DOI [DOI 10.5591/978-1-57735-516-8/IJCAI11, DOI 10.5591/978-1-57735-516-8/IJCAI11-442]
   Krotzsch M., 2020, P 17 INT C PRINCIPLE
   LINDELL S, 1992, STRUCT COMPL TH CONF, P185, DOI 10.1109/SCT.1992.215393
   Lutz C., 2013, PROC IJCAI 2013, P1024
   Lutz C, 2008, TIME 2008: 15TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P3, DOI 10.1109/TIME.2008.14
   Lutz C, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P2070
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Masuzawa N., 2020, Lecture Notes in Computer Science, P681, DOI 10.1007/978-3-642-35289-8_1
   Mugnier ML, 2014, LECT NOTES COMPUT SC, V8714, P245, DOI 10.1007/978-3-319-10587-1_6
   Ni YZ, 2015, BMC MED INFORM DECIS, V15, DOI 10.1186/s12911-015-0149-3
   Rosati R., 2007, CEUR Workshop Proceedings, V250
   Rosati R, 2006, LECT NOTES COMPUT SC, V4353, P164
   Ryzhikov V, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1851
   Savova GK, 2010, J AM MED INFORM ASSN, V17, P507, DOI 10.1136/jamia.2009.001560
   TAGARIS A., 2014, EXPLOITING ONTOLOGY, P21
   Terragni S., 2021, CEUR WORKSHOP PROC, V3033
   Thost V, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P665
   Vardi M. Y., 1982, P STOC ACM, P137
   Wolter F., 2000, Studia Logica, V65, P249, DOI 10.1023/A:1005271815356
   Wolter F., 1999, FRONTIERS COMBINING, V2, P379
   Xu C., 2019, P 9 WORKSHOP ONTOLOG
NR 71
TC 1
Z9 1
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2022
VL 22
IS 2
SI SI
BP 193
EP 228
AR PII S1471068421000119
DI 10.1017/S1471068421000119
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M9AN
UT WOS:000889154700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Brown, PS
   Dimitrova, V
   Hart, G
   Cohn, AG
   Moura, P
AF Brown, Paul S.
   Dimitrova, Vania
   Hart, Glen
   Cohn, Anthony G.
   Moura, Paulo
TI Refactoring the Whitby Intelligent Tutoring System for Clean
   Architecture
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE architecture; dependency inversion; Prolog modules; Logtalk
AB Whitby is the server-side of an Intelligent Tutoring System application for learning SystemTheoretic Process Analysis (STPA), a methodology used to ensure the safety of anything that can be represented with a systems model. The underlying logic driving the reasoning behind Whitby is Situation Calculus, which is a many-sorted logic with situation, action, and object sorts. The Situation Calculus is applied to Ontology Authoring and Contingent Scaffolding: the primary activities within Whitby. Thus many fluents and actions are aggregated in Whitby from these two sub-applications and from Whitby itself, but all are available through a common situation query interface that does not depend upon any of the fluents or actions. Each STPA project in Whitby is a single situation term, which is queried for fluents that include the ontology, and to determine what pedagogical interventions to offer. Initially Whitby was written in Prolog using a module system. In the interest of a cleaner architecture and implementation with improved code reuse and extensibility, the initial application was refactored into Logtalk. This refactoring includes decoupling the Situation Calculus reasoner, Ontology Authoring framework, and Contingent Scaffolding framework into third-party libraries that can be reused in other applications. This extraction was achieved by inverting dependencies via Logtalk protocols and categories, which are reusable interfaces and components that provide functionally cohesive sets of predicate declarations and predicate definitions. In this paper the architectures of two iterations of Whitby are evaluated with respect to the motivations behind the refactor: clean architecture enabling code reuse and extensibility.
C1 [Brown, Paul S.; Dimitrova, Vania] Univ Leeds, Leeds, W Yorkshire, England.
   [Hart, Glen] Def Sci & Technol Lab Dstl, Porton Down, Wilts, England.
   [Cohn, Anthony G.] Univ Leeds, Leeds, W Yorkshire, England.
   [Cohn, Anthony G.] Qingdao Univ Sci & Technol, Qingdao, Peoples R China.
   [Cohn, Anthony G.] Tongji Univ, Shanghai, Peoples R China.
   [Cohn, Anthony G.] Shandong Univ, Jinan, Peoples R China.
   [Moura, Paulo] INESC TEC, Ctr Res Adv Comp Syst, Porto, Portugal.
C3 University of Leeds; Defence Science & Technology Laboratory; University
   of Leeds; Qingdao University of Science & Technology; Tongji University;
   Shandong University; INESC TEC
RP Brown, PS (corresponding author), Univ Leeds, Leeds, W Yorkshire, England.
EM sc16pb@leeds.ac.uk; v.g.dimitrova@leeds.ac.uk; a.g.cohn@leeds.ac.uk;
   pmoura@logtalk.org
FU EPSRC CASE studentship - Defence Science and Technology Laboratory; EU
   AI4EU project [825619]
FX The authors gratefully acknowledge the financial support provided: an
   EPSRC CASE studentship partially funded by the Defence Science and
   Technology Laboratory. The fourth author is partially funded by the EU
   AI4EU project (825619) and is a Fellow of the Alan Turing Institute.
CR [Anonymous], 1995, 132111 ISOIEC
   [Anonymous], 1995, PROFESSIONAL COMPUTI
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   ISO/IEC, 2000, 132112 ISO IEC
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Moura P., 2011, LECT NOTES ARTIFICIA, V6547, P52
   Moura P., 2021, LOGTALK HDB, V0
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   WOOD D, 1976, J CHILD PSYCHOL PSYC, V17, P89, DOI 10.1111/j.1469-7610.1976.tb00381.x
NR 9
TC 0
Z9 0
U1 2
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 818
EP 834
DI 10.1017/S1471068421000326
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800008
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fidan, M
   Erdem, E
AF Fidan, Muge
   Erdem, Esra
TI Knowledge-Based Stable Roommates Problem: A Real-World Application
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stable roommates problem; answer set programming; declarative problem
   solving
AB The Stable Roommates problem with Ties and Incomplete lists (SRTI) is a matching problem characterized by the preferences of agents over other agents as roommates, where the preferences may have ties or be incomplete. SRTI asks for a matching that is stable and, sometimes, optimizes a domain-independent fairness criterion (e.g. Egalitarian). However, in real-world applications (e.g. assigning students as roommates at a dormitory), we usually consider a variety of domain-specific criteria depending on preferences over the habits and desires of the agents. With this motivation, we introduce a knowledge-based method to SRTI considering domain-specific knowledge and investigate its real-world application for assigning students as roommates at a university dormitory.
C1 [Fidan, Muge; Erdem, Esra] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
C3 Sabanci University
RP Fidan, M (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
EM mugefidan@sabanciuniv.edu; esra.erdem@sabanciuniv.edu
RI Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810; Fidan, Muge/0000-0002-7646-6531
CR Abraham D. J., 2005, Approximation and Online Algorithms. Third International Workshop, WAOA 2005. Revised Papers (Lecture Notes in Computer Science Vol. 3879), P1
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Boehmer N, 2020, P 19 INT C AUTONOMOU, DOI DOI 10.5555/3398761.3398980
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Cooper F., 2020, THESIS U GLASGOW
   Erdem E, 2020, THEOR PRACT LOG PROG, V20, P911, DOI 10.1017/S1471068420000277
   ERDOS P, 1960, B INT STATIST INST, V38, P343
   FEDER T, 1992, J COMPUT SYST SCI, V45, P233, DOI 10.1016/0022-0000(92)90048-N
   GALE D, 1962, AM MATH MON, V69, P9, DOI 10.2307/2312726
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gusfield D., 1989, STABLE MARRIAGE PROB
   Irving RW, 2009, J DISCRET ALGORITHMS, V7, P213, DOI 10.1016/j.jda.2008.09.003
   Irving RW, 2002, J ALGORITHM, V43, P85, DOI 10.1006/jagm.2002.1219
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Mertens S, 2005, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2005/10/P10008
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   RONN E, 1990, J ALGORITHM, V11, P285, DOI 10.1016/0196-6774(90)90007-2
NR 18
TC 0
Z9 0
U1 2
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 852
EP 869
DI 10.1017/S1471068421000302
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800010
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Alviano, M
   Batsakis, S
   Baryannis, G
AF Alviano, Mario
   Batsakis, Sotiris
   Baryannis, George
TI Modal Logic S5 Satisfiability in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE modal logic; S5; Answer Set Programming; Kripke semantics
ID SYSTEMS
AB Modal logic S5 has attracted significant attention and has led to several practical applications, owing to its simplified approach to dealing with nesting modal operators. Efficient implementations for evaluating satisfiability of S5 formulas commonly rely on Skolemisation to convert them into propositional logic formulas, essentially by introducing copies of propositional atoms for each set of interpretations (possible worlds). This approach is simple, but often results into large formulas that are too difficult to process, and therefore more parsimonious constructions are required. In this work, we propose to use Answer Set Programming for implementing such constructions, and in particular for identifying the propositional atoms that are relevant in every world by means of a reachability relation. The proposed encodings are designed to take advantage of other properties such as entailment relations of subformulas rooted by modal operators. An empirical assessment of the proposed encodings shows that the reachability relation is very effective and leads to comparable performance to a state-of-the-art S5 solver based on SAT, while entailment relations are possibly too expensive to reason about and may result in overhead.
C1 [Alviano, Mario] Univ Calabria, Commenda Di Rende, Italy.
   [Batsakis, Sotiris] Tech Univ Crete, Khania, Greece.
   [Batsakis, Sotiris] Univ Huddersfield, Huddersfield, W Yorkshire, England.
   [Baryannis, George] Univ Huddersfield, Sch Comp & Engn, Huddersfield, W Yorkshire, England.
C3 University of Calabria; Technical University of Crete; University of
   Huddersfield; University of Huddersfield
RP Alviano, M (corresponding author), Univ Calabria, Commenda Di Rende, Italy.
EM alviano@mat.unical.it; s.batsakis@hud.ac.uk; g.bargiannis@hud.ac.uk
RI Baryannis, George/P-5884-2014; Alviano, Mario/H-1355-2012
OI Baryannis, George/0000-0002-2118-5812; 
CR Abate P., 2007, WORKSH AG DED TABLEA
   [Anonymous], 1999, Handbook of Tableau Methods
   Auffray Y., 1990, Journal of Automated Reasoning, V6, P1, DOI 10.1007/BF00302639
   Baryannis G, 2020, THEOR PRACT LOG PROG, V20, P687, DOI 10.1017/S1471068420000198
   Baryannis G, 2018, THEOR PRACT LOG PROG, V18, P355, DOI 10.1017/S147106841800011X
   Batsakis S, 2018, FRONT ARTIF INTEL AP, V313, P31, DOI 10.3233/978-1-61499-935-5-31
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Caridroit T, 2017, AAAI CONF ARTIF INTE, P3864
   Fitting M, 1999, ANN PURE APPL LOGIC, V96, P107, DOI 10.1016/S0168-0072(98)00034-7
   Gasquet O, 2005, LECT NOTES ARTIF INT, V3702, P318
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Giunchiglia E., 2000, Journal of Applied Non-Classical Logics, V10, P145
   Goré R, 2019, J SYMBOLIC LOGIC, V84, P439, DOI 10.1017/jsl.2017.66
   Götzmann D, 2010, ELECTRON NOTES THEOR, V262, P127, DOI 10.1016/j.entcs.2010.04.010
   Hella L, 2015, DISTRIB COMPUT, V28, P31, DOI 10.1007/s00446-013-0202-3
   Huang P, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1093
   Kaminski Mark, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P436, DOI 10.1007/978-3-642-38574-2_31
   Kripke S.A., 1959, J. Symb. Log, V24, P1, DOI [10.2307/2964568, DOI 10.2307/2964568]
   Ladner R. E., 1977, SIAM Journal on Computing, V6, P467, DOI 10.1137/0206033
   Liau CJ, 2003, ARTIF INTELL, V149, P31, DOI 10.1016/S0004-3702(03)00063-8
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Moses Y, 2008, FOUND ARTIF INTELL, P621, DOI 10.1016/S1574-6526(07)03015-5
   Moss LS, 2007, STUD LOGIC PRACT REA, V3, P1031
   Nalon C, 2007, J ALGORITHMS, V62, P117, DOI 10.1016/j.jalgor.2007.04.001
   Nalon C, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4919
   Ohlbach H. J., 1991, Journal of Logic and Computation, V1, P691, DOI 10.1093/logcom/1.5.691
   PLAISTED DA, 1986, J SYMB COMPUT, V2, P293, DOI 10.1016/S0747-7171(86)80028-1
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Sebastiani R, 2009, J ARTIF INTELL RES, V35, P343, DOI 10.1613/jair.2675
NR 29
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 527
EP 542
AR PII S1471068421000247
DI 10.1017/S1471068421000247
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rizwan, M
   Patoglu, V
   Erdem, E
AF Rizwan, Momina
   Patoglu, Volkan
   Erdem, Esra
TI Human Robot Collaborative Assembly Planning: An Answer Set Programming
   Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer set programming; cognitive robotics; conditional planning;
   assembly planning; human-robot interaction; hybrid reasoning; robotic
   planning; planning under uncertainty
AB For planning an assembly of a product from a given set of parts, robots necessitate certain cognitive skills: high-level planning is needed to decide the order of actuation actions, while geometric reasoning is needed to check the feasibility of these actions. For collaborative assembly tasks with humans, robots require further cognitive capabilities, such as commonsense reasoning, sensing, and communication skills, not only to cope with the uncertainty caused by incomplete knowledge about the humans' behaviors but also to ensure safer collaborations. We propose a novel method for collaborative assembly planning under uncertainty, that utilizes hybrid conditional planning extended with commonsense reasoning and a rich set of communication actions for collaborative tasks. Our method is based on answer set programming. We show the applicability of our approach in a real-world assembly domain, where a bi-manual Baxter robot collaborates with a human teammate to assemble furniture.
C1 [Rizwan, Momina; Patoglu, Volkan; Erdem, Esra] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
C3 Sabanci University
RP Rizwan, M (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
EM momina@sabanciuniv.edu; volkan.patoglu@sabanciuniv.edu;
   esra.erdem@sabanciuniv.edu
RI Patoglu, Volkan/AAC-5081-2019; Erdem, Esra/I-4587-2012
OI Patoglu, Volkan/0000-0001-6644-3937; Rizwan, Momina/0000-0002-9426-2954;
   Erdem, Esra/0000-0001-8384-7810
CR Baral C, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P948
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Giuliani M, 2013, ICMI'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL CONFERENCE ON MULTIMODAL INTERACTION, P263, DOI 10.1145/2522848.2522869
   Grigore EC, 2016, ACMIEEE INT CONF HUM, P615, DOI 10.1109/HRI.2016.7451883
   Karaman S, 2011, INT J ROBOT RES, V30, P846, DOI 10.1177/0278364911406761
   Kim J, 2017, AAAI CONF ARTIF INTE, P955
   Lasota PA, 2015, HUM FACTORS, V57, P21, DOI 10.1177/0018720814565188
   Peot M. A, 1992, P 1 INT C AI PLANN S, P189
   Petrick R., 2013, INT C AUT PLANN SCHE
   Pryer L, 1996, J ARTIF INTELL RES, V4, P287
   SEBASTIANI E., 2017, INT C AUT PLANN SCHE
   Sucan IA, 2012, IEEE ROBOT AUTOM MAG, V19, P72, DOI 10.1109/MRA.2012.2205651
   Tellex S, 2014, P ROB SCI SYST
   Unhelkar VV, 2014, ACMIEEE INT CONF HUM, P82, DOI 10.1145/2559636.2559655
   WARREN DHD, 1976, P SUMM C ART INT SIM, P344
   Yalciner IF, 2017, THEOR PRACT LOG PROG, V17, P1027, DOI 10.1017/S1471068417000321
NR 17
TC 9
Z9 11
U1 7
U2 37
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 1006
EP 1020
AR PII S1471068420000319
DI 10.1017/S1471068420000319
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Burigana, A
   Fabiano, F
   Dovier, A
   Pontelli, E
AF Burigana, Alessandro
   Fabiano, Francesco
   Dovier, Agostino
   Pontelli, Enrico
TI Modelling Multi-Agent Epistemic Planning in ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Epistemic Reasoning; Multi-Shot ASP; Planning; Multi-Agent;
   Possibilities
ID LOGIC
AB Designing agents that reason and act upon the world has always been one of the main objectives of the Artificial Intelligence community. While for planning in "simple" domains the agents can solely rely on facts about the world, in several contexts,e.g., economy, security, justice and politics, the mere knowledge of the world could be insufficient to reach a desired goal. In these scenarios,epistemicreasoning,i.e., reasoning about agents' beliefs about themselves and about other agents' beliefs, is essential to design winning strategies. This paper addresses the problem of reasoning in multi-agent epistemic settings exploiting declarative programming techniques. In particular, the paper presents an actual implementation of a multi-shotAnswer Set Programming-based planner that can reason in multi-agent epistemic settings, called PLATO (ePistemic muLti-agentAnswer seTprogramming sOlver). The ASP paradigm enables a concise and elegant design of the planner, w.r.t. other imperative implementations, facilitating the development of formal verification of correctness. The paper shows how the planner, exploiting an ad-hoc epistemic state representation and the efficiency of ASP solvers, has competitive performance results on benchmarks collected from the literature.
C1 [Burigana, Alessandro; Fabiano, Francesco; Dovier, Agostino] Univ Udine, Udine, Italy.
   [Pontelli, Enrico] New Mexico State Univ, Las Cruces, NM 88003 USA.
C3 University of Udine; New Mexico State University
RP Burigana, A (corresponding author), Univ Udine, Udine, Italy.
EM burigana.alessandro@spes.uniud.it; francesco.fabiano@uniud.it;
   agostino.dovier@uniud.it; epontell@cs.nmsu.edu
RI Fabiano, Francesco/AAB-5773-2020; Dovier, Agostino/JAO-3262-2023;
   Pontelli, Enrico/AAJ-5161-2021
OI Fabiano, Francesco/0000-0002-1161-0336; Pontelli,
   Enrico/0000-0002-7753-1737; Burigana, Alessandro/0000-0002-9977-6735;
   Dovier, Agostino/0000-0003-2052-8593
FU Indam GNCS; NSF [1914635, 1833630, 1345232]; Uniud project ENCASE;
   Direct For Education and Human Resources; Division Of Human Resource
   Development [1914635] Funding Source: National Science Foundation;
   Direct For Education and Human Resources; Division Of Undergraduate
   Education [1833630] Funding Source: National Science Foundation
FX The authors wish to thank Martin Gebser and Roland Kaminski for their
   suggestions on the ASP encoding and the anonymous Reviewers for their
   comments that allowed to improve the presentation. The research is
   partially supported by Indam GNCS, by Uniud project ENCASE, and by NSF
   grants 1914635, 1833630, and 1345232.
CR ACZEL P, 1988, CSLI, P14
   Baral C., 2010, Proceed- ings of the 9th International Conference on Autonomous Agents and Multiagent Systems, volume 1 of AAMAS '10, P259
   Baral C., 2015, CORR
   Bolander Thomas, 2011, Journal of Applied Non-Classical Logic, V21, P9, DOI 10.3166/jancl.21.9-34
   Castellini C., 2001, P 6 EUR C PLANN ECP
   de Weerdt M, 2003, ANN MATH ARTIF INTEL, V37, P93, DOI 10.1023/A:1020236119243
   de Weerdt M, 2009, MULTIAGENT GRID SYST, V5, P345, DOI 10.3233/MGS-2009-0133
   Dovier A., 2015, ICLP, V1433
   Dovier A, 2013, THEOR PRACT LOG PROG, V13, P149, DOI 10.1017/S1471068411000615
   Durfee EH, 1999, AI MAG, V20, P55
   Fabiano Francesco, 2020, P 30 INT C AUT PLANN, V30, P101
   Fabiano Francesco, 2019, P 34RD ITALIAN C COM, P242
   Fagin R, 1995, Reasoning about knowledge
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gerbrandy J., 1997, Journal of Logic, Language and Information, V6, P147, DOI 10.1023/A:1008222603071
   Goldman CV, 2004, J ARTIF INTELL RES, V22, P143, DOI 10.1613/jair.1427
   Huang X, 2017, COUPLED PROBLEMS IN SCIENCE AND ENGINEERING VII (COUPLED PROBLEMS 2017), P1092
   Kominis F, 2015, P I C AUTOMAT PLAN S, P147
   Kripke S., 1963, ACTA PHILOS FENN, V16, P83
   Löwe B, 2011, LECT NOTES ARTIF INT, V6953, P179, DOI 10.1007/978-3-642-24130-7_13
   Son TC, 2005, LECT NOTES ARTIF INT, V3662, P172, DOI 10.1007/11546207_14
   Le T, 2018, P I C AUTOMAT PLAN S, P161
   Son TC, 2014, LECT NOTES ARTIF INT, V8761, P239, DOI 10.1007/978-3-319-11558-0_17
   van der Hoek W., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1167
   VanDitmarsch H, 2007, SYNTH LIBR, V337, P1, DOI 10.1007/978-1-4020-5839-4
NR 28
TC 5
Z9 5
U1 1
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 593
EP 608
AR PII S1471068420000289
DI 10.1017/S1471068420000289
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Escobar, S
   Sapiña, J
   Ballis, D
AF Alpuente, Maria
   Escobar, Santiago
   Sapina, Julia
   Ballis, Demis
TI Symbolic Analysis of Maude Theories with Narval
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Symbolic reachability analysis; narrowing; equational unification;
   Maude; rewriting logic
ID CONDITIONAL REWRITING LOGIC
AB Concurrent functional languages that are endowed with symbolic reasoning capabilities such as Maude offer a high-level, elegant, and efficient approach to programming and analyzing complex, highly nondeterministic software systems. Maude's symbolic capabilities are based on equational unification and narrowing in rewrite theories, and provide Maude with advanced logic programming capabilities such as unification modulo user-definable equational theories and symbolic reachability analysis in rewrite theories. Intricate computing problems may be effectively and naturally solved in Maude thanks to the synergy of these recently developed symbolic capabilities and classical Maude features, such as: (i) rich type structures with sorts (types), subsorts, and overloading; (ii) equational rewriting modulo various combinations of axioms such as associativity, commutativity, and identity; and (iii) classical reachability analysis in rewrite theories. However, the combination of all of these features may hinder the understanding of Maude symbolic computations for non-experienced developers. The purpose of this article is to describe how programming and analysis of Maude rewrite theories can be made easier by providing a sophisticated graphical tool called Narval that supports the fine-grained inspection of Maude symbolic computations.
C1 [Alpuente, Maria; Escobar, Santiago; Sapina, Julia] Univ Politecn Valencia, VRAIN Valencian Res Inst Artificial Intelligence, Valencia, Spain.
   [Ballis, Demis] Univ Udine, DMIF, Udine, Italy.
C3 Universitat Politecnica de Valencia; University of Udine
RP Alpuente, M (corresponding author), Univ Politecn Valencia, VRAIN Valencian Res Inst Artificial Intelligence, Valencia, Spain.
EM alpuente@upv.es; sescobar@upv.es; jsapina@upv.es; demis.ballis@uniud.it
RI Sapiña, Julia/P-8581-2019; ALPUENTE, MARÍA/E-1899-2012; Escobar,
   Santiago/AAL-3399-2020
OI Sapiña, Julia/0000-0003-2994-6986; ALPUENTE, MARÍA/0000-0002-9268-1178;
   Escobar, Santiago/0000-0002-3550-4781
FU EU (FEDER) [RTI2018-094403-B-C32]; Spanish MCIU [RTI2018-094403-B-C32];
   Spanish Generalitat Valenciana [PROMETEO/2019/098, APOSTD/2019/127]; US
   Air Force Office of Scientific Research [FA9550-17-1-0286]
FX This work has been partially supported by the EU (FEDER) and the Spanish
   MCIU under grant RTI2018-094403-B-C32, by the Spanish Generalitat
   Valenciana under grants PROMETEO/2019/098 and APOSTD/2019/127, and by
   the US Air Force Office of Scientific Research under award number
   FA9550-17-1-0286.
CR Alpuente M, 2019, J SYST SOFTWARE, V153, P64, DOI 10.1016/j.jss.2019.03.061
   Alpuente M, 2017, THEOR PRACT LOG PROG, V17, P689, DOI 10.1017/S147106841700031X
   Alpuente M, 2016, THEOR PRACT LOG PROG, V16, P515, DOI 10.1017/S1471068416000375
   Alpuente M, 2015, J SYMB COMPUT, V69, P3, DOI 10.1016/j.jsc.2014.09.028
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   CLAVEL M, 2016, TECH REP
   Durán F, 2018, LECT NOTES COMPUT SC, V11152, P98, DOI 10.1007/978-3-319-99840-4_6
   Escobar S, 2012, J LOGIC ALGEBR PROGR, V81, P898, DOI 10.1016/j.jlap.2012.01.002
   Garavel H, 2018, LECT NOTES COMPUT SC, V11152, P1, DOI 10.1007/978-3-319-99840-4_1
   Hahnle R., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P143, DOI DOI 10.1145/1858996.1859022
   Hanus Michael, 2013, Programming Logics. Essays in Memory of Harald Ganzinger: LNCS 7797, P123, DOI 10.1007/978-3-642-37651-1_6
   Honfi D., 2015, 2015 IEEE 8 INT C SO, P1, DOI 10.1109/ICST.2015.7102631
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2018, LECT NOTES COMPUT SC, V10944, P25, DOI 10.1007/978-3-662-57669-4_2
   Meseguer J, 2012, J LOGIC ALGEBR PROGR, V81, P721, DOI 10.1016/j.jlap.2012.06.003
   MIDDELDORP A, 1992, LECT NOTES COMPUT SC, V632, P244, DOI 10.1007/BFb0013830
NR 17
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 874
EP 890
DI 10.1017/S1471068419000243
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500016
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
   Maratea, M
AF Alviano, Mario
   Dodaro, Carmine
   Maratea, Marco
TI Shared aggregate sets in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE answer set programming; aggregations in logic programming; efficient
   computation
ID DYNAMIC MAGIC SETS; CONSTRAINTS; COMPLEXITY; SEMANTICS; IMPLEMENTATION;
   DESIGN; BACK; SAT
AB Aggregates are among the most frequently used linguistic extensions of answer set programming. The result of an aggregation may introduce new constants during the instantiation of the input program, a feature known as value invention. When the aggregation involves literals whose truth value is undefined at instantiation time, modern grounders introduce several instances of the aggregate, one for each possible interpretation of the undefined literals. This paper introduces new data structures and techniques to handle such cases, and more in general aggregations on the same aggregate set identified in the ground program in input. The proposed solution reduces the memory footprint of the solver without sacrificing efficiency. On the contrary, the performance of the solver may improve thanks to the addition of some simple entailed clauses which are not easily discovered otherwise, and since redundant computation is avoided during propagation. Empirical evidence of the potential impact of the proposed solution is given.
C1 [Alviano, Mario] Univ Calabria, DEMACS, Commenda Di Rende, Italy.
   [Dodaro, Carmine; Maratea, Marco] Univ Genoa, DIBRIS, Genoa, Italy.
C3 University of Calabria; University of Genoa
RP Alviano, M (corresponding author), Univ Calabria, DEMACS, Commenda Di Rende, Italy.
EM alviano@mat.unical.it; dodaro@dibris.unige.it; marco@dibris.unige.it
RI Maratea, Marco/AAR-5779-2020; Alviano, Mario/H-1355-2012; Dodaro,
   Carmine/AAE-5732-2020
OI Dodaro, Carmine/0000-0002-5617-5286
FU POR CALABRIA FESR project "DLV Large Scale" [CUP J28C17000220006]; EU
   H2020 PON I&C project "S2BDW" [CUP B28I17000250008]; GNCS-INdAM; Grant
   FFABR [232/2016]
FX Mario Alviano has been partially supported by the POR CALABRIA FESR
   2014-2020 project "DLV Large Scale" (CUP J28C17000220006), by the EU
   H2020 PON I&C 2014- 2020 project "S2BDW" (CUP B28I17000250008), and by
   GNCS-INdAM. Carmine Dodaro has been partially by the Grant FFABR, "Fondo
   per il finanziamento delle attivita base di ricerca, comma 295 della
   Legge di Bilancio 2017 (Legge 232/2016)".
CR AAVANI A., 2013, S ABSTR REF APPR
   Abio Ignasi, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P70, DOI 10.1007/978-3-642-33558-7_8
   Abío I, 2012, J ARTIF INTELL RES, V45, P443, DOI 10.1613/jair.3653
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   Alviano M., 2016, P 25 INT JOINT C ART, P886
   ALVIANO M., 2015, THEOR PRACT LOG PROG, V15, P4
   Alviano M, 2016, INT JOINT C ART INT, P4105
   Alviano M, 2016, INT JOINT C ART INT, P4100
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2011, INTELL ARTIF, V5, P207, DOI 10.3233/IA-2011-0023
   Alviano M, 2016, FUND INFORM, V149, P1, DOI 10.3233/FI-2016-1441
   Alviano M, 2016, AAAI CONF ARTIF INTE, P879
   Alviano M, 2016, THEOR PRACT LOG PROG, V16, P533, DOI 10.1017/S147106841600020X
   Alviano M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2677
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P574, DOI 10.1017/S147106841500023X
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P339, DOI 10.1017/S147106841300001X
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Alviano M, 2011, LECT NOTES ARTIF INT, V6645, P148
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   Alviano M, 2011, J ARTIF INTELL RES, V42, P487
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   Bailleux O, 2009, LECT NOTES COMPUT SC, V5584, P181, DOI 10.1007/978-3-642-02777-2_19
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Bartholomew M, 2011, LOGICAL FORMALIZATIO
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Bomanson Jori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P143, DOI 10.1007/978-3-319-23264-5_13
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Bomanson J, 2013, LECT NOTES COMPUT SC, V8148, P187, DOI 10.1007/978-3-642-40564-8_19
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F., 2013, ASP CORE 2 INPUT LAN
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Cuteri B, 2017, THEOR PRACT LOG PROG, V17, P780, DOI 10.1017/S1471068417000254
   Cuteri Bernardo, 2017, THEOR PRACT LOG PROG, V17, P780
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Dodaro C., 2011, CILC, P99
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   FABER W., 2008, THEOR PRACT LOG PROG, V8, P5
   Faber W, 2011, FUND INFORM, V107, P379, DOI 10.3233/FI-2011-408
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   FERRARIS P., 2005, THEOR PRACT LOG PROG, V5, P1
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2013, AAAI C ART INT
   GEBSER M., 2015, THEOR PRACT LOG PROG, V15, P4
   Gebser M., 2013, INT JOINT C ART INT
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GIUNCHIGLIA E., 2008, ANN MATH ARTIFICIAL, V53, P1
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2016, AI MAG, V37, P13, DOI 10.1609/aimag.v37i3.2671
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V, 2016, AI MAG, V37, P7, DOI 10.1609/aimag.v37i3.2670
   LIU L., 2010, ARTIF INTELL, V174, P3
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
NR 76
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 301
EP 318
DI 10.1017/S1471068418000133
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400002
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Schubert, A
   Urzyczyn, P
AF Schubert, Aleksy
   Urzyczyn, Pawel
TI First-order Answer Set Programming as Constructive Proof Search
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Answer set programming; intuitionistic logic; proof terms; lambda
   calculus
ID INTUITIONISTIC LOGIC
AB We propose an interpretation of the first-order answer set programming (FOASP) in terms of intuitionistic proof theory. It is obtained by two polynomial translations between FOASP and the bounded-arity fragment of the Sigma(1) level of the Mints hierarchy in first-order intuitionistic logic. It follows that Sigma(1) formulas using predicates of fixed arity (in particular unary) is of the same strength as FOASP. Our construction reveals a close similarity between constructive provability and stable entailment, or equivalently, between the construction of an answer set and an intuitionistic refutation. This paper is under consideration for publication in Theory and Practice of Logic Programming.
C1 [Schubert, Aleksy; Urzyczyn, Pawel] Univ Warsaw, Warsaw, Poland.
C3 University of Warsaw
RP Schubert, A (corresponding author), Univ Warsaw, Warsaw, Poland.
EM alx@mimuw.edu.pl; urzy@mimuw.edu.pl
RI Schubert, Aleksy/W-8654-2019
OI Schubert, Aleksy/0000-0002-9316-6098
CR Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Fu P, 2017, FORM ASP COMPUT, V29, P453, DOI 10.1007/s00165-016-0403-1
   Kolaitis P. G., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P231, DOI 10.1145/308386.308446
   Lifschitz V., 2008, AAAI, V3, P1594
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Osorio M, 2004, THEOR PRACT LOG PROG, V4, P325, DOI 10.1017/S1471068403001881
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Schubert Aleksy, 2016, Logical Methods in Computer Science, V12, DOI 10.2168/LMCS-12(4:11)2016
   Schubert A., 2015, LIPICS, V39, P251
   Schubert A, 2018, INDAGAT MATH NEW SER, V29, P276, DOI 10.1016/j.indag.2017.05.006
NR 12
TC 2
Z9 2
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 673
EP 690
DI 10.1017/S147106841800008X
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400024
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Lee, J
   Loney, N
   Meng, Y
AF Lee, Joohyung
   Loney, Nikhil
   Meng, Yunsong
TI Representing hybrid automata by action language modulo theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Answer set programming; Action languages; Hybrid automata
AB Both hybrid automata and action languages are formalisms for describing the evolution of dynamic systems. This paper establishes a formal relationship between them. We show how to succinctly represent hybrid automata in an action language which in turn is defined as a high-level notation for answer set programming modulo theories-an extension of answer set programs to the firstorder level similar to the way satisfiability modulo theories (SMT) extends propositional satisfiability (SAT). We first show how to represent linear hybrid automata with convex invariants by an action language modulo theories. A further translation into SMT allows for computing them using SMT solvers that support arithmetic over reals. Next, we extend the representation to the general class of non-linear hybrid automata allowing even non-convex invariants. We represent them by an action language modulo ordinary differential equations, which can be compiled into satisfiability modulo ordinary differential equations. We present a prototype system CPLUS2ASPMT based on these translations, which allows for a succinct representation of hybrid transition systems that can be computed effectively by the state-of-the-art SMT solver dReal.
C1 [Lee, Joohyung; Loney, Nikhil] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
   [Meng, Yunsong] Houzz Inc, Palo Alto, CA USA.
C3 Arizona State University; Arizona State University-Tempe
RP Lee, J (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
EM joolee@asu.edu; nloney@asu.edu; Yunsong.Meng@asu.edu
FU National Science Foundation [IIS-1319794, IIS-1526301]
FX This work was partially supported by the National Science Foundation
   under Grants IIS-1319794 and IIS-1526301.
CR Alur R., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P273
   Alur R, 2000, P IEEE, V88, P971, DOI 10.1109/5.871304
   Babb J, 2013, LECT NOTES COMPUT SC, V8148, P122, DOI 10.1007/978-3-642-40564-8_13
   BALDUCCINI M., 2016, P WORK NOT 7 WORKSH
   Bartholomew M., 2013, P 23 INT JOINT C ART, P718
   Bryce D, 2015, AAAI CONF ARTIF INTE, P3247
   Calimeri F, 2016, IEEE T COMP INTEL AI, V8, P128, DOI 10.1109/TCIAIG.2015.2509600
   CHINTABATHINA S, 2012, LECT NOTES COMPUTER, V7265, P560
   CHINTABATHINA S., 2005, P WORKSH ANSW SET PR
   Cimatti A., 2012, AAAI C ART INT, P2100
   Corke P., 2011, Robotics, vision and control: fundamental algorithms in MATLAB, V73
   Erdem E, 2016, AI COMMUN, V29, P319, DOI 10.3233/AIC-150697
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Fox M, 2006, J ARTIF INTELL RES, V27, P235, DOI 10.1613/jair.2044
   Gao SC, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P105
   Gebser M, 2010, LECT NOTES ARTIF INT, V6341, P360, DOI 10.1007/978-3-642-15675-5_32
   Gelfond M., 1998, ELECT T ARTIF INTEL, V3, P195
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   LEE J., 2017, REPRESENTING HYBRID
   Lee J., 2013, Proceedings of the Twenty-Third international joint conference on Artificial Intelligence, P990
   Lygeros J., 2004, TECHNICAL REPORT
   MELLARKOD V. S., 2008, ANN MATH ARTIFICIAL, V53, p[1, 251]
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
NR 24
TC 0
Z9 0
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 924
EP 941
DI 10.1017/S1471068417000412
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bertossi, L
   Bravo, L
AF Bertossi, Leopoldo
   Bravo, Loreto
TI Consistency and trust in peer data exchange systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Peer data exchange; answer set programs; disjunctive stable model
   semantics; metadata management; schema mappings; relational databases;
   integrity constraints; database repairs; consistency
ID P2P DATA INTEGRATION; INCONSISTENCY TOLERANCE; QUERY ANSWERS; LOGIC;
   SEMANTICS; SETS
AB We propose and investigate a semantics for peer data exchange systems where different peers are related by data exchange constraints and trust relationships. These two elements plus the data at the peers' sites and their local integrity constraints are made compatible via a semantics that characterizes sets of solution instances for the peers. They are the intended - possibly virtual - instances for a peer that are obtained through a data repair semantics that we introduce and investigate. The semantically correct answers from a peer to a query, the so-called peer consistent answers, are defined as those answers that are invariant under all its different solution instances. We show that solution instances can be specified as the models of logic programs with a stable model semantics. The repair semantics is based on null values as used in SQL databases, and is also of independent interest for repairs of single databases with respect to integrity constraints.
C1 [Bertossi, Leopoldo] Carleton Univ, Sch Comp Sci, Ottawa, ON, Canada.
   [Bravo, Loreto] Univ Desarrollo, Fac Ingn, Santiago, Chile.
C3 Carleton University; Universidad del Desarrollo
RP Bertossi, L (corresponding author), Carleton Univ, Sch Comp Sci, Ottawa, ON, Canada.
EM bertossi@scs.carleton.ca; bravo@udd.cl
RI Bravo, Loreto/AAS-9379-2021; Bravo, Loreto/L-9584-2014
OI Bravo, Loreto/0000-0001-7299-9317
FU NSERC DG [250279-2011]; CITO/IBM-CAS Student Internship; CONICYT
   [PSD-57]
FX Research supported by NSERC DG (250279-2011) and a CITO/IBM-CAS Student
   Internship. Loreto Bravo is funded by CONICYT grant PSD-57. We
   appreciate valuable and detailed comments from the anonymous reviewers.
CR ABERER K., 2011, PEER TO PEER DATA MA
   Abiteboul S, 1995, FDN DATABASES
   [Anonymous], NUMERICAL METHODS SO, DOI DOI 10.1007/978-1-4612-1984-2_19
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Arieli O, 2007, ANN MATH ARTIF INTEL, V50, P389, DOI 10.1007/s10472-007-9074-1
   Artz D, 2007, J WEB SEMANT, V5, P58, DOI 10.1016/j.websem.2007.03.002
   Barceló P, 2003, LECT NOTES COMPUT SC, V2582, P7
   Barceló P, 2003, LECT NOTES COMPUT SC, V2562, P208
   Bertossi L, 2004, LECT NOTES COMPUT SC, V3268, P476
   Bertossi L, 2004, LECT NOTES COMPUT SC, V3300, P42
   Bertossi L, 2007, LECT NOTES ARTIF INT, V4790, P107, DOI 10.1007/978-3-540-75560-9_10
   Bertossi L, 2006, SIGMOD REC, V35, P68, DOI 10.1145/1147376.1147391
   Bertossi Leopoldo E., 2011, SYNTHESIS LECT DATA
   BOUTABA R, 2006, COMPUTER NETWORKS, V50, P472
   BRAVO L, 2003, P 18 INT JOINT C ART, P10
   Bravo L., 2007, THESIS
   Bravo L, 2006, LECT NOTES COMPUT SC, V4254, P336
   Bravo Loreto, 2005, J APPL LOGIC, V3, P329
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cali A., 2003, P 22 ACM SIGACT SIGM, P260, DOI DOI 10.1145/773153.773179
   Calvanese D, 2005, LECT NOTES COMPUT SC, V3774, P90
   Calvanese D, 2004, LECT NOTES COMPUT SC, V2944, P77
   Calvanese D, 2008, INFORM SYST, V33, P360, DOI 10.1016/j.is.2008.01.007
   Calvanese Diego., 2004, P 23 ACM SIGMOD SIGA, P241
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   CAROPRESE L, 2006, FLAIRS, P31
   Caroprese L, 2008, LECT NOTES ARTIF INT, V4994, P225
   Caroprese L, 2011, PROCEEDINGS OF THE 15TH INTERNATIONAL DATABASE ENGINEERING & APPLICATIONS SYMPOSIUM (IDEAS '11), P1
   Chomicki J, 2006, LECT NOTES COMPUT SC, V4353, P1
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Demolombe R, 2011, LECT NOTES ARTIF INT, V6814, P13, DOI 10.1007/978-3-642-22359-4_2
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1366102.1366107
   Faber W, 2007, J COMPUT SYST SCI, V73, P584, DOI 10.1016/j.jcss.2006.10.012
   Franconi E, 2004, LECT NOTES COMPUT SC, V3268, P446
   Franconi E, 2004, LECT NOTES COMPUT SC, V2944, P64
   Fuxman A, 2006, ACM T DATABASE SYST, V31, P1454, DOI 10.1145/1189769.1189778
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Greco G, 2003, IEEE T KNOWL DATA EN, V15, P1389, DOI 10.1109/TKDE.2003.1245280
   Halevy AY, 2004, IEEE T KNOWL DATA EN, V16, P787, DOI 10.1109/TKDE.2004.1318562
   Halevy AY, 2003, PROC INT CONF DATA, P505, DOI 10.1109/ICDE.2003.1260817
   IMIELINSKI T, 1984, J ACM, V31, P761, DOI 10.1145/1634.1886
   Josang A, 2006, LECT NOTES COMPUT SC, V3986, P179
   Jsang A., 2012, IFIP ADV INFORM COMM, P68
   Kolaitis PhokionG., 2005, PODS, P61, DOI DOI 10.1145/1065167.1065176
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Levene M, 1997, INFORM COMPUT, V136, P67, DOI 10.1006/inco.1997.2631
   Levene Mark., 1999, GUIDED TOUR RELATION, DOI DOI 10.1007/978-0-85729-349-7
   Libkin L, 2016, ARTIF INTELL, V232, P1, DOI 10.1016/j.artint.2015.11.004
   Libkin L, 2014, PODS'14: PROCEEDINGS OF THE 33RD ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P1, DOI 10.1145/2594538.2594551
   Lifschitz V, 2012, THEOR PRACT LOG PROG, V12, P565, DOI 10.1017/S147106841200018X
   Marti S, 2006, COMPUT NETW, V50, P472, DOI 10.1016/j.comnet.2005.07.011
   Papadimitriou C. H., 1994, Computational Complexity
   Sabater J, 2005, ARTIF INTELL REV, V24, P33, DOI 10.1007/s10462-004-0041-5
   Serafini L, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P570
   TESSARIS S., 2012, P A MEND WS FDN DAT, V866
   Traylor B., 1994, Logical Foundations of Computer Science. Third International Symposium, LFCS '94 Proceedings, P341
NR 59
TC 11
Z9 11
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2017
VL 17
IS 2
BP 148
EP 204
DI 10.1017/S147106841600017X
PG 57
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EN1TY
UT WOS:000395794300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Walega, PA
   Schultz, C
   Bhatt, M
AF Walega, Przemyslaw Andrzej
   Schultz, Carl
   Bhatt, Mehul
TI Non-monotonic spatial reasoning with answer set programming modulo
   theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE non-monotonic spatial reasoning; answer set programming modulo theories;
   declarative spatial reasoning; dynamic spatial systems; reasoning about
   space; actions; and change
ID CYLINDRICAL ALGEBRAIC DECOMPOSITION; DYNAMICS
AB The systematic modelling of dynamic spatial systems is a key requirement in a wide range of application areas such as commonsense cognitive robotics, computer-aided architecture design, and dynamic geographic information systems. We present Answer Set Programming Modulo Theories (ASPMT)(QS), a novel approach and fully implemented prototype for non-monotonic spatial reasoning - a crucial requirement within dynamic spatial systems based on ASPMT. ASPMT(QS) consists of a (qualitative) spatial representation module (QS) and a method for turning tight ASPMT instances into Satisfiability Modulo Theories (SMT) instances in order to compute stable models by means of SMT solvers. We formalise and implement concepts of default spatial reasoning and spatial frame axioms. Spatial reasoning is performed by encoding spatial relations as systems of polynomial constraints, and solving via SMT with the theory of real non-linear arithmetic. We empirically evaluate ASPMT(QS) in comparison with other contemporary spatial reasoning systems both within and outside the context of logic programming. ASPMT(QS) is currently the only existing system that is capable of reasoning about indirect spatial effects (i.e., addressing the ramification problem), and integrating geometric and QS information within a non-monotonic spatial reasoning context.
C1 [Walega, Przemyslaw Andrzej] DesignSpace Grp, Spatial Reasoning, Neuherberg, Germany.
   Univ Warsaw, Warsaw, Poland.
   Univ Munster, Munster, Germany.
   Univ Bremen, Bremen, Germany.
C3 University of Warsaw; University of Munster; University of Bremen
RP Walega, PA (corresponding author), DesignSpace Grp, Spatial Reasoning, Neuherberg, Germany.
EM p.a.walega@gmail.com; schultzc@uni-muenster.de; bhatt@uni-bremen.de
RI Bhatt, Mehul/AAC-8834-2019
OI Bhatt, Mehul/0000-0002-6290-5492; Schultz, Carl/0000-0001-7334-6617
FU Polish National Science Centre [2011/02/A/HS1/0039]
FX We acknowledge the support provided by the Polish National Science
   Centre grant 2011/02/A/HS1/0039, and the DesignSpace Group
   (www.designspace.org).
CR Aiello M, 2007, HANDBOOK OF SPATIAL LOGICS, P1, DOI 10.1007/978-1-4020-5587-4
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 2013, REPRESENTING SPACE C
   [Anonymous], 2012, QUALITATIVE SPATIAL
   [Anonymous], OPENACCESS SERIES IN
   [Anonymous], 1996, Geographic objects with indeterminate boundaries
   ARNON DS, 1984, SIAM J COMPUT, V13, P865, DOI 10.1137/0213054
   BARTHOLOMEW M, 2012, P INT C PRINC KNOWL, P2
   Bartholomew M., 2013, P 23 INT JOINT C ART, P718
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Bhatia MV, 2008, CONTEMP SECUR STUD, P1
   Bhatt M., 2010, P 23 INT FLOR ART IN
   Bhatt M, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P508
   Bhatt M, 2014, ISPRS INT J GEO-INF, V3, P166, DOI 10.3390/ijgi3010166
   Bhatt M, 2011, LECT NOTES COMPUT SC, V6899, P210, DOI 10.1007/978-3-642-23196-4_12
   Bhatt M, 2011, SPAT COGN COMPUT, V11, P1, DOI 10.1080/13875868.2010.548568
   Bhatt M, 2008, SPAT COGN COMPUT, V8, P86, DOI 10.1080/13875860801926884
   Bouhineau D., 1996, Artificial Intelligence and Symbolic Mathematical Computation. International Conference, AISMC-3. Proceedings, P274
   Bouhineau D., 1999, Constraints, V4, P383, DOI 10.1023/A:1009825124248
   Cabalar P, 2011, ARTIF INTELL, V175, P346, DOI 10.1016/j.artint.2010.04.004
   Collins G. E., 1975, LECT NOTES COMPUT SC, P134, DOI [DOI 10.1007/3-540-07407-4_17, 10.1007/3-540-07407-417]
   COLLINS GE, 1991, J SYMB COMPUT, V12, P299, DOI 10.1016/S0747-7171(08)80152-6
   Davis E, 2008, ARTIF INTELL, V172, P1540, DOI 10.1016/j.artint.2008.04.003
   Davis E, 2011, ARTIF INTELL, V175, P299, DOI 10.1016/j.artint.2010.04.006
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Frank A.U., 1991, 7. Osterreichische Artificial-Intelligence-Tagung/Seventh Austrian Conference on Artificial Intelligence, P157
   Gebser M., 2014, CLINGO ASP CONTROL P
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Guesgen H. W., 1989, TR89049 INT COMP SCI
   Ligozat G., 2011, Qualitative Spatial and Temporal Reasoning
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   Moratz R, 2006, FRONT ARTIF INTEL AP, V141, P407
   Pesant G, 1999, J AUTOM REASONING, V22, P241, DOI 10.1023/A:1006080931326
   Pesant G., 1994, Principles and Practice of Constraint Programming. Second International Workshop, PPCP '94. Proceedings, P95
   Randell D. A., 1992, Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR '92), P165
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   SANDEWALL E, 1994, FEATURES FLUENTS, V1
   Schultz C, 2015, LECT NOTES COMPUT SC, V9368, P331, DOI 10.1007/978-3-319-23374-1_16
   Schultz C, 2014, FRONT ARTIF INTEL AP, V263, P795, DOI 10.3233/978-1-61499-419-0-795
   Scivos A, 2004, LECT NOTES COMPUT SC, V3343, P283
   SHANAHAN M, 1995, ARTIF INTELL, V74, P147, DOI 10.1016/0004-3702(94)00071-8
   Spranger M., 2016, P 25 INT JOINT C ART, P2908
   Spranger M, 2014, LECT NOTES ARTIF INT, V8862, P958, DOI 10.1007/978-3-319-13560-1_83
   Suchan J, 2015, LECT NOTES COMPUT SC, V8926, P339, DOI 10.1007/978-3-319-16181-5_24
   Varzi AC, 1996, DATA KNOWL ENG, V20, P259, DOI 10.1016/S0169-023X(96)00017-1
   Walega Przemyslaw Andrzej, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P488, DOI 10.1007/978-3-319-23264-5_41
   Wölfl S, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P967
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 58
TC 12
Z9 12
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2017
VL 17
IS 2
BP 205
EP 225
DI 10.1017/S1471068416000193
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EN1TY
UT WOS:000395794300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Van Hertum, P
   Dasseville, I
   Janssens, G
   Denecker, M
AF Van Hertum, Pieter
   Dasseville, Ingmar
   Janssens, Gerda
   Denecker, Marc
TI The KB paradigm and its application to interactive configuration
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE interactive configuration; knowledge base paradigm; inferences;
   applications of declarative systems
ID LOGIC PROGRAMS; SYSTEMS; SEMANTICS
AB The knowledge base (KB) paradigm aims to express domain knowledge in a rich formal language, and to use this domain knowledge as a KB to solve various problems and tasks that arise in the domain by applying multiple forms of inference. As such, the paradigm applies a strict separation of concerns between information and problem solving. In this paper, we analyze the principles and feasibility of the KB paradigm in the context of an important class of applications: interactive configuration problems. In interactive configuration problems, a configuration of interrelated objects under constraints is searched, where the system assists the user in reaching an intended configuration. It is widely recognized in industry that good software solutions for these problems are very difficult to develop. We investigate such problems from the perspective of the KB paradigm. We show that multiple functionalities in this domain can be achieved by applying different forms of logical inferences on a formal specification of the configuration domain. We report on a proof of concept of this approach in a real-life application with a banking company.
C1 [Van Hertum, Pieter; Dasseville, Ingmar; Janssens, Gerda; Denecker, Marc] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
C3 KU Leuven
RP Van Hertum, P (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
EM pieter.vanhertum@cs.kuleuven.be; ingmar.dasseville@cs.kuleuven.be;
   gerda.janssens@cs.kuleuven.be; marc.denecker@cs.kuleuven.be
RI Janssens, Gerda/N-2662-2013; Denecker, Marc/O-1056-2013
OI Denecker, Marc/0000-0002-0422-7339
FU Research Fund KU Leuven [GOA 13/010]; Research Foundation - Flanders
   [G.0489.10, G.0357.12, G.0922.13]
FX This is an extended version of a paper presented at the international
   symposium on Practical Aspects of Declarative Languages (PADL 2016),
   invited as a rapid communication in TPLP. The authors acknowledge the
   assistance of the conference program chairs Marco Gavanelli and John
   Reppy. This research was supported by the project GOA 13/010 Research
   Fund KU Leuven and projects G.0489.10, G.0357.12, and G.0922.13 of the
   Research Foundation - Flanders.
CR [Anonymous], 1952, INTRO METAMATHEMATIC
   [Anonymous], 1989, IJCAI
   Axling T, 1996, J LOGIC PROGRAM, V26, P147, DOI 10.1016/0743-1066(95)00097-6
   BARKER VE, 1989, COMMUN ACM, V32, P298, DOI 10.1145/62065.62067
   Bogaerts B, 2014, THEOR PRACT LOG PROG, V14, P477, DOI 10.1017/S1471068414000155
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Dasseville I, 2015, THEOR PRACT LOG PROG, V15, P681, DOI 10.1017/S1471068415000319
   De Cat B., 2016, ABS14016312V2 CORR
   Denecker M., 2012, LIPICS, V17, P277
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker M, 2008, LECT NOTES COMPUT SC, V5366, P71, DOI 10.1007/978-3-540-89982-2_12
   Falkner A, 2013, AI COMMUN, V26, P3, DOI 10.3233/AIC-120542
   Felfernig A., 2014, Knowledge-Based Configuration: From Research to Business Cases
   Fleischanderl G, 1998, IEEE INTELL SYST APP, V13, P59, DOI 10.1109/5254.708434
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hadzic T, 2005, LECT NOTES COMPUT SC, V3709, P767, DOI 10.1007/11564751_61
   Hadzic T, 2004, LECT NOTES COMPUT SC, V3258, P797
   Heras F., 2011, P 25 AAAI C ART INT
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   Immerman N, 1997, LECT NOTES COMPUT SC, V1254, P291
   Janota Mikolas., 2008, Software Product Lines (SPLC), P191
   Jansen J, 2014, PPDP'14: PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P249, DOI 10.1145/2643135.2643149
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Junker U, 2003, AI EDAM, V17, P13, DOI 10.1017/S089006040317103X
   Kang Kyo C, 1990, Technical Report
   Karatas AS, 2010, LECT NOTES COMPUT SC, V6287, P286, DOI 10.1007/978-3-642-15579-6_20
   Kiziltan Z., 2001, KI 2001: Advances in Artificial Intelligence. Joint German/ Austrian Conference on AI. Proceedings (Lecture Notes in Artificial Intelligence Vol.2174), P275
   Li B, 2006, INT J ADV MANUF TECH, V30, P20, DOI 10.1007/s00170-005-0035-8
   Lynce I., 2004, P SAT 2004 7 INT C T
   Marques-Silva J, 2008, DES AUT TEST EUROPE, P365
   MCDERMOTT J, 1982, ARTIF INTELL, V19, P39, DOI 10.1016/0004-3702(82)90021-2
   McGuinness DL, 1998, IEEE INTELL SYST APP, V13, P69, DOI 10.1109/5254.708435
   Mitchell D., 2005, Proc. of the 20th National Conf. on Artif. Intell. (AAAI), P430
   Mittal S., 1990, AAAI-90 Proceedings. Eighth National Conference on Artificial Intelligence, P25
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Piller F, 2014, P ANN HICSS, P3255, DOI 10.1109/HICSS.2014.403
   Pontelli E, 2006, LECT NOTES COMPUT SC, V4079, P196, DOI 10.1007/11799573_16
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Schneeweiss D., 2011, LECT NOTES COMPUTER, V7773, P239
   Shchekotykhin K. M., 2014, CEUR WORKSHOP P, V1162, P39
   Shlyakhter I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P94, DOI 10.1109/ASE.2003.1240298
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   Tiihonen J, 2013, AI COMMUN, V26, P99, DOI 10.3233/AIC-2012-0547
   Vanden Bossche M., 2007, P 3 INT WORKSH SEM W
   Vlaeminck H, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P141, DOI 10.1145/1599410.1599428
   Wittocx J, 2009, LECT NOTES COMPUT SC, V5649, P296, DOI 10.1007/978-3-642-02846-5_26
   Wittocx Johan., 2008, LaSh, P153
   Zhang JM, 2006, LECT NOTES COMPUT SC, V4304, P847
NR 49
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2017
VL 17
IS 1
BP 91
EP 117
DI 10.1017/S1471068416000156
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EH7JT
UT WOS:000391949800004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wielemaker, J
   Harris, K
AF Wielemaker, Jan
   Harris, Keri
TI Lock-free atom garbage collection for multithreaded Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE atom; symbol table; atom garbage collection; lock-free; hash table
AB The runtime system of dynamic languages such as Prolog or Lisp and their derivatives contain a symbol table, in Prolog often called the atom table. A simple dynamically resizing hash-table used to be an adequate way to implement this table. As Prolog becomes fashionable for 24 x 7 server processes we need to deal with atom garbage collection and concurrent access to the atom table. Classical lock-based implementations to ensure consistency of the atom table scale poorly and a stop-the-world approach to implement atom garbage collection quickly becomes a bottle-neck, making Prolog unsuitable for soft real-time applications. In this article we describe a novel implementation for the atom table using lock-free techniques where the atom-table remains accessible even during atom garbage collection. Relying only on CAS (Compare And Swap) and not on external libraries, the implementation is straightforward and portable.
C1 [Wielemaker, Jan] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Wielemaker, Jan] CWI Amsterdam, Amsterdam, Netherlands.
   [Harris, Keri] SecuritEase, Auckland, New Zealand.
C3 Vrije Universiteit Amsterdam
RP Wielemaker, J (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.; Wielemaker, J (corresponding author), CWI Amsterdam, Amsterdam, Netherlands.
EM J.Wielemaker@vu.nl; keri@gentoo.org
OI Wielemaker, Jan/0000-0001-5574-5673
CR BOEHM HJ, 1993, SIGPLAN NOTICES, V28, P197, DOI 10.1145/173262.155109
   Creutz M, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P280
   Desnoyers M, 2012, IEEE T PARALL DISTR, V23, P375, DOI 10.1109/TPDS.2011.159
   Harris T, 2008, COMMUN ACM, V51, P91, DOI 10.1145/1378704.1378725
   Klyne G, 2004, Resource description framework (RDF): Concepts and abstract syntax
   Lindgren T., 2005, P 2005 ACM SIGPLAN W, P40
   Michael MM, 2004, IEEE T PARALL DISTR, V15, P491, DOI 10.1109/TPDS.2004.8
   Tarau P, 2011, ACM SIGPLAN NOTICES, V46, P129, DOI 10.1145/2076022.1993497
   Triplett Josh, 2011, 2011 USENIX ANN TECH
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
NR 10
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 950
EP 965
DI 10.1017/S1471068416000272
PN 5-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800028
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kowalski, R
   Sadri, F
AF Kowalski, Robert
   Sadri, Fariba
TI Programming in logic without logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 8th International Web Rule Symposium (RuleML) in conjunction with 21st
   European Conference on Artificial Intelligence (ECAI)
CY AUG 18-22, 2014
CL Prague, CZECH REPUBLIC
DE KELPS; LPS; Model generation; Reactive models; State transition systems
ID SEMANTICS
AB In previous work, we proposed a logic-based framework in which computation is the execution of actions in an attempt to make reactive rules of the form if antecedent then consequent true in a canonical model of a logic program determined by an initial state, sequence of events, and the resulting sequence of subsequent states. In this model-theoretic semantics, reactive rules are the driving force, and logic programs play only a supporting role. In the canonical model, states, actions, and other events are represented with timestamps. But in the operational semantics (OS), for the sake of efficiency, timestamps are omitted and only the current state is maintained. State transitions are performed reactively by executing actions to make the consequents of rules true whenever the antecedents become true. This OS is sound, but incomplete. It cannot make reactive rules true by preventing their antecedents from becoming true, or by proactively making their consequents true before their antecedents become true. In this paper, we characterize the notion of reactive model, and prove that the OS can generate all and only such models. In order to focus on the main issues, we omit the logic programming component of the framework.
C1 [Kowalski, Robert; Sadri, Fariba] Imperial Coll London, Dept Comp, London, England.
C3 Imperial College London
RP Kowalski, R (corresponding author), Imperial Coll London, Dept Comp, London, England.
EM rak@doc.ic.ac.uk; fs@doc.ic.ac.uk
CR Abdennadher S., 1998, P 3 INT C FLEXIBLE Q, P1, DOI [10.1007/BFb0055987, DOI 10.1007/BFB0055987]
   Alberti M., 2008, ACM T COMPUT LOG, V9, P691
   Alferes JJ, 2006, LECT NOTES ARTIF INT, V4160, P29, DOI 10.1007/11853886_5
   Alferes JJ, 2002, LECT NOTES ARTIF INT, V2424, P50, DOI 10.1007/3-540-45757-7_5
   [Anonymous], 1996, IMPERATIVE FUTURE PR
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   Bailey J., 1995, Rules in Database Systems. Second International Workshop, RIDS '95. Proceedings, P342
   Baral C., 1995, CHARACTERIZING PRODU
   Betz H, 2005, LECT NOTES COMPUT SC, V3709, P137, DOI 10.1007/11564751_13
   BONNER AJ, 1993, LOGIC PROGRAMM, P257
   Cali A, 2009, ICDT, P14, DOI [10.1145/1514894.1514897, DOI 10.1145/1514894.1514897]
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Costantini S, 2004, LECT NOTES COMPUT SC, V3229, P685, DOI 10.1007/978-3-540-30227-8_57
   Damásio CV, 2010, LECT NOTES COMPUT SC, V6496, P798, DOI 10.1007/978-3-642-17746-0_50
   Eiter T., 2012, CORRECT REASONING, P211
   Fernandes AAA, 1997, NEW GENERAT COMPUT, V15, P205, DOI 10.1007/BF03037238
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   Gavanelli M., 2015, P TECHN COMM 31 INT, V1433
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gomes A. S., 2014, ARXIV14053790
   Governatori Guido, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P114, DOI 10.1007/978-3-642-39617-5_13
   Gurevich Y., 2000, ACM T COMPUT LOG, V1, P77, DOI DOI 10.1145/343369.343384
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Kakas A. C., 2004, P ECAI 2004
   Kakas AC., 1998, HDB LOGIC ARTIFICIAL, P235, DOI DOI 10.1093/OSO/9780198537922.003.0007
   Kowalski K, 2011, COMPUTATIONAL METHODS FOR LARGE SYSTEMS: ELECTRONIC STRUCTURE APPROACHES FOR BIOTECHNOLOGY AND NANOTECHNOLOGY, P167
   Kowalski Robert, 2014, Rules on the Web. From Theory to Applications. 8th International Symposium, RuleML 2014 Co-located with the 21st European Conference on Artificial Intelligence, ECAI 2014. Proceedings. LNCS: 8620, P22, DOI 10.1007/978-3-319-09870-8_2
   Kowalski Robert, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P1, DOI 10.1007/978-3-642-32689-9_1
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R., 2014, LOGIC PROBLEM SOLVIN
   Kowalski R, 2015, NEW GENERAT COMPUT, V33, P33, DOI 10.1007/s00354-015-0103-z
   Kowalski R, 2011, ANN MATH ARTIF INTEL, V62, P129, DOI 10.1007/s10472-011-9253-y
   Kowalski R, 2010, LECT NOTES ARTIF INT, V6245, P200, DOI 10.1007/978-3-642-14977-1_16
   Kowalski R, 2009, LECT NOTES COMPUT SC, V5837, P1, DOI 10.1007/978-3-642-05082-4_1
   Lausen G., 1998, Transactions and Change in Logic Databases. International Seminar on Logic Databases and the Meaning of Change and ILPS'97 Post-Conference Workshop on (Trans) Actions and Change in Logic Programming and Deductive Databases, (DYNAMICS'97). Invited Surveys and Selected Papers, P69, DOI 10.1007/BFb0055496
   Maier D., 1979, ACM Transactions on Database Systems, V4, P455, DOI 10.1145/320107.320115
   Mancarella P., 2009, THEOR PRACT LOG PROG, V9
   MANTHEY R, 1988, LECT NOTES COMPUT SC, V310, P415, DOI 10.1007/BFb0012847
   Paschke Adrian, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P100, DOI 10.1007/978-3-642-32689-9_9
   Rao A. S., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P312
   Rao A. S., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P42, DOI 10.1007/BFb0031845
   RASCHID L, 1994, J LOGIC PROGRAM, V21, P31, DOI 10.1016/0743-1066(94)90005-1
   Rezk Martin, 2012, Foundations of Information and Knowledge Systems. Proceedings 7th International Symposium, FoIKS 2012, P332, DOI 10.1007/978-3-642-28472-4_19
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   Thielscher M, 2005, THEOR PRACT LOG PROG, V5, P533, DOI 10.1017/S1471068405002358
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wang JH, 2001, LECT NOTES COMPUT SC, V2113, P963
   Zaniolo C., 1993, Advances in Databases. 11th British National Conference on Databases, BNCOD 11 Proceedings, P23
NR 54
TC 7
Z9 7
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2016
VL 16
SI SI
BP 269
EP 295
DI 10.1017/S1471068416000041
PN 3
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4MP
UT WOS:000386587100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Diéguez, M
   Vidal, C
AF Cabalar, Pedro
   Dieguez, Martin
   Vidal, Concepcion
TI An infinitary encoding of temporal equilibrium logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
ID SEMANTICS
AB This paper studies the relation between two recent extensions of propositional Equilibrium Logic, a well-known logical characterisation of Answer Set Programming. In particular, we show how Temporal Equilibrium Logic, which introduces modal operators as those typically handled in Linear-Time Temporal Logic (LTL), can be encoded into Infinitary Equilibrium Logic, a recent formalisation that allows the use of infinite conjunctions and disjunctions. We prove the correctness of this encoding and, as an application, we further use it to show that the semantics of the temporal logic programming formalism called TEMPLOG is subsumed by Temporal Equilibrium Logic.
C1 [Cabalar, Pedro; Vidal, Concepcion] Univ A Coruna, Dept Comp Sci, Corunna, Spain.
   [Dieguez, Martin] Univ Toulouse, IRIT, Toulouse, France.
C3 Universidade da Coruna; Universite de Toulouse; Universite Toulouse III
   - Paul Sabatier; Universite Federale Toulouse Midi-Pyrenees (ComUE);
   Institut National Polytechnique de Toulouse
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM cabalar@udc.es; martin.dieguez@irit.fr; concepcion.vidalm@udc.es
RI Vidal Martín, Concepción/ABD-9547-2021; Cabalar, Pedro/AAE-5198-2020;
   Vidal Martín, Concepción/AAA-2451-2022
OI Vidal Martín, Concepción/0000-0002-5561-6406; Vidal Martín,
   Concepción/0000-0002-5561-6406
FU Spanish MEC project [TIN2013-42149-P]; Xunta de Galicia [GPC2013/070];
   French Spanish Laboratory for Advanced Studies in Information,
   Representation and Processing (LEA-IREP); Centre International de
   Mathematiques et Informatique de Toulouse (CIMI)
FX This research was partially supported by Spanish MEC project
   TIN2013-42149-P, Xunta de Galicia GPC2013/070, the French Spanish
   Laboratory for Advanced Studies in Information, Representation and
   Processing (LEA-IREP) and the Centre International de Mathematiques et
   Informatique de Toulouse (CIMI).
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   [Anonymous], LOGIC PROGRAMMING PA
   [Anonymous], 1991, The Temporal Logic of Reactive and Concurrent Systems
   [Anonymous], THESIS
   Balbiani P., 2015, AXIOMATISATION UNPUB
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baudinet M, 1992, INTENSIONAL LOGICS P, P51, DOI [10.1142/S0129054104002509, DOI 10.1142/S0129054104002509]
   BIEBER P, 1988, LECT NOTES COMPUT SC, V310, P762, DOI 10.1007/BFb0012886
   Bozzelli L., 2015, P 30 ANN AC IN PRESS
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buchi J. R, 1990, Studies in Logic and the Foundations of Mathematics, P425, DOI [10.1007/978-1-4613-8928-6_23, DOI 10.1007/978-1-4613-8928-6_23]
   Cabalar P., 2014, P 14 INT C PRINC KNO
   Cabalar P., 2011, 21 INT S LOG BAS PRO
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4739, P241
   Cabalar P, 2011, LECT NOTES ARTIF INT, V6645, P370
   De Giacomo Giuseppe., International Joint Conference on Artificial Intelligence, IJCAI. IJCAI/AAAI, P854, DOI DOI 10.5555/2540128.2540252
   DELCERRO LF, 1986, NEW GENERAT COMPUT, V4, P35, DOI 10.1007/BF03037381
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Fujita M., 1986, LNAI
   Gabbay D, 1980, P 7 ACM SIGPLAN SIGA, P163, DOI DOI 10.1145/567446.567462
   GABBAY DM, 1987, TEMPORAL LOGICS THEI, P197
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, Electronic Transactions on AI, V3, P16
   Harrison A., 2014, WORKSH ANSW SET PROG
   Harrison A. J., 2014, P 14 INT C PRINC KNO
   Karp C., 1964, Studies in Logic and the Foundations of Mathematics
   Lichtenstein O., 1985, Logics of Programs. Proceedings, P196
   Moszkowski B.C., 1986, Executing Temporal Logic Programs
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Orgun M. A., 1992, INTENSIONAL LOGICS P, P21
   Pearce D., 1996, LNAI
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Scott D., 1958, C MATH, V6, P165, DOI DOI 10.4064/CM-6-1-165-170
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 36
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 666
EP 680
DI 10.1017/S1471068415000307
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200018
DA 2024-07-18
ER

PT J
AU Gall, D
   Frühwirth, T
AF Gall, Daniel
   Fruehwirth, Thom
TI Exchanging Conflict Resolution in an Adaptable Implementation of ACT-R
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE computational cognitive modeling; computational psychology; ACT-R;
   Constraint Handling Rules; production rule systems; conflict resolution
AB In computational cognitive science, the cognitive architecture ACT-R is very popular. It describes a model of cognition that is amenable to computer implementation, paving the way for computational psychology. Its underlying psychological theory has been investigated in many psychological experiments, but ACT-R lacks a formal definition of its underlying concepts from a mathematical-computational point of view. Although the canonical implementation of ACT-R is now modularized, this production rule system is still hard to adapt and extend in central components like the conflict resolution mechanism (which decides which of the applicable rules to apply next).
   In this work, we present a concise implementation of ACT-R based on Constraint Handling Rules which has been derived from a formalization in prior work. To show the adaptability of our approach, we implement several different conflict resolution mechanisms discussed in the ACT-R literature. This results in the first implementation of one such mechanism. For the other mechanisms, we empirically evaluate if our implementation matches the results of reference implementations of ACT-R.
C1 [Gall, Daniel; Fruehwirth, Thom] Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
C3 Ulm University
RP Gall, D (corresponding author), Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
EM daniel.gall@uni-ulm.de; thom.fruehwirth@uni-ulm.de
CR Anderson John R., 1998, The Atomic Components of Thought
   Anderson JR, 2004, PSYCHOL REV, V111, P1036, DOI 10.1037/0033-295x.111.4.1036
   [Anonymous], 2007, CAN HUMAN MIND OCCUR, DOI DOI 10.1093/ACPROF:OSO/9780195324259.001.0001
   [Anonymous], THEORY PAVLOVIAN CON
   Belavkin R., 2005, OPTIMIST CONFLICT RE
   Belavkin R., 2004, ICCM, P40
   Bothell D., ACT R 6 0 REFERENCE
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Gall D., 2013, THESIS ULM U
   McDermott J., 1977, SIGART B, V63, P37
   Stewart T.C., 2006, Proceedings of the Seventh International Conference on Cognitive Modeling, P298
   Stewart TC, 2007, COGN SYST RES, V8, P227, DOI 10.1016/j.cogsys.2007.06.006
   Sun R, 2008, CAMB HANDB PSYCHOL, P3
   Taatgen N. A., 2006, Cognition and Multi-Agent Interaction: From Cognitive Modeling to Social Simulation, P29
   Taatgen NA, 2002, COGNITION, V86, P123, DOI 10.1016/S0010-0277(02)00176-2
   Young R. M., 2003, P 10 ANN ACT R WORKS
NR 16
TC 5
Z9 6
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 525
EP 538
DI 10.1017/S1471068414000180
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gomes, AS
   Alferes, JJ
   Swift, T
AF Gomes, Ana Sofia
   Alferes, Jose Julio
   Swift, Terrance
TI A goal-directed implementation of query answering for hybrid MKNF
   knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation; well-founded semantics; description logics;
   implementation
ID WELL-FOUNDED SEMANTICS; GENERAL LOGIC PROGRAMS; ONTOLOGIES; WEB; PROLOG
AB Ontologies and rules are usually loosely coupled in knowledge representation formalisms. In fact, ontologies use open-world reasoning, while the leading semantics for rules use non-monotonic, closed-world reasoning. One exception is the tightly coupled framework of Minimal Knowledge and Negation as Failure (MKNF), which allows statements about individuals to be jointly derived via entailment from ontology and inferences from rules. Nonetheless, the practical usefulness of MKNF has not always been clear, although recent work has formalized a general resolution-based method for querying MKNF when rules are taken to have the well-founded semantics, and the ontology is modeled by a general oracle. That work leaves open what algorithms should be used to relate the entailments of the ontology and the inferences of rules. In this paper we provide such algorithms, and describe the implementation of a query-driven system, CDF-Rules, for hybrid knowledge bases combining both (non-monotonic) rules under the well-founded semantics and a (monotonic) ontology, represented by the Coherent Description Framework Type-1 (ALC2) theory.
C1 [Gomes, Ana Sofia; Alferes, Jose Julio; Swift, Terrance] Univ Nova Lisboa, Dept Informat, CENTRIA, Fac Ciencias & Tecnol, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa
RP Gomes, AS (corresponding author), Univ Nova Lisboa, Dept Informat, CENTRIA, Fac Ciencias & Tecnol, P-2829516 Caparica, Portugal.
EM sofia.gomes@campus.fct.unl.pt; jja@fct.unl.pt; tswift@cs.sunysb.edu
RI ; Alferes, Jose/C-6231-2009
OI Gomes, Ana Sofia/0000-0002-9526-0977; Alferes, Jose/0000-0001-5520-4623
CR Alferes J. J., 2012, ACM T COMPUTATIONAL
   [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   BARAL C, 2002, KNOWLEDGE REPRESENTA
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Drabent W, 2007, LECT NOTES COMPUT SC, V4524, P1
   Eiter T, 2004, LECT NOTES COMPUT SC, V3323, P81
   Eiter Thomas., 2004, KR2004, P141
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Grimm S, 2007, INT J ELECTRON COMM, V12, P89, DOI 10.2753/JEC1086-4415120204
   GROSOF B, 2009, SILK SEMANTIC RULES
   HITZLER P, 2009, HDB ONTOLOGIES
   Hitzler P., 2009, W3C RECOMM, V27
   Horrocks I, 1999, J LOGIC COMPUT, V9, P267, DOI 10.1093/logcom/9.3.267
   Horrocks I., 2006, P INT SEM WEB C, P501
   Knorr M, 2011, ARTIF INTELL, V175, P1528, DOI 10.1016/j.artint.2011.01.007
   Knorr M, 2008, FRONT ARTIF INTEL AP, V178, P99, DOI 10.3233/978-1-58603-891-5-99
   Lifschitz V., 1991, P 12 INT JOINT C ART, P381
   Lukácsy G, 2008, LECT NOTES COMPUT SC, V5366, P455, DOI 10.1007/978-3-540-89982-2_40
   MORGENSTERN L., 2010, RIF PRIMER
   Motik B., 2006, THESIS U KARLSRUHE K
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   Patel C, 2007, LECT NOTES COMPUT SC, V4825, P816
   Schindlauer R, 2006, THESIS U WIEN
   Schmidt-Strauss M., 1990, ARTIF INTELL, V48, P1
   Swift T, 2004, LECT NOTES ARTIF INT, V2923, P275
   Swift T., 2003, COLD DEAD FISH SYSTE
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Yang GZ, 2003, LECT NOTES COMPUT SC, V2888, P671
NR 31
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2014
VL 14
BP 239
EP 264
DI 10.1017/S1471068412000439
PN 2
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AG
UT WOS:000338293300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tarau, P
AF Tarau, Paul
TI The BinProlog experience: Architecture and implementation choices for
   continuation passing Prolog and first-class logic engines
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; continuation passing style
   compilation; implementation of Prolog; first-class logic engines;
   data-representations for Prolog runtime systems
ID MACHINE; THREADS; DESIGN
AB We describe the BinProlog system's compilation technology, runtime system and its extensions supporting first-class Logic Engines while providing a short history of its development, details of some of its newer re-implementations as well as an overview of the most important architectural choices involved in their design. With focus on its differences with conventional Warren Abstract Machine (WAM) implementations, we explain key details of BinProlog's compilation technique, which replaces the WAM with a simplified continuation passing runtime system (the "BinWAM"), based on a mapping of full Prolog to binary logic programs. This is followed by a description of a term compression technique using a "tag-on-data" representation. Later derivatives, the Java-based Jinni Prolog compiler and the recently developed Lean Prolog system refine the BinProlog architecture with first-class Logic Engines, made generic through the use of an Interactor interface. An overview of their applications with focus on the ability to express at source level a wide variety of Prolog built-ins and extensions covers these newer developments.
C1 Univ N Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Tarau, P (corresponding author), Univ N Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
EM tarau@cs.unt.edu
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Bolz CF, 2010, P 12 INT ACM SIGPLAN, P99
   Carlsson M., 2009, SICStus Prolog User's Manual
   Carro M, 1999, LOGIC PROGRAMM, P320
   Casanova A, 2007, PENSEE, P93, DOI 10.1145/1278177.1278193
   CLARK DW, 1977, COMMUN ACM, V20, P78, DOI 10.1145/359423.359427
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   da Silva AF, 2006, LECT NOTES COMPUT SC, V4079, P461
   Dahl V, 1997, LOGIC PROGRAMM, P256
   DeBosschere K, 1996, SOFTWARE PRACT EXPER, V26, P49, DOI 10.1002/(SICI)1097-024X(199601)26:1<49::AID-SPE995>3.0.CO;2-C
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   DEMOEN B, 1992, LECT NOTES ARTIF INT, V592, P165
   Demoen B., 1996, Proceedings of the 1996 ACM symposium on Applied Computing, P380
   DEMOEN B., 1992, P LOPSTR 92 INT WORK, P242
   Deransart P., 1996, PROLOG STANDARD
   DIAZ D., 2001, J FUNCTIONAL LOGIC P, V2001, P1
   *FIPA, 1997, FIPA 97 SPEC 2
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P25
   LINDGREN T, 1994, MIT PS LOG, P603
   Liskov B., 1981, Lecture Notes in Computer Science, V114
   Lloyd J. W., 2012, Foundations of Logic Programming
   LUSK E., 1993, P POSTC JOINT WORKSH
   Nassen Henrik., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP'01, P49
   Neng-Fa Zhou, 1990, Logic Programming. Proceedings of the Seventh International Conference, P159
   NEUMERKEL U., 1992, THESIS TU WIEN
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   SWIFT T, 1994, MIT PS LOG, P633
   Tarau P, 1999, J LOGIC PROGRAM, V38, P331, DOI 10.1016/S0743-1066(98)10028-6
   TARAU P, 1992, LECT NOTES COMPUT SC, V637, P344
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159
   Tarau P, 2004, LECT NOTES COMPUT SC, V3132, P477, DOI 10.1007/978-3-540-27775-0_46
   Tarau P, 2001, THEOR PRACT LOG PROG, V1, P359, DOI 10.1017/S1471068401001193
   Tarau P, 1998, LECT NOTES ARTIF INT, V1489, P385, DOI 10.1007/3-540-49545-2_27
   Tarau P, 1997, J LOGIC PROGRAM, V30, P145, DOI 10.1016/S0743-1066(96)00105-7
   Tarau P., 1999, PAAM99. Proceedings of the Fourth International Conference on the Practical Applications of Intelligent Agents and Multi-agent Technology, P109
   Tarau P, 1996, J LOGIC PROGRAM, V29, P65, DOI 10.1016/S0743-1066(96)00063-5
   TARAU P, 1993, PROCEEDINGS OF THE 5TH UNB ARTIFICIAL INTELLIGENCE SYMPOSIUM, P137
   TARAU P., 1993, CONSTRUCTING LOGIC P, P279
   TARAU P., 2000, P 1 INT C COMP LOG C, V1861
   TARAU P., 1993, 933 U MON DEO INF
   TARAU P., 2011, P ACM SIGPLAN WORKSH
   TARAU P., 1993, LOGIC PROGRAM SYNTHE, P196
   TARAU P., 1994, P 1 COMPULOG NOE AR, P3
   TARAU P., 2008, JINNI PROLOG COMPILE
   TARAU P., 1994, LECT NOTES COMPUTER
   TARAU P, 1991, P LOGIC PROGRAMMING, P119
   TARAU P., 2006, BINPROLOG 11 X PROFE
   TARAU P., 1998, P APPAI GULP PRODE 9
   TARAU P., 1999, P WORKSH PAR IMPL TE
   TARAU P., 2004, P 4 C IMPL CONSTR LO
   Tarau P, 2009, LECT NOTES COMPUT SC, V5418, P137, DOI 10.1007/978-3-540-92995-6_10
   Tarau P, 2008, LECT NOTES COMPUT SC, V5366, P703, DOI 10.1007/978-3-540-89982-2_61
   Tarau Paul, 1999, The Logic Programming Paradigm: a 25 Year Perspective, P33, DOI [DOI 10.1007/978-3-642-60085-2.2, 10.1007/978-3-642-60085-2'2]
   TYAGI S., 2001, P INT S PRACT ASP DE
   UEDA K, 1986, LECT NOTES COMPUT SC, V221, P168
   VANROY P, 1994, J LOGIC PROGRAM, V20, P385, DOI 10.1016/0743-1066(94)90031-0
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
   Warren D. H. D., 1983, 309 SRI INT
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
   Zhou NF, 2007, LECT NOTES COMPUT SC, V4670, P455, DOI 10.1007/978-3-540-74610-2_43
NR 60
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 97
EP 126
DI 10.1017/S1471068411000433
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Porto, A
AF Porto, Antonio
TI A structured alternative to Prolog with simple compositional semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE Prolog; Cut; Compositional semantics; Denotational semantics
ID LOGIC
AB Prolog's very useful expressive power is not captured by traditional logic programming semantics, due mainly to the cut and goal and clause order. Several alternative semantics have been put forward, exposing operational details of the computation state. We propose instead to redesign Prolog around structured alternatives to the cut and clauses, keeping the expressive power and computation model but with a compositional denotational semantics over much simpler states-just variable bindings. This considerably eases reasoning about programs, by programmers and tools such as a partial evaluator, with safe unfolding of calls through predicate definitions. An if-then-else across clauses replaces most uses of the cut, but the cut's full power is achieved by an until construct. Disjunction, conjunction and until, along with unification, are the primitive goal types with a compositional semantics yielding sequences of variable-binding solutions. This extends to programs via the usual technique of a least fixpoint construction. A simple interpreter for Prolog in the alternative language, and a definition of until in Prolog, establish the identical expressive power of the two languages. Many useful control constructs are derivable from the primitives, and the semantic framework illuminates the discussion of alternative ones. The formalisation rests on a term language with variable abstraction as in the lambda-calculus. A clause is an abstraction on the call arguments, a continuation, and the local variables. It can be inclusive or exclusive, expressing a local case bound to a continuation by either a disjunction or an if-then-else. Clauses are open definitions, composed (and closed) with simple functional application (beta-reduction). This paves the way for a simple account of flexible module composition mechanisms. Cube, a concrete language with the exposed principles, has been implemented on top of a Prolog engine and successfully used to build large real-world applications.
C1 Univ Porto, Fac Sci, Dept Comp Sci, LIACC, Oporto, Portugal.
C3 Universidade do Porto
RP Porto, A (corresponding author), Univ Porto, Fac Sci, Dept Comp Sci, LIACC, Oporto, Portugal.
EM ap@dcc.fc.up.pt
RI Porto, Antonio/N-2599-2013
OI Porto, Antonio/0000-0002-5747-5512
CR AITKACI H, 1991, WARR ABSTR MACH TUT
   Andrews JH, 2003, THEOR PRACT LOG PROG, V3, P1, DOI 10.1017/S1471068402001540
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   Clark K. L., 1978, Logic and data bases, P293
   COLMERAUER A, 1993, APIC STUDIES DATA PR, V16, P231
   de Bruin A., 1989, TAPSOFT '89. Proceedings of the International Joint Conference on Theory and Practice of Software Development. Vol.1: Advanced Seminar on Foundations of Innovative Software Development 1 and Colloquium on Trees in Algebra and Programming (CAAP '89), P178
   DEBRAY SK, 1988, J LOGIC PROGRAM, V5, P61, DOI 10.1016/0743-1066(88)90007-6
   DERANSART P, 1991, PROLOG STANDARD REFE
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   LI BZ, 1994, ESOP 94, P379
   Monteiro L, 1998, THEOR COMPUT SCI, V192, P259, DOI 10.1016/S0304-3975(97)00152-7
   MONTEIRO L, 1989, LOG PROGR P 6 INT C, P284
   NAISH L, 1986, P 3 INT C LOG PROGR, P624
   Porto A, 2003, LECT NOTES COMPUT SC, V2562, P92
   PORTO A, 2002, LECT NOTES COMPUTER, V2441, P275
   Seres S, 1999, LOGIC PROGRAMM, P184
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Spoto F, 2000, J LOGIC PROGRAM, V42, P1, DOI 10.1016/S0743-1066(99)00012-6
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 19
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 611
EP 627
DI 10.1017/S1471068411000202
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Puebla, G
   Albert, E
   Hermenegildo, M
AF Puebla, German
   Albert, Elvira
   Hermenegildo, Manuel
TI Efficient local unfolding with ancestor stacks
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE partial evaluation; partial deduction; logic programming; prolog; SLD
   semantics; local unfolding
ID PARTIAL DEDUCTION; ABSTRACT INTERPRETATION; LOGIC PROGRAMS; ONLINE
   TERMINATION; PROLOG; SPECIALIZATION; SYSTEM
AB The most successful unfolding rules used nowadays in the partial evaluation of logic programs are based on well quasi orders (wqo) applied over (covering) ancestors, i.e., a subsequence of the atoms selected during a derivation. Ancestor (sub)sequences are used to increase the specialization power of unfolding while still guaranteeing termination and also to reduce the number of atoms for which the wqo has to be checked. Unfortunately, maintaining the structure of the ancestor relation during unfolding introduces significant overhead. We propose an efficient, practical local unfolding rule based on the notion of covering ancestors which can be used in combination with a wqo and allows a stack-based implementation without losing any opportunities for specialization. Using our technique, certain nonleftmost unfoldings are allowed as long as local unfolding is performed, i.e., we cover depth-first strategies. To deal with practical programs, we propose assertion-based techniques which allow our approach to treat programs that include (Prolog) built-ins and external predicates in a very extensible manner, for the case of leftmost unfolding. Finally, we report on our implementation of these techniques embedded in a practical partial evaluator, which shows that our techniques, in addition to dealing with practical programs, are also significantly more efficient in time and somewhat more efficient in memory than traditional tree-based implementations.
C1 [Puebla, German; Hermenegildo, Manuel] Tech Univ Madrid, Sch Comp Sci, E-28660 Madrid, Spain.
   [Albert, Elvira] Univ Complutense Madrid, Sch Comp Sci, E-28040 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Complutense University of Madrid
RP Puebla, G (corresponding author), Tech Univ Madrid, Sch Comp Sci, E-28660 Madrid, Spain.
EM german@fi.upm.es; elvira@sip.ucm.es; herme@fi.upm.es
RI Hermenegildo, w V/I-4418-2015
OI Hermenegildo, w V/0000-0002-7583-323X
FU European Commission, under the Future and Emerging Technologies
   [IST-231620, IST-215483]; Spanish Ministry of Science and Innovation
   [TIN-2008-05624, HI2008-0153]; Madrid Regional Government (CM)
   [S-0505/TIC/0407]
FX We gratefully acknowledge the anonymous referees for many useful
   comments and suggestions that helped to improve this article. This work
   was funded in part by the Information Society Technologies program of
   the European Commission, under the Future and Emerging Technologies
   IST-231620 HATS project and the IST-215483 SCUBE project, by the Spanish
   Ministry of Science and Innovation under the TIN-2008-05624 DOVES and
   HI2008-0153 projects, and by the Madrid Regional Government (CM) under
   the S-0505/TIC/0407 PROMESAS project.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   ALBERT E, 2002, J FUNCTIONAL LOGIC P, P1
   Albert E, 2006, LECT NOTES COMPUT SC, V3901, P115, DOI 10.1007/11680093_8
   [Anonymous], 1960, Trans. Am. Math. Soc., DOI DOI 10.1090/S0002-9947-1960-0111704-1
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   BRUYNOOGHE M, 1992, NEW GENERAT COMPUT, V11, P47, DOI 10.1007/BF03037527
   Bueno F., 2004, CIAO SYSTEM REFERENC
   BUENO F, 2009, CIAO SYSTEM REFERENC
   Christensen NH, 2004, ACM T PROGR LANG SYS, V26, P191, DOI 10.1145/963778.963784
   Craig SJ, 2005, LECT NOTES COMPUT SC, V3573, P53, DOI 10.1007/11506676_4
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   Etalle S., 1997, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation, PEPM '97, P137, DOI 10.1145/258993.259014
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Le Charlier B, 2002, THEOR PRACT LOG PROG, V2, P25, DOI 10.1017/S1471068402001114
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   Leuschel M, 2004, LECT NOTES COMPUT SC, V3049, P340
   Leuschel M, 2004, THEOR PRACT LOG PROG, V4, P139, DOI 10.1017/S1471068403001662
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Leuschel M, 1998, LECT NOTES COMPUT SC, V1503, P230
   LEUSCHEL M, 1994, P LOPSTR 94 META 94, P122
   LEUSCHEL M, 1996, ECCE PARTIAL DEDUCTI
   Lloyd J.W., 1995, P ILPS 95, P465
   Lloyd J. W., 2012, Foundations of Logic Programming
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Martens B, 1996, J LOGIC PROGRAM, V28, P89, DOI 10.1016/0743-1066(95)00149-2
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   SAHLIN D, 1993, NEW GENERAT COMPUT, V12, P7, DOI 10.1007/BF03038271
   VENKEN R, 1988, NEW GENERAT COMPUT, V6, P279, DOI 10.1007/BF03037142
NR 30
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2011
VL 11
BP 1
EP 32
DI 10.1017/S1471068409990263
PN 1
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 716TO
UT WOS:000286996600001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Shen, YD
   De Schreye, D
   Voets, D
AF Shen, Yi-Dong
   De Schreye, Danny
   Voets, Dean
TI Termination prediction for general logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Logic programming; termination analysis; loop checking; moded queries;
   termination prediction
ID PROVING TERMINATION; INFERENCE; PROOFS; PROLOG; TOOL
AB We present a heuristic framework for attacking the undecidable termination problem of logic programs, as an alternative to current termination/nontermination proof approaches. We introduce an idea of termination prediction, which predicts termination of a logic program in case that neither a termination nor a non-termination proof is applicable. We establish a necessary and sufficient characterization of infinite (generalized) SLDNF-derivations with arbitrary (concrete or moded) queries, and develop an algorithm that predicts termination of general logic programs with arbitrary nonfloundering queries. We have implemented a termination prediction tool and obtained quite satisfactory experimental results. Except for five programs which break the experiment time limit, Our prediction is 100% correct for all 296 benchmark programs of the Termination Competition 2007, of which 18 programs cannot be proved by any of the existing state-of-the-art analyzers like AProVE07, NTI, Polytool, and TALP.
C1 [Shen, Yi-Dong] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [De Schreye, Danny; Voets, Dean] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 Chinese Academy of Sciences; Institute of Software, CAS; KU Leuven
RP Shen, YD (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
EM ydshen@ios.ac.cn; danny.deschreye@cs.kuleuven.ac.be;
   dean.voets@cs.kuleuven.ac.be
RI Shen, Yi/GRS-3602-2022; De Schreye, Daniel/B-1755-2014
OI De Schreye, Danny/0000-0002-8423-8598
FU NSFC [60673103, 60721061, 60833001]; National High-tech R&D Program (863
   Program); Flemish Fund for Scientific Research-FWO-project [G0561-08]
FX We would like to thank the anonymous referees for their constructive
   comments and suggestions that helped us improve this work. Yi-Dong Shen
   is supported in part by NSFC grants 60673103, 60721061, and 60833001,
   and by the National High-tech R&D Program (863 Program). Dean Voets is
   supported by the Flemish Fund for Scientific Research-FWO-project
   G0561-08.
CR AGUZZI G, 1993, LECT NOTES COMPUTER, V761, P114
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   ARTS T, 1995, LECT NOTES COMPUTER, V1048, P219
   BOL RN, 1991, THEOR COMPUT SCI, V86, P35, DOI 10.1016/0304-3975(91)90004-L
   Bossi A, 2002, THEOR PRACT LOG PROG, V2, P263, DOI 10.1017/S1471068402001382
   BRUYNOOGHE M, 1992, NEW GENERAT COMPUT, V11, P47, DOI 10.1007/BF03037527
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Clark K. L., 1978, Logic and data bases, P293
   Decorte S, 1999, ACM T PROGR LANG SYS, V21, P1137, DOI 10.1145/330643.330645
   Dershowitz N, 2001, APPL ALGEBR ENG COMM, V12, P117, DOI 10.1007/s002000100065
   GELDER AV, 1987, J LOGIC PROGRAM, V4, P23
   Genaim S, 2005, THEOR PRACT LOG PROG, V5, P75, DOI 10.1017/S1471068404002236
   Giesl J, 2006, LECT NOTES ARTIF INT, V4130, P281
   Lindenstrauss N, 1997, LOGIC PROGRAMM, P63
   Lindenstrauss N, 1997, LECT NOTES COMPUT SC, V1254, P444
   Lloyd J. W., 2012, Foundations of Logic Programming
   Marchiori E, 1996, J ARTIF INTELL RES, V4, P179, DOI 10.1613/jair.198
   MARCHIORI M, 1996, LECT NOTES COMPUTER, V1101, P375
   Martens B, 1996, J LOGIC PROGRAM, V28, P89, DOI 10.1016/0743-1066(95)00149-2
   Mesnard F, 2005, THEOR PRACT LOG PROG, V5, P243, DOI 10.1017/S1471O68404002017
   Mesnard F, 2001, LECT NOTES COMPUT SC, V2126, P93
   Nguyen MT, 2005, LECT NOTES COMPUT SC, V3668, P311, DOI 10.1007/11562931_24
   NGUYEN MT, 2006, POLYTOOL PROVING TER
   Ohlebusch E, 2000, LECT NOTES COMPUT SC, V1833, P270
   Payet E, 2006, ACM T PROGR LANG SYS, V28, P256, DOI 10.1145/1119479.1119481
   Payet É, 2007, LECT NOTES COMPUT SC, V4407, P194, DOI 10.1007/978-3-540-71410-1_14
   Rao MRKK, 1998, J LOGIC PROGRAM, V34, P1, DOI 10.1016/S0743-1066(97)00028-9
   SAHLIN D, 1993, NEW GENERAT COMPUT, V12, P7, DOI 10.1007/BF03038271
   Schneider-Kamp P, 2007, LECT NOTES COMPUT SC, V4407, P177, DOI 10.1007/978-3-540-71410-1_13
   SCHREYE DD, 1993, J LOGIC PROGRAM, V19, P199
   Shen YD, 2004, THEOR COMPUT SCI, V328, P271, DOI 10.1016/j.tcs.2004.07.028
   Shen YD, 1997, NEW GENERAT COMPUT, V15, P187, DOI 10.1007/BF03037237
   Shen YD, 2001, THEOR COMPUT SCI, V266, P441, DOI 10.1016/S0304-3975(00)00197-3
   Shen Yi-Dong, 2003, ACM T COMPUT LOG, V4, P417
   vanRaamsdonk F, 1997, LOGIC PROGRAMM, P168
   Verbaeten S., 2001, ACM T COMPUT LOG, V2, P57
NR 37
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2009
VL 9
BP 751
EP 780
DI 10.1017/S1471068409990068
PN 6
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 522GH
UT WOS:000271985400002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Djelloul, K
   Dao, TBH
   Frühwirth, T
AF Djelloul, Khalil
   Dao, Thi-Bich-Hanh
   Fruehwirth, Thom
TI Theory of finite or infinite trees revisited
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logical first-order formula; theory of finite or infinite trees;
   complete theory; rewriting rules
ID EFFICIENT UNIFICATION
AB We present in this paper a first-order axiomatization of an extended theory T of finite or infinite trees, built on a signature containing an infinite set of function symbols and a relation finite(t), which enables to distinguish between finite and infinite trees. We show that T has at least one model and prove its completeness by giving not only a decision procedure, but a full first-order constraint solver that gives clear and explicit solutions for any first-order constraint satisfaction problem in T. The solver is given in the form of 16 rewriting rules that transform any first-order constraint phi into an equivalent disjunction phi of simple formulas such that phi is either the formula true or the formula false or a formula having at least one free variable, being equivalent neither to true nor to false and where the solutions of the free variables are expressed in a clear and explicit way. The correctness of our rules implies the completeness of T. We also describe an implementation of our algorithm in CHR (Constraint Handling Rules) and compare the performance with an implementation in C++ and that of a recent decision procedure for decomposable theories.
C1 [Djelloul, Khalil; Fruehwirth, Thom] Univ Ulm, Fac Comp Sci, D-89069 Ulm, Germany.
   [Dao, Thi-Bich-Hanh] Univ Orleans, Lab Informat Fondamentale Orleans, F-45067 Orleans, France.
C3 Ulm University; Universite de Orleans
RP Djelloul, K (corresponding author), Univ Ulm, Fac Comp Sci, D-89069 Ulm, Germany.
OI Dao, Thi-Bich-Hanh/0000-0002-2740-6954
CR ABDENNADHER S, 1997, LNCS, V1330
   [Anonymous], 1998, Term rewriting and all thatM
   [Anonymous], 1982, Logic Programming
   BENHAMOU F, 1996, MANUEL PROLOG, V4
   BURCKERT HJ, 1988, LECT NOTES COMPUT SC, V310, P517, DOI 10.1007/BFb0012853
   Clark Keith L., 1978, LOGIC DATA BASES, P293, DOI [10.1007/978-1-4684-3384-5_11, DOI 10.1007/978-1-4684-3384-5_11]
   COLMERAUER A, 1983, TSI-TECH SCI INF, V2, P271
   Colmerauer A, 2003, CONSTRAINTS, V8, P283, DOI 10.1023/A:1025675127871
   COLMERAUER A, 1990, COMMUN ACM, V33, P69, DOI 10.1145/79204.79210
   COLMERAUER A, 1984, P INT C 5 GEN COMP S, P85
   COMON H, 1989, J SYMB COMPUT, V7, P371, DOI 10.1016/S0747-7171(89)80017-3
   COMON H, 1991, RESOLUTION CONTRAINT
   COMON H, 1988, THESIS I NATL POLYTE
   COURCELLE B, 1983, THEOR COMPUT SCI, V25, P95, DOI 10.1016/0304-3975(83)90059-2
   COURCELLE B, 1986, THEORETICAL COMPUTER, V42, P100
   DAO T, 2000, THESIS U MEDITERRANE
   DJELLOUL K, 2006, J THEORY PR IN PRESS
   DJELLOUL K, 2006, P 21 ACM S APPL COMP, P7
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P105, DOI 10.1007/978-3-540-27775-0_8
   FRUEHWIRTH T, 2005, LNCS, V3668, P113
   FRUEHWIRTH T, 2003, ESSENTIALS CONSTRAIN
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   HERBRAND J, 1930, THESIS U PARIS FRANC
   HUET G, 1976, THESIS U PARIS 7 FRA
   JAFFAR J, 1984, NEW GENERAT COMPUT, V2, P207, DOI 10.1007/BF03037057
   John E.Hopcroft Jeff D. Ullman., 1979, INTRO AUTOMATA THEOR
   JOUANNAUD JP, 1991, SOLVING EQUATIONS AB, P257
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Lassez J.-L., 1987, Journal of Automated Reasoning, V3, P301, DOI 10.1007/BF00243794
   LASSEZ JL, 1989, LECT NOTES COMPUT SC, V351, P19
   LYNDON R, 1964, NOTES LOGIC
   MAHER M, 1988, COMPLETE AXIOMATIZAT
   MAHER MJ, 1995, ANN MATH ARTIF INTEL, V15, P167, DOI 10.1007/BF01534454
   Mal'cev A. I., 1971, METAMATHEMATICS ALGE, V66, P262
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   MEISTER M, 2006, P 3 WORKSH CONSTR HA
   PATERSON MS, 1978, J COMPUT SYST SCI, V16, P158, DOI 10.1016/0022-0000(78)90043-0
   PODELSKI A, 1994, MIT PS LOG, P359
   RAMACHANDRAN V, 1993, LNCS, V761, P205
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Rybina Tatiana., 2001, ACM Transactions on Computational Logic, V2, P155, DOI [10.1145/371316.371494, DOI 10.1145/371316.371494]
   Schreibman S, 2006, PORTAL-LIBR ACAD, V6, P111, DOI 10.1353/pla.2006.0011
   SMITH DA, 1991, LOGIC PROGRAMM, P760
   VANWEERT P, 2006, P 3 WORKSH CONSTR HA
   VOROBYOV S, 1996, LECT NOTES ARTIF INT, V1104, P275
   [No title captured]
NR 46
TC 7
Z9 8
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2008
VL 8
BP 431
EP 489
DI 10.1017/S1471068407003171
PN 4
PG 59
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 329EM
UT WOS:000257849700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Escobar, S
   Lucas, S
AF Alpuente, M.
   Escobar, S.
   Lucas, S.
TI Removing redundant arguments automatically
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE redundant arguments in functions; semantics-preserving program
   transformation; analysis and optimization; term rewriting
ID SUFFICIENT-COMPLETENESS; STRICTNESS ANALYSIS; REWRITE SYSTEMS; LOGIC;
   SPECIALIZATION; DECIDABILITY; REDUCTIONS
AB The application of automatic transformation processes during the formal development and optimization of programs can introduce encumbrances in the generated code that programmers usually (or presumably) do not write. An example is the introduction of redundant arguments in the functions defined in the program. Redundancy of a parameter means that replacing it by any expression does not change the result. In this work, we provide methods for the analysis and elimination of redundant arguments in term rewriting systems as a model for the programs that can be written in more sophisticated languages. On the basis of the uselessness of redundant arguments, we also propose an erasure procedure which may avoid wasteful computations while still preserving the semantics (under ascertained conditions). A prototype implementation of these methods has been undertaken, which demonstrates the practicality of our approach.
C1 Univ Politecn Valencia, DSIC, E-46022 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Alpuente, M (corresponding author), Univ Politecn Valencia, DSIC, Camino Vera S-N, E-46022 Valencia, Spain.
EM alpuente@dsic.upv.es; sescobar@dsic.upv.es; slucas@dsic.upv.es
RI Escobar, Santiago/AAL-3399-2020; ALPUENTE, MARÍA/E-1899-2012; Lucas,
   Salvador/F-6725-2010; Escobar, Santiago/C-9589-2012
OI Escobar, Santiago/0000-0002-3550-4781; ALPUENTE,
   MARÍA/0000-0002-9268-1178; Lucas, Salvador/0000-0001-9923-2108; Escobar,
   Santiago/0000-0002-3550-4781
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Alpuente M, 1997, ACM SIGPLAN NOTICES, V32, P151, DOI 10.1145/258994.259015
   Alpuente M, 1999, ACM SIGPLAN NOTICES, V34, P273, DOI 10.1145/317765.317910
   Alpuente M, 1998, ACM T PROGR LANG SYS, V20, P768, DOI 10.1145/291891.291896
   ALPUENTE M, 2002, ELECT NOTES THEORETI, V76, P100
   ALPUENTE M, 2006, REMOVING REDUNDANT A
   ALPUENTE M, 2002, LECT NOTES COMPUTER, V2422, P117
   [Anonymous], 1998, Term rewriting and all thatM
   [Anonymous], CURRY INTEGRATED FUN
   [Anonymous], 1990, HDB THEORETICAL COMP
   [Anonymous], TERM REWR SYST
   Arts T., 2001, AIB200109 RWTH AACH
   Berardi S, 2000, LECT NOTES COMPUT SC, V1924, P172
   BERT D, 1993, LECT NOTES COMPUTER, V724, P178
   BURN GL, 1986, LECT NOTES COMPUT SC, V217, P42
   BURN GL, 1991, LAZY FUNCTIONAL LANG
   Comon H, 2000, INFORM COMPUT, V157, P25, DOI 10.1006/inco.1999.2838
   Contejean E., 2003, P 6 INT WORKSH TERM, P71
   COUSOT P, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P95, DOI 10.1109/ICCL.1994.288389
   DAUCHET M, 1990, INFORM COMPUT, V88, P187, DOI 10.1016/0890-5401(90)90015-A
   Dauchet M., 1987, Proceedings of the Symposium on Logic in Computer Science (Cat. No.87CH2464-6), P353
   Durand I, 1997, LECT NOTES ARTIF INT, V1249, P4
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   GALLIER JH, 1985, THEOR COMPUT SCI, V37, P123, DOI 10.1016/0304-3975(85)90089-1
   Giesl R, 2004, LECT NOTES COMPUT SC, V3091, P210
   GLUCK R, 1994, LECT NOTES COMPUTER, V844, P165
   Godoy G, 2004, LECT NOTES ARTIF INT, V3097, P91
   Gouranton V, 1998, LECT NOTES COMPUT SC, V1503, P115
   Gramlich B, 2001, THEOR COMPUT SCI, V258, P435, DOI 10.1016/S0304-3975(00)00030-X
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 2001, J FUNCTIONAL LOGIC P, P1
   HANUS M, 2003, PAKCS 1 5 0 PORTLAND
   Hendrix J, 2005, LECT NOTES COMPUT SC, V3467, P165
   Hofbauer D, 2003, INFORM COMPUT, V183, P43, DOI 10.1016/S0890-5401(03)00008-7
   Huet G.P., 1991, Computational Logic-Essays in Honor of Alan Robinson, P395
   HUGHES J, 1988, IFIP WORKSH PART EV, P187
   Jacquemard F, 1996, LECT NOTES COMPUT SC, V1103, P362
   JENSEN TP, 1991, LECT NOTES COMPUT SC, V523, P352
   Jones S.B., 1989, FPCA, P54
   KAPUR D, 1991, ACTA INFORM, V28, P311, DOI 10.1007/BF01893885
   KAPUR D, 1987, ACTA INFORM, V24, P395, DOI 10.1007/BF00292110
   KENNAWAY R, 1996, LECT NOTES ARTIF INT, V1139, P254
   KLOP JW, 1992, HDB LOGIC COMPUTER S, V3, P1
   Knoop J., 1994, Partial dead code elimination, V29, P147
   Kobayashi N., 2000, PEPM 00, P84
   KOUNALIS E, 1985, LECT NOTES COMPUT SC, V204, P348
   KUPER J, 1994, THESIS U TWENTE
   Leuschel M, 1997, LECT NOTES COMPUT SC, V1207, P83
   Leuschel M, 1998, LECT NOTES COMPUT SC, V1503, P230
   LEUSCHEL M, 1995, 210DSICII802 CW KU L
   LIU YA, 2002, SCI COMPUTER PROGRAM
   LUCAS S, 2001, LECT NOTES COMPUTER, V2051, P216
   Mitsuhashi I, 2004, LECT NOTES COMPUT SC, V3091, P285
   MYCROFT A, 1992, 19 SEM CURR TRENDS T
   MYCROFT A, 1980, LECTURE NOTES COMPUT, V83, P269, DOI DOI 10.1007/3-540-09981-6_19
   Oyamaguchi M., 1986, Journal of Information Processing, V9, P232
   Oyamaguchi M., 1990, Journal of Information Processing, V13, P347
   PADAWITZ P, 1988, EATCS MONOGRAPHS THE, V16
   PARK YG, 1992, P INT C PROGR LANG D, V27, P116
   Pettorossi A, 1996, ACM COMPUT SURV, V28, P360, DOI 10.1145/234528.234529
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   PETTOROSSI A, 1996, LECT NOTES COMPUTER, V1110, P355
   Plasmeijer Rinus, 1993, FUNCTIONAL PROGRAMMI
   RABIN MO, 1969, T AM MATH SOC, V141, P1, DOI 10.2307/1995086
   SCHOENIG S, 1996, LNCS, V1145, P317
   SEKAR R, 1990, 17TH ANN ACM S PRINC, P169
   SZILAGYI G, 2002, J AUTOMATED SOFTWARE, V9, P41
   Thatcher J. W., 1968, Mathematical Systems Theory, V2, P57, DOI 10.1007/BF01691346
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Verma R, 2002, INFORM PROCESS LETT, V84, P227, DOI 10.1016/S0020-0190(02)00395-2
   WADLER P, 1987, LECT NOTES COMPUT SC, V274, P385
   WAND M, 1999, P 26 ACM S PRINC PRO, P291
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   [No title captured]
NR 74
TC 3
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 3
EP 35
DI 10.1017/S1471068406002869
PN 1-2
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lanese, I
   Montanari, U
AF Lanese, Ivan
   Montanari, Ugo
TI Mapping fusion and synchronized hyperedge replacement into logic
   programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE fusion calculus; graph transformation; Synchronized Hyperedge
   Replacement; logic programming; mobility
AB In this paper we compare three different formalisms that can be used in the area of models for distributed, concurrent and mobile systems. In particular we analyze the relationships between a process calculus, the Fusion Calculus, graph transformations in the Synchronized Hyperedge Replacement with Hoare synchronization (HSHR) approach and logic programming. We present a translation from Fusion Calculus into HSHR (whereas Fusion Calculus uses Milner synchronization) and prove a correspondence between the reduction semantics of Fusion Calculus and HSHR transitions. We also present a mapping from HSHR into a transactional version of logic programming and prove that there is a full correspondence between the two formalisms. The resulting mapping from Fusion Calculus to logic programming is interesting since it shows the tight analogies between the two formalisms, in particular for handling name generation and mobility. The intermediate step in terms of HSHR is convenient since graph transformations allow for multiple, remote synchronizations, as required by Fusion Calculus semantics.
C1 Univ Bologna, Dept Comp Sci, I-40127 Bologna, Italy.
C3 University of Bologna
RP Lanese, I (corresponding author), Univ Bologna, Dept Comp Sci, Mura Anteo Zamboni 7, I-40127 Bologna, Italy.
EM lanese@cs.unibo.it; ugo@di.unipi.it
RI Lanese, Ivan/HNP-9572-2023
OI Lanese, Ivan/0000-0003-2527-9995
CR [Anonymous], 1999, Handbook of graph grammars and computing by graph transformation
   Bruni R, 2000, INFORM COMPUT, V156, P46, DOI 10.1006/inco.1999.2819
   Bruni R, 2001, THEOR PRACT LOG PROG, V1, P647, DOI [10.1017/S1471068401000035, 10.1017/S147106840100117X]
   DEGANO P, 1987, J ACM, V34, P411, DOI 10.1145/23005.24038
   EHRIG H, 1973, P IEEE C AUT SWITCH, P167
   FERRARI G, 2001, LNCS, V2202, P1
   Gardner P., 2000, Mathematical Foundations of Computer Science 2000. 25th International Symposium, MFCS 2000. Proceedings. (Lecture Notes in Computer Science Vol.1893), P373
   GARDNER P, 2004, LNCS, V2987, P484
   Hirsch D, 2000, LECT NOTES COMPUT SC, V1906, P148
   HIRSCH D, 2001, LNCS, V2154, P121
   Hirsch D.F., 2003, Ph.D. thesis)
   Jensen OH, 2003, ACM SIGPLAN NOTICES, V38, P38, DOI 10.1145/640128.604135
   LANESE I, 2004, ENTCS, V104, P199
   LANESE I, 2002, P SBES 2002 16 BRAZ, P11
   LANESE I, 2005, MAPPING FUSION SYNCH
   Lanese I., 2006, THESIS U PISA PISA
   LANESE I, 2002, THESIS U PISA PISA
   Lanese I, 2005, ELECTRON NOTES THEOR, V138, P43, DOI 10.1016/j.entcs.2005.05.004
   Lloyd JohnWylie., 1993, FDN LOGIC PROGRAMMIN, Vsecond
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Parrow J., 1998, P LICS 98
   Sangiorgi D., 1993, LNCS, V715, P127, DOI [10.1007/3-540-57208-2, DOI 10.1007/3-540-57208-2]
   VICTOR B, 1998, THESIS UPPSALA U SWE
   [No title captured]
NR 24
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 123
EP 151
DI 10.1017/S147106840600281X
PN 1-2
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schrijvers, T
   Frühwirth, T
AF Schrijvers, T
   Frühwirth, T
TI Optimal union-find in Constraint Handling Rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative algorithms; time complexity analysis; disjoint-set problem;
   union-find algorithm; constraint handling rules
AB Constraint Handling Rules (CHR) is a committed-choice rule-based language that was originally intended for writing constraint solvers. In this paper we show that it is also possible to write the classic union-find algorithm and variants in CHR. The programs neither compromise in declarativeness nor efficiency. We study the time complexity of our programs: they match the almost-linear complexity of the best known imperative implementations. This fact is illustrated with experimental results.
C1 Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
   Univ Ulm, Fac Comp Sci, D-89069 Ulm, Germany.
C3 KU Leuven; Ulm University
RP Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
RI Schrijvers, Tom/A-6696-2016; Schrijvers, Tom/A-6269-2009
OI Schrijvers, Tom/0000-0001-8771-5559; 
CR GALIL Z, 1991, COMPUT SURV, V23, P319, DOI 10.1145/116873.116878
   Holzbaur C, 2005, THEOR PRACT LOG PROG, V5, P503, DOI 10.1017/S1471068405002413
   TARJAN RE, 1984, J ACM, V31, P245, DOI 10.1145/62.2160
   Wolf A, 2005, THEOR PRACT LOG PROG, V5, P567, DOI 10.1017/S1471068405002383
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 9
TC 12
Z9 12
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 213
EP 224
DI 10.1017/S1471068405002541
PN 1-2
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Osorio, M
   Navarro, JA
   Arrazola, J
AF Osorio, M
   Navarro, JA
   Arrazola, J
TI Applications qf intuitionistic logic in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; intuitionistic logic; equivalence; program transformations
ID NESTED EXPRESSIONS; NEGATION
AB We present some applications of intermediate logics in the field of Answer Set Programming (ASP). A brief, but comprehensive introduction to the answer set semantics, intuitionistic and other intermediate logics is given. Some equivalence notions and their applications are discussed. Some results on intermediate logics are shown, and applied later to prove properties of answer sets. A characterization of answer sets for logic programs with nested expressions is provided in terms of intuitionistic provability, generalizing a recent result given by Pearce. It is known that the answer set semantics for logic programs with nested expressions may select non-minimal models. Minimal models can be very important in some applications, therefore we studied them; in particular we obtain a characterization, in terms of intuitionistic logic, of answer sets which are also minimal models. We show that the logic G(3) characterizes the notion of strong equivalence between programs Under the semantic induced by these models. Finally we discuss possible applications and consequences of Our results. They clearly state interesting links between ASP and intermediate logics, which might bring research in these two areas together.
C1 Univ Americas Puebla, CENTIA, Cholula 72820, Mexico.
C3 Universidad Americas Puebla (UDLAP)
RP Univ Americas Puebla, CENTIA, Sta Catarina Martir, Cholula 72820, Mexico.
EM josorio@mail.udlap.mx
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   BELL C, 1993, P 2 INT WORKSH LOG P, P23
   Brouwer L. E. J., 1981, Brouwer's Cambridge Lectures on Intuitionism
   Dix J, 2001, ANN PURE APPL LOGIC, V108, P153, DOI 10.1016/S0168-0072(00)00044-0
   ERDEM E, 2001, P 17 INT C LOG PROGR, P242
   ESHGHI K, 1989, LOGIC PROGRAMM, P234
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   GELFOND M, 1989, ARTIF INTELL, V38, P75, DOI 10.1016/0004-3702(89)90068-4
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Janhunen T., 2001, LECT NOTES COMPUTER, V2173, P93, DOI DOI 10.1007/3-540-45402-0_7
   Kowalski R., 2001, P 17 INT C LOG PROGR, P2
   LIBERATORE P, 1999, 0999 U ROMA DIP INF
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   LIFSCHITZ V, 1993, 2 INT WORKSH LOG PRO, P101
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   LLOYD JW, 1987, FOUNDATIONS LOGIC PR
   LOBO J, 1992, INFORM PROCESS LETT, V44, P129, DOI 10.1016/0020-0190(92)90052-W
   Marek V. W., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P124
   MAREK VW, 1993, 2INT WORKSH LOGIC PR, P115
   Minker J., 1985, Journal of Logic Programming, V2, P235, DOI 10.1016/S0743-1066(85)80002-9
   NAVARRO JA, 2002, 7 ESSLLI STUD SESS E
   NIEMELA I, 1996, P JOINT INT C S LOG, P289
   Osorio M, 2002, LECT NOTES COMPUT SC, V2372, P57, DOI 10.1007/3-540-45607-4_4
   Osorio M, 2002, LECT NOTES COMPUT SC, V2401, P482, DOI 10.1007/3-540-45619-8_44
   Osorio M, 1999, SCI COMPUT PROGRAM, V34, P207, DOI 10.1016/S0167-6423(98)00018-5
   Osorio M, 1999, NEW GENERAT COMPUT, V17, P255, DOI 10.1007/BF03037222
   OSORIO M, 2002, UNPUB ANSWER SET PRO
   OSORIO M, 2002, P IDEIA WORKSH CONJ
   OSORIO M, 2002, 9 WORKSH LOG LANG IN, V67, P265
   Pearce D, 2002, LECT NOTES COMPUT SC, V2401, P405, DOI 10.1007/3-540-45619-8_28
   Pearce D, 1999, APPL LOG SER, V13, P161
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   TROELSTRA AS, 1988, CONSTRUCTIVISM METH, V2
   VAN DALEN D., 1980, Logic and Structure.
   Zakharyaschev M., 2001, HDB PHILOS LOGIC, P83, DOI DOI 10.1007/978-94-017-0454-0
NR 36
TC 25
Z9 25
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2004
VL 4
BP 325
EP 354
DI 10.1017/S1471068403001881
PN 3
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 819GE
UT WOS:000221302000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Heljanko, K
   Niemelä, I
AF Heljanko, K
   Niemelä, I
TI Bounded LTL model checking with stable models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 6th International Conference on Logic Programming and Nonmonotionic
   Reasoning (LPNMR 2001)
CY SEP, 2001
CL VIENNA, AUSTRIA
DE bounded model checking; stable models; LTL; step semantics
AB In this paper, bounded model checking of asynchronous concurrent systems is introduced as a promising application area for answer set programming. As the model of asynchronous systems a generalisation of communicating automata, I-safe Petri nets, are used. It is shown how a I-safe Petri net and a requirement on the behaviour of the net can be translated into a logic program such that the bounded model checking problem for the net can be solved by computing stable models of the corresponding program. The use of the stable model semantics leads to compact encodings of bounded reachability and deadlock detection tasks as well as the more general problem of bounded model checking of linear temporal logic. Correctness proofs of the devised translations are given, and some experimental results using the translation and the Smodels system are presented.
C1 Aalto Univ, Lab Theoret Comp Sci, Dept Comp Sci & Engn, FIN-02015 Espoo, Finland.
C3 Aalto University
RP Aalto Univ, Lab Theoret Comp Sci, Dept Comp Sci & Engn, POB 5400, FIN-02015 Espoo, Finland.
EM Keijo.Heljanko@hut.fi; Ilkka.Niemela@hut.fi
RI Heljanko, Keijo/C-7603-2011; Niemelä, Ilkka/G-2366-2013
OI Heljanko, Keijo/0000-0002-4547-2701; 
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   BEST E, 1987, THEOR COMPUT SCI, V55, P87, DOI 10.1016/0304-3975(87)90090-9
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   CIMATTI A, 2002, LNCS, V2294, P196
   Clarke EM, 1999, MODEL CHECKING, P1
   CORBETT JC, 1995, EVALUATING DEADLOCK
   Desel Jorg., 1998, PLACETRANSITION PETR, P122, DOI [10.1007/3-540-65306-615, DOI 10.1007/3-540-65306-615]
   Esparza J., 1998, LECT PETRI NETS, V1491, P374
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Heljanko K., 1999, Fundamenta Informaticae, V37, P247
   HELJANKO K, 2001, LNCS, V2154, P218
   HELJANKO K, 2001, LECT NOTES ARTIF INT, V2173, P200
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 1999, P 16 INT C LOG PROGR, P25
   Melzer S, 1997, LECT NOTES COMPUT SC, V1254, P352
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   POKORNY LR, 2000, WORKSH TAB PARS DED
   RAMAKRISHNAN CR, 2000, LNCS, V1855, P576
   Varpaaniemi K, 1997, LECT NOTES COMPUT SC, V1254, P472
NR 25
TC 44
Z9 46
U1 1
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 519
EP 550
DI 10.1017/S1471068403001790
PN 4-5
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800006
DA 2024-07-18
ER

PT J
AU Arni, F
   Ong, KL
   Tsur, S
   Wang, HX
   Zaniolo, C
AF Arni, F
   Ong, KL
   Tsur, S
   Wang, HX
   Zaniolo, C
TI The deductive database system <i>LDL</i>++
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE deductive databases; logic and databases; Datalog; nonmonotonic
   reasoning; monotonic aggregates
ID AGGREGATION; LOGIC
AB This paper describes the LDL++ system and the research advances that have enabled its design and development. We begin by discussing the new nonmonotonic and nondeterministic constructs that extend the functionality of the LDL++ language, while preserving its model-theoretic and fixpoint semantics. Then, we describe the execution model and the open architecture designed to support these new constructs and to facilitate the integration with existing DBMSs and applications. Finally, we describe the lessons learned by using LDL++ on various tested applications, such as middleware and datamning.
C1 InferData Corp, Austin, TX 78759 USA.
   Trilogy Inc, Austin, TX 78746 USA.
   BEA Syst, San Jose, CA 95131 USA.
   IBM Corp, TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
   Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 International Business Machines (IBM); University of California System;
   University of California Los Angeles
RP InferData Corp, 8200 N MoPac Expressway, Austin, TX 78759 USA.
EM farni@inferdata.com; kayliang.ong@trilogy.com; dicktsur@bea.com;
   haixun@us.ibm.com; zaniolo@cs.ucla.edu
RI Wang, Haixun/HMV-9179-2023
CR Abiteboul S, 1995, FDN DATABASES
   ACKLEY D, 1990, P 9 INT C ENT REL AP, P129
   [Anonymous], P 1997 ACM SIGMOD IN
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   Arni N, 1996, J LOGIC PROGRAM, V27, P73, DOI 10.1016/0743-1066(95)00146-8
   BAUDINET M, 1994, TEMPORAL DEDUCTING D, P294
   Bonchi F., 1999, Proc. of SIGKDD99, P175
   Brogi A, 1997, ANN MATH ARTIF INTEL, V19, P27, DOI 10.1023/A:1018995303452
   Byrd Lawrence., 1980, P 1980 LOGIC PROGRAM, P127
   Chimenti D., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P76, DOI 10.1109/69.50907
   CHIMENTI D, 1989, P EDBT C, P271
   ERICKSON D, 1992, SCI AM, V266, P128
   FINKELSTEIN SJ, 1996, X3H296075 ISO WG3
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giannotti F, 2001, J COMPUT SYST SCI, V62, P15, DOI 10.1006/jcss.1999.1699
   GIANNOTTI F, 1991, LECT NOTES COMPUT SC, V566, P129
   GIANNOTTI F, 1999, ACM SIGMOD WORKSH RE
   GIANNOTTI F, 1998, LECT NOTES COMPUTER, V1584, P58
   GIANNOTTI F, 2001, PRINC DAT MIN KNOWL, P128
   Greco S, 1997, LOGIC PROGRAMM, P181
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   KEMP D, 1995, P 4 INT C DED OBJ OR, P91
   Kemp DB, 1998, IEEE T KNOWL DATA EN, V10, P727, DOI 10.1109/69.729729
   KRISHNAMURTHY R, 1988, P 3 INT C DAT KNOWL
   Lausen G, 1998, SPRING INT SER ENG C, P389
   LAUSEN G, 1998, LECT NOTES COMPUTER, V1472, P69
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   MINKER J, 1996, P INT WORKSH LOG DAT, P5
   Muntz R., 1995, Applications of Logic Databases, P101
   NAQVI SA, 1989, LOGICAL LANGUAGE DAT
   ONG K, 1995, P 4 INT C DAT SYST A, P172
   OVERBEEK R, 1990, AUTOMATED INTERPRETA
   PHIPPS G, 1991, P ACM SIGMOD, P308
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   RAMAKRISHNAN R, 1992, PROC INT CONF VERY L, P238
   RAMAKRISHNAN R, 1995, J LOGIC PROGRAM, V23, P125, DOI 10.1016/0743-1066(94)00039-9
   RAMAKRISHNAN R, 1993, P ACM SIGMOD INT C M, P167
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   ROSS KA, 1994, J ASSOC COMPUT MACH, V41, P1216, DOI 10.1145/195613.195646
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   SCHLIPF JS, 1993, P WORKSH STRUCT COMP, P143
   SHAW S, 1993, ILP 93 WORKSH PROGR
   SHEN W, 1996, ADV KNOWLEDGE DISCOV, P201
   SHEN W, 1994, KDD WORKSH 1994 KNOW, P335
   Sheth A., 1995, Applications of Logic Databases, P23
   Shmueli O., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P15, DOI 10.1145/308386.308400
   TRYON D, 1991, P MONT SOFTW C
   TSUR S, 1990, P NACLP90 WORKSH DED
   TSUR S, 1990, DATA ENG, V13, P58
   TSUR S, 1990, P 10 ACM SIGACT SIGM, P205
   Ullman J. D., 1989, DATABASE KNOWLEDGE B, VI
   Ullman Jeffrey D., 1989, Database and Knowledge-base Systems Vol, V2
   Van Gelder A., 1993, P INT C DED OBJ OR D, P13
   Wang H., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P135, DOI 10.1109/ICDE.2000.839400
   Zaniolo C., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P204
   ZANIOLO C, 1998, LDL PLUS PLUS DOCUME
   Zaniolo C., 1999, LOGIC PROGRAMMING PA, P401
   ZANIOLO C, 1997, P 5 INT C DED OBJ OR, P265
   ZANIOLO C, 1994, P 1 INT WORKSH RUL D, P271
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
NR 60
TC 37
Z9 43
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2003
VL 3
BP 61
EP 94
DI 10.1017/S1471068402001515
PN 1
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LJ
UT WOS:000182638000003
DA 2024-07-18
ER

PT J
AU Sakama, C
AF Sakama, Chiaki
TI Human Conditional Reasoning in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; completion; human conditional reasoning;
   pragmatic inference
ID LOGIC; IFF
AB Given a conditional sentence "${\varphi}\Rightarrow \psi$" (if ${\varphi}$ then $\psi$) and respective facts, four different types of inferences are observed in human reasoning: Affirming the antecedent (AA) (or modus ponens) reasons $\psi$ from ${\varphi}$; affirming the consequent (AC) reasons ${\varphi}$ from $\psi$; denying the antecedent (DA) reasons $\neg\psi$ from $\neg{\varphi}$; and denying the consequent (DC) (or modus tollens) reasons $\neg{\varphi}$ from $\neg\psi$. Among them, AA and DC are logically valid, while AC and DA are logically invalid and often called logical fallacies. Nevertheless, humans often perform AC or DA as pragmatic inference in daily life. In this paper, we realize AC, DA and DC inferences in answer set programming. Eight different types of completion are introduced, and their semantics are given by answer sets. We investigate formal properties and characterize human reasoning tasks in cognitive psychology. Those completions are also applied to commonsense reasoning in AI.
C1 [Sakama, Chiaki] Wakayama Univ, 930 Sakaedani, Wakayama 6408510, Japan.
C3 Wakayama University
RP Sakama, C (corresponding author), Wakayama Univ, 930 Sakaedani, Wakayama 6408510, Japan.
EM sakama@wakayama-u.ac.jp
CR Alviano M., 2016, P 25 INT JOINT C ART, P886
   [Anonymous], 2012, P 34 ANN C COGN SCI
   Apt K. R., 1988, FDN DEDUCTIVE DATABA, P89, DOI DOI 10.1016/B978-0-934613-40-8.50006-3
   BRAINE MDS, 1978, PSYCHOL REV, V85, P1, DOI 10.1037//0033-295X.85.1.1
   Braine MDS, 1998, MENTAL LOGIC, P79
   Byrne RMJ, 2005, RATIONAL IMAGINATION: HOW PEOPLE CREATE ALTERNATIVES TO REALITY, P1
   BYRNE RMJ, 1989, COGNITION, V31, P61, DOI 10.1016/0010-0277(89)90018-8
   CHENG PW, 1985, COGNITIVE PSYCHOL, V17, P391, DOI 10.1016/0010-0285(85)90014-3
   Chu W. W., 1990, COOPERATING KNOWLEDG, P271
   Clark K. L., 1978, Logic and data bases, P293
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Cosmides L., 1992, ADAPTED MIND EVOLUTI, P163, DOI DOI 10.1098/RSTB.2006.1991
   Cramer M., 2021, P 19 INT WORKSH NONM, P223
   Dietz E., 2022, P 44 ANN C COGN SCI, P2838
   Eichhorn C, 2018, AAAI CONF ARTIF INTE, P1827
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   Gaasterland Terry, 1992, Journal of Intelligence Information Systems, V1, P293
   Geis MichaelL., 1971, LinguisticInquiry, DOI DOI 10.2307/4177664
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GRIGGS RA, 1982, BRIT J PSYCHOL, V73, P407, DOI 10.1111/j.2044-8295.1982.tb01823.x
   Hölldobler S, 2009, LECT NOTES COMPUT SC, V5649, P464, DOI 10.1007/978-3-642-02846-5_37
   Horn LR, 2000, J PRAGMATICS, V32, P289, DOI 10.1016/S0378-2166(99)00053-3
   Inoue K, 1999, ANN MATH ARTIF INTEL, V25, P339, DOI 10.1023/A:1018926021566
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Johnson-Laird PN., 1983, Mental Models: towards a Cognitive Science of Language, Inference, and Consciousness
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kowalski K, 2011, COMPUTATIONAL METHODS FOR LARGE SYSTEMS: ELECTRONIC STRUCTURE APPROACHES FOR BIOTECHNOLOGY AND NANOTECHNOLOGY, P167
   Lewis DK., 1973, Counterfactuals
   LIFSCHITZ V, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P603
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lobo J., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P828
   Nieves J. C., 2018, HINDAWI SCI PROGRAMM
   Oaksford M, 2001, TRENDS COGN SCI, V5, P349, DOI 10.1016/S1364-6613(00)01699-5
   Pereira L. P., 2017, PROGRAMMING MACHINE
   PEREIRA LM, 1991, LOGIC PROGRAMM, P566
   Reiter R., 1978, Logic and data bases, P55
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   RUMAIN B, 1983, DEV PSYCHOL, V19, P471, DOI 10.1037/0012-1649.19.4.471
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   Stenning K, 2008, HUMAN REASONING AND COGNITIVE SCIENCE, P1
   WASON PC, 1971, Q J EXP PSYCHOL, V23, P63, DOI 10.1080/00335557143000068
   WASON PC, 1968, Q J EXP PSYCHOL, V20, P273, DOI 10.1080/14640746808400161
NR 43
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 157
EP 192
DI 10.1017/S1471068423000376
EA DEC 2023
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:001125752000001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Martín, O
   Verdejo, A
   Martí-Oliet, N
AF Martin, Oscar
   Verdejo, Alberto
   Marti-Oliet, Narciso
TI Compositional Verification in Rewriting Logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE rewriting logic; modularity; verification; assume/guarantee;
   abstraction; simulation; Maude
ID MODEL CHECKING; STRATEGIES
AB In previous work, summarized in this paper, we proposed an operation of parallel composition for rewriting-logic theories, allowing compositional specification of systems and reusability of components. The present paper focuses on compositional verification. We show how the assume/guarantee technique can be transposed to our setting, by giving appropriate definitions of satisfaction based on transition structures and path semantics. We also show that simulation and equational abstraction can be done componentwise. Appropriate concepts of fairness and deadlock for our composition operation are discussed, as they affect satisfaction of temporal formulas. We keep in parallel a distributed and a global view of composed systems. We show that these views are equivalent and interchangeable, which may help our intuition and also has practical uses as, for example, it allows global-style verification of a modularly specified system. Under consideration in Theory and Practice of Logic Programming (TPLP).
C1 [Martin, Oscar; Verdejo, Alberto; Marti-Oliet, Narciso] Univ Complutense Madrid, Fac Informat, Madrid, Spain.
C3 Complutense University of Madrid
RP Martín, O (corresponding author), Univ Complutense Madrid, Fac Informat, Madrid, Spain.
EM omartins@ucm.es; jalberto@ucm.es; narciso@ucm.es
OI Martin, Oscar/0000-0001-8212-5074
FU EIE Funds of the European Union [S2018/TCS-4339]; Comunidad de Madrid
   [S2018/TCS-4339]; Ministerio de Ciencia e Innovacion (Spanish
   Government) [PID2019-108528RB-C22]
FX & nbsp;Work partially supported by project S2018/TCS-4339 (BLOQUES-CM)
   co-funded by EIE Funds of the European Union and Comunidad de Madrid,
   and project PID2019-108528RB-C22 (ProCode-UCM) funded by Ministerio de
   Ciencia e Innovacion (Spanish Government). The authors want to thank
   David de Frutos for his important remark on the correct way to define
   compatibility of paths, and the anonymous referees for improving this
   paper with their hard and very useful work.
CR ABADI M, 1995, ACM T PROGR LANG SYS, V17, P507, DOI 10.1145/203095.201069
   Abd Elkader K, 2018, FORM ASP COMPUT, V30, P571, DOI 10.1007/s00165-017-0436-0
   Andre Etienne, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P283, DOI 10.1007/978-3-642-34059-8_15
   [Anonymous], 1989, CWI Q.
   Bachmair L, 2003, J AUTOM REASONING, V31, P129, DOI 10.1023/B:JARS.0000009518.26415.49
   Basu A., 2008, DAGSTUHL SEMINAR P, V08331
   Bobaru MG, 2008, LECT NOTES COMPUT SC, V5123, P135
   Chaki S, 2004, LECT NOTES COMPUT SC, V2999, P128
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   CLARKE EM, 1989, FOURTH ANNUAL SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P353
   Clarke EM, 1999, MODEL CHECKING, P1
   Clavel M., 1997, P CADE 14 WORKSH STR, P1
   Clavel M., 2022, MAUDE MANUAL VERSION
   Cobleigh J. M., 2006, ISSTA 06 P 2006 INT
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   Eker S, 2007, ELECTRON NOTES THEOR, V174, P3, DOI 10.1016/j.entcs.2006.03.017
   Garavel H, 2015, ACTA INFORM, V52, P337, DOI 10.1007/s00236-015-0226-1
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   INRIA, 2023, CADP CONSTR AN DISTR
   Jonsson B, 1996, THEOR COMPUT SCI, V167, P47, DOI 10.1016/0304-3975(96)00069-2
   Klai K, 2005, LECT NOTES COMPUT SC, V3731, P189
   Kupferman O, 2000, ACM T PROGR LANG SYS, V22, P87, DOI 10.1145/345099.345104
   Kyungmin Bae, 2014, Rewriting and Typed Lambda Calculi. Joint International Conference, RTA-TLCA 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8560, P61, DOI 10.1007/978-3-319-08918-8_5
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Lamport L., 2002, SPECIFYING SYSTEMS
   LESCANNE P, 1989, LECT NOTES COMPUT SC, V351, P28
   Martí-Oliet N, 2005, ELECTRON NOTES THEOR, V117, P417, DOI 10.1016/j.entcs.2004.06.020
   Martín O, 2020, THEOR PRACT LOG PROG, V20, P44, DOI 10.1017/S1471068419000425
   Martín O, 2018, LECT NOTES COMPUT SC, V11152, P59, DOI 10.1007/978-3-319-99840-4_4
   Martni O., 2021, THESIS U COMPLUTENSE
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2008, THEOR COMPUT SCI, V403, P239, DOI 10.1016/j.tcs.2008.04.040
   MISRA J, 1981, IEEE T SOFTWARE ENG, V7, P417, DOI 10.1109/TSE.1981.230844
   Palomino M, 2005, ELECTRON NOTES THEOR, V124, P3, DOI 10.1016/j.entcs.2004.07.012
   Pnueli A., 1985, Proceedings of the NATO Advanced Study Institute on Logics and Models of Concurrent Systems, P123, DOI DOI 10.1007/978-3-642-82453-1_5
   Rubio R, 2021, J LOG ALGEBR METHODS, V123, DOI 10.1016/j.jlamp.2021.100700
   Van Glabbeek R, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3329125
   Verdejo A, 2012, ELECTRON P THEOR COM, P17, DOI 10.4204/EPTCS.82.2
NR 38
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 57
EP 109
DI 10.1017/S1471068423000340
EA AUG 2023
PG 53
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:001062417900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Dovier, A
   Formisano, A
   Gupta, G
   Hermenegildo, MV
   Pontelli, E
   Rocha, R
AF Dovier, Agostino
   Formisano, Andrea
   Gupta, Gopal
   Hermenegildo, Manuel, V
   Pontelli, Enrico
   Rocha, Ricardo
TI Parallel Logic Programming: A Sequel
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE parallelism; high-performance computing; logic programming
ID COMPILE-TIME PARALLELIZATION; SCHEDULING SPECULATIVE WORK; HIGH-LEVEL
   IMPLEMENTATION; WELL-FOUNDED SEMANTICS; ABSTRACT INTERPRETATION;
   OR-PARALLELISM; SHARING ANALYSIS; ALGORITHM SELECTION; PROLOG PROGRAMS;
   BOUNDS ANALYSIS
AB Multi-core and highly connected architectures have become ubiquitous, and this has brought renewed interest in language-based approaches to the exploitation of parallelism. Since its inception, logic programming has been recognized as a programming paradigm with great potential for automated exploitation of parallelism. The comprehensive survey of the first twenty years of research in parallel logic programming, published in 2001, has served since as a fundamental reference to researchers and developers. The contents are quite valid today, but at the same time the field has continued evolving at a fast pace in the years that have followed. Many of these achievements and ongoing research have been driven by the rapid pace of technological innovation, that has led to advances such as very large clusters, the wide diffusion of multi-core processors, the game-changing role of general-purpose graphic processing units, and the ubiquitous adoption of cloud computing. This has been paralleled by significant advances within logic programming, such as tabling, more powerful static analysis and verification, the rapid growth of Answer Set Programming, and in general, more mature implementations and systems. This survey provides a review of the research in parallel logic programming covering the period since 2001, thus providing a natural continuation of the previous survey. In order to keep the survey self-contained, it restricts its attention to parallelization of the major logic programming languages (Prolog, Datalog, Answer Set Programming) and with an emphasis on automated parallelization and preservation of the sequential observable semantics of such languages. The goal of the survey is to serve not only as a reference for researchers and developers of logic programming systems but also as engaging reading for anyone interested in logic and as a useful source for researchers in parallel systems outside logic programming.
C1 [Dovier, Agostino; Formisano, Andrea] Univ Udine, Udine, Italy.
   [Dovier, Agostino; Formisano, Andrea] GNCS INdAM, Udine, Italy.
   [Gupta, Gopal] Univ Texas Dallas, Austin, TX 78712 USA.
   [Hermenegildo, Manuel, V] Univ Politecn Madrid, IMDEA Software Inst, Madrid, Spain.
   [Pontelli, Enrico] New Mexico State Univ, Las Cruces, NM 88003 USA.
   [Rocha, Ricardo] Univ Porto, CRACS INESC TEC, Porto, Portugal.
   [Rocha, Ricardo] Univ Porto, Fac Sci, Porto, Portugal.
C3 University of Udine; University of Texas System; University of Texas
   Dallas; Universidad Politecnica de Madrid; IMDEA Software Institute; New
   Mexico State University; Universidade do Porto; INESC TEC; Universidade
   do Porto
RP Dovier, A (corresponding author), Univ Udine, Udine, Italy.; Dovier, A (corresponding author), GNCS INdAM, Udine, Italy.
EM agostino.dovier@uniud.it; andrea.formisano@uniud.it; gupta@utdallas.edu;
   manual.hermenegildo@imdea.org; epontell@cs.nmsu.edu; ricroc@dcc.fc.up.pt
RI Dovier, Agostino/JAO-3262-2023; Pontelli, Enrico/AAJ-5161-2021;
   Hermenegildo, Manuel/I-4418-2015; Rocha, Ricardo/B-2862-2012
OI Pontelli, Enrico/0000-0002-7753-1737; Hermenegildo,
   Manuel/0000-0002-7583-323X; Gupta, Gopal/0000-0001-9727-0362; Dovier,
   Agostino/0000-0003-2052-8593; Rocha, Ricardo/0000-0003-4502-8835
FU UNIUD PRID Encase; NSF [1914635, 1833630]; Portuguese funding agency,
   FCT -Fundacao para a Ciencia e a Tecnologia [UIDB/50014/2020]; Spanish
   MICINN [PID2019-108528RB-C21]; Madrid BLOQUES-CM program
   [P2018/TCS-4339]; Tezos foundation; GNCS/INDAM grants; Direct For
   Education and Human Resources; Division Of Undergraduate Education
   [1833630] Funding Source: National Science Foundation
FX The authors would like to thank the anonymous reviewers for their
   careful reading and very valuable feedback. We would especially like to
   thank the editor, Mirek Truszczynski, for his very useful comments and
   encouragement. This research was partially supported by UNIUD PRID
   Encase, GNCS/INDAM grants, by NSF grants 1914635 and 1833630, by the
   Portuguese funding agency, FCT -Fundacao para a Ciencia e a Tecnologia,
   within project UIDB/50014/2020, by the Spanish MICINN project
   PID2019-108528RB-C21 ProCode, by the Madrid P2018/TCS-4339 BLOQUES-CM
   program, and by the Tezos foundation.
CR Afrati F. N., 2010, EDBT, P99, DOI [DOI 10.1145/1739041.1739056, 10.1145/1739041.1739056]
   Afrati F.N., 2011, EDBT, P1, DOI DOI 10.1145/1951365.1951367
   Afrati FotoN., 2012, EDBT, P132
   Albert E, 2007, LECT NOTES COMPUT SC, V4421, P157
   Martínez-Angeles CA, 2016, INT J PARALLEL PROG, V44, P663, DOI 10.1007/s10766-015-0364-7
   Martínez-Angeles CA, 2014, LECT NOTES ARTIF INT, V8439, P152, DOI 10.1007/978-3-319-08909-6_10
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   ALI KAM, 1992, INT J PARALLEL PROG, V21, P449, DOI 10.1007/BF01379406
   ALI KAM, 1990, LOGIC PROGRAMM, P757
   Amadini R, 2014, THEOR PRACT LOG PROG, V14, P509, DOI 10.1017/S1471068414000179
   Amdahl G.M., 1967, AFIPS 1967 SPRING JO, P483
   [Anonymous], 2015, LIPIcs
   Apache, 2020, TECH REP
   Applied Logic Systems Inc, 2021, ALS PROLOG TECH REP
   Areias M, 2017, J SYST SOFTWARE, V125, P417, DOI 10.1016/j.jss.2016.06.060
   Areias M, 2015, COMM COM INF SC, V563, P113, DOI 10.1007/978-3-319-27653-3_11
   Areias M, 2012, THEOR PRACT LOG PROG, V12, P427, DOI 10.1017/S1471068412000117
   Balduccini M, 2005, PARALLEL COMPUT, V31, P608, DOI 10.1016/j.parco.2005.03.004
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barklund J., 1990, THESIS, V9
   BEAUMONT T, 1993, LOGIC PROGRAMM, P135
   Blanas Spyros, 2020, CIDR
   Bonatti P.A., 2008, Proceedings of the 23rd national conference on Artificial Intelligence - Volume 1, AAAI'08, V1, P418
   Bone P., 2012, P POPL 2012 WORKSHOP, P11
   Bone P., 2011, TECHNICAL COMMUNICAT, V11, P251
   Bone P., 2012, THESIS
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   Bu YY, 2010, PROC VLDB ENDOW, V3, P285
   Bueno F, 1999, ACM T PROGR LANG SYS, V21, P189, DOI 10.1145/316686.316688
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P117
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P100
   Bueno F., 1994, TECHNICAL REPORT CLI
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   Cabeza D., 1996, P AGP 96 JOINT C DEC, P67
   Cabeza D., 2004, THESIS
   Calegari R, 2018, THEOR PRACT LOG PROG, V18, P846, DOI 10.1017/S1471068418000364
   Calimeri F, 2008, J ALGORITHMS, V63, P34, DOI 10.1016/j.jalgor.2008.02.003
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Carro M, 1999, LOGIC PROGRAMM, P320
   Carro M., 2001, THESIS
   Casas A., 2008, THESIS
   Casas A, 2008, LECT NOTES COMPUT SC, V4915, P138, DOI 10.1007/978-3-540-78769-3_10
   Casas A, 2008, LECT NOTES COMPUT SC, V4902, P230
   Casas A, 2008, LECT NOTES COMPUT SC, V5366, P651, DOI 10.1007/978-3-540-89982-2_53
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   De Guzmán PC, 2011, THEOR PRACT LOG PROG, V11, P555, DOI 10.1017/S1471068411000172
   Chisham B, 2011, BMC BIOINFORMATICS, V12, DOI 10.1186/1471-2105-12-98
   Ciancarini P., 1990, LANGUAGES COMPILERS, P170
   Citrigno Simona., 1997, P 12 WORKSHOP LOGIC, P128
   CLARK K, 1986, ACM T PROGR LANG SYS, V8, P1, DOI 10.1145/5001.5390
   CLOCKSIN WF, 1988, NEW GENERAT COMPUT, V5, P361, DOI 10.1007/BF03037415
   Codish M, 2000, J LOGIC PROGRAM, V42, P111, DOI 10.1016/S0743-1066(99)00007-2
   CODISH M, 1986, LECT NOTES COMPUT SC, V225, P283
   Condie T, 2018, THEOR PRACT LOG PROG, V18, P806, DOI 10.1017/S1471068418000418
   Conway T, 2002, PARALLEL MERCURY
   Costa V.S., 1991, PPOPP, P83
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Costa VS, 2010, THEOR PRACT LOG PROG, V10, P417, DOI 10.1017/S1471068410000190
   COSTA VS, 1991, LOGIC PROGRAMM, P825
   COSTA VS, 1991, LOGIC PROGRAMM, P443
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dal Palù A, 2015, J EXP THEOR ARTIF IN, V27, P293, DOI 10.1080/0952813X.2014.954274
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Damasio C. V., 2000, P 2 C TAB PARS DED, P65
   Das A, 2019, THEOR PRACT LOG PROG, V19, P1056, DOI 10.1017/S1471068419000358
   De Angelis E, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P91, DOI 10.1145/2790449.2790529
   De Angelis E., 2022, THEOR PRACT LOG PROG
   De Bortoli M., 2019, P 34 ITALIAN C COMPU, V2396, P316
   de Guzman Pablo Chico, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P138, DOI 10.1007/978-3-642-27694-1_11
   de Guzmán PC, 2008, LECT NOTES COMPUT SC, V4902, P197
   De la Banda MG, 2000, ACM T PROGR LANG SYS, V22, P296, DOI 10.1145/349214.349224
   Debray S, 1997, LOGIC PROGRAMM, P291
   Debray S. K., 1994, Static Analysis. First International Static Analysis Symposium, SAS '94 Proceedings, P255
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DeGroot, 1984, P INT C 5 GEN COMP S, P471
   DELABANDA M, 1995, 1995 INT LOG PROGR S, P417
   DeLaBanda MG, 1996, ACM T PROGR LANG SYS, V18, P564, DOI 10.1145/232706.232734
   DELABANDA MG, 1993, MIT PS LOG, P437
   Desouter B, 2015, THEOR PRACT LOG PROG, V15, P419, DOI 10.1017/S1471068415000137
   Diamos G, 2013, ACM SIGPLAN NOTICES, V48, P301, DOI 10.1145/2517327.2442555
   Dovier Agostino, 2016, Practical Aspects of Declarative Languages. 18th International Symposium, PADL 2016. Proceedings: LNCS 9585, P30, DOI 10.1007/978-3-319-28228-2_3
   Dovier A., 2019, LECT NOTES COMPUTER, V12057, P3
   Dovier A., 2018, HDB PARALLEL CONSTRA, P237, DOI DOI 10.1007/978-3-319-63516-3_7
   Dovier A., 2015, TECHNICAL COMMUNICAT, V1433
   DUTRA ID, 1994, MIT PS LOG, P289
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Ekanayake J., 2010, Proc. the 19th ACM International Symposium on High Performance Distributed Computing (HDPC'10), P810, DOI DOI 10.1145/1851476.1851593
   El-Khatib O., 2000, WORKSHOP PARALLELISM
   Ellguth E, 2009, LECT NOTES COMPUT SC, V5753, P490, DOI 10.1007/978-3-642-04238-6_47
   Fan ZW, 2019, PROC VLDB ENDOW, V12, P695, DOI 10.14778/3311880.3311886
   Fecht C., 1996, Programming Languages: Implementations, Logics, and Programs. 8th International Symposium, PLILP '96 Proceedings, P469
   Finkel R. A., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P72
   Flanagan C., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P209, DOI 10.1145/199448.199484
   Fonseca NA, 2006, LECT NOTES ARTIF INT, V4160, P481, DOI 10.1007/11853886_42
   Fonseca NA, 2009, MACH LEARN, V74, P257, DOI 10.1007/s10994-008-5094-2
   Formisano A., 2014, P 15 IT C THEOR COMP, V1231, P133
   Formisano A, 2021, IEEE T PARALL DISTR, V32, P2970, DOI 10.1109/TPDS.2021.3080925
   Formisano A, 2017, PROCEEDINGS OF IA3 2017: SEVENTH WORKSHOP ON IRREGULAR APPLICATIONS: ARCHITECTURES AND ALGORITHMS, DOI 10.1145/3149704.3149771
   Freire J., 1996, Programming Languages: Implementations, Logics, and Programs. 8th International Symposium, PLILP '96 Proceedings, P243
   Freire J, 1995, LECT NOTES COMPUT SC, V982, P115, DOI 10.1007/BFb0026817
   FUTO I, 1989, MICROPROCESS MICROSY, V13, P103, DOI 10.1016/0141-9331(89)90136-1
   FUTO I, 1993, LOGIC PROGRAMM, P3
   Gallagher J., 2020, VPT, P50, DOI [10.4204/EPTCS.320.4, DOI 10.4204/EPTCS.320.4]
   GANGULY S, 1992, J LOGIC PROGRAM, V14, P101, DOI 10.1016/0743-1066(92)90048-8
   Garcia de la Banda M., 1994, THESIS U POLITECNICA
   Garcia-Contreras Isabel, 2020, Logic-Based Program Synthesis and Transformation. 29th International Symposium, LOPSTR 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12042), P36, DOI 10.1007/978-3-030-45260-5_3
   Garcia-Contreras I., 2018, OPENACCESS SERIES IN
   Garcia-Contreras I, 2019, LECT NOTES COMPUT SC, V11408, P184, DOI 10.1007/978-3-030-13838-7_11
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gent IP, 2018, THEOR PRACT LOG PROG, V18, P725, DOI 10.1017/S1471068418000340
   Goldberg E, 2007, DISCRETE APPL MATH, V155, P1549, DOI 10.1016/j.dam.2006.10.007
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Gómez-Zamalloa M, 2009, INFORM SOFTWARE TECH, V51, P1409, DOI 10.1016/j.infsof.2009.04.010
   Gras DC, 2009, THEOR COMPUT SCI, V410, P4704, DOI 10.1016/j.tcs.2009.07.044
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Gupta G, 1999, LOGIC PROGRAMM, P290
   Gupta G., 1992, TECHNICAL REPORT
   GUPTA G., 1997, P 2 INT S PAR SYMB C, P68
   Gupta G., 1990, 1990 N AM C LOGIC PR, P604
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   GUSTAFSON JL, 1988, COMMUN ACM, V31, P532, DOI 10.1145/42411.42415
   Hai-Feng Guo, 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P181
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   HARIDI S, 1990, LOGIC PROGRAMM, P31
   Haridi S., 1988, P INT C 5 GEN COMP S, P745
   Hausman B., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P69
   Henriksen KS, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184
   Hermenegildo M, 2000, PARALLEL COMPUT, V26, P1685, DOI 10.1016/S0167-8191(00)00051-X
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo M. V., 1986, THESIS
   Hermenegildo M. V., 1995, P ILPS 95 WORKSH VIS
   Hermenegildo M. V., 1995, INT C LOG PROGR 1995, P631
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P25
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P40
   HERMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1, DOI 10.1016/0743-1066(93)00007-F
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hill PM, 2002, THEOR PRACT LOG PROG, V2, P155, DOI 10.1017/S1471068401001338
   Hoos H, 2015, THEOR PRACT LOG PROG, V15, P117, DOI 10.1017/S1471068414000015
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   HU R, 1997, THESIS STATE U NEW
   Huang YF, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON P2P, PARALLEL, GRID, CLOUD AND INTERNET COMPUTING (3PGCIC), P236, DOI 10.1109/3PGCIC.2015.34
   Igne F., 2018, TECHNICAL COMMUNICAT
   JACOBS D, 1989, LOGIC PROGRAMM, P154
   JANAKIRAM VK, 1988, IEEE T COMPUT, V37, P1665, DOI 10.1109/12.9745
   Jordan H, 2019, PROCEEDINGS OF THE 24TH SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '19), P327, DOI 10.1145/3293883.3295719
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   Kahsai T, 2016, LECT NOTES COMPUT SC, V9779, P352, DOI 10.1007/978-3-319-41528-4_19
   Karau Holden, 2015, Learning Spark
   Kelly AD, 1998, SOFTWARE PRACT EXPER, V28, P199, DOI 10.1002/(SICI)1097-024X(199802)28:2<199::AID-SPE150>3.0.CO;2-4
   Khronos Group Inc, 2015, OPENCL OP STAND PAR
   Klemen Maximiliano, 2020, Logic-Based Program Synthesis and Transformation. 29th International Symposium, LOPSTR 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12042), P19, DOI 10.1007/978-3-030-45260-5_2
   Klemen M, 2018, PPDP'18: PROCEEDINGS OF THE 20TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, DOI 10.1145/3236950.3236970
   Körner P, 2022, THEOR PRACT LOG PROG, V22, P776, DOI 10.1017/S1471068422000102
   Konczak K, 2006, THEOR PRACT LOG PROG, V6, P61, DOI 10.1017/S1471068405002528
   Kowalski Robert, 1979, Logic for Problem Solving
   Lagoon, 2002, P PPDP, P99
   Le H., 2005, EURO
   Le H., 2007, P 2007 SPRING SIMULA, P367
   Le T., 2012, LIPICS, P359
   LECHARLIER B, 1994, ACM T PROGR LANG SYS, V16, P35, DOI 10.1145/174625.174627
   Leutgeb L, 2018, LECT NOTES ARTIF INT, V10997, P132, DOI 10.1007/978-3-030-00801-7_9
   Li X, 2006, LECT NOTES COMPUT SC, V3945, P177
   Lin, 1989, P N AM C LOGIC PROGR, P677
   Lindauer M, 2015, J ARTIF INTELL RES, V53, P745, DOI 10.1613/jair.4726
   Liqat U., 2016, Foundational and Practical Aspects of Resource Analysis. 4th International Workshop, FOPARA 2015. Revised Selected Papers: LNCS 9964, P81, DOI 10.1007/978-3-319-46559-3_5
   Liqat U, 2014, LECT NOTES COMPUT SC, V8901, P72, DOI 10.1007/978-3-319-14125-1_5
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Lloyd J. W., 1987, Foundations of logic programming
   Lopes R, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED COMPUTING AND NETWORKS, P483
   Lopes R, 2003, LECT NOTES ARTIF INT, V2902, P131
   Lopes R, 2012, THEOR PRACT LOG PROG, V12, P319, DOI 10.1017/S1471068411000068
   Lopez P, 1996, J SYMB COMPUT, V21, P715, DOI 10.1006/jsco.1996.0038
   Lopez-Garcia P, 2018, THEOR PRACT LOG PROG, V18, P167, DOI 10.1017/S1471068418000042
   Lopez-Garcia P., 2000, THESIS U POLITECNICA
   Lopez-Garcia P, 2010, NEW GENERAT COMPUT, V28, P177, DOI 10.1007/s00354-008-0085-1
   Lumsdaine A, 2007, PARALLEL PROCESS LET, V17, P5, DOI 10.1142/S0129626407002843
   LUSK E, 1990, NEW GENERAT COMPUT, V7, P243, DOI 10.1007/BF03037208
   M?ndez-Lojo M., 2008, COMPUTER SCI, V5335, P94
   Maiterth M., 2012, PARALLEL DATALOG PRE
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Malitsky Yuri, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P512, DOI 10.1007/978-3-642-33558-7_38
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   Marques R, 2010, LECT NOTES COMPUT SC, V5937, P264, DOI 10.1007/978-3-642-11503-5_22
   Marques R, 2008, LECT NOTES COMPUT SC, V5366, P206, DOI 10.1007/978-3-540-89982-2_24
   Marriott K., 1994, Conference Record of POPL '94: 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P240, DOI 10.1145/174675.177883
   Marron M, 2008, LECT NOTES COMPUT SC, V4959, P245
   Marron M, 2007, LECT NOTES COMPUT SC, V4382, P345, DOI 10.1007/978-3-540-72521-3_25
   Marron M, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P89
   Marron M, 2008, LECT NOTES COMPUT SC, V5335, P94, DOI 10.1007/978-3-540-89740-8_7
   Marron Mark., 2008, PASTE, P43
   MATTERN F, 1989, INFORM PROCESS LETT, V30, P195, DOI 10.1016/0020-0190(89)90212-3
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4905, P172, DOI 10.1007/978-3-540-78163-9_17
   Mera E., 2008, PPDP 08, P174, DOI [10.1145/1389449.1389471, DOI 10.1145/1389449.1389471]
   Moustafa WE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P56, DOI 10.1109/BigData.2016.7840589
   MUTHUKUMAR K, 1989, LOGIC PROGRAMM, P166
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Muthukumar K., 1990, Technical Report ACT-DC-153-90
   Nappa P, 2019, INT CONFER PARA, P82, DOI 10.1109/PACT.2019.00015
   Navas J, 2006, LECT NOTES COMPUT SC, V3819, P183
   Navas J., 2008, 6 NASA LANGLEY FORMA, P29
   Navas J, 2007, LECT NOTES COMPUT SC, V4670, P348, DOI 10.1007/978-3-540-74610-2_24
   Navas J, 2009, ELECTRON NOTES THEOR, V253, P65, DOI 10.1016/j.entcs.2009.11.015
   Neng-Fa Zhou, 2016, Practical Aspects of Declarative Languages. 18th International Symposium, PADL 2016. Proceedings: LNCS 9585, P48, DOI 10.1007/978-3-319-28228-2_4
   Nguyen Hien D., 2018, Multi-disciplinary Trends in Artificial Intelligence. 12th International Conference, MIWAI 2018. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11248), P32, DOI 10.1007/978-3-030-03014-8_3
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   NVIDIA Corporation, 2021, NVIDIA CUDA ZONE
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Pereira L. M., 1984, P INT C FGCS, P283
   PEREIRA LM, 1986, LECT NOTES COMPUT SC, V225, P69
   Perri S, 2013, THEOR PRACT LOG PROG, V13, P253, DOI 10.1017/S1471068411000652
   Phan TH, 2009, CONCURR COMP-PRACT E, V21, P1928, DOI 10.1002/cpe.1420
   POLLARD GH, 1981, THESIS IMPERIAL COLL
   Pontelli E, 1996, COMPUT LANG, V22, P115, DOI 10.1016/S0096-0551(96)00010-0
   Pontelli E., 1995, Proceedings 9th International Parallel Processing Symposium (Cat. No.95TH8052), P564, DOI 10.1109/IPPS.1995.395891
   Pontelli E, 2002, COMPUT LANG SYST STR, V28, P181, DOI 10.1016/S0096-0551(02)00004-8
   Pontelli E, 1997, ANN MATH ARTIF INTEL, V21, P359, DOI 10.1023/A:1018929805694
   Pontelli E, 2001, IEEE T PARALL DISTR, V12, P1169, DOI 10.1109/71.969127
   Pontelli E, 1997, LOGIC PROGRAMM, P108
   Pontelli E., 2001, INT PAR DISTR PROC S, P20
   Pontelli E., 2010, COMPUTER LANGUAGES S, V2, P158
   Pontelli E., 1999, TECH REP
   Pontelli E., 1995, P EUROPAR, P43
   Pontelli E, 2007, THEOR PRACT LOG PROG, V7, P633, DOI 10.1017/S1471068406002985
   Pontelli E, 2006, J PARALLEL DISTR COM, V66, P1267, DOI 10.1016/j.jpdc.2006.05.002
   Puebla G, 1999, J LOGIC PROGRAM, V41, P279, DOI 10.1016/S0743-1066(99)00031-X
   Ranjan D, 1999, NEW GENERAT COMPUT, V17, P285, DOI 10.1007/BF03037223
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Rocha R, 2003, LECT NOTES ARTIF INT, V2902, P136
   Rocha R., 1999, Progress in Artificial Intelligence. 9th Portuguese Conference on Artificial Intelligence, EPIA'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1695), P178
   Rocha R, 1999, LECT NOTES COMPUT SC, V1551, P137
   Rocha R., 2000, APPIA GULP PRODE JOI
   Rocha R., 2001, COMPUTER SCI, V2237, P43
   Rui R., 2017, P 29 INT C SCI STAT, V17, P12
   Saeed I, 2015, 2ND WORKSHOP ON PARALLEL PROGRAMMING FOR ANALYTICS APPLICATIONS (PPAA 2015), P31, DOI 10.1145/2726935.2726943
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Santos J., 2013, OPENACCESS SERIES IN, V29, P9
   Santos J, 2016, THEOR PRACT LOG PROG, V16, P899, DOI 10.1017/S1471068416000296
   Schneidenbach L, 2009, LECT NOTES COMPUT SC, V5759, P64, DOI 10.1007/978-3-642-03770-2_13
   Secci S, 2005, LECT NOTES COMPUT SC, V3672, P320
   Seo J, 2013, PROC VLDB ENDOW, V6, P1906, DOI 10.14778/2556549.2556572
   Serrano A, 2014, THEOR PRACT LOG PROG, V14, P739, DOI 10.1017/S147106841400057X
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   SHAPIRO E, 1987, CONCURRENT PROLOG CO
   Shehab E, 2017, COMPUT ELECTR ENG, V57, P69, DOI 10.1016/j.compeleceng.2016.12.014
   Shen K, 1996, J LOGIC PROGRAM, V29, P245, DOI 10.1016/S0743-1066(96)00079-9
   Shen K., 1996, Euro-Par '96 Parallel Processing. Second International Euro-Par Conference. Proceedings, P635, DOI 10.1007/BFb0024759
   Shkapsky A., 2016, THESIS U CALIFORNIA
   Shkapsky A, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1135, DOI 10.1145/2882903.2915229
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Singhal A., 1989, P N AM C LOG PROGR, P1135
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   Son T. C., 2007, CEUR WORKSHOP PROC, V281
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   Stulova N., 2018, THESIS ESCUELA TECNI
   Stulova N, 2018, SCI COMPUT PROGRAM, V155, P3, DOI 10.1016/j.scico.2017.12.006
   Stulova N, 2015, THEOR PRACT LOG PROG, V15, P726, DOI 10.1017/S1471068415000344
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tachmazidis Ilias, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P188, DOI 10.1007/978-3-642-39617-5_18
   Tachmazidis I, 2012, FRONT ARTIF INTEL AP, V242, P738, DOI 10.3233/978-1-61499-098-7-738
   Tachmazidis I, 2014, THEOR PRACT LOG PROG, V14, P445, DOI 10.1017/S1471068414000131
   Tarzariol A., 2019, CEUR WORKSHOP PROC, V2396, P327
   ter Horst HJ, 2005, J WEB SEMANT, V3, P79, DOI 10.1016/j.websem.2005.06.001
   TICK E, 1995, J LOGIC PROGRAM, V23, P89, DOI 10.1016/0743-1066(94)00038-8
   Trias E, 2008, LECT NOTES COMPUT SC, V5366, P301, DOI 10.1007/978-3-540-89982-2_30
   de la Vega TT, 2010, ICFC 2010/ ICNC 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON FUZZY COMPUTATION AND INTERNATIONAL CONFERENCE ON NEURAL COMPUTATION, P43
   Truszczynski M., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P121
   Ueda K., 1986, THESIS U TOKYO
   Ullman, 2010, DATALOG 20 RESURGENC
   Urbani J, 2012, J WEB SEMANT, V10, P59, DOI 10.1016/j.websem.2011.05.004
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANROY P, 1994, J LOGIC PROGRAM, V20, P385, DOI 10.1016/0743-1066(94)90031-0
   Vidal G, 2012, THEOR PRACT LOG PROG, V12, P583, DOI 10.1017/S1471068412000191
   Vieira R., 2012, Proceedings of the 12th Colloquium on Implementation of Constraint and LOgic Programming Systems, CICLOPS'2012, P71
   Villaverde K, 2004, PARALLEL AND DISTRIBUTED COMPUTING SYSTEMS, P98
   Villaverde K, 2003, LECT NOTES COMPUT SC, V2790, P694
   Villaverde K, 2001, PROC INT CONF PARAL, P287
   Villaverde K., 2001, P INT C LOGIC PROGRA, P27
   Wang HZ, 2018, PARALLEL COMPUT, V72, P1, DOI 10.1016/j.parco.2017.12.002
   Wang JJ, 2015, PROC VLDB ENDOW, V8, P1542
   Warren D. H. D., 1990, PARALLEL LOGIC PROGR
   Warren D. S., 1984, 1984 International Symposium on Logic Programming (cat. no. 84CH2007-3), P198
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   White T, 2015, Hadoop: the definitive guide: storage and analysis at internet scale, V4th
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wolfson O., 1988, SIGMOD Record, V17, P329, DOI 10.1145/971701.50242
   Wu Haicheng, 2014, 12 ANN IEEE ACM INT, P44, DOI DOI 10.1145/2544137.2544166
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Yang M., 2015, CEUR WORKSHOP PROC, V1433
   Zaffanella E, 1999, LECT NOTES COMPUT SC, V1702, P414
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
   Zeuch S., 2018, THESIS HUMBOLDT U BE
   Zhang K., 1993, Future Generation Computer Systems, V9, P259, DOI 10.1016/0167-739X(93)90016-I
   ZHANG WN, 1995, IEEE T KNOWL DATA EN, V7, P163, DOI 10.1109/69.368511
   Zhao D, 2020, ACM T PROGR LANG SYS, V42, DOI 10.1145/3379446
   Zhou N. F., 2015, CONSTRAINT SOLVING P
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   Zinn D, 2016, 9TH WORKSHOP ON GENERAL PURPOSE PROCESSING USING GPUS (GPGPU 9), P13, DOI 10.1145/2884045.2884054
NR 308
TC 2
Z9 2
U1 2
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2022
VL 22
IS 6
BP 905
EP 973
AR PII S1471068422000059
DI 10.1017/S1471068422000059
EA MAR 2022
PG 69
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M4IE
UT WOS:000773738400001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Faber, W
   Gebser, M
AF Alviano, Mario
   Faber, Wolfgang
   Gebser, Martin
TI Aggregate Semantics for Propositional Answer Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; aggregate expressions; semantics; complexity and
   expressiveness
ID KNOWLEDGE REPRESENTATION; RELATIONAL CALCULUS; DATALOG PROGRAMS; LOGIC
   PROGRAMS; CONSTRAINTS; COMPLEXITY; MODEL; IMPLEMENTATION; ALGEBRA; POWER
AB Answer set programming (ASP) emerged in the late 1990s as a paradigm for knowledge representation and reasoning. The attractiveness of ASP builds on an expressive high-level modeling language along with the availability of powerful off-the-shelf solving systems. While the utility of incorporating aggregate expressions in the modeling language has been realized almost simultaneously with the inception of the first ASP solving systems, a general semantics of aggregates and its efficient implementation have been long-standing challenges. Aggregates have been proposed and widely used in database systems, and also in the deductive database language Datalog, which is one of the main precursors of ASP. The use of aggregates was, however, still restricted in Datalog (by either disallowing recursion or only allowing monotone aggregates), while several ways to integrate unrestricted aggregates evolved in the context of ASP. In this survey, we pick up at this point of development by presenting and comparing the main aggregate semantics that have been proposed for propositional ASP programs. We highlight crucial properties such as computational complexity and expressive power, and outline the capabilities and limitations of different approaches by illustrative examples.
C1 [Alviano, Mario] Univ Calabria, Arcavacata Di Rende, Italy.
   [Faber, Wolfgang; Gebser, Martin] Univ Klagenfurt, Klagenfurt, Austria.
   [Gebser, Martin] Graz Univ Technol, Graz, Austria.
C3 University of Calabria; University of Klagenfurt; Graz University of
   Technology
RP Alviano, M (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM alviano@mat.unical.it; wolfgang.faber@aau.at; martin.gebser@aau.at
RI Faber, Wolfgang/H-2316-2012; Gebser, Martin/B-7169-2018; Alviano,
   Mario/H-1355-2012
OI Gebser, Martin/0000-0002-8010-4752
FU project PRIN "Declarative Reasoning over Streams" [CUP:
   H24I17000080001]; project PON-MISE MAP4ID "Multipurpose Analytics
   Platform 4 Industrial Data" [CUP: B21B19000650008]; KWF [28472]; cms
   electronics GmbH; FunderMax GmbH; Hirsch Armbander GmbH; incubed IT
   GmbH; Infineon Technologies Austria AG; Isovolta AG; Kostwein Holding
   GmbH; Privatstiftung Karntner Sparkasse; lab LAIA (part of SILA);
   GNCS-INdAM
FX The work of Mario Alviano was partially supported by projects PRIN
   "Declarative Reasoning over Streams" (CUP: H24I17000080001), PON-MISE
   MAP4ID "Multipurpose Analytics Platform 4 Industrial Data" (CUP:
   B21B19000650008), lab LAIA (part of SILA), and GNCS-INdAM. Martin Gebser
   was partially supported by KWF project 28472, cms electronics GmbH,
   FunderMax GmbH, Hirsch Armb<spacing diaeresis>ander GmbH, incubed IT
   GmbH, Infineon Technologies Austria AG, Isovolta AG, Kostwein Holding
   GmbH, and Privatstiftung K <spacing diaeresis>arntner Sparkasse. We are
   grateful to the reviewers for valuable and constructive comments helping
   to improve this paper.
CR Alviano M, 2019, LECT NOTES ARTIF INT, V11481, P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano M, 2019, LECT NOTES ARTIF INT, V11468, P462, DOI 10.1007/978-3-030-19570-0_30
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P301, DOI 10.1017/S1471068418000133
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P574, DOI 10.1017/S147106841500023X
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Apt K., 1987, F DEDUCTIVE DATABASE, P89
   Bailleux O, 2009, LECT NOTES COMPUT SC, V5584, P181, DOI 10.1007/978-3-642-02777-2_19
   Bartholomew M., 2011, AAAI 2011 SPRING S L, P16
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Berman P, 2002, J COMPUT SYST SCI, V65, P332, DOI 10.1006/jcss.2002.1852
   Bomanson J, 2020, ACM T COMPUT LOG, V21, DOI 10.1145/3412854
   Bomanson J, 2019, AAAI CONF ARTIF INTE, P2694
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P205, DOI 10.1017/S1471068418000546
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Codd, 1972, RES REPORT
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cuteri B, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1688
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P212
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2018, J ARTIF INTELL RES, V62, P665, DOI 10.1613/jair.1.11221
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   GANGULY S, 1995, J COMPUT SYST SCI, V51, P244, DOI 10.1006/jcss.1995.1064
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gebser M., 2015, P 3 WORKSH GROUND TR
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2014, FRONT ARTIF INTEL AP, V263, P351, DOI 10.3233/978-1-61499-419-0-351
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   Harrison A, 2019, THEOR PRACT LOG PROG, V19, P1006, DOI 10.1017/S1471068419000322
   Holldobler Steffen, 2012, KI 2012: Advances in Artificial Intelligence. Proceedings of the 35th Annual German Conference on AI, P107, DOI 10.1007/978-3-642-33347-7_10
   Janhunen Tomi, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P111, DOI 10.1007/978-3-642-20832-4_8
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   KLUG A, 1982, J ACM, V29, P699, DOI 10.1145/322326.322332
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P182, DOI 10.1007/978-3-642-04238-6_17
   Lierler Y, 2017, THEOR PRACT LOG PROG, V17, P559, DOI 10.1017/S1471068417000114
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Liu GH, 2013, THEOR PRACT LOG PROG, V13, P1, DOI [10.1017/S147106841100038x, 10.1017/S147106841100038X]
   Liu LG, 2006, J ARTIF INTELL RES, V27, P299, DOI 10.1613/jair.2009
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Lloyd J. W., 1987, Foundations of logic programming
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Mazuran M, 2013, VLDB J, V22, P471, DOI 10.1007/s00778-012-0299-1
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   OZSOYOGLU G, 1987, ACM T DATABASE SYST, V12, P566, DOI 10.1145/32204.32219
   Pelov N., 2003, ADV THEORY IMPLEMENT, P29
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Reiter R., 1977, P WORKSH LOG DAT, P119
   ROSS KA, 1994, J ASSOC COMPUT MACH, V41, P1216, DOI 10.1145/195613.195646
   Roussel O, 2021, FRONT ARTIF INTEL AP, P1087, DOI [10.3233/FAIA201012, 10.3233/978-1-58603-929-5-695]
   SCHLIPF JS, 1995, J COMPUT SYST SCI, V51, P64, DOI 10.1006/jcss.1995.1053
   Shen YD, 2014, ARTIF INTELL, V213, P1, DOI 10.1016/j.artint.2014.05.001
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son T., 2006, ABSCS0605038 CORR
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   SUDARSHAN S, 1991, PROC INT CONF VERY L, P501
   Syrjanen T, 2001, LPARSE 1 0 USERS MAN
   Truszczynski M, 2010, ARTIF INTELL, V174, P1285, DOI 10.1016/j.artint.2010.08.004
   Van Gelder A., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P127, DOI 10.1145/137097.137854
   Vanbesien L., 2021, ABS210414789 CORR
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Weinzierl ANTONIUS, 2020, THEOR PRACT LOG PROG, V20, P609, DOI 10.1017/S1471068420000332
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
NR 83
TC 2
Z9 2
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 157
EP 194
AR PII S1471068422000047
DI 10.1017/S1471068422000047
EA FEB 2022
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000759960600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abels, D
   Jordi, J
   Ostrowski, M
   Schaub, T
   Toletti, A
   Wanko, P
AF Abels, Dirk
   Jordi, Julian
   Ostrowski, Max
   Schaub, Torsten
   Toletti, Ambra
   Wanko, Philipp
TI Train Scheduling with Hybrid Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraints; knowledge representation and nonmonotonic reasoning; logic
   programming methodology and application
AB We present a solution to real-world train scheduling problems, involving routing, scheduling, and optimization, based on Answer Set Programming (ASP). To this end, we pursue a hybrid approach that extends ASP with difference constraints to account for a fine-grained timing. More precisely, we exemplarily show how the hybrid ASP system clingo[DL] can be used to tackle demanding planning and scheduling problems. In particular, we investigate how to boost performance by combining distinct ASP solving techniques, such as approximations and heuristics, with preprocessing and encoding techniques for tackling large-scale, real-world train-scheduling instances.
C1 [Abels, Dirk; Jordi, Julian; Toletti, Ambra] SBB, Bern, Switzerland.
   [Ostrowski, Max; Schaub, Torsten; Wanko, Philipp] Potassco Solut, Potsdam, Germany.
   [Schaub, Torsten; Wanko, Philipp] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] Simon Fraser Univ, Burnaby, BC, Canada.
   [Schaub, Torsten] Griffith Univ, Nathan, Qld, Australia.
C3 University of Potsdam; Simon Fraser University; Griffith University
RP Wanko, P (corresponding author), Potassco Solut, Potsdam, Germany.; Wanko, P (corresponding author), Univ Potsdam, Potsdam, Germany.
EM wanko@cs.uni-potsdam.de
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X; Wanko, Philipp/0000-0003-4986-4881;
   Toletti, Ambra/0000-0002-1015-2820
FU DFG [SCHA 550/9, SCHA 55011]
FX This is a substantially extended and revised version of Abels et al.
   (2019). This work was partially funded by DFG grants SCHA 550/9 and 11.
CR Abels D, 2019, LECT NOTES ARTIF INT, V11481, P3, DOI 10.1007/978-3-030-20528-7_1
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Baptiste P., 2012, Constraint-based Scheduling: Applying Constraint Programming to Scheduling Problems, V39
   Bofill M, 2012, CONSTRAINTS, V17, P273, DOI 10.1007/s10601-012-9123-1
   Caprara A, 2002, OPER RES, V50, P851, DOI 10.1287/opre.50.5.851.362
   Gebser M., 2016, OPENACCESS SERIES IN, V52
   Gebser M., 2013, P 27 AAAI C ART INT, P350
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Janhunen T., 2011, P 1 WORKSH TRANSF TH P 1 WORKSH GROUND TR, P1
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Oliveira E., 2000, 21 LU SCS RR 21 LU SCS RR
   Rodríguez J, 2007, TRANSPORT RES B-METH, V41, P231, DOI 10.1016/j.trb.2006.02.006
   TAILLARD E, 1993, EUR J OPER RES, V64, P278, DOI 10.1016/0377-2217(93)90182-M
   Tornquist J., 2006, OPENACCESS SERIES IN, V2
NR 18
TC 11
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2021
VL 21
IS 3
BP 317
EP 347
AR PII S1471068420000046
DI 10.1017/S1471068420000046
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CJ
UT WOS:000672039200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bellodi, E
   Alberti, M
   Riguzzi, F
   Zese, R
AF Bellodi, Elena
   Alberti, Marco
   Riguzzi, Fabrizio
   Zese, Riccardo
TI MAP Inference for Probabilistic Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
ID ANSWER SUBSUMPTION
AB In Probabilistic Logic Programming (PLP) the most commonly studied inference task is to compute the marginal probability of a query given a program. In this paper, we consider two other important tasks in the PLP setting: the Maximum-A-Posteriori (MAP) inference task, which determines the most likely values for a subset of the random variables given evidence on other variables, and the Most Probable Explanation (MPE) task, the instance of MAP where the query variables are the complement of the evidence variables. We present a novel algorithm, included in the PITA reasoner, which tackles these tasks by representing each problem as a Binary Decision Diagram and applying a dynamic programming procedure on it. We compare our algorithm with the version of ProbLog that admits annotated disjunctions and can perform MAP and MPE inference. Experiments on several synthetic datasets show that PITA outperforms ProbLog in many cases.
C1 [Bellodi, Elena; Zese, Riccardo] Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
   [Alberti, Marco; Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, Via Saragat 1, I-44122 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Bellodi, E (corresponding author), Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
EM elena.bellodi@unife.it
RI BELLODI, Elena/HNP-1127-2023; Alberti, Marco/H-8797-2017; Fabrizio,
   Riguzzi/C-7679-2012; Zese, Riccardo/Q-8581-2017
OI BELLODI, Elena/0000-0002-3717-3779; Alberti, Marco/0000-0003-4712-3721;
   Fabrizio, Riguzzi/0000-0003-1654-9703; Zese,
   Riccardo/0000-0001-8352-6304
FU National Group of Computing Science (GNCS-INDAM)
FX This work was partly supported by the "National Group of Computing
   Science (GNCS-INDAM)".
CR Alberti M, 2017, INTELL ARTIF, V11, P47, DOI 10.3233/IA-170106
   Alberti M, 2016, LECT NOTES COMPUT SC, V10037, P351, DOI 10.1007/978-3-319-49130-1_26
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Raedt L., 2008, NIPS 2008 WORKSH PRO
   De Raedt L., 2008, LNCS, V4911
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Miner A.S., 2017, P 26 INT WORKSH LOG, P1
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Riguzzi F., 2018, FDN PROBABILISTIC LO
   Riguzzi F, 2016, INT J APPROX REASON, V77, P1, DOI 10.1016/j.ijar.2016.05.005
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Sato T., 1995, P INT C LOG PROGR, P715
   Shterionov D, 2015, LECT NOTES ARTIF INT, V9046, P139, DOI 10.1007/978-3-319-23708-4_10
   Somenzi F., 2001, International Journal on Software Tools for Technology Transfer, V3, P171, DOI 10.1007/s100090100042
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Van den Broeck G, 2010, AAAI CONF ARTIF INTE, P1217
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
NR 24
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 641
EP 655
DI 10.1017/S1471068420000174
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calegari, R
   Denti, E
   Mariani, S
   Omicini, A
AF Calegari, Roberta
   Denti, Enrico
   Mariani, Stefano
   Omicini, Andrea
TI Logic programming as a service
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; distributed systems; service-oriented architecture;
   pervasive systems; intelligent systems; LPaaS; situatedness
ID PERVASIVE COMPUTING ENVIRONMENTS; CONTEXT; MIDDLEWARE; SEMANTICS;
   LANGUAGE; INTERNET; PROLOG; WEB
AB New generations of distributed systems are opening novel perspectives for logic programming (LP): On the one hand, service-oriented architectures represent nowadays the standard approach for distributed systems engineering; on the other hand, pervasive systems mandate for situated intelligence. In this paper, we introduce the notion of Logic Programming as a Service (LPaaS) as a means to address the needs of pervasive intelligent systems through logic engines exploited as a distributed service. First, we define the abstract architectural model by re-interpreting classical LP notions in the new context; then we elaborate on the nature of LP interpreted as a service by describing the basic LPaaS interface. Finally, we show how LPaaS works in practice by discussing its implementation in terms of distributed tuProlog engines, accounting for basic issues such as interoperability and configurability.
C1 [Calegari, Roberta; Denti, Enrico] Alma Mater Studiorum Univ Bologna, Bologna, Italy.
   [Mariani, Stefano] Univ Modena & Reggio Emilia, Reggio Emilia, Italy.
   [Omicini, Andrea] Alma Mater Studiorum Univ Bologna, Cesena, Italy.
C3 University of Bologna; Universita di Modena e Reggio Emilia; University
   of Bologna
RP Calegari, R (corresponding author), Alma Mater Studiorum Univ Bologna, Bologna, Italy.
EM roberta.calegari@unibo.it; enrico.denti@unibo.it;
   stefano.mariani@unimore.it; andrea.omicini@unibo.it
RI Calegari, Roberta/AAT-2665-2020; Mariani, Stefano/AAA-5314-2019;
   Calegari, Roberta/ABC-7830-2020; Omicini, Andrea/G-5284-2013; Denti,
   Enrico/X-1803-2019
OI Calegari, Roberta/0000-0003-3794-2942; Mariani,
   Stefano/0000-0001-8921-8150; Calegari, Roberta/0000-0003-3794-2942;
   Omicini, Andrea/0000-0002-6655-3869; Denti, Enrico/0000-0003-1687-8793
CR Alkhabbas F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P221, DOI 10.1109/ICSA.2017.37
   [Anonymous], INT THINGS 2010 INT
   [Anonymous], 1996, Prolog-the Standard: Reference Manual
   [Anonymous], 1999, P SIGCHI C HUM FACT, DOI DOI 10.1145/302979.303126
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   BROGI A, 1989, LECT NOTES COMPUT SC, V351, P162
   BROGI A, 1991, ACM T PROGR LANG SYS, V13, P99, DOI 10.1145/114005.102807
   Brownlee J, 2011, CLEVER ALGORITHMS NA
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   CALEGARI R., 2018, INT J GRID UTILITY C
   Calegari R, 2018, FUND INFORM, V161, P53, DOI 10.3233/FI-2018-1695
   Calegari R, 2017, IEEE INT C NETW SENS, P72, DOI 10.1109/ICNSC.2017.8000070
   Cannata A., 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P592, DOI 10.1109/INDIN.2010.5549675
   Chen H, 2003, KNOWL ENG REV, V18, P197, DOI 10.1017/S0269888904000025
   Cheng B, 2017, IEEE ACM T NETWORK, V25, P2082, DOI 10.1109/TNET.2017.2705239
   Clark K. L., 1978, Logic and data bases, P293
   CLARK KL, 1987, LECT NOTES COMPUT SC, V259, P30
   CLARK KL, 1981, P ACM C FUNCTIONAL P, P171, DOI DOI 10.1145/800223.806776
   CUNHA J. C., 1989, P 6 INT C LOG PROGR, P487
   Cusumano M, 2010, COMMUN ACM, V53, P27, DOI 10.1145/1721654.1721667
   Dal Palù A, 2010, LECT NOTES COMPUT SC, V6125, P300, DOI 10.1007/978-3-642-14309-0_14
   Denti E., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P184
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Erl T, 2005, SERVICE ORIENTED ARC
   Etter R, 2006, International Conference on Pervasive Services, Proceedings, P281
   Familiar B., 2015, MICROSERVICES IOT AZ
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Finin T, 2001, LECT NOTES ARTIF INT, V2182, P264
   Gallaire H., 1978, LOGIC DATA BASES
   de Prado AG, 2017, IEEE ACCESS, V5, P4646, DOI 10.1109/ACCESS.2017.2679338
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Guinard D, 2010, IEEE T SERV COMPUT, V3, P223, DOI 10.1109/TSC.2010.3
   Hachem S, 2014, PERVASIVE MOB COMPUT, V10, P66, DOI 10.1016/j.pmcj.2013.10.010
   Heuer J, 2015, COMPUTER, V48, P34, DOI 10.1109/MC.2015.152
   Hu B, 2012, COMM COM INF SC, V315, P155
   Karnouskos S, 2012, IEEE IND ELEC, P5766, DOI 10.1109/IECON.2012.6389042
   Loke SW, 2004, KNOWL ENG REV, V19, P213, DOI 10.1017/s0269888905000263
   Mariani S, 2015, ENG APPL ARTIF INTEL, V41, P298, DOI 10.1016/j.engappai.2014.10.006
   MARTELLI M., 1995, 1985 1995 10 YEARS L, P137
   Messina F, 2017, INT J GRID UTIL COMP, V8, P71
   Michelson B.M., 2006, EVENT DRIVEN ARCHITE
   MONTEIRO L, 1984, IMPLEMENTATIONS PROL, P329
   Naish L., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1546
   Nalepa GJ, 2014, COMPUT SCI INF SYST, V11, P171, DOI 10.2298/CSIS130209002N
   Niezen G, 2013, J AMB INTEL SMART EN, V5, P135, DOI 10.3233/AIS-120194
   Nii P., 1986, AI Magazine, V7, P38
   Oliya M, 2011, COMM COM INF SC, V190, P232
   Omicini A., 1999, Autonomous Agents and Multi-Agent Systems, V2, P251, DOI 10.1023/A:1010060322135
   Parker LynneE., 2008, Journal of Physical Agents, V2, P5
   PONTELLI E., 2008, MANAGING WEB SERVICE, P193
   Ranganathan A, 2004, IEEE PERVAS COMPUT, V3, P62, DOI 10.1109/MPRV.2004.1316821
   Ranganathan A, 2003, PERS UBIQUIT COMPUT, V7, P353, DOI 10.1007/s00779-003-0251-x
   Reiter R., 1978, Logic and data bases, P55
   Ricci A, 2017, STUD COMPUT INTELL, V678, P121, DOI 10.1007/978-3-319-48829-5_12
   Richards M., 2016, Microservices AntiPatterns and Pitfalls
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   SCHULTE R. W., 2003, GARTNER         0708
   SHAPIRO E, 1987, CONCURRENT PROLOG, V1
   Smart P, 2017, MIND MACH, V27, P357, DOI 10.1007/s11023-016-9416-z
   UEDA K, 1986, LECT NOTES COMPUT SC, V221, P168
   Wang H., 2011, P INT WORKSHOP SITUA, P67, DOI DOI 10.1145/2030045.2030061
   WOLFRAM D. A., 1984, P 2 INT C LOG PROGR, P263
   Zambonelli F, 2015, PERVASIVE MOB COMPUT, V17, P236, DOI 10.1016/j.pmcj.2014.12.002
NR 63
TC 6
Z9 7
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 846
EP 873
DI 10.1017/S1471068418000364
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000005
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Chen, Z
   Salazar, E
   Marple, K
   Gupta, G
   Tamil, L
   Cheeran, D
   Das, S
   Amin, A
AF Chen, Zhuo
   Salazar, Elmer
   Marple, Kyle
   Gupta, Gopal
   Tamil, Lakshman
   Cheeran, Daniel
   Das, Sandeep
   Amin, Alpesh
TI Improving adherence to heart failure management guidelines via abductive
   reasoning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming / 23rd International
   Conference on Principles and Practice of Constraint Programming (CP) /
   20th International Conference on Theory and Applications of
   Satisfiability Testing (SAT)
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google, IJCAI, Artificial Intelligence Journal Div, Cosling, CompSustNet, European Assoc Artificial Intelligence, IBM, Springer
DE chronic disease management; abduction; answer set programming; knowledge
   representation
ID ASSOCIATION TASK-FORCE; KNOWLEDGE
AB Management of chronic diseases, such as heart failure, is a major public health problem. A standard approach to managing chronic diseases by medical community is to have a committee of experts develop guidelines that all physicians should follow. Due to their complexity, these guidelines are difficult to implement and are adopted slowly by the medical community at large. We have developed a physician advisory system that codes the entire set of clinical practice guidelines for managing heart failure using answer set programming. In this paper, we show how abductive reasoning can be deployed to find missing symptoms and conditions that the patient must exhibit in order for a treatment prescribed by a physician to work effectively. Thus, if a physician does not make an appropriate recommendation or makes a non-adherent recommendation, our system will advise the physician about symptoms and conditions that must be in effect for that recommendation to apply. It is under consideration for acceptance in TPLP.
C1 [Chen, Zhuo; Salazar, Elmer; Marple, Kyle; Gupta, Gopal; Tamil, Lakshman] Univ Texas Dallas, Richardson, TX 75083 USA.
   [Cheeran, Daniel; Das, Sandeep; Amin, Alpesh] Univ Texas Southwestern Med Ctr Dallas, Dept Internal Med, Div Cardiol, Dallas, TX USA.
C3 University of Texas System; University of Texas Dallas; University of
   Texas System; University of Texas Southwestern Medical Center Dallas
RP Chen, Z (corresponding author), Univ Texas Dallas, Richardson, TX 75083 USA.
EM zxc130130@utdallas.edu; ees101020@utdallas.edu; kbm072000@utdallas.edu;
   gupta@utdallas.edu; laxman@utdallas.edu;
   Daniel.Cheeran@UTSouthwestern.edu; Sandeep.Das@UTSouthwestern.edu;
   Alpesh.Amin@UTSouthwestern.edu
RI Tamil, Lakshman/M-1180-2014
OI Tamil, Lakshman/0000-0003-4523-9376
FU NSF [1423419]; Texas Medical Research Collaborative; Direct For Computer
   & Info Scie & Enginr; Div Of Information & Intelligent Systems [1423419]
   Funding Source: National Science Foundation
FX This research is supported by NSF (Grant No. 1423419) and the Texas
   Medical Research Collaborative.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Buchman TG, 2006, J AM COLL SURGEONS, V202, P826, DOI 10.1016/j.jamcollsurg.2006.03.011
   Cabana MD, 1999, JAMA-J AM MED ASSOC, V282, P1458, DOI 10.1001/jama.282.15.1458
   Chen Z, 2016, THEOR PRACT LOG PROG, V16, P604, DOI 10.1017/S1471068416000429
   Chesani F, 2007, LECT NOTES ARTIF INT, V4594, P479
   Douven I., 2011, STANFORD ENCY PHILOS
   Fox J, 1998, ARTIF INTELL MED, V14, P157, DOI 10.1016/S0933-3657(98)00021-9
   Gebser M., 2014, CLINGO ASP CONTROL P
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Go A. S., 2013, TECHNICAL REPORT
   Groot P, 2009, ARTIF INTELL MED, V46, P19, DOI 10.1016/j.artmed.2008.07.007
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   HARMAN GH, 1965, PHILOS REV, V74, P88, DOI 10.2307/2183532
   INOUE K, 1991, LOGIC PROGRAMM, P490
   Jacobs AK, 2013, J AM COLL CARDIOL, V61, P213, DOI 10.1016/j.jacc.2012.09.025
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Marple K., 2012, P LOG BAS PROGR SYNT, P122
   Marple K., 2016, s(ASP)
   Marple K., 2016, COMPUTING S IN PRESS
   Marple K., 2012, Proceedings of the 14th symposium on Principles and practice of declarative programming, PPDP '12, P35, DOI DOI 10.1145/2370776.2370782
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   SATOH K, 1991, LOGIC PROGRAMM, P505
   Spiotta M., 2015, KR4HC PROHEALTH
   Yancy CW, 2013, J AM COLL CARDIOL, V62, pE147, DOI 10.1016/j.jacc.2013.05.019
NR 25
TC 2
Z9 2
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 764
EP 779
DI 10.1017/S1471068417000308
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gonçalves, R
   Knorr, M
   Leite, J
   Woltran, S
AF Goncalves, Ricardo
   Knorr, Matthias
   Leite, Joao
   Woltran, Stefan
TI When you must forget: Beyond strong persistence when forgetting in
   answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE forgetting; Answer Set Programming; strong equivalence; relativized
   equivalence; computational complexity
AB Among the myriad of desirable properties discussed in the context of forgetting in Answer Set Programming, strong persistence naturally captures its essence. Recently, it has been shown that it is not always possible to forget a set of atoms from a program while obeying this property, and a precise criterion regarding what can be forgotten has been presented, accompanied by a class of forgetting operators that return the correct result when forgetting is possible. However, it is an open question what to do when we have to forget a set of atoms, but cannot without violating this property. In this paper, we address this issue and investigate three natural alternatives to forget when forgetting without violating strong persistence is not possible, which turn out to correspond to the different possible relaxations of the characterization of strong persistence. Additionally, we discuss their preferable usage, shed light on the relation between forgetting and notions of relativized equivalence established earlier in the context of Answer Set Programming, and present a detailed study on their computational complexity.
C1 [Goncalves, Ricardo; Knorr, Matthias; Leite, Joao] Univ Nova Lisboa, NOVA LINCS, Lisbon, Portugal.
   [Woltran, Stefan] TU Wien, Vienna, Austria.
C3 Universidade Nova de Lisboa; Technische Universitat Wien
RP Gonçalves, R (corresponding author), Univ Nova Lisboa, NOVA LINCS, Lisbon, Portugal.
EM rjrg@fct.unl.pt; mkn@fct.unl.pt; jleite@fct.unl.pt;
   woltran@dbai.tuwien.ac.at
RI Leite, Joao/HGB-4757-2022; Knorr, Matthias/J-4220-2012; Goncalves,
   Ricardo/M-4645-2013; Leite, Joao/C-6162-2009
OI Knorr, Matthias/0000-0003-1826-1498; Goncalves,
   Ricardo/0000-0003-4289-7197; Leite, Joao/0000-0001-6786-7360
FU FCT strategic project NOVA LINCS [UID/CEC/04516/2013]; FCT
   [SFRH/BPD/100906/2014, SFRH/BPD/86970/2012]; Austrian Science Fund (FWF)
   [Y698, P25521]; Fundação para a Ciência e a Tecnologia
   [SFRH/BPD/86970/2012, SFRH/BPD/100906/2014] Funding Source: FCT
FX R. Gonc, alves, M. Knorr and J. Leite were partially supported by FCT
   strategic project NOVA LINCS (UID/CEC/04516/2013). R. Gonc, alves was
   partially supported by FCT grant SFRH/BPD/100906/2014 and M. Knorr by
   FCT grant SFRH/BPD/86970/2012. S. Woltran was supported by the Austrian
   Science Fund (FWF): Y698, P25521.
CR Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 2013, LECT NOTES COMPUT SC, V8148, P36, DOI 10.1007/978-3-642-40564-8_4
   [Anonymous], THESIS
   [Anonymous], 2011, IJCAI 2011 P 22 INT
   [Anonymous], 2010, J GUANGDONG TECHNICA, DOI DOI 10.1109/ICMULT.2010.5631429)
   Delgrande J, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480766
   Delgrande JP, 2015, AAAI CONF ARTIF INTE, P1482
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2008, ARTIF INTELL, V172, P1644, DOI 10.1016/j.artint.2008.05.002
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   European Parliament and Council of the European Union, 2016, Off. J., V59, P1
   Gonçalves R, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P135
   Gonçalves R, 2016, LECT NOTES COMPUT SC, V10021, P543, DOI 10.1007/978-3-319-48758-8_37
   Gonçalves R, 2016, FRONT ARTIF INTEL AP, V285, P957, DOI 10.3233/978-1-61499-672-9-957
   Knorr M, 2014, LECT NOTES ARTIF INT, V8761, P412, DOI 10.1007/978-3-319-11558-0_29
   Konev B, 2013, ARTIF INTELL, V203, P66, DOI 10.1016/j.artint.2013.07.004
   Konev B, 2012, J ARTIF INTELL RES, V44, P633, DOI 10.1613/jair.3552
   Kontchakov R, 2010, ARTIF INTELL, V174, P1093, DOI 10.1016/j.artint.2010.06.003
   Kowalski W. W, 1980, LNCS, V87, P70, DOI DOI 10.1007/3-540-10009-1_7
   Lang J, 2003, J ARTIF INTELL RES, V18, P391, DOI 10.1613/jair.1113
   Lang J, 2010, ARTIF INTELL, V174, P799, DOI 10.1016/j.artint.2010.04.023
   Larrosa J, 2005, J ARTIF INTELL RES, V23, P421, DOI 10.1613/jair.1541
   Larrosa J., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P291
   Leite J, 2017, LECT NOTES ARTIF INT, V10377, P10, DOI 10.1007/978-3-319-61660-5_2
   Lewis C.I., 1918, A Survey of Symbolic Logic
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   Middeldorp A, 1996, THEOR COMPUT SCI, V167, P95, DOI 10.1016/0304-3975(96)00071-0
   Moinard Y, 2007, J LOGIC COMPUT, V17, P955, DOI 10.1093/logcom/exm049
   Rajaratnam D, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P498
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Slota M., 2012, P 13 INT C PRINC KNO, P158
   Slota M, 2014, THEOR PRACT LOG PROG, V14, P869, DOI 10.1017/S1471068413000100
   Wang Y., 2012, P KR, P643
   Wang Y., 2013, P IJCAI, P1163
   Wang YS, 2014, J ARTIF INTELL RES, V50, P31, DOI 10.1613/jair.4297
   Weber A, 1986, P 1 C EXPERT DATABAS, P487
   Zhang Y, 2006, ARTIF INTELL, V170, P739, DOI 10.1016/j.artint.2006.02.002
NR 40
TC 11
Z9 11
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 837
EP 854
DI 10.1017/S1471068417000382
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Janhunen, T
   Kaminski, R
   Ostrowski, M
   Schellhorn, S
   Wanko, P
   Schaub, T
AF Janhunen, Tomi
   Kaminski, Roland
   Ostrowski, Max
   Schellhorn, Sebastian
   Wanko, Philipp
   Schaub, Torsten
TI Clingo goes linear constraints over reals and integers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Constraint Answer Set Programming (CASP); Answer Set Programming (ASP);
   Constraint Processing (CP); Theory Solving
AB The recent series 5 of the Answer Set Programming (ASP) system clingo provides generic means to enhance basic ASP with theory reasoning capabilities. We instantiate this framework with different forms of linear constraints and elaborate upon its formal properties. Given this, we discuss the respective implementations, and present techniques for using these constraints in a reactive context. More precisely, we introduce extensions to clingo with difference and linear constraints over integers and reals, respectively, and realize them in complementary ways. Finally, we empirically evaluate the resulting clingo derivatives clingo[dl] and clingo[lp] on common language fragments and contrast them to related ASP systems.
C1 [Janhunen, Tomi] Aalto Univ, Aalto, Finland.
   [Kaminski, Roland; Ostrowski, Max; Schellhorn, Sebastian; Wanko, Philipp; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] INRIA Rennes, Rennes, France.
C3 Aalto University; University of Potsdam; Universite de Rennes
RP Janhunen, T (corresponding author), Aalto Univ, Aalto, Finland.
EM tomi.janhunen@aalto.fi; kaminski@cs.uni-potsdam.de;
   ostrowsk@cs.uni-potsdam.de; seschell@cs.uni-potsdam.de;
   wanko@cs.uni-potsdam.de; torsten@cs.uni-potsdam.de
RI Janhunen, Tomi/E-8362-2012; Kaminski, Roland/HMD-8407-2023; Schaub,
   Torsten/O-5873-2019
OI Kaminski, Roland/0000-0002-1361-6045; Schaub,
   Torsten/0000-0002-7456-041X; Wanko, Philipp/0000-0003-4986-4881
FU DFG [550/9, 11]; Academy of Finland [251170]
FX This work was partially funded by DFG grants SCHA 550/9 and 11, as well
   as the Academy of Finland grant 251170.
CR [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Banbara Mutsunori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P112, DOI 10.1007/978-3-319-23264-5_10
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Cabalar P, 2000, FRONT ARTIF INTEL AP, V54, P543
   Carro M., 2016, Open Access Series in Informatics (OASIcs), V52
   Cotton S, 2006, LECT NOTES COMPUT SC, V4121, P170
   CRAWFORD JM, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1092
   Dantzig G. B., 2003, Linear Programming 2: Theory and Extensions
   De Rosis A., 2015, P 8 WORKSH ANSW SET
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Gebser M., 2016, OPEN ACCESS SERIES I, V52
   Gebser M., 2014, THEORY PRACTICE LOGI
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Janhunen T., 2011, Proceedings of Grounding and Transformations for Theories with Variables, V11, P1
   Lierler Y., 2016, OPEN ACCESS SERIES I, V52
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Soh T, 2010, FUND INFORM, V102, P467, DOI 10.3233/FI-2010-314
   TAILLARD E, 1993, EUR J OPER RES, V64, P278, DOI 10.1016/0377-2217(93)90182-M
   VANLOON JNM, 1981, EUR J OPER RES, V8, P283, DOI 10.1016/0377-2217(81)90177-6
NR 24
TC 36
Z9 36
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 872
EP 888
DI 10.1017/S1471068417000242
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Banbara, M
   Kaufmann, B
   Ostrowski, M
   Schaub, T
AF Banbara, Mutsunori
   Kaufmann, Benjamin
   Ostrowski, Max
   Schaub, Torsten
TI Clingcon: The next generation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Constraint Answer Set Programming (CASP); Answer Set Programming (ASP);
   Sat Modulo Theories (SMT); Constraint Programming (CP)
ID ANSWER SET
AB We present the third generation of the constraint answer set system clingcon, combining Answer Set Programming (ASP) with finite domain constraint processing (CP). While its predecessors rely on a black-box approach to hybrid solving by integrating the CP solver gecode, the new clingcon system pursues a lazy approach using dedicated constraint propagators to extend propagation in the underlying ASP solver clasp. No extension is needed for parsing and grounding clingcon's hybrid modeling language since both can be accommodated by the new generic theory handling capabilities of the ASP grounder gringo. As a whole, clingcon 3 is thus an extension of the ASP system clingo 5, which itself relies on the grounder gringo and the solver clasp. The new approach of clingcon offers a seamless integration of CP propagation into ASP solving that benefits from the whole spectrum of clasp's reasoning modes, including, for instance, multi-shot solving and advanced optimization techniques. This is accomplished by a lazy approach that unfolds the representation of constraints and adds it to that of the logic program only when needed. Although the unfolding is usually dictated by the constraint propagators during solving, it can already be partially (or even totally) done during preprocessing. Moreover, clingcon's constraint preprocessing and propagation incorporate several well-established CP techniques that greatly improve its performance. We demonstrate this via an extensive empirical evaluation contrasting, first, the various techniques in the context of CSP solving and, second, the new clingcon system with other hybrid ASP systems.
C1 [Banbara, Mutsunori] Kobe Univ, Kobe, Hyogo, Japan.
   [Kaufmann, Benjamin; Ostrowski, Max; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] INRIA Rennes, Rennes, France.
   [Schaub, Torsten] Simon Fraser Univ, Burnaby, BC, Canada.
   [Schaub, Torsten] Griffith Univ, Nathan, Qld, Australia.
C3 Kobe University; University of Potsdam; Universite de Rennes; Simon
   Fraser University; Griffith University
RP Banbara, M (corresponding author), Kobe Univ, Kobe, Hyogo, Japan.
EM banbara@kobe-u.ac.jp; kaufmann@cs.uni-potsdam.de;
   ostrowsk@cs.uni-potsdam.de; torsten@cs.uni-potsdam.de
RI Schaub, Torsten/O-5873-2019; Banbara, Mutsunori/AAJ-7265-2020
OI Schaub, Torsten/0000-0002-7456-041X; Banbara,
   Mutsunori/0000-0002-5388-727X
FU JSPS [KAKENHI 15K00099]; DFG [SCHA 550/9]; Grants-in-Aid for Scientific
   Research [15K00099, 16H02803] Funding Source: KAKEN
FX This work was partially funded by JSPS (KAKENHI 15K00099) and DFG (SCHA
   550/9).
CR Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   [Anonymous], ABS09022362 CORR
   [Anonymous], TECHN COMM 28 INT C
   Aziz RA, 2013, THEOR PRACT LOG PROG, V13, P517, DOI 10.1017/S147106841300032X
   Balduccini M., 2013, THEORY PRACTICE LOGI, V13
   Balduccini M., 2016, ABS160900030 CORR
   Balduccini M., 2009, P 2 WORKSH ANSW SET, P16
   Banbara Mutsunori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P112, DOI 10.1007/978-3-319-23264-5_10
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brodsky A., 2013, P 25 IEEE INT C TOOL
   Cabalar P., 2016, P 25 INT JOINT C ART, P1015
   Carro M., 2016, Open Access Series in Informatics (OASIcs), V52
   CRAWFORD JM, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1092
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   De Cat B., 2014, ABS14016312 CORR
   De Cat B, 2013, PROC INT C TOOLS ART, P1068, DOI 10.1109/ICTAI.2013.159
   Drescher C., 2012, LIPICS, V17, P188
   Drescher C., 2015, THESIS
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Feydy Thibaut, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P286, DOI 10.1007/978-3-642-23786-7_23
   Feydy T, 2009, LECT NOTES COMPUT SC, V5732, P352, DOI 10.1007/978-3-642-04244-7_29
   Gebser Martin, 2015, Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation. LNCS 9060, P17
   Gebser M., 2014, TECHN COMM 20 INT C
   Gebser M., 2016, OPEN ACCESS SERIES I, V52
   Gebser M., 2013, PROC AAAI, P350, DOI 10.1609/aaai.v27i1.8585
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2012, THEOR PRACT LOG PROG, V12, P525, DOI 10.1017/S1471068412000166
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Gecode Team, 2006, Gecode: Generic constraint development environment
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Janhunen T., 2011, Proceedings of Grounding and Transformations for Theories with Variables, V11, P1
   Lierler Y., 2016, OPEN ACCESS SERIES I, V52
   Lifschitz V., 2008, AAAI, V3, P1594
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Mellarkod VS, 2008, LECT NOTES COMPUT SC, V4989, P15
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Metodi A, 2013, J ARTIF INTELL RES, V46, P303, DOI 10.1613/jair.3809
   Ohrimenko O, 2009, CONSTRAINTS, V14, P357, DOI 10.1007/s10601-008-9064-x
   Ostrowski M, 2017, THESIS
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Schulte Christian., 2005, RECENT ADV CONSTRAIN, V3978, P118
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Soh T, 2010, FUND INFORM, V102, P467, DOI 10.3233/FI-2010-314
   Tamura N, 2013, PROC INT C TOOLS ART, P1020, DOI 10.1109/ICTAI.2013.153
   Tamura N, 2009, CONSTRAINTS, V14, P254, DOI 10.1007/s10601-008-9061-0
   Thiffault C, 2004, LECT NOTES COMPUT SC, V3258, P663
   Walsh T., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P441
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 55
TC 33
Z9 34
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 408
EP 461
DI 10.1017/S1471068417000138
PG 54
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000003
DA 2024-07-18
ER

PT J
AU Gebser, M
   Harrison, A
   Kaminski, R
   Lifschitz, V
   Schaub, T
AF Gebser, Martin
   Harrison, Amelia
   Kaminski, Roland
   Lifschitz, Vladimir
   Schaub, Torsten
TI Abstract gringo
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
AB This paper defines the syntax and semantics of the input language of the ASP grounder gringo. The definition covers several constructs that were not discussed in earlier work on the semantics of that language, including intervals, pools, division of integers, aggregates with non-numeric values, and lparse-style aggregate expressions. The definition is abstract in the sense that it disregards some details related to representing programs by strings of ASCII characters. It serves as a specification for gringo from Version 4.5 on.
C1 [Gebser, Martin] Aalto Univ, HIIT, Espoo, Finland.
   [Gebser, Martin] Univ Potsdam, Potsdam, Germany.
   [Harrison, Amelia] Univ Texas Austin, Austin, TX 78712 USA.
   [Kaminski, Roland] Univ Potsdam, Potsdam, Germany.
   [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
   [Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] INRIA Rennes, Rennes, France.
   [Schaub, Torsten] Simon Fraser Univ, Burnaby, BC V5A 1S6, Canada.
   [Schaub, Torsten] IIIS Griffith Univ, Griffith, NSW, Australia.
C3 Aalto University; University of Potsdam; University of Texas System;
   University of Texas Austin; University of Potsdam; University of Texas
   System; University of Texas Austin; University of Potsdam; Universite de
   Rennes; Simon Fraser University; Griffith University
RP Gebser, M (corresponding author), Aalto Univ, HIIT, Espoo, Finland.
EM gebser@cs.uni-potsdam.de; ameliaj@cs.utexas.edu;
   kaminski@cs.uni-potsdam.de; vl@cs.utexas.edu; torsten@cs.uni-potsdam.de
RI Kaminski, Roland/HMD-8407-2023; Schaub, Torsten/O-5873-2019; Gebser,
   Martin/B-7169-2018
OI Kaminski, Roland/0000-0002-1361-6045; Schaub,
   Torsten/0000-0002-7456-041X; 
FU AoF [251170]; DFG [SCHA 550/8, 550/9]; National Science Foundation
   [IIS-1422455]; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1422455] Funding Source: National Science
   Foundation
FX Supported by AoF (grant 251170) and DFG (grants SCHA 550/8 and 550/9).;
   Partially supported by the National Science Foundation under Grant
   IIS-1422455.
CR Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser Martin, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P74, DOI 10.1007/978-3-642-20832-4_6
   Harrison A., 2014, P INT C PRINC KNOWL
   Harrison A., 2015, P INT C LOG PROGR NO
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 9
TC 50
Z9 52
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 449
EP 463
DI 10.1017/S1471068415000150
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Manna, M
   Ricca, F
   Terracina, G
AF Manna, Marco
   Ricca, Francesco
   Terracina, Giorgio
TI Taming primary key violations to query large inconsistent data via ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Inconsistent Databases; Consistent Query Answering; ASP
ID LOGIC PROGRAMS; DATABASES
AB Consistent query answering over a database that violates primary key constraints is a classical hard problem in database research that has been traditionally dealt with logic programming. However, the applicability of existing logic-based solutions is restricted to data sets of moderate size. This paper presents a novel decomposition and pruning strategy that reduces, in polynomial time, the problem of computing the consistent answer to a conjunctive query over a database subject to primary key constraints to a collection of smaller problems of the same sort that can be solved independently. The new strategy is naturally modeled and implemented using Answer Set Programming (ASP). An experiment run on benchmarks from the database world prove the effectiveness and efficiency of our ASP-based approach also on large data sets.
C1 [Manna, Marco; Ricca, Francesco; Terracina, Giorgio] Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Manna, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
EM manna@mat.unical.it; ricca@mat.unical.it; terracina@mat.unical.it
RI , giorgio/ABG-7441-2020; Manna, Marco/G-8966-2012
OI , giorgio/0000-0002-3090-7223; Manna, Marco/0000-0003-3323-9328
CR Abiteboul S, 1995, FDN DATABASES
   Alviano M., 2014, CORR
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   [Anonymous], 2011, Database Repairing and Consistent Query Answering
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barceló P, 2003, LECT NOTES COMPUT SC, V2562, P208
   BERTOSSI LE, 2005, LNCS, V3300
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F., 2013, ASP CORE 2 INPUT LAN
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Chomicki J, 2005, INFORM COMPUT, V197, P90, DOI 10.1016/j.ic.2004.04.007
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P163, DOI 10.1007/978-3-540-24599-5_12
   Elmagarmid AK, 2007, IEEE T KNOWL DATA EN, V19, P1, DOI 10.1109/TKDE.2007.250581
   FUXMAN A, 2005, P ACM SIGMOD INT C M, P155
   Fuxman A, 2007, J COMPUT SYST SCI, V73, P610, DOI 10.1016/j.jcss.2006.10.013
   Gebser M., 2013, IJCAI 2013
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Greco G, 2003, IEEE T KNOWL DATA EN, V15, P1389, DOI 10.1109/TKDE.2003.1245280
   Kolaitis PG, 2013, PROC VLDB ENDOW, V6, P397, DOI 10.14778/2536336.2536341
   Kolaitis PG, 2012, INFORM PROCESS LETT, V112, P77, DOI 10.1016/j.ipl.2011.10.018
   Manna M, 2013, THEOR PRACT LOG PROG, V13, P227, DOI 10.1017/S1471068411000640
   Wijsen J, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2188349.2188351
   Wijsen J, 2009, INFORM SYST, V34, P578, DOI 10.1016/j.is.2009.03.011
   [No title captured]
NR 27
TC 22
Z9 24
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 696
EP 710
DI 10.1017/S1471068415000320
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200020
DA 2024-07-18
ER

PT J
AU Amato, G
   Scozzari, F
AF Amato, Gianluca
   Scozzari, Francesca
TI Optimal multibinding unification for sharing and linearity analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE static analysis; abstract interpretation; sharing; linearity;
   unification
ID ABSTRACT INTERPRETATION; LOGIC PROGRAMS
AB In the analysis of logic programs, abstract domains for detecting sharing properties are widely used. Recently, the new domain ShLin. has been introduced to generalize both sharing and linearity information. This domain is endowed with an optimal abstract operator for single-binding unification. The authors claim that the repeated application of this operator is also optimal for multibinding unification. This is the proof of such a claim.
C1 [Amato, Gianluca; Scozzari, Francesca] Univ G dAnnunzio, Dipartimento Econ, Pescara, Italy.
C3 G d'Annunzio University of Chieti-Pescara
RP Amato, G (corresponding author), Univ G dAnnunzio, Dipartimento Econ, Pescara, Italy.
EM gamato@unich.it; fscozzari@unich.it
RI Scozzari, Francesca/KCL-0390-2024; Amato, Gianluca/AAI-9505-2020
OI Scozzari, Francesca/0000-0002-2105-4855; Amato,
   Gianluca/0000-0002-6214-5198
CR Amato C, 2010, LECT NOTES COMPUT SC, V6337, P134, DOI 10.1007/978-3-642-15769-1_9
   Amato G, 2012, ELECTRON NOTES THEOR, V287, P17, DOI 10.1016/j.entcs.2012.09.003
   Amato G, 2013, LECT NOTES COMPUT SC, V7935, P25, DOI 10.1007/978-3-642-38856-9_4
   Amato G, 2012, J SYMB COMPUT, V47, P1533, DOI 10.1016/j.jsc.2011.12.052
   Amato G, 2012, LECT NOTES COMPUT SC, V7180, P375, DOI 10.1007/978-3-642-28717-6_29
   Amato G, 2010, LECT NOTES COMPUT SC, V6418, P475, DOI 10.1007/978-3-642-16612-9_37
   Amato G, 2010, THEOR PRACT LOG PROG, V10, P49, DOI 10.1017/S1471068409990160
   Amato G, 2009, THEOR COMPUT SCI, V410, P4626, DOI 10.1016/j.tcs.2009.07.038
   Amato G, 2009, THEOR PRACT LOG PROG, V9, P617, DOI 10.1017/S1471068409990111
   [Anonymous], [No title captured]
   Armstrong T., 1994, Static Analysis. First International Static Analysis Symposium, SAS '94 Proceedings, P266
   Bagnara R, 2005, THEOR PRACT LOG PROG, V5, P1, DOI 10.1017/S1471068404001978
   Cortesi A, 1999, J LOGIC PROGRAM, V38, P371, DOI 10.1016/S0743-1066(98)10026-2
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Hans W., 1992, 9227 RWTH
   JACOBS D, 1992, J LOGIC PROGRAM, V13, P291, DOI 10.1016/0743-1066(92)90034-Z
   King A., 1994, Programming Languages and Systems - ESOP '94. 5th European Symposium on Programming. Proceedings, P363
   King A, 2000, J LOGIC PROGRAM, V46, P139, DOI 10.1016/S0743-1066(00)00009-1
   Levi G, 2003, INFORM COMPUT, V182, P14, DOI 10.1016/S0890-5401(02)00048-2
   Maclane S., 1971, CATEGORIES WORKING M, V5
   MARRIOTT K, 1994, ACM T PROGR LANG SYS, V16, P607, DOI 10.1145/177492.177650
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
NR 23
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2014
VL 14
BP 379
EP 400
DI 10.1017/S1471068413000070
PN 3
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AI
UT WOS:000338293500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Naish, L
AF Naish, Lee
TI Transforming floundering into success
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE floundering; delays; coroutining; program analysis; abstract
   interpretation; program transformation; declarative debugging
ID LOGIC PROGRAMS; SEMANTICS
AB We show how logic programs with "delays" can be transformed to programs without delays in a way that preserves information concerning floundering (also known as deadlock). This allows a declarative (model-theoretic), bottom-up or goal-independent approach to be used for analysis and debugging of properties related to floundering. We rely on some previously introduced restrictions on delay primitives and a key observation which allows properties such as groundness to be analysed by approximating the (ground) success set.
C1 Univ Melbourne, Melbourne Sch Engn, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Naish, L (corresponding author), Univ Melbourne, Melbourne Sch Engn, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM lee@unimelb.edu.au
CR APT K, 1996, LOGIC PROGRAMMING PR
   APT KR, 1982, J ACM, V29, P841, DOI 10.1145/322326.322339
   BOYE J, 1995, P 12 INT C LOG PROGR, P747
   CODISH M, 1994, ACM T PROGR LANG SYS, V16, P649, DOI 10.1145/177492.177656
   Codish M., 1997, J LOGIC PROGRAM, V30, P649
   CODOGNET C, 1990, LOGIC PROGRAMM, P215
   Cortesi A., 2001, LNCS, V2244, P395
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Genaim S, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1352582.1352585
   Giacobazzi R, 1998, ACM T PROGR LANG SYS, V20, P1067, DOI 10.1145/293677.293680
   LLOYD JW, 1984, SPRINGER SERIES SYMB
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   MARRIOTT K, 1990, LOGIC PROGRAMM, P661
   MARRIOTT K, 1994, P 21 ANN ACM S PRINC, P240
   Naish L., 1993, Australian Computer Science Communications, V15, P181
   NAISH L, 1988, P 5 INT C S LOG PROG, P1546
   NAISH L, 2000, AUSTR COMPUTER SCI C, V22, P166
   Naish L., 1996, P 1996 JOINT INT C S, P185
   Naish L., 2012, P 35 AUSTR COMP SCI, V122
   Naish L, 2007, LECT NOTES COMPUT SC, V4670, P302, DOI 10.1007/978-3-540-74610-2_21
   Naish L, 2006, THEOR PRACT LOG PROG, V6, P509, DOI 10.1017/S1471068406002742
   Puebla G, 1997, LOGIC PROGRAMM, P93
   Ross K. A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P22, DOI 10.1145/73721.73724
   Shapiro EY., 1983, Algorithmic Program Debugging
   Somogyi Z., 1995, PROCEEDINGS OF THE AUSTRALIAN COMPUTER SCIENCE CONFERENCE, P499
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 26
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2014
VL 14
BP 215
EP 238
DI 10.1017/S147106841200035X
PN 2
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AG
UT WOS:000338293300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bartholomew, M
   Lee, J
AF Bartholomew, Michael
   Lee, Joohyung
TI On the stable model semantics for intensional functions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE answer set programming; stable models; intensional functions
AB Several extensions of the stable model semantics are available to describe "intensional" functions-functions that can be described in terms of other functions and predicates by logic programs. Such functions are useful for expressing inertia and default behaviors of systems, and can be exploited for alleviating the grounding bottleneck involving functional fluents. However, the extensions were defined in different ways under different intuitions. In this paper we provide several reformulations of the extensions, and note that they are in fact closely related to each other and coincide on large syntactic classes of logic programs.
C1 [Bartholomew, Michael; Lee, Joohyung] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85069 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Bartholomew, M (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85069 USA.
EM mjbartho@asu.edu; joolee@asu.edu
FU National Science Foundation [IIS-0916116]; South Korea IT RD program
   [MKE/KIAT 2010-TD-300404-001]; Div Of Information & Intelligent Systems;
   Direct For Computer & Info Scie & Enginr [0916116, 1319794] Funding
   Source: National Science Foundation
FX We are grateful to Pedro Cabalar and the anonymous referees for their
   useful comments. This work was partially supported by the National
   Science Foundation under Grant IIS-0916116 and by the South Korea IT R&D
   program MKE/KIAT 2010-TD-300404-001.
CR Balduccini M., 2012, LNCS, V7265, P24, DOI DOI 10.1007/978-3-642-30743-0_3
   Balduccini M, 2012, ICLP TECHNICAL COMMU, P49
   BARTHOLOMEW M, 2012, P INT C PRINC KNOWL, P2
   Bartholomew Michael, 2013, P INT JOINT C ART IN
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Lifschitz V., 2012, P INT C PRINC KNOWL, P24
   Lifschitz V, 2008, FOUND ARTIF INTELL, P3, DOI 10.1016/S1574-6526(07)03001-5
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 9
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 863
EP 876
DI 10.1017/S1471068413000549
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400027
DA 2024-07-18
ER

PT J
AU Eiter, T
   Fink, M
   Krennwallner, T
   Redl, C
AF Eiter, Thomas
   Fink, Michael
   Krennwallner, Thomas
   Redl, Christoph
TI Conflict-driven ASP solving with external sources
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer set programming; nonmonotonic reasoning; conflict-driven clause
   learning
ID LOGIC; SEMANTICS; PROGRAMS
AB Answer Set Programming (ASP) is a well-known problem solving approach based on nonmonotonic logic programs and efficient solvers. To enable access to external information, HEX-programs extend programs with external atoms, which allow for a bidirectional communication between the logic program and external sources of computation (e. g., description logic reasoners and Web resources). Current solvers evaluate HEX-programs by a translation to ASP itself, in which values of external atoms are guessed and verified after the ordinary answer set computation. This elegant approach does not scale with the number of external accesses in general, in particular in presence of nondeterminism (which is instrumental for ASP). In this paper, we present a novel, native algorithm for evaluating HEX-programs which uses learning techniques. In particular, we extend conflict-driven ASP solving techniques, which prevent the solver from running into the same conflict again, from ordinary to HEX-programs. We show how to gain additional knowledge from external source evaluations and how to use it in a conflict-driven algorithm. We first target the uninformed case, i.e., when we have no extra information on external sources, and then extend our approach to the case where additional meta-information is available. Experiments show that learning from external sources can significantly decrease both the runtime and the number of considered candidate compatible sets.
C1 [Eiter, Thomas; Fink, Michael; Krennwallner, Thomas; Redl, Christoph] Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Eiter, T (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM eiter@kr.tuwien.ac.at; fink@kr.tuwien.ac.at; tkren@kr.tuwien.ac.at;
   redl@kr.tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021
OI Krennwallner, Thomas/0000-0001-7523-3202
FU Austrian Science Fund (FWF) [P20840, P20841, P24090]; Vienna Science and
   Technology Fund (WWTF) [ICT 08-020]
FX This research has been supported by the Austrian Science Fund (FWF)
   project P20840, P20841, and P24090, and by the Vienna Science and
   Technology Fund (WWTF) project ICT 08-020.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2008, KR
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5590, P602, DOI 10.1007/978-3-642-02906-6_52
   Eiter T., 2010, Principles of Knowledge Representation and Reasoning: Proceedings of the Twelfth International Conference, KR 2010, Toronto, Ontario, Canada, May 9-13
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2006, LECT NOTES COMPUT SC, V4011, P273
   Eiter T, 2011, LECT NOTES ARTIF INT, V6645, P93
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Eiter T, 2008, ANN MATH ARTIF INTEL, V53, P115, DOI 10.1007/s10472-009-9111-3
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Goldberg E, 2007, DISCRETE APPL MATH, V155, P1549, DOI 10.1016/j.dam.2006.10.007
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Motik B, 2006, LECT NOTES ARTIF INT, V4246, P227, DOI 10.1007/11916277_16
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ostrowski M., 2012, THEOR PRACT IN PRESS
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 27
TC 17
Z9 17
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 659
EP 679
DI 10.1017/S1471068412000233
PN 4-5
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Antoy, S
AF Antoy, Sergio
TI On the correctness of pull-tabbing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE functional logic programming; nondeterminism; graph rewriting;
   pull-tabbing
AB Pull-tabbing is an evaluation approach for functional logic computations, based on a graph transformation recently proposed, which avoids making irrevocable nondeterministic choices that would jeopardize the completeness of computations. In contrast to other approaches with this property, it does not require an upfront cloning of a possibly large portion of the choice's context. We formally define the pull-tab transformation, characterize the class of programs for which the transformation is intended, extend the computations in these programs to include the transformation, and prove the correctness of the extended computations.
C1 Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
C3 Portland State University
RP Antoy, S (corresponding author), Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
EM antoy@cs.pdx.edu
CR Alqaddoumi Abdulla., 2010, Proc. of the Third International Workshop on Graph Computation Models, P127
   Antoy S, 2005, LECT NOTES COMPUT SC, V3474, P108
   Antoy S, 2005, J SYMB COMPUT, V40, P875, DOI 10.1016/j.jsc.2004.12.007
   ANTOY S, 1992, LECT NOTES COMPUT SC, V632, P143, DOI 10.1007/BFb0013825
   Antoy S., 1997, Springer LNCS, V1298, P16
   ANTOY S, 2002, LNCS, V2441, P67
   Antoy S., 2006, P 3 INT WORKSHOP TER, P61
   Antoy S, 2006, LECT NOTES COMPUT SC, V4079, P87, DOI 10.1007/11799573_9
   Antoy S, 2006, LECT NOTES COMPUT SC, V3901, P6, DOI 10.1007/11680093_2
   Antoy S, 2010, J SYMB COMPUT, V45, P501, DOI 10.1016/j.jsc.2010.01.006
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Antoy S, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P73, DOI 10.1145/1599410.1599420
   Antoy Sergio., 2001, Proc. of the 3rd ACM SIGPLAN international conference on Principles and practice of declarative programming, P199, DOI [10.1145/773184.773205, DOI 10.1145/773184.773205]
   Baader Franz, 1998, TERM REWRITING ALL
   Bezem M., 2003, Cambridge Tracts in Theoretical Computer Science
   BRASSEL B, 2011, THESIS CHRISTIANALBR
   Brassel B, 2007, LECT NOTES COMPUT SC, V4807, P122
   Caballero R., 2007, TOY MULTIPARADIGM DE
   Dershowitz Nachum, 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, P243, DOI 10.1016/b978-0-444-88074-1.50011-1
   Echahed R, 1998, LOGIC PROGRAMM, P325
   ECHAHED R, 1997, 985I IMAG
   HANUS M, 2008, PAKCS 1 9 1 PORTLAND
   Hanus Michael., 2006, CURRY INTEGRATED FUN
   Huet G., 1991, COMPUTATIONAL LOGIC
   HUSSMANN H, 1992, J LOGIC PROGRAM, V12, P237, DOI 10.1016/0743-1066(92)90026-Y
   ISO Prolog standard, 1995, 132111 ISOIEC
   KLOP JW, 1992, HDB LOGIC COMPUTER S, V2, P2
   Lopez-Fraguas Francisco J., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P197, DOI 10.1145/1273920.1273947
   López-Fraguas FJ, 2008, LECT NOTES COMPUT SC, V4989, P147
   ODONNELL MJ, 1985, EQUATIONAL LOGIC PRO
   PLUMP D., 1999, HDB GRAPH GRAMMARS C, V2, P3, DOI DOI 10.1142/9789812815149_0001
   TOLMACH A, 2004, P 9 INT C FUNCT PROG, P90
NR 32
TC 8
Z9 10
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 713
EP 730
DI 10.1017/S1471068411000263
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baselice, S
   Bonatti, PA
AF Baselice, Sabrina
   Bonatti, Piero A.
TI A decidable subclass of finitary programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming
CY JUL 16-19, 2010
CL Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Logic Programming Comm
DE answer set programming with function symbols; infinite stable models;
   norms
ID FINITELY RECURSIVE-PROGRAMS
AB Answer set programming-the most popular problem solving paradigm based on logic programs-has been recently extended to support uninterpreted function symbols (Syrjanen 2001; Bonatti 2004; Simkus and Eiter 2007; Gebser et al. 2007; Baselice et al. 2009; Calimeri et al. 2008). All of these approaches have some limitation. In this paper we propose a class of programs called FP2 that enjoys a different trade-off between expressiveness and complexity. FP2 is inspired by the extension of finitary normal programs with local variables introduced in (Bonatti 2004, Section 5). FP2 programs enjoy the following unique combination of properties: (i) the ability of expressing predicates with infinite extensions; (ii) full support for predicates with arbitrary arity; (iii) decidability of FP2 membership checking; (iv) decidability of skeptical and credulous stable model reasoning for call-safe queries. Odd cycles are supported by composing FP2 programs with argument restricted programs.
C1 [Baselice, Sabrina; Bonatti, Piero A.] Univ Naples Federico 2, Naples, Italy.
C3 University of Naples Federico II
RP Baselice, S (corresponding author), Univ Naples Federico 2, Naples, Italy.
OI BONATTI, Piero Andrea/0000-0003-1436-5660
CR Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   BONATTI PA, 2001, LECT NOTES ARTIF INT, V2173, P416
   Bonatti PA, 2008, ARTIF INTELL, V172, P1833, DOI 10.1016/j.artint.2008.07.002
   BOSSI A, 1994, THEOR COMPUT SCI, V124, P297, DOI 10.1016/0304-3975(92)00019-N
   Calimeri F, 2009, LECT NOTES COMPUT SC, V5753, P71, DOI 10.1007/978-3-642-04238-6_9
   EITER T., 1997, LPNMR, P364
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GENAIM S, 2002, LNCS, V2294, P126
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Lloyd J. W., 1984, Foundations of Logic Programming
   NIEMELA I, 1997, LNCS, V1265, P421
   Simkus M, 2007, LECT NOTES ARTIF INT, V4790, P514, DOI 10.1007/978-3-540-75560-9_37
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   [No title captured]
NR 16
TC 7
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 481
EP 496
DI 10.1017/S1471068410000232
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Delgrande, JP
AF Delgrande, James P.
TI A program-level approach to revising logic programs under the answer set
   semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer set programming; belief change; belief revision
AB An approach to the revision of logic programs under the answer set semantics is presented. For programs P and Q, the goal is to determine the answer sets that correspond to the revision of P by Q, denoted P * Q. A fundamental principle of classical (AGM) revision, and the one that guides the approach here, is the success postulate. In AGM revision, this stipulates that alpha is an element of K * alpha. By analogy with the success postulate, for programs P and Q, this means that the answer sets of Q will in some sense be contained in those of P * Q. The essential idea is that for P * Q, a three-valued answer set for Q, consisting of positive and negative literals, is first determined. The positive literals constitute a regular answer set, while the negated literals make up a minimal set of naf literals required to produce the answer set from Q. These literals are propagated to the program P, along with those rules of Q that are not decided by these literals. The approach differs from work in update logic programs in two main respects. First, we ensure that the revising logic program has higher priority, and so we satisfy the success postulate; second, for the preference implicit in a revision P * Q, the program Q as a whole takes precedence over P, unlike update logic programs, since answer sets of Q are propagated to P. We show that a core group of the AGM postulates are satisfied, as are the postulates that have been proposed for update logic programs.
C1 Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
C3 Simon Fraser University
RP Delgrande, JP (corresponding author), Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
EM jim@cs.sfu.ca
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   [Anonymous], 1988, P AAAI 88
   [Anonymous], 1988, Knowledge in flux: Modeling the dynamics of epistemic states
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Delgrande JP, 2003, ARTIF INTELL, V151, P1, DOI 10.1016/S0004-3702(03)00111-5
   DELGRANDE JP, 2008, P 11 INT C PRINC KNO, P411
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   FOO N, 1997, P 15 INT JOINT C ART, V1, P82
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Sakama C, 1999, LECT NOTES ARTIF INT, V1730, P147, DOI 10.1007/3-540-46767-X_11
   Satoh K., 1988, P INT C 5 GENERATION, P455
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   TASHARROFI S, 2009, BELIEF REVISIO UNPUB
   WILLIAMS MA, 1995, P 14 INT JOINT C ART, P1541
   Zhang Y, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P403
NR 19
TC 9
Z9 9
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 565
EP 580
DI 10.1017/S1471068410000281
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ruckhaus, E
   Ruiz, E
   Vidal, ME
AF Ruckhaus, Edna
   Ruiz, Eduardo
   Vidal, Maria-Esther
TI Query evaluation and optimization in the semantic web
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
AB We address the problem of answering Web ontology queries efficiently. An ontology is formalized as a deductive ontology base (DOB), a deductive database that comprises the ontology's inference axioms and facts. A cost-based query optimization technique for DOB is presented. A hybrid cost model is proposed to estimate the cost and cardinality of basic and inferred facts. Cardinality and cost of inferred facts are estimated using an adaptive sampling technique, while techniques of traditional relational cost models are used for estimating the cost of basic facts and conjunctive ontology queries. Finally, we implement a dynamic-programming optimization algorithm to identify query evaluation plans that minimize the number of intermediate inferred facts. We modeled a subset of the Web ontology language Lite as a DOB and performed an experimental study to analyze the predictive capacity of our cost model and the benefits of the query optimization technique. Our study has been conducted over synthetic and real-world Web ontology language, ontologies and shows that the techniques are accurate and improve query performance.
C1 [Ruckhaus, Edna; Ruiz, Eduardo; Vidal, Maria-Esther] Univ Simon Bolivar, Dept Comp Sci, Caracas 1080, Venezuela.
C3 Simon Bolivar University
RP Ruckhaus, E (corresponding author), Univ Simon Bolivar, Dept Comp Sci, Caracas 1080, Venezuela.
EM ruckhaus@ldc.usb.ve; eruiz@ldc.usb.ve; mvidal@ldc.usb.ve
RI Vidal, Maria-Esther/AAU-8163-2020
OI Vidal, Maria-Esther/0000-0003-1160-8727
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], PROCEEDINGS OF THE 1
   BRUIJN J, 2004, OWL LITE WSML WORKIN
   CALVANESE D, 2005, P WORKSH OWL EXP DIR
   EITER T, 2006, P NMR INT WORKSH NON
   GROSOF B, 2003, P WWW INT WORLD WID
   HAARSLEV V, 2004, P KR KNOWL REAS C AA
   HORROCKS I, 2005, P CADE INT C AUT DED, P177
   HUSTADT U, 2005, P DL INT WORKSH DESC
   LING Y, 1992, SIGMOD REC, V21, P12
   LIPTON RJ, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P40, DOI 10.1145/298514.298540
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   MOTIK B, 2003, P KRDB 03, P39
   *OP CLIN ORG, 2001, GALEN COMM REF MOD
   PAN Z, 2003, P PSSS WORKSH PRACT
   *PROT STAFF, 1999, PROT OWL ONT ED SEM
   RAMAKRISHNAN R, 1995, J LOGIC PROGRAM, V23, P125, DOI 10.1016/0743-1066(94)00039-9
   Ramakrishnan Raghu, 2002, Database Management Systems
   SHELL M, 2002, SCHEMAWEB
   SIRIN E, 2006, P DL INT WORKSH DESC
   STAUDT M, 1999, SELECTED AREAS CRYPT, P197
   WANG T, 2006, E EON WORKSH EV ONT
NR 22
TC 6
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 393
EP 409
DI 10.1017/S1471068407003225
PN 3
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yamasaki, S
AF Yamasaki, Susumu
TI Logic programming with default, weak and strict negations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE negation in logic programming; 3-valued logic
ID WELL-FOUNDED SEMANTICS; KNOWLEDGE; FIXPOINT; SOUND
AB This paper looks at logic programming with three kinds of negation: default, weak and strict negations. A 3-valued logic model theory is discussed for logic programs with three kinds of negation. The procedure is constructed for negations so that a soundness of the procedure is guaranteed in terms of 3-valued logic model theory.
C1 Okayama Univ, Grad Sch Nat Sci & Technol, Dept Comp Sci, Okayama 7008530, Japan.
C3 Okayama University
RP Yamasaki, S (corresponding author), Okayama Univ, Grad Sch Nat Sci & Technol, Dept Comp Sci, Okayama 7008530, Japan.
EM yamasaki@momo.it.okayama-u.ac.jp
OI Yamasaki, Susumu/0000-0001-7895-5040
CR BARAL CR, 1993, J AUTOM REASONING, V10, P399, DOI 10.1007/BF00881799
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gelfond M., 1990, P 7 INT C LOG PROGR, P579
   Gottlob G, 1996, THEOR COMPUT SCI, V166, P221, DOI 10.1016/0304-3975(95)00207-3
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   KUNEN K, 1989, J LOGIC PROGRAM, V7, P231, DOI 10.1016/0743-1066(89)90022-8
   Lloyd JohnWylie., 1993, FDN LOGIC PROGRAMMIN, Vsecond
   PEARCE D, 1991, LECT NOTES ARTIF INT, V475, P311
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Przymusinski TC, 1997, ARTIF INTELL, V95, P115, DOI 10.1016/S0004-3702(97)00032-5
   Ruiz C, 1998, ANN MATH ARTIF INTEL, V22, P333, DOI 10.1023/A:1018951805211
   Ruiz C., 1997, Fundamenta Informaticae, V32, P163
   SCHMITT PH, 1986, LECT NOTES COMPUT SC, V230, P190
   Shepherdson J. C., 1987, FDN DEDUCTIVE DATABA, P19
   SHEPHERDSON JC, 1989, THEOR COMPUT SCI, V65, P343, DOI 10.1016/0304-3975(89)90106-0
   Stuckey P. J., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P328, DOI 10.1109/LICS.1991.151657
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANGELDER A, 1993, J COMPUT SYST SCI, V47, P185, DOI 10.1016/0022-0000(93)90024-Q
   Yamasaki S, 1996, THEOR COMPUT SCI, V160, P283, DOI 10.1016/0304-3975(95)00109-3
   Yamasaki S, 2001, THEOR COMPUT SCI, V266, P489, DOI 10.1016/S0304-3975(00)00201-2
   YOU JH, 1995, J LOGIC PROGRAM, V22, P211, DOI 10.1016/0743-1066(94)00023-Y
NR 21
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2006
VL 6
BP 737
EP 749
DI 10.1017/S1471068406002791
PN 6
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 106XJ
UT WOS:000242135000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Greco, G
   Greco, S
   Trubitsyna, I
   Zumpano, E
AF Greco, G
   Greco, S
   Trubitsyna, I
   Zumpano, E
TI Optimization of bound disjunctive queries with constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 9th International Conference on Logic Programming Artifical Intelligence
   and Reasoning
CY OCT 14-20, 2002
CL Tbilisi, REP OF GEORGIA
DE Disjunctive Datalog; constraints; theory; magic set technique
ID FOUNDED SEMANTICS; STABLE MODEL; COMPUTATION; INDEFINITE; PERFECT
AB This paper presents a technique for the optimization of bound queries over disjunctive deductive databases with constraints. The proposed approach is an extension of the well-known Magic-Set technique and is well-suited for being integrated in current bottom-up (stable) model inference engines. More specifically, it is based on the exploitation of binding propagation technique, which reduce the size of the data relevant to answer the query and, consequently, reduces both the complexity of computing a single model and the number of models to be considered. The motivation of this work stems from the observation that traditional binding propagation optimization techniques for bottom-up model generator systems, simulating the goal driven evaluation of top-down engines, are only suitable for positive (disjunctive) queries, while hard problems are expressed using unstratified negation. The main contribution of the paper consists in the extension of a previous technique, defined for positive disjunctive queries, to queries containing both disjunctive heads and constraints (a simple and expressive form of unstratified negation). As the usual way of expressing declaratively hard problems is based on the guess-and-check technique, where the guess part is expressed by means of disjunctive rules and the check part is expressed by means of constraints, the technique proposed here is highly relevant for the optimization of queries expressing hard problems. The value of the technique has been proved by several experiments.
C1 Univ Calabria, DEIS, I-87030 Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Univ Calabria, DEIS, I-87030 Arcavacata Di Rende, Italy.
EM ggreco@si.deis.unical.it; greco@si.deis.unical.it;
   irina@si.deis.unical.it; zumpano@si.deis.unical.it
RI Trubitsyna, Irina/AAY-7265-2020; Greco, Gianluigi/AAD-6503-2021; Greco,
   Gianluigi/I-7052-2012
OI TRUBITSYNA, Irina/0000-0002-9031-0672; Greco,
   Gianluigi/0000-0002-5799-6828; Greco, Sergio/0000-0003-2966-3484
CR [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   [Anonymous], 1992, Foundations of Disjunctive Logic Programming
   Baral C., 1992, Annals of Mathematics and Artificial Intelligence, V5, P89, DOI 10.1007/BF01543473
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   Brass S., 1999, J LOGIC PROGRAM, V38, P167
   BRASS S, 1994, P NONM EXT LOG PROGR, P127
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Chen W., 1993, PODS, P168
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Cholewinski P, 1996, MOR KAUF R, P518
   Clark K. L., 1978, Logic and data bases, P293
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   FERNANDEZ JA, 1995, COMPUT INTELL-US, V11, P89, DOI 10.1111/j.1467-8640.1995.tb00024.x
   FERNANDEZ JA, 1995, J LOGIC PROGRAM, V25, P33, DOI 10.1016/0743-1066(94)00106-G
   FREIRE J., 1997, P 4 INT C LOG PROGR, V1265, P2
   Furfaro F, 2004, THEOR PRACT LOG PROG, V4, P75, DOI 10.1017/S1471068403001704
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   GRANT J, 1986, ADV COMPUTING RES, V3, P89
   Greco S, 1998, NEW GENERAT COMPUT, V16, P373, DOI 10.1007/BF03037430
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   Greco S, 1999, LOGIC PROGRAMM, P441
   Greco S, 1995, LECT NOTES COMPUT SC, V944, P523
   JANHUNEN T, 2000, P 7 INT C PRINC KNOW, P411
   Johnson CA, 2002, FUND INFORM, V49, P325
   Johnson CA, 2001, J AUTOM REASONING, V26, P333, DOI 10.1023/A:1010744127526
   Johnson JG, 1999, COMPR PSYCHIAT, V40, P31, DOI 10.1016/S0010-440X(99)90073-1
   KOWALSKI RA, 1984, COMPUTERS APPL INTEL, V3, P68
   Leone N, 2002, LECT NOTES ARTIF INT, V2424, P537, DOI 10.1007/3-540-45757-7_50
   LIN F, 2002, P 18 NAT C ART INT A
   LIU KC, 1990, ACM T DATABASE SYST, V15, P1, DOI 10.1145/77643.77644
   MINKER J, 1990, J LOGIC PROGRAM, V9, P45, DOI 10.1016/0743-1066(90)90033-2
   Minker Jack., 1982, INT C AUTOMATED DEDU, P292
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   NIEMELA I, 1996, P 5 WORKSH THEOR PRO, P278
   NIEMELA I, 2003, P SCAND C ART INT, P189
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   PRZYMUSINSKI TC, 1995, ANN MATH ARTIF INTEL, V14, P323, DOI 10.1007/BF01530826
   RAMAKRISHNAN R, 1993, J COMPUT SYST SCI, V47, P222, DOI 10.1016/0022-0000(93)90025-R
   Ross K. A., 1990, Deductive and Object-Oriented Databases. Proceedings of the First International Conference (DOOD89), P385
   Shen YD, 2002, J AUTOM REASONING, V28, P53, DOI 10.1023/A:1020116927466
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Ullman J. D., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P140, DOI 10.1145/73721.73736
   Wang K.-C., 2001, Proceedings of the Seventh Annual Conference of Asia Pacific Tourism Association, P305
   Wang KW, 2000, J LOGIC PROGRAM, V45, P105, DOI 10.1016/S0743-1066(00)00004-2
   Yahya A., 1985, Journal of Automated Reasoning, V1, P141, DOI 10.1007/BF00244994
   Yahya AH, 2002, J AUTOM REASONING, V28, P1, DOI 10.1023/A:1020109502432
   YAHYA AH, 2000, J DATA KNOWLEDGE ENG, P219
   YUAN LY, 1998, P INT S PRINC DAT SY, P66
   ZUMPANO E, 2004, P ACM S APPL COMP, P692
NR 52
TC 9
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2005
VL 5
BP 713
EP 745
DI 10.1017/S1471068404002273
PN 6
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 987BP
UT WOS:000233493700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brand, S
   Apt, KR
AF Brand, S
   Apt, KR
TI Schedulers and redundancy for a class of constraint propagation rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint programming; rule-based programming; constraint propagation
AB We study here schedulers for a class of rules that naturally arise in the context of rule-based constraint programming. We systematically derive a scheduler for them from a generic iteration algorithm of Apt (2000). We apply this study to so-called membership rules of Apt and Monfroy (2001). This leads to an implementation that yields a considerably better performance for these rules than their execution as standard CHR rules. Finally, we show how redundant rules can be identified and how appropriately reduced sets of rules can be computed.
C1 CWI, NL-1090 GB Amsterdam, Netherlands.
   Natl Univ Singapore, Singapore 117548, Singapore.
C3 National University of Singapore
RP CWI, POB 94079, NL-1090 GB Amsterdam, Netherlands.
EM sebastian.brand@cwi.nl; apt@comp.nus.edu.sg
CR ABDENNADHER S, 2001, INT WORKSH FUNCT CON
   ABDENNADHER S, 2001, P 3 INT C PRINC PRAC, P127
   [Anonymous], 1952, INTRO METAMATHEMATIC
   Apt KR, 2001, THEOR PRACT LOG PROG, V1, P713, DOI 10.1017/S1471068401000072
   Apt KR, 2000, ACM T PROGR LANG SYS, V22, P1002, DOI 10.1145/371880.371884
   Apt KR, 1999, THEOR COMPUT SCI, V221, P179, DOI 10.1016/S0304-3975(99)00032-8
   BRAND S, 2001, CP2001 POST C WORKSH
   EGENHOFER MJ, 1991, LECT NOTES COMPUT SC, V525, P144
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   HOLZBAUR C, 2001, LECT NOTES COMPUTER, V2237, P74
NR 10
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 441
EP 465
DI 10.1017/S1471068405002401
PN 4-5
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU May, W
AF May, W
TI XPath-logic and XPathLog: A logic-programming style XML data
   manipulation language
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE XML; XPath; logic programming; information integration
ID SEMISTRUCTURED DATA
AB We define XPathLog as a Datalog-style extension of XPath. XPathLog provides a clear, declarative language for querying and manipulating XML whose perspectives arc especially in XML data integration. In Our characterization, the formal semantics is defined wrt. an edge-labeled graph-based model, which covers the XML data model. We give a complete, logic-based characterization of XML data and the main language concept Cor XML, XPath. XPath-Logic extends the XPath language with variable bindings and embeds it into first-order logic. XPathLog is then the Horn fragment of XPath-Logic, providing a Datalog-style, rule-based language for querying and manipulating X M L data. The model-theoretic semantics of XPath-Logic serves as the base of XPathLog as a logic-programming language, whereas also an equivalent answer-set semantics for evaluating XPathLog queries is given. In contrast to other approaches, the XPath syntax and semantics is also used for a declarative specification how the database Should be updated : when used in rule heads, XPath filters are interpreted as specifications of elements and properties Which Should he added to the database.
C1 Univ Gottingen, Inst Informat, Gottingen, Germany.
C3 University of Gottingen
RP Univ Gottingen, Inst Informat, Gottingen, Germany.
EM may@informatik.uni-goettingen.de
CR Abiteboul S., 1997, International Journal on Digital Libraries, V1, P68, DOI 10.1007/s007990050001
   Baru C, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P597, DOI 10.1145/304181.304590
   BAUMGARTNER R, 2001, INT C VER LARG DAT B, P119
   Baumgartner R., 2001, em Proceedings of the Artificial Intelligence on Logic for Programming, P548, DOI DOI 10.1007/3-540-45653-8_
   Bry F, 2002, LECT NOTES COMPUT SC, V2401, P255, DOI 10.1007/3-540-45619-8_18
   Buneman P, 2000, VLDB J, V9, P76, DOI 10.1007/s007780050084
   BUNEMAN P, 1996, ACM SIGMOD INT C MAN, P505
   Ceri S, 1999, COMPUT NETW, V31, P1171, DOI 10.1016/S1389-1286(99)00014-6
   Christophides V, 2000, SIGMOD REC, V29, P141, DOI 10.1145/335191.335395
   CLARK J, 1998, XT IMPLEMENTATION XS
   CLUET S, 1999, ACM INT C MAN DAT SI, P177
   Comai S, 2001, ACM T INFORM SYST, V19, P371, DOI 10.1145/502795.502797
   CONSENS M, 1990, ACM S PRINC DAT SYST, P404
   DEUTSCH A, 1999, 8 WWW C
   DEUTSCH A, 2000, ACM INT C MAN DAT SI, P431
   Fernandez M., 1997, SIGMOD Record, V26, P4, DOI 10.1145/262762.262763
   FERNANDEZ M, 1999, XML QUER LANG EXP EX
   FERNANDEZ MF, 1998, ACM SIGMOD, P414
   FLORESCU D, 1999, 3684 INRIA
   FROHN J, 1998, THESIS U FREIBURG
   FROHN J, 1994, INT C VER LARG DAT B, P273
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GOLDMAN R, 1999, WORKSH WEB DAT WEBDB, P25
   HOSOYA H, 2000, WEBDB, P111
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   KIFER M, 1989, ACM INT C MAN DAT SI, P134
   Lakshmanan LVS, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P239
   LEHTI P, 2001, THESIS TECHNISCHE U
   Ludäscher B, 1998, INFORM SYST, V23, P589, DOI 10.1016/S0306-4379(98)00030-1
   May W, 2002, LECT NOTES COMPUT SC, V2397, P165
   MAY W, 2001, LOPIX SYSTEM
   MAY W, 2001, INT WORKSH FDN MODEL
   MAY W, 2001, MONDIAL DATABASE
   May W., 1999, Tech. Rep. 131
   MAY W, 2001, THESIS U FREIBURG
   MAY W, 2001, INFORMATION INTEGRAT
   MAY W, 2001, INT C VERY LARG DAT, P707
   McHugh J., 1997, SIGMOD Record, V26, P54, DOI 10.1145/262762.262770
   PRZYMUSINSKI TC, 1988, FDN DEDUCTIVE DATABA, P191
   Robie J., 1999, XQL XML QUERY LANGUA
   SHANMUGASUNDARA.J, INT C VER LARG DAT B, P302
   SOFTWARE AG, 2001, QUIP XQERY IMPLEMENT
   TATARINOV I, 2001, ACM INT C MAN DAT SI, P133
   WADLER P, 1999, SEMANTICS XPATH
   *XMLINF, 1999, XML INF SET
   *XMQA, 2001, XML QU ALG
   *XMQD, 2001, XML QUER DAT MOD
   *XPATH, 1999, XML PATH LANG XPATH
   *XPQOF, 2001, XQUER 1 0 FORM SEM
   *XQUER, 2001, XQUER QUER LANG XML
   *XSLT, 1999, XSL TRANSF XSLT
   1998, DOMW3C
NR 52
TC 13
Z9 13
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2004
VL 4
BP 239
EP 287
DI 10.1017/S147106840300187X
PN 3
PG 49
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 819GE
UT WOS:000221302000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marek, VW
   Remmel, JB
AF Marek, VW
   Remmel, JB
TI On the expressibility of stable logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; Turing machines; expressibility
ID WELL-FOUNDED SEMANTICS; SYSTEM; POWER
AB Schlipf (1995) proved that Stable Logic Programming (SLP) solves all NP decision problems. We extend Schliprs result to prove that SLP solves all search problems in the class NP. Moreover, we do this in a uniform way as defined in Marek and Truszczynski (1991). Specifically, we show that there is a single DATALOG(-) program P-Trg such that given any Turing machine M, any polynomial p with non-negative integer coefficients and any input a of size n over a fixed alphabet Sigma, there is an extensional database edb(M,p,sigma) such that there is a one-to-one correspondence between the stable models of edb(M,p,sigma) boolean OR P-Trg and the accepting computations of the machine M that reach the final state in at most p(n) steps. Moreover, edb (M,p,sigma) can be computed in polynomial time from p, a and the description of M and the decoding of such accepting computations from its corresponding stable model of edb (M,p.sigma) boolean OR P-Trg can be computed in linear time. A similar statement holds for Default Logic with respect to Sigma(2)(P)-search problems.(1).
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   Univ Calif San Diego, Dept Math, La Jolla, CA 92093 USA.
C3 University of Kentucky; University of California System; University of
   California San Diego
RP Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM marek@cs.uky.edu; jremmel@ucsd.edu
CR Abiteboul S, 1995, FDN DATABASES
   APT K, 1990, FUND INFORM, V12, P1
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   APT KR, 1994, ACM T PROGR LANG SYS, V16, P687, DOI 10.1145/177492.177673
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   APT KR, 1990, HDB THEORETICAL COMP, P475
   BLAIR HA, 1995, ANN MATH ARTIF INTEL, V15, P209, DOI 10.1007/BF01534455
   BONATTI PA, 2001, P 17 INT JOINT C ART, P603
   Bowen K.A., 1982, Logic Programming, P153
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   Cadoli M, 1998, THEOR COMPUT SCI, V193, P215, DOI 10.1016/S0304-3975(97)00108-4
   Cenzer D., 1999, HDB RECURSIVE MATH, P623
   Cholewinski P, 1999, ARTIF INTELL, V112, P105, DOI 10.1016/S0004-3702(99)00053-3
   Cholewinski P, 1996, MOR KAUF R, P518
   Cook S. A., 1971, P 3 ANN ACM S THEOR, P151, DOI [10.1145/800157.805047, DOI 10.1145/800157.805047]
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DUNG PM, 1989, LOGIC PROGRAMM, P587
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Lifschitz V, 1999, LECT NOTES ARTIF INT, V1730, P373, DOI 10.1007/3-540-46767-X_28
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek V. W., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P124
   Marek V. W., 1993, NONMONOTONIC LOGIC C
   MAREK VW, 1994, J LOGIC PROGRAM, V21, P129, DOI 10.1016/S0743-1066(14)80008-3
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   NIEMELA I., 1998, P WORKSHOP COMPUTATI, P72
   NIEMELA I, 1996, P JOINT INT C S LOG, P289
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Rao P, 1997, LECT NOTES ARTIF INT, V1265, P430
   SCHLIPF JS, 1995, J COMPUT SYST SCI, V51, P64, DOI 10.1006/jcss.1995.1053
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   SYRJANEN T, 2001, MANUAL LPARSE VERSIO
   Ullman J., 1988, PRINCIPLES DATABASE, V1
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 41
TC 13
Z9 15
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 551
EP 567
DI 10.1017/S1471068403001777
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800007
DA 2024-07-18
ER

PT J
AU Zhang, Y
AF Zhang, Y
TI Handling defeasibilities in action domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE reasoning about action; temporal reasoning; logic programming; common
   sense reasoning; priority; defeasibility
ID LOGIC
AB Representing defeasibility is an important issue in common sense reasoning. In reasoning about action and change, this issue becomes more difficult because domain and action related defeasible information may conflict with general inertia rules. Furthermore, different types of defeasible information may also interfere with each other during the reasoning. In this paper, we develop a prioritized logic programming approach to handle defeasibilities in reasoning about action. In particular, we propose three action languages and AF(0), AF(1) and AF(2) which handle three types of defeasibilities in action domains named defeasible constraints, defeasible observations and actions with defeasible and abnormal effects respectively. Each language with a higher superscript can be viewed as an extension of the language with a lower superscript. These action languages inherit the simple syntax of A language but their semantics is developed in terms of transition systems where transition functions are defined based on prioritized logic programs. By illustrating various examples, we show that our approach eventually provides a powerful mechanism to handle various defeasibilities in temporal prediction and postdiction. We also investigate semantic properties of these three action languages and characterize classes of action domains that present more desirable solutions in reasoning about action within the underlying action languages.
C1 Univ Western Sydney, Sch Comp & Informat Technol, Penrith, NSW 1797, Australia.
C3 Western Sydney University
RP Zhang, Y (corresponding author), Univ Western Sydney, Sch Comp & Informat Technol, Locked Bag 1797, Penrith, NSW 1797, Australia.
EM yan@cit.uws.edu.au
CR APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Baral C, 1997, INT JOINT CONF ARTIF, P1441
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   ESHGHI K, 1989, P 6 INT C LOG PROGR, P234
   Geffner H, 1997, INT JOINT CONF ARTIF, P555
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   GOLDSZMIDT M, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P661
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   JABLONOWSKI J, 1996, P KI 96, P136
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   LUKASZEWICZ W, 1995, P INT JOINT C ART IN, P1950
   Marek V. W., 1993, NONMONOTONIC LOGIC C
   MCCAIN N, 1995, P IJCAI 95, P1978
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Sandewall E., 1994, FEATURES FLUENTS REP
   WINSLETT M, 1988, P AAAI 88, P89
   Zhang Y, 1997, LOGIC PROGRAMM, P69
   Zhang Y, 2001, AI COMMUN, V14, P183
   Zhang Y, 1999, THEOR COMPUT SCI, V220, P489, DOI 10.1016/S0304-3975(99)00011-0
   Zhang Y, 1997, INT JOINT CONF ARTIF, P82
   Zhang Y, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P403
   ZHANG Y, 2001, P 14 AUSTR JOINT C A, P630
NR 25
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2003
VL 3
BP 329
EP 376
DI 10.1017/S1471068402001606
PN 3
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 689AQ
UT WOS:000183469800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cappanera, P
   Gavanelli, M
   Nonato, M
   Roma, M
AF Cappanera, Paola
   Gavanelli, Marco
   Nonato, Maddalena
   Roma, Marco
TI Logic-Based Benders Decomposition in Answer Set Programming for Chronic
   Outpatients Scheduling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; logic-based Benders decomposition; outpatients
   appointment scheduling; chronic patients with comorbidities
AB In answer set programming (ASP), the user can define declaratively a problem and solve it with efficient solvers; practical applications of ASP are countless and several constraint problems have been successfully solved with ASP. On the other hand, solution time usually grows in a superlinear way (often, exponential) with respect to the size of the instance, which is impractical for large instances. A widely used approach is to split the optimization problem into subproblems (SPs) that are solved in sequence, some committing to the values assigned by others, and reconstructing a valid assignment for the whole problem by juxtaposing the solutions of the single SPs. On the one hand, this approach is much faster due to the superlinear behavior; on the other hand, it does not provide any guarantee of optimality: committing to the assignment of one SP can rule out the optimal solution from the search space. In other research areas, logic-Based Benders decomposition (LBBD) proved effective; in LBBD, the problem is decomposed into a master problem (MP) and one or several SPs. The solution of the MP is passed to the SPs that can possibly fail. In case of failure, a no-good is returned to the MP that is solved again with the addition of the new constraint. The solution process is iterated until a valid solution is obtained for all the SPs or the MP is proven infeasible. The obtained solution is provably optimal under very mild conditions. In this paper, we apply for the first time LBBD to ASP, exploiting an application in health care as case study. Experimental results show the effectiveness of the approach. We believe that the availability of LBBD can further increase the practical applicability of ASP technologies.
C1 [Cappanera, Paola; Roma, Marco] Univ Firenze, DINFO, Florence, Italy.
   [Gavanelli, Marco; Nonato, Maddalena] Univ Ferrara, DE, Ferrara, Italy.
C3 University of Florence; University of Ferrara
RP Cappanera, P (corresponding author), Univ Firenze, DINFO, Florence, Italy.
EM paola.cappanera@unifi.it; marco.gavanelli@unife.it;
   maddalena.nonato@unife.it; marco.roma@unifi.it
RI Nonato, Maddalena/G-8564-2013
OI ROMA, MARCO/0000-0002-0925-212X; Gavanelli, Marco/0000-0001-7433-5899
CR Alviano M., 2020, IT WORKSH PLANN SCHE
   Alviano M, 2018, INTELL ARTIF, V12, P109, DOI 10.3233/IA-170030
   Benini L, 2011, ANN OPER RES, V184, P51, DOI 10.1007/s10479-010-0718-x
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Cappanera P, 2023, J LOGIC COMPUT, V33, P1851, DOI 10.1093/logcom/exad038
   Cappanera P, 2022, OPTIMIZATION IN ARTIFICIAL INTELLIGENCE AND DATA SCIENCES, P213, DOI 10.1007/978-3-030-95380-5_19
   Cardellini M., 2021, RUL REAS 5 INT JOINT
   Caruso S, 2024, J LOGIC COMPUT, V34, P465, DOI 10.1093/logcom/exad017
   Dal Palù A, 2018, KUNSTL INTELL, V32, P157, DOI 10.1007/s13218-018-0551-y
   Dodaro C, 2022, THEOR PRACT LOG PROG, V22, P229, DOI 10.1017/S1471068421000090
   Dodaro C, 2021, THEOR PRACT LOG PROG, V21, P835, DOI 10.1017/S1471068421000363
   Dodaro C, 2017, LECT NOTES ARTIF INT, V10377, P301, DOI 10.1007/978-3-319-61660-5_27
   El-kholany Mohammed M. S., 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P165, DOI 10.1007/978-3-030-94479-7_11
   El-Kholany MMS, 2022, THEOR PRACT LOG PROG, V22, P623, DOI 10.1017/S1471068422000217
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   Fazel-Zarandi MM, 2009, LECT NOTES COMPUT SC, V5732, P344, DOI 10.1007/978-3-642-04244-7_28
   Galata G., 2021, P IT WORKSH PLANN SC
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Guido R, 2020, FLEX SERV MANUF J, V32, P102, DOI 10.1007/s10696-019-09354-7
   Hooker J. N., 2019, LOGIC BASED BENDERS
   Hooker JN, 2003, MATH PROGRAM, V96, P33, DOI 10.1007/s10107-003-0375-9
   Kaminski Roland., 2017, A tutorial on hybrid answer set solving with clingo
   Kifer M., 2018, DECLARATIVE LOGIC PR, V20
   Leutwiler F, 2022, EUR J OPER RES, V303, P525, DOI 10.1016/j.ejor.2022.02.043
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Riise A, 2016, EUR J OPER RES, V255, P719, DOI 10.1016/j.ejor.2016.06.015
   Schüller P, 2018, KUNSTL INTELL, V32, P151, DOI 10.1007/s13218-018-0542-z
   Zhu X., 2023, OMEGA-J DEATH DYING, V117, p102823.
NR 30
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 848
EP 864
AR PII S147106842300025X
DI 10.1017/S147106842300025X
EA JUL 2023
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001030348700001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Faber, W
   Mazzotta, G
   Ricca, F
AF Faber, Wolfgang
   Mazzotta, Giuseppe
   Ricca, Francesco
TI An Efficient Solver for ASP(Q)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE ASP with Quantifiers; Quantified Boolean Formulas; well-founded
   semantics
ID ANSWER; SEMANTICS; PROGRAMS; NP
AB Answer Set Programming with Quantifiers ASP(Q) extends Answer Set Programming (ASP) to allow for declarative and modular modeling of problems from the entire polynomial hierarchy. The first implementation of ASP(Q), called QASP, was based on a translation to Quantified Boolean Formulae (QBF) with the aim of exploiting the well-developed and mature QBF-solving technology. However, the implementation of the QBF encoding employed in qasp is very general and might produce formulas that are hard to evaluate for existing QBF solvers because of the large number of symbols and subclauses. In this paper, we present a new implementation that builds on the ideas of QASP and features both a more efficient encoding procedure and new optimized encodings of ASP(Q) programs in QBF. The new encodings produce smaller formulas (in terms of the number of quantifiers, variables, and clauses) and result in a more efficient evaluation process. An algorithm selection strategy automatically combines several QBF-solving back-ends to further increase performance. An experimental analysis, conducted on known benchmarks, shows that the new system outperforms QASP.
C1 [Faber, Wolfgang] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
   [Mazzotta, Giuseppe; Ricca, Francesco] Univ Calabria, Arcavacata Di Rende, Italy.
C3 University of Klagenfurt; University of Calabria
RP Faber, W (corresponding author), Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
EM Wolfgang.Faber@aau.at; giuseppe.mazzotta@unical.it;
   francesco.ricca@unical.it
FU MUR [2020FNEB27, CUPH23C22000280006]; PNRR project [PE0000013-FAIR]
FX This work was partially supported by MUR under PRIN project PINPOINT
   Prot. 2020FNEB27, CUPH23C22000280006, and PNRR project PE0000013-FAIR,
   Spoke 9 - Green-aware AI - WP9.1.
CR Amendola G, 2022, LECT NOTES ARTIF INT, V13416, P373, DOI 10.1007/978-3-031-15707-3_29
   Amendola G, 2021, ARTIF INTELL-AMST, V299, DOI 10.1016/j.artint.2021.103519
   Amendola G, 2020, ARTIF INTELL, V279, DOI 10.1016/j.artint.2019.103185
   Amendola G, 2019, THEOR PRACT LOG PROG, V19, P705, DOI 10.1017/S1471068419000140
   Bogaerts B, 2016, THEOR PRACT LOG PROG, V16, P570, DOI 10.1017/S1471068416000387
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P205, DOI 10.1017/S1471068418000546
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   FABER W., 2022, PADL, V13165, P42
   FABER W., 2022, HYDRA RCRALPNMR, V3281, P78
   Fandinno J, 2021, THEOR PRACT LOG PROG, V21, P663, DOI 10.1017/S1471068421000259
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janhunen Tomi, 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P135, DOI 10.1007/978-3-030-94479-7_9
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janhunen T, 2018, KUNSTL INTELL, V32, P183, DOI 10.1007/s13218-018-0529-9
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   Pulina L, 2019, ARTIF INTELL, V274, P224, DOI 10.1016/j.artint.2019.04.002
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 24
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 948
EP 964
AR PII S1471068423000121
DI 10.1017/S1471068423000121
EA JUL 2023
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001022765900001
DA 2024-07-18
ER

PT J
AU Dodampegama, H
   Sridharan, M
AF Dodampegama, Hasra
   Sridharan, Mohan
TI Knowledge-based Reasoning and Learning under Partial Observability in Ad
   Hoc Teamwork
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation; non-monotonic logical reasoning; ecological
   rationality; ad hoc teamwork; applications of logic programming
AB Ad hoc teamwork (AHT) refers to the problem of enabling an agent to collaborate with teammates without prior coordination. State of the art methods in AHT are data-driven, using a large labeled dataset of prior observations to model the behavior of other agent types and to determine the ad hoc agent's behavior. These methods are computationally expensive, lack transparency, and make it difficult to adapt to previously unseen changes. Our recent work introduced an architecture that determined an ad hoc agent's behavior based on non-monotonic logical reasoning with prior commonsense domain knowledge and models learned from limited examples to predict the behavior of other agents. This paper describes KAT, a knowledge-driven architecture for AHT that substantially expands our prior architecture's capabilities to support: (a) online selection, adaptation, and learning of the behavior prediction models; and (b) collaboration with teammates in the presence of partial observability and limited communication. We illustrate and experimentally evaluate KAT's capabilities in two simulated benchmark domains for multiagent collaboration: Fort Attack and Half Field Offense. We show that KAT's performance is better than a purely knowledge-driven baseline, and comparable with or better than a state of the art data-driven baseline, particularly in the presence of limited training data, partial observability, and changes in team composition.
C1 [Dodampegama, Hasra; Sridharan, Mohan] Univ Birmingham, Sch Comp Sci, Intelligent Robot Lab, Birmingham, England.
C3 University of Birmingham
RP Dodampegama, H (corresponding author), Univ Birmingham, Sch Comp Sci, Intelligent Robot Lab, Birmingham, England.
EM hhd968@student.bham.ac.uk; m.sridharan@bham.ac.uk
OI Sridharan, Mohan/0000-0001-9922-8969
FU U.S. Office of Naval Research [N00014-20-1-2390]
FX This work was supported in part by the U.S. Office of Naval Research
   Award N00014-20-1-2390. All conclusions are those of the authors alone.
CR [Anonymous], 2013, AAAI C ART INT
   Balai E., 2013, INT C LOG PROGR NONM
   Balduccini M., 2003, AAAI SPRING S LOG FO
   Baral C., 2010, Proceed- ings of the 9th International Conference on Autonomous Agents and Multiagent Systems, volume 1 of AAMAS '10, P259
   Baral C, 2022, ARTIF INTELL, V302, DOI 10.1016/j.artint.2021.103601
   Baral C, 2010, LECT NOTES ARTIF INT, V6214, P46
   Barrett S, 2017, ARTIF INTELL, V242, P132, DOI 10.1016/j.artint.2016.10.005
   Bowling M., 2005, AAAI, P53
   Chen S, 2020, AAAI CONF ARTIF INTE, V34, P7095
   Deka Ankur, 2021, Advances in Swarm Intelligence. 12th International Conference, ICSI 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12689), P13, DOI 10.1007/978-3-030-78743-1_2
   Dodampegama H., 2023, AAAI C ART INT
   Dodampegama H., 2023, Code
   Gelfond Michael, 2013, Journal of Applied Non-Classical Logic, V23, P105, DOI 10.1080/11663081.2013.798954
   Gigerenzer G., 2016, Minds, Models and Milieux, Archival Insights into the Evolution of Economics, P34, DOI [10.1057/9781137442505_1, DOI 10.1057/9781137442505_1]
   Gigerenzer G., 2020, Routledge Handbook of Bounded Rationality
   Gigerenzer G, 2011, ANNU REV PSYCHOL, V62, P451, DOI 10.1146/annurev-psych-120709-145346
   Hausknecht Matthew, 2016, AAMAS AD LEARN AG WO
   Katsikopoulos K. V., 2021, Classification in the Wild: The Science and Art of Transparent Decision Making
   Macke W, 2021, AAAI CONF ARTIF INTE, V35, P11290
   Mirsky R., 2022, EUROPEAN C MULTIAGEN
   Mota T, 2020, LECT NOTES ARTIF INT, V12520, P206, DOI 10.1007/978-3-030-66412-1_14
   Rahman A., 2021, INT C MACHINE LEARNI, V139
   Santos PM, 2021, LECT NOTES ARTIF INT, V12981, P648, DOI 10.1007/978-3-030-86230-5_51
   Son T., 2018, KUNSTL INTELL, V32
   Son TC, 2010, LECT NOTES ARTIF INT, V5948, P208
   Sridharan M., 2018, Advances in Cognitive Systems, V7, P77
   Sridharan M, 2023, AUTON AGENT MULTI-AG, V37, DOI 10.1007/s10458-022-09584-4
   Sridharan M, 2019, J ARTIF INTELL RES, V65, P87, DOI 10.1613/jair.1.11524
   Stone P, 2010, AAAI CONF ARTIF INTE, P1504
   Tran CS, 2010, LECT NOTES ARTIF INT, V6214, P1
   Wu F., 2011, Proceedings of the International Joint Conference on Artificial Intelligence, P439, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-081
   Zand J., 2022, INT C AUT AG MULT SY, P1771
   Zintgraf L., 2021, INT C AUTONOMOUS AGE
NR 33
TC 1
Z9 1
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 696
EP 714
AR PII S1471068423000091
DI 10.1017/S1471068423000091
EA JUN 2023
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001015888000001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Nguyen, TH
   Bundas, M
   Son, TC
   Balduccini, M
   Garwood, KC
   Griffor, ER
AF Thanh Hai Nguyen
   Bundas, Matthew
   Son, Tran Cao
   Balduccini, Marcello
   Garwood, Kathleen Campbell
   Griffor, Edward R.
TI Specifying and Reasoning about CPS through the Lens of the NIST CPS
   Framework
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE artificial intelligence; knowledge representation; automated reasoning
   and planning; cyber-physical system; answer set programming; concern
   satisfaction; CPS ontology
AB This paper introduces a formal definition of a Cyber-Physical System (CPS) in the spirit of the CPS Framework proposed by the National Institute of Standards and Technology (NIST). It shows that using this definition, various problems related to concerns in a CPS can be precisely formalized and implemented using Answer Set Programming (ASP). These include problems related to the dependency or conflicts between concerns, how to mitigate an issue, and what the most suitable mitigation strategy for a given issue would be. It then shows how ASP can be used to develop an implementation that addresses the aforementioned problems. The paper concludes with a discussion of the potentials of the proposed methodologies.
C1 [Thanh Hai Nguyen; Bundas, Matthew; Son, Tran Cao] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   [Balduccini, Marcello; Garwood, Kathleen Campbell] St Josephs Univ, Philadelphia, PA 19131 USA.
   [Griffor, Edward R.] NIST, Gaithersburg, MD 20899 USA.
C3 New Mexico State University; Saint Joseph's University; National
   Institute of Standards & Technology (NIST) - USA
RP Nguyen, TH (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM thanhnh@nmsu.edu; bundasma@nmsu.edu; stran@nmsu.edu; mbalducc@sju.edu;
   kcampbel@sju.edu; edward.griffor@nist.gov
OI Hai Nguyen, Thanh/0000-0001-9996-4720
FU GAANN grant [P200A180005]; NSF [1914635, 1757207, 1812628]; Direct For
   Computer & Info Scie & Enginr; Div Of Information & Intelligent Systems
   [1812628] Funding Source: National Science Foundation
FX Matthew Bundas has been supported by the GAANN grant #P200A180005. Tran
   Cao Son has been partially supported by the following NSF grants
   1914635, 1757207, and 1812628.
CR Aerts A, 2017, INTELL DAT CENT SYST, P287, DOI 10.1016/B978-0-12-803801-7.00019-5
   Balas E, 1975, Nonlinear Programming, V2, P279
   Baldoni M, 2018, AUTON AGENT MULTI-AG, V32, P349, DOI 10.1007/s10458-018-9382-3
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Baral C, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P507
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   DIddio A. C., 2017, CORRABS170201332
   Eiter T, 2007, LECT NOTES COMPUT SC, V4670, P23, DOI 10.1007/978-3-540-74610-2_3
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V3, P6
   Gelfond M., 1998, Selected Papers from the Workshop on Logic Programming and Knowledge Representation 1997, P164
   Ghallab M., 2004, AUTOMATED PLANNING T
   Griffor E., 2017, FRAMEWORK CYBER PHYS, V2
   Griffor EdwardR., 2017, Framework for cyber-physical systems: Volume, V1
   Lee Edward A., 2017, ACM Transactions on Cyber-Physical Systems, V1, DOI 10.1145/2912149
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Mistr M., 2017, SATISFIABILITY MODUL
   Moschopoulos, 2001, IFAC P VOLUMES, V34, P381
   Nguyen T., 2020, REASONING TRUSTWORTH
   Nguyen TH, 2018, LECT NOTES COMPUT SC, V10702, P186, DOI 10.1007/978-3-319-73305-0_13
   Nguyen TT, 2020, IEEE INT SYMP INFO, P37, DOI 10.1109/ISIT44484.2020.9174430
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Niemela I., 1999, P 5 INT C ON LOGIC P, P315
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Roehm H, 2019, ACM TRANS CYBER-PHYS, V3, DOI 10.1145/3306157
   Roy A, 2012, SECUR COMMUN NETW, V5, P929, DOI 10.1002/sec.299
   Shoukry Y, 2018, ACM TRANS CYBER-PHYS, V2, DOI 10.1145/3078621
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Tepjit S, 2019, J COMPUT DES ENG, V6, P527, DOI 10.1016/j.jcde.2019.04.002
   Nguyen TH, 2018, THEOR PRACT LOG PROG, V18, P656, DOI 10.1017/S1471068418000236
   Uluagac C.S., 2019, ACM TRANS CYBER-PHYS, V4, P2
   Wollman D. A., 2017, FRAMEWORK CYBER PHYS, V3
NR 34
TC 1
Z9 1
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 1029
EP 1069
AR PII S1471068422000035
DI 10.1017/S1471068422000035
EA MAR 2022
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000764427600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sanchez-Ordaz, MA
   Garcia-Contreras, I
   Perez, V
   Morales, JF
   Lopez-Garcia, P
   Hermenegildo, MV
AF Sanchez-Ordaz, Miguel A.
   Garcia-Contreras, Isabel
   Perez, Victor
   Morales, Jose F.
   Lopez-Garcia, Pedro
   Hermenegildo, Manuel V.
TI VeriFly: <i>On</i>-<i>the</i>-<i>fly Assertion Checking via
   Incrementality</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE On-the-fly assertion checking; program development environments; static
   analysis; abstract interpretation; incremental analysis; logic and
   constraint programming
ID HORN CLAUSES; VERIFICATION; SYSTEM; CIAO
AB Assertion checking is an invaluable programmer's tool for finding many classes of errors or verifying their absence in dynamic languages such as Prolog. For Prolog programmers, this means being able to have relevant properties, such as modes, types, determinacy, nonfailure, sharing, constraints, and cost, checked and errors flagged without having to actually run the program. Such global static analysis tools are arguably most useful the earlier they are used in the software development cycle, and fast response times are essential for interactive use. Triggering a full and precise semantic analysis of a software project every time a change is made can be prohibitively expensive. This is specially the case when complex properties need to be inferred for large, realistic code bases. In our static analysis and verification framework, this challenge is addressed through a combination of modular and incremental (context- and path-sensitive) analysis that is responsive to program edits, at different levels of granularity. In this tool paper, we present how the combination of this framework within an integrated development environment (IDE) takes advantage of such incrementality to achieve a high level of reactivity when reflecting analysis and verification results back as colorings and tooltips directly on the program text - the tool's VeriFly mode. The concrete implementation that we describe is Emacs-based and reuses in part off-the- shelf "on-the-fly" syntax checking facilities (flycheck). We believe that similar extensions are also reproducible with low effort in other mature development environments. Our initial experience with the tool shows quite promising results, with low latency times that provide early, continuous, and precise assertion checking and other semantic feedback to programmers during the development process. The tool supports Prolog natively, as well as other languages by semantic transformation into Horn clauses.
C1 [Sanchez-Ordaz, Miguel A.; Garcia-Contreras, Isabel; Perez, Victor; Morales, Jose F.; Lopez-Garcia, Pedro; Hermenegildo, Manuel V.] IMDEA Software Inst, Madrid, Spain.
   [Sanchez-Ordaz, Miguel A.; Garcia-Contreras, Isabel; Perez, Victor; Morales, Jose F.; Hermenegildo, Manuel V.] UPM, Madrid, Spain.
   [Lopez-Garcia, Pedro] Spanish Council Sci Res CSIC, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid; Consejo
   Superior de Investigaciones Cientificas (CSIC)
RP Sanchez-Ordaz, MA (corresponding author), IMDEA Software Inst, Madrid, Spain.; Sanchez-Ordaz, MA (corresponding author), UPM, Madrid, Spain.
EM ma.sanchez.ordaz@imdea.org; isabel.garcia@imdea.org;
   victor.perez@imdea.org; josef.morales@imdea.org; pedro.lopez@imdea.org;
   manuel.hermenegildo@imdea.org
RI Pérez León, Víctor Ernesto/T-2604-2019; Puyana, Victor Manuel
   Perez/I-1045-2017; Morales Caballero, Jose Francisco/JXY-5044-2024;
   Perez, Victor/JVZ-4702-2024; Lopez-Garcia, Pedro/KIA-1704-2024;
   Hermenegildo, Manuel/I-4418-2015
OI Pérez León, Víctor Ernesto/0000-0002-0608-727X; Morales Caballero, Jose
   Francisco/0000-0001-9782-8135; Lopez-Garcia, Pedro/0000-0002-1092-2071;
   Hermenegildo, Manuel/0000-0002-7583-323X; Perez,
   Victor/0000-0002-3302-8339
FU MINECO MICINN [PID2019-108528RB-C21]; FPU grant [16/04811]; Tezos
   foundation;  [M141047003 N-GREENS];  [P2018/TCS-4339 BLOQUES-CM]
FX Research partially funded by MINECO MICINN PID2019-108528RB-C21 ProCode
   project, FPU grant 16/04811, the Madrid M141047003 N-GREENS and
   P2018/TCS-4339 BLOQUES-CM programs, and the Tezos foundation. We are
   also grateful to the anonymous reviewers for their comments.
CR Bueno F., 1996, ESOP
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   Carro M., 2021, TECH REP
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E, 2022, THEOR PRACT LOG PROG, V22, P974, DOI 10.1017/S1471068421000211
   Dumortier V., 1993, WORKSHOP LP SYNTHESI
   Flanagan C, 2006, ACM SIGPLAN NOTICES, V41, P245, DOI 10.1145/1111320.1111059
   Gallagher J., 2020, VPT 2020, P50
   Garcia-Contreras Isabel, 2020, Logic-Based Program Synthesis and Transformation. 29th International Symposium, LOPSTR 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12042), P36, DOI 10.1007/978-3-030-45260-5_3
   Garcia-Contreras I, 2021, THEOR PRACT LOG PROG, V21, P196, DOI 10.1017/S1471068420000496
   Gómez-Zamalloa M, 2009, INFORM SOFTWARE TECH, V51, P1409, DOI 10.1016/j.infsof.2009.04.010
   Grebenshchikov S, 2012, LECT NOTES COMPUT SC, V7214, P549, DOI 10.1007/978-3-642-28756-5_46
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Henriksen KS, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo M. V., 2011, PROC INT WS SCRIPTS
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hill P., 1994, GOEDEL PROGRAMMING L
   Klemen M, 2018, PPDP'18: PROCEEDINGS OF THE 20TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, DOI 10.1145/3236950.3236970
   Lakshman T., 1991, INT LOGIC PROGRAMMIN
   Leino KRM, 2015, LECT NOTES COMPUT SC, V9206, P380, DOI 10.1007/978-3-319-21690-4_22
   Lopez-Garcia P, 2018, THEOR PRACT LOG PROG, V18, P167, DOI 10.1017/S1471068418000042
   Marriott K., 1993, ACM Letters on Programming Languages and Systems, V2, P181, DOI 10.1145/176454.176519
   Mendez-Lojo M., 2007, LNCS, V4915, P154, DOI DOI 10.1007/978-3-540-78769-3_11
   MYCROFT A, 1984, ARTIF INTELL, V23, P295, DOI 10.1016/0004-3702(84)90017-1
   Navas J, 2006, LECT NOTES COMPUT SC, V3819, P183
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Pérez V, 2020, LECT NOTES COMPUT SC, V12389, P7, DOI 10.1007/978-3-030-65474-0_2
   PFENNING F, 1992, TYPES LOGIC PROGRAMM
   Pietrzak P, 2006, LECT NOTES ARTIF INT, V4246, P392, DOI 10.1007/11916277_27
   Puebla G., 1996, Static Analysis. Third International Symposium, SAS'96 Proceedings, P270
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Rastogi A, 2015, ACM SIGPLAN NOTICES, V50, P167, DOI [10.1145/2775051.2676971, 10.1145/2676726.2676971]
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P693, DOI 10.1007/978-3-540-89982-2_59
   Siek Jeremy, 2006, WORKSHOP SCHEME FUNC, P81
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Stulova N, 2018, LECT NOTES COMPUT SC, V10702, P99, DOI 10.1007/978-3-319-73305-0_7
   Stulova N, 2018, SCI COMPUT PROGRAM, V155, P3, DOI 10.1016/j.scico.2017.12.006
   Tschannen J, 2011, LECT NOTES COMPUT SC, V7041, P382, DOI 10.1007/978-3-642-24690-6_26
   Wingen I., 2020, WS FUNCTIONAL CONSTR, V12560, P74
NR 44
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 768
EP 784
DI 10.1017/S1471068421000430
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800005
OA Green Published
DA 2024-07-18
ER

PT J
AU Bellodi, E
   Gavanelli, M
   Zese, R
   Lamma, E
   Riguzzi, F
AF Bellodi, Elena
   Gavanelli, Marco
   Zese, Riccardo
   Lamma, Evelina
   Riguzzi, Fabrizio
TI Nonground Abductive Logic Programming with Probabilistic Integrity
   Constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abduction; integrity constraints; distribution semantics; probabilistic
   IFF
AB Uncertain information is being taken into account in an increasing number of application fields. In the meantime, abduction has been proved a powerful tool for handling hypothetical reasoning and incomplete knowledge. Probabilistic logical models are a suitable framework to handle uncertain information, and in the last decade many probabilistic logical languages have been proposed, as well as inference and learning systems for them. In the realm of Abductive Logic Programming (ALP), a variety of proof procedures have been defined as well. In this paper, we consider a richer logic language, coping with probabilistic abduction with variables. In particular, we consider an ALP program enriched with integrity constraints a la IFF, possibly annotated with a probability value. We first present the overall abductive language and its semantics according to the Distribution Semantics. We then introduce a proof procedure, obtained by extending one previously presented, and prove its soundness and completeness.
C1 [Bellodi, Elena; Gavanelli, Marco; Zese, Riccardo; Lamma, Evelina] Univ Ferrara, Dept Engn, Ferrara, Italy.
   [Riguzzi, Fabrizio] Univ Ferrara, Dept Math & Comp Sci, Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Bellodi, E (corresponding author), Univ Ferrara, Dept Engn, Ferrara, Italy.
EM elena.bellodi@unife.it; marco.gavanelli@unife.it;
   riccardo.zese@unife.it; lme@unife.it; fabrizio.riguzzi@unife.it
RI Zese, Riccardo/Q-8581-2017; BELLODI, Elena/HNP-1127-2023; GAVANELLI,
   Marco/ISA-6918-2023
OI Zese, Riccardo/0000-0001-8352-6304; BELLODI, Elena/0000-0002-3717-3779;
   GAVANELLI, Marco/0000-0001-7433-5899
CR Alberti M, 2013, FUND INFORM, V124, P365, DOI 10.3233/FI-2013-839
   Alberti M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1380572.1380578
   Arvanitis A., 2006, SHORT PAP P 16 INT C
   Azzolini D, 2019, INFORMATION, V10, DOI 10.3390/info10110335
   Christiansen Henning, 2008, Constraint Handling Rules. Current Research Topics, P85, DOI 10.1007/978-3-540-92243-8_5
   Clark K. L., 1978, Logic and data bases, P293
   Dai W.-Z., 2021, P 35 C ART INT IJCAI
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Raedt L, 2004, LECT NOTES ARTIF INT, V3244, P19
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Fadja AN, 2017, LECT NOTES ARTIF INT, V10344, P89, DOI 10.1007/978-3-319-69775-8_5
   Fruhwirth T, 2020, FUND INFORM, V173, P253, DOI 10.3233/FI-2020-1924
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   Inoue K, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P810
   Kakas AC., 1998, HDB LOGIC ARTIFICIAL, P235, DOI DOI 10.1093/OSO/9780198537922.003.0007
   Kate R. J., 2009, IJCAI 09 WORKSHOP PL
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Muggleton SH, 2015, MACH LEARN, V100, P49, DOI 10.1007/s10994-014-5471-y
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Raghavan S. V., 2011, P 22 INT JOINT C ART, P2840
   Riguzzi F, 2021, MACH LEARN, V110, P723, DOI 10.1007/s10994-020-05911-6
   Rotella F., 2013, CEUR WORKSHOP PROC, V1068, P131
   Sato T., 1995, P INT C LOG PROGR, P715
   Turliuc Calin-Rares, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P759, DOI 10.1007/978-3-642-45221-5_51
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
NR 25
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 557
EP 574
AR PII S1471068421000417
DI 10.1017/S1471068421000417
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bertolucci, R
   Capitanelli, A
   Dodaro, C
   Leone, N
   Maratea, M
   Mastrogiovanni, F
   Vallati, M
AF Bertolucci, Riccardo
   Capitanelli, Alessio
   Dodaro, Carmine
   Leone, Nicola
   Maratea, Marco
   Mastrogiovanni, Fulvio
   Vallati, Mauro
TI Manipulation of Articulated Objects Using Dual-arm Robots via Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; robots manipulation; macro actions
ID MACRO-OPERATORS; COOPERATION; GENERATION; MODELS; SYSTEM; FF
AB The manipulation of articulated objects is of primary importance in Robotics and can be considered as one of the most complex manipulation tasks. Traditionally, this problem has been tackled by developing ad hoc approaches, which lack flexibility and portability. In this paper, we present a framework based on answer set programming (ASP) for the automated manipulation of articulated objects in a robot control architecture. In particular, ASP is employed for representing the configuration of the articulated object for checking the consistency of such representation in the knowledge base and for generating the sequence of manipulation actions. The framework is exemplified and validated on the Baxter dual-arm manipulator in the first, simple scenario. Then, we extend such scenario to improve the overall setup accuracy and to introduce a few constraints in robot actions execution to enforce their feasibility. The extended scenario entails a high number of possible actions that can be fruitfully combined together. Therefore, we exploit macro actions from automated planning in order to provide more effective plans. We validate the overall framework in the extended scenario, thereby confirming the applicability of ASP also in more realistic Robotics settings and showing the usefulness of macro actions for the robot-based manipulation of articulated objects.
C1 [Bertolucci, Riccardo; Dodaro, Carmine; Leone, Nicola] Univ Calabria, Commenda Di Rende, Italy.
   [Capitanelli, Alessio] Teseo Srl, Desenzano del Garda, BS, Italy.
   [Maratea, Marco; Mastrogiovanni, Fulvio] Univ Genoa, Genoa, Italy.
   [Vallati, Mauro] Univ Huddersfield, Huddersfield, W Yorkshire, England.
C3 University of Calabria; University of Genoa; University of Huddersfield
RP Bertolucci, R (corresponding author), Univ Calabria, Commenda Di Rende, Italy.
EM bertolucci@mat.unical.it; alessio.capitanelli@teseotech.com;
   dodaro@mat.unical.it; leone@mat.unical.it; marco.maratea@unige.it;
   fulvio.mastrogiovanni@unige.it; m.vallati@hud.ac.uk
RI Leone, Nicola/B-1890-2012; Vallati, Mauro/R-9385-2019; Maratea,
   Marco/AAR-5779-2020
OI Vallati, Mauro/0000-0002-8429-3570; Dodaro, Carmine/0000-0002-5617-5286;
   Mastrogiovanni, Fulvio/0000-0001-5913-1898; MARATEA,
   MARCO/0000-0002-9034-2527
CR Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   Andres Benjamin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P69, DOI 10.1007/978-3-319-23264-5_7
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bertolucci R., 2019, LECT NOTES COMPUTER, V11481
   Bodenhagen L, 2014, IEEE T AUTOM SCI ENG, V11, P749, DOI 10.1109/TASE.2014.2320157
   Botea A, 2005, J ARTIF INTELL RES, V24, P581, DOI 10.1613/jair.1696
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P256, DOI 10.1007/978-3-030-20528-7_19
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Capitanelli A, 2018, ROBOT AUTON SYST, V109, P139, DOI 10.1016/j.robot.2018.08.003
   Capitanelli A, 2017, LECT NOTES ARTIF INT, V10640, P483, DOI 10.1007/978-3-319-70169-1_36
   Chrpa L, 2019, AAAI CONF ARTIF INTE, P7546
   Chrpa L, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1544
   Chrpa L, 2010, KNOWL ENG REV, V25, P281, DOI 10.1017/S0269888910000159
   Coles A., 2007, ICAPS, P97
   Darvish K, 2018, MECHATRONICS, V51, P97, DOI 10.1016/j.mechatronics.2018.03.006
   Di Rosa E, 2010, CONSTRAINTS, V15, P485, DOI 10.1007/s10601-010-9095-y
   Di Rosa E, 2008, FRONT ARTIF INTEL AP, V178, P510, DOI 10.3233/978-1-58603-891-5-510
   Dimopoulos Y, 2017, LECT NOTES ARTIF INT, V10377, P286, DOI 10.1007/978-3-319-61660-5_26
   Erdem E, 2018, KUNSTL INTELL, V32, P143, DOI 10.1007/s13218-018-0544-x
   Erdem E, 2015, IEEE INT CONF ROBOT, P2007, DOI 10.1109/ICRA.2015.7139461
   Erdem E, 2013, THEOR PRACT LOG PROG, V13, P831, DOI 10.1017/S1471068413000525
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2013, LECT NOTES COMPUT SC, V8148, P348, DOI 10.1007/978-3-642-40564-8_35
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gerevini AE, 2015, AI COMMUN, V28, P323, DOI 10.3233/AIC-140641
   Giunchiglia E, 2006, FRONT ARTIF INTEL AP, V141, P377
   HARNAD S, 1990, PHYSICA D, V42, P335, DOI 10.1016/0167-2789(90)90087-6
   Heyer C, 2010, IEEE INT C INT ROBOT, P4749, DOI 10.1109/IROS.2010.5651294
   Hoffmann J, 2001, J ARTIF INTELL RES, V14, P253, DOI 10.1613/jair.855
   Howey R, 2004, PROC INT C TOOLS ART, P294
   KAUTZ H, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P359
   KORF RE, 1985, ARTIF INTELL, V26, P35, DOI 10.1016/0004-3702(85)90012-8
   Krüger J, 2009, CIRP ANN-MANUF TECHN, V58, P628, DOI 10.1016/j.cirp.2009.09.009
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   McCluskey TL, 1997, ARTIF INTELL, V95, P1, DOI 10.1016/S0004-3702(97)00034-9
   Nair Ashvin, 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P2146, DOI 10.1109/ICRA.2017.7989247
   Newton J., 2007, ICAPS, P256
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Schäpe B, 2018, P I C AUTOMAT PLAN S, P509
   Shen D, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P67
   Thomas A, 2019, P 2019 INT S ROB RES P 2019 INT S ROB RES
   Thomas A, 2018, P AAAI 2018 FALL S R
   Wakamatsu H, 2006, INT J ROBOT RES, V25, P371, DOI 10.1177/0278364906064819
   Yamakawa Y, 2013, INT J ADV ROBOT SYST, V10, DOI 10.5772/56783
NR 50
TC 3
Z9 3
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2021
VL 21
IS 3
BP 372
EP 401
AR PII S1471068420000459
DI 10.1017/S1471068420000459
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CJ
UT WOS:000672039200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Giordano, L
   Dupré, DT
AF Giordano, Laura
   Theseider Dupre, Daniele
TI An ASP approach for reasoning in a concept-aware multipreferential
   lightweight DL
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Nonmonotonic Reasoning; Description Logics; Preferences; ASP
ID RATIONAL CLOSURE; DESCRIPTION LOGICS; EPSILON-L; ENTAILMENT; COMPLEXITY
AB In this paper we develop a concept aware multi-preferential semantics for dealing with typicality in description logics, where preferences are associated with concepts, starting from a collection of ranked TBoxes containing defeasible concept inclusions. Preferences are combined to define a preferential interpretation in which defeasible inclusions can be evaluated. The construction of the concept-aware multipreference semantics is related to Brewka's framework for qualitative preferences. We exploit Answer Set Programming (in particular, asprin) to achieve defeasible reasoning under the multipreference approach for the lightweight description logic EL perpendicular to+
C1 [Giordano, Laura; Theseider Dupre, Daniele] Univ Piemonte Orientale, DISIT, Vercelli, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro
RP Giordano, L (corresponding author), Univ Piemonte Orientale, DISIT, Vercelli, Italy.
EM laura.giordano@uniupo.it; dtd@uniupo.it
OI GIORDANO, Laura/0000-0001-9445-7770; Theseider Dupre,
   Daniele/0000-0001-6798-4380
FU INDAM-GNCS Project 2019
FX We thank the anonymous referees for their helpful comments and
   suggestions. This research is partially supported by INDAM-GNCS Project
   2019.
CR [Anonymous], 1990, P 3 C THEORETICAL AS
   BAADER F, 1995, J AUTOM REASONING, V14, P149, DOI 10.1007/BF00883932
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Beierle C, 2018, ANN MATH ARTIF INTEL, V83, P247, DOI 10.1007/s10472-017-9571-9
   Bonatti PA, 2019, ARTIF INTELL, V274, P197, DOI 10.1016/j.artint.2019.04.001
   Bonatti PA, 2015, ARTIF INTELL, V222, P1, DOI 10.1016/j.artint.2014.12.010
   Bonatti PA, 2015, LECT NOTES COMPUT SC, V9366, P356, DOI 10.1007/978-3-319-25007-6_21
   Bonatti PA, 2011, J ARTIF INTELL RES, V42, P719
   Bonatti PA, 2009, J ARTIF INTELL RES, V35, P717, DOI 10.1613/jair.2763
   BOZZATO L., 2014, CEUR WORKSHOP PROC, V1193, P112
   Bozzato L, 2018, ARTIF INTELL, V257, P72, DOI 10.1016/j.artint.2017.12.005
   Brewka G, 2004, FR ART INT, V110, P303
   Brewka G., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1043
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Britz K., 2008, PRINCIPLES KNOWLEDGE, P476
   Casini G., 2013, 26 INT WORKSH DESCR, V1014, P600
   Casini G, 2019, INFORM SCIENCES, V501, P588, DOI 10.1016/j.ins.2018.09.037
   Casini G, 2013, J ARTIF INTELL RES, V48, P415, DOI 10.1613/jair.4062
   Casini G, 2010, LECT NOTES ARTIF INT, V6341, P77, DOI 10.1007/978-3-642-15675-5_9
   Deane G., 2015, 20 INT C LOG PROGR A, P67, DOI DOI 10.29007/8QR4
   Donini F. M., 2002, ACM Transactions on Computational Logic, V3, P177, DOI 10.1145/505372.505373
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1877714.1877717
   Gil O. F., 2014, CORR
   Giordano L., 2013, 26 INT WORKSH DESCR, V1014, P168
   GIORDANO L., 2011, 22 INT JOINT C ARTIF, P894
   Giordano L., 2020, CORR
   Giordano L, 2007, LECT NOTES ARTIF INT, V4790, P257, DOI 10.1007/978-3-540-75560-9_20
   Giordano L, 2018, FUND INFORM, V161, P135, DOI 10.3233/FI-2018-1698
   Giordano L, 2018, FUND INFORM, V159, P95, DOI 10.3233/FI-2018-1659
   Giordano L, 2016, THEOR PRACT LOG PROG, V16, P738, DOI 10.1017/S1471068416000399
   Gliozzi V, 2016, LECT NOTES COMPUT SC, V10037, P392, DOI 10.1007/978-3-319-49130-1_29
   Gottlob G., 2014, P 14 INT C PRINC KNO
   Kazakov Y, 2014, J AUTOM REASONING, V53, P1, DOI 10.1007/s10817-013-9296-3
   Knorr M, 2012, FRONT ARTIF INTEL AP, V242, P474, DOI 10.3233/978-1-61499-098-7-474
   KRAUS S, 1990, ARTIF INTELL, V44, P167, DOI 10.1016/0004-3702(90)90101-5
   Krötzsch M, 2010, LECT NOTES ARTIF INT, V6341, P234, DOI 10.1007/978-3-642-15675-5_21
   LEHMANN D, 1992, ARTIF INTELL, V55, P1, DOI 10.1016/0004-3702(92)90041-U
   LEHMANN D, 1995, ANN MATH ARTIF INTEL, V15, P61, DOI 10.1007/BF01535841
   Lieto A, 2018, LECT NOTES COMPUT SC, V11177, P189, DOI 10.1007/978-3-030-01851-1_19
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Pensel M, 2018, INT J APPROX REASON, V103, P28, DOI 10.1016/j.ijar.2018.08.005
   STRACCIA U, 1993, IJCAI-93, VOLS 1 AND 2, P676
NR 44
TC 9
Z9 9
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 751
EP 766
DI 10.1017/S1471068420000381
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500012
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Albert, E
   Bofill, M
   Borralleras, C
   Martin-Martin, E
   Rubio, A
AF Albert, Elvira
   Bofill, Miquel
   Borralleras, Cristina
   Martin-Martin, Enrique
   Rubio, Albert
TI Resource Analysis driven by (Conditional) Termination Proofs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE resource analysis; termination analysis; cost relation systems; upper
   bounds
ID COST-ANALYSIS; INFERENCE; BOUNDS
AB When programs feature a complex control flow, existing techniques for resource analysis produce cost relation systems (CRS) whose cost functions retain the complex flow of the program and, consequently, might not be solvable into closed-form upper bounds. This paper presents a novel approach to resource analysis that is driven by the result of a termination analysis. The fundamental idea is that the termination proof encapsulates the flows of the program which are relevant for the cost computation so that, by driving the generation of the CRS using the termination proof, we produce a linearly-bounded CRS (LB-CRS). A LB-CRS is composed of cost functions that are guaranteed to be locally bounded by linear ranking functions and thus greatly simplify the process of CRS solving. We have built a new resource analysis tool, named MaxCore, that is guided by the VeryMax termination analyzer and uses CoFloCo and PUBS as CRS solvers. Our experimental results on the set of benchmarks from the Complexity and Termination Competition 2019 for C Integer programs show that MaxCore outperforms all other resource analysis tools.
C1 [Albert, Elvira; Martin-Martin, Enrique; Rubio, Albert] Complutense Univ Madrid UCM, DSIC, E-28040 Madrid, Spain.
   [Bofill, Miquel] Univ Girona UdG, IMAE, E-17003 Girona, Spain.
   [Borralleras, Cristina] Cent Univ Catalonia UVic UCC, Univ Vic, Vic 08500, Barcelona, Spain.
C3 Complutense University of Madrid; Universitat de Girona; Universitat de
   Vic - Universitat Central de Catalunya (UVic-UCC)
RP Albert, E (corresponding author), Complutense Univ Madrid UCM, DSIC, E-28040 Madrid, Spain.
RI Bofill, Miquel/E-8327-2010; Borralleras, Cristina/H-7934-2015
OI Bofill, Miquel/0000-0003-0308-9867; Borralleras,
   Cristina/0000-0002-4667-0953; MARTIN-MARTIN, ENRIQUE/0000-0002-1664-018X
FU Spanish MICINN/FEDER, UE [RTI2018-094403-B-C31, RTI2018-094403-B-C33,
   RTI2018-095609-B-I00]; MINECO [TIN2015-69175-C4-2-R]; MINECO/FEDER, UE
   [TIN2015-69175-C4-3-R, TIN2015-66293-R]; CM project [S2018/TCS-4314]
FX This work was funded partially by the Spanish MICINN/FEDER, UE projects
   RTI2018-094403-B-C31, RTI2018-094403-B-C33 and RTI2018-095609-B-I00, the
   MINECO project TIN2015-69175-C4-2-R, the MINECO/FEDER, UE projects
   TIN2015-69175-C4-3-R and TIN2015-66293-R, and by the CM project
   S2018/TCS-4314.
CR Albert E, 2007, LECT NOTES COMPUT SC, V4421, P157
   Albert E, 2008, LECT NOTES COMPUT SC, V5079, P221
   Albert E, 2018, ACM T COMPUT LOG, V19, DOI 10.1145/3274278
   Borralleras C, 2017, LECT NOTES COMPUT SC, V10205, P99, DOI 10.1007/978-3-662-54577-5_6
   Brockschmidt M, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2866575
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Debray S. K., 1994, Static Analysis. First International Static Analysis Symposium, SAS '94 Proceedings, P255
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   Flores-Montoya Antonio, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P275, DOI 10.1007/978-3-319-12736-1_15
   FLORES-MONTOYA A, 2017, THESIS
   Garcia A, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P125, DOI 10.1145/2790449.2790524
   Giesl R, 2004, LECT NOTES COMPUT SC, V3091, P210
   Grech N., 2015, P 18 INT WORKSHOP SO, P12
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Kafle B, 2018, THEOR PRACT LOG PROG, V18, P553, DOI 10.1017/S1471068418000091
   Liqat U., 2016, LECT NOTES COMPUTER, V9964, P81
   Navas J, 2007, LECT NOTES COMPUT SC, V4670, P348, DOI 10.1007/978-3-540-74610-2_24
   SERRANO A, 2013, THEORY PRACT LOG P S, V13, P4
   Sharma Rahul, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P703, DOI 10.1007/978-3-642-22110-1_57
   Sinn M, 2014, LECT NOTES COMPUT SC, V8559, P745, DOI 10.1007/978-3-319-08867-9_50
   Spoto F, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709095
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
NR 22
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 722
EP 739
DI 10.1017/S1471068419000152
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fiorentino, A
   Leone, N
   Manna, M
   Perri, S
   Zangari, J
AF Fiorentino, Alessio
   Leone, Nicola
   Manna, Marco
   Perri, Simona
   Zangari, Jessica
TI Precomputing Datalog Evaluation Plans in Large-Scale Scenarios
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Datalog; Query Answering; Ontologies; Query-plan; Data Indexing
AB With the more and more growing demand for semantic Web services over large databases, an efficient evaluation of Datalog queries is arousing a renewed interest among researchers and industry experts. In this scenario, to reduce memory consumption and possibly optimize execution times, the paper proposes novel techniques to determine an optimal indexing schema for the underlying database together with suitable body-orderings for the Datalog rules. The new approach is compared with the standard execution plans implemented in DLV over widely used ontological benchmarks. The results confirm that the memory usage can be significantly reduced without paying any cost in efficiency.
C1 [Fiorentino, Alessio; Leone, Nicola; Manna, Marco; Perri, Simona; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Fiorentino, A (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM fiorentino@mat.unical.it; leone@mat.unical.it; manna@mat.unical.it;
   perri@mat.unical.it; zangari@mat.unical.it
RI Zangari, Jessica/AAA-6522-2021; Leone, Nicola/B-1890-2012; Perri,
   Simona/IQV-7425-2023; Manna, Marco/G-8966-2012
OI Zangari, Jessica/0000-0002-6418-7711; Manna, Marco/0000-0003-3323-9328;
   Fiorentino, Alessio/0000-0002-3298-0256; Perri,
   Simona/0000-0002-8036-5709
FU MIUR [CUP H24I17000080001]; MISE [F/050389/01-03/X32]; Regione Calabria
   [CUP J28C17000220006]
FX This work has been partially supported by MIUR under project
   "Declarative Reasoning over Streams" (CUP H24I17000080001) - PRIN 2017,
   by MISE under project "S2BDW" (F/050389/01-03/X32) - "Horizon2020" PON
   I&C2014-20, by Regione Calabria under project "DLV LargeScale" (CUP
   J28C17000220006) - POR Calabria 2014-20.
CR ALLOCCA C., 2019, CEUR WORKSHOP P, V2368, P10
   Allocca C, 2019, LECT NOTES ARTIF INT, V11468, P453, DOI 10.1007/978-3-030-19570-0_29
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   Amendola G, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5189
   [Anonymous], 2018, IJCAI
   [Anonymous], 2012, P AAAI
   CALI A, 2009, P DL 09
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   CALIMERI F, 2019, TPLP, P126
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Carral D, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P339
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Grau BC, 2012, J ARTIF INTELL RES, V43, P419
   Kontchakov R., 2011, IJCAI
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   Lutz C, 2013, LECT NOTES COMPUT SC, V8218, P314, DOI 10.1007/978-3-642-41335-3_20
   Mora J, 2013, LECT NOTES COMPUT SC, V8219, P376, DOI 10.1007/978-3-642-41338-4_24
   Ortiz M., 2013, CEUR WORKSHOP P, V1087
   STEFANONI G, 2012, CEUR WORKSHOP P, V846
NR 20
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1073
EP 1089
DI 10.1017/S147106841900036X
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500028
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pakin, S
AF Pakin, Scott
TI Performing fully parallel constraint logic programming on a quantum
   annealer
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE quantum annealing; quantum computing; constraint logic programming;
   Prolog; D-Wave
AB A quantum annealer exploits quantum effects to solve a particular type of optimization problem. The advantage of this specialized hardware is that it effectively considers all possible solutions in parallel, thereby potentially outperforming classical computing systems. However, despite quantum annealers having recently become commercially available, there are relatively few high-level programming models that target these devices. In this article, we show how to compile a subset of Prolog enhanced with support for constraint logic programming into a two-local Ising-model Hamiltonian suitable for execution on a quantum annealer. In particular, we describe the series of transformations one can apply to convert constraint logic programs expressed in Prolog into an executable form that bears virtually no resemblance to a classical machine model yet that evaluates the specified constraints in a fully parallel manner. We evaluate our efforts on a 1,095-qubit D-Wave 2X quantum annealer and describe the approach's associated capabilities and shortcomings.
C1 [Pakin, Scott] Los Alamos Natl Lab, Comp Computat & Stat Sci Div, MS B287, Los Alamos, NM 87545 USA.
C3 United States Department of Energy (DOE); Los Alamos National Laboratory
RP Pakin, S (corresponding author), Los Alamos Natl Lab, Comp Computat & Stat Sci Div, MS B287, Los Alamos, NM 87545 USA.
EM pakin@lanl.gov
RI Pakin, Scott/AAI-9757-2020
OI Pakin, Scott/0000-0002-5220-1985
FU Laboratory Directed Research and Development (LDRD) at Los Alamos
   National Laboratory; US Department of Energy [DE-AC52-06NA25396]
FX This work was supported by Laboratory Directed Research and Development
   (LDRD) funding at Los Alamos National Laboratory. Los Alamos National
   Laboratory is operated by Los Alamos National Security LLC for the US
   Department of Energy under contract DE-AC52-06NA25396.
CR [Anonymous], 2016, ABC SYSTEM SEQUENTIA
   BARAHONA F, 1982, J PHYS A-MATH GEN, V15, P3241, DOI 10.1088/0305-4470/15/10/028
   Bravyi S., 2006, ARXIVQUANTPH0611021V
   Bravyi S, 2017, COMMUN MATH PHYS, V349, P1, DOI 10.1007/s00220-016-2787-4
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   Bunyk PI, 2014, IEEE T APPL SUPERCON, V24, DOI 10.1109/TASC.2014.2318294
   Cai Jun, 2014, ARXIV14062741
   Choi V, 2008, QUANTUM INF PROCESS, V7, P193, DOI 10.1007/s11128-008-0082-9
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Cross Andrew W, 2017, Open quantum assembly language
   D-Wave Systems Inc., 2017, DEV GUID PYTH
   D-Wave Systems Inc., 2017, TOQ OV
   Dahl E. D., 2014, DEQO DIRECT EMBEDDIN
   Dutra I., 2010, CONSTRAINT LOGIC PRO
   Farhi E, 1998, PHYS REV A, V57, P2403, DOI 10.1103/PhysRevA.57.2403
   FEYNMAN RP, 1986, FOUND PHYS, V16, P507, DOI 10.1007/BF01886518
   FINNILA AB, 1994, CHEM PHYS LETT, V219, P343, DOI 10.1016/0009-2614(94)00117-0
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Green AS, 2013, ACM SIGPLAN NOTICES, V48, P333, DOI 10.1145/2499370.2462177
   Grover L. K., 1996, Proceedings of the Twenty-Eighth Annual ACM Symposium on the Theory of Computing, P212, DOI 10.1145/237814.237866
   Heim B., 2017, ARXIV170206248V1QUAN
   Hen I, 2011, PHYS REV E, V84, DOI 10.1103/PhysRevE.84.061152
   James R. P., 2011, ARXIV11013764QUANTPH
   JavadiAbhari A, 2015, PARALLEL COMPUT, V45, P2, DOI 10.1016/j.parco.2014.12.001
   Johnson MW, 2011, NATURE, V473, P194, DOI 10.1038/nature10012
   Kadowaki T, 1998, PHYS REV E, V58, P5355, DOI 10.1103/PhysRevE.58.5355
   Kahn H., 2000, 6169022000 IEC
   Kaminsky W. M., 2004, ARXIVQUANTPH0403090V
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Knight W, 2017, TECHNOL REV, V120, P54
   Lucas A, 2014, FRONT PHYS-LAUSANNE, V2, DOI 10.3389/fphy.2014.00005
   Microsoft Corp, 2017, Q PROGR LANG
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Pakin S, 2016, IEEE HIGH PERF EXTR
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Shor PW, 1997, SIAM J COMPUT, V26, P1484, DOI 10.1137/S0036144598347011
   Smith R. S., 2017, PRACTICAL QUANTUM IN
   Thomas D., 2002, The Verilog Hardware Description Language, V5th, DOI 10.1007/978-0-387-85344-4
   Triska M, 2012, LECT NOTES COMPUT SC, V7294, P307, DOI 10.1007/978-3-642-29822-6_24
   Wecker Dave, 2014, ARXIV14024467QUANTPH
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wolf C., 2013, P 21 AUSTR WORKSH MI
   Yamaoka M, 2016, IEEE J SOLID-ST CIRC, V51, P303, DOI 10.1109/JSSC.2015.2498601
NR 43
TC 9
Z9 9
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 928
EP 949
DI 10.1017/S1471068418000066
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000007
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Brochenin, R
   Maratea, M
   Lierler, Y
AF Brochenin, Remi
   Maratea, Marco
   Lierler, Yuliya
TI Disjunctive answer set solvers via templates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; abstract solvers
ID STABLE MODEL SEMANTICS; SAT; CMODELS; SYSTEMS
AB Answer set programming is a declarative programming paradigm oriented towards difficult combinatorial search problems. A fundamental task in answer set programming is to compute stable models, i.e., solutions of logic programs. Answer set solvers are the programs that perform this task. The problem of deciding whether a disjunctive program has a stable model is Sigma(P)(2)-complete. The high complexity of reasoning within disjunctive logic programming is responsible for few solvers capable of dealing with such programs, namely DLV, GNT, CMODELS, clasp and wasp. In this paper, we show that transition systems introduced by Nieuwenhuis, Oliveras, and Tinelli to model and analyze satisfiability solvers can be adapted for disjunctive answer set solvers. Transition systems give a unifying perspective and bring clarity in the description and comparison of solvers. They can be effectively used for analyzing, comparing and proving correctness of search algorithms as well as inspiring new ideas in the design of disjunctive answer set solvers. In this light, we introduce a general template, which accounts for major techniques implemented in disjunctive solvers. We then illustrate how this general template captures solvers DLV, GNT, and CMODELS. We also show how this framework provides a convenient tool for designing new solving algorithms by means of combinations of techniques employed in different solvers.
C1 [Brochenin, Remi; Maratea, Marco] Univ Genoa, DIBRIS, Viale F Causa 15, I-16145 Genoa, Italy.
   [Lierler, Yuliya] Univ Nebraska, Dept Comp Sci, 6001 Dodge St, Omaha, NE 68182 USA.
C3 University of Genoa; University of Nebraska System
RP Brochenin, R (corresponding author), Univ Genoa, DIBRIS, Viale F Causa 15, I-16145 Genoa, Italy.
EM remi.brochenin@unige.it; marco@dibris.unige.it; ylierler@unomaha.edu
RI Maratea, Marco/AAR-5779-2020
CR Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], P 23 INT JOINT C ART
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brochenin R, 2014, FRONT ARTIF INTEL AP, V263, P165, DOI 10.3233/978-1-61499-419-0-165
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   EITER T, 1993, MIT PS LOG, P266
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Faber W., 2002, THESIS
   Gebser M, 2006, LECT NOTES COMPUT SC, V4079, P11, DOI 10.1007/11799573_4
   Gebser M, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480767
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2005, LECT NOTES COMPUT SC, V3668, P37, DOI 10.1007/11562931_6
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Koch C, 2003, ARTIF INTELL, V151, P177, DOI 10.1016/S0004-3702(03)00078-X
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   Lierler Y, 2010, THESIS
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P629, DOI 10.1017/S1471068411000214
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P135, DOI 10.1017/S1471068410000578
   Lierler Y, 2008, LECT NOTES COMPUT SC, V5366, P377, DOI 10.1007/978-3-540-89982-2_35
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Perri S, 2007, ANN MATH ARTIF INTEL, V51, P195, DOI 10.1007/s10472-008-9090-9
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
NR 33
TC 3
Z9 3
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2016
VL 16
BP 465
EP 497
DI 10.1017/S1471068415000411
PN 4
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EA4ND
UT WOS:000386588500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Slota, M
   Leite, J
AF Slota, Martin
   Leite, Joao
TI The rise and fall of semantic rule updates based on SE-models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE belief update; answer-set programs; rule update; SE-models; support;
   literal inertia
ID LOGIC; FRAMEWORK
AB Logic programs under the stable model semantics, or answer-set programs, provide an expressive rule-based knowledge representation framework, featuring a formal, declarative and well-understood semantics. However, handling the evolution of rule bases is still a largely open problem. The Alchourron, Gardenfors and Makinson (AGM) framework for belief change was shown to give inappropriate results when directly applied to logic programs under a non-monotonic semantics such as the stable models. The approaches to address this issue, developed so far, proposed update semantics based on manipulating the syntactic structure of programs and rules.
   More recently, AGM revision has been successfully applied to a significantly more expressive semantic characterisation of logic programs based on SE-models. This is an important step, as it changes the focus from the evolution of a syntactic representation of a rule base to the evolution of its semantic content.
   In this paper, we borrow results from the area of belief update to tackle the problem of updating (instead of revising) answer-set programs. We prove a representation theorem which makes it possible to constructively define any operator satisfying a set of postulates derived from Katsuno and Mendelzon's postulates for belief update. We define a specific operator based on this theorem, examine its computational complexity and compare the behaviour of this operator with syntactic rule update semantics from the literature. Perhaps surprisingly, we uncover a serious drawback of all rule update operators based on Katsuno and Mendelzon's approach to update and on SE-models.
C1 [Slota, Martin] Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
   Univ Nova Lisboa, Dept Informat, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa; Universidade Nova de Lisboa
RP Slota, M (corresponding author), Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
EM jleite@fct.unl.pt
RI Leite, Joao/HGB-4757-2022; Leite, Joao/C-6162-2009
OI Leite, Joao/0000-0001-6786-7360
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes J. J., 2005, Studia Logica, V79, P7, DOI 10.1007/s11225-005-0492-y
   Alferes JJ, 1997, LECT NOTES ARTIF INT, V1216, P110, DOI 10.1007/BFb0023804
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 2003, LECT NOTES ARTIF INT, V2902, P394
   [Anonymous], P 2 INT C PRINC KNOW
   [Anonymous], 1972, IEEE 13 ANN S SWITCH, DOI [10.1109/SWAT.1972.29, DOI 10.1109/SWAT.1972.29]
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Delgrande JP, 2007, LECT NOTES COMPUT SC, V4483, P71, DOI 10.1007/978-3-540-72200-7_8
   Delgrande JP, 2010, THEOR PRACT LOG PROG, V10, P565, DOI 10.1017/S1471068410000281
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Eiter T., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P261, DOI 10.1145/137097.137886
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Herzig A, 1999, ARTIF INTELL, V115, P107, DOI 10.1016/S0004-3702(99)00072-7
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Ilic M, 2008, LECT NOTES COMPUT SC, V5290, P352, DOI 10.1007/978-3-540-88309-8_36
   KATSUNO H, 1991, ARTIF INTELL, V52, P263, DOI 10.1016/0004-3702(91)90069-V
   KELLER AM, 1985, IEEE T SOFTWARE ENG, V11, P620, DOI 10.1109/TSE.1985.232506
   Krumpelmann P., 2010, P 13 INT WORKSH NONM
   Leite J. A., 2003, EVOLVING KNOWLEDGE B, V81
   Leite JA, 1998, LECT NOTES ARTIF INT, V1471, P224, DOI 10.1007/BFb0054796
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lukasiewicz J, 1941, ENTRETIENS ZURICH SU, V12, P82
   Osorio M, 2007, THEOR PRACT LOG PROG, V7, P451, DOI 10.1017/S1471068406003000
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Saias J., 2004, Artificial Intelligence and Law, V12, P397, DOI 10.1007/s10506-005-4162-1
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Sefranek J., 2011, 2011 10th Mexican International Conference on Artificial Intelligence (MICAI 2011), P36, DOI 10.1109/MICAI.2011.18
   Sefránek J, 2006, LECT NOTES ARTIF INT, V4160, P426, DOI 10.1007/11853886_35
   Siska J., 2006, P 20 WORKSH LOG PROG, V1843-06-02, P64
   Slota M., 2012, P 13 INT C PRINC KNO, P158
   Slota M, 2010, FRONT ARTIF INTEL AP, V215, P956, DOI 10.3233/978-1-60750-606-5-957
   Slota M, 2011, THEOR PRACT LOG PROG, V11, P801, DOI 10.1017/S1471068411000317
   Stockmeyer L. J., 1976, Theoretical Computer Science, V3, P1, DOI 10.1016/0304-3975(76)90061-X
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   Winslett M., 1990, Updating Logical Databases
   Zhang Y, 2006, ACM T COMPUT LOG, V7, P421, DOI 10.1145/1149114.1149115
   Zhang YQ, 2005, PROCEEDINGS OF THE 8TH JOINT CONFERENCE ON INFORMATION SCIENCES, VOLS 1-3, P707
NR 43
TC 20
Z9 20
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2014
VL 14
BP 869
EP 907
DI 10.1017/S1471068413000100
PN 6
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AX3OJ
UT WOS:000346848400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Charalambidis, A
   Ésik, Z
   Rondogiannis, P
AF Charalambidis, Angelos
   Esik, Zoltan
   Rondogiannis, Panos
TI Minimum Model Semantics for Extensional Higher-order Logic Programming
   with Negation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
AB Extensional higher-order logic programming has been introduced as a generalization of classical logic programming. An important characteristic of this paradigm is that it preserves all the well-known properties of traditional logic programming. In this paper we consider the semantics of negation in the context of the new paradigm. Using some recent results from non-monotonic fixed-point theory, we demonstrate that every higher-order logic program with negation has a unique minimum infinite-valued model. In this way we obtain the first purely model-theoretic semantics for negation in extensional higher-order logic programming. Using our approach, we resolve an old paradox that was introduced by W. W. Wadge in order to demonstrate the semantic difficulties of higher-order logic programming.
C1 [Charalambidis, Angelos; Rondogiannis, Panos] Univ Athens, Dept Informat & Telecommun, GR-10679 Athens, Greece.
   [Esik, Zoltan] Univ Szeged, Dept Comp Sci, Szeged, Hungary.
C3 National & Kapodistrian University of Athens; Szeged University
RP Charalambidis, A (corresponding author), Univ Athens, Dept Informat & Telecommun, GR-10679 Athens, Greece.
EM a.charalambidis@di.uoa.gr; ze@inf.u-szeged.hu; prondo@di.uoa.gr
OI Charalambidis, Angelos/0000-0001-7437-410X
CR Bezem M., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P203
   Charalambidis A, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499942
   Charalambidis A, 2010, LECT NOTES ARTIF INT, V6341, P91, DOI 10.1007/978-3-642-15675-5_10
   Esik Z., 2014, ABS14020299 CORR
   Esik Z., 2013, P 13 PANH LOG S ATH
   Lloyd J. W., 2012, Foundations of Logic Programming
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Rondogiannis P., 2005, ACM Transactions on Computational Logic, V6, P441, DOI 10.1145/1055686.1055694
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   WADGE WW, 1991, LOGIC PROGRAMM, P289
NR 11
TC 15
Z9 15
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 725
EP 737
DI 10.1017/S1471068414000313
PN 4-5
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cruz, F
   Rocha, R
   Goldstein, SC
   Pfenning, F
AF Cruz, Flavio
   Rocha, Ricardo
   Goldstein, Seth Copen
   Pfenning, Frank
TI A Linear Logic Programming Language for Concurrent Programming over
   Graph Structures
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Language Design; Semantics; Linear Logic; Concurrent Programming; Graphs
AB We have designed a new logic programming language called LM (Linear Meld) for programming graph- based algorithms in a declarative fashion. Our language is based on linear logic, an expressive logical system where logical facts can be consumed. Because LM integrates both classical and linear logic, LM tends to be more expressive than other logic programming languages. LM programs are naturally concurrent because facts are partitioned by nodes of a graph data structure. Computation is performed at the node level while communication happens between connected nodes. In this paper, we present the syntax and operational semantics of our language and illustrate its use through a number of examples.
C1 [Cruz, Flavio; Goldstein, Seth Copen; Pfenning, Frank] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Cruz, Flavio; Rocha, Ricardo] Univ Porto, CRACS, P-4169007 Oporto, Portugal.
   [Cruz, Flavio; Rocha, Ricardo] Univ Porto, Fac Sci, INESC TEC, P-4169007 Oporto, Portugal.
C3 Carnegie Mellon University; Universidade do Porto; Universidade do
   Porto; INESC TEC
RP Cruz, F (corresponding author), Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
EM fmfernan@cs.cmu.edu; ricroc@dcc.fc.up.pt; seth@cs.cmu.edu; fp@cs.cmu.edu
RI Cruz, Flávio Fontes da/ISS-5415-2023; Rocha, Ricardo/B-2862-2012
OI Rocha, Ricardo/0000-0003-4502-8835
CR Alvaro P., 2009, UCBEECS2009173
   Andreoli J. M., 1992, Journal of Logic and Computation, V2, P297, DOI 10.1093/logcom/2.3.297
   [Anonymous], 2010, P 26 C UNCERTAINTY A
   Ashley-Rollman M.P., 2007, WORKSH SELF REC ROB
   Ashley-Rollman M. P., 2009, INT C LOGIC PROGR IC
   Baader F., 1994, HDB LOGIC ARTIFICIAL, P41
   Baelde D, 2012, ACM T COMPUT LOG, V13, DOI 10.1145/2071368.2071370
   Betz H, 2005, LECT NOTES COMPUT SC, V3709, P137, DOI 10.1007/11564751_13
   Betz H, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2422085.2422086
   Betz Hariolf., 2010, CoRR
   Cervesato I., 2002, CONCURRENT LOGICAL F
   De Koninck Leslie, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P25, DOI 10.1145/1273920.1273924
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Ehrig H, 2004, LECT NOTES COMPUT SC, V3098, P496, DOI 10.1007/978-3-540-27755-2_14
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Gonzalez J., 2009, ARTIFICIAL INTELLIGE
   HODAS JS, 1994, INFORM COMPUT, V110, P327, DOI 10.1006/inco.1994.1036
   Hoffman E.J., 1969, Mathematics Magazine, V42, P66
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Loo Boon Thau, 2006, SIGMOD C, P97, DOI [10.1145/1142473.1142485, DOI 10.1145/1142473.1142485]
   Lopez Pablo., 2005, Principles and Practice of Declarative Programming (PPDP'05), P35, DOI [10.1145/1069774.1069778, DOI 10.1145/1069774.1069778]
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Miller Dale., 1985, Computational Logic, P1
   Page L, 2001, US patent, Patent No. [6,285,999, 6285999]
   Raiser F, 2011, THEOR PRACT LOG PROG, V11, P65, DOI 10.1017/S1471068410000438
   Ullman JeffreyD., 1990, PRINCIPLES DATABASE, VII
   Watkins K, 2004, ANN NY ACAD SCI, V3085, P355
   Watkins Kevin., 2003, CONCURRENT LOGICAL F
NR 28
TC 6
Z9 7
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 493
EP 507
DI 10.1017/S1471068414000167
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Caballero, R
   Rodríguez-Artalejo, M
   Romero-Díaz, CA
AF Caballero, R.
   Rodriguez-Artalejo, M.
   Romero-Diaz, C. A.
TI A Transformation-based implementation for CLP with qualification and
   proximity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; program transformation; qualification
   domains and values; similarity and proximity relations; flexible
   information retrieval
ID FUZZY-LOGIC; RESOLUTION; CONSTRAINTS; EXTENSION; SEMANTICS; PROLOG
AB Uncertainty in logic programming has been widely investigated in the last decades, leading to multiple extensions of the classical logic programming paradigm. However, few of these are designed as extensions of the well-established and powerful Constraint Logic Programming (CLP) scheme for CLP. In a previous work we have proposed the proximity-based qualified constraint logic programming (SQCLP) scheme as a quite expressive extension of CLP with support for qualification values and proximity relations as generalizations of uncertainty values and similarity relations, respectively. In this paper we provide a transformation technique for transforming SQCLP programs and goals into semantically equivalent CLP programs and goals, and a practical Prolog-based implementation of some particularly useful instances of the SQCLP scheme. We also illustrate, by showing some simple - and working - examples, how the prototype can be effectively used as a tool for solving problems where qualification values and proximity relations play a key role. Intended use of SQCLP includes flexible information retrieval applications.
C1 [Caballero, R.; Rodriguez-Artalejo, M.; Romero-Diaz, C. A.] Univ Complutense, Fac Informat, Dept Sistemas Informat & Computac, Madrid 28040, Spain.
C3 Complutense University of Madrid
RP Caballero, R (corresponding author), Univ Complutense, Fac Informat, Dept Sistemas Informat & Computac, Madrid 28040, Spain.
EM rafa@sip.ucm.es; mario@sip.ucm.es; cromdia@fdi.ucm.es
RI Caballero, Rafael/T-2232-2017
OI Caballero, Rafael/0000-0001-8181-5532
FU Spanish project STAMP [TIN2008-06622-C03-01]; Spanish project
   PROMETIDOS-CM [S2009TIC-1465]; Spanish project GPD-UCM
   [UCM-BSCH-GR58/08-910502]
FX This work has been partially supported by the Spanish projects STAMP
   (TIN2008-06622-C03-01), PROMETIDOS-CM (S2009TIC-1465) and GPD-UCM
   (UCM-BSCH-GR58/08-910502).
CR [Anonymous], 1990, HDB THEOR COMPUT SCI
   ARENAS P., 2007, USER MANUAL
   Baldwin J.F., 1995, Fril-Fuzzy and Evidential Reasoning in Artificial Intelligence
   Bistarelli S, 2001, ACM T PROGR LANG SYS, V23, P1, DOI 10.1145/383721.383725
   Caballero R., 2008, P 10 INT ACM SIGPLAN, P185
   Caballero R, 2009, LECT NOTES COMPUT SC, V5649, P449, DOI 10.1007/978-3-642-02846-5_36
   Campi A, 2009, J INTELL INF SYST, V33, P285, DOI 10.1007/s10844-008-0066-3
   Dubois D, 1980, Fuzzy sets and systems
   Fontana F.A., 1999, P ACM SAC, P260
   Fontana FA, 2002, SOFT COMPUT, V7, P107, DOI [10.1007/s00500-002-0178-6, 10.1007/S00500-002-0178-6]
   Fontana FA, 2002, INT J INTELL SYST, V17, P853, DOI 10.1002/int.10067
   FREUDER EC, 1992, ARTIF INTELL, V58, P21, DOI 10.1016/0004-3702(92)90004-H
   Georget Y, 1998, LECT NOTES COMPUT SC, V1520, P205
   Gerla G., 2001, Fuzzy logic mathematical tools for approximate reasoning
   Guadarrama S, 2004, FUZZY SET SYST, V144, P127, DOI 10.1016/j.fss.2003.10.017
   Hajek P., 1998, Metamathematics of Fuzzy Logic
   HOHFELD M, 1988, 53 LILOG IBM
   ISHIZUKA M, 1985, P 9 INT JOINT C ART, P701
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Julián P, 2009, FUZZY SET SYST, V160, P162, DOI 10.1016/j.fss.2008.05.006
   Julián-Iranzo P, 2009, ELECTRON NOTES THEOR, V248, P131, DOI 10.1016/j.entcs.2009.07.064
   Julián-Iranzo P, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P149, DOI 10.1145/1599410.1599430
   Julian-Iranzo P, 2009, LECT NOTES COMPUT SC, V5517, P245, DOI 10.1007/978-3-642-02478-8_31
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   LEE RCT, 1972, J ACM, V19, P109, DOI 10.1145/321679.321688
   Li D., 1990, A fuzzy Prolog database system
   Lloyd J. W., 2012, Foundations of Logic Programming
   Loia V, 2004, FUZZY SET SYST, V144, P151, DOI 10.1016/j.fss.2003.10.018
   Medina J, 2004, FUZZY SET SYST, V146, P43, DOI 10.1016/j.fss.2003.11.005
   MEDINA J, 2001, LECT NOTES ARTIF INT, V2258, P290
   Riezler S., 1998, THESIS U TUBINGEN TU
   RODRIGUEZ-ARTALEJO M., 2010, SIC110 U COMPL DEP S
   Rodriguez-Artalejo M, 2008, LECT NOTES COMPUT SC, V4989, P272
   Rodríguez-Artalejo M, 2010, THEOR PRACT LOG PROG, V10, P627, DOI 10.1017/S1471068410000323
   Sessa M. I., 2001, Soft Computing, V5, P160, DOI 10.1007/PL00009891
   Sessa MI, 2002, THEOR COMPUT SCI, V275, P389, DOI 10.1016/S0304-3975(01)00188-8
   SICS AB, 2010, SICSTUS PROL
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   Vojta P., 2001, Lecture Notes in Artificial Intelligence, V2173, P351
   Vojtás P, 2001, FUZZY SET SYST, V124, P361, DOI 10.1016/S0165-0114(01)00106-3
   ZADEH LA, 1971, INFORM SCIENCES, V3, P177, DOI 10.1016/S0020-0255(71)80005-1
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 43
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2014
VL 14
BP 1
EP 63
DI 10.1017/S1471068412000014
PN 1
PG 63
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AJ9PG
UT WOS:000338044200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Banbara, M
   Soh, T
   Tamura, N
   Inoue, K
   Schaub, T
AF Banbara, Mutsunori
   Soh, Takehide
   Tamura, Naoyuki
   Inoue, Katsumi
   Schaub, Torsten
TI Answer set programming as a modeling language for course timetabling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE answer set programming; educational timetabling; course timetabling
ID UNIVERSITY; SOLVER
AB The course timetabling problem can be generally defined as the task of assigning a number of lectures to a limited set of timeslots and rooms, subject to a given set of hard and soft constraints. The modeling language for course timetabling is required to be expressive enough to specify a wide variety of soft constraints and objective functions. Furthermore, the resulting encoding is required to be extensible for capturing new constraints and for switching them between hard and soft, and to be flexible enough to deal with different formulations. In this paper, we propose to make effective use of ASP as a modeling language for course timetabling. We show that our ASP-based approach can naturally satisfy the above requirements, through an ASP encoding of the curriculum-based course timetabling problem proposed in the third track of the second international timetabling competition (ITC-2007). Our encoding is compact and human-readable, since each constraint is individually expressed by either one or two rules. Each hard constraint is expressed by using integrity constraints and aggregates of ASP. Each soft constraint S is expressed by rules in which the head is the form of penalty (S, V, C), and a violation V and its penalty cost C are detected and calculated respectively in the body. We carried out experiments on four different benchmark sets with five different formulations. We succeeded either in improving the bounds or producing the same bounds for many combinations of problem instances and formulations, compared with the previous best known bounds.
C1 [Banbara, Mutsunori; Soh, Takehide; Tamura, Naoyuki] Kobe Univ, Nada Ku, Kobe, Hyogo 6578501, Japan.
   [Inoue, Katsumi] Res Org Informat & Syst, Natl Inst Informat, Chiyoda Ku, Tokyo 1018430, Japan.
   [Schaub, Torsten] Univ Potsdam, D-14482 Potsdam, Germany.
C3 Kobe University; Research Organization of Information & Systems (ROIS);
   National Institute of Informatics (NII) - Japan; University of Potsdam
RP Banbara, M (corresponding author), Kobe Univ, Nada Ku, 1-1 Rokko Dai, Kobe, Hyogo 6578501, Japan.
EM banbara@kobe-u.ac.jp; soh@lion.kobe-u.ac.jp; tamura@kobe-u.ac.jp;
   inoue@nii.ac.jp; torsten@cs.uni-potsdam.de
RI Soh, Takehide/H-2159-2017; Banbara, Mutsunori/AAJ-7265-2020; Schaub,
   Torsten/O-5873-2019; Tamura, Naoyuki/H-1325-2013
OI Soh, Takehide/0000-0001-5897-9192; Banbara,
   Mutsunori/0000-0002-5388-727X; Schaub, Torsten/0000-0002-7456-041X;
   Tamura, Naoyuki/0000-0002-5466-1010; Inoue, Katsumi/0000-0002-2717-9122
FU JSPS KAKENHI [24300007]; DFG [SCHA 550/9-1]; Grants-in-Aid for
   Scientific Research [25730042] Funding Source: KAKEN
FX This work was partially funded by JSPS KAKENHI Grant Number 24300007 and
   DFG grant SCHA 550/9-1.
CR [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2007, TECHNICAL REPORT
   [Anonymous], 28 INT C LOG PROGR I
   [Anonymous], P IFIP C 62 N HOLL
   [Anonymous], P 13 WORKSH LOG PROG
   As~n Acha R., 2012, ANN OPER RES, P1
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bonutti A, 2012, ANN OPER RES, V194, P59, DOI 10.1007/s10479-010-0707-0
   Burke EK, 2012, ANN OPER RES, V194, P71, DOI 10.1007/s10479-010-0828-5
   Burke EK, 2010, ANN OPER RES, V179, P105, DOI 10.1007/s10479-010-0716-z
   Burke EK, 2010, COMPUT OPER RES, V37, P582, DOI 10.1016/j.cor.2009.02.023
   Burke EK, 2002, EUR J OPER RES, V140, P266, DOI 10.1016/S0377-2217(02)00069-3
   Carter MW, 2001, LECT NOTES COMPUT SC, V2079, P64
   Daskalaki S, 2005, EUR J OPER RES, V160, P106, DOI 10.1016/j.ejor.2003.06.023
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Lach G, 2012, ANN OPER RES, V194, P255, DOI 10.1007/s10479-010-0700-7
   Lewis R, 2008, OR SPECTRUM, V30, P167, DOI 10.1007/s00291-007-0097-0
   McCollum B, 2007, LECT NOTES COMPUT SC, V3867, P3
   McCollum B, 2010, INFORMS J COMPUT, V22, P120, DOI 10.1287/ijoc.1090.0320
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Qualizza A, 2005, LECT NOTES COMPUT SC, V3616, P161, DOI 10.1007/11593577_10
   Schaerf A, 1999, ARTIF INTELL REV, V13, P87, DOI 10.1023/A:1006576209967
   Schimmelpfeng K, 2007, OR SPECTRUM, V29, P783, DOI 10.1007/s00291-006-0074-z
   Schutt A, 2011, CONSTRAINTS, V16, P250, DOI 10.1007/s10601-010-9103-2
NR 28
TC 17
Z9 17
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 783
EP 798
DI 10.1017/S1471068413000495
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gottlob, G
   Manna, M
   Pieris, A
AF Gottlob, Georg
   Manna, Marco
   Pieris, Andreas
TI Combining decidability paradigms for existential rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE datalog extensions; query answering; decidability; complexity;
   guardedness; stickiness
ID DATALOG; LANGUAGES; SEMANTICS; QUERIES; WEB
AB Existential rules are Datalog rules extended with existential quantifiers in rule-heads. Three fundamental restriction paradigms that have been studied for ensuring decidability of query answering under existential rules are weak-acyclicity, guardedness and stickiness. Towards the identification of even more expressive decidable languages, several attempts have been conducted to consolidate weak-acyclicity with the other two paradigms. However, it is not clear how guardedness and stickiness can be merged; this is the subject of this paper. A powerful and flexible condition, called tameness, is proposed, which allows us to consolidate in an elegant and uniform way guardedness with stickiness.
C1 [Gottlob, Georg; Pieris, Andreas] Univ Oxford, Dept Comp Sci, Oxford OX1 2JD, England.
   [Manna, Marco] Univ Calabria, Dept Math & Informat, I-87030 Commenda Di Rende, Italy.
C3 University of Oxford; University of Calabria
RP Gottlob, G (corresponding author), Univ Oxford, Dept Comp Sci, Oxford OX1 2JD, England.
EM georg.gottlob@cs.ox.ac.uk; manna@mat.unical.it
RI Gottlob, Georg/JWP-7819-2024; Manna, Marco/G-8966-2012
OI Gottlob, Georg/0000-0002-2353-5230; Manna, Marco/0000-0003-3323-9328
FU ERC [246858]; EPSRC [EP/G055114/1]; European Research Council (ERC)
   [246858] Funding Source: European Research Council (ERC); EPSRC
   [EP/G055114/1] Funding Source: UKRI
FX This research has received funding from ERC Grant 246858 "DIADEM".
   Andreas Pieris also acknowledges the EPSRC Grant EP/G055114/1.
CR Alviano M, 2012, THEOR PRACT LOG PROG, V12, P701, DOI 10.1017/S1471068412000257
   Andreka H, 1998, J PHILOS LOGIC, V27, P217, DOI 10.1023/A:1004275029985
   Baget JF, 2011, ARTIF INTELL, V175, P1620, DOI 10.1016/j.artint.2011.03.002
   Bárány V, 2010, IEEE S LOG, P1, DOI 10.1109/LICS.2010.26
   Beeri C., 1981, P ICALP, P73
   Bourhis P., 2013, P 23 INT JO IN PRESS
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Calì A, 2012, ARTIF INTELL, V193, P87, DOI 10.1016/j.artint.2012.08.002
   Cali Andrea., 2008, KR, P70
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   Chandra A.K., 1977, P 9 ANN ACM S THEOR, P77, DOI [DOI 10.1145/800105.803397, 10.1145/800105.803397]
   Deutsch A., 2008, PODS, P149
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gogacz T., 2013, P 28 ANN IEEE S LOG
   Gottlob G, 2004, J ACM, V51, P74, DOI 10.1145/962446.962450
   Gottlob G., 2012, P 37 INT S MATH FDN, P1
   Hajiyev E, 2006, LECT NOTES COMPUT SC, V4067, P2
   JOHNSON DS, 1984, J COMPUT SYST SCI, V28, P167, DOI 10.1016/0022-0000(84)90081-3
   Kr?tzsch M., 2011, P 22 INT JOINT C ART, P963, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-166
   Leone N., 2012, P 13 INT C PRINC KNO
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Maier D., 1979, ACM Transactions on Database Systems, V4, P455, DOI 10.1145/320107.320115
   Marczak W. R., 2012, P DAT 2 0, P135
   Patel-Schneider PF, 2007, J WEB SEMANT, V5, P240, DOI 10.1016/j.websem.2007.09.004
NR 26
TC 14
Z9 14
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 877
EP 892
DI 10.1017/S1471068413000550
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400028
DA 2024-07-18
ER

PT J
AU Kaminski, R
   Schaub, T
   Siegel, A
   Videla, S
AF Kaminski, Roland
   Schaub, Torsten
   Siegel, Anne
   Videla, Santiago
TI Minimal intervention strategies in logical signaling networks with ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID SYSTEMS BIOLOGY; MODES; SETS
AB Proposing relevant perturbations to biological signaling networks is central to many problems in biology and medicine because it allows for enabling or disabling certain biological outcomes. In contrast to quantitative methods that permit fine-grained (kinetic) analysis, qualitative approaches allow for addressing large-scale networks. This is accomplished by more abstract representations such as logical networks. We elaborate upon such a qualitative approach aiming at the computation of minimal interventions in logical signaling networks relying on Kleene's three-valued logic and fixpoint semantics. We address this problem within answer set programming and show that it greatly outperforms previous work using dedicated algorithms.
C1 [Kaminski, Roland; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Siegel, Anne] Rennes INRIA Dyliss, CNRS IRISA, Rennes, France.
   [Videla, Santiago] Rennes Univ Potsdam, Rennes INRIA Dyliss, CNRS IRISA, Potsdam, Germany.
C3 University of Potsdam; Centre National de la Recherche Scientifique
   (CNRS); Universite de Rennes
RP Kaminski, R (corresponding author), Univ Potsdam, Potsdam, Germany.
RI Kaminski, Roland/HMD-8407-2023; Schaub, Torsten/O-5873-2019
OI Kaminski, Roland/0000-0002-1361-6045; Schaub,
   Torsten/0000-0002-7456-041X; Siegel, Anne/0000-0001-6542-1568
FU DFG grant [SCHA 550/9-1];  [ANR-10-BLANC-0218]
FX We would like to thank Steffen Klamt, Axel von Kamp, and Regina Samaga
   for their help in providing the benchmarks, reading the manuscript, and
   many valuable discussions. The work of SV was supported by the project
   ANR-10-BLANC-0218. The work of RK and TS was partly funded by DFG grant
   SCHA 550/9-1.
CR Abdi A., 2008, SCI SIGNAL, V1, pra10
   Acuña V, 2012, BIOINFORMATICS, V28, P2474, DOI 10.1093/bioinformatics/bts423
   [Anonymous], 1950, Introduction to Metamathematics
   [Anonymous], 2012, LNAI
   [Anonymous], P 23 INT JOINT C ART
   Baral C, 2004, BIOINFORMATICS, V20, P15, DOI 10.1093/bioinformatics/bth918
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Batt G, 2008, AUTOMATICA, V44, P982, DOI 10.1016/j.automatica.2007.08.004
   Bouaynaya N. N., 2011, SIGNAL PROCESSING MA, V29, P158
   Calzone L, 2010, PLOS COMPUT BIOL, V6, DOI 10.1371/journal.pcbi.1000702
   Castell T., 1996, ECAI 96. 12th European Conference on Artificial Intelligence, P350
   Di Rosa E, 2010, CONSTRAINTS, V15, P485, DOI 10.1007/s10601-010-9095-y
   Erdem E., 2008, National Conference on Artificial Intelligence (AAAI), P436
   Faryabi B, 2008, EURASIP J BIOINFORM, DOI 10.1155/2008/620767
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M., 2013, P 27 NAT C ART INT A
   Gebser M., USERS GUIDE GRINGO C
   Gebser M., 2010, P 12 INT C PRINC KNO, P497
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Inoue K., 2011, 22 INT JOINT C ARTIF
   Karlebach G, 2010, BMC SYST BIOL, V4, DOI 10.1186/1752-0509-4-15
   Kauffman KJ, 2003, CURR OPIN BIOTECH, V14, P491, DOI 10.1016/j.copbio.2003.08.001
   KAUFFMAN SA, 1969, J THEOR BIOL, V22, P437, DOI 10.1016/0022-5193(69)90015-0
   Kitano H, 2002, SCIENCE, V295, P1662, DOI 10.1126/science.1069492
   Klamt S, 2006, BIOSYSTEMS, V83, P233, DOI 10.1016/j.biosystems.2005.04.009
   Klamt S, 2009, PLOS COMPUT BIOL, V5, DOI 10.1371/journal.pcbi.1000385
   Kreutz C, 2009, FEBS J, V276, P923, DOI 10.1111/j.1742-4658.2008.06843.x
   Mitsos A, 2009, PLOS COMPUT BIOL, V5, DOI 10.1371/journal.pcbi.1000591
   Morris MK, 2010, BIOCHEMISTRY-US, V49, P3216, DOI 10.1021/bi902202q
   Naldi A, 2010, PLOS COMPUT BIOL, V6, DOI 10.1371/journal.pcbi.1000912
   Ray O, 2010, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS (CISIS 2010), P661, DOI 10.1109/CISIS.2010.184
   Saez-Rodriguez J, 2007, PLOS COMPUT BIOL, V3, P1580, DOI 10.1371/journal.pcbi.0030163
   Saez-Rodriguez J, 2011, CANCER RES, V71, P5400, DOI 10.1158/0008-5472.CAN-10-4453
   Saez-Rodriguez J, 2009, MOL SYST BIOL, V5, DOI 10.1038/msb.2009.87
   Samaga R, 2010, J COMPUT BIOL, V17, P39, DOI 10.1089/cmb.2009.0121
   Samaga R, 2009, PLOS COMPUT BIOL, V5, DOI 10.1371/journal.pcbi.1000438
   Sharan Roded, 2012, Research in Computational Molecular Biology. Proceedings 16th Annual International Conference, RECOMB 2012, P261, DOI 10.1007/978-3-642-29627-7_28
   Sparkes Andrew, 2010, Autom Exp, V2, P1, DOI 10.1186/1759-4499-2-1
   Stelling J, 2002, NATURE, V420, P190, DOI 10.1038/nature01166
   Stelling J, 2004, CELL, V118, P675, DOI 10.1016/j.cell.2004.09.008
   THOMAS R, 1973, J THEOR BIOL, V42, P563, DOI 10.1016/0022-5193(73)90247-6
   Videla Santiago, 2012, Computational Methods in Systems Biology. Proceedings of the 10th International Conference, CMSB 2012, P342, DOI 10.1007/978-3-642-33636-2_20
   Wang BJ, 2012, TRENDS MICROBIOL, V20, P376, DOI 10.1016/j.tim.2012.05.001
   Wang RS, 2012, PHYS BIOL, V9, DOI 10.1088/1478-3975/9/5/055001
   Wang RS, 2011, BMC SYST BIOL, V5, DOI 10.1186/1752-0509-5-44
NR 48
TC 10
Z9 11
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 675
EP 690
DI 10.1017/S1471068413000422
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bauters, K
   Schockaert, S
   Janssen, J
   Vermeir, D
   De Cock, M
AF Bauters, Kim
   Schockaert, Steven
   Janssen, Jeroen
   Vermeir, Dirk
   De Cock, Martine
TI Expressiveness of communication in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; answer set programming; multi-agent reasoning
ID COMPLEXITY; LOGICS; MODEL
AB Answer set programming (ASP) is a form of declarative programming that allows to succinctly formulate and efficiently solve complex problems. An intuitive extension of this formalism is communicating ASP, in which multiple ASP programs collaborate to solve the problem at hand. However, the expressiveness of communicating ASP has not been thoroughly studied. In this paper, we present a systematic study of the additional expressiveness offered by allowing ASP programs to communicate. First, we consider a simple form of communication where programs are only allowed to ask questions to each other. For the most part, we deliberately consider only simple programs, i.e. programs for which computing the answer sets is in P. We find that the problem of deciding whether a literal is in some answer set of a communicating ASP program using simple communication is NP-hard. In other words, due to the ability of these simple ASP programs to communicate and collaborate, we move up a step in the polynomial hierarchy. Second, we modify the communication mechanism to also allow us to focus on a sequence of communicating programs, where each program in the sequence may successively remove some of the remaining models. This mimics a network of leaders, where the first leader has the first say and may remove models that he or she finds unsatisfactory. Using this particular communication mechanism allows us to capture the entire polynomial hierarchy. This means, in particular, that communicating ASP could be used to solve problems that are above the second level of polynomial hierarchy, such as some forms of abductive reasoning as well as PSPACE-complete problems such as STRIPS planning.
C1 [Bauters, Kim; Schockaert, Steven; De Cock, Martine] Univ Ghent, Dept Appl Math & Comp Sci, B-9000 Ghent, Belgium.
   [Janssen, Jeroen; Vermeir, Dirk] Vrije Univ Brussel, Dept Comp Sci, B-1050 Brussels, Belgium.
C3 Ghent University; Vrije Universiteit Brussel
RP Bauters, K (corresponding author), Univ Ghent, Dept Appl Math & Comp Sci, Krijgslaan 281 WE02, B-9000 Ghent, Belgium.
EM kim.bauters@ugent.be; steven.schockaert@ugent.be;
   jeroen.janssen@vub.ac.be; dirk.vermeir@vub.ac.be;
   martine.decock@ugent.be
RI De Cock, Martine/B-8567-2009
OI De Cock, Martine/0000-0001-7917-0771; Schockaert,
   Steven/0000-0002-9256-2881
CR [Anonymous], P ICLP 1988
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bauters K, 2011, P ESSLLI 11 STUD SES, V11, P25
   BAUTERS K., P LPNMR 11 VANC BRIT, P67
   Bauters K, 2010, LEIBNIZ INT PR INFOR, V7, P34, DOI 10.4230/LIPIcs.ICLP.2010.34
   BRAIN M., 2003, P ASP 05 BATH UK, P224
   Brewka G, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P268
   Brewka Gerhard., 2011, Proc. of IJCAI, P786, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-138
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Buccafurri F, 2008, LECT NOTES COMPUT SC, V5366, P718, DOI 10.1007/978-3-540-89982-2_64
   BYLANDER T, 1994, ARTIF INTELL, V69, P165, DOI 10.1016/0004-3702(94)90081-7
   Dao-Tran M., 2010, KR 2010, P60
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5649, P145, DOI 10.1007/978-3-642-02846-5_16
   De Vos Marina., 2005, Declarative Agent Languages and Technologies III, Third International Workshop, DALT 2005, Utrecht, The Netherlands, July 25, 2005, Selected and Revised Papers, P72
   DELL'ACQUA P., 1999, P MAS 99 LAS CRUC NM
   Drescher C, 2011, LECT NOTES ARTIF INT, V6645, P26
   EITER T, 1995, J ACM, V42, P3, DOI 10.1145/200836.200838
   Eiter T, 1999, AI COMMUN, V12, P99
   Eiter T., 2006, P INT WORKSH APPL LO, P33
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Gebser M., 2010, P 12 INT C PRINC KNO, P497
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GIUNCHIGLIA F, 1994, ARTIF INTELL, V65, P29, DOI 10.1016/0004-3702(94)90037-X
   JEROSLOW RG, 1985, MATH PROGRAM, V32, P146, DOI 10.1007/BF01586088
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Luo J., 2005, P PRIMA 05 KUAL LUMP, P365
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Papadimitriou C. H., 1994, Computational Complexity
   Roelofsen F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P558
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VAN NIEUWENBORGH D., 2007, P CLIMA 07 HELS FINL
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 34
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2013
VL 13
BP 361
EP 394
DI 10.1017/S1471068411000561
PN 3
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 135TR
UT WOS:000318311900002
OA Green Published, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Covington, MA
   Bagnara, R
   O'Keefe, RA
   Wielemaker, J
   Price, S
AF Covington, Michael A.
   Bagnara, Roberto
   O'Keefe, Richard A.
   Wielemaker, Jan
   Price, Simon
TI Coding guidelines for Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; style; coding standards; debugging; efficiency
AB Coding standards and good practices are fundamental to a disciplined approach to software projects irrespective of programing languages being employed. Prolog programing can benefit from such an approach, perhaps more than programing in other languages. Despite this, no widely accepted standards and practices seem to have emerged till now. The present paper is a first step toward filling this void: It provides immediate guidelines for code layout, naming conventions, documentation, proper use of Prolog features, program development, debugging, and testing. Presented with each guideline is its rationale and, where sensible options exist, illustrations of the relative pros and cons for each alternative. A coding standard should always be selected on a per-project basis, based on a host of issues pertinent to any given programing project; for this reason the paper goes beyond the mere provision of normative guidelines by discussing key factors and important criteria that should be taken into account when deciding on a full-fledged coding standard for the project.
C1 [Covington, Michael A.] Univ Georgia, Inst Artificial Intelligence, Athens, GA 30602 USA.
   [Bagnara, Roberto] Univ Parma, Dept Math, I-43100 Parma, Italy.
   [Bagnara, Roberto] BUGSENG Srl, Parma, Italy.
   [O'Keefe, Richard A.] Univ Otago, Dept Comp Sci, Dunedin, New Zealand.
   [Wielemaker, Jan] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
   [Price, Simon] Univ Bristol, Intelligent Syst Lab, Bristol, Avon, England.
C3 University System of Georgia; University of Georgia; University of
   Parma; University of Otago; Vrije Universiteit Amsterdam; University of
   Bristol
RP Covington, MA (corresponding author), Univ Georgia, Inst Artificial Intelligence, Athens, GA 30602 USA.
EM mc@uga.edu; bagnara@cs.unipr.it; ok@cs.otago.ac.nz;
   j.wielemaker@cs.vu.nl; simon.price@bristol.ac.uk
RI Price, Simon/I-8495-2014; Bagnara, Roberto/B-2420-2017; Bagnara,
   Roberto/AAB-3202-2022
OI Price, Simon/0000-0002-9126-1980; Bagnara, Roberto/0000-0002-6163-6278;
   Bagnara, Roberto/0000-0002-6163-6278; Wielemaker,
   Jan/0000-0001-5574-5673
FU PRIN project "AIDA2007 - Abstract Interpretation Design and
   Applications"
FX The work of R. Bagnara has been partly supported by PRIN project
   "AIDA2007 - Abstract Interpretation Design and Applications."
CR [Anonymous], 1994, The Godel Programming Language
   [Anonymous], 1978, The Elements of Programming Style
   Ausnit- Hood C., 1997, LECT NOTES COMPUTER, V1344
   Brady M. H., 2005, TCDCS200534 COMP SCI
   Clocksin W. F., 2003, Programming in PROLOG
   Covington M., 1997, PROLOG PROGRAMMING D
   Covington M. A., 2002, SOME CODING GUIDELIN
   COVINGTON MA, 1994, J SCHOLARLY PUBL, V26, P34
   Fages F, 2001, THEOR PRACT LOG PROG, V1, P751, DOI 10.1017/S1471068401001120
   Green R., 1996, UNMAINTAINABLE CODE
   Hermenegildo M, 2000, LECT NOTES ARTIF INT, V1861, P1345
   HOARE CAR, 1962, COMPUT J, V5, P10, DOI 10.1093/comjnl/5.1.10
   Jeffery D., 2000, P 23 AUSTR COMP SCI, P128
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Ledgard H., 1987, PROFESSIONAL SOFTWAR
   MOURA P, 2003, THESIS U BEIRA INTER
   MYCROFT A, 1984, ARTIF INTELL, V23, P295, DOI 10.1016/0004-3702(84)90017-1
   O'Keefe R.A., 1990, The Craft of Prolog
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   Somogyi Z., 1995, P 18 AUSTR COMP SCI, V17, P499
   *SUN MICR, 1999, COD CONV JAV PROGR L
   Thompson EdwardMaunde., 1893, Handbook of Greek and Latin Palaeography
NR 22
TC 3
Z9 3
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2012
VL 12
BP 889
EP 927
DI 10.1017/S1471068411000391
PN 6
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 034EW
UT WOS:000310854200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
AF Lierler, Yuliya
TI Abstract answer set solvers with backjumping and learning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE answer set programming; inference; learning
ID PROGRAM; SAT
AB Nieuwenhuis et al. (2006. Solving SAT and SAT modulo theories: From an abstract Davis-Putnam-Logemann-Loveland procedure to DPLL(T). Journal of the ACM 53(6), 937977 showed how to describe enhancements of the Davis-Putnam-Logemann-Loveland algorithm using transition systems, instead of pseudocode. We design a similar framework for several algorithms that generate answer sets for logic programs: SMODELS, SMODELScc, asp-sat with Learning (CMODELS), and a newly designed and implemented algorithm sup. This approach to describe answer set solvers makes it easier to prove their correctness, to compare them, and to design new systems.
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Lierler, Y (corresponding author), Univ Kentucky, Dept Comp Sci, 773C Anderson Hall, Lexington, KY 40506 USA.
EM yuliya@cs.uky.edu
CR CLARK, 1978, LOGIC DATA BASES, P293
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   GEBSER, 2006, P 22 INT C LOG PROGR, P11
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E., 2005, P 21 INT C LOG PROGR, P37
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Gomes CP, 2008, FOUND ARTIF INTELL, P89, DOI 10.1016/S1574-6526(07)03002-7
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   LIERLER Y, 2010, ARXIV10010820V1
   LIERLER Y, 2008, P INT C LOG PROGR IC, P377
   LIN, 2006, P AAAI 2006
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   MITCHELL, 2005, B EUROPEAN ASS THEOR, V85, P112
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Ricca F, 2006, AI COMMUN, V19, P155
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   Silva JPM, 1996, PROC INT C TOOLS ART, P467, DOI 10.1109/TAI.1996.560789
   SIMONS P, 2000, THESIS HELSINKI U TE
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vladimir L, 2008, P AAAI C ART INT, V8, P1594
   WARD, 2004, P 7 INT C LOG PROGR, P302
   WARD J, 2004, THESIS U CINCINNATI
   ZHANG, 2001, INT C COMPUTER AIDED
NR 26
TC 16
Z9 16
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 135
EP 169
DI 10.1017/S1471068410000578
PN 2-3
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500002
DA 2024-07-18
ER

PT J
AU Dal Palù, A
   Dovier, A
   Fogolari, F
   Pontelli, E
AF Dal Palu, Alessandro
   Dovier, Agostino
   Fogolari, Federico
   Pontelli, Enrico
TI CLP-based protein fragment assembly
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE constraint logic programming; protein fragment assembly
ID STRUCTURE PREDICTION; CASP8
AB The paper investigates a novel approach, based on Constraint Logic Programming (CLP), to predict the 3D conformation of a protein via fragments assembly. The fragments are extracted by a preprocessor-also developed for this work-from a database of known protein structures that clusters and classifies the fragments according to similarity and frequency. The problem of assembling fragments into a complete conformation is mapped to a constraint solving problem and solved using CLP. The constraint-based model uses a medium discretization degree C alpha-side chain centroid protein model that offers efficiency and a good approximation for space filling. The approach adapts existing energy models to the protein representation used and applies a large neighboring search strategy. The results shows the feasibility and efficiency of the method. The declarative nature of the solution allows to include future extensions, e.g., different size fragments for better accuracy.
C1 [Dal Palu, Alessandro] Univ Parma, Dept Math, I-43100 Parma, Italy.
   [Dovier, Agostino] Univ Udine, Dept Math & Comp Sci, I-33100 Udine, Italy.
   [Fogolari, Federico] Univ Udine, Dept Biomed Sci, I-33100 Udine, Italy.
   [Pontelli, Enrico] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 University of Parma; University of Udine; University of Udine; New
   Mexico State University
RP Dal Palù, A (corresponding author), Univ Parma, Dept Math, I-43100 Parma, Italy.
RI Dal Palu', Alessandro/AAS-3911-2020; Fogolari, Federico/C-7756-2018;
   Dovier, Agostino/JAO-3262-2023; Pontelli, Enrico/AAJ-5161-2021
OI Dal Palu', Alessandro/0000-0003-0353-158X; Fogolari,
   Federico/0000-0001-9862-250X; Pontelli, Enrico/0000-0002-7753-1737;
   Dovier, Agostino/0000-0003-2052-8593
FU Direct For Computer & Info Scie & Enginr; Div Of Information &
   Intelligent Systems [0812267] Funding Source: National Science
   Foundation
CR Backofen R, 2006, CONSTRAINTS, V11, P5, DOI 10.1007/s10601-006-6848-8
   Barahona P, 2008, CONSTRAINTS, V13, P3, DOI 10.1007/s10601-007-9036-6
   Ben-David M, 2009, PROTEINS, V77, P50, DOI 10.1002/prot.22591
   Berrera M, 2003, BMC BIOINFORMATICS, V4, DOI 10.1186/1471-2105-4-8
   Crescenzi P., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P597, DOI 10.1145/276698.276875
   Dal Palù A, 2004, BMC BIOINFORMATICS, V5, DOI 10.1186/1471-2105-5-186
   Dal Palù A, 2007, SOFTWARE PRACT EXPER, V37, P1405, DOI 10.1002/spe.810
   Dal Palu A, 2010, INT J DATA MIN BIOIN, V4, P1, DOI 10.1504/IJDMB.2010.030964
   Dotu I, 2008, LECT NOTES COMPUT SC, V5202, P82, DOI 10.1007/978-3-540-85958-1_6
   Fogolari F, 2007, BMC STRUCT BIOL, V7, DOI 10.1186/1472-6807-7-15
   LEVINTHAL C, 1968, J CHIM PHYS PCB, V65, P44, DOI 10.1051/jcp/1968650044
   Lovell SC, 2003, PROTEINS, V50, P437, DOI 10.1002/prot.10286
   Raman S, 2009, PROTEINS, V77, P89, DOI 10.1002/prot.22540
   Shaw P, 1998, LECT NOTES COMPUT SC, V1520, P417
   Wu ST, 2007, BMC BIOL, V5, DOI 10.1186/1741-7007-5-17
   Zemla A, 2003, NUCLEIC ACIDS RES, V31, P3370, DOI 10.1093/nar/gkg571
NR 16
TC 9
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 709
EP 724
DI 10.1017/S1471068410000372
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gavanelli, M
   Riguzzi, F
   Milano, M
   Cagnoli, P
AF Gavanelli, Marco
   Riguzzi, Fabrizio
   Milano, Michela
   Cagnoli, Paolo
TI Logic-based decision support for strategic environmental assessment
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE strategic environmental assessment; regional planning; constraint logic
   programming; probabilistic logic programming; causality
ID LANGUAGE
AB Strategic Environmental Assessment is a procedure aimed at introducing systematic assessment of the environmental effects of plans and programs. This procedure is based on the so-called coaxial matrices that define dependencies between plan activities (infrastructures, plants, resource extractions, buildings, etc.) and positive and negative environmental impacts, and dependencies between these impacts and environmental receptors. Up to now, this procedure is manually implemented by environmental experts for checking the environmental effects of a given plan or program, but it is never applied during the plan/program construction. A decision support system, based on a clear logic semantics, would be an invaluable tool not only in assessing a single, already defined plan, but also during the planning process in order to produce an optimized, environmentally assessed plan and to study possible alternative scenarios. We propose two logic-based approaches to the problem, one based on Constraint Logic Programming and one on Probabilistic Logic Programming that could be, in the future, conveniently merged to exploit the advantages of both. We test the proposed approaches on a real energy plan and we discuss their limitations and advantages.
C1 [Gavanelli, Marco; Riguzzi, Fabrizio] Univ Ferrara, ENDIF, I-44100 Ferrara, Italy.
   [Milano, Michela] Univ Bologna, DEIS, I-40126 Bologna, Italy.
   [Cagnoli, Paolo] ARPA Emilia Romagna, Romagna, Italy.
C3 University of Ferrara; University of Bologna; Regional Environmental
   Protection Agency - Italy
RP Gavanelli, M (corresponding author), Univ Ferrara, ENDIF, I-44100 Ferrara, Italy.
EM marco.gavanelli@unife.it; fabrizio.riguzzi@unife.it;
   michela.milano@unibo.it; PCagnoli@arpa.emr.it
RI GAVANELLI, Marco/ISA-6918-2023; Fabrizio, Riguzzi/C-7679-2012
OI GAVANELLI, Marco/0000-0001-7433-5899; Fabrizio,
   Riguzzi/0000-0003-1654-9703
CR [Anonymous], 2000, CAUSALITY
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   COSTA VS, 2003, C UNC ART INT
   Dantsin E., 1991, LNCS, P152
   DEKONINCK L, 2006, WLP, P91
   DERAEDT L, 2007, IJCAI, P2462
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   GOMES CP, 2009, LECT NOTES COMPUTER, V5732, P2
   Hermenegildo MV, 2008, LECT NOTES COMPUT SC, V5065, P209, DOI 10.1007/978-3-540-68679-8_14
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   MEERT W, 2009, P 19 INT C IND LOG P
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Riguzzi F, 2009, LOG J IGPL, V17, P589, DOI 10.1093/jigpal/jzp025
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Schiex T, 1995, INT JOINT CONF ARTIF, P631
   Shen K, 2005, LECT NOTES COMPUT SC, V3709, P622, DOI 10.1007/11564751_46
   SORENSEN JC, 1973, PROCEDURES PROGRAMS
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
   ZHOU NF, 1996, IEA AIE, P790
NR 23
TC 13
Z9 13
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 643
EP 658
DI 10.1017/S1471068410000335
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serebrenik, A
   Schrijvers, T
   Demoen, B
AF Serebrenik, Alexander
   Schrijvers, Tom
   Demoen, Bart
TI Improving prolog programs: Refactoring for prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE refactoring; software engineering; program transformation; programming
   environments; tools
AB Refactoring is an established technique from the object-oriented (00) programming community to restructure code: it aims at improving software readability, maintainability, and extensibility. Although refactoring is not tied to the OO-paradigm in particular, its ideas have not been applied to logic programming until now. This paper applies the ideas of refactoring to Prolog programs. A catalogue is presented listing refactorings classified according to scope. Some of the refactorings have been adapted from the 00-paradigm, while others have been specifically designed for Prolog. The discrepancy between intended and operational semantics in Prolog is also addressed by some of the refactorings. In addition, ViPReSS, a semi-automatic refactoring browser, is discussed and the experience with applying ViPReSS to a large Prolog legacy system is reported. The main conclusion is that refactoring is both a viable technique in Prolog and a rather desirable one.
C1 [Serebrenik, Alexander] Tech Univ Eindhoven, LaQuSo, NL-5600 MB Eindhoven, Netherlands.
   [Schrijvers, Tom; Demoen, Bart] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 Eindhoven University of Technology; KU Leuven
RP Serebrenik, A (corresponding author), Tech Univ Eindhoven, LaQuSo, HG 5-91,Den Dolech 2,POB 513, NL-5600 MB Eindhoven, Netherlands.
EM A.Serebrenik@tue.nl; Tom.Schrijvers@cs.kuleuven.be;
   Bart.Demoen@cs.kuleuven.be
RI Serebrenik, Alexander/E-1132-2012; Schrijvers, Tom/A-6269-2009;
   Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559; Serebrenik,
   Alexander/0000-0002-1418-0095
CR CROW D, 1992, NEURAL NETWORKS PATT, P39
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2003, REFACTORINGS ALPHABE
   Garrido A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P323, DOI 10.1109/ASE.2003.1240330
   HERMENEGILDO MV, 2000, LECT NOTES ARTIF INT, V1861, P1255
   *INT SYST LAB, 2003, SICST PROLOG US MAN
   *INT SYST LAB, 2003, QUINT PROL US MAN
   *ISO IEC, 1995, 1321111995 ISO IEC
   *IT MAST, 2000, MASTERPROLOG PROGR E
   LEUSCHEL M, 1996, LNCS, V1207, P83
   Li H, 2003, HASK WORKSH
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MOAD J, 1990, DATAMATION, V36, P61
   Moores TT, 1998, J SYST SOFTWARE, V44, P45, DOI 10.1016/S0164-1212(98)10042-0
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   OKEEFE RA, 1994, CRAFT PROLOG
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   PITKOW J, 1999, 2 USENIX S INT TECHN, P1
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   SCHRUVERS T, 2003, 373 CW KATH U LEUV D
   SEIPEL D, 2003, P 13 INT WORKSH LOG, P31
   STEINKE D, 2003, THESIS U ROSTOCK
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   VANHOOF W, 2004, LOG BAS PROGR SYNTH, P18
   VANVLIET H, 2000, SOFTWARE ENG PRINCIP
NR 27
TC 6
Z9 7
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2008
VL 8
BP 201
EP 215
DI 10.1017/S1471068407003134
PN 2
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 280MF
UT WOS:000254430200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Colvin, R
   Hayes, IJ
   Strooper, P
AF Colvin, Robert
   Hayes, Ian J.
   Strooper, Paul
TI Calculating modules in contextual logic program refinement
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programs; refinement; modules; context
ID SPECIFICATIONS; CALCULUS
AB The refinement calculus for logic programs is a framework for deriving logic programs from specifications. It is based on a wide-spectrum language that can express both specifications and code, and a refinement relation that models the notion of correct implementation. In this paper we extend and generalise earlier work on contextual refinement. Contextual refinement simplifies the refinement process by abstractly capturing the context of a subcomponent of a program, which typically includes information about the values of the free variables. This paper also extends and generalises module refinement. A module is a collection of procedures that operate on a common data type; module refinement between a specification module A and an implementation module C allows calls to the procedures of A to be systematically replaced with calls to the corresponding procedures of C. Based on the conditions for module refinement, we present a method for calculating an implementation module from a specification module. Both contextual and module refinement within the refinement calculus have been generalised from earlier work and the results are presented in a unified framework.
C1 [Colvin, Robert; Hayes, Ian J.; Strooper, Paul] Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
C3 University of Queensland
RP Colvin, R (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
EM robert@itee.uq.edu.au; Ian.Hays@itee.uq.edu.au; pstroop@itee.uq.edu.au
RI Colvin, Robert/N-6686-2019; Colvin, Robert/C-7985-2009
OI Colvin, Robert/0000-0002-2149-675X; Hayes, Ian/0000-0003-3649-392X;
   Strooper, Paul/0000-0003-4789-2897
CR [Anonymous], 1990, Specification and Transformation of Programs: A Formal Approach to Software Development
   [Anonymous], 1986, Abstraction and Specification in Program Development
   [Anonymous], 1994, The Godel Programming Language
   BACK RJR, 1988, ACTA INFORM, V25, P593, DOI 10.1007/BF00291051
   Bancroft P., 1993, Australian Computer Science Communications, V15, P615
   Basin D, 2004, LECT NOTES COMPUT SC, V3049, P30
   Colvin R, 2004, LECT NOTES COMPUT SC, V3049, P66
   COLVIN R, 2002, THESIS U QUEENSLAND
   COLVIN R, 2002, C RES PRACT INF TECH, V4, P33
   COLVIN R, 2000, AUSTR COMP SCI C ACS, P43
   COLVIN R, 1998, DISCRETE MATH THEOR, P100
   COLVIN R, 2001, LNCS, V2402, P38
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Hayes I, 2002, THEOR PRACT LOG PROG, V2, P425, DOI 10.1017/S1471068402001448
   HAYES I, 2000, 0030 U QUEENSL SOFTW
   Hayes IJ, 1997, LECT NOTES COMPUT SC, V1207, P1
   HEMER D, 2001, LNCS, V2152, P249
   HEMER D, 2002, ELECT NOTES COMPUTER, V61
   Lau KK, 1997, LECT NOTES COMPUT SC, V1207, P295
   Lau KK, 1997, J LOGIC PROGRAM, V30, P239, DOI 10.1016/S0743-1066(96)00128-8
   Lau KK, 1999, J LOGIC PROGRAM, V38, P259, DOI 10.1016/S0743-1066(98)10023-7
   Marriott K., 1988, Proceedings. International Computer Science Conference '88. Artificial Intelligence: Theory and Applications, P206
   MORGAN C, 1990, ACTA INFORM, V27, P481, DOI 10.1007/BF00277386
   Morgan Carroll, 1994, Programming from specifications
   Nickson R, 1997, SCI COMPUT PROGRAM, V29, P279, DOI 10.1016/S0167-6423(97)00002-6
   READ M, 1992, LNCS, V1207, P69
   SERES S, 2000, LNCS, V2042, P57
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   Somogyi Z., 1995, PROCEEDINGS OF THE AUSTRALIAN COMPUTER SCIENCE CONFERENCE, P499
   Srinivas Y. V., 1995, Mathematics of Program Construction. Third International Conference, MPC '95 Proceedings, P399
   STERLING L, 1994, ART PROLOG
   Turski WladyslawM., 1987, SPECIFICATION COMPUT
NR 32
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2008
VL 8
BP 1
EP 31
DI 10.1017/S1471068407003043
PN 1
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 264ZO
UT WOS:000253329100001
DA 2024-07-18
ER

PT J
AU Lu, L
AF Lu, Lunjin
TI Improving precision of type analysis using non-discriminative union
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE type analysis; non-discriminative union; abstract interpretation;
   tabling
ID ABSTRACT INTERPRETATION; LOGIC PROGRAMS; FRAMEWORK; INFERENCE; SYSTEM;
   PROLOG
AB This paper presents a new type analysis for logic programs. The analysis is performed with a priori type definitions; and type expressions are formed from a fixed alphabet of type constructors. Non-discriminative union is used to join type information from different sources without loss of precision. An operation that is performed repeatedly during an analysis is to detect if a fixpoint has been reached. This is reduced to checking the emptiness of types. Due to the use of non-discriminative union, the fundamental problem of checking the emptiness of types is more complex in the proposed type analysis than in other type analyses with a priori type definitions. The experimental results, however, show that use of tabling reduces the effect to a small fraction of analysis time on a set of benchmarks.
C1 Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
C3 Oakland University
RP Lu, L (corresponding author), Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
EM lunjin@acm.org
CR AIKEN A, 1994, LNCS, V864, P43
   [Anonymous], 1994, The Godel Programming Language
   BARBUTI R, 1993, ACM T PROGR LANG SYS, V15, P133, DOI 10.1145/151646.151650
   BARBUTI R, 1992, SCI COMPUT PROGRAM, V19, P281, DOI 10.1016/0167-6423(92)90038-D
   Boye J., 1996, Logic Programming. Proceedings of the Twelfth International Conference on Logic Programming, P747
   BRONSARD F, 1992, P JOINT INT C S LOG, P321
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Charatonik W, 1998, LECT NOTES COMPUT SC, V1503, P278
   Codish M, 2000, THEOR COMPUT SCI, V238, P131, DOI 10.1016/S0304-3975(98)00122-4
   CODISH M, 1994, LECT NOTES COMPUT SC, V864, P281
   Comon H., 2002, Tree Automata Techniques and Applications
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   COUSOT P, 1995, P 7 ACM C FUNCT PROG
   DART PW, 1992, J LOGIC PROGRAM, V14, P31, DOI 10.1016/0743-1066(92)90046-6
   DART PW, 1992, TYPES LOGIC PROGRAMM, P157
   EDER E, 1985, J SYMB COMPUT, V1, P31, DOI 10.1016/S0747-7171(85)80027-4
   Fages F, 2001, THEOR PRACT LOG PROG, V1, P751, DOI 10.1017/S1471068401001120
   Fruhwirth T., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P300, DOI 10.1109/LICS.1991.151654
   GALLAGHER J, 2002, LNCS, V2257, P243
   GALLAGHER JP, 1994, MIT PS LOG, P599
   GALLAGHER JP, 1995, P INT LOG PROGR S, P351
   Gecseg Ferenc., 1984, TREE AUTOMATA
   HEINTZE N, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P197, DOI 10.1145/96709.96729
   Heintze N., 1992, TYPES LOGIC PROGRAMM, P141
   HERMENEGILDO MV, 1992, J LOGIC PROGRAM, V13, P349, DOI 10.1016/0743-1066(92)90053-6
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hill PM, 2002, J LOGIC COMPUT, V12, P497, DOI 10.1093/logcom/12.3.497
   HORIUCHI K, 1988, LECT NOTES COMPUT SC, V315, P195
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   KAHRS S, 1996, LECT NOTES COMPUTER, V1140, P17
   KANAMORI T, 1993, J LOGIC PROGRAM, V15, P1, DOI 10.1016/0743-1066(93)90011-5
   KANAMORI T, 1985, P 9 INT JOINT C ART, P704
   Lagoon V, 2001, LECT NOTES COMPUT SC, V2024, P296
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lu L., 2003, Higher-Order and Symbolic Computation, V16, P341, DOI 10.1023/A:1025824903683
   LU L, 1995, P 1995 ACM SIGPLAN S, P241
   LU L, 1998, EMPTINESS ALGORITHM
   Lu LJ, 1998, J LOGIC PROGRAM, V36, P1, DOI 10.1016/S0743-1066(97)10010-3
   Marriott K., 1989, Information Processing 89. Proceedings of the IFIP 11th World Computer Congress, P601
   MISHRA P, 1984, P IEEE INT S LOG PRO, P289
   MYCROFT A, 1984, ARTIF INTELL, V23, P295, DOI 10.1016/0004-3702(84)90017-1
   NILSSON U, 1989, LECT NOTES COMPUT SC, V348, P68
   REDDY US, 1990, P 1990 N AM C LOG PR, P836
   Rychlikowski P., 2001, P 3 ACM SIGPLAN INT, P61
   SAGLAM H, 1995, CSTR95017 U BRIST DE
   SMAUS JG, 2001, LECT NOTES ARTIF INT, V2250, P282
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   VANHENTENRYCK P, 1995, J LOGIC PROGRAM, V22, P179, DOI 10.1016/0743-1066(94)00021-W
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   YARDENI E, 1991, LOGIC PROGRAMM, P379
   YARDENI E, 1991, J LOGIC PROGRAM, V10, P125, DOI 10.1016/0743-1066(91)80002-U
   Zobel J., 1987, Logic Programming. Proceedings of the Fourth International Conference, P817
NR 53
TC 3
Z9 3
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2008
VL 8
BP 33
EP 79
DI 10.1017/S1471068407003055
PN 1
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 264ZO
UT WOS:000253329100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Holzbaur, C
   De la Banda, MG
   Stuckey, PJ
   Duck, GJ
AF Holzbaur, C
   De la Banda, MG
   Stuckey, PJ
   Duck, GJ
TI Optimizing compilation of constraint handling rules in HAL
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint handling rules; optimizing compilation
AB In this paper we discuss the optimizing compilation of Constraint Handling Rules (CHRs). CHRs are a multi-headed committed choice constraint language, commonly applied for writing incremental constraint solvers. CHRs are usually implemented as a language extension that compiles to the underlying language. In this paper we show how we can use different kinds of information in the compilation of CHRs to obtain access efficiency, and a better translation of the CHR rules into the underlying language, which in this case is HAL. The kinds of information used include the types, modes, determinism, functional dependencies and symmetries of the CHR constraints. We also show how to analyze CHR programs to determine this information about functional dependencies, symmetries and other kinds of information supporting optimizations.
C1 Univ Vienna, Dept Med Cybernet & Art Intelligence, Vienna, Austria.
   Monash Univ, Sch Comp Sci & Software Engn, Monash, Australia.
   Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
C3 University of Vienna; Monash University; University of Melbourne
RP Univ Vienna, Dept Med Cybernet & Art Intelligence, Vienna, Austria.
OI Garcia de la Banda, Maria/0000-0002-6666-514X; Stuckey,
   Peter/0000-0003-2186-0459; Duck, Gregory/0000-0002-0837-9671
CR Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Demoen B, 1999, LECT NOTES COMPUT SC, V1713, P174
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Holzbaur C., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P74
   HOLZBAUR C, 2000, J APPL ARTIFICIAL IN, V14, P4
   *JCK, 2002, JCK JAV CONSTR KIT
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
NR 7
TC 12
Z9 12
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 503
EP 531
DI 10.1017/S1471068405002413
PN 4-5
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Benoy, F
   King, A
   Mesnard, F
AF Benoy, F
   King, A
   Mesnard, F
TI Programming pearl - Computing convex hulls with a linear solver
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE convex hull; polyhedra; abstract interpretation; linear constraints
ID POLYHEDRA
AB A programming tactic involving polyhedra is reported that has been widely applied in the polyhedral analysis of (constraint) logic programs. The method enables the computations of convex hulls that are required for polyhedral analysis to be coded with linear constraint solving machinery that is available in many Prolog systems.
C1 Univ Kent, Comp Lab, Canterbury, Kent, England.
C3 University of Kent
RP Univ Kent, Comp Lab, Canterbury, Kent, England.
EM p.m.benoy@kent.ac.uk; a.m.king@kent.ac.uk; fred@univ-reunion.fr
CR ANCOURT C, 1991, THESIS U PARIS 6
   Bagnara R, 2002, LECT NOTES COMPUT SC, V2477, P213
   Benoy F, 1997, LECT NOTES COMPUT SC, V1207, P204
   CHANDRU V, 2000, IN PRESS ANN MATH AR
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   CODISH M, 2001, LECT NOTES COMPUTER, V2237, P135
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   DEBACKER B, 1993, INT C LOG PROGR, P550
   Deransart P., 1996, PROLOG STANDARD
   GENAIM S, 2001, LECT NOTES ARTIF INT, V2250, P681
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   Horsfall N.M., 1990, Oxford Readings in Vergil's Aeneid, P305
   KING A, 1997, INT S LOG PROGR, P261
   LEVERGE H, 1992, 635 IRISA CAMP U BEA
   Loechner V, 1997, INT J PARALLEL PROG, V25, P525, DOI 10.1023/A:1025117523902
   Mesnard F, 2001, LECT NOTES COMPUT SC, V2126, P93
   Rockafellar R. T., 2015, CONVEX ANAL, DOI DOI 10.1515/9781400873173
   SAGLAM H, 1997, LOGIC PROGRAMMING SY, P282
   Vanhoof W., 2001, LECT NOTES ARTIF INT, V2250, P707
NR 19
TC 18
Z9 18
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 259
EP 271
DI 10.1017/S1471068404002261
PN 1-2
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400009
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, Y
AF Zhang, Y
TI Two results for prioritized logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE nonmonotonic reasoning; prioritized logic programs; knowledge
   representation
AB Prioritized default reasoning has illustrated its rich expressiveness and flexibility in knowledge representation and reasoning. However, many important aspects of prioritized default reasoning have yet to be thoroughly explored. In this paper, we investigate two properties of prioritized logic programs in the context of answer set semantics. Specifically, we reveal a close relationship between mutual defeasibility and uniqueness of the answer set for a prioritized logic program. We then explore how the splitting technique for extended logic programs can be extended to prioritized logic programs. We prove splitting theorems that can be used to simplify the evaluation of a prioritized logic program under certain conditions.
C1 Univ Western Sydney, Sch Comp & Informat Technol, Penrith, NSW 1797, Australia.
C3 Western Sydney University
RP Univ Western Sydney, Sch Comp & Informat Technol, Locked Bag 1797, Penrith, NSW 1797, Australia.
EM yan@cit.uws.edu.au
CR APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   CHOELWINSKI P, 1994, LECT NOTES COMPUTER, V933, P456
   DAS SK, 1992, DEDUCTIVE DATABASE L
   Delgrande JP, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P392
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Schaub Torsten., 2001, IJCAI, P597
   WANG K, 2000, P INT JOINT C COMP L, P164
   Zhang Y, 1997, LOGIC PROGRAMM, P69
   Zhang Y, 1999, LOGIC PROGRAMM, P471
   ZHANG Y, 2001, LECT NOTES ARTIF INT, V2256, P630
NR 16
TC 15
Z9 18
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2003
VL 3
BP 223
EP 242
DI 10.1017/S1471068402001552
PN 2
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LK
UT WOS:000182638100003
DA 2024-07-18
ER

PT J
AU Wang, HD
   Shakerin, F
   Gupta, G
AF Wang, Huaduo
   Shakerin, Farhad
   Gupta, Gopal
TI FOLD-RM: A Scalable, Efficient, and Explainable Inductive Learning
   Algorithm for Multi-Category Classification of Mixed Data
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE explainable AI; data mining; inductive logic programming; machine
   learning
ID LOGIC
AB FOLD-RM is an automated inductive learning algorithm for learning default rules for mixed (numerical and categorical) data. It generates an (explainable) answer set programming (ASP) rule set for multi-category classification tasks while maintaining efficiency and scalability. The FOLD-RM algorithm is competitive in performance with the widely used, state-of-the-art algorithms such as XGBoost and multi-layer perceptrons, however, unlike these algorithms, the FOLD-RM algorithm produces an explainable model. FOLD-RM outperforms XGBoost on some datasets, particularly large ones. FOLD-RM also provides human-friendly explanations for predictions.
C1 [Wang, Huaduo; Shakerin, Farhad; Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Wang, HD (corresponding author), Univ Texas Dallas, Richardson, TX 75083 USA.
EM huaduo.wang@utdallas.edu; farhad.shakerin@utdallas.edu;
   gupta@utdallas.edu
FU NSF [IIS 1718945, IIS 1910131, IIP 1916206]; US DoD; Atos Corp; Amazon
   Corp
FX Authors acknowledge support from NSF grants IIS 1718945, IIS 1910131,
   IIP 1916206, US DoD, Atos Corp and Amazon Corp. We thank our colleagues
   Joaquin Arias, Parth Padalkar, Kinjal Basu, Sarat Chandra Varanasi,
   Elmer Salzar, Fang Li, Serdar Erbatur, and Doug DeGroot for discussions
   and help.
CR Aggarwal C.C., 2018, NEURAL NETWORKS DEEP, DOI DOI 10.1007/978-3-319-94463-0
   [Anonymous], 2005, P AAAI
   Arias J, 2020, ELECTRON P THEOR COM, P59, DOI 10.4204/EPTCS.325.12
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Asadi S, 2016, NEUROCOMPUTING, V191, P19, DOI 10.1016/j.neucom.2016.01.010
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Blockeel H, 1998, ARTIF INTELL, V101, P285, DOI 10.1016/S0004-3702(98)00034-4
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Craven MW, 1996, ADV NEUR IN, V8, P24
   Cropper A., 2020, INDUCTIVE LOGIC PROG
   Dua D., 2017, UCI MACHINE LEARNING
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1
   Grandini M., 2020, ARXIV 200805756
   Gunning D., 2016, Broad agency announcement explainable artificial intelligence (xai)
   Landwehr Niels, 2006, P NAT C ART INT, P389
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Muggleton S, 2012, MACH LEARN, V86, P3, DOI 10.1007/s10994-011-5259-2
   Núñez H, 2006, NEURAL PROCESS LETT, V24, P1, DOI 10.1007/s11063-006-9007-8
   Plotkin G. D., 1971, Machine Intelligence Volume 6, P101
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Sakama C., 2005, ACM Transactions on Computational Logic, V6, P203, DOI 10.1145/1055686.1055687
   Shakerin F., 2018, 28 INT C INDUCTIVE L, V2206, P36
   Shakerin F., 2020, THESIS U TEXAS DALLA
   Shakerin F, 2017, THEOR PRACT LOG PROG, V17, P1010, DOI 10.1017/S1471068417000333
   Srinivasan A., 2001, The aleph manual
   Takemura A., 2021, ELECTRON P THEOR COM, V345, P127
   Wang H., P 1 INT WORKSHOP COM
   Zeng Q, 2014, PROC VLDB ENDOW, V8, P197, DOI 10.14778/2735508.2735510
NR 31
TC 2
Z9 2
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 658
EP 677
AR PII S1471068422000205
DI 10.1017/S1471068422000205
EA JUL 2022
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000819679800001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Drabent, W
AF Drabent, Wlodzimierz
TI On Correctness and Completeness of an <i>n</i> Queens Program
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; declarative programming; program completeness;
   program correctness; specification; nonground answers
ID VERIFICATION
AB Thom Fruhwirth presented a short, elegant, and efficient Prolog program for the n queens problem. However, the program may be seen as rather tricky and one may not be convinced about its correctness. This paper explains the program in a declarative way and provides proofs of its correctness and completeness. The specification and the proofs are declarative, that is they abstract from any operational semantics. The specification is approximate, it is unnecessary to describe the program's semantics exactly. Despite the program works on non-ground terms, this work employs the standard semantics, based on logical consequence and Herbrand interpretations. Another purpose of the paper is to present an example of precise declarative reasoning about the semantics of a logic program.
C1 [Drabent, Wlodzimierz] Polish Acad Sci, Inst Comp Sci, Ul Jana Kazimierza 5, PL-01248 Warsaw, Poland.
   [Drabent, Wlodzimierz] Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences; Linkoping University
RP Drabent, W (corresponding author), Polish Acad Sci, Inst Comp Sci, Ul Jana Kazimierza 5, PL-01248 Warsaw, Poland.; Drabent, W (corresponding author), Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
EM drabent@ipipan.waw.pl
RI Drabent, Włodzimierz/JGM-7411-2023
OI Drabent, Włodzimierz/0000-0002-4700-7272
CR Apt K.R., 1997, INT SERIES COMPUTER
   Apt KR, 2009, LECT NOTES COMPUT SC, V5533, P1, DOI 10.1007/978-3-642-01748-3_1
   BEZEM M, 1993, J LOGIC PROGRAM, V15, P79, DOI 10.1016/0743-1066(93)90014-8
   Bossi A., 1989, LECT NOTES COMPUT SC, V352, P96
   Clark K. L., 1979, 7959 IMP COLL
   DERANSART P, 1993, THEOR COMPUT SCI, V118, P99, DOI 10.1016/0304-3975(93)90107-5
   Deransart Pierre., 1993, GRAMMATICAL VIEW LOG
   Drabent W, 2005, THEOR PRACT LOG PROG, V5, P669, DOI 10.1017/S147106840500253X
   Drabent W., 2020, ARXIV
   Drabent W., 2021, ARXIV
   Drabent W, 2018, THEOR PRACT LOG PROG, V18, P1, DOI 10.1017/S1471068417000047
   Drabent W, 2016, ACM T COMPUT LOG, V17, DOI 10.1145/2898434
   FALASCHI M, 1989, THEOR COMPUT SCI, V69, P289, DOI 10.1016/0304-3975(89)90070-4
   Fruhwirth T., 1991, NQUEENS POST COMP LA
   Li Y., 2020, ELECTRON P THEOR COM, V326, P182
   Pedreschi D, 1999, J LOGIC PROGRAM, V39, P125, DOI 10.1016/S0743-1066(98)10035-3
   Shapiro EY., 1983, Algorithmic Program Debugging
   Sterling L. S., 1994, The Art of Prolog, V2nd
NR 18
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 37
EP 50
DI 10.1017/S1471068421000223
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500002
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Maher, MJ
AF Maher, Michael J. J.
TI On Signings and the Well-Founded Semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE signing; well-founded semantics; query optimization
ID FIXPOINT
AB In this note, we use Kunen's notion of a signing to establish two theorems about the well-founded semantics of logic programs, in the case where we are interested in only (say) the positive literals of a predicate p that are consequences of the program. The first theorem identifies a class of programs for which the well-founded and Fitting semantics coincide for the positive part of p. The second theorem shows that if a program has a signing, then computing the positive part of p under the well-founded semantics requires the computation of only one part of each predicate. This theorem suggests an analysis for query answering under the well-founded semantics. In the process of proving these results, we use an alternative formulation of the well-founded semantics of logic programs, which might be of independent interest.
C1 [Maher, Michael J. J.] Reasoning Res Inst, Canberra, ACT, Australia.
RP Maher, MJ (corresponding author), Reasoning Res Inst, Canberra, ACT, Australia.
EM michael.maher@reasoning.org.au
CR Apt K.R., 1988, THEORY DECLARATIVE K, P89
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Berman KA, 1995, LECT NOTES ARTIF INT, V928, P113
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   Cormen T.H., 2009, Introduction to Algorithms, P651
   Drabent W., 1991, New Generation Computing, V9, P69, DOI 10.1007/BF03037151
   DUNG PM, 1992, THEOR COMPUT SCI, V105, P7, DOI 10.1016/0304-3975(92)90285-N
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Hitzler P, 2002, LECT NOTES ARTIF INT, V2479, P205
   Kemp D. B., 1997, Journal of Systems Integration, V7, P191, DOI 10.1023/A:1008275219746
   Kleene SC., 1952, Introduction to metamathematics
   KUNEN K, 1989, J LOGIC PROGRAM, V7, P231, DOI 10.1016/0743-1066(89)90022-8
   MAHER M. J., 2021, DEFEASIBLE REASONING
   Maher MJ, 2020, THEOR PRACT LOG PROG, V20, P552, DOI 10.1017/S1471068420000010
   Morishita S, 1996, J COMPUT SYST SCI, V52, P506, DOI 10.1006/jcss.1996.0038
   TURNER H, 1993, LOGIC PROGRAMM, P567
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
NR 20
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 115
EP 127
AR PII S1471068421000077
DI 10.1017/S1471068421000077
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cristiá, M
   Rossi, G
AF Cristia, Maximiliano
   Rossi, Gianfranco
TI Integrating Cardinality Constraints into Constraint Logic Programming
   with Sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE {log}; set theory; cardinality; formal verification; constraint logic
   programming
ID COMBINING SETS
AB Formal reasoning about finite sets and cardinality is important for many applications. including software verification, where very often one needs to reason about the size of a given data structure. The Constraint Logic Programming tool {log} provides a decision procedure for deciding the satisfiability of formulas involving very general forms of finite sets, although it does not provide cardinality constraints. In this paper we adapt and integrate a decision procedure for a theory of finite sets with cardinality into {log}. The proposed solver is proved to be a decision procedure for its formulas. Besides, the new CLP instance is implemented as part of the {log} tool. In turn, the implementation uses Howe and King's Prolog SAT solver and Prolog's CLP(Q) library. as an integer linear programming solver. The empirical evaluation of this implementation based on +250 real verification conditions shows that it can be useful in practice.
C1 [Cristia, Maximiliano] Univ Nacl Rosario, Rosario, Argentina.
   [Cristia, Maximiliano] CIFASIS, Rosario, Argentina.
   [Rossi, Gianfranco] Univ Parma, Parma, Italy.
C3 National University of Rosario; University of Parma
RP Cristiá, M (corresponding author), Univ Nacl Rosario, Rosario, Argentina.; Cristiá, M (corresponding author), CIFASIS, Rosario, Argentina.
EM cristia@cifasis-conicet.gov.ar; gianfranco.rossi@unipr.it
RI Rossi, Gianfranco/C-9386-2017; Cristia, Maximiliano/GMX-3220-2022;
   Cristia, Maximiliano/JBR-9752-2023
OI Cristia, Maximiliano/0000-0001-9163-2609; Cristia,
   Maximiliano/0000-0001-9163-2609
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Alberti F, 2017, FORM METHOD SYST DES, V51, P545, DOI 10.1007/s10703-017-0279-6
   [Anonymous], 1992, The Z Notation
   Azevedo F, 2007, CONSTRAINTS, V12, P93, DOI 10.1007/s10601-006-9012-6
   Bansal K, 2018, LOG METH COMPUT SCI, V14, DOI 10.23638/LMCS-14(4:12)2018
   Bender M, 2017, LECT NOTES ARTIF INT, V10395, P166, DOI 10.1007/978-3-319-63046-5_11
   Berkovits I, 2019, LECT NOTES COMPUT SC, V11562, P245, DOI 10.1007/978-3-030-25543-5_15
   Bradley AR, 2006, LECT NOTES COMPUT SC, V3855, P427
   CANTONE D, 2001, MG COMP SCI, P3
   CLEARSY, AT B HOM PAG
   CRISTI A M., 2019, REWRITE RULES SOLVER
   Cristia M, 2021, J AUTOM REASONING, V65, P1125, DOI 10.1007/s10817-021-09602-2
   Cristiá M, 2021, J AUTOM REASONING, V65, P809, DOI 10.1007/s10817-021-09589-w
   Cristiá M, 2021, J AUTOM REASONING, V65, P463, DOI 10.1007/s10817-020-09577-6
   Cristiá M, 2020, J AUTOM REASONING, V64, P295, DOI 10.1007/s10817-019-09520-4
   Cristiá M, 2018, LECT NOTES COMPUT SC, V11194, P333, DOI 10.1007/978-3-030-02149-8_20
   Cristiá M, 2017, LECT NOTES ARTIF INT, V10395, P185, DOI 10.1007/978-3-319-63046-5_12
   Cristiá M, 2013, LECT NOTES COMPUT SC, V8137, P229, DOI 10.1007/978-3-642-40561-7_16
   DAL PAL U A., 2003, P 5 ACM SIGPLAN INT, P219, DOI DOI 10.1145/888251.888272
   Ding YX, 2020, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-02196-4
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   Dovier A, 1996, J LOGIC PROGRAM, V28, P1, DOI 10.1016/0743-1066(95)00147-6
   Dovier A, 2006, THEOR PRACT LOG PROG, V6, P645, DOI 10.1017/S1471068406002730
   FERRO A., 1980, LNCS, V87, P88, DOI DOI 10.1007/3-540-10009-1_8
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   GERVET C., 1994, CONJUNTO CONSTRAINT, P733
   Hawkins P, 2005, J ARTIF INTELL RES, V24, P109, DOI 10.1613/jair.1638
   HIBTI M., 1995, THESIS HENRI SCI APP
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   Howe JM, 2012, THEOR COMPUT SCI, V435, P43, DOI 10.1016/j.tcs.2012.02.024
   Kisby C, 2020, AAAI CONF ARTIF INTE, V34, P2870
   Kuncak V, 2006, J AUTOM REASONING, V36, P213, DOI 10.1007/s10817-006-9042-l
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Levatich M, 2020, LECT NOTES COMPUT SC, V11990, P360, DOI 10.1007/978-3-030-39322-9_17
   Piskac R, 2008, LECT NOTES COMPUT SC, V4905, P218, DOI 10.1007/978-3-540-78163-9_20
   Piskac R, 2020, LECT NOTES COMPUT SC, V12166, P3, DOI 10.1007/978-3-030-51074-9_1
   Piskac R, 2010, LECT NOTES ARTIF INT, V6173, P149
   ROSSI, 2008, PEOPLE
   Saaltink M., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P72, DOI 10.1007/BFb0027284
   STUCKEY P. J., 2020, MINIZINC HDB
   Stump A, 2001, IEEE S LOG, P29, DOI 10.1109/LICS.2001.932480
   Suter P, 2011, LECT NOTES COMPUT SC, V6538, P403, DOI 10.1007/978-3-642-18275-4_28
   Williams HP, 2009, INT SER OPER RES MAN, V130, P1, DOI 10.1007/978-0-387-92280-5
   Yessenov K, 2010, LECT NOTES COMPUT SC, V5944, P380, DOI 10.1007/978-3-642-11319-2_27
   Zarba C, 2005, J AUTOM REASONING, V34, P1, DOI 10.1007/s10817-005-3075-8
   Zarba C. G., 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P363
   Zarba CG, 2002, LECT NOTES ARTIF INT, V2309, P103
NR 47
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2023
VL 23
IS 2
BP 468
EP 502
DI 10.1017/S1471068421000521
EA NOV 2021
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA KB0F2
UT WOS:000792182300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Botha, L
   Meyer, T
   Peñaloza, R
AF Botha, Leonard
   Meyer, Thomas
   Penaloza, Rafael
TI The Probabilistic Description Logic BALC
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 16th European Conference on Logics in Artificial Intelligence (JELIA)
CY MAY 07-11, 2019
CL Rende, ITALY
SP Univ Calabria, Dept Math & Comp Sci, Artificial Intelligence Grp, Univ Alta Formazione, Assessorato Istruzione & Attivita Culturali,, Regione Calabria, EurAI, Springer, Altilia S r l, Integris S p a, Intellimech, Magazzini Rossella, NTT Data
DE knowledge representation and nonmonotonic reasoning; databases and
   semantic web reasoning
ID REPRESENTATION; UNCERTAINTY
AB Description logics (DLs) are well-known knowledge representation formalisms focused on the representation of terminological knowledge. Due to their first-order semantics, these languages (in their classical form) are not suitable for representing and handling uncertainty. A probabilistic extension of a light-weight DL was recently proposed for dealing with certain knowledge occurring in uncertain contexts. In this paper, we continue that line of research by introducing the Bayesian extension BALC of the propositionally closed DL ALC. We present a tableau-based procedure for deciding consistency and adapt it to solve other probabilistic, contextual, and general inferences in this logic. We also show that all these problems remain ExpTime-complete, the same as reasoning in the underlying classical ALC.
C1 [Botha, Leonard; Meyer, Thomas] Univ Cape Town, Rondebosch, South Africa.
   [Botha, Leonard; Meyer, Thomas] CAIR, Pretoria, South Africa.
   [Penaloza, Rafael] Univ Milano Bicocca, Milan, Italy.
C3 University of Cape Town; University of Milano-Bicocca
RP Peñaloza, R (corresponding author), Univ Milano Bicocca, Milan, Italy.
EM rafael.penaloza@unimib.it
RI Meyer, Thomas/ABF-5366-2020
OI Meyer, Thomas/0000-0003-2204-6969; Penaloza, Rafael/0000-0002-2693-5790
CR [Anonymous], 2017, An Introduction to Description Logic, DOI DOI 10.1017/9781139025355
   Artale A, 2009, J ARTIF INTELL RES, V36, P1, DOI 10.1613/jair.2820
   BAADER F, 1995, J AUTOM REASONING, V14, P149, DOI 10.1007/BF00883932
   BAADER F, 2007, DESCRIPTION LOGIC HD
   Baader F, 2007, LECT NOTES COMPUT SC, V4548, P11
   Baader F, 2010, J LOGIC COMPUT, V20, P5, DOI 10.1093/logcom/exn058
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Botha, 2018, THESIS U CAPE TOWN S
   Botha L., 2018, CEUR WORKSHOP PROC, V2211
   Botha L, 2019, LECT NOTES ARTIF INT, V11468, P339, DOI 10.1007/978-3-030-19570-0_22
   Brace K. S., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P40, DOI 10.1109/DAC.1990.114826
   Ceylan, 2018, THESIS DRESDEN U TEC
   Ceylan Ismail Ilkan, 2018, Reasoning Web. Learning, Uncertainty, Streaming, and Scalability. 14th International Summer School 2018. Tutorial Lectures: Lecture Notes in Computer Science (LNCS 11078), P35, DOI 10.1007/978-3-030-00338-8_3
   Ceylan II, 2017, J AUTOM REASONING, V58, P67, DOI 10.1007/s10817-016-9386-0
   Ceylan II, 2014, LECT NOTES ARTIF INT, V8761, P77, DOI 10.1007/978-3-319-11558-0_6
   Ceylan II, 2014, LECT NOTES ARTIF INT, V8562, P480, DOI 10.1007/978-3-319-08587-6_37
   d'Amato C, 2008, LECT NOTES ARTIF INT, V5291, P146, DOI 10.1007/978-3-540-87993-0_13
   Darwiche A, 2009, MODELING AND REASONING WITH BAYESIAN NETWORKS, P1
   Donini FM, 2000, ARTIF INTELL, V124, P87, DOI 10.1016/S0004-3702(00)00070-9
   Gottlob G, 2013, ANN MATH ARTIF INTEL, V69, P37, DOI 10.1007/s10472-013-9342-1
   Gutiérrez-Basulto V, 2017, J ARTIF INTELL RES, V58, P1, DOI 10.1613/jair.5222
   HALPERN JY, 1990, ARTIF INTELL, V46, P311, DOI 10.1016/0004-3702(90)90019-V
   LEE CY, 1959, BELL SYST TECH J, V38, P985, DOI 10.1002/j.1538-7305.1959.tb01585.x
   Lee K., 2006, CEUR WORKSHOP PROC, V189
   Lukasiewicz T, 2008, J WEB SEMANT, V6, P291, DOI 10.1016/j.websem.2008.04.001
   Meyer Thomas., 2006, P 21 NATL C ARTIFICI, P269
   Pearl J., 1986, Bayesian networks: a model of self-activated memory for evidential reasoning
   Penaloza R., 2009, THESIS DRESDEN U TEC
   Schild K., 1991, P 12 INT JOINT C ART, P466
   SCHMIDTSCHAUSS M, 1991, ARTIF INTELL, V48, P1, DOI 10.1016/0004-3702(91)90078-X
   Zese R, 2018, ANN MATH ARTIF INTEL, V82, P101, DOI 10.1007/s10472-016-9529-3
NR 32
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2021
VL 21
IS 4
SI SI
BP 404
EP 427
DI 10.1017/S1471068420000460
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ZB6GG
UT WOS:000756937700002
DA 2024-07-18
ER

PT J
AU Albert, E
   Genaim, S
   Gutiérrez, R
   Martin-Martin, E
AF Albert, Elvira
   Genaim, Samir
   Gutierrez, Raul
   Martin-Martin, Enrique
TI A Transformational Approach to Resource Analysis with Typed-norms
   Inference
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE resource analysis; typed-norms; data-flow analysis; program
   transformation
ID COST-ANALYSIS; LOGIC PROGRAMS
AB In order to automatically infer the resource consumption of programs, analyzers track howdata sizeschange along program's execution. Typically, analyzers measure the sizes of data by applyingnormswhich are mappings from data to natural numbers that represent the sizes of the corresponding data. When norms are defined by taking type information into account, they are namedtyped-norms. This article presents a transformational approach to resource analysis with typed-norms that are inferred by a data-flow analysis. The analysis is based on a transformation of the program into anintermediate abstract programin which each variable is abstracted with respect to all considered norms which are valid for its type. We also present the data-flow analysis to automatically infer the required, useful, typed-norms from programs. Our analysis is formalized on a simple rule-based representation to which programs written in different programming paradigms (e.g., functional, logic, and imperative) can be automatically translated. Experimental results on standard benchmarks used by other type-based analyzers show that our approach is both efficient and accurate in practice.
C1 [Albert, Elvira; Genaim, Samir; Martin-Martin, Enrique] Univ Complutense Madrid, Dep Sistemas Informat & Computac, C Prof Jose Garcia Santesmases 9, Madrid 28040, Spain.
   [Gutierrez, Raul] Univ Politecn Valencia, Dep Sistemes Informat & Computac, Camino Vera S-N, Valencia 46022, Spain.
C3 Complutense University of Madrid; Universitat Politecnica de Valencia
RP Albert, E (corresponding author), Univ Complutense Madrid, Dep Sistemas Informat & Computac, C Prof Jose Garcia Santesmases 9, Madrid 28040, Spain.
EM elvira@fdi.ucm.es; samir.genaim@fdi.ucm.es; rgutierrez@dsic.upv.es;
   emartinm@ucm.es
RI Gutiérrez, Raúl/P-4531-2019
OI Gutiérrez, Raúl/0000-0002-3984-2868; Genaim, Samir/0000-0002-7176-1881;
   MARTIN-MARTIN, ENRIQUE/0000-0002-1664-018X
FU Spanish MICINN/FEDER, UE [RTI2018-094403-B-C31, RTI2018-094403-B-C32];
   MINECO [TIN2015-69175-C4-2-R, TIN2015-69175-C4-1-R]; CM project
   [S2018/TCS-4314]; GV project [PROMETEO/2019/098]; UPV project
   [SP20180225]; INCIBE program "Ayudas para la excelencia de los equipos
   de investigacion avanzada en ciberseguridad"
FX This work was funded partially by the Spanish MICINN/FEDER, UE projects
   RTI2018-094403-B-C31 and RTI2018-094403-B-C32, MINECO projects
   TIN2015-69175-C4-2-R and TIN2015-69175-C4-1-R, by the CM project
   S2018/TCS-4314, the GV project PROMETEO/2019/098, and the UPV project
   SP20180225. Raul Gutierrez was also supported by INCIBE program "Ayudas
   para la excelencia de los equipos de investigacion avanzada en
   ciberseguridad."
CR AGHA G, 1993, SIGPLAN NOTICES, V28, P23, DOI 10.1145/173284.155335
   Albert E, 2007, LECT NOTES COMPUT SC, V4421, P157
   Albert E, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P368
   Albert E., 2011, LNCS, V7078, P238, DOI DOI 10.1007/978-3-642-54862-8_
   Albert E., 2011, LNCS, V7078, P238, DOI DOI 10.1007/978-3-642-25318-8_
   Albert E, 2014, LECT NOTES COMPUT SC, V8901, P38, DOI 10.1007/978-3-319-14125-1_3
   Albert E, 2015, SOFTW TEST VERIF REL, V25, P218, DOI 10.1002/stvr.1569
   Albert E, 2012, THEOR COMPUT SCI, V413, P142, DOI 10.1016/j.tcs.2011.07.009
   Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Alonso D, 2011, ELECTRON NOTES THEOR, V279, P3, DOI 10.1016/j.entcs.2011.11.002
   [Anonymous], 2013, TOCL
   BOSSI A, 1991, LECT NOTES COMPUT SC, V494, P153
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Flores-Montoya Antonio, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P275, DOI 10.1007/978-3-319-12736-1_15
   Flores-Montoya A, 2016, LECT NOTES COMPUT SC, V9995, P254, DOI 10.1007/978-3-319-48989-6_16
   Genaim S., 2002, LNCS, V2294, P123
   Grobauer B, 2001, ACM SIGPLAN NOTICES, V36, P253, DOI 10.1145/507669.507666
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hoffmann Jan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P781, DOI 10.1007/978-3-642-31424-7_64
   Hoffmann J, 2017, ACM SIGPLAN NOTICES, V52, P359, DOI 10.1145/3093333.3009842
   Hofmann M., 2003, 30 S PRINC PROGR LAN
   Hughes J., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P410, DOI 10.1145/237721.240882
   Hughes J, 1999, ACM SIGPLAN NOTICES, V34, P70, DOI 10.1145/317765.317785
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   King A, 1997, LOGIC PROGRAMM, P261
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Nielson F., 1999, Principles of Program Analysis
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Puebla, 1996, LNCS, V1145, P270
   Sands J D., 1990, THESIS
   Serrano A, 2014, THEOR PRACT LOG PROG, V14, P739, DOI 10.1017/S147106841400057X
   SERRANO A, 2013, THEORY PRACT LOG P S, V13, P4
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Vasconcelos P., 2008, THESIS
   Vasconcelos PB, 2004, LECT NOTES COMPUT SC, V3145, P86
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
   Wei-Ngan Chin, 2001, Higher-Order and Symbolic Computation, V14, P261, DOI 10.1023/A:1012996816178
NR 38
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2020
VL 20
IS 3
BP 310
EP 357
AR PII S1471068419000401
DI 10.1017/S1471068419000401
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA2BG
UT WOS:000577597100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amendola, G
   Ricca, F
   Truszczynski, M
AF Amendola, Giovanni
   Ricca, Francesco
   Truszczynski, Miroslaw
TI Beyond NP: Quantifying over Answer Sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE ASP; Quantified Logics; Polynomial Hierarchy
ID LOGIC; COMPLEXITY
AB Answer Set Programming (ASP) is a logic programming paradigm featuring a purely declarative language with comparatively high modeling capabilities. Indeed, ASP can model problems in NP in a compact and elegant way. However, modeling problems beyond NP with ASP is known to be complicated, on the one hand, and limited to problems in Sigma(P)(2) on the other. Inspired by the way Quantified Boolean Formulas extend SAT formulas to model problems beyond NP, we propose an extension of ASP that introduces quantifiers over stable models of programs. We name the new language ASP with Quantifiers (ASP(Q)). In the paper we identify computational properties of ASP(Q); we highlight its modeling capabilities by reporting natural encodings of several complex problems with applications in artificial intelligence and number theory; and we compare ASP(Q) with related languages. Arguably, ASP(Q) allows one to model problems in the Polynomial Hierarchy in a direct way, providing an elegant expansion of ASP beyond the class NP.
C1 [Amendola, Giovanni; Ricca, Francesco] Univ Calabria, Arcavacata Di Rende, Italy.
   [Truszczynski, Miroslaw] Univ Kentucky, Lexington, KY 40506 USA.
C3 University of Calabria; University of Kentucky
RP Amendola, G (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM amendola@mat.unical.it; ricca@mat.unical.it; mirek@cs.uky.edu
RI Amendola, Giovanni/Q-1859-2018
OI Amendola, Giovanni/0000-0002-2111-9671
FU NSF [IIS-1707371]; MIUR under PRIN 2017 project [2017M9C25L_001 (CUP
   H24I17000080001)]
FX The work of the third author has been partially supported by the NSF
   grant IIS-1707371. This work has been partially supported by MIUR under
   PRIN 2017 project n. 2017M9C25L_001 (CUP H24I17000080001).
CR Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Amendola G., 2018, CEUR WORKSHOP P, V2271
   [Anonymous], UNIFORM CONVERGENCE
   [Anonymous], 1998, STAT LEARNING THEORY
   BenEliyahu R, 1996, ANN MATH ARTIF INTEL, V18, P3, DOI 10.1007/BF02136172
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   BLUMER A, 1989, J ACM, V36, P929, DOI 10.1145/76359.76371
   Bogaerts B, 2016, THEOR PRACT LOG PROG, V16, P570, DOI 10.1017/S1471068416000387
   Bordeaux L., 2002, Principles and Practice of Constraint Programming - CP 2002. 8th International Conference, CP 2002. Proceedings (Lecture Notes in Computer Science Vol.2470), P371
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   CAO F, 1995, MINIMAX APPL, P269
   Chung F., 1989, SIAM J. Discrete Math., V2, P467, DOI [10.1137/0402041, DOI 10.1137/0402041]
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DENECKER M, 2014, KR
   Denecker M., 2012, LIPICS, V17, P277
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Faber Wolfgang, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P44, DOI 10.1007/978-3-642-20832-4_4
   FABER W, 2009, CEUR WORKSHOP P, V546, P34
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2016, AI MAG, V37, P33, DOI 10.1609/aimag.v37i3.2673
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Hurlbert G., 1999, Congr. Numer., V139, P41
   Ko K.-I., 1995, MINIMAX APPL, P219
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Milans K, 2006, SIAM J DISCRETE MATH, V20, P769, DOI 10.1137/050636218
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Redl C, 2017, LECT NOTES ARTIF INT, V10377, P176, DOI 10.1007/978-3-319-61660-5_16
   ROMERO J, 2017, CEUR WORKSH P 1868
   ROSSI F, 2006, FDN ARTIFICIAL INTEL, V2, P3
   Schaefer M, 1999, ANN IEEE CONF COMPUT, P6, DOI 10.1109/CCC.1999.766255
   Schaefer M, 1999, J COMPUT SYST SCI, V58, P177, DOI 10.1006/jcss.1998.1602
   Stockmeyer L. J., 1976, Theoretical Computer Science, V3, P1, DOI 10.1016/0304-3975(76)90061-X
   Stockmeyer L.J., 1973, P STOC 73, P1
NR 46
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 705
EP 721
DI 10.1017/S1471068419000140
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arias, J
   Carro, M
AF Arias, Joaquin
   Carro, Manuel
TI Evaluation of the Implementation of an Abstract Interpretation Algorithm
   using Tabled CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Abstract Interpretation; Constraints; Tabling; Prolog; PLAI; CiaoPP
ID LOGIC; FRAMEWORK; SYSTEM; CIAO
AB CiaoPP is an analyzer and optimizer for logic programs, part of the Ciao Prolog system. It includes PLAI, a fixpoint algorithm for the abstract interpretation of logic programs which we adapt to use tabled constraint logic programming. In this adaptation, the tabling engine drives the fixpoint computation, while the constraint solver handles the LUB of the abstract substitutions of different clauses. That simplifies the code and improves performance, since termination, dependencies, and some crucial operations (e.g., branch switching and resumption) are directly handled by the tabling engine. Determining whether the fixpoint has been reached uses semantic equivalence, which can decide that two syntactically different abstract substitutions represent the same element in the abstract domain. Therefore, the tabling analyzer can reuse answers in more cases than an analyzer using syntactical equality. This helps achieve better performance, even taking into account the additional cost associated to these checks. Our implementation is based on the TCLP framework available in Ciao Prolog and is one-third the size of the initial fixpoint implementation in CiaoPP. Its performance has been evaluated by analyzing several programs using different abstract domains.
C1 [Arias, Joaquin; Carro, Manuel] IMDEA Software Inst, Madrid, Spain.
   [Arias, Joaquin; Carro, Manuel] Univ Politecn Madrid, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Arias, J (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM joaquin.arias@imdea.org; manuel.carro@imdea.org
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135; Arias, Joaquin/0000-0003-4148-311X
FU EIT Digital; MINECO project [TIN2015-67522-C3-1-R]; Comunidad de Madrid
   project - EIE Funds of the European Union [S2018/TCS-4339 BLOQUES-CM]
FX Work partially supported by EIT Digital (https://eitdigital.eu), MINECO
   project TIN2015-67522-C3-1-R (TRACES), and Comunidad de Madrid project
   S2018/TCS-4339 BLOQUES-CM co-funded by EIE Funds of the European Union.
CR Arias J, 2019, THEOR PRACT LOG PROG, V19, P412, DOI 10.1017/S1471068418000571
   Arias J, 2019, LECT NOTES COMPUT SC, V11372, P98, DOI 10.1007/978-3-030-05998-9_7
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P100
   de Guzmán PC, 2012, LECT NOTES COMPUT SC, V7294, P104, DOI 10.1007/978-3-642-29822-6_11
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   Demoen B., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P21, DOI 10.1007/BFb0056605
   Dietrich S. W., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P264
   FREIRE J, 2001, LECT NOTES COMPUTER, V1140, P243
   Gange G, 2013, THEOR PRACT LOG PROG, V13, P593, DOI 10.1017/S1471068413000379
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   JANSSENS G, 1995, ILPS, P336
   JANSSENS G, 1998, TABULATION PARSING D
   KANAMORI T, 1993, J LOGIC PROGRAM, V15, P1, DOI 10.1016/0743-1066(93)90011-5
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Muthukumar K., 1989, 1989 N AM C LOG PROG, P166
   Muthukumar K., 1990, Technical Report ACT-DC-153-90
   Nielson F., 2005, PRINCIPLES PROGRAM A
   Schrijvers T, 2008, THEOR PRACT LOG PROG, V8, P491, DOI 10.1017/S147106840800327X
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
   Warren DavidS., 1999, Programming in Tabled Prolog
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
NR 34
TC 0
Z9 0
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1107
EP 1123
DI 10.1017/S1471068419000383
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500030
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baryannis, G
   Tachmazidis, I
   Batsakis, S
   Antoniou, G
   Alviano, M
   Sellis, T
   Tsai, PW
AF Baryannis, George
   Tachmazidis, Ilias
   Batsakis, Sotiris
   Antoniou, Grigoris
   Alviano, Mario
   Sellis, Timos
   Tsai, Pei-Wei
TI A Trajectory Calculus for Qualitative Spatial Reasoning Using Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Answer Set Programming; Spatial Reasoning; Qualitative Reasoning;
   Trajectory
AB Spatial information is often expressed using qualitative terms such as natural language expressions instead of coordinates; reasoning over such terms has several practical applications, such as bus routes planning. Representing and reasoning on trajectories is a specific case of qualitative spatial reasoning that focuses on moving objects and their paths. In this work, we propose two versions of a trajectory calculus based on the allowed properties over trajectories, where trajectories are defined as a sequence of non-overlapping regions of a partitioned map. More specifically, if a given trajectory is allowed to start and finish at the same region, 6 base relations are defined (TC-6). If a given trajectory should have different start and finish regions but cycles are allowed within, 10 base relations are defined (TC-10). Both versions of the calculus are implemented as ASP programs; we propose several different encodings, including a generalised program capable of encoding any qualitative calculus in ASP. All proposed encodings are experimentally evaluated using a real-world dataset. Experiment results show that the best performing implementation can scale up to an input of 250 trajectories for TC-6 and 150 trajectories for TC-10 for the problem of discovering a consistent configuration, a significant improvement compared to previous ASP implementations for similar qualitative spatial and temporal calculi.
C1 [Baryannis, George; Tachmazidis, Ilias; Batsakis, Sotiris; Antoniou, Grigoris] Univ Huddersfield, Huddersfield, W Yorkshire, England.
   [Alviano, Mario] Univ Calabria, Commenda Di Rende, Italy.
   [Sellis, Timos; Tsai, Pei-Wei] Swinburne Univ Technol, Hawthorn, Vic, Australia.
C3 University of Huddersfield; University of Calabria; Swinburne University
   of Technology
RP Baryannis, G (corresponding author), Univ Huddersfield, Huddersfield, W Yorkshire, England.
EM g.bargiannis@hud.ac.uk; i.tachmazidis@hud.ac.uk; s.batsakis@hud.ac.uk;
   g.antoniou@hud.ac.uk; alviano@mat.unical.it; tsellis@swin.edu.au;
   ptsail@swin.edu.au
RI Alviano, Mario/H-1355-2012; Sellis, Timos/A-8731-2016; Tsai,
   Pei-Wei/F-1948-2018; Baryannis, George/P-5884-2014
OI Sellis, Timos/0000-0002-9067-5639; Tsai, Pei-Wei/0000-0002-9429-8957;
   Baryannis, George/0000-0002-2118-5812
CR Andrienko G, 2017, IEEE T VIS COMPUT GR, V23, P2120, DOI 10.1109/TVCG.2016.2616404
   [Anonymous], 2016, OPENACCESS SERIES IN
   [Anonymous], 1981, IJCAI
   CADOLI M, 1993, J LOGIC PROGRAM, V17, P127, DOI 10.1016/0743-1066(93)90029-G
   Cohn AnthonyG., 1997, GeoInformatica, V1, P275, DOI DOI 10.1023/A:1009712514511
   Delafontaine M, 2011, INFORM SCIENCES, V181, P1573, DOI 10.1016/j.ins.2010.12.021
   Delafontaine M, 2011, EXPERT SYST APPL, V38, P5187, DOI 10.1016/j.eswa.2010.10.042
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Freuder EC, 2006, FOUND ARTIF INTELL, P13
   Gebser M., 2016, OPEN ACCESS SERIES I, V52
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Hazarika S. M., 2001, Spatial Information Theory. Foundations of Geographic Information Science. International Conference, COSIT 2001. Proceedings (Lecture Notes in Computer Science Vol.2205), P92
   Hu SR, 2016, IEEE T INTELL TRANSP, V17, P195, DOI 10.1109/TITS.2015.2473691
   Li JJ, 2012, PROC INT C TOOLS ART, P603, DOI 10.1109/ICTAI.2012.87
   Martínez-Martín E, 2012, J UNIVERS COMPUT SCI, V18, P1343
   Monferrer MTE, 2002, LECT NOTES ARTIF INT, V2504, P29
   Moreira-Matias L, 2013, IEEE T INTELL TRANSP, V14, P1393, DOI 10.1109/TITS.2013.2262376
   Muller P., 1998, P 6 INT C PRINC KNOW, P131
   Noyon V, 2007, GEOINFORMATICA, V11, P479, DOI 10.1007/s10707-007-0023-2
   Renz J, 2000, LECT NOTES ARTIF INT, V1849, P184
   Renz J., 2002, The Region Connection Calculus, P41, DOI [10.1007/3-540-70736-0_4, DOI 10.1007/3-540-70736-0_4]
   Van de Weghe N, 2005, LECT NOTES COMPUT SC, V3799, P60
   Van de Weghe N, 2006, CONTROL CYBERN, V35, P97
   Walega PA, 2017, THEOR PRACT LOG PROG, V17, P205, DOI 10.1017/S1471068416000193
   Wang ZY, 2017, IEEE INT CONF MOB DA, P266, DOI 10.1109/MDM.2017.43
   Yuan J, 2013, IEEE T KNOWL DATA EN, V25, P220, DOI 10.1109/TKDE.2011.200
   Zimmermann K, 1996, APPL INTELL, V6, P49, DOI 10.1007/BF00117601
   [No title captured]
   [No title captured]
   [No title captured]
NR 30
TC 11
Z9 11
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 355
EP 371
DI 10.1017/S147106841800011X
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400005
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Gebser, M
   Obermeier, P
   Otto, T
   Schaub, T
   Sabuncu, O
   Nguyen, V
   Son, TC
AF Gebser, Martin
   Obermeier, Philipp
   Otto, Thomas
   Schaub, Torsten
   Sabuncu, Orkunt
   Van Nguyen
   Tran Cao Son
TI Experimenting with robotic intra-logistics domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
AB We introduce the asprilo(1) framework to facilitate experimental studies of approaches addressing complex dynamic applications. For this purpose, we have chosen the domain of robotic intralogistics. This domain is not only highly relevant in the context of today's fourth industrial revolution but it moreover combines a multitude of challenging issues within a single uniform framework. This includes multi-agent planning, reasoning about action, change, resources, strategies, etc. In return, asprilo allows users to study alternative solutions as regards effectiveness and scalability. Although asprilo relies on Answer Set Programming and Python, it is readily usable by any system complying with its fact-oriented interface format. This makes it attractive for benchmarking and teaching well beyond logic programming. More precisely, asprilo consists of a versatile benchmark generator, solution checker and visualizer as well as a bunch of reference encodings featuring various ASP techniques. Importantly, the visualizer's animation capabilities are indispensable for complex scenarios like intra-logistics in order to inspect valid as well as invalid solution candidates. Also, it allows for graphically editing benchmark layouts that can be used as a basis for generating benchmark suites.
C1 [Gebser, Martin; Obermeier, Philipp; Otto, Thomas; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Sabuncu, Orkunt] TED Univ, Ankara, Turkey.
   [Van Nguyen; Tran Cao Son] New Mexico State Univ, Las Cruces, NM 88003 USA.
C3 University of Potsdam; Ted University; New Mexico State University
RP Gebser, M (corresponding author), Univ Potsdam, Potsdam, Germany.
RI Schaub, Torsten/O-5873-2019; Gebser, Martin/B-7169-2018
OI Schaub, Torsten/0000-0002-7456-041X; 
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [117C044]; DFG [SCHA 550/9]
FX This work was partially supported by The Scientific and Technological
   Research Council of Turkey (TUBITAK) under project 117C044 and DFG grant
   SCHA 550/9.
CR Abseher M, 2016, FUND INFORM, V147, P1, DOI 10.3233/FI-2016-1396
   Alviano M, 2017, LECT NOTES ARTIF INT, V10640, P468, DOI 10.1007/978-3-319-70169-1_35
   Banbara M., 2016, P 11 INT C PRACT THE, P13
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Cholewinski P., 1995, P 12 INT C LOG PROGR, P267
   Erdem E., 2013, PROC AAAI C ARTIFICI, P290, DOI DOI 10.1609/AAAI.V27I1.8592
   Gebser M., 2018, THEORY PRACTICE LOGI
   Gebser M, 2013, LECT NOTES COMPUT SC, V8148, P348, DOI 10.1007/978-3-642-40564-8_35
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Ma H, 2017, AAMAS'17: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P837
   Ma H, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P1144
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Surynek P, 2010, AAAI CONF ARTIF INTE, P1261
   Tamura N, 2009, CONSTRAINTS, V14, P254, DOI 10.1007/s10601-008-9061-0
   Nguyen V, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1216
   Yu J., 2012, ALGORITHMIC FDN ROBO, P157
NR 17
TC 11
Z9 13
U1 0
U2 13
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 502
EP 519
DI 10.1017/S1471068418000200
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400014
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Olarte, C
   Pimentel, E
   Rueda, C
AF Olarte, Carlos
   Pimentel, Elaine
   Rueda, Camilo
TI A concurrent constraint programming interpretation of access permissions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE access permissions; concurrent constraint programming; linear logic;
   focusing
ID LINEAR LOGIC
AB A recent trend in object-oriented programming languages is the use of access permissions (APs) as an abstraction for controlling concurrent executions of programs. The use of AP source code annotations defines a protocol specifying how object references can access the mutable state of objects. Although the use of APs simplifies the task of writing concurrent code, an unsystematic use of them can lead to subtle problems. This paper presents a declarative interpretation of APs as linear concurrent constraint programs (1cc). We represent APs as constraints (i.e., formulas in logic) in an underlying constraint system whose entailment relation models the transformation rules of APs. Moreover, we use processes in 1cc to model the dependencies imposed by APs, thus allowing the faithful representation of their flow in the program. We verify relevant properties about AP programs by taking advantage of the interpretation of 1cc processes as formulas in Girard's intuitionistic linear logic (ILL). Properties include deadlock detection, program correctness (whether programs adhere to their AP specifications or not), and the ability of methods to run concurrently. By relying on a focusing discipline for ILL, we provide a complexity measure for proofs of the above-mentioned properties. The effectiveness of our verification techniques is demonstrated by implementing the Alcove tool that includes an animator and a verifier. The former executes the 1cc model, observing the flow of APs, and quickly finding inconsistencies of the APs vis-a-vis the implementation. The latter is an automatic theorem prover based on ILL.
C1 [Olarte, Carlos] Univ Fed Rio Grande do Norte, ECT, Natal, RN, Brazil.
   [Pimentel, Elaine] Univ Fed Rio Grande do Norte, DMAT, Natal, RN, Brazil.
   [Rueda, Camilo] Pontificia Univ Javeriana Cali, DECC, Valle Del Cauca, Colombia.
C3 Universidade Federal do Rio Grande do Norte; Universidade Federal do Rio
   Grande do Norte; Pontificia Universidad Javeriana
RP Olarte, C (corresponding author), Univ Fed Rio Grande do Norte, ECT, Natal, RN, Brazil.
EM carlos.olarte@gmail.com; elaine.pimentel@gmai1.com;
   camilo.rueda@gmail.com
RI Olarte, Carlos/J-4341-2014; Rueda, Camilo/HZH-8521-2023
OI Rueda, camilo/0000-0001-8387-9644; Pimentel, Elaine/0000-0002-7113-0801;
   Olarte, Carlos/0000-0002-7264-7773
FU CNPq; CAPES/Colciencias/INRIA's project STIC AmSud; project FWF [START
   Y544-N23]
FX This work has been partially supported by CNPq,
   CAPES/Colciencias/INRIA's project STIC AmSud and the project FWF START
   Y544-N23.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Andreoli J. M., 1992, Journal of Logic and Computation, V2, P297, DOI 10.1093/logcom/2.3.297
   Beckman NE, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P227
   Bierhoff K, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P301
   Boyland J., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P2
   Boyland J, 2003, LECT NOTES COMPUT SC, V2694, P55
   DeBoer FS, 1997, ACM T PROGR LANG SYS, V19, P685, DOI 10.1145/265943.265954
   Fages F, 2001, INFORM COMPUT, V165, P14, DOI 10.1006/inco.2000.3002
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Haemmerlé R, 2011, THEOR PRACT LOG PROG, V11, P469, DOI [10.1017/S1471068411000123, 10.1017/S147106841100012.1]
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Jagadeesan R., 2005, P 7 ACM SIGPLAN INT, P164
   Leino KRM, 2010, LECT NOTES COMPUT SC, V5944, P2, DOI 10.1007/978-3-642-11319-2_2
   Leino KRM, 1998, ACM SIGPLAN NOTICES, V33, P144, DOI 10.1145/286942.286953
   LINCOLN P, 1992, ANN PURE APPL LOGIC, V56, P239, DOI 10.1016/0168-0072(92)90075-B
   MARTINEZ T, 2010, PPDP, P57
   Miller D., 2012, PROGRAMMING HIGHER O
   Nadathur G., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P810
   Naden K, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P557
   Nielsen M., 2002, Nordic Journal of Computing, V9, P145
   Nigam V, 2012, IEEE S LOG, P511, DOI 10.1109/LICS.2012.61
   Olarte C., 2012, PPDP, P207
   Olarte C, 2017, THEOR COMPUT SCI, V685, P46, DOI 10.1016/j.tcs.2016.08.026
   Olarte C, 2013, CONSTRAINTS, V18, P535, DOI 10.1007/s10601-013-9145-3
   Pottier F, 2013, ACM SIGPLAN NOTICES, V48, P173, DOI [10.1145/2544174.2500598, 10.1145/2500365.2500598]
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   Stork S, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2543920
   Stork Sven., 2009, Proceeding of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P933
   Sunshine J, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P713
   Ullrich S. A., 2016, THESIS
NR 32
TC 3
Z9 3
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2018
VL 18
IS 2
SI SI
BP 252
EP 295
DI 10.1017/S1471068418000017
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GF5VA
UT WOS:000432034700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bendkowski, M
   Grygiel, K
   Tarau, P
AF Bendkowski, Maciej
   Grygiel, Katarzyna
   Tarau, Paul
TI Technical Note Random generation of closed simply typed λ-terms: A
   synergy between logic programming and Boltzmann samplers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Boltzmann samplers; random generation of simply typed lambda-terms; type
   inference; combinatorics of lambda-terms; random generation of simply
   typed normal forms; parallel implementation of Boltzmann samplers
AB A natural approach to software quality assurance consists in writing unit tests securing programmer-declared code invariants. Throughout the literature, a great body of work has been devoted to tools and techniques automating this labour-intensive process. A prominent example is the successful use of randomness, in particular, random typable lambda-terms, in testing functional programming compilers such as the Glasgow Haskell Compiler. Unfortunately, due to the intrinsically difficult combinatorial structure of typable lambda-terms, no effective uniform sampling method is known, setting it as a fundamental open problem in the random software testing approach. In this paper, we combine the framework of Boltzmann samplers, a powerful technique of random combinatorial structure generation, with today's Prolog systems offering a synergy between logic variables, unification with occurs check and efficient backtracking. This allows us to develop a novel sampling mechanism able to construct uniformly random closed simply typed lambda-terms of up size 120. We apply our techniques to the generation of uniformly random closed simply typed normal forms and design a parallel execution mechanism pushing forward the achievable term size to 140.
C1 [Bendkowski, Maciej; Grygiel, Katarzyna] Jagiellonian Univ, Theoret Comp Sci Dept, Fac Math & Comp Sci, Ul Prof Lojasiewicza 6, PL-30348 Krakow, Poland.
   [Tarau, Paul] Univ North Texas, Dept Comp Sci & Engn, Denton, TX USA.
C3 Jagiellonian University; University of North Texas System; University of
   North Texas Denton
RP Bendkowski, M (corresponding author), Jagiellonian Univ, Theoret Comp Sci Dept, Fac Math & Comp Sci, Ul Prof Lojasiewicza 6, PL-30348 Krakow, Poland.
EM bendkowski@tcs.uj.edu.pl; grygiel@tcs.uj.edu.pl; paul.tarau@unt.edu
RI Grygiel, Katarzyna/U-4549-2018
FU Polish National Science Center [2013/11/B/ST6/00975]; NSF [1423324];
   Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1423324] Funding Source: National Science
   Foundation
FX The first two authors have been partially supported by the Polish
   National Science Center grant 2013/11/B/ST6/00975. The third author has
   been supported by NSF grant 1423324. A conference version of the present
   paper appears in the proceedings of PADL 2017 (PC chairs: Yuliya Lierler
   and Walid Taha).
CR [Anonymous], 1972, INDAGATIONES MATHEMA, DOI DOI 10.1016/1385-7258(72)90034-0
   Barendregt, 1991, HDB LOGIC COMPUTER S, V2
   Bendkowski Maciej, 2016, SOFSEM 2016 : Theory and Practice of Computer Science. 42nd International Conference on Current Trends in Theory and Practice of Computer Science. Proceedings: LNCS 9587, P183, DOI 10.1007/978-3-662-49192-8_15
   Bendkowski M., 2017, P PRACT ASP DECL LAN
   Bodini O., 2015, PURE MATH APPL, V25, P115
   Bodini O., 2011, P 8 WORKSH AN ALG CO, P23, DOI DOI 10.1137/1.9781611973013.3
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   David R, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(1:02)2013
   Duchon P, 2004, COMB PROBAB COMPUT, V13, P577, DOI 10.1017/S0963548304006315
   Flajolet P., 2009, Analytic Combinatorics, Vfirst
   Grygiel K, 2015, J FUNCT PROGRAM, V25, DOI 10.1017/S0956796815000271
   Grygiel K, 2013, J FUNCT PROGRAM, V23, P594, DOI 10.1017/S0956796813000178
   Hindley J Roger., 2008, Lambda-Calculus and Combinators: An Introduction, V13
   Koopman P., 2003, Implementation of Functional Languages. 14th International Workshop, IFL 2002. Revised Selected Papers (Lecture Notes in Computer Science Vol.2670), P84
   Koopman P., 2006, 7 S TRENDS FUNCT PRO, P68
   Palka Michal H, 2011, P 6 INT WORKSH AUT S, P91, DOI DOI 10.1145/1982595.1982615
   Sloane N.J.A., The On-Line Encyclopedia of Integer Sequences-A338706-Number of 2-linear trees on n nodes
   Tarau P, 2015, 31 INT C LOG PROGR I
   Tarau P, 2015, LECT NOTES COMPUT SC, V9131, P115, DOI 10.1007/978-3-319-19686-2_9
   Wilf H., 2006, Generatingfunctionology
NR 20
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2018
VL 18
IS 1
BP 97
EP 119
DI 10.1017/S147106841700045X
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FU3QC
UT WOS:000423765600004
DA 2024-07-18
ER

PT J
AU Reynolds, A
   Tinelli, C
   Barrett, C
AF Reynolds, Andrew
   Tinelli, Cesare
   Barrett, Clark
TI Constraint solving for finite model finding in SMT solvers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Satisfiability modulo theories; finite model finding
ID SAT MODULO THEORIES; THEOREM PROVER; INSTANTIATION
AB Satisfiability modulo theories (SMT) solvers have been used successfully as reasoning engines for automated verification and other applications based on automated reasoning. Current techniques for dealing with quantified formulas in SMT are generally incomplete, forcing SMT solvers to report "unknown" when they fail to prove the unsatisfiability of a formula with quantifiers. This inability to return counter models limits their usefulness in applications that produce queries involving quantified formulas. In this paper, we reduce these limitations by integrating finite model finding techniques based on constraint solving into the architecture used by modern SMT solvers. This approach is made possible by a novel solver for cardinality constraints, as well as techniques for on-demand instantiation of quantified formulas. Experiments show that our approach is competitive with the state of the art in SMT, and orthogonal to approaches in automated theorem proving.
C1 [Reynolds, Andrew; Tinelli, Cesare] Univ Iowa, Dept Comp Sci, Iowa City, IA 52242 USA.
   [Barrett, Clark] Stanford Univ, Dept Comp Sci, Stanford, CA 94305 USA.
C3 University of Iowa; Stanford University
RP Reynolds, A (corresponding author), Univ Iowa, Dept Comp Sci, Iowa City, IA 52242 USA.
EM andrew.j.reynolds@gmail.com; cesare-tinelli@uiowa.edu;
   barrett@cs.stanford.edu
OI Tinelli, Cesare/0000-0002-6726-775X; Barrett, Clark/0000-0002-9522-3084
FU Intel Corporation
FX The work of the first two authors was partially funded by a grant from
   Intel Corporation.
CR [Anonymous], ISABELLE HOL PROOF A
   Baader Franz, 1998, TERM REWRITING ALL
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Barrett C, 2006, LECT NOTES ARTIF INT, V4246, P512, DOI 10.1007/11916277_35
   Baumgartner P, 2014, LECT NOTES ARTIF INT, V8562, P152, DOI 10.1007/978-3-319-08587-6_11
   Baumgartner P, 2009, J APPL LOGIC, V7, P58, DOI 10.1016/j.jal.2007.07.005
   Blanchette JC, 2011, LECT NOTES ARTIF INT, V6803, P116, DOI 10.1007/978-3-642-22438-6_11
   Blanchette JC, 2010, LECT NOTES COMPUT SC, V6172, P131, DOI 10.1007/978-3-642-14052-5_11
   Bruttomesso R, 2009, ANN MATH ARTIF INTEL, V55, P63, DOI 10.1007/s10472-009-9152-7
   Claessen Koen., 2003, CADE 19 WORKSHOP MOD, P11
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2007, LECT NOTES ARTIF INT, V4603, P183
   Déharbe D, 2011, LECT NOTES ARTIF INT, V6803, P222, DOI 10.1007/978-3-642-22438-6_18
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Dutertre Bruno., 2006, The yices smt solver, V2, P2
   Garey M. R., 1974, P 6 ANN ACM S THEORY, P47
   Ge YT, 2009, ANN MATH ARTIF INTEL, V55, P101, DOI 10.1007/s10472-009-9153-6
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   Goel A., 2012, P SMT 12
   Ihlemann C, 2008, LECT NOTES COMPUT SC, V4963, P265, DOI 10.1007/978-3-540-78800-3_19
   Jovanovic D, 2013, FORM METHOD SYST DES, V42, P67, DOI 10.1007/s10703-012-0159-z
   Korovin K, 2008, LECT NOTES ARTIF INT, V5195, P292, DOI 10.1007/978-3-540-71070-7_24
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Krstic S, 2007, LECT NOTES ARTIF INT, V4720, P1
   McCune William, 1994, TECHNICAL REPORT
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Reger G, 2016, LECT NOTES COMPUT SC, V9710, P323, DOI 10.1007/978-3-319-40970-2_20
   Reynolds Andrew, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P640, DOI 10.1007/978-3-642-39799-8_42
   Reynolds Andrew, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P377, DOI 10.1007/978-3-642-38574-2_26
   Reynolds A., 2013, THESIS
   Reynolds A, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P195, DOI 10.1109/FMCAD.2014.6987613
   Schulz S, 2002, AI COMMUN, V15, P111
   Sutcliffe G, 2009, J AUTOM REASONING, V43, P337, DOI 10.1007/s10817-009-9143-8
   Tinelli C, 1996, APPL LOG SER, V3, P103
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Tuttle MR, 2012, 2012 11TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P195, DOI 10.1109/NCA.2012.46
   Zhang JA, 1995, INT JOINT CONF ARTIF, P298
NR 38
TC 0
Z9 0
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 516
EP 558
DI 10.1017/S1471068417000175
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bichler, M
   Morak, M
   Woltran, S
AF Bichler, Manuel
   Morak, Michael
   Woltran, Stefan
TI The power of non-ground rules in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE answer set programming; rewriting; non-ground rules; rule decomposition
ID COMPLEXITY; SEMANTICS
AB Answer set programming (ASP) is a well-established logic programming language that offers an intuitive, declarative syntax for problem solving. In its traditional application, a fixed ASP program for a given problem is designed and the actual instance of the problem is fed into the program as a set of facts. This approach typically results in programs with comparably short and simple rules. However, as is known from complexity analysis, such an approach limits the expressive power of ASP; in fact, an entire NP-check can be encoded into a single large rule body of bounded arity that performs both a guess and a check within the same rule. Here, we propose a novel paradigm for encoding hard problems in ASP by making explicit use of large rules which depend on the actual instance of the problem. We illustrate how this new encoding paradigm can be used, providing examples of problems from the first, second, and even third level of the polynomial hierarchy. As state-of-the-art solvers are tuned towards short rules, rule decomposition is a key technique in the practical realization of our approach. We also provide some preliminary benchmarks which indicate that giving up the convenient way of specifying a fixed program can lead to a significant speed-up.
C1 [Bichler, Manuel; Morak, Michael; Woltran, Stefan] TU Wien, Vienna, Austria.
C3 Technische Universitat Wien
RP Bichler, M (corresponding author), TU Wien, Vienna, Austria.
EM bichler@dbai.tuwien.ac.at; morak@dbai.tuwien.ac.at;
   woltran@dbai.tuwien.ac.at
RI Morak, Michael/AAI-1392-2020
OI Morak, Michael/0000-0002-2077-7672
FU Austrian Science Fund (FWF) [P25607] Funding Source: Austrian Science
   Fund (FWF)
CR Alviano Mario, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P282, DOI 10.1007/978-3-642-24206-9_17
   ALVIANO M, 2013, P LPNMR, P54
   [Anonymous], 1977, STOC
   ARNBORG S, 1987, SIAM J ALGEBRA DISCR, V8, P277, DOI 10.1137/0608024
   Bichler M., 2015, THESIS
   Bodlaender HL, 1996, SIAM J COMPUT, V25, P1305, DOI 10.1137/S0097539793251219
   Bonatti P.A., 2008, Proceedings of the 23rd national conference on Artificial Intelligence - Volume 1, AAAI'08, V1, P418
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cat B., 2012, LIPICS, V17, P201
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DERMAKU A, 2008, LECT NOTES ARTIF INT, P1, DOI DOI 10.1007/978-3-540-88636-5_1
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2007, ANN MATH ARTIF INTEL, V51, P123, DOI 10.1007/s10472-008-9086-5
   Eiter T, 2010, AAAI CONF ARTIF INTE, P303
   Elkabani I, 2005, LECT NOTES ARTIF INT, V3662, P427, DOI 10.1007/11546207_40
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gottlob G, 2003, INFORM COMPUT, V183, P104, DOI 10.1016/S0890-5401(03)00012-9
   Gottlob G., 2012, P 13 INT C PRINC KNO, P254
   Gottlob G, 2009, J ACM, V56, DOI 10.1145/1568318.1568320
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Lefevre C., 2015, ABS150307717 CORR
   Lonsing F, 2015, LECT NOTES COMPUT SC, V9450, P418, DOI 10.1007/978-3-662-48899-7_29
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Morak Michael, 2012, P ICLP, V17, P247
NR 31
TC 13
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 552
EP 569
DI 10.1017/S1471068416000338
PN 5-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Santos, J
   Rocha, R
AF Santos, Joao
   Rocha, Ricardo
TI On the Implementation of an Or-Parallel Prolog System for Clusters of
   Multicores
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Or-parallelism; Environment Copying; Scheduling; Implementation;
   Performance
AB Nowadays, clusters of multicores are becoming the norm and, although, many or-parallel Prolog systems have been developed in the past, to the best of our knowledge, none of them was specially designed to explore the combination of shared and distributed memory architectures. In recent work, we have proposed a novel computational model specially designed for such combination which introduces a layered model with two scheduling levels, one for workers sharing memory resources, which we named a team of workers, and another for teams of workers (not sharing memory resources). In this work, we present a first implementation of such model and for that we revive and extend the YapOr system to exploit or-parallelism between teams of workers. We also propose a new set of built-in predicates that constitute the syntax to interact with an or-parallel engine in our platform. Experimental results show that our implementation is able to increase speedups as we increase the number of workers per team, thus taking advantage of the maximum number of cores in a machine, and to increase speedups as we increase the number of teams, thus taking advantage of adding more computer nodes to a cluster.
C1 [Santos, Joao] Univ Porto, CRACS, Rua Campo Alegre, P-4169007 Oporto, Portugal.
   Univ Porto, INESC TEC, Rua Campo Alegre, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, Rua Campo Alegre, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; INESC TEC; Universidade do Porto; Universidade do
   Porto
RP Santos, J (corresponding author), Univ Porto, CRACS, Rua Campo Alegre, P-4169007 Oporto, Portugal.
EM jsantos@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI SANTOS, JOAO/KHE-1146-2024; Rocha, Ricardo/B-2862-2012
OI Rocha, Ricardo/0000-0003-4502-8835
CR ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Costa VS, 2010, THEOR PRACT LOG PROG, V10, P417, DOI 10.1017/S1471068410000190
   COSTA VS, 1991, SIGPLAN NOTICES, V26, P83, DOI 10.1145/109626.109635
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Gupta G, 1999, LOGIC PROGRAMM, P290
   GUPTA G, 1994, MIT PS LOG, P93
   Lusk E., 1988, International Conference on Fifth Generation Computer Systems, P819
   Pontelli E, 2006, J PARALLEL DISTR COM, V66, P1267, DOI 10.1016/j.jpdc.2006.05.002
   Rocha R, 2003, LECT NOTES ARTIF INT, V2902, P136
   Rocha R., 1999, Progress in Artificial Intelligence. 9th Portuguese Conference on Artificial Intelligence, EPIA'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1695), P178
   Santos J, 2014, COMPUT SCI INF SYST, V11, P1435, DOI 10.2298/CSIS131025050S
   Vieira R., 2012, INT WORKSH DECL ASP
   Villaverde K., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P27
NR 14
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 899
EP 915
DI 10.1017/S1471068416000296
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tekle, KT
   Liu, YHA
AF Tekle, K. Tuncay
   Liu, Yanhong A.
TI Precise complexity guarantees for pointer analysis via datalog with
   extensions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Datalog; function symbols; universal quantification; computational
   complexity; static program analysis; pointer analysis; alias analysis
AB Pointer analysis is a fundamental static program analysis for computing the set of objects that an expression can refer to. Decades of research has gone into developing methods of varying precision and efficiency for pointer analysis for programs that use different language features, but determining precisely how efficient a particular method is has been a challenge in itself.
   For programs that use different language features, we consider methods for pointer analysis using Datalog and extensions to Datalog. When the rules are in Datalog, we present the calculation of precise time complexities from the rules using a new algorithm for decomposing rules for obtaining the best complexities. When extensions such as function symbols and universal quantification are used, we describe algorithms for efficiently implementing the extensions and the complexities of the algorithms.
C1 [Tekle, K. Tuncay; Liu, Yanhong A.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Tekle, KT (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM tuncay@cs.stonybrook.edu; liu@cs.stonybrook.edu
RI Tekle, Tuncay/JCD-9670-2023; Liu, Annie/KVB-5867-2024
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1248184] Funding Source: National Science
   Foundation; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [0964196] Funding Source:
   National Science Foundation
CR [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], 2011, P 2011 ACM SIGMOD IN
   [Anonymous], 1992, ACM LETT PROGRAM LAN
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], 1991, Ph.D. dissertation
   Avots D, 2005, PROC INT CONF SOFTW, P332
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   Deepak Goyal, 2005, Higher-Order and Symbolic Computation, V18, P15, DOI 10.1007/s10990-005-7005-6
   Diwan A, 1998, ACM SIGPLAN NOTICES, V33, P106, DOI 10.1145/277652.277670
   Ghiya R., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P121, DOI 10.1145/268946.268957
   Ghiya R., 2001, P 2001 ACM SIGPLAN C, P47
   Gorbovitski M, 2010, ACM SIGPLAN NOTICES, V45, P27, DOI 10.1145/1899661.1869635
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P254, DOI 10.1145/381694.378855
   Hind M., 2000, Software Engineering Notes, V25, P113, DOI 10.1145/347636.348916
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Liu YHA, 2012, ACM SIGPLAN NOTICES, V47, P395, DOI 10.1145/2398857.2384645
   Liu YA, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1552309.1552311
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Pearce D. J., 2007, ACM T PROGR LANG SYS, V30, P1
   RAMALINGAM G, 1994, ACM T PROGR LANG SYS, V16, P1467, DOI 10.1145/186025.186041
   Sagiv M, 1998, ACM T PROGR LANG SYS, V20, P1, DOI 10.1145/271510.271517
   Saha Diptikalyan, 2005, P 7 ACM SIGPLAN INT, P117, DOI DOI 10.1145/1069774.1069785
   Shapiro M., 1997, Static Analysis. 4th International Symposium, SAS '97 Proceedings, P16, DOI 10.1007/BFb0032731
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Smaragdakis Y., 2015, FDN TRENDS PROGRAM L, V2, P1, DOI DOI 10.1561/2500000014
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Sridharan M, 2009, LECT NOTES COMPUT SC, V5673, P205, DOI 10.1007/978-3-642-03237-0_15
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Steinbrunn M., 1997, VLDB Journal, V6, P191, DOI 10.1007/s007780050040
   Tekle K. T., 2016, ARXIV E PRINTS
   Tuncay Tekle K., 2010, P 12 INT ACM SIGPLAN, P35, DOI DOI 10.1145/1836089.1836094
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
   Zheng X, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P197, DOI 10.1145/1328438.1328464
NR 36
TC 1
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 916
EP 932
DI 10.1017/S1471068416000405
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ameloot, TJ
   van den Bussche, J
   Marczak, WR
   Alvaro, P
   Hellerstein, JM
AF Ameloot, Tom J.
   van den Bussche, Jan
   Marczak, William R.
   Alvaro, Peter
   Hellerstein, Joseph M.
TI Putting logic-based distributed systems on stable grounds
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Dedalus; Datalog; stable model semantics; distributed system;
   asynchronous communication
ID FAIRNESS
AB In the Declarative Networking paradigm, Datalog-like languages are used to express distributed computations. Whereas recently formal operational semantics for these languages have been developed, a corresponding declarative semantics has been lacking so far. The challenge is to capture precisely the amount of nondeterminism that is inherent to distributed computations due to concurrency, networking delays, and asynchronous communication. This paper shows how a declarative, model-based semantics can be obtained by simply using the well-known stable model semantics for Datalog with negation. We show that the model-based semantics matches previously proposed formal operational semantics.
C1 [Ameloot, Tom J.; van den Bussche, Jan] Hasselt, Comp Sci, Limburg, Belgium.
RP Ameloot, TJ (corresponding author), Hasselt, Comp Sci, Limburg, Belgium.
EM tom.ameloot@uhasselt.be; jan.vandenbussche@uhasselt.be;
   wrm@cs.berkeley.edu; palvaro@cs.berkeley.edu;
   hellerstein@cs.berkeley.edu
RI Van den Bussche, Jan/I-8102-2013
OI Alvaro, Peter/0000-0001-6672-240X; Van den Bussche,
   Jan/0000-0003-0072-3252
CR Abiteboul S, 1995, FDN DATABASES
   Abiteboul Serge, 2011, P 30 ACM SIGMOD SIGA, P293, DOI DOI 10.1145/1989284.1989320
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Alferes JJ, 2002, ARTIF INTELL, V138, P87, DOI 10.1016/S0004-3702(02)00183-2
   Alvaro Peter, 2009, Operating Systems Review, V43, P25, DOI 10.1145/1713254.1713261
   Alvaro P., 2011, CIDR, P249
   Alvaro P., 2009, EECS2009173 U CAL
   Alvaro P, 2011, LECT NOTES COMPUT SC, V6702, P262
   Ameloot T.J., 2011, P 30 ACM S PRINC DAT, P283
   Ameloot TJ, 2014, J COMPUT SYST SCI, V80, P1191, DOI 10.1016/j.jcss.2014.01.005
   Ameloot TJ, 2013, J ACM, V60, DOI 10.1145/2450142.2450151
   Ameloot Tom J., 2012, P INT C DAT THEOR, P86
   [Anonymous], 1986, Fairness
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2011, P 2011 ACM SIGMOD IN, DOI DOI 10.1145/1989323.1989456
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   APT KR, 1988, DISTRIB COMPUT, V2, P226, DOI 10.1007/BF01872848
   Attiya H., 2004, Distributed computing: fundamentals, simulations, and advanced topics, V19
   Cavage M., 2013, ACM QUEUE, V11, P4
   de Moor O, 2011, LECT NOTES COMPUTER, V6702
   Deutsch A., 2006, PODS 06, P90
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Grumbach S, 2010, LECT NOTES COMPUT SC, V5937, P88, DOI 10.1007/978-3-642-11503-5_9
   Hellerstein J., 2010, DATALOG REDUX EXPERI
   Hellerstein JM, 2010, SIGMOD REC, V39, P5, DOI 10.1145/1860702.1860704
   INTERLANDI M., 2013, P 7 A MEND INT WORKS
   Jim T, 2001, P IEEE S SECUR PRIV, P106, DOI 10.1109/SECPRI.2001.924291
   Krishnamurthy R., 1988, Proceedings of the Third International Conference on Data and Knowledge Bases: Improving Usability and Responsiveness, P416
   Lamport L, 2000, DISTRIB COMPUT, V13, P239, DOI 10.1007/PL00008921
   Lamport L., 2000, P 19 ACM S PRINC DIS, P3
   Leite J, 2007, LECT NOTES ARTIF INT, V4371, P246
   Leite JoaoAlexandre., 2002, Revised Papers from the 8th International Workshop on Intelligent Agents VIII, ATAL :01, P141
   Lobo J., 2012, LECT NOTES COMPUTER, P454
   Loo BT, 2009, COMMUN ACM, V52, P87, DOI 10.1145/1592761.1592785
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Ma JF, 2013, THEOR PRACT LOG PROG, V13, P815, DOI 10.1017/S1471068413000513
   Marczak W., 2011, UCBEECS2011154
   Navarro JA, 2009, LECT NOTES COMPUT SC, V5418, P76, DOI 10.1007/978-3-540-92995-6_6
   Nigam V, 2006, LECT NOTES ARTIF INT, V4237, P174
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   Vardi M.Y., 1982, P 14 ANN ACM S THEOR, P137, DOI DOI 10.1145/800070.802186
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zinn D., 2012, ICDT, P99, DOI [10.1145/2274576.2274588, DOI 10.1145/2274576.2274588]
NR 44
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2016
VL 16
BP 378
EP 417
DI 10.1017/S1471068415000381
PN 4
PG 40
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EA4ND
UT WOS:000386588500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, KW
   Wen, L
   Mu, KD
AF Wang, Kewen
   Wen, Lian
   Mu, Kedian
TI Random logic programs: Linear model
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; random logic programs
ID PHASE-TRANSITIONS
AB This paper proposes a model, the linear model, for randomly generating logic programs with low density of rules and investigates statistical properties of such random logic programs. It is mathematically shown that the average number of answer sets for a random program converges to a constant when the number of atoms approaches infinity. Several experimental results are also reported, which justify the suitability of the linear model. It is also experimentally shown that, under this model, the size distribution of answer sets for random programs tends to a normal distribution when the number of atoms is sufficiently large.
C1 [Wang, Kewen; Wen, Lian] Griffith Univ, Sch Informat & Commun Technol, Nathan, Qld 4111, Australia.
   [Mu, Kedian] Peking Univ, Sch Math Sci, Beijing, Peoples R China.
C3 Griffith University; Peking University
RP Wang, KW (corresponding author), Griffith Univ, Sch Informat & Commun Technol, Nathan, Qld 4111, Australia.
EM k.wang@griffith.edu.au; l.wen@griffith.edu.au; mukedian@math.pku.edu.cn
OI Wang, Kewen/0000-0002-0542-3761
FU Australian Research Council (ARC) [DP1093652, DP130102302]; Australian
   Research Council [DP1093652] Funding Source: Australian Research Council
FX The authors would like to thank the editor Michael Gelfond and three
   anonymous referees for their constructive comments, which helped
   significantly improve the quality of the paper. Thanks to Fangzhen Lin
   and Yi-Dong Shen for discussions on this topic. This work was supported
   by the Australian Research Council (ARC) under grants DP1093652 and
   DP130102302.
CR Achlioptas D, 2005, NATURE, V435, P759, DOI 10.1038/nature03602
   Achlioptas D, 1997, LECT NOTES COMPUT SC, V1330, P107, DOI 10.1007/BFb0017433
   [Anonymous], LOGIC PROGRAMMING PA
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Brass S., 1999, J LOGIC PROGRAM, V38, P167
   Cheeseman P.C., 1991, PROC 12 IJCAI, V91, P331, DOI [DOI 10.5555/1631171.1631221, 10.5555/1631171.1631221]
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   Gelfond M., 1988, P 7 INT C S LOG PROG, P579
   Gelfond M., 1990, P 5 LOG PROGR S, P1070
   Gent I. P., 1994, ECAI 94. 11th European Conference on Artificial Intelligence. Proceedings, P105
   Huang G., 2002, P 15 CAN C ART INT, P119
   HUBERMAN BA, 1987, ARTIF INTELL, V33, P155, DOI 10.1016/0004-3702(87)90033-6
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Kewen Wang, 2005, ACM Transactions on Computational Logic, V6, P295, DOI 10.1145/1055686.1055690
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lonc Z, 2004, THEOR PRACT LOG PROG, V4, P193, DOI 10.1017/S147106840300173X
   Marek V. W., 1993, NONMONOTONIC LOGIC C
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   MITCHELL D, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P459
   Monasson RM, 1999, RANDOM STRUCT ALGOR, V15, P414, DOI 10.1002/(SICI)1098-2418(199910/12)15:3/4<414::AID-RSA10>3.0.CO;2-G
   Namasivayam G, 2009, LECT NOTES COMPUT SC, V5753, P223, DOI 10.1007/978-3-642-04238-6_20
   Namasivayam G, 2009, LECT NOTES COMPUT SC, V5649, P555, DOI 10.1007/978-3-642-02846-5_61
   Schlipf J., 2005, DAGST SEM NONM REAS
   Staab S., 2004, HDB ONTOLOGIES
   Syrjanen T., 2001, Lecture Notes in Computer Science, P434, DOI DOI 10.1007/3-540-45402-0_38
   Zhao YT, 2003, LECT NOTES COMPUT SC, V2916, P239, DOI 10.1007/978-3-540-24599-5_17
NR 26
TC 2
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2015
VL 15
BP 818
EP 853
DI 10.1017/S1471068414000611
PN 6
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JK
UT WOS:000367692800003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Fichte, JK
   Truszczynski, M
   Woltran, S
AF Fichte, Johannes K.
   Truszczynski, Miroslaw
   Woltran, Stefan
TI Dual-normal logic programs - the forgotten class
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE answer set programming; classes of logic programs; strong and uniform
   equivalence; propositional satisfiability
AB Disjunctive Answer Set Programming is a powerful declarative programming paradigm with complexity beyond NP. Identifying classes of programs for which the consistency problem is in NP is of interest from the theoretical standpoint and can potentially lead to improvements in the design of answer set programming solvers. One of such classes consists of dual-normal programs, where the number of positive body atoms in proper rules is at most one. Unlike other classes of programs, dual-normal programs have received little attention so far. In this paper we study this class. We relate dual-normal programs to propositional theories and to normal programs by presenting several inter-translations. With the translation from dual-normal to normal programs at hand, we introduce the novel class of body-cycle free programs, which are in many respects dual to head-cycle free programs. We establish the expressive power of dual-normal programs in terms of SE- and UE-models, and compare them to normal programs. We also discuss the complexity of deciding whether dual-normal programs are strongly and uniformly equivalent.
C1 [Fichte, Johannes K.; Woltran, Stefan] TU Wien, Vienna, Austria.
   [Fichte, Johannes K.] Univ Potsdam, Potsdam, Germany.
   [Truszczynski, Miroslaw] Univ Kentucky, Lexington, KY USA.
C3 Technische Universitat Wien; University of Potsdam; University of
   Kentucky
RP Fichte, JK (corresponding author), TU Wien, Vienna, Austria.
EM fichte@kr.tuwien.ac.at; mirek@cs.engr.uky.edu; woltran@dbai.tuwien.ac.at
FU Austrian Science Fund (FWF) [Y698, P25518]; Austrian Science Fund (FWF)
   [P25518] Funding Source: Austrian Science Fund (FWF)
FX This work has been funded by the Austrian Science Fund (FWF) through
   projects Y698 and P25518.
CR Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter Thomas, 2013, Journal of Applied Non-Classical Logic, V23, P75, DOI 10.1080/11663081.2013.799318
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T., 2004, PRINCIPLES KNOWLEDGE, P447
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Fichte J. K., 2013, P 27 AAAI C ART INT, P320
   Gebser M., 2012, Answer Set Solving in Practice
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Guziolowski C, 2013, BIOINFORMATICS, V29, P2320, DOI 10.1093/bioinformatics/btt393
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   LIFSCHITZ V, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P603
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Pearce D, 2009, THEOR PRACT LOG PROG, V9, P565, DOI 10.1017/S147106840999010X
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   Truszczynski M, 2011, THEOR PRACT LOG PROG, V11, P881, DOI 10.1017/S1471068410000463
   Turner H., 2001, LPNMR, V2173, P81
NR 24
TC 6
Z9 6
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 495
EP 510
DI 10.1017/S1471068415000186
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gange, G
   Navas, JA
   Schachte, P
   Sondergaard, H
   Stuckey, PJ
AF Gange, Graeme
   Navas, Jorge A.
   Schachte, Peter
   Sondergaard, Harald
   Stuckey, Peter J.
TI Horn clauses as an intermediate representation for program analysis and
   transformation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE compilers; control flow graphs; intermediate representation; program
   analysis and transformation; SSA
ID MODEL CHECKING; SSA
AB Many recent analyses for conventional imperative programs begin by transforming programs into logic programs, capitalising on existing LP analyses and simple LP semantics. We propose using logic programs as an intermediate program representation throughout the compilation process. With restrictions ensuring determinism and single-modedness, a logic program can easily be transformed to machine language or other low-level language, while maintaining the simple semantics that makes it suitable as a language for program analysis and transformation. We present a simple LP language that enforces determinism and single-modedness, and show that it makes a convenient program representation for analysis and transformation.
C1 [Gange, Graeme; Schachte, Peter; Sondergaard, Harald; Stuckey, Peter J.] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
   [Navas, Jorge A.] NASA, Ames Res Ctr, Moffett Field, CA 94035 USA.
C3 University of Melbourne; National Aeronautics & Space Administration
   (NASA); NASA Ames Research Center
RP Gange, G (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM gkgange@unimelb.edu.au; jorge.a.navaslaserna@nasa.gov;
   schachte@unimelb.edu.au; harald@unimelb.edu.au; pstuckey@unimelb.edu.au
RI ; Schachte, Peter/H-4848-2016
OI Gange, Graeme/0000-0002-1354-431X; Stuckey, Peter/0000-0003-2186-0459;
   Schachte, Peter/0000-0001-5959-3769; Sondergaard,
   Harald/0000-0002-2352-1883
FU Australian Research Council [DP140102194]
FX This work was supported by the Australian Research Council through
   Discovery Project Grant DP140102194.
CR Albarghouthi Aws, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P672, DOI 10.1007/978-3-642-31424-7_48
   Albert E, 2012, THEOR COMPUT SCI, V413, P142, DOI 10.1016/j.tcs.2011.07.009
   Alpern B., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P1, DOI 10.1145/73560.73561
   [Anonymous], 1999, THESIS
   [Anonymous], 2015, TOOLS ALGORITHMS CON
   [Anonymous], 1992, Compiling with Continuations
   Appel AW, 1998, ACM SIGPLAN NOTICES, V33, P17, DOI 10.1145/278283.278285
   BALLANCE RA, 1990, SIGPLAN NOTICES, V25, P257, DOI 10.1145/93548.93578
   Benton William C., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P13, DOI 10.1145/1273920.1273923
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   Flanagan C, 2003, LECT NOTES COMPUT SC, V2618, P189
   Gange G, 2015, ACM T PROGR LANG SYS, V37, DOI 10.1145/2651360
   GERLEK MP, 1995, ACM T PROGR LANG SYS, V17, P85, DOI 10.1145/200994.201003
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Gupta A., 2011, Computer Aided Verification, P412, DOI [10.1007/978-3-642-22110-1_32, DOI 10.1007/978-3-642-22110-1_32]
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   KELSEY RA, 1995, SIGPLAN NOTICES, V30, P13, DOI 10.1145/202530.202532
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Morales J. F., 2015, THEORY PRAC IN PRESS
   Peralta J. C., 2006, PREPR 16 INT S LOG B, P79
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Spoto F, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709095
   TU P, 1995, SIGPLAN NOTICES, V30, P47, DOI 10.1145/223428.207115
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
NR 30
TC 12
Z9 12
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 526
EP 542
DI 10.1017/S1471068415000204
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200009
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Schwitter, R
AF Schwitter, Rolf
TI The jobs puzzle: Taking on the challenge via controlled natural language
   processing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE Controlled natural language; knowledge representation; answer set
   programming
AB In this paper we take on Stuart C. Shapiro's challenge of solving the Jobs Puzzle automatically and do this via controlled natural language processing. Instead of encoding the puzzle in a formal language that might be difficult to use and understand, we employ a controlled natural language as a high-level specification language that adheres closely to the original notation of the puzzle and allows us to reconstruct the puzzle in a machine-processable way and add missing and implicit information to the problem description. We show how the resulting specification can be translated into an answer set program and be processed by a state-of-the-art answer set solver to find the solutions to the puzzle.
C1 Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
C3 Macquarie University
RP Schwitter, R (corresponding author), Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
EM Rolf.Schwitter@mq.edu.au
OI Schwitter, Rolf/0000-0001-8998-7005
CR [Anonymous], 1984, AUTOMATED REASONING
   [Anonymous], SNEPS 2 7 1 USERS MA
   [Anonymous], 2009, P AUSTRALASIAN LANGU
   Balduccini M, 2008, FOUND ARTIF INTELL, P779, DOI 10.1016/S1574-6526(07)03020-9
   Baral Chitta, 2012, P 13 INT C PRINCIPLE, P573
   Brewka G., 2011, COMMUN ACM, V54, P12
   Finkel R, 2004, SOFTWARE PRACT EXPER, V34, P1481, DOI 10.1002/spe.623
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kamp Hans, 1993, DISCOURSE LOGIC INTR, DOI 10.1007/978-94-017-1616-1
   Lierler Y., 2006, P KONVENS 2006 KONST, P101
   Lifschitz V., 2008, AAAI, V3, P1594
   Niemela I., 2000, CORROSION
   Schwarz RB, 2003, PROCESSING AND PROPERTIES OF STRUCTURAL NANOMATERIALS, P141
   Schwitter R., 2010, Coling 2010: Posters, P1113
   Schwitter R, 2012, LECT NOTES COMPUT SC, V7427, P26, DOI 10.1007/978-3-642-32612-7_3
   Shapiro S. C., 2011, LOGICAL FORMALIZATIO, P96
   Sutcliffe G, 2009, J AUTOM REASONING, V43, P337, DOI 10.1007/s10817-009-9143-8
   Syrjanen T., 2000, LPARSE 1 0 USERS MAN
   Todorova Y., 2011, THESIS TEXAS TU
   van Eijck J, 2011, ELSEV INSIGHT, P181, DOI 10.1016/B978-0-444-53726-3.00003-7
NR 21
TC 6
Z9 7
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 487
EP 501
DI 10.1017/S1471068413000306
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400003
DA 2024-07-18
ER

PT J
AU Nieves, JC
   Osorio, M
   Cortés, U
AF Carlos Nieves, Juan
   Osorio, Mauricio
   Cortes, Ulises
TI Semantics for Possibilistic Disjunctive Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; uncertain information; possibilistic reasoning
ID ANSWER SETS; LOGIC; UNCERTAINTY; DEDUCTION; VIEW
AB In this paper, a possibilistic disjunctive logic programming approach for modeling uncertain, incomplete, and inconsistent information is defined. This approach introduces the use of possibilistic disjunctive clauses, which are able to capture incomplete information and states of a knowledge base at the same time. By considering a possibilistic logic program as a possibilistic logic theory, a construction of a possibilistic logic programming semantic based on answer sets and the proof theory of possibilistic logic is defined. It shows that this possibilistic semantics for disjunctive logic programs can be characterized by a fixed-point operator. It is also shown that the suggested possibilistic semantics can be computed by a resolution algorithm and the consideration of optimal refutations from a possibilistic logic theory. In order to manage inconsistent possibilistic logic programs, a preference criterion between inconsistent possibilistic models is defined. In addition, the approach of cuts for restoring consistency of an inconsistent possibilistic knowledge base is adopted. The approach is illustrated in a medical scenario.
C1 [Carlos Nieves, Juan; Cortes, Ulises] Univ Politecn Cataluna, Software Dept LSI, E-08034 Barcelona, Spain.
   [Osorio, Mauricio] Univ Americas Puebla, CENTIA, Cholula 72820, Mexico.
C3 Universitat Politecnica de Catalunya; Universidad Americas Puebla
   (UDLAP)
RP Nieves, JC (corresponding author), Univ Politecn Cataluna, Software Dept LSI, C Jordi Girona 1-3, E-08034 Barcelona, Spain.
EM jcnieves@lsi.upc.edu; osoriomauri@gmail.com; ia@lsi.upc.edu
RI Cortés, Ulises/B-7284-2009; Nieves, Juan Carlos/G-1762-2012
OI Cortes, Ulises/0000-0003-0192-3096
CR Alsinet T, 2002, INT J INTELL SYST, V17, P887, DOI 10.1002/int.10069
   ALSINET T, 2000, P 16 C UNC ART INT U, P1
   Alsinet T, 2008, FUZZY SET SYST, V159, P1208, DOI 10.1016/j.fss.2007.12.013
   [Anonymous], 1994, Logic and Structure
   BALDWIN JF, 1987, FUZZY SET SYST, V24, P1, DOI 10.1016/0165-0114(87)90110-2
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Brass S, 1998, J AUTOM REASONING, V20, P143, DOI 10.1023/A:1005952908693
   Brass S, 1997, J LOGIC PROGRAM, V32, P207, DOI 10.1016/S0743-1066(96)00115-X
   Brass S., 1999, J LOGIC PROGRAM, V38, P167
   Bueno O., 2006, CAMBRIDGE STUDIES PR, P70
   Confalonieri R, 2010, LECT NOTES COMPUT SC, V5956, P133, DOI 10.1007/978-3-642-11829-6_11
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Dix J, 2001, ANN PURE APPL LOGIC, V108, P153, DOI 10.1016/S0168-0072(00)00044-0
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Dubois D, 2004, FUZZY SET SYST, V144, P3, DOI 10.1016/j.fss.2003.10.011
   DUBOIS D, 1991, LOGIC PROGRAMM, P581
   Dubois D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P439
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   Fox J., 2000, Safe and Sound: Artificial Intelligence in Hazardous Applications
   Fox J, 2006, ARGUMENTATION LIB, V10, P273, DOI 10.1007/978-1-4020-4938-5_18
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gergatsoulis M, 2001, NEW GENERAT COMPUT, V19, P87, DOI 10.1007/BF03037535
   Kern-Isberner G, 2004, ARTIF INTELL, V157, P139, DOI 10.1016/j.artint.2004.04.003
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Lakshmanan LVS, 1994, LECT NOTES COMPUT SC, V880, P89
   López-Navidad A, 2003, CLIN TRANSPLANT, V17, P308, DOI 10.1034/j.1399-0012.2003.00119.x
   LopezNavidad A, 1997, TRANSPL P, V29, P1607, DOI 10.1016/S0041-1345(96)00689-6
   Lukasiewicz T., 1998, 13 EUR C ART INT ECA, P388
   Lukasiewicz T., 2001, 6 INT C LOG PROGR NO, P336
   Mateis C, 2000, AI COMMUN, V13, P225
   NG R, 1992, INFORM COMPUT, V101, P150, DOI 10.1016/0890-5401(92)90061-J
   Nicolas P, 2006, ANN MATH ARTIF INTEL, V47, P139, DOI 10.1007/s10472-006-9029-y
   Nieves J. C., 2007, ANSWER SET PROGRAMMI, P271
   Nieves J. C., 2007, P 10 INT C CCIA, P11
   Nieves JC, 2007, LECT NOTES COMPUT SC, V4483, P315, DOI 10.1007/978-3-540-72200-7_32
   Osorio M., 2004, THEOR PRACT LOG PROG, V4, P225
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   Rodriguez-Artalejo M, 2008, LECT NOTES COMPUT SC, V4989, P272
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Tversky A., 2013, Handbook Of The Fundamentals Of Financial Decision Making (In 2 Parts), P261, DOI 10.1017/CBO9780511809477.002
   Van Nieuwenborgh D, 2007, ANN MATH ARTIF INTEL, V50, P363, DOI 10.1007/s10472-007-9080-3
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   [No title captured]
NR 46
TC 9
Z9 11
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2013
VL 13
BP 33
EP 70
DI 10.1017/S1471068411000408
PN 1
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 067KP
UT WOS:000313293200002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Janssen, J
   Vermeir, D
   Schockaert, S
   De Cock, M
AF Janssen, Jeroen
   Vermeir, Dirk
   Schockaert, Steven
   De Cock, Martine
TI Reducing fuzzy answer set programming to model finding in fuzzy logics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE fuzzy logic; answer set programming; ASSAT
ID EPISTEMIC FOUNDATION; DEDUCTIVE DATABASES; SEMANTICS; UNCERTAINTY;
   VAGUENESS; RETRIEVAL
AB In recent years, answer set programming (ASP) has been extended to deal with multivalued predicates. The resulting formalisms allow for the modeling of continuous problems as elegantly as ASP allows for the modeling of discrete problems, by combining the stable model semantics underlying ASP with fuzzy logics. However, contrary to the case of classical ASP where many efficient solvers have been constructed, to date there is no efficient fuzzy ASP solver. A well-known technique for classical ASP consists of translating an ASP program P to a propositional theory whose models exactly correspond to the answer sets of P. In this paper, we show how this idea can be extended to fuzzy ASP, paving the way to implement efficient fuzzy ASP solvers that can take advantage of existing fuzzy logic reasoners.
C1 [Janssen, Jeroen; Vermeir, Dirk] Vrije Univ Brussel, Dept Comp Sci, B-1050 Brussels, Belgium.
   [Schockaert, Steven] Univ Ghent, Dept Appl Math & Comp Sci, B-9000 Ghent, Belgium.
   [De Cock, Martine] Univ Washington, Inst Technol, Tacoma, WA 98402 USA.
C3 Vrije Universiteit Brussel; Ghent University; University of Washington;
   University of Washington Tacoma
RP Janssen, J (corresponding author), Vrije Univ Brussel, Dept Comp Sci, Pl Laan 2, B-1050 Brussels, Belgium.
EM jeroen.janssen@vub.ac.be; dirk.vermeir@vub.ac.be;
   steven.schockaert@ugent.be; mdecock@u.washington.edu
RI De Cock, Martine/B-8567-2009
OI Schockaert, Steven/0000-0002-9256-2881
FU Research Foundation-Flanders (FWO) project
FX Funded by a joint Research Foundation-Flanders (FWO) project.
CR [Anonymous], P ICLP 1988
   [Anonymous], 1999, COMPLEXITY APPROXIMA, DOI DOI 10.1007/978-3-642-58412-1
   [Anonymous], 1999, Mathematical Principles of Fuzzy Logic, DOI DOI 10.1007/978-1-4615-5217-8
   [Anonymous], P 26 C UNC ART INT U
   [Anonymous], 2002, ELECTRON NOTES THEOR
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C., 2007, LECT NOTES COMPUTER, V2923, P21
   Bobillo F, 2007, IEEE INT CONF FUZZY, P651
   Cao TH, 2000, FUZZY SET SYST, V113, P277, DOI 10.1016/S0165-0114(98)00083-9
   Damasio C. V., 2001, Symbolic and Quantitative Approaches to Reasoning with Uncertainty. 6th European Conference, ECSQARU 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2143), P748
   Damasio CarlosViegas., 2001, Proceedings of the International Conference on Logic Programming and Non-Monotonic Reasoning, P379
   Damasio CV, 2004, LECT NOTES COMPUT SC, V3229, P252, DOI 10.1007/978-3-540-30227-8_23
   Damásio CV, 2000, LECT NOTES ARTIF INT, V1919, P57, DOI 10.1007/3-540-40006-0_5
   DAMASIO CV, 2004, P 10 INT C INF PROC, P807
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Hahnle R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P231, DOI 10.1007/BF01530787
   Hajek P., 2001, Metamathematics of fuzzy logic
   ISHIZUKA M, 1985, P 9 INT JOINT C ART, P701
   Janssen J, 2008, LECT NOTES COMPUT SC, V5366, P362, DOI 10.1007/978-3-540-89982-2_34
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   KIFER M, 1988, LECT NOTES COMPUT SC, V326, P102
   Lakshmanan L. V. S., 1994, Database and Expert Systems Applications. 5th International Conference, DEXA '94 Proceedings, P724
   Lakshmanan L. V. S., 1997, THESIS CONCORDIA U
   Lakshmanan LVS, 1994, LECT NOTES COMPUT SC, V880, P89
   Lakshmanan LVS, 1997, INFORM SYST, V22, P483, DOI 10.1016/S0306-4379(97)00030-6
   Lakshmanan LVS, 2001, IEEE T KNOWL DATA EN, V13, P554, DOI 10.1109/69.940732
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu LN, 2005, LECT NOTES ARTIF INT, V3662, P410, DOI 10.1007/11546207_37
   Loyer Y, 2003, LECT NOTES COMPUT SC, V2747, P541
   Loyer Y., 2002, Functional and Logic Programming. 6th International Symposium, FLOPS 2002. Proceedings (Lecture Notes in Computer Science Vol.2441), P152
   Loyer Y, 2006, THEOR PRACT LOG PROG, V6, P355, DOI 10.1017/S1471068405002619
   Lukasiewicz T, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P388
   Lukasiewicz T, 1999, LECT NOTES ARTIF INT, V1730, P277, DOI 10.1007/3-540-46767-X_20
   Lukasiewicz T, 2007, LECT NOTES ARTIF INT, V4772, P16
   Lukasiewicz T, 2007, LECT NOTES COMPUT SC, V4524, P289
   Lukasiewicz T, 2006, RULEML 2006: SECOND INTERNATIONAL CONFERENCE ON RULES AND RULE MARKUP LANGUAGES FOR THE SEMANTIC WEB, PROCEEDINGS, P89
   Madrid Nicolas, 2008, 2008 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology - Workshops, P260, DOI 10.1109/WIIAT.2008.357
   Madrid N., 2011, INT J COMPU IN PRESS
   Madrid N, 2009, LECT NOTES ARTIF INT, V5571, P60, DOI 10.1007/978-3-642-02282-1_8
   Nerode A, 1997, THEOR COMPUT SCI, V171, P111, DOI 10.1016/S0304-3975(96)00127-2
   NG R, 1993, J AUTOM REASONING, V10, P191, DOI 10.1007/BF00881836
   NG R, 1994, INFORM COMPUT, V110, P42, DOI 10.1006/inco.1994.1023
   Nicolas P., 2005, P 19 INT JOINT C ART
   Nicolas P, 2006, ANN MATH ARTIF INTEL, V47, P139, DOI 10.1007/s10472-006-9029-y
   Ojeda-Aciego M, 2007, J APPL LOGIC, V5, P435
   Saad E, 2009, LECT NOTES COMPUT SC, V5785, P223, DOI 10.1007/978-3-642-04388-8_18
   Saad E, 2009, LECT NOTES COMPUT SC, V5590, P663, DOI 10.1007/978-3-642-02906-6_57
   Shapiro EhudY., 1983, Proceedings of the Eighth international joint conference on Artificial intelligence, V1, P529
   SIMONS P, 2000, THESIS HELSINKI U TE
   STRACCIA U, 2006, P 11 INT C INF PROC
   Straccia U., 2005, LECT NOTES COMPUTER, V3571, P470
   Straccia U, 2008, LECT NOTES COMPUT SC, V5224, P54
   Straccia U, 2009, SIAM J COMPUT, V38, P1881, DOI 10.1137/070695976
   SUBRAHMANIAN VS, 1994, ACM T DATABASE SYST, V19, P291, DOI 10.1145/176567.176571
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Van Nieuwenborgh D, 2007, LECT NOTES COMPUT SC, V4670, P449
   Van Nieuwenborgh D, 2007, ANN MATH ARTIF INTEL, V50, P363, DOI 10.1007/s10472-007-9080-3
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   Vojtás P, 2001, FUZZY SET SYST, V124, P361, DOI 10.1016/S0165-0114(01)00106-3
   Wagner G., 1998, UNCERTAINTY THEORY A, P113
NR 66
TC 8
Z9 8
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2012
VL 12
BP 811
EP 842
DI 10.1017/S1471068411000093
PN 6
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 034EW
UT WOS:000310854200001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Cervesato, I
AF Cervesato, Iliano
TI An Improved Proof-Theoretic Compilation of Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Compilation; Abstract Logic Programming; Hereditary Harrop Formulas;
   Well-Moded Logic Programs
ID FOUNDATION
AB In prior work, we showed that logic programming compilation can be given a proof-theoretic justification for generic abstract logic programming languages, and demonstrated this technique in the case of hereditary Harrop formulas and their linear variant. Compiled clauses were themselves logic formulas except for the presence of a second-order abstraction over the atomic goals matching their head. In this paper, we revisit our previous results into a more detailed and fully logical justification that does away with this spurious abstraction. We then refine the resulting technique to support well-moded programs efficiently.
C1 Carnegie Mellon Univ, Dept Comp Sci, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Cervesato, I (corresponding author), Carnegie Mellon Univ, Dept Comp Sci, Pittsburgh, PA 15213 USA.
EM iliano@cmu.edu
OI Cervesato, Iliano/0000-0001-6329-3400
FU Qatar National Research Fund [NPRP 09-1107-1-168]
FX This work was supported by the Qatar National Research Fund under grant
   NPRP 09-1107-1-168. We are grateful to Frank Pfenning, Carsten
   Schurmann, Robert J. Simmons and Jorge Sacchini for the many fruitful
   discussions, as well as to the anonymous reviewers.
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Borger E., 1995, COMPUTER SCI ARTIFIC, V11, P21
   Cervesato I, 2002, INFORM COMPUT, V179, P19, DOI 10.1006/inco.2001.2951
   Cervesato I, 1998, LOGIC PROGRAMM, P115
   Cervesato I., 2003, CMUCS02102 DEP COMP
   DEBRAY SK, 1988, J LOGIC PROGRAM, V5, P207, DOI 10.1016/0743-1066(88)90010-6
   HODAS JS, 1994, INFORM COMPUT, V110, P327, DOI 10.1006/inco.1994.1036
   Jaffar J., 1992, P SIGPLAN 92 C PROGR
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   MILLER DA, 1986, LECT NOTES COMPUT SC, V225, P448
   Nadathur G., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P287
   Pfenning F., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P202
   Pientka B., 2003, THESIS CARNEGIE MELL
   RUSSINOFF DM, 1992, J LOGIC PROGRAM, V13, P367, DOI 10.1016/0743-1066(92)90054-7
   Sarnat J., 2010, THESIS YALE U
   Stirling C, 2009, LOG METH COMPUT SCI, V5, DOI 10.2168/LMCS-5(3:2)2009
   Warren D. H. D., 1983, 309 SRI INT
   Watkins K., 2003, CMUCS02101 DEP COMP
NR 18
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 639
EP 657
DI 10.1017/S1471068412000221
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Diaz, D
   Abreu, S
   Codognet, P
AF Diaz, Daniel
   Abreu, Salvador
   Codognet, Philippe
TI On the implementation of GNU Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; GNU; ISO; WAM; native code
   compilation; finite-domain constraints
ID COMPILER; CLP(FD); WAM
AB GNU Prolog is a general-purpose implementation of the Prolog language, which distinguishes itself from most other systems by being, above all else, a native-code compiler which produces stand-alone executables which do not rely on any bytecode emulator or meta-interpreter. Other aspects which stand out include the explicit organization of the Prolog system as a multipass compiler, where intermediate representations are materialized, in Unix compiler tradition. GNU Prolog also includes an extensible and high-performance finite-domain constraint solver, integrated with the Prolog language but implemented using independent lower-level mechanisms. This paper discusses the main issues involved in designing and implementing GNU Prolog: requirements, system organization, performance, and portability issues as well as its position with respect to other Prolog system implementations and the ISO standardization initiative.
C1 [Diaz, Daniel] Univ Paris 01, F-75013 Paris, France.
   [Abreu, Salvador] Univ Evora, P-7004516 Evora, Portugal.
   [Abreu, Salvador] Centria FCT UNL, P-7004516 Evora, Portugal.
   [Codognet, Philippe] Univ Tokyo, JFLI, CNRS, Tokyo, Japan.
C3 heSam Universite; Universite Pantheon-Sorbonne; University of Evora;
   University of Tokyo
RP Diaz, D (corresponding author), Univ Paris 01, 90 Rue Tolbiac, F-75013 Paris, France.
EM Daniel.Diaz@univ-paris1.fr; spa@di.uevora.pt; Philippe.Codognet@lip6.fr
RI Sanchez, Daniel Diaz/M-1190-2014; Abreu, Salvador/B-4118-2013; Diaz,
   Daniel/M-6259-2014
OI Abreu, Salvador/0000-0002-1613-4631; Diaz, Daniel/0000-0002-2700-2271
CR Abreu S, 2003, LECT NOTES COMPUT SC, V2916, P128, DOI 10.1007/978-3-540-24599-5_10
   ABREU S., 2010, P CICLOPS WLPE 2010
   Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   [Anonymous], P 14 ANN ACM S PRINC
   [Anonymous], P INT C LOG PROGR IC
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   CARLSSON M, 1990, THESIS SICS
   CHIKAYAMA T, 1994, LNCS, V844, P25
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   CODOGNET P, 1995, INT C LOG PROGR, P317
   da Silva AF, 2006, J UNIVERS COMPUT SCI, V12, P764
   DIAZ D, 1993, LOGIC PROGRAMM, P774
   Ferreira M, 1999, LECT NOTES COMPUT SC, V1551, P243
   FREIRE J., 1997, P 4 INT C LOG PROGR, V1265, P2
   GUDEMAN D, 1992, JOINT INT C S LOG PR
   HAUSMAN B., 1993, ICLP WORKSH IMPL LOG, P119
   ISO Prolog standard, 1995, 132111 ISOIEC
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   OLIVA D., 1997, LECT NOTES COMPUTER, V1467, P1
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   ROCHA R, 2000, C TAB PARS DED, P77
   Van Hentenryck P., 1994, LECT NOTES COMPUTER, V910, P293
   Van Hentenryck Pascal., 1989, International Conference on Logic Programming/Joint International Conference and Symposium on Logic Programming, P165
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   Warren D. H. D., 1983, 309 SRI INT
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
NR 26
TC 12
Z9 14
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 253
EP 282
DI 10.1017/S1471068411000470
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Haemmerlé, R
AF Haemmerle, Remy
TI (Co-)Inductive semantics for Constraint Handling Rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE CHR; coinduction; fixpoint; declarative semantics; persistent
   constraints
ID CONFLUENCE
AB In this paper, we address the problem of defining a fixpoint semantics for Constraint Handling Rules (CHR) that captures the behavior of both simplification and propagation rules in a sound and complete way with respect to their declarative semantics. Firstly, we show that the logical reading of states with respect to a set of simplification rules can be characterized by a least fixpoint over the transition system generated by the abstract operational semantics of CHR. Similarly, we demonstrate that the logical reading of states with respect to a set of propagation rules can be characterized by the greatest fixpoint. Then, in order to take advantage of both types of rules without losing fixpoint characterization, we present a new operational semantics with persistent constraints.
   We finally establish that this semantics can be characterized by two nested fixpoints, and we show that the resulting language is an elegant framework to program using coinductive reasoning.
C1 Tech Univ Madrid, Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Haemmerlé, R (corresponding author), Tech Univ Madrid, Madrid, Spain.
CR Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Barwise J., 1996, VICIOUS CIRCLES
   Betz H, 2010, THEOR PRACT LOG PROG, V10, P597, DOI 10.1017/S147106841000030X
   Bezem M, 2005, LECT NOTES ARTIF INT, V3835, P246, DOI 10.1007/11591191_18
   Clarke Edmund M., 2001, Model Checking
   DEKONINCK L, 2007, 9 INT C PRINC PRACT, P25
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T.W., 2009, Constraint Handling Rules
   GABBRIELLI M, 2008, LECT NOTES ARTIF INT, V5388, P119
   Gabbrielli M, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1462179.1462183
   Goguen J, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/ASE.2000.873657
   HAEMMERLE R, C PRINC PRA IN PRESS
   HAEMMERLE R, 2011, CLIP32011 TU MADR
   Haemmerlé R, 2007, LECT NOTES COMPUT SC, V4533, P214
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Lloyd J. W., 2012, Foundations of Logic Programming
   RAISER F, 2009, 555 CHR CW KATH U, P34
   Rutten JJMM, 1998, LECT NOTES COMPUT SC, V1466, P194, DOI 10.1007/BFb0055624
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Terese, 2003, TERM REWRITING SYSTE, V55
NR 23
TC 3
Z9 3
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 593
EP 609
DI 10.1017/S1471068411000196
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Boenn, G
   Brain, M
   De Vos, M
   Ffitch, J
AF Boenn, Georg
   Brain, Martin
   De Vos, Marina
   Ffitch, John
TI Automatic music composition using answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE Answer set programming; Applications of ASP; Music composition;
   Algorithmic composition; Harmonic and melodic composition; Diagnosis
ID STABLE MODEL; SEMANTICS; LANGUAGES; NETWORKS
AB Music composition used to be a pen and paper activity. These days music is often composed with the aid of computer software, even to the point where the computer composes parts of the score autonomously. The composition of most styles of music is governed by rules. We show that by approaching the automation, analysis and verification of composition as a knowledge representation task and formalising these rules in a suitable logical language, powerful and expressive intelligent composition tools can be easily built. This application paper describes the use of answer set programming to construct an automated system, named Anton, that can compose melodic, harmonic and rhythmic music, diagnose errors in human compositions and serve as a computer-aided composition tool. The combination of harmonic, rhythmic and melodic composition in a single framework makes Anton unique in the growing area of algorithmic composition. With near real-time composition, Anton reaches the point where it can not only be used as a component in an interactive composition tool but also has the potential for live performances and concerts or automatically generated background music in a variety of applications. With the use of a fully declarative language and an "off-the-shelf" reasoning engine, Anton provides the human composer a tool which is significantly simpler, more compact and more versatile than other existing systems.
C1 [Boenn, Georg] Univ Glamorgan, Cardiff Sch Creat & Cultural Ind, Pontypridd CF37 1DL, M Glam, Wales.
   [Brain, Martin; De Vos, Marina; Ffitch, John] Univ Bath, Dept Comp Sci, Bath BA2 7AY, Avon, England.
C3 University of South Wales; University of Bath
RP Boenn, G (corresponding author), Univ Glamorgan, Cardiff Sch Creat & Cultural Ind, Pontypridd CF37 1DL, M Glam, Wales.
EM gboenn@glam.ac.uk; mjb@cs.bath.ac.uk; mdv@cs.bath.ac.uk;
   jpff@cs.bath.ac.uk
RI De Vos, Marina/K-8191-2015
OI De Vos, Marina/0000-0003-3583-7671
CR ALLEN JF, 1983, CACM, V26, P198
   Anders T, 2007, THESIS QUEENS U BELF
   [Anonymous], 1938, An introduction to the theory of numbers
   [Anonymous], KR SYSTEM DLV PROGR
   Arom Simha., 1991, AFRICAN POLYPHONY PO, DOI DOI 10.1017/CBO9780511518317
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bel B, 1998, COMPUT MUSIC J, V22, P56, DOI 10.2307/3680965
   BOENN G, 2008, P ICMC 2008
   BOENN G, 2009, THESIS U BATH BATH
   BOENN G, 2007, DIGITAL MUSIC RES NE
   Boenn G, 2008, LECT NOTES COMPUT SC, V5366, P160, DOI 10.1007/978-3-540-89982-2_21
   Boulanger R., 2000, CSOUND BOOK TUTORIAL
   BRAIN M, 2009, P 2 WORKSH SOFTW ENG, P49
   BRAIN M, 2007, P 4 WORKSH ANSW SET, P309
   BRAIN M, 2007, P WORKSH SOFTW ENG A, V281, P71
   Brain M, 2006, LECT NOTES COMPUT SC, V4079, P270, DOI 10.1007/11799573_21
   BROTHWELL A, 2008, 6 INT LIN AUD C KUNS, P12
   Buccafurri F, 2005, LECT NOTES ARTIF INT, V3662, P317, DOI 10.1007/11546207_25
   Buccafurri F, 2002, LECT NOTES ARTIF INT, V2407, P561
   CHUANG J, 1995, MOZARTS MUSIKALISCHE
   Cliffe O, 2006, LECT NOTES ARTIF INT, V3913, P99, DOI 10.1007/11775331_7
   Cliffe O, 2008, LECT NOTES COMPUT SC, V5366, P724, DOI 10.1007/978-3-540-89982-2_65
   COPE D, 2006, COMPUT MUSIC J, V28, P12
   De Vos M, 1999, LECT NOTES COMPUT SC, V1683, P266
   DELAMOTTE D, 1981, KONTRAPUNKI
   EBCIOGLU K, 1986, THESIS STATE U NEW Y
   Eiter T, 2002, LECT NOTES ARTIF INT, V2424, P541, DOI 10.1007/3-540-45757-7_51
   Eiter T, 1999, AI COMMUN, V12, P99
   Erdem E, 2003, LECT NOTES COMPUT SC, V2562, P160
   Erdem E, 2006, THEOR PRACT LOG PROG, V6, P539, DOI 10.1017/S1471068406002729
   Fux J. J., 1965, STUDY COUNTERPOINT J
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   GORANKO V, 2003, J APPL NONCLASSICAL, V14, P9
   Grell S, 2006, LECT NOTES COMPUT SC, V4079, P285, DOI 10.1007/11799573_22
   Gressmann J, 2005, LECT NOTES ARTIF INT, V3662, P227, DOI 10.1007/11546207_18
   HAJDU G, 1993, INTERFACE-J NEW MUS, V22, P319, DOI 10.1080/09298219308570641
   KONCZAK K, 2006, RR18430602 INFSYS TU, P45
   LEACH JL, 1999, THESIS U BATH SCH MA
   Lewis GE, 2000, LEONARDO MUSIC J, V10, P33, DOI 10.1162/096112100570585
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   LIERLER Y, 2008, ICLP 08 P 24 INT C L, P377
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   MILEO A, 2006, P INT WORKSH PREF LO, P45
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Padovani L, 2004, LECT NOTES COMPUT SC, V3229, P689, DOI 10.1007/978-3-540-30227-8_58
   PARTCH H, 1979, GENESIS MUSIC
   ROHRMEIER M, 2006, DCRR004 U CAMBRIDGE
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Thakar Markand, 1990, COUNTERPOINT
   Ward J, 2004, LECT NOTES ARTIF INT, V2923, P302
   Xenakis I., 1992, FORMALIZED MUSIC
NR 58
TC 18
Z9 23
U1 1
U2 10
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 397
EP 427
DI 10.1017/S1471068410000530
PN 2-3
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Brummayer, R
   Järvisalo, M
AF Brummayer, Robert
   Jarvisalo, Matti
TI Testing and debugging techniques for answer set solver development
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer set programming; answer set solvers; testing; debugging
ID STABLE MODELS; PROGRAMS; SYSTEM; TOOL
AB This paper develops automated testing and debugging techniques for answer set solver development. We describe a flexible grammar-based black-box ASP fuzz testing tool which is able to reveal various defects such as unsound and incomplete behavior, i.e. invalid answer sets and inability to find existing solutions, in state-of-the-art answer set solver implementations. Moreover, we develop delta debugging techniques for shrinking failure-inducing inputs on which solvers exhibit defective behavior. In particular, we develop a delta debugging algorithm in the context of answer set solving, and evaluate two different elimination strategies for the algorithm.
C1 [Brummayer, Robert] Johannes Kepler Univ Linz, Inst Formal Models & Verificat, Linz, Austria.
   [Jarvisalo, Matti] Univ Helsinki, Dept Comp Sci, FIN-00014 Helsinki, Finland.
C3 Johannes Kepler University Linz; University of Helsinki
RP Brummayer, R (corresponding author), Johannes Kepler Univ Linz, Inst Formal Models & Verificat, Linz, Austria.
OI Jarvisalo, Matti/0000-0003-2572-063X
CR Anger C, 2005, LECT NOTES ARTIF INT, V3835, P95, DOI 10.1007/11591191_8
   [Anonymous], 2008, Fuzzing for Software Security
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   [Anonymous], 2008, KR
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   BRAIN M, 2005, P 3 WORKSH ANSW SET, P142
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Brain M, 2009, J LOGIC COMPUT, V19, P615, DOI 10.1093/logcom/exn038
   BRUMMAYER R, 2009, ACM INT C P SERIES, V375, P1
   Calimeri F., 2009, Proceed- ings of the 2nd International Workshop on Software Engineering for Answer Set Programming (SEA 2009), P79
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Dutertre B, 2006, TOOL PAPER
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Janhunen T, 2004, LECT NOTES ARTIF INT, V2923, P331
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu LN, 2005, LECT NOTES ARTIF INT, V3662, P410, DOI 10.1007/11546207_37
   Misherghi G., 2006, Proceedings of the 28th International Conference on Software Engineering, P142, DOI [DOI 10.1145/1134285.1134307, 10.1145/1134285.1134307]
   Namasivayam G, 2009, LECT NOTES COMPUT SC, V5753, P223, DOI 10.1007/978-3-642-04238-6_20
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   TRONCON R, 2006, P 16 WORKSH LOG BAS
   Tseitin G., 1983, AUTOMATION REASONING, P466, DOI [DOI 10.1007/978-3-642-81955-1_28, 10.1007/978-3-642-81955-128, DOI 10.1007/978-3-642-81955-128, 10.1007/978-3-642-81955-1_28]
   Ward J, 2004, LECT NOTES ARTIF INT, V2923, P302
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zhao YT, 2003, LECT NOTES COMPUT SC, V2916, P239, DOI 10.1007/978-3-540-24599-5_17
NR 38
TC 3
Z9 5
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 741
EP 758
DI 10.1017/S1471068410000396
PN 4-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baral, C
   Gelfond, M
   Rushton, N
AF Baral, Chitta
   Gelfond, Michael
   Rushton, Nelson
TI Probabilistic reasoning with answer sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Logic programming; answer sets; probabilistic reasoning; Answer Set
   Prolog
ID LOGIC; QUERIES
AB This paper develops a declarative language, P-log, that combines logical and probabilistic arguments in its reasoning. Answer Set Prolog is used as the logical foundation, while causal Bayes nets serve as a probabilistic foundation. We give several non-trivial examples and illustrate the use of P-log for knowledge representation and updating of knowledge. We argue that Our approach to updates is more appealing than existing approaches. We give sufficiency conditions for the coherency of P-log programs and show that Bayes nets can be easily mapped to coherent P-log programs.
C1 [Baral, Chitta] Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
   [Gelfond, Michael; Rushton, Nelson] Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
C3 Arizona State University; Arizona State University-Tempe; Texas Tech
   University System; Texas Tech University
RP Baral, C (corresponding author), Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
EM mgelfond@cs.ttu.edu; nrushton@cs.ttu.edu
OI Baral, Chitta/0000-0002-7549-723X; Gelfond, Michael/0000-0003-0574-3092
CR [Anonymous], 2007, INTRO STAT RELATIONA
   [Anonymous], 2003, Reasoning About Uncertainty, DOI DOI 10.7551/MITPRESS/10951.001.0001
   [Anonymous], 2000, CAUSALITY
   [Anonymous], 1978, LOGIC DATA BASES
   [Anonymous], 1990, REPRESENTING REASONI
   APT KR, 1994, J LOGIC PROGRAM, V18, P177, DOI 10.1016/0743-1066(94)90051-5
   Bacchus F, 1996, ARTIF INTELL, V87, P75, DOI 10.1016/S0004-3702(96)00003-3
   BALDUCCINI M, 2001, P 3 INT S PRACT ASP, P169
   Balduccini M, 2002, 3 NASA INT WORKSH PL
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Baral C, 2004, LECT NOTES ARTIF INT, V2923, P21
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BOUTILIER C, 2001, P 17 INT JOINT C ART, P690
   BREESE J, 1990, 90 ROCKW INT SCI CTR
   CHEN WD, 1995, J LOGIC PROGRAM, V24, P161, DOI 10.1016/0743-1066(94)00028-5
   Citrigno Simona., 1997, P 12 WORKSHOP LOGIC, P128
   COSTA VS, 2003, P 9 INT C UNC AI UAI
   Cussens J, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P126
   Dekhtyar A, 2004, LECT NOTES COMPUT SC, V3132, P137, DOI 10.1007/978-3-540-27775-0_10
   DEVOS M, 2000, P 20 C FDN SOFTW TEC, V1974, P227
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   GELFOND M, 2006, P AAAI 2006 SPRING S, P50
   Getoor L, 2001, RELATIONAL DATA MINING, P307
   Getoor L, 2007, Statistical Relational Learning
   GFLFOND M, 1988, P 5 INT C S LOG PROG, P1070
   GRBSER M, 2007, LPNMR 07, P260
   HALPERN JY, 1990, ARTIF INTELL, V46, P311, DOI 10.1016/0004-3702(90)90019-V
   Hilborn Ray, 1997, V28
   IWAN G, 2002, COGROB 02
   JR HEK, 2001, UNCERTAIN INFERENCE
   Koller D, 1999, LECT NOTES ARTIF INT, V1634, P3
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 2005, WE WILL SHOW THEM ES, P615
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lukasiewicz T, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P388
   MUGGLETON S., 1995, P 5 INT WORKSHOP IND, P29
   Nelson D., 1949, J. Symb. Log., V14, P16
   NG R, 1992, INFORM COMPUT, V101, P150, DOI 10.1016/0890-5401(92)90061-J
   NG R, 1994, INFORM COMPUT, V110, P42, DOI 10.1006/inco.1994.1023
   Ngo L, 1997, THEOR COMPUT SCI, V171, P147, DOI 10.1016/S0304-3975(96)00128-4
   NHMELA I, 1997, P 4 INT C LOG PROGR, P420
   NILSSON NJ, 1986, ARTIF INTELL, V28, P71, DOI 10.1016/0004-3702(86)90031-7
   PASKIN M, 2002, UCBCSD011161
   PASULA H, 2001, APPROXIMATE INFERENC, P741
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riezler S., 1998, THESIS U TUBINGEN TU
   SATO A, 1995, P 12 INT C LOG PROGR, P715
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   VENNEKENS J, 2007, THESIS KU LEUVEN BEL
   VENNEKENS J, 2006, EXTENDING ROLE CAUSA
   Wang P, 2004, ARTIF INTELL, V158, P97, DOI 10.1016/j.artint.2003.09.003
   WELLMAN M, 1992, KNOWL ENG REV, P35
NR 61
TC 133
Z9 144
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2009
VL 9
BP 57
EP 144
DI 10.1017/S1471068408003645
PN 1
PG 88
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 413QV
UT WOS:000263808500002
DA 2024-07-18
ER

PT J
AU Hommersom, A
   Lucas, PJF
   Van Bommel, P
AF Hommersom, Arjen
   Lucas, Peter J. F.
   Van Bommel, Patrick
TI Checking the quality of clinical guidelines using automated reasoning
   tools
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE automated reasoning; clinical guideline; temporal logic; abduction
ID MEDICAL GUIDELINES; LOGIC; MODEL; VERIFICATION; KNOWLEDGE;
   VISUALIZATION; FRAMEWORK; SUPPORT
AB Requirements about the quality of clinical guidelines can be represented by schemata borrowed from the theory of abductive diagnosis, using temporal logic to model the time-oriented aspects expressed in a guideline. Previously, we have shown that these requirements can be verified using interactive theorem proving techniques. In this paper, we investigate how this approach can be mapped to the facilities of a resolution-based theorem prover, OTTER and a complementary program that searches for finite models of first-order statements, MACE-2. It is shown that the reasoning required for checking the quality of a guideline can be mapped to such a fully automated theorem-proving facilities. The medical quality of an actual guideline concerning diabetes mellitus 2 is investigated in this way.
C1 [Hommersom, Arjen; Lucas, Peter J. F.; Van Bommel, Patrick] Radboud Univ Nijmegen, Inst Comp & Informat Sci, Sect Model Based Syst Dev, NL-6500 GL Nijmegen, Netherlands.
C3 Radboud University Nijmegen
RP Hommersom, A (corresponding author), Radboud Univ Nijmegen, Inst Comp & Informat Sci, Sect Model Based Syst Dev, POB 9010, NL-6500 GL Nijmegen, Netherlands.
EM arjenh@cs.ru.nl; peterl@cs.ru.nl; pvb@cs.ru.nl
RI Lucas, Peter/D-1708-2012; Hommersom, Arjen/D-3156-2012
OI Lucas, Peter/0000-0001-5454-2428; 
FU European Commission's IST [IST-FP6-508794]
FX This work was partially supported by the European Commission's IST
   program, under contract number IST-FP6-508794 (Protocure II project).
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 2003, Proceedings of AI-2003
   [Anonymous], 1992, Automated reasoning: Introduction and applications
   [Anonymous], 1970, Computational Problems in Abstract Algebra, DOI DOI 10.1016/B978-0-08-012975-4.50028-X
   [Anonymous], EATCS B
   ARECES C, 2000, P ECAI 2000 BERL GER
   Báumler S, 2006, LECT NOTES COMPUT SC, V3925, P219
   Clark K. L., 1978, Logic and data bases, P293
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Console L., 1991, Computational Intelligence, V7, P133, DOI 10.1111/j.1467-8640.1991.tb00388.x
   DAMS M, 1962, COMMUN ACM, V5, P394
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   Duftschmid G, 2002, ARTIF INTELL MED, V25, P93, DOI 10.1016/S0933-3657(02)00011-8
   EVANS JST, 1988, BEHAV INFORM TECHNOL, V7, P111, DOI 10.1080/01449298808901868
   Fox J., 2000, Safe and Sound: Artificial Intelligence in Hazardous Applications
   Fox John, 2006, Inform Prim Care, V14, P49
   GABBAY D, 1989, LECT NOTES COMPUT SC, V398, P409
   Ganong W.F., 2005, Review of Medical Physiology
   GROOT P, 2007, P AIME 2007, P411
   Guyton A.C., 2006, Textbook of Medical Physiology
   Hommersom A, 2007, IEEE T KNOWL DATA EN, V19, P832, DOI [10.1109/TKDE.2007.1030., 10.1109/TKDE.2007.1030]
   JECH T, 1995, J AUTOM REASONING, V14, P413, DOI 10.1007/BF00881715
   KERSTING K, 2000, CEUR WORKSHOP P SERI, V35, P138
   Kosara R, 2001, ARTIF INTELL MED, V22, P111, DOI 10.1016/S0933-3657(00)00103-2
   Lehmann ED, 1998, COMPUT METH PROG BIO, V56, P193, DOI 10.1016/S0169-2607(98)00025-X
   Lucas P, 1993, Artif Intell Med, V5, P395, DOI 10.1016/0933-3657(93)90033-Y
   Lucas P, 1997, KNOWL ENG REV, V12, P109, DOI 10.1017/S0269888997002026
   LUCAS PJF, 1995, KNOWL ENG REV, V10, P153, DOI 10.1017/S0269888900008134
   LUCAS PJF, 1991, PRINCIPLES INTELLIGE
   Magni P, 2000, ANN BIOMED ENG, V28, P812, DOI 10.1114/1.1289459
   MARCOS M, 2002, P 12 EKAW 2002 SIG S
   MCCUNE W, 2001, ANLMCSTM249
   McCune W., 2003, Technical report, ANL/MCS-TM-263
   Miller P.L., 1984, CRITIQUING APPROACH
   MOORE RC, 1979, THESIS MIT
   MOSZKOWSKI B, 1985, COMPUTER, V18, P10, DOI 10.1109/MC.1985.1662795
   OHLBACH HJ, 1988, LECT NOTES COMPUT SC, V310, P500, DOI 10.1007/BFb0012852
   PATIL R, 1981, MITLCSTR267
   Peleg M, 2000, J AM MED INFORM ASSN, P645
   Pelletier FJ, 2002, AI COMMUN, V15, P79
   Phillips JD, 2005, J SYMB COMPUT, V40, P1106, DOI 10.1016/j.jsc.2005.02.003
   POOLE D, 1990, INT J INTELL SYST, V5, P521, DOI 10.1002/int.4550050506
   REIF W, 1995, LNCS, V1009, P339
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   ROWNSON JA, 1965, INT J COMPUTATATIONA, V1, P23
   Schmidt RA, 2003, LECT NOTES COMPUT SC, V2929, P38
   Shahar Y, 1997, ARTIF INTELL, V90, P79, DOI 10.1016/S0004-3702(96)00025-2
   Shahar Y, 2000, COMPUT INTELL-US, V16, P279, DOI 10.1111/0824-7935.00114
   Shahar Y, 1998, ARTIF INTELL MED, V14, P29, DOI 10.1016/S0933-3657(98)00015-3
   SHEPHERDSON JC, 1987, DEDUCTIVE DATABASES, P19
   SHIFFMAN RN, 1994, MED DECIS MAKING, V14, P245, DOI 10.1177/0272989X9401400306
   Shortliffe E. H., 1974, Ph.D. dissertation
   Stark R. F., 1994, Journal of Logic and Computation, V4, P249, DOI 10.1093/logcom/4.3.249
   ten Teije A, 2006, ARTIF INTELL MED, V36, P193, DOI 10.1016/j.artmed.2005.10.006
   Terenziani P, 2001, ARTIF INTELL MED, V23, P249, DOI 10.1016/S0933-3657(01)00087-2
   Terenziani P, 2000, COMPUT INTELL-US, V16, P210, DOI 10.1111/0824-7935.00112
   TERENZIANI P, 2003, P AM MED INF ASS ANN, P659
   TURNER R, 1985, LOGICS ARTIFICIAL IN
   VANBEMMEL J, 2002, HDB MED INFORM
   Woolf S H, 2000, Cancer Control, V7, P362
   WOS L, 1965, J ACM, V12, P536, DOI 10.1145/321296.321302
NR 61
TC 9
Z9 12
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 611
EP 641
DI 10.1017/S1471068408003451
PN 5-6
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schrijvers, T
   Demoen, B
   Warren, DS
AF Schrijvers, Tom
   Demoen, Bart
   Warren, David S.
TI TCHR: a framework for tabled CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; constraint handling rules; tabled
   execution
ID CONSTRAINT HANDLING RULES; CHECKING
AB Tabled Constraint Logic Programming is a powerful execution mechanism for dealing with Constraint Logic Programming without worrying about fixpoint computation. Various applications, e.g. in the fields of program analysis and model checking, have been proposed. Unfortunately, a high-level system for developing new applications is lacking, and programmers are forced to resort to complicated ad hoc solutions.
   This papers presents TCHR, a high-level framework for tabled Constraint Logic Programming. It integrates in a light-weight manner Constraint Handling Rules (CHR), a high-level language for constraint solvers, with tabled Logic Programming. The framework is easily instantiated with new application-specific constraint domains. Various high-level operations can be instantiated to control performance. In particular, we propose a novel, generalized technique for compacting answer sets.
C1 [Schrijvers, Tom; Demoen, Bart] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
   [Warren, David S.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 KU Leuven; State University of New York (SUNY) System; State University
   of New York (SUNY) Stony Brook
RP Schrijvers, T (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM toms@cs.kuleuven.ac.be; bmd@cs.kuleuven.ac.be; warren@cs.sunysb.edu
RI Schrijvers, Tom/A-6696-2016; Schrijvers, Tom/A-6269-2009
OI Schrijvers, Tom/0000-0001-8771-5559; 
CR [Anonymous], P 14 ANN ACM S PRINC
   CLARK KL, 1987, LOGIC DATA BASES, P293
   CODISH M, 1998, SPRINGER INT J SOFTW, V2, P29
   CUI B, 2000, THESIS STATE U NEW Y
   CUI B, 2000, ELECT NOTES THEORETI, V30, P67
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   DEMOEN B, 2004, HPROLOG
   Du XQ, 2000, REAL TIM SYST SYMP P, P175
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P105, DOI 10.1007/978-3-540-27775-0_8
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Guo HF, 2004, LECT NOTES COMPUT SC, V3057, P163
   Holzbaur C, 2000, APPL ARTIF INTELL, V14, P369, DOI 10.1080/088395100117043
   HOLZBAUR C, 1993, TR9223 AUSTR RES I A
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KANELLAKIS PC, 1995, 9 ANN ACM SIGACT SIG, P26
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MUKUND M, 2000, INT WORKSH TAB PARS, P1
   PEMMASANI G, 2002, LECT NOTES COMPUTER, P405
   RAO P, 1996, JOINT INT C S LOG PR, P112
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   Sarna-Starosta B, 2003, LECT NOTES COMPUT SC, V2885, P579
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   Schrijvers T, 2006, THEOR PRACT LOG PROG, V6, P213, DOI 10.1017/S1471068405002541
   Schrijvers T, 2004, LECT NOTES COMPUT SC, V3132, P120, DOI 10.1007/978-3-540-27775-0_9
   SCHRIJVERS T, 2003, CICLOPS 2003, P7
   Schrijvers T., 2005, Ph. D. Thesis
   Schrijvers T, 2006, ELECTRON NOTES THEOR, V147, P93, DOI 10.1016/j.entcs.2005.06.039
   Schrijvers Tom., 2004, First Workshop on Constraint Handling Rules: Selected Contributions, P1
   Toman D., 1997, Constraints, V2, P337, DOI 10.1023/A:1009799613661
   Toman D., 1997, LNCS, V1191, P246
   TOMAN D, 1996, LECT NOTES COMPUTER, V1191, P64
   WARREN DS, 2005, XSB PROGRAMMERS MANU, V2
   WARREN DS, 2005, XSB PROGRAMMERS MANU, V1
   WIELEMAKER J, 2004, SWI PROLOG RELEASE 5
   Wolper Pierre., 1986, POPL, V86, P184
NR 37
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2008
VL 8
BP 491
EP 526
DI 10.1017/S147106840800327X
PN 4
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 329EM
UT WOS:000257849700002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Codish, M
   Lagoon, V
   Stuckey, PJ
AF Codish, Michael
   Lagoon, Vitaly
   Stuckey, Peter J.
TI Logic programming with satisfiability
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE propositional logic; Boolean satisfiability; SAT solvers
ID TERMINATION
AB This paper presents a Prolog interface to the MiniSat satisfiability solver. Logic programming with satisfiability combines the strengths of the two paradigms: logic programming for encoding search problems into satisfiability on the one hand and efficient SAT solving on the other. This synergy between these two exposes a programming paradigm that we propose here as a logic programming pearl. To illustrate logic programming with SAT solving, we give an example Prolog program that solves instances of Partial MAXSAT.
C1 [Codish, Michael] Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
   [Lagoon, Vitaly] Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
   [Stuckey, Peter J.] Univ Melbourne, NICTA Victoria Lab, Melbourne, Vic, Australia.
   [Stuckey, Peter J.] Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
C3 Ben Gurion University; University of Melbourne; University of Melbourne;
   University of Melbourne
RP Codish, M (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
EM mcodish@cs.bgu.ac.il; vitaly.lagoon@gmail.com; pjs@csse.unimedlb.edu.au
RI Codish, Michael/AAH-2961-2020; CODISH, MICHAEL/F-1287-2012
OI Stuckey, Peter/0000-0003-2186-0459; Codish, Michael/0000-0003-0394-5854
CR ANNOV E, 2006, SAT BASED IMPLEMENTA
   [Anonymous], 2003, OVERVIEW SWI PROLOG
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   CHA B, 1997, AAAI IAAI, P263
   CODISH M, 2006, MINISAT LIB PROLOG
   Codish M, 2006, LECT NOTES ARTIF INT, V4246, P30, DOI 10.1007/11916277_3
   Codish M, 2006, LECT NOTES COMPUT SC, V4098, P4
   CORMEN TH, 1990, INTRO ALGORITHMS, pCH29
   DERSHOWITZ N, 1982, THEOR COMPUT SCI, V17, P279, DOI 10.1016/0304-3975(82)90026-3
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   *MINISAT, 2006, MINISAT SOLV
   MIYAZAKI S, 1996, CODAS, P477
   PLAISTED DA, 1986, J SYMB COMPUT, V2, P293, DOI 10.1016/S0747-7171(86)80028-1
   Tseitin G., 1983, AUTOMATION REASONING, P466, DOI [DOI 10.1007/978-3-642-81955-1_28, 10.1007/978-3-642-81955-128, DOI 10.1007/978-3-642-81955-128, 10.1007/978-3-642-81955-1_28]
NR 14
TC 23
Z9 23
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2008
VL 8
BP 121
EP 128
DI 10.1017/S1471068407003146
PN 1
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 264ZO
UT WOS:000253329100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Osorio, M
   Cuevas, V
AF Osorio, Maurico
   Cuevas, Victor
TI Updates in answer set programming: An approach based on basic structural
   properties
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; N-2 logic; update programs; strong negation; AGM
   postulates
ID LOGIC; REVISION
AB We have studied the update operator circle plus(1) defined for update sequences by Eiter et al. without tautologies and we have observed that it satisfies an interesting property(1). This property, which we call Weak Independence of Syntax (WIS), is similar to one of the postulates proposed by Alchourron, Gardenfors, and Makinson (AGM); only that in this case it applies to nonmonotonic logic. In addition, we consider other five additional basic properties about update programs and we show that circle plus(1) satisfies them. This work continues the analysis of the AGM postulates with respect to the circle plus(1) operator under a refined view that considers N-2 as a monotonic logic which allows us to expand our understanding of answer sets. Moreover, N-2 helped us to derive an alternative definition of circle plus(1) avoiding the use of unnecessary extra atoms.
C1 Univ Americas Puebla, Cholula 72820, Mexico.
C3 Universidad Americas Puebla (UDLAP)
RP Osorio, M (corresponding author), Univ Americas Puebla, Sta Catarina Martir,Cholula, Cholula 72820, Mexico.
EM osoriomauri@gmail.com; victorcuevasv@gmail.com
RI Cuevas-Vicenttin, Victor/B-9992-2018
OI Cuevas-Vicenttin, Victor/0000-0001-9869-7931
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes JJ, 2002, LECT NOTES ARTIF INT, V2408, P382
   [Anonymous], 1987, Introduction to Mathematical Logic
   BANTI F, 2005, PROGR ARTIFICIAL INT
   BANTI F, 2003, NONMONOTONIC REASONI
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gurevich Y., 1977, Studia Logica, V36, P49, DOI DOI 10.1007/BF02121114
   Homola M., 2005, Computational Logic in Multi-Agent Systems. 5th International Workshop, CLIMA V. Revised Selected and Invited Papers (Lecture Notes in Artificial Intelligence Vol.3487), P78
   KATSUNO H, 1991, ARTIF INTELL, V52, P263, DOI 10.1016/0004-3702(91)90069-V
   Katsuno Hirofumi., 1992, BELIEF REVISION, P183, DOI DOI 10.1017/CBO9780511526664.007
   Kracht M, 1998, J PHILOS LOGIC, V27, P49, DOI 10.1023/A:1004222213212
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Nelson D., 1949, J. Symb. Log., V14, P16
   ORTIZ M, 2005, ANSWER SET PROGRAMMI, P70
   Osorio M, 2005, ANN PURE APPL LOGIC, V134, P63, DOI 10.1016/j.apal.2004.06.012
   Osorio M, 2004, THEOR PRACT LOG PROG, V4, P325, DOI 10.1017/S1471068403001881
   Osorio M, 2002, LECT NOTES COMPUT SC, V2372, P57, DOI 10.1007/3-540-45607-4_4
   OSORIO M, 2003, P 4 MEX INT C COMP S
   OSORIO M, 2004, P 3 INT S FDN INF KN, P231
   Pearce D, 1999, APPL LOG SER, V13, P161
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   Rasiowa H., 1974, ALGEBRIC APPROACH NO
   VANDALEN D, 1986, ALTERNATIVES CLASSIC, V3
   Vorob'ev N, 1952, DOKL AKAD NAUK SSSR, V85, P689
   Vorob'ev N. N., 1952, Doklady Akademii Nauk SSSR, V85, P465
NR 30
TC 16
Z9 16
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2007
VL 7
BP 451
EP 479
DI 10.1017/S1471068406003000
PN 4
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 191AY
UT WOS:000248103400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Fink, M
   Tompits, H
AF Eiter, Thomas
   Fink, Michael
   Tompits, Hans
TI A knowledge-based approach for selecting information sources
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation; nonmonotonic reasoning; logic programming;
   answer-set programming; information-source selection; data repositories;
   preference handling
ID PREFERRED ANSWER SETS; LOGIC PROGRAMS; LANGUAGE
AB Through the Internet and the World-Wide Web, a vast number of information sources has become available, which offer information on various subjects by different providers, often in heterogeneous formats. This calls for tools and methods for building an advanced information-processing infrastructure. One issue in this area is the selection of suitable information sources in query answering. In this paper, we present a knowledge-based approach to this problem, in the setting where one among a set of information sources (prototypically, data repositories) should be selected for evaluating a user query. We use extended logic programs (ELPs) to represent rich descriptions of the information sources, an underlying domain theory, and user queries in a formal query language (here, XML-QL, but other languages can be handled as well). Moreover, we use ELPs for declarative query analysis and generation of a query description. Central to our approach are declarative source-selection programs, for which we define syntax and semantics. Due to the structured nature of the considered data items, the semantics of such programs must carefully respect implicit context information in source-selection rules, and furthermore combine it with possible user preferences. A prototype implementation of our approach has been realized exploiting the DLV KR system and its plp front-end for prioritized ELPs. We describe a representative example involving specific movie databases, and report about experimental results.
C1 Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Eiter, T (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoriten Str 9-11, A-1040 Vienna, Austria.
EM eiter@kr.tuwien.ac.at; michael@kr.tuwien.ac.at; tompits@kr.tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021
CR ABITESBOUL S, 2000, DATA WEB RELATIONS S
   Alferes JJ, 2002, ARTIF INTELL, V138, P87, DOI 10.1016/S0004-3702(02)00183-2
   [Anonymous], INFOMASTER INFORM IN
   [Anonymous], AAAI FALL S AI APPL
   [Anonymous], 1990, Building Large Knowledge-Based Systems: Representation and Inference in the CYC Project
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Arens Y., 1993, International Journal of Intelligent & Cooperative Information Systems, V2, P127, DOI 10.1142/S0218215793000071
   ARENS Y, 1992, P 1 INT C INF KNOWL, P92
   ARENS Y, 1996, INT J INTELLIGENT CO, V2, P99
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bayardo Roberto., 1997, P ACM SIGMOD INT C M, P195
   BORGIDA A, 1989, SIGMOD REC, V18, P58, DOI 10.1145/66926.66932
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Buccafurri F, 1996, J LOGIC PROGRAM, V27, P5, DOI 10.1016/0743-1066(95)00076-3
   CHEN YJ, 2001, LECT NOTES ARTIF INT, V2198, P423
   COLLET C, 1991, COMPUTER, V24, P55, DOI 10.1109/2.116889
   Decker K, 1997, INT JOINT CONF ARTIF, P578
   DELGRANDE J, 2001, LNCS, V2173, P411
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   DELGRANDE JP, 1994, MOR KAUF R, P146
   Deutsch A, 1999, COMPUT NETW, V31, P1155, DOI 10.1016/S1389-1286(99)00020-1
   DEUTSCH A, 1999, COMPUTER NETWORKS, V31, P11
   DIMOPOULOS Y, 2001, COMPUTATIONAL LOGIC, P105
   Eiter T, 2005, LECT NOTES COMPUT SC, V3452, P511
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P645, DOI [10.1017/S1471068401001193, 10.1017/S1471068402001576]
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   EITER T, 2003, RR18430314 INFSYS
   EITER T, 2005, P 19 INT JOINT C ART
   Eiter Thomas., 2004, KR2004, P141
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   FINK M, 2002, THESIS TU WIEN AUSTR
   Fowler J., 1999, SIGMOD Record, V28, P60, DOI 10.1145/309844.310060
   Fuhr N, 1999, ACM T INFORM SYST, V17, P229, DOI 10.1145/314516.314517
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GEERTS P, 1993, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P380
   Geerts P, 1995, LECT NOTES ARTIF INT, V946, P207
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GORO S, 2001, P PAC AS C INT SYST, P272
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   HUFFMAN SB, 1995, WORKING NOTES AAAI, P72
   HUHNS M, 1992, P AAAI WORKSH COOP H
   Kirk T., 1995, Proceedings of the AAAI 1995 Spring Symp. on Information Gathering from Heterogeneous, V7, P85
   KOWALSKI RA, 1990, P 7 INT C LOG PROGR, P598
   KRENTEL MW, 1988, J COMPUT SYST SCI, V36, P490, DOI 10.1016/0022-0000(88)90039-6
   LAENENS E, 1990, LNCS, P317
   LEONE N, 2006, IN PRESS ACM T COMPU
   Levy A. Y., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V5, P121, DOI 10.1007/BF00962627
   Levy AY, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P251
   Levy AY, 2000, ARTIF INTELL, V118, P1, DOI 10.1016/S0004-3702(00)00013-8
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Luke S., 1997, Proceedings of the First International Conference on Autonomous Agents, P59, DOI 10.1145/267658.267668
   MACGREGOR R, 1987, RS87188 U S CAL INF
   Minker J., 1988, Foundations of Deductive Databases and Logic Programming
   MOTIK B, 2003, P 10 INT WORKSH KNOW, V79, P39
   Nodine M, 2003, IEEE T KNOWL DATA EN, V15, P1082, DOI 10.1109/TKDE.2003.1232266
   Przymusinski T.C., 1988, DECLARATIVE SEMANTIC, P193
   SADRI F, 2000, COMPUTATIONAL LOGIC, P1
   Sakama C, 2000, ARTIF INTELL, V123, P185, DOI 10.1016/S0004-3702(00)00054-0
   SCHINDLAUER R, 2002, THESIS TU WIEN AUSTR
   Sim K. M, 2001, P AS PAC C WEB INT M, P384
   Singh MP, 1997, DISTRIB PARALLEL DAT, V5, P207, DOI 10.1023/A:1008645509474
   Subrahmanian VentatramananS., 2000, HETEROGENEOUS AGENT
   Swift T, 2004, LECT NOTES ARTIF INT, V2923, P275
   Van Nieuwenborgh D, 2002, LECT NOTES ARTIF INT, V2424, P432
   WEIDERHOLD G, 1993, P ACM SIGMOD C MAN D, P434
   WENDLANDT E, 1991, P 14 ACM SIGIR C RES, P270
NR 69
TC 1
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2007
VL 7
BP 249
EP 300
DI 10.1017/S1471068406002754
PN 3
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 158HV
UT WOS:000245783300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Turner, H
AF Turner, H
TI Strong equivalence made easy: nested expressions and weight constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; strong equivalence; nested expressions; weight constraints
ID LOGIC PROGRAMS
AB Logic programs P and Q are strongly equivalent if, given any program R, programs P boolean OR R and Q boolean OR R are equivalent (that is, have the same answer sets). Strong equivalence is convenient for the study of equivalent transformations of logic programs: one can prove that a local change is correct without considering the whole program. Lifsehitz, Pearce and Valverde showed that Heyting's logic of here-and-there can be used to characterize strong equivalence for logic programs with nested expressions (which subsume the better-known extended disjunctive programs). This note considers a simpler, more direct characterization of strong equivalence for such programs, and shows that it can also be applied without modification to the weight constraint programs of Niemela and Simons. Thus, this characterization of strong equivalence is convenient for the study of equivalent transformations of logic programs written in the input languages of answer set programming systems dlv and SMODELs. The note concludes with a brief discussion of results that can be used to automate reasoning about strong equivalence, including a novel encoding that reduces the problem of deciding the strong equivalence of a pair of weight constraint programs to that of deciding the inconsistency of a weight constraint program.
C1 Univ Minnesota, Dept Comp Sci, Duluth, MN 55812 USA.
C3 University of Minnesota System; University of Minnesota Duluth
RP Univ Minnesota, Dept Comp Sci, Duluth, MN 55812 USA.
EM hudson@d.umn.edu
CR [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   EITER T, 1993, MIT PS LOG, P266
   Erdem E, 1999, LECT NOTES ARTIF INT, V1730, P107, DOI 10.1007/3-540-46767-X_8
   FERRARIS P, 2001, WEIGHT CONSTRAINTS N
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janhunen T, 2002, LECT NOTES ARTIF INT, V2424, P493, DOI 10.1007/3-540-45757-7_41
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin F., 2002, KR-02, P170
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Turner H, 1999, ARTIF INTELL, V113, P87, DOI 10.1016/S0004-3702(99)00058-2
   TURNER H, 2001, LECT NOTES ARTIF INT, V2173, P81
NR 15
TC 93
Z9 94
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 609
EP 622
DI 10.1017/S1471068403001819
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800009
OA Green Submitted
DA 2024-07-18
ER

EF